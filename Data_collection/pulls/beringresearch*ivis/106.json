{"url":"https://api.github.com/repos/beringresearch/ivis/pulls/106","id":748405376,"node_id":"PR_kwDOCJ2sz84sm8KA","html_url":"https://github.com/beringresearch/ivis/pull/106","diff_url":"https://github.com/beringresearch/ivis/pull/106.diff","patch_url":"https://github.com/beringresearch/ivis/pull/106.patch","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/106","number":106,"state":"closed","locked":false,"title":"Make `ivis.Ivis` picklable","user":{"login":"imatheussm","id":4311541,"node_id":"MDQ6VXNlcjQzMTE1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/4311541?v=4","gravatar_id":"","url":"https://api.github.com/users/imatheussm","html_url":"https://github.com/imatheussm","followers_url":"https://api.github.com/users/imatheussm/followers","following_url":"https://api.github.com/users/imatheussm/following{/other_user}","gists_url":"https://api.github.com/users/imatheussm/gists{/gist_id}","starred_url":"https://api.github.com/users/imatheussm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imatheussm/subscriptions","organizations_url":"https://api.github.com/users/imatheussm/orgs","repos_url":"https://api.github.com/users/imatheussm/repos","events_url":"https://api.github.com/users/imatheussm/events{/privacy}","received_events_url":"https://api.github.com/users/imatheussm/received_events","type":"User","site_admin":false},"body":"# The issue\r\n\r\nSee #101.\r\n\r\n# The proposed changes\r\n\r\nThis pull request refactors `Ivis.__getstate__()` into `Ivis.__getstate_old__()` and creates new `Ivis.__getstate__()` and `Ivis.__setstate__()` methods. They work similarly to what is seen in `Ivis.save_model()` and `Ivis.load_model()` in terms of the information that is saved; however, they differ in how they do it. The new methods encode the generated files into `base85` strings and save said strings within the objectâ€”in other words, the generated files are effectively saved within the object.\r\n\r\nThis approach comes with the following advantages:\r\n\r\n- It makes `Ivis` picklable, thus enabling the storage of a produced model under a single file written in a well-known format within the Python community.\r\n- It closes #101 and increases compatibility with the `scikit-learn` module, particularly with `sklearn.model_selection.GridSearchCV` and `sklearn.base.clone()`, which is used within `sklearn.model_selection.GridSearchCV` and `sklearn.pipeline.Pipeline`.\r\n\r\nThe only caveat is the same one seen when using the existing `Ivis.save_model()` and `Ivis.load_model()`: whenever a `tensorflow`/`keras` model is saved by using the `.save()` method, the following warning is issued:\r\n\r\n```\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n```\r\n\r\nThis warning is issued two times per save/load call (when `Ivis.model_.layers[3]` and `Ivis.supervised_model_` are saved/loaded), which means in circumstances wherein these commands are frequently used result this message being spammed throughout the execution, as demonstrated below.\r\n\r\n# Minimal reproducible examples\r\n\r\nThe environment used in these examples is the same described in #101.\r\n\r\n## Example with `sklearn.pipeline.Pipeline`\r\n\r\nThe same code seen in #101 is executed. The execution is successful, but the log is polluted by compilation warnings related with the aforementioned issue.\r\n\r\n```\r\nFitting 10 folds for each of 2 candidates, totalling 20 fits\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 1/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=1.000) total time=   6.2s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 2/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=1.000) total time=   4.0s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 3/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=0.933) total time=   8.0s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 4/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=0.933) total time=   4.8s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 5/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=0.733) total time=   6.3s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 6/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=0.867) total time=   3.0s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 7/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=1.000) total time=   2.8s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 8/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=0.800) total time=   3.7s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 9/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=0.733) total time=   3.8s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n[CV 10/10] END classify=RandomForestClassifier(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=1.000, test=0.733) total time=   3.0s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\n[CV 1/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.948, test=1.000) total time=   0.5s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\n[CV 2/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.933, test=1.000) total time=   0.4s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\n[CV 3/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.941, test=1.000) total time=   0.4s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:5 out of the last 15 calls to <function Model.make_predict_function.<locals>.predict_function at 0x000002269499F4C0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\r\n[CV 4/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.941, test=0.933) total time=   0.4s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:5 out of the last 13 calls to <function Model.make_predict_function.<locals>.predict_function at 0x0000022696CB5E50> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\r\n[CV 5/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.948, test=0.800) total time=   0.3s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\n[CV 6/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.970, test=0.800) total time=   0.4s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\n[CV 7/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.933, test=1.000) total time=   0.4s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\n[CV 8/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.919, test=0.933) total time=   0.4s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\n[CV 9/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.978, test=0.733) total time=   0.4s\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\n[CV 10/10] END classify=SVC(), classify__random_state=2021, project=Ivis(verbose=0), project__k=15;, score=(train=0.867, test=0.400) total time=   0.3s\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\n```\r\n\r\n## Example without `sklearn.pipeline.Pipeline`\r\n\r\nThis example demonstrates that the proposed solution is working by means of a simpler script while also showing the aforementioned warnings. It is also executed successfully.\r\n\r\n### Script\r\n\r\n```\r\nimport ivis\r\nimport joblib\r\n\r\nfrom sklearn import datasets, model_selection\r\n\r\nprint(f\"Loading and splitting the Iris Flower data set...\")\r\nX, y = datasets.load_iris(return_X_y=True)\r\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.33, random_state=42)\r\n\r\nprint(f\"Projecting Iris Flower in two dimensions in the generated model...\")\r\nprojector = ivis.Ivis(k=90, batch_size=90, verbose=0).fit(X_train, y_train)\r\nX_train_pred = projector.transform(X_train)\r\nX_test_pred = projector.transform(X_test)\r\n\r\nfile_name = \"model.pkl\"\r\n\r\nprint(f\"Saving the generated model into {file_name}...\")\r\njoblib.dump(projector, file_name)\r\n\r\nprint(f\"Loading the saved model in {file_name}...\")\r\nprojector2 = joblib.load(file_name)\r\n\r\nprint(f\"Projecting Iris Flower in two dimensions in the loaded model...\")\r\nX_train_pred2 = projector2.transform(X_train)\r\nX_test_pred2 = projector2.transform(X_test)\r\n\r\nprint(f\"Prediction comparison between generated and loaded models:\")\r\nprint(f\" |_ Are the train transforms of both models equal? {(X_train_pred == X_train_pred2).all()}\")\r\nprint(f\" |_ Are the test transforms of both models equal? {(X_test_pred == X_test_pred2).all()}\")\r\n```\r\n\r\n### Log\r\n\r\n```\r\nLoading and splitting the Iris Flower data set...\r\nProjecting Iris Flower in two dimensions in the generated model...\r\nSaving the generated model into model.pkl...\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nWARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\r\nLoading the saved model in model.pkl...\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nWARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\r\nProjecting Iris Flower in two dimensions in the loaded model...\r\nPrediction comparison between generated and loaded models:\r\n |_ Are the train transforms of both models equal? True\r\n |_ Are the test transforms of both models equal? True\r\n```\r\n\r\n# Additional comments\r\n\r\nThis pull request, if accepted, will make `Ivis` have two means of saving/loading models with two distinct implementations that would need to be maintained. In case there is no attachment to the existing implementation, one possibility worth contemplating is to deprecate the methodology applied in `Ivis.load_model()` and `Ivis.save_model()` and make these methods produce pickle files instead. Another alternative would be to deprecate these methods entirely and merely inform the user that `Ivis` can be pickled. On the other hand, if maintaining both implementations is justified, this paragraph can be disregarded.\r\n\r\nRegarding the warnings: do you know how we could mitigate them? I guess `tensorflow` is instructing the user to use the `.compile()` method; however, since I am not familiar with `tensorflow`, I found it better to leave this up to you. I did try to silence this warning following a couple of different alternatives within `tensorflow`; however, this warning was unaffected.\r\n\r\nSome small observations are worth making as well. The proposed `Ivis.__getstate__()` and `Ivis.__setstate__()` methods have some conditionals imposed to meet the expectations of `sklearn.base.clone()`, which is used in `sklearn.model_selection.GridSearchCV`. Additionally, no structural changes were made in `ivis/data/neighbour_retrieval/knn.py`. This file was just formatted by PyCharm to adhere to some PEP spacing conventions.","created_at":"2021-10-03T20:00:46Z","updated_at":"2021-10-06T21:31:24Z","closed_at":"2021-10-06T21:31:23Z","merged_at":"2021-10-06T21:31:23Z","merge_commit_sha":"78ed90d65f9f3f32e369846ba7c534c2955295af","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/beringresearch/ivis/pulls/106/commits","review_comments_url":"https://api.github.com/repos/beringresearch/ivis/pulls/106/comments","review_comment_url":"https://api.github.com/repos/beringresearch/ivis/pulls/comments{/number}","comments_url":"https://api.github.com/repos/beringresearch/ivis/issues/106/comments","statuses_url":"https://api.github.com/repos/beringresearch/ivis/statuses/c3a93f92f1c5cd370b195411cd0ae5d8cfa0d320","head":{"label":"imatheussm:master","ref":"master","sha":"c3a93f92f1c5cd370b195411cd0ae5d8cfa0d320","user":{"login":"imatheussm","id":4311541,"node_id":"MDQ6VXNlcjQzMTE1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/4311541?v=4","gravatar_id":"","url":"https://api.github.com/users/imatheussm","html_url":"https://github.com/imatheussm","followers_url":"https://api.github.com/users/imatheussm/followers","following_url":"https://api.github.com/users/imatheussm/following{/other_user}","gists_url":"https://api.github.com/users/imatheussm/gists{/gist_id}","starred_url":"https://api.github.com/users/imatheussm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imatheussm/subscriptions","organizations_url":"https://api.github.com/users/imatheussm/orgs","repos_url":"https://api.github.com/users/imatheussm/repos","events_url":"https://api.github.com/users/imatheussm/events{/privacy}","received_events_url":"https://api.github.com/users/imatheussm/received_events","type":"User","site_admin":false},"repo":{"id":372256462,"node_id":"MDEwOlJlcG9zaXRvcnkzNzIyNTY0NjI=","name":"ivis","full_name":"imatheussm/ivis","private":false,"owner":{"login":"imatheussm","id":4311541,"node_id":"MDQ6VXNlcjQzMTE1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/4311541?v=4","gravatar_id":"","url":"https://api.github.com/users/imatheussm","html_url":"https://github.com/imatheussm","followers_url":"https://api.github.com/users/imatheussm/followers","following_url":"https://api.github.com/users/imatheussm/following{/other_user}","gists_url":"https://api.github.com/users/imatheussm/gists{/gist_id}","starred_url":"https://api.github.com/users/imatheussm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imatheussm/subscriptions","organizations_url":"https://api.github.com/users/imatheussm/orgs","repos_url":"https://api.github.com/users/imatheussm/repos","events_url":"https://api.github.com/users/imatheussm/events{/privacy}","received_events_url":"https://api.github.com/users/imatheussm/received_events","type":"User","site_admin":false},"html_url":"https://github.com/imatheussm/ivis","description":"Dimensionality reduction in very large datasets using Siamese Networks","fork":true,"url":"https://api.github.com/repos/imatheussm/ivis","forks_url":"https://api.github.com/repos/imatheussm/ivis/forks","keys_url":"https://api.github.com/repos/imatheussm/ivis/keys{/key_id}","collaborators_url":"https://api.github.com/repos/imatheussm/ivis/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/imatheussm/ivis/teams","hooks_url":"https://api.github.com/repos/imatheussm/ivis/hooks","issue_events_url":"https://api.github.com/repos/imatheussm/ivis/issues/events{/number}","events_url":"https://api.github.com/repos/imatheussm/ivis/events","assignees_url":"https://api.github.com/repos/imatheussm/ivis/assignees{/user}","branches_url":"https://api.github.com/repos/imatheussm/ivis/branches{/branch}","tags_url":"https://api.github.com/repos/imatheussm/ivis/tags","blobs_url":"https://api.github.com/repos/imatheussm/ivis/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/imatheussm/ivis/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/imatheussm/ivis/git/refs{/sha}","trees_url":"https://api.github.com/repos/imatheussm/ivis/git/trees{/sha}","statuses_url":"https://api.github.com/repos/imatheussm/ivis/statuses/{sha}","languages_url":"https://api.github.com/repos/imatheussm/ivis/languages","stargazers_url":"https://api.github.com/repos/imatheussm/ivis/stargazers","contributors_url":"https://api.github.com/repos/imatheussm/ivis/contributors","subscribers_url":"https://api.github.com/repos/imatheussm/ivis/subscribers","subscription_url":"https://api.github.com/repos/imatheussm/ivis/subscription","commits_url":"https://api.github.com/repos/imatheussm/ivis/commits{/sha}","git_commits_url":"https://api.github.com/repos/imatheussm/ivis/git/commits{/sha}","comments_url":"https://api.github.com/repos/imatheussm/ivis/comments{/number}","issue_comment_url":"https://api.github.com/repos/imatheussm/ivis/issues/comments{/number}","contents_url":"https://api.github.com/repos/imatheussm/ivis/contents/{+path}","compare_url":"https://api.github.com/repos/imatheussm/ivis/compare/{base}...{head}","merges_url":"https://api.github.com/repos/imatheussm/ivis/merges","archive_url":"https://api.github.com/repos/imatheussm/ivis/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/imatheussm/ivis/downloads","issues_url":"https://api.github.com/repos/imatheussm/ivis/issues{/number}","pulls_url":"https://api.github.com/repos/imatheussm/ivis/pulls{/number}","milestones_url":"https://api.github.com/repos/imatheussm/ivis/milestones{/number}","notifications_url":"https://api.github.com/repos/imatheussm/ivis/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/imatheussm/ivis/labels{/name}","releases_url":"https://api.github.com/repos/imatheussm/ivis/releases{/id}","deployments_url":"https://api.github.com/repos/imatheussm/ivis/deployments","created_at":"2021-05-30T15:56:53Z","updated_at":"2021-10-08T21:39:43Z","pushed_at":"2021-10-08T21:39:40Z","git_url":"git://github.com/imatheussm/ivis.git","ssh_url":"git@github.com:imatheussm/ivis.git","clone_url":"https://github.com/imatheussm/ivis.git","svn_url":"https://github.com/imatheussm/ivis","homepage":"http://bering-ivis.readthedocs.io","size":37527,"stargazers_count":0,"watchers_count":0,"language":"Python","has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"beringresearch:master","ref":"master","sha":"3f45f692de1a09e76f964be4afad2ae66b96a45c","user":{"login":"beringresearch","id":14840322,"node_id":"MDQ6VXNlcjE0ODQwMzIy","avatar_url":"https://avatars.githubusercontent.com/u/14840322?v=4","gravatar_id":"","url":"https://api.github.com/users/beringresearch","html_url":"https://github.com/beringresearch","followers_url":"https://api.github.com/users/beringresearch/followers","following_url":"https://api.github.com/users/beringresearch/following{/other_user}","gists_url":"https://api.github.com/users/beringresearch/gists{/gist_id}","starred_url":"https://api.github.com/users/beringresearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beringresearch/subscriptions","organizations_url":"https://api.github.com/users/beringresearch/orgs","repos_url":"https://api.github.com/users/beringresearch/repos","events_url":"https://api.github.com/users/beringresearch/events{/privacy}","received_events_url":"https://api.github.com/users/beringresearch/received_events","type":"User","site_admin":false},"repo":{"id":144551119,"node_id":"MDEwOlJlcG9zaXRvcnkxNDQ1NTExMTk=","name":"ivis","full_name":"beringresearch/ivis","private":false,"owner":{"login":"beringresearch","id":14840322,"node_id":"MDQ6VXNlcjE0ODQwMzIy","avatar_url":"https://avatars.githubusercontent.com/u/14840322?v=4","gravatar_id":"","url":"https://api.github.com/users/beringresearch","html_url":"https://github.com/beringresearch","followers_url":"https://api.github.com/users/beringresearch/followers","following_url":"https://api.github.com/users/beringresearch/following{/other_user}","gists_url":"https://api.github.com/users/beringresearch/gists{/gist_id}","starred_url":"https://api.github.com/users/beringresearch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beringresearch/subscriptions","organizations_url":"https://api.github.com/users/beringresearch/orgs","repos_url":"https://api.github.com/users/beringresearch/repos","events_url":"https://api.github.com/users/beringresearch/events{/privacy}","received_events_url":"https://api.github.com/users/beringresearch/received_events","type":"User","site_admin":false},"html_url":"https://github.com/beringresearch/ivis","description":"Dimensionality reduction in very large datasets using Siamese Networks","fork":false,"url":"https://api.github.com/repos/beringresearch/ivis","forks_url":"https://api.github.com/repos/beringresearch/ivis/forks","keys_url":"https://api.github.com/repos/beringresearch/ivis/keys{/key_id}","collaborators_url":"https://api.github.com/repos/beringresearch/ivis/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/beringresearch/ivis/teams","hooks_url":"https://api.github.com/repos/beringresearch/ivis/hooks","issue_events_url":"https://api.github.com/repos/beringresearch/ivis/issues/events{/number}","events_url":"https://api.github.com/repos/beringresearch/ivis/events","assignees_url":"https://api.github.com/repos/beringresearch/ivis/assignees{/user}","branches_url":"https://api.github.com/repos/beringresearch/ivis/branches{/branch}","tags_url":"https://api.github.com/repos/beringresearch/ivis/tags","blobs_url":"https://api.github.com/repos/beringresearch/ivis/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/beringresearch/ivis/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/beringresearch/ivis/git/refs{/sha}","trees_url":"https://api.github.com/repos/beringresearch/ivis/git/trees{/sha}","statuses_url":"https://api.github.com/repos/beringresearch/ivis/statuses/{sha}","languages_url":"https://api.github.com/repos/beringresearch/ivis/languages","stargazers_url":"https://api.github.com/repos/beringresearch/ivis/stargazers","contributors_url":"https://api.github.com/repos/beringresearch/ivis/contributors","subscribers_url":"https://api.github.com/repos/beringresearch/ivis/subscribers","subscription_url":"https://api.github.com/repos/beringresearch/ivis/subscription","commits_url":"https://api.github.com/repos/beringresearch/ivis/commits{/sha}","git_commits_url":"https://api.github.com/repos/beringresearch/ivis/git/commits{/sha}","comments_url":"https://api.github.com/repos/beringresearch/ivis/comments{/number}","issue_comment_url":"https://api.github.com/repos/beringresearch/ivis/issues/comments{/number}","contents_url":"https://api.github.com/repos/beringresearch/ivis/contents/{+path}","compare_url":"https://api.github.com/repos/beringresearch/ivis/compare/{base}...{head}","merges_url":"https://api.github.com/repos/beringresearch/ivis/merges","archive_url":"https://api.github.com/repos/beringresearch/ivis/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/beringresearch/ivis/downloads","issues_url":"https://api.github.com/repos/beringresearch/ivis/issues{/number}","pulls_url":"https://api.github.com/repos/beringresearch/ivis/pulls{/number}","milestones_url":"https://api.github.com/repos/beringresearch/ivis/milestones{/number}","notifications_url":"https://api.github.com/repos/beringresearch/ivis/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/beringresearch/ivis/labels{/name}","releases_url":"https://api.github.com/repos/beringresearch/ivis/releases{/id}","deployments_url":"https://api.github.com/repos/beringresearch/ivis/deployments","created_at":"2018-08-13T08:31:01Z","updated_at":"2023-01-17T15:00:20Z","pushed_at":"2023-01-11T12:25:50Z","git_url":"git://github.com/beringresearch/ivis.git","ssh_url":"git@github.com:beringresearch/ivis.git","clone_url":"https://github.com/beringresearch/ivis.git","svn_url":"https://github.com/beringresearch/ivis","homepage":"http://bering-ivis.readthedocs.io","size":36707,"stargazers_count":286,"watchers_count":286,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":37,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":2,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-visualization","dimensionality-reduction","machine-learning","neural-network","siamese-neural-network"],"visibility":"public","forks":37,"open_issues":2,"watchers":286,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/beringresearch/ivis/pulls/106"},"html":{"href":"https://github.com/beringresearch/ivis/pull/106"},"issue":{"href":"https://api.github.com/repos/beringresearch/ivis/issues/106"},"comments":{"href":"https://api.github.com/repos/beringresearch/ivis/issues/106/comments"},"review_comments":{"href":"https://api.github.com/repos/beringresearch/ivis/pulls/106/comments"},"review_comment":{"href":"https://api.github.com/repos/beringresearch/ivis/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/beringresearch/ivis/pulls/106/commits"},"statuses":{"href":"https://api.github.com/repos/beringresearch/ivis/statuses/c3a93f92f1c5cd370b195411cd0ae5d8cfa0d320"}},"author_association":"CONTRIBUTOR","auto_merge":null,"active_lock_reason":null,"merged":true,"mergeable":null,"rebaseable":null,"mergeable_state":"unknown","merged_by":{"login":"Szubie","id":13461031,"node_id":"MDQ6VXNlcjEzNDYxMDMx","avatar_url":"https://avatars.githubusercontent.com/u/13461031?v=4","gravatar_id":"","url":"https://api.github.com/users/Szubie","html_url":"https://github.com/Szubie","followers_url":"https://api.github.com/users/Szubie/followers","following_url":"https://api.github.com/users/Szubie/following{/other_user}","gists_url":"https://api.github.com/users/Szubie/gists{/gist_id}","starred_url":"https://api.github.com/users/Szubie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Szubie/subscriptions","organizations_url":"https://api.github.com/users/Szubie/orgs","repos_url":"https://api.github.com/users/Szubie/repos","events_url":"https://api.github.com/users/Szubie/events{/privacy}","received_events_url":"https://api.github.com/users/Szubie/received_events","type":"User","site_admin":false},"comments":3,"review_comments":2,"maintainer_can_modify":false,"commits":2,"additions":87,"deletions":3,"changed_files":2}