{"url":"https://api.github.com/repos/sktime/sktime/pulls/1842","id":815519030,"node_id":"PR_kwDOCVKAsc4wm9U2","html_url":"https://github.com/sktime/sktime/pull/1842","diff_url":"https://github.com/sktime/sktime/pull/1842.diff","patch_url":"https://github.com/sktime/sktime/pull/1842.patch","issue_url":"https://api.github.com/repos/sktime/sktime/issues/1842","number":1842,"state":"closed","locked":false,"title":"[ENH] Prediction intervals refactor: BATS/TBATS; bugfix for #1625; base class updates on `predict_quantiles`","user":{"login":"k1m190r","id":148415,"node_id":"MDQ6VXNlcjE0ODQxNQ==","avatar_url":"https://avatars.githubusercontent.com/u/148415?v=4","gravatar_id":"","url":"https://api.github.com/users/k1m190r","html_url":"https://github.com/k1m190r","followers_url":"https://api.github.com/users/k1m190r/followers","following_url":"https://api.github.com/users/k1m190r/following{/other_user}","gists_url":"https://api.github.com/users/k1m190r/gists{/gist_id}","starred_url":"https://api.github.com/users/k1m190r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k1m190r/subscriptions","organizations_url":"https://api.github.com/users/k1m190r/orgs","repos_url":"https://api.github.com/users/k1m190r/repos","events_url":"https://api.github.com/users/k1m190r/events{/privacy}","received_events_url":"https://api.github.com/users/k1m190r/received_events","type":"User","site_admin":false},"body":"#### Reference Issues/PRs\r\n Fixes #1625 \r\n\r\n\r\n#### What does this implement/fix? Explain your changes.\r\nFixed #1625. \r\nImplemented TBATS `_predict_quantiles()`.\r\n\r\n##### Re-implemented `_has_predict_quantiles_been_refactored()` due to failing tests.\r\n\r\n[Previous implementation](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L1250):  \r\n```python\r\ndef _has_predict_quantiles_been_refactored(self):\r\n    if \"_predict_quantiles\" in type(self).__dict__.keys():\r\n        return True\r\n    else:\r\n        return False\r\n```\r\nRelied on the expectation that `type(self)` (last class in inheritance chain) would be class implementing `_predict_quantiles()`, and thus `type(self).__dict__.keys()` would have `\"_predict_quantiles\"`. \r\n\r\nBUT in case of TBATS `type(self)` is [TBATS class](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/tbats.py#L21) which does not re-implement itself but rather inherits implementation from [_TbatsAdapter](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/adapters/_tbats.py#L18). Thus `type(self).__dict__.keys()` does **not** have `\"_predict_quantiles\"`, and returns _undesired_ `False`.\r\n\r\nSuggested implementation:\r\n```python\r\ndef _has_predict_quantiles_been_refactored(self):\r\n    \"\"\"Check if specific forecaster implements _predict_quantiles().\"\"\"\r\n    base_pq = BaseForecaster._predict_quantiles\r\n    this_pq = self.__class__._predict_quantiles\r\n    # true if self's _predict_quantiles is new implementation\r\n    return base_pq != this_pq\r\n\r\n```\r\nRelies on following expectations: `BaseForecaster._predict_quantiles` [is defined ](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L1164)(which it is), `self.__class__._predict_quantiles` or equivalently `type(self)._predict_quantiles` always exist (since `BaseForecaster` is expected to be in the inheritance chain). If any class in the inheritance chain from `BaseForecaster` to `type(self)`/(`self.__class__`) has re-implemented `_predict_quantiles` then `base_pq != this_pq` would be _desired_ `True`.\r\n\r\n##### Small changes to  `predict()`.\r\n\r\n[In previous implementation of `predict()`](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L239). This line has expectation of `alpha` to be iterable/ list. While alpha can be scalar/float.\r\n\r\n```python\r\ncoverage = [1 - a for a in alpha]\r\n```\r\nSuggestion:\r\n```python\r\nalphas = [alpha] if isinstance(alpha, (float, int)) else alpha\r\ncoverage = [1 - a for a in alphas]\r\n```\r\nensures that float/int becomes a list with that float/int.\r\n\r\nAlso `else` [clause ](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L236)was missing definition for `y_pred` that is expected in return:\r\n\r\nAdded\r\n```python\r\ny_pred = self._predict(self.fh, X=X_inner)\r\n```\r\n\r\n##### Small changes to `_convert_new_to_old_pred_int()` due to failing tests.\r\nThis one needs a bit of story :)\r\n\r\n[test_predict_pred_interval](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/tests/test_all_forecasters.py#L258) failed thus:\r\n\r\n[this line](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/tests/test_all_forecasters.py#L282)\r\n```python\r\ny_pred, pred_ints = f.predict(return_pred_int=True, alpha=alpha)\r\n```\r\nwhere `alpha=0.05`\r\n\r\nin [`predict()`](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L240)\r\n```python\r\npred_int = self.predict_interval(fh=fh, X=X_inner, coverage=coverage)\r\n```\r\nwhere `coverage=[0.95]`\r\n\r\n`predict_interval()` calls [`_predict_interval()`](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L1157) \r\n\r\nwhich has these lines\r\n\r\n```python\r\nalphas = []\r\nfor c in coverage:\r\n    alphas.extend([(1 - c) / 2, 0.5 + (c / 2)])\r\nalphas.sort()\r\n```\r\nafter these lines `alphas = [0.025000000000000022, 0.975]`, which become columns for the multiindex returned by [`_predict_quantiles()`](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L1161)\r\n\r\n**Notice first quantile `0.025000000000000022`!** since `(1 - 0.95) = 0.050000000000000044` not so fun numerical instability :(.\r\n\r\nonce returned back to `predict()` we are executing [these lines ](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L243) to convert from new to old:\r\n```python\r\nif keep_old_return_type:\r\n    pred_int = _convert_new_to_old_pred_int(pred_int, alpha)\r\n```\r\n\r\nNow actual **problem**:\r\n\r\n[Previous implementation of _convert_new_to_old_pred_int](https://github.com/alan-turing-institute/sktime/blob/bce815d11fff62b52882f13cd650c88972b08ab6/sktime/forecasting/base/_base.py#L1308):\r\n\r\n\r\n```python\r\ndef _convert_new_to_old_pred_int(pred_int_new, alpha):\r\n    name = pred_int_new.columns.get_level_values(0).unique()[0]\r\n    alpha = check_alpha(alpha)\r\n    pred_int_old_format = [\r\n        pd.DataFrame(\r\n            {\r\n                \"lower\": pred_int_new[name, a / 2],\r\n                \"upper\": pred_int_new[name, 1 - (a / 2)],\r\n            }\r\n        )\r\n        for a in alpha\r\n    ]\r\n\r\n    # for a single alpha, return single pd.DataFrame\r\n    if len(alpha) == 1:\r\n        return pred_int_old_format[0]\r\n\r\n    # otherwise return list of pd.DataFrames\r\n    return pred_int_old_format\r\n```\r\n\r\ntakes original `alpha=0.05` and attempts to construct expected column index name `[name, a/2]` here again `alpha` is expected to be a iterable/list but is float (so fixed).\r\n\r\nBUT the main problem is **`a/2=0.25` exactly `0.025` and thus fails to get actual column `0.025000000000000022`**\r\n\r\nSuggested implementation, simply replicates the computation path to arrive to exactly the same values of quantiles.\r\n\r\n```python\r\ndef _convert_new_to_old_pred_int(pred_int_new, alpha):\r\n    name = pred_int_new.columns.get_level_values(0).unique()[0]\r\n    alpha = check_alpha(alpha)\r\n\r\n    alphas = [alpha] if isinstance(alpha, (float, int)) else alpha\r\n    coverage = [1 - a for a in alphas]\r\n\r\n    alpha_quantiles = []\r\n    for c in coverage:\r\n        aq_pair = ((1 - c) / 2, 0.5 + (c / 2))\r\n        alpha_quantiles.append(aq_pair)\r\n    alpha_quantiles.sort()\r\n\r\n    pred_int_old_format = [\r\n        pd.DataFrame(\r\n            {\r\n                \"lower\": pred_int_new[(name, al)],\r\n                \"upper\": pred_int_new[(name, au)],\r\n            }\r\n        )\r\n        for al, au in alpha_quantiles\r\n    ]\r\n\r\n    # for a single alpha, return single pd.DataFrame\r\n    if len(alphas) == 1:\r\n        return pred_int_old_format[0]\r\n\r\n    # otherwise return list of pd.DataFrames\r\n    return pred_int_old_format\r\n```\r\n\r\n#### Does your contribution introduce a new dependency? If yes, which one?\r\nNo\r\n\r\n#### What should a reviewer concentrate their feedback on?\r\n- general code comments (my first commit :))\r\n\r\n#### PR checklist\r\n\r\nTODO\r\n##### For all contributions\r\n- [ ] Will add myself to the [list of contributors](https://github.com/alan-turing-institute/sktime/blob/main/.all-contributorsrc).\r\n\r\n","created_at":"2022-01-06T13:21:17Z","updated_at":"2022-01-21T00:02:47Z","closed_at":"2022-01-21T00:02:47Z","merged_at":"2022-01-21T00:02:47Z","merge_commit_sha":"444f6c9eb5dc00ad00e07ee6ec199c6ffe0cb902","assignee":null,"assignees":[],"requested_reviewers":[{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/sktime/sktime/pulls/1842/commits","review_comments_url":"https://api.github.com/repos/sktime/sktime/pulls/1842/comments","review_comment_url":"https://api.github.com/repos/sktime/sktime/pulls/comments{/number}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1842/comments","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/72ef686346d90bfd7d72f5d0ee0159230c2c59b5","head":{"label":"k1m190r:main","ref":"main","sha":"72ef686346d90bfd7d72f5d0ee0159230c2c59b5","user":{"login":"k1m190r","id":148415,"node_id":"MDQ6VXNlcjE0ODQxNQ==","avatar_url":"https://avatars.githubusercontent.com/u/148415?v=4","gravatar_id":"","url":"https://api.github.com/users/k1m190r","html_url":"https://github.com/k1m190r","followers_url":"https://api.github.com/users/k1m190r/followers","following_url":"https://api.github.com/users/k1m190r/following{/other_user}","gists_url":"https://api.github.com/users/k1m190r/gists{/gist_id}","starred_url":"https://api.github.com/users/k1m190r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k1m190r/subscriptions","organizations_url":"https://api.github.com/users/k1m190r/orgs","repos_url":"https://api.github.com/users/k1m190r/repos","events_url":"https://api.github.com/users/k1m190r/events{/privacy}","received_events_url":"https://api.github.com/users/k1m190r/received_events","type":"User","site_admin":false},"repo":{"id":444773831,"node_id":"R_kgDOGoK1xw","name":"sktime","full_name":"k1m190r/sktime","private":false,"owner":{"login":"k1m190r","id":148415,"node_id":"MDQ6VXNlcjE0ODQxNQ==","avatar_url":"https://avatars.githubusercontent.com/u/148415?v=4","gravatar_id":"","url":"https://api.github.com/users/k1m190r","html_url":"https://github.com/k1m190r","followers_url":"https://api.github.com/users/k1m190r/followers","following_url":"https://api.github.com/users/k1m190r/following{/other_user}","gists_url":"https://api.github.com/users/k1m190r/gists{/gist_id}","starred_url":"https://api.github.com/users/k1m190r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k1m190r/subscriptions","organizations_url":"https://api.github.com/users/k1m190r/orgs","repos_url":"https://api.github.com/users/k1m190r/repos","events_url":"https://api.github.com/users/k1m190r/events{/privacy}","received_events_url":"https://api.github.com/users/k1m190r/received_events","type":"User","site_admin":false},"html_url":"https://github.com/k1m190r/sktime","description":"A unified framework for machine learning with time series","fork":true,"url":"https://api.github.com/repos/k1m190r/sktime","forks_url":"https://api.github.com/repos/k1m190r/sktime/forks","keys_url":"https://api.github.com/repos/k1m190r/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/k1m190r/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/k1m190r/sktime/teams","hooks_url":"https://api.github.com/repos/k1m190r/sktime/hooks","issue_events_url":"https://api.github.com/repos/k1m190r/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/k1m190r/sktime/events","assignees_url":"https://api.github.com/repos/k1m190r/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/k1m190r/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/k1m190r/sktime/tags","blobs_url":"https://api.github.com/repos/k1m190r/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/k1m190r/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/k1m190r/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/k1m190r/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/k1m190r/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/k1m190r/sktime/languages","stargazers_url":"https://api.github.com/repos/k1m190r/sktime/stargazers","contributors_url":"https://api.github.com/repos/k1m190r/sktime/contributors","subscribers_url":"https://api.github.com/repos/k1m190r/sktime/subscribers","subscription_url":"https://api.github.com/repos/k1m190r/sktime/subscription","commits_url":"https://api.github.com/repos/k1m190r/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/k1m190r/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/k1m190r/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/k1m190r/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/k1m190r/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/k1m190r/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/k1m190r/sktime/merges","archive_url":"https://api.github.com/repos/k1m190r/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/k1m190r/sktime/downloads","issues_url":"https://api.github.com/repos/k1m190r/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/k1m190r/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/k1m190r/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/k1m190r/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/k1m190r/sktime/labels{/name}","releases_url":"https://api.github.com/repos/k1m190r/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/k1m190r/sktime/deployments","created_at":"2022-01-05T11:12:59Z","updated_at":"2022-01-09T22:12:57Z","pushed_at":"2022-06-01T08:13:08Z","git_url":"git://github.com/k1m190r/sktime.git","ssh_url":"git@github.com:k1m190r/sktime.git","clone_url":"https://github.com/k1m190r/sktime.git","svn_url":"https://github.com/k1m190r/sktime","homepage":"https://sktime.org","size":47129,"stargazers_count":0,"watchers_count":0,"language":"Python","has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"main"}},"base":{"label":"sktime:main","ref":"main","sha":"419d347f062320290fb65e4afec72b82179e63bf","user":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"repo":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-26T19:26:46Z","pushed_at":"2023-01-26T23:01:42Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":57239,"stargazers_count":6065,"watchers_count":6065,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":648,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":648,"watchers":6065,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/sktime/sktime/pulls/1842"},"html":{"href":"https://github.com/sktime/sktime/pull/1842"},"issue":{"href":"https://api.github.com/repos/sktime/sktime/issues/1842"},"comments":{"href":"https://api.github.com/repos/sktime/sktime/issues/1842/comments"},"review_comments":{"href":"https://api.github.com/repos/sktime/sktime/pulls/1842/comments"},"review_comment":{"href":"https://api.github.com/repos/sktime/sktime/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/sktime/sktime/pulls/1842/commits"},"statuses":{"href":"https://api.github.com/repos/sktime/sktime/statuses/72ef686346d90bfd7d72f5d0ee0159230c2c59b5"}},"author_association":"CONTRIBUTOR","auto_merge":null,"active_lock_reason":null,"merged":true,"mergeable":null,"rebaseable":null,"mergeable_state":"unknown","merged_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"comments":7,"review_comments":5,"maintainer_can_modify":false,"commits":12,"additions":168,"deletions":18,"changed_files":2}