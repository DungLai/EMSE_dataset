{"url":"https://api.github.com/repos/Tiiiger/SGC/issues/13","repository_url":"https://api.github.com/repos/Tiiiger/SGC","labels_url":"https://api.github.com/repos/Tiiiger/SGC/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/Tiiiger/SGC/issues/13/comments","events_url":"https://api.github.com/repos/Tiiiger/SGC/issues/13/events","html_url":"https://github.com/Tiiiger/SGC/issues/13","id":470875748,"node_id":"MDU6SXNzdWU0NzA4NzU3NDg=","number":13,"title":"Efficiency Analysis of SGC","user":{"login":"liu-jc","id":17921248,"node_id":"MDQ6VXNlcjE3OTIxMjQ4","avatar_url":"https://avatars.githubusercontent.com/u/17921248?v=4","gravatar_id":"","url":"https://api.github.com/users/liu-jc","html_url":"https://github.com/liu-jc","followers_url":"https://api.github.com/users/liu-jc/followers","following_url":"https://api.github.com/users/liu-jc/following{/other_user}","gists_url":"https://api.github.com/users/liu-jc/gists{/gist_id}","starred_url":"https://api.github.com/users/liu-jc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liu-jc/subscriptions","organizations_url":"https://api.github.com/users/liu-jc/orgs","repos_url":"https://api.github.com/users/liu-jc/repos","events_url":"https://api.github.com/users/liu-jc/events{/privacy}","received_events_url":"https://api.github.com/users/liu-jc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-07-22T03:34:07Z","updated_at":"2019-07-24T07:59:58Z","closed_at":"2019-07-22T18:10:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I found the training time improvements of SGC vary on different datasets. For example, SGC was trained 28 times faster than GCN on Pubmed dataset, while it is only < 5 times faster than GCN on TWITTER-WORLD, Cora and Citeseer. I wonder what the reason is to come out these kinds of results. Is there a theoretical guarantee? Or only the empirical results? \r\n\r\nThe other question is how we can quantitatively analyze the training time of these GCNs? Are there any approaches to do this? I think it is not enough if only analyze the time complexity of matrix multiplication during forward/backward propagation with ignoring the time consuming of non-linear transformation. \r\n\r\nI would appreciate your help if you could provide the answers/insights of the above questions. \r\n","closed_by":{"login":"Tiiiger","id":19514537,"node_id":"MDQ6VXNlcjE5NTE0NTM3","avatar_url":"https://avatars.githubusercontent.com/u/19514537?v=4","gravatar_id":"","url":"https://api.github.com/users/Tiiiger","html_url":"https://github.com/Tiiiger","followers_url":"https://api.github.com/users/Tiiiger/followers","following_url":"https://api.github.com/users/Tiiiger/following{/other_user}","gists_url":"https://api.github.com/users/Tiiiger/gists{/gist_id}","starred_url":"https://api.github.com/users/Tiiiger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tiiiger/subscriptions","organizations_url":"https://api.github.com/users/Tiiiger/orgs","repos_url":"https://api.github.com/users/Tiiiger/repos","events_url":"https://api.github.com/users/Tiiiger/events{/privacy}","received_events_url":"https://api.github.com/users/Tiiiger/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/Tiiiger/SGC/issues/13/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Tiiiger/SGC/issues/13/timeline","performed_via_github_app":null,"state_reason":"completed"}