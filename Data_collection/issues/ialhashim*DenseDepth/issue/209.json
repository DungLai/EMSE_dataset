{"url":"https://api.github.com/repos/ialhashim/DenseDepth/issues/209","repository_url":"https://api.github.com/repos/ialhashim/DenseDepth","labels_url":"https://api.github.com/repos/ialhashim/DenseDepth/issues/209/labels{/name}","comments_url":"https://api.github.com/repos/ialhashim/DenseDepth/issues/209/comments","events_url":"https://api.github.com/repos/ialhashim/DenseDepth/issues/209/events","html_url":"https://github.com/ialhashim/DenseDepth/issues/209","id":1285031335,"node_id":"I_kwDOCb1bwc5MmAWn","number":209,"title":"Error when Running on Higher-Resolution Images","user":{"login":"aryker","id":5115668,"node_id":"MDQ6VXNlcjUxMTU2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/5115668?v=4","gravatar_id":"","url":"https://api.github.com/users/aryker","html_url":"https://github.com/aryker","followers_url":"https://api.github.com/users/aryker/followers","following_url":"https://api.github.com/users/aryker/following{/other_user}","gists_url":"https://api.github.com/users/aryker/gists{/gist_id}","starred_url":"https://api.github.com/users/aryker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aryker/subscriptions","organizations_url":"https://api.github.com/users/aryker/orgs","repos_url":"https://api.github.com/users/aryker/repos","events_url":"https://api.github.com/users/aryker/events{/privacy}","received_events_url":"https://api.github.com/users/aryker/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-06-26T21:06:22Z","updated_at":"2022-06-26T21:06:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am trying to get this working with images outside the ones in the example folder, and I am running into issues whenever I try to use images that are of a resolution other than 640x480. For example, when trying an image of resolution 5184 x 3456 I get the following stack trace:\r\n\r\n```\r\nFile \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1845, in predict_function  *\r\n        return step_function(self, iterator)\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1834, in step_function  **\r\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1823, in run_step  **\r\n        outputs = model.predict_step(data)\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1791, in predict_step\r\n        return self(x, training=False)\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 67, in error_handler\r\n        raise e.with_traceback(filtered_tb) from None\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\input_spec.py\", line 264, in assert_input_compatibility\r\n        raise ValueError(f'Input {input_index} of layer \"{layer_name}\" is '\r\n\r\n    ValueError: Input 0 of layer \"model_1\" is incompatible with the layer: expected shape=(None, None, None, 3), found shape=(None, 3456, 5184, 4)\r\n```\r\n\r\nAs another example, when I try an image of resolution 1920 x 1080 I see the following:\r\n\r\n```\r\nFile \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1845, in predict_function  *\r\n        return step_function(self, iterator)\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1834, in step_function  **\r\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1823, in run_step  **\r\n        outputs = model.predict_step(data)\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1791, in predict_step\r\n        return self(x, training=False)\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 67, in error_handler\r\n        raise e.with_traceback(filtered_tb) from None\r\n    File \"E:\\Data\\miniconda3\\lib\\site-packages\\keras\\backend.py\", line 3313, in concatenate\r\n        return tf.concat([to_dense(x) for x in tensors], axis)\r\n\r\n    ValueError: Exception encountered when calling layer \"up1_concat\" (type Concatenate).\r\n    \r\n    Dimension 1 in both shapes must be equal, but are 66 and 67. Shapes are [?,66,120] and [?,67,120]. for '{{node model_1/up1_concat/concat}} = ConcatV2[N=2, T=DT_FLOAT, Tidx=DT_INT32](model_1/up1_upsampling2d/resize/ResizeBilinear, model_1/pool3_pool/AvgPool, model_1/up1_concat/concat/axis)' with input shapes: [?,66,120,1664], [?,67,120,256], [] and with computed input tensors: input[2] = <3>.\r\n    \r\n    Call arguments received by layer \"up1_concat\" (type Concatenate):\r\n      â€¢ inputs=['tf.Tensor(shape=(None, 66, 120, 1664), dtype=float32)', 'tf.Tensor(shape=(None, 67, 120, 256), dtype=float32)']\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/ialhashim/DenseDepth/issues/209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ialhashim/DenseDepth/issues/209/timeline","performed_via_github_app":null,"state_reason":null}