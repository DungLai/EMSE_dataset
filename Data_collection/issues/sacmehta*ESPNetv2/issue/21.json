{"url":"https://api.github.com/repos/sacmehta/ESPNetv2/issues/21","repository_url":"https://api.github.com/repos/sacmehta/ESPNetv2","labels_url":"https://api.github.com/repos/sacmehta/ESPNetv2/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/sacmehta/ESPNetv2/issues/21/comments","events_url":"https://api.github.com/repos/sacmehta/ESPNetv2/issues/21/events","html_url":"https://github.com/sacmehta/ESPNetv2/issues/21","id":433984126,"node_id":"MDU6SXNzdWU0MzM5ODQxMjY=","number":21,"title":"Training issues (from pretrained weights)","user":{"login":"ToniRV","id":9856163,"node_id":"MDQ6VXNlcjk4NTYxNjM=","avatar_url":"https://avatars.githubusercontent.com/u/9856163?v=4","gravatar_id":"","url":"https://api.github.com/users/ToniRV","html_url":"https://github.com/ToniRV","followers_url":"https://api.github.com/users/ToniRV/followers","following_url":"https://api.github.com/users/ToniRV/following{/other_user}","gists_url":"https://api.github.com/users/ToniRV/gists{/gist_id}","starred_url":"https://api.github.com/users/ToniRV/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ToniRV/subscriptions","organizations_url":"https://api.github.com/users/ToniRV/orgs","repos_url":"https://api.github.com/users/ToniRV/repos","events_url":"https://api.github.com/users/ToniRV/events{/privacy}","received_events_url":"https://api.github.com/users/ToniRV/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-04-16T21:03:48Z","updated_at":"2019-04-27T12:08:09Z","closed_at":"2019-04-27T12:08:09Z","author_association":"NONE","active_lock_reason":null,"body":"First, great work!\r\nUnfortunately, I ran into three weird behaviors when training your network.\r\nI'm trying to fine-tune your network for the [kitti](http://www.cvlibs.net/datasets/kitti/eval_semseg.php?benchmark=semantics2015) dataset, which provides a mere 200 labeled images. Kitti uses the same labels as in CityScapes. Images are 1242 pixels wide and 375 pixels height.\r\n1. First, I update the `train.txt` and `val.txt`, then I relabel images using cityscapes' mapping from `labelId` to `trainId`, I then encounter a problem concerning the `255` label, which I simply discard in the `main.py`. Besides this small inconvenient, everything so far is good (would be nice to add `--ignore_id` argument in the main script).\r\n2. When training, regardless of using pretrained weights I would expect to have to use the arguments you provide, basically 'inWidth' and 'inHeight'. Nevertheless, when using such values the training breaks:\r\nRunning:\r\n```\r\nCUDA_VISIBLE_DEVICES=0,1 python3 main.py --batch_size 8 --s 1.0 --data_dir ./kitti --cached_data_file kitti.p --inWidth 1242 --inHeight 375\r\n```\r\nOutputs:\r\n```\r\nRuntimeError: invalid argument 0: Sizes of tensors must match except in dimension 1. Got 72 and 71 in dimension 2 at /pytorch/aten/src/THC/generic/THCTensorMath.cu:83\r\n```\r\nSimilar Issues: #6  #13 \r\n\r\nInterestingly enough, leaving the default values makes it run...\r\n\r\n3. Even more weirdly, when using the pretrained weights, I encounter the following issue:\r\nRunning:\r\n```\r\nCUDA_VISIBLE_DEVICES=0,1 python3 main.py --batch_size 10 --s 1.0 --data_dir ./kitti --cached_data_file kitti.p --pretrained ./pretrained_weights/espnetv2_segmentation_s_1.0.pth\r\n```\r\nOutputs:\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 269, in <module>\r\n    trainValidateSegmentation(parser.parse_args())\r\n  File \"main.py\", line 30, in trainValidateSegmentation\r\n    model = net.EESPNet_Seg(args.classes, s=args.s, pretrained=args.pretrained, gpus=num_gpus)\r\n  File \"segmentation/cnn/SegmentationModel.py\", line 25, in __init__\r\n    classificationNet.load_state_dict(torch.load(pretrained))\r\n  File \"venv/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 769, in load_state_dict\r\n    self.__class__.__name__, \"\\n\\t\".join(error_msgs)))\r\nRuntimeError: Error(s) in loading state_dict for DataParallel:\r\n\tMissing key(s) in state_dict: \"module.level1.conv.weight\", \"module.level1.bn.weight\", \"module.level1.bn.bias\", \"module.level1.bn.running_mean\",  ............A long list....................\r\n\tUnexpected key(s) in state_dict: \"module.net.level1.conv.weight\", \"module.net.level1.bn.weight\", \"module.net.level1.bn.bias\", \"module.net.level1.bn.running_mean\", \"module.net.level1.bn.running_var\", \"module.net.level1.bn.num_batche, ............Another long list....................\r\n```\r\nAs interesting as before, if I run the same command with the pretrained weights of object classification, it runs... (this is quite confusing)\r\nRunning:\r\n```\r\nCUDA_VISIBLE_DEVICES=0,1 python3 main.py --batch_size 8 --s 1.0 --data_dir ./kitti --cached_data_file kitti.p --pretrained ../imagenet/pretrained_weights/espnetv2_s_1.0.pth \r\n```\r\nOutputs:\r\n```\r\nModel initialized with pretrained weights\r\nTotal network parameters: 340782\r\nData statistics\r\n[ 98.74988 102.4303   97.34298] [80.21684 78.51919 75.99867]\r\n[ 3.5197217  7.555117   5.793313  10.019754   9.771379   9.226719\r\n 10.181938   9.925934   3.145523   5.8163567  5.3573713 10.378751\r\n  8.682274   6.40663   10.266428  10.30295   10.258763  10.4816475\r\n 10.429212   7.707068 ]\r\nLearning rate: 0.0005\r\nTrain: epoch 0\r\n[0/23] loss: 6.070 time:6.91\r\n[1/23] loss: 5.943 time:0.52\r\n[2/23] loss: 5.866 time:0.48\r\n[3/23] loss: 5.786 time:0.49\r\n[4/23] loss: 5.752 time:0.48\r\n[5/23] loss: 5.597 time:0.48\r\n...\r\n```\r\n\r\nHow can I train your network using the pretrained weights for segmentation using the kitti dataset?\r\nThe problem is that if I run the network on the kitti dataset with the pretrained weights only, it does not look very nice.\r\n","closed_by":{"login":"sacmehta","id":18603245,"node_id":"MDQ6VXNlcjE4NjAzMjQ1","avatar_url":"https://avatars.githubusercontent.com/u/18603245?v=4","gravatar_id":"","url":"https://api.github.com/users/sacmehta","html_url":"https://github.com/sacmehta","followers_url":"https://api.github.com/users/sacmehta/followers","following_url":"https://api.github.com/users/sacmehta/following{/other_user}","gists_url":"https://api.github.com/users/sacmehta/gists{/gist_id}","starred_url":"https://api.github.com/users/sacmehta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sacmehta/subscriptions","organizations_url":"https://api.github.com/users/sacmehta/orgs","repos_url":"https://api.github.com/users/sacmehta/repos","events_url":"https://api.github.com/users/sacmehta/events{/privacy}","received_events_url":"https://api.github.com/users/sacmehta/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sacmehta/ESPNetv2/issues/21/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sacmehta/ESPNetv2/issues/21/timeline","performed_via_github_app":null,"state_reason":"completed"}