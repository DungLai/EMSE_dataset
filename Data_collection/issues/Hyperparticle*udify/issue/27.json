{"url":"https://api.github.com/repos/Hyperparticle/udify/issues/27","repository_url":"https://api.github.com/repos/Hyperparticle/udify","labels_url":"https://api.github.com/repos/Hyperparticle/udify/issues/27/labels{/name}","comments_url":"https://api.github.com/repos/Hyperparticle/udify/issues/27/comments","events_url":"https://api.github.com/repos/Hyperparticle/udify/issues/27/events","html_url":"https://github.com/Hyperparticle/udify/issues/27","id":1033740509,"node_id":"I_kwDOCrACu849naDd","number":27,"title":"Naming bug for `head_arc` and `child_arc` weights/representations","user":{"login":"teffland","id":5906031,"node_id":"MDQ6VXNlcjU5MDYwMzE=","avatar_url":"https://avatars.githubusercontent.com/u/5906031?v=4","gravatar_id":"","url":"https://api.github.com/users/teffland","html_url":"https://github.com/teffland","followers_url":"https://api.github.com/users/teffland/followers","following_url":"https://api.github.com/users/teffland/following{/other_user}","gists_url":"https://api.github.com/users/teffland/gists{/gist_id}","starred_url":"https://api.github.com/users/teffland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/teffland/subscriptions","organizations_url":"https://api.github.com/users/teffland/orgs","repos_url":"https://api.github.com/users/teffland/repos","events_url":"https://api.github.com/users/teffland/events{/privacy}","received_events_url":"https://api.github.com/users/teffland/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-10-22T16:08:53Z","updated_at":"2021-10-22T16:08:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"This is for future reference, for anyone working off of this model's edge score outputs. \r\n\r\nThere is a semantic naming bug in the dependency decoder that actually switches the `head_arc_representation` and `child_arc_representation` and the weights that compute them.\r\n\r\nThe code that computes the arc logits in `dependency_decoder.py` is:\r\n```\r\nhead_arc_representation = self._dropout(self.head_arc_feedforward(encoded_text))\r\nchild_arc_representation = self._dropout(self.child_arc_feedforward(encoded_text))\r\nattended_arcs = self.arc_attention(head_arc_representation, child_arc_representation)\r\n```\r\n\r\nThis _looks_ like `attended_arcs` (shape `batch_size, sent_len, sent_len`) is a tensor of scores with `attended_arcs[b,i,j]` representing the score for an arc _from i to j_ (`head->child`).  The rest of the code, however, uses this tensor as if it were `child->head`, so the tensors are in effect transposed.  This also implies that the weights,`head_arc_feedforward` and `child_arc_feedforward`, are named backwards.\r\n\r\nThis causes no performance bugs for udify itself, but if you use the outputs of the model arc scores for something else, you need to transpose these scores to get them to be actually `head->child`.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/Hyperparticle/udify/issues/27/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Hyperparticle/udify/issues/27/timeline","performed_via_github_app":null,"state_reason":null}