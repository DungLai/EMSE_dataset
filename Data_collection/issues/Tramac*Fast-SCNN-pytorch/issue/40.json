{"url":"https://api.github.com/repos/Tramac/Fast-SCNN-pytorch/issues/40","repository_url":"https://api.github.com/repos/Tramac/Fast-SCNN-pytorch","labels_url":"https://api.github.com/repos/Tramac/Fast-SCNN-pytorch/issues/40/labels{/name}","comments_url":"https://api.github.com/repos/Tramac/Fast-SCNN-pytorch/issues/40/comments","events_url":"https://api.github.com/repos/Tramac/Fast-SCNN-pytorch/issues/40/events","html_url":"https://github.com/Tramac/Fast-SCNN-pytorch/issues/40","id":752845421,"node_id":"MDU6SXNzdWU3NTI4NDU0MjE=","number":40,"title":"Testing on a video","user":{"login":"SamSamhuns","id":13418507,"node_id":"MDQ6VXNlcjEzNDE4NTA3","avatar_url":"https://avatars.githubusercontent.com/u/13418507?v=4","gravatar_id":"","url":"https://api.github.com/users/SamSamhuns","html_url":"https://github.com/SamSamhuns","followers_url":"https://api.github.com/users/SamSamhuns/followers","following_url":"https://api.github.com/users/SamSamhuns/following{/other_user}","gists_url":"https://api.github.com/users/SamSamhuns/gists{/gist_id}","starred_url":"https://api.github.com/users/SamSamhuns/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SamSamhuns/subscriptions","organizations_url":"https://api.github.com/users/SamSamhuns/orgs","repos_url":"https://api.github.com/users/SamSamhuns/repos","events_url":"https://api.github.com/users/SamSamhuns/events{/privacy}","received_events_url":"https://api.github.com/users/SamSamhuns/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-29T05:44:01Z","updated_at":"2020-11-30T10:13:37Z","closed_at":"2020-11-30T10:13:37Z","author_association":"NONE","active_lock_reason":null,"body":"Is there a possible implementation for running the segmentation network on a video through open cv? Any help would be much appreciated.\r\n\r\nWhen I try to load a video through open cv and use my webcam as the source, I get the following error:\r\n\r\n`File \"/Users/user/Downloads/Fast-SCNN-pytorch/models/fast_scnn.py\", line 213, in forward\r\n    out = higher_res_feature + lower_res_feature\r\nRuntimeError: The size of tensor a (90) must match the size of tensor b (92) at non-singleton dimension 2`\r\n\r\nThe edited code in demo.py is:\r\n\r\n```\r\ndef demo():\r\n    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\r\n    # output folder\r\n    if not os.path.exists(args.outdir):\r\n        os.makedirs(args.outdir)\r\n\r\n    # image transform\r\n    transform = transforms.Compose([\r\n        transforms.ToTensor(),\r\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),\r\n    ])\r\n\r\n    model = get_fast_scnn(args.dataset, pretrained=True,\r\n                          root=args.weights_folder, map_cpu=args.cpu).to(device)\r\n    print('Finished loading model!')\r\n    model.eval()\r\n\r\n    capture = cv2.VideoCapture(0)\r\n    while capture.isOpened():\r\n        ret, frame = capture.read()\r\n        if ret:\r\n            frame = Image.fromarray(frame.astype('uint8')).convert('RGB')\r\n            image = transform(frame).unsqueeze(0).to(device)\r\n\r\n            with torch.no_grad():\r\n                result = model(image)\r\n            pred = torch.argmax(result[0], 1).squeeze(0).cpu().data.numpy()\r\n            pred = pred.astype('float64')\r\n            cv2.imshow(\"frame\", pred)\r\n\r\n            key = cv2.waitKey(1)\r\n            if key & 0xFF == ord('q'):\r\n                break\r\n        else:\r\n            break\r\n```","closed_by":{"login":"SamSamhuns","id":13418507,"node_id":"MDQ6VXNlcjEzNDE4NTA3","avatar_url":"https://avatars.githubusercontent.com/u/13418507?v=4","gravatar_id":"","url":"https://api.github.com/users/SamSamhuns","html_url":"https://github.com/SamSamhuns","followers_url":"https://api.github.com/users/SamSamhuns/followers","following_url":"https://api.github.com/users/SamSamhuns/following{/other_user}","gists_url":"https://api.github.com/users/SamSamhuns/gists{/gist_id}","starred_url":"https://api.github.com/users/SamSamhuns/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SamSamhuns/subscriptions","organizations_url":"https://api.github.com/users/SamSamhuns/orgs","repos_url":"https://api.github.com/users/SamSamhuns/repos","events_url":"https://api.github.com/users/SamSamhuns/events{/privacy}","received_events_url":"https://api.github.com/users/SamSamhuns/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/Tramac/Fast-SCNN-pytorch/issues/40/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Tramac/Fast-SCNN-pytorch/issues/40/timeline","performed_via_github_app":null,"state_reason":"completed"}