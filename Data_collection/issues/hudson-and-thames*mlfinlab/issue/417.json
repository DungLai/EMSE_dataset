{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/417","repository_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab","labels_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/417/labels{/name}","comments_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/417/comments","events_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/417/events","html_url":"https://github.com/hudson-and-thames/mlfinlab/issues/417","id":649535019,"node_id":"MDU6SXNzdWU2NDk1MzUwMTk=","number":417,"title":"CUSUM.py get_chu_stinchcombe_white_statistics speed-up and bug fix","user":{"login":"jasonharris438","id":43410166,"node_id":"MDQ6VXNlcjQzNDEwMTY2","avatar_url":"https://avatars.githubusercontent.com/u/43410166?v=4","gravatar_id":"","url":"https://api.github.com/users/jasonharris438","html_url":"https://github.com/jasonharris438","followers_url":"https://api.github.com/users/jasonharris438/followers","following_url":"https://api.github.com/users/jasonharris438/following{/other_user}","gists_url":"https://api.github.com/users/jasonharris438/gists{/gist_id}","starred_url":"https://api.github.com/users/jasonharris438/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasonharris438/subscriptions","organizations_url":"https://api.github.com/users/jasonharris438/orgs","repos_url":"https://api.github.com/users/jasonharris438/repos","events_url":"https://api.github.com/users/jasonharris438/events{/privacy}","received_events_url":"https://api.github.com/users/jasonharris438/received_events","type":"User","site_admin":false},"labels":[{"id":1232033394,"node_id":"MDU6TGFiZWwxMjMyMDMzMzk0","url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-07-02T02:13:59Z","updated_at":"2020-12-25T16:13:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"There is one minor issue in the existing function that I have fixed in my proposed solution, however the main purpose here is for a speed-up.\r\n\r\n### Change No. 1:\r\n\r\nBug on line 55 - currently  s_n_t = 1 / (sigma_sq_t * np.sqrt(integer_index - temp_integer_index)) * values_diff\r\n\r\nChange to: s_n_t = 1 / (np.sqrt(sigma_sq_t * (integer_index - temp_integer_index))) * values_diff\r\n\r\nTo take sqrt of sigma_sq_t to get \\hat\\sigma_{t} - Correctly standardizes according to the original paper and Marcos' book.\r\n\r\nS_{n,t} & = (y_{t}-y_{n})(\\hat\\sigma_{t}\\sqrt{t-n})^{-1}, \\ \\ t>n \\\\\r\n\r\nThe test statistics are currently disproportionately large compared to the critical values as they are not scaled correctly.\r\n\r\n**To Reproduce**\r\nThe script from the docs is sufficient to see this.\r\n\r\nimport pandas as pd\r\nimport numpy as np\r\nfrom mlfinlab.structural_breaks import (get_chu_stinchcombe_white_statistics,\r\n                                        get_chow_type_stat, get_sadf)\r\n\r\n#### Importing price data\r\nbars = pd.read_csv('BARS_PATH', index_col = 0, parse_dates=[0])\r\n\r\n#### Changing to log prices data\r\nlog_prices = np.log(bars.close) # see p.253, 17.4.2.1 Raw vs Log Prices\r\n\r\n#### Chu-Stinchcombe test (one-sided and two-sided)\r\none_sided_test = get_chu_stinchcombe_white_statistics(log_prices, test_type='one_sided')\r\ntwo_sided_test = get_chu_stinchcombe_white_statistics(log_prices, test_type='two_sided')\r\n\r\n### Change No. 2:\r\n\r\nI have implemented a modified _get_s_n_for_t() function that results in a large time saving. Currently the script takes about 7.8 minutes to run on a simulated dataset of 10,000 points. The proposed changes result in a running time of 0.45 minutes on the same dataset.\r\n\r\nThis also removes the need for _get_values_diff(), as it adds unnecessary overhead.\r\n\r\nCan you please point me to where I can do your unit testing for this? I have no apparent issues on my local environment, however before I create a PR I would like to be certain. I will edit this issue and create a PR once the new script passes.\r\n\r\nThanks guys","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/417/timeline","performed_via_github_app":null,"state_reason":null}