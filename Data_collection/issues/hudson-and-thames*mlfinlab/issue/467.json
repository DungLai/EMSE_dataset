{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/467","repository_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab","labels_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/467/labels{/name}","comments_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/467/comments","events_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/467/events","html_url":"https://github.com/hudson-and-thames/mlfinlab/issues/467","id":734090892,"node_id":"MDU6SXNzdWU3MzQwOTA4OTI=","number":467,"title":"Update numpy and matplotlib","user":{"login":"diegolovison","id":687311,"node_id":"MDQ6VXNlcjY4NzMxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/687311?v=4","gravatar_id":"","url":"https://api.github.com/users/diegolovison","html_url":"https://github.com/diegolovison","followers_url":"https://api.github.com/users/diegolovison/followers","following_url":"https://api.github.com/users/diegolovison/following{/other_user}","gists_url":"https://api.github.com/users/diegolovison/gists{/gist_id}","starred_url":"https://api.github.com/users/diegolovison/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/diegolovison/subscriptions","organizations_url":"https://api.github.com/users/diegolovison/orgs","repos_url":"https://api.github.com/users/diegolovison/repos","events_url":"https://api.github.com/users/diegolovison/events{/privacy}","received_events_url":"https://api.github.com/users/diegolovison/received_events","type":"User","site_admin":false},"labels":[{"id":1232033405,"node_id":"MDU6TGFiZWwxMjMyMDMzNDA1","url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":{"login":"aditya1702","id":15054664,"node_id":"MDQ6VXNlcjE1MDU0NjY0","avatar_url":"https://avatars.githubusercontent.com/u/15054664?v=4","gravatar_id":"","url":"https://api.github.com/users/aditya1702","html_url":"https://github.com/aditya1702","followers_url":"https://api.github.com/users/aditya1702/followers","following_url":"https://api.github.com/users/aditya1702/following{/other_user}","gists_url":"https://api.github.com/users/aditya1702/gists{/gist_id}","starred_url":"https://api.github.com/users/aditya1702/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aditya1702/subscriptions","organizations_url":"https://api.github.com/users/aditya1702/orgs","repos_url":"https://api.github.com/users/aditya1702/repos","events_url":"https://api.github.com/users/aditya1702/events{/privacy}","received_events_url":"https://api.github.com/users/aditya1702/received_events","type":"User","site_admin":false},"assignees":[{"login":"aditya1702","id":15054664,"node_id":"MDQ6VXNlcjE1MDU0NjY0","avatar_url":"https://avatars.githubusercontent.com/u/15054664?v=4","gravatar_id":"","url":"https://api.github.com/users/aditya1702","html_url":"https://github.com/aditya1702","followers_url":"https://api.github.com/users/aditya1702/followers","following_url":"https://api.github.com/users/aditya1702/following{/other_user}","gists_url":"https://api.github.com/users/aditya1702/gists{/gist_id}","starred_url":"https://api.github.com/users/aditya1702/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aditya1702/subscriptions","organizations_url":"https://api.github.com/users/aditya1702/orgs","repos_url":"https://api.github.com/users/aditya1702/repos","events_url":"https://api.github.com/users/aditya1702/events{/privacy}","received_events_url":"https://api.github.com/users/aditya1702/received_events","type":"User","site_admin":false},{"login":"PanPip","id":16906989,"node_id":"MDQ6VXNlcjE2OTA2OTg5","avatar_url":"https://avatars.githubusercontent.com/u/16906989?v=4","gravatar_id":"","url":"https://api.github.com/users/PanPip","html_url":"https://github.com/PanPip","followers_url":"https://api.github.com/users/PanPip/followers","following_url":"https://api.github.com/users/PanPip/following{/other_user}","gists_url":"https://api.github.com/users/PanPip/gists{/gist_id}","starred_url":"https://api.github.com/users/PanPip/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PanPip/subscriptions","organizations_url":"https://api.github.com/users/PanPip/orgs","repos_url":"https://api.github.com/users/PanPip/repos","events_url":"https://api.github.com/users/PanPip/events{/privacy}","received_events_url":"https://api.github.com/users/PanPip/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2020-11-01T23:43:36Z","updated_at":"2021-04-14T16:55:31Z","closed_at":"2021-04-14T16:55:30Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, I understand that mlfinlab updates the libraries once a year.\r\n\r\nI am going to share an example that is failing with the current version but working in the new version\r\n\r\n````python\r\nimport numpy as np\r\nfrom pylab import plt\r\nimport matplotlib\r\nprint(matplotlib.__version__)\r\nprint(np.version.version)\r\n\r\nperformances = [0.8766503918500224,\r\n 0.9483496522283008,\r\n 0.8971438157311931,\r\n 0.9564538602970528,\r\n 0.8956151819637662,\r\n 0.9251930253303462,\r\n 0.9808553409008813,\r\n 1.6245796215500021,\r\n 0.8528110300246489,\r\n 0.9503838274572264]\r\nvperformances = [1.7461700749265148,\r\n 1.7461700749265148,\r\n 1.7461700749265148,\r\n 1.7461700749265148,\r\n 1.7461700749265148,\r\n 1.6147913654678192,\r\n 1.0189039404435762,\r\n 1.35568113011175,\r\n 1.580204144180501,\r\n 1.137933587102881]\r\n\r\ndef plot_performance(performances, vperformances, val):\r\n    ''' Function to plot the financial gross\r\n        performance per training episode.\r\n    '''\r\n    plt.figure(figsize=(10, 6))\r\n    x = range(1, len(performances) + 1)\r\n    y = np.polyval(np.polyfit(x, performances, deg=3), x)\r\n    plt.plot(x, performances[:], label='training')\r\n    plt.plot(x, y, 'r--', label='regression (train)')\r\n    if val:\r\n        y_ = np.polyval(np.polyfit(x, vperformances, deg=3), x)\r\n        plt.plot(x, vperformances[:], label='validation')\r\n        plt.plot(x, y_, 'r-.', label='regression (valid)')\r\n    plt.xlabel('episodes')\r\n    plt.ylabel('gross performance')\r\n    plt.legend()\r\nplot_performance(performances, vperformances, True)\r\n````\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nLinAlgError                               Traceback (most recent call last)\r\n<ipython-input-12-73145e84487c> in <module>\r\n     42     plt.ylabel('gross performance')\r\n     43     plt.legend()\r\n---> 44 plot_performance(performances, vperformances, True)\r\n\r\n<ipython-input-12-73145e84487c> in plot_performance(performances, vperformances, val)\r\n     36     plt.plot(x, y, 'r--', label='regression (train)')\r\n     37     if val:\r\n---> 38         y_ = np.polyval(np.polyfit(x, vperformances, deg=3), x)\r\n     39         plt.plot(x, vperformances[:], label='validation')\r\n     40         plt.plot(x, y_, 'r-.', label='regression (valid)')\r\n\r\n<__array_function__ internals> in polyfit(*args, **kwargs)\r\n\r\nD:\\anaconda3\\envs\\aiif\\lib\\site-packages\\numpy\\lib\\polynomial.py in polyfit(x, y, deg, rcond, full, w, cov)\r\n    629     scale = NX.sqrt((lhs*lhs).sum(axis=0))\r\n    630     lhs /= scale\r\n--> 631     c, resids, rank, s = lstsq(lhs, rhs, rcond)\r\n    632     c = (c.T/scale).T  # broadcast scale coefficients\r\n    633 \r\n\r\n<__array_function__ internals> in lstsq(*args, **kwargs)\r\n\r\nD:\\anaconda3\\envs\\aiif\\lib\\site-packages\\numpy\\linalg\\linalg.py in lstsq(a, b, rcond)\r\n   2257         # lapack can't handle n_rhs = 0 - so allocate the array one larger in that axis\r\n   2258         b = zeros(b.shape[:-2] + (m, n_rhs + 1), dtype=b.dtype)\r\n-> 2259     x, resids, rank, s = gufunc(a, b, rcond, signature=signature, extobj=extobj)\r\n   2260     if m == 0:\r\n   2261         x[...] = 0\r\n\r\nD:\\anaconda3\\envs\\aiif\\lib\\site-packages\\numpy\\linalg\\linalg.py in _raise_linalgerror_lstsq(err, flag)\r\n    107 \r\n    108 def _raise_linalgerror_lstsq(err, flag):\r\n--> 109     raise LinAlgError(\"SVD did not converge in Linear Least Squares\")\r\n    110 \r\n    111 def get_linalg_error_extobj(callback):\r\n\r\nLinAlgError: SVD did not converge in Linear Least Squares\r\n```\r\n\r\nIf I use the following version, it is working.\r\n\r\n\r\n```\r\nmatplotlib 3.2.1\r\nnumpy 1.19.1\r\n```\r\n\r\nSource from: O'Reilly, 2020: AI in Finance.","closed_by":{"login":"PanPip","id":16906989,"node_id":"MDQ6VXNlcjE2OTA2OTg5","avatar_url":"https://avatars.githubusercontent.com/u/16906989?v=4","gravatar_id":"","url":"https://api.github.com/users/PanPip","html_url":"https://github.com/PanPip","followers_url":"https://api.github.com/users/PanPip/followers","following_url":"https://api.github.com/users/PanPip/following{/other_user}","gists_url":"https://api.github.com/users/PanPip/gists{/gist_id}","starred_url":"https://api.github.com/users/PanPip/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PanPip/subscriptions","organizations_url":"https://api.github.com/users/PanPip/orgs","repos_url":"https://api.github.com/users/PanPip/repos","events_url":"https://api.github.com/users/PanPip/events{/privacy}","received_events_url":"https://api.github.com/users/PanPip/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/467/timeline","performed_via_github_app":null,"state_reason":"completed"}