{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/194","repository_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab","labels_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/194/comments","events_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/194/events","html_url":"https://github.com/hudson-and-thames/mlfinlab/issues/194","id":565777880,"node_id":"MDU6SXNzdWU1NjU3Nzc4ODA=","number":194,"title":"mlfinlab could be nan friendly with correlations","user":{"login":"rspadim","id":2468782,"node_id":"MDQ6VXNlcjI0Njg3ODI=","avatar_url":"https://avatars.githubusercontent.com/u/2468782?v=4","gravatar_id":"","url":"https://api.github.com/users/rspadim","html_url":"https://github.com/rspadim","followers_url":"https://api.github.com/users/rspadim/followers","following_url":"https://api.github.com/users/rspadim/following{/other_user}","gists_url":"https://api.github.com/users/rspadim/gists{/gist_id}","starred_url":"https://api.github.com/users/rspadim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rspadim/subscriptions","organizations_url":"https://api.github.com/users/rspadim/orgs","repos_url":"https://api.github.com/users/rspadim/repos","events_url":"https://api.github.com/users/rspadim/events{/privacy}","received_events_url":"https://api.github.com/users/rspadim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-02-15T16:55:12Z","updated_at":"2020-02-16T00:28:25Z","closed_at":"2020-02-16T00:27:51Z","author_association":"NONE","active_lock_reason":null,"body":"when using correlation metrics, a NaN value raise an error with single numpy correlation, with pandas we don't have this problem, example of error using the get_mutual_info() function:\r\n\r\n```\r\n<ipython-input-184-416ea2366fe2> in get_mutual_info(x, y, n_bins, normalize)\r\n     36     if n_bins is None:\r\n     37         corr_coef = np.corrcoef(x, y)[0][1]\r\n---> 38         n_bins = get_optimal_number_of_bins(x.shape[0], corr_coef=corr_coef)\r\n     39 \r\n     40     contingency = np.histogram2d(x, y, n_bins)[0]\r\n\r\n<ipython-input-184-416ea2366fe2> in get_optimal_number_of_bins(num_obs, corr_coef)\r\n     19     else:\r\n     20         bins = round(2 ** -.5 * (1 + (1 + 24 * num_obs / (1. - corr_coef ** 2)) ** .5) ** .5)\r\n---> 21     return int(bins)\r\n     22 \r\n     23 \r\n\r\nValueError: cannot convert float NaN to integer\r\n```\r\n\r\nexample of friendly corrcoef using numpy.ma:\r\n\r\n```\r\nimport numpy as np\r\nimport numpy.ma as ma\r\n\r\nA = [1, 2, 3, 4, 5, np.NaN]\r\nB = [2, 3, 4, 5.25, np.NaN, 100]\r\n\r\nprint(ma.corrcoef(ma.masked_invalid(A), ma.masked_invalid(B)))\r\n```","closed_by":{"login":"rspadim","id":2468782,"node_id":"MDQ6VXNlcjI0Njg3ODI=","avatar_url":"https://avatars.githubusercontent.com/u/2468782?v=4","gravatar_id":"","url":"https://api.github.com/users/rspadim","html_url":"https://github.com/rspadim","followers_url":"https://api.github.com/users/rspadim/followers","following_url":"https://api.github.com/users/rspadim/following{/other_user}","gists_url":"https://api.github.com/users/rspadim/gists{/gist_id}","starred_url":"https://api.github.com/users/rspadim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rspadim/subscriptions","organizations_url":"https://api.github.com/users/rspadim/orgs","repos_url":"https://api.github.com/users/rspadim/repos","events_url":"https://api.github.com/users/rspadim/events{/privacy}","received_events_url":"https://api.github.com/users/rspadim/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/194/timeline","performed_via_github_app":null,"state_reason":"completed"}