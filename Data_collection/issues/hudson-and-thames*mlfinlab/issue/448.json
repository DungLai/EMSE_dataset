{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/448","repository_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab","labels_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/448/labels{/name}","comments_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/448/comments","events_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/448/events","html_url":"https://github.com/hudson-and-thames/mlfinlab/issues/448","id":677412638,"node_id":"MDU6SXNzdWU2Nzc0MTI2Mzg=","number":448,"title":"Importing get_weights_by_return() throws numba-related error","user":{"login":"pmgh2345","id":16248399,"node_id":"MDQ6VXNlcjE2MjQ4Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/16248399?v=4","gravatar_id":"","url":"https://api.github.com/users/pmgh2345","html_url":"https://github.com/pmgh2345","followers_url":"https://api.github.com/users/pmgh2345/followers","following_url":"https://api.github.com/users/pmgh2345/following{/other_user}","gists_url":"https://api.github.com/users/pmgh2345/gists{/gist_id}","starred_url":"https://api.github.com/users/pmgh2345/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmgh2345/subscriptions","organizations_url":"https://api.github.com/users/pmgh2345/orgs","repos_url":"https://api.github.com/users/pmgh2345/repos","events_url":"https://api.github.com/users/pmgh2345/events{/privacy}","received_events_url":"https://api.github.com/users/pmgh2345/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-08-12T05:53:33Z","updated_at":"2020-11-23T14:11:55Z","closed_at":"2020-08-29T11:24:08Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nAfter much trouble installing mlfinlab (first Visual C++ version, then an issue whereby pip couldn't uninstall llvmlite as part of the mlfinlab install, preventing installation), I was finally able to do so with ` pip install mlfinlab --ignore-installed llvmlite`\r\n\r\nThen, returning to a script I have that makes use of get_weights_by_return(), simply importing that function threw me the following error:\r\n\r\n> ~\\Desktop\\Python\\Project\\prepare_modeling_data.py in <module>\r\n      4 \r\n      5 import pandas as pd, numpy as np\r\n----> 6 from mlfinlab.sample_weights.attribution import get_weights_by_return\r\n      7 from sklearn.model_selection import train_test_split\r\n      8 \r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\mlfinlab\\__init__.py in <module>\r\n      7 \r\n      8 import mlfinlab.cross_validation as cross_validation\r\n----> 9 import mlfinlab.data_structures as data_structures\r\n     10 import mlfinlab.datasets as datasets\r\n     11 import mlfinlab.multi_product as multi_product\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\mlfinlab\\data_structures\\__init__.py in <module>\r\n     14 \"\"\"\r\n     15 \r\n---> 16 from mlfinlab.data_structures.imbalance_data_structures import get_ema_dollar_imbalance_bars, \\\r\n     17     get_ema_volume_imbalance_bars, \\\r\n     18     get_ema_tick_imbalance_bars, get_const_dollar_imbalance_bars, get_const_volume_imbalance_bars, \\\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\mlfinlab\\data_structures\\imbalance_data_structures.py in <module>\r\n     27 import pandas as pd\r\n     28 \r\n---> 29 from mlfinlab.data_structures.base_bars import BaseImbalanceBars\r\n     30 from mlfinlab.util.fast_ewma import ewma\r\n     31 \r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\mlfinlab\\data_structures\\base_bars.py in <module>\r\n     10 import pandas as pd\r\n     11 \r\n---> 12 from mlfinlab.util.fast_ewma import ewma\r\n     13 \r\n     14 \r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\mlfinlab\\util\\__init__.py in <module>\r\n      3 \"\"\"\r\n      4 \r\n----> 5 from mlfinlab.util.fast_ewma import ewma\r\n      6 from mlfinlab.util.multiprocess import expand_call, lin_parts, mp_pandas_obj, nested_parts, process_jobs, process_jobs_, \\\r\n      7     report_progress\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\mlfinlab\\util\\fast_ewma.py in <module>\r\n      7 # Imports\r\n      8 import numpy as np\r\n----> 9 from numba import jit\r\n     10 from numba import float64\r\n     11 from numba import int64\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\__init__.py in <module>\r\n    296 \r\n    297 # Initialize typed containers\r\n--> 298 import numba.typed\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\typed\\__init__.py in <module>\r\n----> 1 from .typeddict import Dict\r\n      2 from .typedlist import List\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\typed\\typeddict.py in <module>\r\n     20 \r\n     21 \r\n---> 22 @njit\r\n     23 def _make_dict(keyty, valty):\r\n     24     return dictobject._as_meminfo(dictobject.new_dict(keyty, valty))\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\decorators.py in njit(*args, **kws)\r\n    234         warnings.warn('forceobj is set for njit and is ignored', RuntimeWarning)\r\n    235     kws.update({'nopython': True})\r\n--> 236     return jit(*args, **kws)\r\n    237 \r\n    238 \r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\decorators.py in jit(signature_or_function, locals, target, cache, pipeline_class, boundscheck, **options)\r\n    171                    targetoptions=options, **dispatcher_args)\r\n    172     if pyfunc is not None:\r\n--> 173         return wrapper(pyfunc)\r\n    174     else:\r\n    175         return wrapper\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\decorators.py in wrapper(func)\r\n    187         disp = dispatcher(py_func=func, locals=locals,\r\n    188                           targetoptions=targetoptions,\r\n--> 189                           **dispatcher_args)\r\n    190         if cache:\r\n    191             disp.enable_caching()\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\dispatcher.py in __init__(self, py_func, locals, targetoptions, impl_kind, pipeline_class)\r\n    668         \"\"\"\r\n    669         self.typingctx = self.targetdescr.typing_context\r\n--> 670         self.targetctx = self.targetdescr.target_context\r\n    671 \r\n    672         pysig = utils.pysignature(py_func)\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\registry.py in target_context(self)\r\n     45             return nested\r\n     46         else:\r\n---> 47             return self._toplevel_target_context\r\n     48 \r\n     49     @property\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\utils.py in __get__(self, instance, type)\r\n    330         if instance is None:\r\n    331             return self\r\n--> 332         res = instance.__dict__[self.name] = self.func(instance)\r\n    333         return res\r\n    334 \r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\registry.py in _toplevel_target_context(self)\r\n     29     def _toplevel_target_context(self):\r\n     30         # Lazily-initialized top-level target context, for all threads\r\n---> 31         return cpu.CPUContext(self.typing_context)\r\n     32 \r\n     33     @utils.cached_property\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\base.py in __init__(self, typing_context)\r\n    257 \r\n    258         # Initialize\r\n--> 259         self.init()\r\n    260 \r\n    261     def init(self):\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\compiler_lock.py in _acquire_compile_lock(*args, **kwargs)\r\n     30         def _acquire_compile_lock(*args, **kwargs):\r\n     31             with self:\r\n---> 32                 return func(*args, **kwargs)\r\n     33         return _acquire_compile_lock\r\n     34 \r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\cpu.py in init(self)\r\n     45     def init(self):\r\n     46         self.is32bit = (utils.MACHINE_BITS == 32)\r\n---> 47         self._internal_codegen = codegen.JITCPUCodegen(\"numba.exec\")\r\n     48 \r\n     49         # Add ARM ABI functions from libgcc_s\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\codegen.py in __init__(self, module_name)\r\n    643         self._llvm_module.name = \"global_codegen_module\"\r\n    644         self._rtlinker = RuntimeLinker()\r\n--> 645         self._init(self._llvm_module)\r\n    646 \r\n    647     def _init(self, llvm_module):\r\n\r\n~\\Anaconda3\\envs\\x2\\lib\\site-packages\\numba\\core\\codegen.py in _init(self, llvm_module)\r\n    652         self._tm_features = self._customize_tm_features()\r\n    653         self._customize_tm_options(tm_options)\r\n--> 654         tm = target.create_target_machine(**tm_options)\r\n    655         engine = ll.create_mcjit_compiler(llvm_module, tm)\r\n    656 \r\n\r\nTypeError: create_target_machine() got an unexpected keyword argument 'jitdebug'\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n`from mlfinlab.sample_weights.attribution import get_weights_by_return`\r\n\r\n**Expected behavior**\r\nI have had no problem running this before my last conda environment crashed.  Nevertheless, I have checked my package versions vs. mlfinlab's dependencies and everything is up to date- numba 0.49.1 and llvmlite 0.33.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. iOS]\r\n - Browser [e.g. chrome, safari]\r\n - Version [e.g. 22]\r\n\r\n**Smartphone (please complete the following information):**\r\n - Device: [e.g. iPhone6]\r\n - OS: [e.g. iOS8.1]\r\n - Browser [e.g. stock browser, safari]\r\n - Version [e.g. 22]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","closed_by":{"login":"Jackal08","id":6911714,"node_id":"MDQ6VXNlcjY5MTE3MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6911714?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackal08","html_url":"https://github.com/Jackal08","followers_url":"https://api.github.com/users/Jackal08/followers","following_url":"https://api.github.com/users/Jackal08/following{/other_user}","gists_url":"https://api.github.com/users/Jackal08/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackal08/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackal08/subscriptions","organizations_url":"https://api.github.com/users/Jackal08/orgs","repos_url":"https://api.github.com/users/Jackal08/repos","events_url":"https://api.github.com/users/Jackal08/events{/privacy}","received_events_url":"https://api.github.com/users/Jackal08/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/448/timeline","performed_via_github_app":null,"state_reason":"completed"}