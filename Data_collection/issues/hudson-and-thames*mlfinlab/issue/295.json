{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/295","repository_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab","labels_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/295/labels{/name}","comments_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/295/comments","events_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/295/events","html_url":"https://github.com/hudson-and-thames/mlfinlab/issues/295","id":610877981,"node_id":"MDU6SXNzdWU2MTA4Nzc5ODE=","number":295,"title":"PurgedKFold: training events can overlap with testing events","user":{"login":"tdoublep","id":7945038,"node_id":"MDQ6VXNlcjc5NDUwMzg=","avatar_url":"https://avatars.githubusercontent.com/u/7945038?v=4","gravatar_id":"","url":"https://api.github.com/users/tdoublep","html_url":"https://github.com/tdoublep","followers_url":"https://api.github.com/users/tdoublep/followers","following_url":"https://api.github.com/users/tdoublep/following{/other_user}","gists_url":"https://api.github.com/users/tdoublep/gists{/gist_id}","starred_url":"https://api.github.com/users/tdoublep/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdoublep/subscriptions","organizations_url":"https://api.github.com/users/tdoublep/orgs","repos_url":"https://api.github.com/users/tdoublep/repos","events_url":"https://api.github.com/users/tdoublep/events{/privacy}","received_events_url":"https://api.github.com/users/tdoublep/received_events","type":"User","site_admin":false},"labels":[{"id":1232033405,"node_id":"MDU6TGFiZWwxMjMyMDMzNDA1","url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"open","locked":false,"assignee":{"login":"imcu","id":2884107,"node_id":"MDQ6VXNlcjI4ODQxMDc=","avatar_url":"https://avatars.githubusercontent.com/u/2884107?v=4","gravatar_id":"","url":"https://api.github.com/users/imcu","html_url":"https://github.com/imcu","followers_url":"https://api.github.com/users/imcu/followers","following_url":"https://api.github.com/users/imcu/following{/other_user}","gists_url":"https://api.github.com/users/imcu/gists{/gist_id}","starred_url":"https://api.github.com/users/imcu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imcu/subscriptions","organizations_url":"https://api.github.com/users/imcu/orgs","repos_url":"https://api.github.com/users/imcu/repos","events_url":"https://api.github.com/users/imcu/events{/privacy}","received_events_url":"https://api.github.com/users/imcu/received_events","type":"User","site_admin":false},"assignees":[{"login":"imcu","id":2884107,"node_id":"MDQ6VXNlcjI4ODQxMDc=","avatar_url":"https://avatars.githubusercontent.com/u/2884107?v=4","gravatar_id":"","url":"https://api.github.com/users/imcu","html_url":"https://github.com/imcu","followers_url":"https://api.github.com/users/imcu/followers","following_url":"https://api.github.com/users/imcu/following{/other_user}","gists_url":"https://api.github.com/users/imcu/gists{/gist_id}","starred_url":"https://api.github.com/users/imcu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imcu/subscriptions","organizations_url":"https://api.github.com/users/imcu/orgs","repos_url":"https://api.github.com/users/imcu/repos","events_url":"https://api.github.com/users/imcu/events{/privacy}","received_events_url":"https://api.github.com/users/imcu/received_events","type":"User","site_admin":false},{"login":"proskurin","id":14288229,"node_id":"MDQ6VXNlcjE0Mjg4MjI5","avatar_url":"https://avatars.githubusercontent.com/u/14288229?v=4","gravatar_id":"","url":"https://api.github.com/users/proskurin","html_url":"https://github.com/proskurin","followers_url":"https://api.github.com/users/proskurin/followers","following_url":"https://api.github.com/users/proskurin/following{/other_user}","gists_url":"https://api.github.com/users/proskurin/gists{/gist_id}","starred_url":"https://api.github.com/users/proskurin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/proskurin/subscriptions","organizations_url":"https://api.github.com/users/proskurin/orgs","repos_url":"https://api.github.com/users/proskurin/repos","events_url":"https://api.github.com/users/proskurin/events{/privacy}","received_events_url":"https://api.github.com/users/proskurin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2020-05-01T17:46:55Z","updated_at":"2022-04-02T11:16:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nPurgedKFold class creates folds such that events in the training set can overlap with events in the test set. In particular, such training events *end* during same timeframe that test events are happening (i.e., the opposite of the problem solved by embargo). \r\n\r\n**To Reproduce**\r\n```Python\r\nimport datetime\r\nimport pandas as pd\r\nimport mlfinlab as ml\r\n\r\n# start date\r\nstart = datetime.datetime.strptime(\"01-01-2020\", \"%d-%m-%Y\")\r\n\r\n# 10 events, starting times are offset by 1 day\r\nstart_dates = [start + datetime.timedelta(days=x) for x in range(10)]\r\n\r\n# each event lasts for 2 days\r\nend_dates = [start + datetime.timedelta(days=2) for start in start_dates]\r\n\r\n# create series (index=start date, values=end date)\r\ndf = pd.Series(index=start_dates, data=end_dates)\r\n\r\n# splitter\r\nsplitter = ml.cross_validation.PurgedKFold(n_splits=2, samples_info_sets=df)\r\n\r\n# print off folds\r\nfor k, (train_ind, test_ind) in enumerate(splitter.split(df)):\r\n    print(\"------ %d-th fold ------\" % (k))\r\n    print(\">> Training events:\")\r\n    print(df.iloc[train_ind])\r\n    print(\">> Test events:\")\r\n    print(df.iloc[test_ind])\r\n```\r\nProduces the following:\r\n<pre>\r\n------ 0-th fold ------\r\n>> Training events:\r\n2020-01-08   2020-01-10\r\n2020-01-09   2020-01-11\r\n2020-01-10   2020-01-12\r\ndtype: datetime64[ns]\r\n>> Test events:\r\n2020-01-01   2020-01-03\r\n2020-01-02   2020-01-04\r\n2020-01-03   2020-01-05\r\n2020-01-04   2020-01-06\r\n2020-01-05   2020-01-07\r\ndtype: datetime64[ns]\r\n------ 1-th fold ------\r\n>> Training events:\r\n2020-01-01   2020-01-03\r\n2020-01-02   2020-01-04\r\n2020-01-03   2020-01-05\r\n2020-01-04   2020-01-06\r\n<b>2020-01-05   2020-01-07</b>\r\ndtype: datetime64[ns]\r\n>> Test events:\r\n<b>2020-01-06   2020-01-08</b>\r\n2020-01-07   2020-01-09\r\n2020-01-08   2020-01-10\r\n2020-01-09   2020-01-11\r\n2020-01-10   2020-01-12\r\ndtype: datetime64[ns]\r\n</pre>\r\nThe overlapping events above are highlighted in bold.\r\n\r\n**Possible cause/solution**\r\n\r\nI believe this problem is related to the definition to `test_times` here:\r\nhttps://github.com/hudson-and-thames/mlfinlab/blob/master/mlfinlab/cross_validation/cross_validation.py#L91\r\nIn particular, the test window is set to start from the *end* of the first event in the test set, to the *end* of the last event in the test set:\r\n```Python\r\ntest_times = pd.Series(index=[self.samples_info_sets[start_ix]], data=[self.samples_info_sets[end_ix-1]])\r\n```\r\nIt could be fixed by defining the test window to start from the *start* for the first event in the test, to the *end* of the last event in the test set:\r\n```Python\r\ntest_times = pd.Series(index=[self.samples_info_sets.index[start_ix]], data=[self.samples_info_sets[end_ix-1]])\r\n```\r\nI'm relatively new to the codebase, maybe I misuderstand something?\r\n\r\n**Package versions**\r\n```bash\r\n$ pip freeze | grep 'mlfinlab\\|pandas'\r\nmlfinlab==0.9.3\r\npandas==0.25.3\r\n```\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hudson-and-thames/mlfinlab/issues/295/timeline","performed_via_github_app":null,"state_reason":null}