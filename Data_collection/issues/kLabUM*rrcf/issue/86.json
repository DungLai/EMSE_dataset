{"url":"https://api.github.com/repos/kLabUM/rrcf/issues/86","repository_url":"https://api.github.com/repos/kLabUM/rrcf","labels_url":"https://api.github.com/repos/kLabUM/rrcf/issues/86/labels{/name}","comments_url":"https://api.github.com/repos/kLabUM/rrcf/issues/86/comments","events_url":"https://api.github.com/repos/kLabUM/rrcf/issues/86/events","html_url":"https://github.com/kLabUM/rrcf/issues/86","id":818953988,"node_id":"MDU6SXNzdWU4MTg5NTM5ODg=","number":86,"title":"Feature Request - Handling of NaNs","user":{"login":"shaye059","id":24394743,"node_id":"MDQ6VXNlcjI0Mzk0NzQz","avatar_url":"https://avatars.githubusercontent.com/u/24394743?v=4","gravatar_id":"","url":"https://api.github.com/users/shaye059","html_url":"https://github.com/shaye059","followers_url":"https://api.github.com/users/shaye059/followers","following_url":"https://api.github.com/users/shaye059/following{/other_user}","gists_url":"https://api.github.com/users/shaye059/gists{/gist_id}","starred_url":"https://api.github.com/users/shaye059/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shaye059/subscriptions","organizations_url":"https://api.github.com/users/shaye059/orgs","repos_url":"https://api.github.com/users/shaye059/repos","events_url":"https://api.github.com/users/shaye059/events{/privacy}","received_events_url":"https://api.github.com/users/shaye059/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-03-01T15:04:02Z","updated_at":"2021-03-01T15:19:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently, having any NaN values in the numpy array leads to the following error when trying to build a RCTree:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-55-8f8be9d6cf46> in <module>\r\n----> 1 tree = rrcf.RCTree(data_anom.sample(1000, random_state=111).to_numpy())\r\n\r\n~\\anaconda3\\envs\\squarefeetenv\\lib\\site-packages\\rrcf\\rrcf.py in __init__(self, X, index_labels, precision, random_state)\r\n    104             # Create RRC Tree\r\n    105             S = np.ones(n, dtype=np.bool)\r\n--> 106             self._mktree(X, S, N, I, parent=self)\r\n    107             # Remove parent of root\r\n    108             self.root.u = None\r\n\r\n~\\anaconda3\\envs\\squarefeetenv\\lib\\site-packages\\rrcf\\rrcf.py in _mktree(self, X, S, N, I, parent, side, depth)\r\n    170         depth += 1\r\n    171         # Create a cut according to definition 1\r\n--> 172         S1, S2, branch = self._cut(X, S, parent=parent, side=side)\r\n    173         # If S1 does not contain an isolated point...\r\n    174         if S1.sum() > 1:\r\n\r\n~\\anaconda3\\envs\\squarefeetenv\\lib\\site-packages\\rrcf\\rrcf.py in _cut(self, X, S, parent, side)\r\n    152         l /= l.sum()\r\n    153         # Determine dimension to cut\r\n--> 154         q = self.rng.choice(self.ndim, p=l)\r\n    155         # Determine value for split\r\n    156         p = self.rng.uniform(xmin[q], xmax[q])\r\n\r\nmtrand.pyx in numpy.random.mtrand.RandomState.choice()\r\n\r\nValueError: probabilities contain NaN\r\n```\r\n\r\nFilling NaNs with mean or median column values is probably the best way to handle this so perhaps having it as a built-in option would be helpful. Maybe it could be an optional parameter during the creation of a RCTree with the default handling set to None?\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/kLabUM/rrcf/issues/86/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kLabUM/rrcf/issues/86/timeline","performed_via_github_app":null,"state_reason":null}