{"url":"https://api.github.com/repos/kLabUM/rrcf/issues/89","repository_url":"https://api.github.com/repos/kLabUM/rrcf","labels_url":"https://api.github.com/repos/kLabUM/rrcf/issues/89/labels{/name}","comments_url":"https://api.github.com/repos/kLabUM/rrcf/issues/89/comments","events_url":"https://api.github.com/repos/kLabUM/rrcf/issues/89/events","html_url":"https://github.com/kLabUM/rrcf/issues/89","id":903983225,"node_id":"MDU6SXNzdWU5MDM5ODMyMjU=","number":89,"title":"Wrong use of assert statements","user":{"login":"sebtrack","id":83225744,"node_id":"MDQ6VXNlcjgzMjI1NzQ0","avatar_url":"https://avatars.githubusercontent.com/u/83225744?v=4","gravatar_id":"","url":"https://api.github.com/users/sebtrack","html_url":"https://github.com/sebtrack","followers_url":"https://api.github.com/users/sebtrack/followers","following_url":"https://api.github.com/users/sebtrack/following{/other_user}","gists_url":"https://api.github.com/users/sebtrack/gists{/gist_id}","starred_url":"https://api.github.com/users/sebtrack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebtrack/subscriptions","organizations_url":"https://api.github.com/users/sebtrack/orgs","repos_url":"https://api.github.com/users/sebtrack/repos","events_url":"https://api.github.com/users/sebtrack/events{/privacy}","received_events_url":"https://api.github.com/users/sebtrack/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-27T16:48:41Z","updated_at":"2021-05-27T16:49:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I noticed that there are assert statements that are catched wrongly, if an assert statement fails it throws an `AssertionError` not `ValueError` nor `KeyError`.\r\n\r\nhttps://github.com/kLabUM/rrcf/blob/34504c14bba233f86a7dcae35d55fc84cc5b7508/rrcf/rrcf.py#L429-L438\r\n\r\nAlso consider removing all assert statements, because they are ignored if `__debug__` is not `True`. This is the case when you run in production (See [Docs](https://docs.python.org/3/reference/simple_stmts.html#assert)).\r\n\r\nThe lines could be rewritten as:\r\n```python\r\n        if not point.size == self.ndim:\r\n            raise ValueError(\r\n                \"Point must be same dimension as existing points in tree.\")\r\n        # Check for existing index in leaves dict\r\n        try:\r\n            self.leaves[index]\r\n        except KeyError:\r\n            raise KeyError(\"Index already exists in leaves dict.\")\r\n```\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/kLabUM/rrcf/issues/89/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kLabUM/rrcf/issues/89/timeline","performed_via_github_app":null,"state_reason":null}