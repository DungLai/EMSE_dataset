{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/72","repository_url":"https://api.github.com/repos/dmlc/gluon-nlp","labels_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/72/labels{/name}","comments_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/72/comments","events_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/72/events","html_url":"https://github.com/dmlc/gluon-nlp/issues/72","id":316679162,"node_id":"MDU6SXNzdWUzMTY2NzkxNjI=","number":72,"title":"Beam search tests are flaky","user":{"login":"leezu","id":946903,"node_id":"MDQ6VXNlcjk0NjkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/946903?v=4","gravatar_id":"","url":"https://api.github.com/users/leezu","html_url":"https://github.com/leezu","followers_url":"https://api.github.com/users/leezu/followers","following_url":"https://api.github.com/users/leezu/following{/other_user}","gists_url":"https://api.github.com/users/leezu/gists{/gist_id}","starred_url":"https://api.github.com/users/leezu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leezu/subscriptions","organizations_url":"https://api.github.com/users/leezu/orgs","repos_url":"https://api.github.com/users/leezu/repos","events_url":"https://api.github.com/users/leezu/events{/privacy}","received_events_url":"https://api.github.com/users/leezu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"sxjscience","id":5178350,"node_id":"MDQ6VXNlcjUxNzgzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5178350?v=4","gravatar_id":"","url":"https://api.github.com/users/sxjscience","html_url":"https://github.com/sxjscience","followers_url":"https://api.github.com/users/sxjscience/followers","following_url":"https://api.github.com/users/sxjscience/following{/other_user}","gists_url":"https://api.github.com/users/sxjscience/gists{/gist_id}","starred_url":"https://api.github.com/users/sxjscience/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sxjscience/subscriptions","organizations_url":"https://api.github.com/users/sxjscience/orgs","repos_url":"https://api.github.com/users/sxjscience/repos","events_url":"https://api.github.com/users/sxjscience/events{/privacy}","received_events_url":"https://api.github.com/users/sxjscience/received_events","type":"User","site_admin":false},"assignees":[{"login":"sxjscience","id":5178350,"node_id":"MDQ6VXNlcjUxNzgzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5178350?v=4","gravatar_id":"","url":"https://api.github.com/users/sxjscience","html_url":"https://github.com/sxjscience","followers_url":"https://api.github.com/users/sxjscience/followers","following_url":"https://api.github.com/users/sxjscience/following{/other_user}","gists_url":"https://api.github.com/users/sxjscience/gists{/gist_id}","starred_url":"https://api.github.com/users/sxjscience/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sxjscience/subscriptions","organizations_url":"https://api.github.com/users/sxjscience/orgs","repos_url":"https://api.github.com/users/sxjscience/repos","events_url":"https://api.github.com/users/sxjscience/events{/privacy}","received_events_url":"https://api.github.com/users/sxjscience/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2018-04-23T06:32:43Z","updated_at":"2018-05-07T23:58:41Z","closed_at":"2018-05-07T23:58:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Once in a while the tests introduced in #20 will fail:\r\n\r\n ```\r\n       # Begin Testing\r\n\r\n        for vocab_num in [4, 8]:\r\n\r\n            for decoder_fn in [RNNDecoder,\r\n\r\n                               functools.partial(RNNDecoder2, use_tuple=False),\r\n\r\n                               functools.partial(RNNDecoder2, use_tuple=True)]:\r\n\r\n                decoder = decoder_fn(vocab_num=vocab_num, hidden_size=HIDDEN_SIZE)\r\n\r\n                decoder.hybridize()\r\n\r\n                decoder.initialize()\r\n\r\n                for beam_size, bos_id, eos_id, alpha, K in [(2, 1, 3, 0, 1.0),  (4, 2, 3, 1.0, 5.0)]:\r\n\r\n                    scorer = BeamSearchScorer(alpha=alpha, K=K)\r\n\r\n                    for max_length in [10, 20]:\r\n\r\n                        sampler = BeamSearchSampler(beam_size=beam_size, decoder=decoder, eos_id=eos_id,\r\n\r\n                                                    scorer=scorer, max_length=max_length)\r\n\r\n                        for batch_size in [1, 2, 5]:\r\n\r\n                            states = decoder.begin_state(batch_size)\r\n\r\n                            inputs = mx.nd.full(shape=(batch_size,), val=bos_id)\r\n\r\n                            samples, scores, valid_length = sampler(inputs, states)\r\n\r\n                            samples = samples.asnumpy()\r\n\r\n                            scores = scores.asnumpy()\r\n\r\n                            valid_length = valid_length.asnumpy()\r\n\r\n                            for i in range(batch_size):\r\n\r\n                                max_beam_valid_length = int(np.round(valid_length[i].max()))\r\n\r\n                                step_states = _fetch_step_states(states, i, beam_size)\r\n\r\n                                step_input = bos_id\r\n\r\n                                npy_samples = _npy_beam_search(decoder, scorer, step_input, step_states,\r\n\r\n                                                               eos_id, beam_size, max_length)\r\n\r\n>                               assert_allclose(npy_samples, samples[i, :, :max_beam_valid_length])\r\n\r\nE                               AssertionError: \r\n\r\nE                               Not equal to tolerance rtol=1e-07, atol=0\r\n\r\nE                               \r\n\r\nE                               (mismatch 20.8333333333%)\r\n\r\nE                                x: array([[1., 2., 0., 2., 0., 2., 0., 2., 2., 0., 2., 3.],\r\n\r\nE                                      [1., 2., 0., 2., 0., 2., 0., 2., 2., 2., 2., 3.]])\r\n\r\nE                                y: array([[1, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 3],\r\n\r\nE                                      [1, 2, 0, 2, 0, 2, 2, 0, 2, 2, 0, 3]], dtype=int32)\r\n\r\n\r\ntests/unittest/test_beam_search.py:184: AssertionError\r\n\r\n```\r\n\r\n\r\nShould we fix the seed for these tests? If so we can simply add the `@pytest.mark.seed(1)` decorator.","closed_by":{"login":"leezu","id":946903,"node_id":"MDQ6VXNlcjk0NjkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/946903?v=4","gravatar_id":"","url":"https://api.github.com/users/leezu","html_url":"https://github.com/leezu","followers_url":"https://api.github.com/users/leezu/followers","following_url":"https://api.github.com/users/leezu/following{/other_user}","gists_url":"https://api.github.com/users/leezu/gists{/gist_id}","starred_url":"https://api.github.com/users/leezu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leezu/subscriptions","organizations_url":"https://api.github.com/users/leezu/orgs","repos_url":"https://api.github.com/users/leezu/repos","events_url":"https://api.github.com/users/leezu/events{/privacy}","received_events_url":"https://api.github.com/users/leezu/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/72/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/72/timeline","performed_via_github_app":null,"state_reason":"completed"}