{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1188","repository_url":"https://api.github.com/repos/dmlc/gluon-nlp","labels_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1188/labels{/name}","comments_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1188/comments","events_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1188/events","html_url":"https://github.com/dmlc/gluon-nlp/issues/1188","id":584550858,"node_id":"MDU6SXNzdWU1ODQ1NTA4NTg=","number":1188,"title":"Report errors on type passed to first argument of constructor of BERTClassifier()","user":{"login":"jmracek","id":3057944,"node_id":"MDQ6VXNlcjMwNTc5NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/3057944?v=4","gravatar_id":"","url":"https://api.github.com/users/jmracek","html_url":"https://github.com/jmracek","followers_url":"https://api.github.com/users/jmracek/followers","following_url":"https://api.github.com/users/jmracek/following{/other_user}","gists_url":"https://api.github.com/users/jmracek/gists{/gist_id}","starred_url":"https://api.github.com/users/jmracek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmracek/subscriptions","organizations_url":"https://api.github.com/users/jmracek/orgs","repos_url":"https://api.github.com/users/jmracek/repos","events_url":"https://api.github.com/users/jmracek/events{/privacy}","received_events_url":"https://api.github.com/users/jmracek/received_events","type":"User","site_admin":false},"labels":[{"id":890393503,"node_id":"MDU6TGFiZWw4OTAzOTM1MDM=","url":"https://api.github.com/repos/dmlc/gluon-nlp/labels/enhancement","name":"enhancement","color":"135caf","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-19T16:45:57Z","updated_at":"2020-03-19T17:53:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Description\r\nApologies if this should be a bug report.  It isn't strictly a bug, but more a quality of life improvement for error reporting that would help people debug simple issues more quickly.\r\n\r\nI have been using the BERTClassifier block to work with BERT models.  I attempted to load a model I had trained in another script using the following snippet:\r\n```\r\nget_model_params = {\r\n    'name' : 'bert_12_768_12',\r\n    'vocab' : gluonnlp.vocab.BERTVocab().from_sentencepiece('/ebs/bert/my_sentencepiece.model'),\r\n    'pretrained' : False,\r\n    'ctx' : mx.cpu(),\r\n    'use_decoder' : False,\r\n    'use_classifier' : False\r\n}\r\n\r\nbert = gluonnlp.model.get_model(**get_model_params)\r\ncls = gluonnlp.model.BERTClassifier(bert, dropout=0.1)\r\ngluonnlp.utils.load_parameters(cls, '/ebs/bert/build/multigpu/my_bert_model.params', ctx=mx.gpu(0), cast_dtype=True)\r\n```\r\nWhich throws the following error:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-14-75733568e1da> in <module>()\r\n----> 1 gluonnlp.utils.load_parameters(cls, '/ebs/bert/build/multigpu/model_bert_ads_16.params', ctx=mx.gpu(0), cast_dtype=True)\r\n\r\n~/anaconda3/lib/python3.6/site-packages/gluonnlp-0.9.0.dev0-py3.6-linux-x86_64.egg/gluonnlp/utils/parameter.py in load_parameters(model, filename, ctx, allow_missing, ignore_extra, cast_dtype)\r\n    142         _s3_compatible_save_load(False, model.load_parameters, filename, ctx=ctx,\r\n    143                                  allow_missing=allow_missing, ignore_extra=ignore_extra,\r\n--> 144                                  cast_dtype=cast_dtype)\r\n    145     else:\r\n    146         _s3_compatible_save_load(False, model.load_parameters, filename, ctx=ctx,\r\n\r\n~/anaconda3/lib/python3.6/site-packages/gluonnlp-0.9.0.dev0-py3.6-linux-x86_64.egg/gluonnlp/utils/parameter.py in _s3_compatible_save_load(is_save, save_load_method, filename, *args, **kwargs)\r\n    115                 save_load_method(temp_path, *args, **kwargs)\r\n    116     else:\r\n--> 117         save_load_method(filename, *args, **kwargs)\r\n    118 \r\n    119 def load_parameters(model, filename, ctx=None, allow_missing=False,\r\n\r\n~/anaconda3/lib/python3.6/site-packages/mxnet/gluon/block.py in load_parameters(self, filename, ctx, allow_missing, ignore_extra, cast_dtype, dtype_source)\r\n    552                     \"Parameter '%s' loaded from file '%s' is not present in ParameterDict, \" \\\r\n    553                     \"which contains parameters %s. Set ignore_extra=True to ignore. \"%(\r\n--> 554                         name, filename, _brief_print_list(self._params.keys())))\r\n    555             if name in params:\r\n    556                 params[name]._load_init(loaded[name], ctx, cast_dtype=cast_dtype, dtype_source=dtype_source)\r\n\r\nValueError: Parameter 'bert.encoder.position_weight' loaded from file '/ebs/bert/build/multigpu/my_bert_model.params' is not present in ParameterDict, which contains parameters . Set ignore_extra=True to ignore. \r\n```\r\nThe error message presented is somewhat unhelpful, as it is reporting on a downstream effect of the root cause, rather than the root cause itself.  When I set `ignore_extra=True` and try `cls.collect_params()`, I'm presented with the following warning:\r\n```\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:1: UserWarning: \"BERTClassifier.bert\" is an unregistered container with Blocks. Note that Blocks inside the list, tuple or dict will not be registered automatically. Make sure to register them using register_child() or switching to nn.Sequential/nn.HybridSequential instead. \r\n  \"\"\"Entry point for launching an IPython kernel.\r\nbertclassifier3_ (\r\n  Parameter bertclassifier3_dense0_weight (shape=(2, 768), dtype=float32)\r\n  Parameter bertclassifier3_dense0_bias (shape=(2,), dtype=float32)\r\n)\r\n```\r\n\r\nOf course, the problem was that I had done something silly:\r\n```\r\nbert = gluonnlp.model.get_model(**get_model_params)\r\n```\r\nshould be\r\n```\r\nbert, vocab = gluonnlp.model.get_model(**get_model_params)\r\n```\r\n\r\nIt would have been nice if the constructor to BERTClassifier raises an exception if the detected type of the first argument is not a Block or HybridBlock.  Such an error message would have saved me a day of debugging looking at the wrong code.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1188/timeline","performed_via_github_app":null,"state_reason":null}