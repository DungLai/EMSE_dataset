{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/789","repository_url":"https://api.github.com/repos/dmlc/gluon-nlp","labels_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/789/labels{/name}","comments_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/789/comments","events_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/789/events","html_url":"https://github.com/dmlc/gluon-nlp/issues/789","id":459397747,"node_id":"MDU6SXNzdWU0NTkzOTc3NDc=","number":789,"title":"Making transformer encoder fully hybridized for export","user":{"login":"eric-haibin-lin","id":5545640,"node_id":"MDQ6VXNlcjU1NDU2NDA=","avatar_url":"https://avatars.githubusercontent.com/u/5545640?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-haibin-lin","html_url":"https://github.com/eric-haibin-lin","followers_url":"https://api.github.com/users/eric-haibin-lin/followers","following_url":"https://api.github.com/users/eric-haibin-lin/following{/other_user}","gists_url":"https://api.github.com/users/eric-haibin-lin/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-haibin-lin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-haibin-lin/subscriptions","organizations_url":"https://api.github.com/users/eric-haibin-lin/orgs","repos_url":"https://api.github.com/users/eric-haibin-lin/repos","events_url":"https://api.github.com/users/eric-haibin-lin/events{/privacy}","received_events_url":"https://api.github.com/users/eric-haibin-lin/received_events","type":"User","site_admin":false},"labels":[{"id":890393503,"node_id":"MDU6TGFiZWw4OTAzOTM1MDM=","url":"https://api.github.com/repos/dmlc/gluon-nlp/labels/enhancement","name":"enhancement","color":"135caf","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-06-21T22:48:58Z","updated_at":"2019-09-19T22:26:48Z","closed_at":"2019-09-19T22:26:48Z","author_association":"MEMBER","active_lock_reason":null,"body":"Currently BERT can be [exported](https://github.com/dmlc/gluon-nlp/blob/master/scripts/bert/export/export.py) with static length support. BERTEncoder inherits Transformer encoder, which contains a few `.shape` API calls, making the transformer encoder not fully hybridizable and create issues during export. As the result, the exported model only supports static length. These calls are located here:\r\nhttps://github.com/dmlc/gluon-nlp/blob/master/src/gluonnlp/model/transformer.py#L450-L463\r\n\r\nWe need to remove these calls to export a model that supports variable length. \r\n\r\n## handling arange\r\nIn particular, we have \r\n```\r\nlength = inputs.shape[1]\r\narange = mx.nd.arange(length, ctx=valid_length.context, dtype=valid_length.dtype)\r\n```\r\n\r\nTo remove these .shape calls, we have 2 options:\r\n### contrib.arange_like op with ndarray input\r\nInstead of `contrib.arange(arr.shape[1], ...)`, we can introduce an arange_like op:\r\n- input: `arr` with shape (x,) and abitrary data\r\n- output: an output with shape `arr.shape`, and value of `[0, 1, 2, ... size(arr) - 1]`. \r\n\r\nWith this op, we just need to slice the inputs on axis 1 and pass it to arange_like op: \r\n```\r\narr = inputs.slice(begin=(0,0,0), end=(0,None,0)\r\narange = F.contrib.arange(arr)\r\n```\r\n\r\n### control flow op\r\n\r\nAlternatively, we can use control flow op (either foreach, or while loop) to loop N times, where N = inputs.shape[1]. Loop i fills in the value i in the output \"arange\" array.\r\n\r\nHowever, this may have high overhead when N is large (512). \r\n\r\n## handling other `.shape` calls\r\n\r\n- `mask = mx.nd.broadcast_axes(mx.nd.expand_dims(mask, axis=1), axis=1, size=length)` can be replaced with `broadcast_mul` op with `ones_like(arr)`\r\n- `inputs * math.sqrt(inputs.shape[-1])` can be replace with `shape_nd` op\r\n\r\n@TaoLv ","closed_by":{"login":"eric-haibin-lin","id":5545640,"node_id":"MDQ6VXNlcjU1NDU2NDA=","avatar_url":"https://avatars.githubusercontent.com/u/5545640?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-haibin-lin","html_url":"https://github.com/eric-haibin-lin","followers_url":"https://api.github.com/users/eric-haibin-lin/followers","following_url":"https://api.github.com/users/eric-haibin-lin/following{/other_user}","gists_url":"https://api.github.com/users/eric-haibin-lin/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-haibin-lin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-haibin-lin/subscriptions","organizations_url":"https://api.github.com/users/eric-haibin-lin/orgs","repos_url":"https://api.github.com/users/eric-haibin-lin/repos","events_url":"https://api.github.com/users/eric-haibin-lin/events{/privacy}","received_events_url":"https://api.github.com/users/eric-haibin-lin/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/789/reactions","total_count":3,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/789/timeline","performed_via_github_app":null,"state_reason":"completed"}