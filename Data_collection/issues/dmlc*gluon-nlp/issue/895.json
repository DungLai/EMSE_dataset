{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/895","repository_url":"https://api.github.com/repos/dmlc/gluon-nlp","labels_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/895/labels{/name}","comments_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/895/comments","events_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/895/events","html_url":"https://github.com/dmlc/gluon-nlp/issues/895","id":484675551,"node_id":"MDU6SXNzdWU0ODQ2NzU1NTE=","number":895,"title":"Flaky test: test_skipgram_cbow","user":{"login":"eric-haibin-lin","id":5545640,"node_id":"MDQ6VXNlcjU1NDU2NDA=","avatar_url":"https://avatars.githubusercontent.com/u/5545640?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-haibin-lin","html_url":"https://github.com/eric-haibin-lin","followers_url":"https://api.github.com/users/eric-haibin-lin/followers","following_url":"https://api.github.com/users/eric-haibin-lin/following{/other_user}","gists_url":"https://api.github.com/users/eric-haibin-lin/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-haibin-lin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-haibin-lin/subscriptions","organizations_url":"https://api.github.com/users/eric-haibin-lin/orgs","repos_url":"https://api.github.com/users/eric-haibin-lin/repos","events_url":"https://api.github.com/users/eric-haibin-lin/events{/privacy}","received_events_url":"https://api.github.com/users/eric-haibin-lin/received_events","type":"User","site_admin":false},"labels":[{"id":1516016541,"node_id":"MDU6TGFiZWwxNTE2MDE2NTQx","url":"https://api.github.com/repos/dmlc/gluon-nlp/labels/CI","name":"CI","color":"e884d9","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-08-23T19:19:09Z","updated_at":"2019-08-24T10:11:50Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"http://ci.mxnet.io/blue/organizations/jenkins/GluonNLP-py3-master-gpu-integration/detail/PR-893/1/pipeline \r\n\r\n```\r\n=================================== FAILURES ===================================\r\n\r\n______________________ test_skipgram_cbow[False-skipgram] ______________________\r\n\r\n\r\n\r\nmodel = 'skipgram', fasttext = False\r\n\r\n\r\n\r\n    @pytest.mark.serial\r\n\r\n    @pytest.mark.remote_required\r\n\r\n    @pytest.mark.gpu\r\n\r\n    @pytest.mark.integration\r\n\r\n    @pytest.mark.parametrize('model', ['skipgram', 'cbow'])\r\n\r\n    @pytest.mark.parametrize('fasttext', [True, False])\r\n\r\n    def test_skipgram_cbow(model, fasttext):\r\n\r\n        cmd = [\r\n\r\n            sys.executable, './scripts/word_embeddings/train_sg_cbow.py', '--gpu', '0',\r\n\r\n            '--epochs', '2', '--model', model, '--data', 'toy', '--batch-size',\r\n\r\n            '64']\r\n\r\n        cmd += ['--similarity-datasets', 'WordSim353']\r\n\r\n        cmd += ['--analogy-datasets', 'GoogleAnalogyTestSet']\r\n\r\n        if fasttext:\r\n\r\n            cmd += ['--ngram-buckets', '1000']\r\n\r\n        else:\r\n\r\n            cmd += ['--ngram-buckets', '0']\r\n\r\n>       subprocess.check_call(cmd)\r\n\r\n\r\n\r\nscripts/tests/test_scripts.py:46: \r\n\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n\r\n\r\npopenargs = (['/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/bin/python', './scripts/word_embeddings/train_sg_cbow.py', '--gpu', '0', '--epochs', '2', ...],)\r\n\r\nkwargs = {}, retcode = 1\r\n\r\ncmd = ['/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/bin/python', './scripts/word_embeddings/train_sg_cbow.py', '--gpu', '0', '--epochs', '2', ...]\r\n\r\n\r\n\r\n    def check_call(*popenargs, **kwargs):\r\n\r\n        \"\"\"Run command with arguments.  Wait for command to complete.  If\r\n\r\n        the exit code was zero then return, otherwise raise\r\n\r\n        CalledProcessError.  The CalledProcessError object will have the\r\n\r\n        return code in the returncode attribute.\r\n\r\n    \r\n\r\n        The arguments are the same as for the call function.  Example:\r\n\r\n    \r\n\r\n        check_call([\"ls\", \"-l\"])\r\n\r\n        \"\"\"\r\n\r\n        retcode = call(*popenargs, **kwargs)\r\n\r\n        if retcode:\r\n\r\n            cmd = kwargs.get(\"args\")\r\n\r\n            if cmd is None:\r\n\r\n                cmd = popenargs[0]\r\n\r\n>           raise CalledProcessError(retcode, cmd)\r\n\r\nE           subprocess.CalledProcessError: Command '['/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/bin/python', './scripts/word_embeddings/train_sg_cbow.py', '--gpu', '0', '--epochs', '2', '--model', 'skipgram', '--data', 'toy', '--batch-size', '64', '--similarity-datasets', 'WordSim353', '--analogy-datasets', 'GoogleAnalogyTestSet', '--ngram-buckets', '0']' returned non-zero exit status 1.\r\n\r\n\r\n\r\nconda/gpu/py3-master/lib/python3.6/subprocess.py:291: CalledProcessError\r\n\r\n----------------------------- Captured stderr call -----------------------------\r\n\r\nINFO:root:Starting to count and construct vocabulary\r\n\r\nINFO:root:Finished to count and construct vocabulary in 0.01 seconds\r\n\r\nINFO:root:Starting to code data\r\n\r\nINFO:root:Finished to code data in 0.02 seconds\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"./scripts/word_embeddings/train_sg_cbow.py\", line 324, in <module>\r\n\r\n    train(args_)\r\n\r\n  File \"./scripts/word_embeddings/train_sg_cbow.py\", line 182, in train\r\n\r\n    embedding.initialize(ctx=context)\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 535, in initialize\r\n\r\n    self.collect_params().initialize(init, ctx, verbose, force_reinit)\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/gluon/parameter.py\", line 886, in initialize\r\n\r\n    v.initialize(None, ctx, init, force_reinit=force_reinit)\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/gluon/parameter.py\", line 463, in initialize\r\n\r\n    self._finish_deferred_init()\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/gluon/parameter.py\", line 347, in _finish_deferred_init\r\n\r\n    self._init_impl(data, ctx)\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/gluon/parameter.py\", line 359, in _init_impl\r\n\r\n    self._data = [data.copyto(ctx) for ctx in self._ctx_list]\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/gluon/parameter.py\", line 359, in <listcomp>\r\n\r\n    self._data = [data.copyto(ctx) for ctx in self._ctx_list]\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 2463, in copyto\r\n\r\n    hret = NDArray(_new_alloc_handle(self.shape, other, True, self.dtype))\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 142, in _new_alloc_handle\r\n\r\n    ctypes.byref(hdl)))\r\n\r\n  File \"/var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/base.py\", line 253, in check_call\r\n\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\n\r\nmxnet.base.MXNetError: [17:09:14] include/mxnet/base.h:459: Check failed: e == cudaSuccess (304 vs. 0) :  CUDA: OS call failed or operation not supported on this OS\r\n\r\nStack trace:\r\n\r\n  [bt] (0) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x509cdb) [0x7efd14083cdb]\r\n\r\n  [bt] (1) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x29eb995) [0x7efd16565995]\r\n\r\n  [bt] (2) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x33d1ef5) [0x7efd16f4bef5]\r\n\r\n  [bt] (3) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x8ff20d) [0x7efd1447920d]\r\n\r\n  [bt] (4) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/site-packages/mxnet/libmxnet.so(MXNDArrayCreateEx+0x1ff) [0x7efd1656e2cf]\r\n\r\n  [bt] (5) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/lib-dynload/../../libffi.so.6(ffi_call_unix64+0x4c) [0x7efe38ca1630]\r\n\r\n  [bt] (6) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/lib-dynload/../../libffi.so.6(ffi_call+0x22d) [0x7efe38ca0fed]\r\n\r\n  [bt] (7) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(_ctypes_callproc+0x2ce) [0x7efe38cb800e]\r\n\r\n  [bt] (8) /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/conda/gpu/py3-master/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(+0x13a45) [0x7efe38cb8a45]\r\n\r\n\r\n\r\n\r\n\r\n=============================== warnings summary ===============================\r\n\r\nsrc/gluonnlp/data/registry.py:91\r\n\r\n  /var/lib/jenkins/workspace/gluon-nlp-gpu-py3-master@2/src/gluonnlp/data/registry.py:91: UserWarning: New dataset dataset.TOY registered with name toy isoverriding existing dataset scripts.machine_translation.dataset.TOY\r\n\r\n    return register_(class_)\r\n\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/895/timeline","performed_via_github_app":null,"state_reason":null}