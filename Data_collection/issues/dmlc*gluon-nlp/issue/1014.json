{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1014","repository_url":"https://api.github.com/repos/dmlc/gluon-nlp","labels_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1014/labels{/name}","comments_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1014/comments","events_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1014/events","html_url":"https://github.com/dmlc/gluon-nlp/issues/1014","id":525179333,"node_id":"MDU6SXNzdWU1MjUxNzkzMzM=","number":1014,"title":"TransformerEncoder expects valid_length float dtype, but BERTSentenceTransform returns int dtype","user":{"login":"zeeshansayyed","id":543495,"node_id":"MDQ6VXNlcjU0MzQ5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/543495?v=4","gravatar_id":"","url":"https://api.github.com/users/zeeshansayyed","html_url":"https://github.com/zeeshansayyed","followers_url":"https://api.github.com/users/zeeshansayyed/followers","following_url":"https://api.github.com/users/zeeshansayyed/following{/other_user}","gists_url":"https://api.github.com/users/zeeshansayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/zeeshansayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zeeshansayyed/subscriptions","organizations_url":"https://api.github.com/users/zeeshansayyed/orgs","repos_url":"https://api.github.com/users/zeeshansayyed/repos","events_url":"https://api.github.com/users/zeeshansayyed/events{/privacy}","received_events_url":"https://api.github.com/users/zeeshansayyed/received_events","type":"User","site_admin":false},"labels":[{"id":890393501,"node_id":"MDU6TGFiZWw4OTAzOTM1MDE=","url":"https://api.github.com/repos/dmlc/gluon-nlp/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1689031381,"node_id":"MDU6TGFiZWwxNjg5MDMxMzgx","url":"https://api.github.com/repos/dmlc/gluon-nlp/labels/numpyrefactor","name":"numpyrefactor","color":"2f38ed","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-11-19T18:17:35Z","updated_at":"2019-11-21T02:23:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am using the bert model from gluonnlp (`bert_12_768_12`, `book_corpus_wiki_en_uncased`).\r\nSince, I wanted to be able to switch betweem bert and roberta, I am using the BERTSentenceTransform that is present on [GitHub](https://github.com/dmlc/gluon-nlp/blob/5e11334f5c00fd2875ab75c670b2595c560c30fc/src/gluonnlp/data/transforms.py#L1040-L1201) instead of the one present in the release version of 0.8.1. \r\n\r\nI created my own dataloader and other preprocessing steps very much in line with the code present in this [example](https://github.com/dmlc/gluon-nlp/blob/5e11334f5c00fd2875ab75c670b2595c560c30fc/scripts/bert/finetune_classifier.py). \r\n\r\nBut I am facing a very weird error when I try to call the forward function of my network. The stacktrace is as follows:\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/ec2-user/projects/OneEncoder/tests/test_net.py\", line 70, in <module>\r\n    output_token_ids, output_valid_length\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/ec2-user/projects/OneEncoder/net.py\", line 122, in forward\r\n    input_token_ids, input_token_types, input_valid_length\r\n  File \"/home/ec2-user/projects/OneEncoder/net.py\", line 98, in encode\r\n    input_token_ids, input_token_types, input_valid_length\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/gluonnlp/model/bert.py\", line 429, in __call__\r\n    valid_length, masked_positions)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 925, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/gluonnlp/model/bert.py\", line 442, in hybrid_forward\r\n    seq_out, attention_out = self._encode_sequence(inputs, token_types, valid_length)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/gluonnlp/model/bert.py\", line 478, in _encode_sequence\r\n    outputs, additional_outputs = self.encoder(embedding, valid_length=valid_length)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/gluonnlp/model/transformer.py\", line 445, in __call__\r\n    return super(BaseTransformerEncoder, self).__call__(inputs, states, valid_length)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/gluonnlp/model/seq2seq_encoder_decoder.py\", line 151, in __call__\r\n    return super(Seq2SeqEncoder, self).__call__(inputs, valid_length, states)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 925, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/gluonnlp/model/transformer.py\", line 507, in hybrid_forward\r\n    F.reshape(valid_length, shape=(-1, 1)))\r\n  File \"<string>\", line 46, in broadcast_lesser\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/_ctypes/ndarray.py\", line 92, in _imperative_invoke\r\n    ctypes.byref(out_stypes)))\r\n  File \"/home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/base.py\", line 253, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [18:05:40] src/operator/contrib/../elemwise_op_common.h:135: Check failed: assign(&dattr, vec.at(i)): Incompatible attr in node  at 1-th input: expected float32, got int32\r\nStack trace:\r\n  [bt] (0) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x4b04cb) [0x7f0bee4794cb]\r\n  [bt] (1) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x556b53) [0x7f0bee51fb53]\r\n  [bt] (2) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x557480) [0x7f0bee520480]\r\n  [bt] (3) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x557757) [0x7f0bee520757]\r\n  [bt] (4) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/libmxnet.so(mxnet::imperative::SetShapeType(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::DispatchMode*)+0xf68) [0x7f0bf062b5e8]\r\n  [bt] (5) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/libmxnet.so(mxnet::Imperative::Invoke(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)+0x1db) [0x7f0bf0635a0b]\r\n  [bt] (6) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x2565409) [0x7f0bf052e409]\r\n  [bt] (7) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/site-packages/mxnet/libmxnet.so(MXImperativeInvokeEx+0x6f) [0x7f0bf052e9ff]\r\n  [bt] (8) /home/ec2-user/anaconda3/envs/mtdnn/lib/python3.7/lib-dynload/../../libffi.so.6(ffi_call_unix64+0x4c) [0x7f0c2d16fec0]\r\n```\r\n\r\nSurprisingly, I do not get this error and everything works fine when I change [these lines](https://github.com/dmlc/gluon-nlp/blob/5e11334f5c00fd2875ab75c670b2595c560c30fc/src/gluonnlp/data/transforms.py#L1185-L1186) in the `BERTSentenceTransform` class as follows:\r\n\r\n```python\r\nreturn np.array(input_ids, dtype='int32'), np.array(valid_length, dtype='float32'),\\\r\n            np.array(segment_ids, dtype='int32')\r\n```\r\n\r\nI am at my wit's end trying to debug this. Please help me. Also, if you want more information about my code, I can provide.\r\n\r\nThanks\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dmlc/gluon-nlp/issues/1014/timeline","performed_via_github_app":null,"state_reason":null}