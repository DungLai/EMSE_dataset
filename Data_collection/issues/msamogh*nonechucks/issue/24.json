{"url":"https://api.github.com/repos/msamogh/nonechucks/issues/24","repository_url":"https://api.github.com/repos/msamogh/nonechucks","labels_url":"https://api.github.com/repos/msamogh/nonechucks/issues/24/labels{/name}","comments_url":"https://api.github.com/repos/msamogh/nonechucks/issues/24/comments","events_url":"https://api.github.com/repos/msamogh/nonechucks/issues/24/events","html_url":"https://github.com/msamogh/nonechucks/issues/24","id":602502424,"node_id":"MDU6SXNzdWU2MDI1MDI0MjQ=","number":24,"title":"Pytorch's IterableDataset","user":{"login":"jungerm2","id":17375657,"node_id":"MDQ6VXNlcjE3Mzc1NjU3","avatar_url":"https://avatars.githubusercontent.com/u/17375657?v=4","gravatar_id":"","url":"https://api.github.com/users/jungerm2","html_url":"https://github.com/jungerm2","followers_url":"https://api.github.com/users/jungerm2/followers","following_url":"https://api.github.com/users/jungerm2/following{/other_user}","gists_url":"https://api.github.com/users/jungerm2/gists{/gist_id}","starred_url":"https://api.github.com/users/jungerm2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungerm2/subscriptions","organizations_url":"https://api.github.com/users/jungerm2/orgs","repos_url":"https://api.github.com/users/jungerm2/repos","events_url":"https://api.github.com/users/jungerm2/events{/privacy}","received_events_url":"https://api.github.com/users/jungerm2/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-04-18T16:50:24Z","updated_at":"2021-04-30T16:01:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, I've been using this (excellent) library for a while, and I just stumbled upon a new feature in pytorch. It seems that pytorch now has an [IterableDataset](https://pytorch.org/docs/stable/data.html#torch.utils.data.IterableDataset) class that is meant to solve the exact issues that this library was trying to solve. \r\n\r\nIs this correct? I feel like nonechucks is doing more than what can be done with the class, but it seems to me, safe dataloading and transforms as filters can be done with this (provided one's careful with the multithreading). \r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/msamogh/nonechucks/issues/24/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/msamogh/nonechucks/issues/24/timeline","performed_via_github_app":null,"state_reason":null}