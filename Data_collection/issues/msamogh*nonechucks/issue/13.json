{"url":"https://api.github.com/repos/msamogh/nonechucks/issues/13","repository_url":"https://api.github.com/repos/msamogh/nonechucks","labels_url":"https://api.github.com/repos/msamogh/nonechucks/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/msamogh/nonechucks/issues/13/comments","events_url":"https://api.github.com/repos/msamogh/nonechucks/issues/13/events","html_url":"https://github.com/msamogh/nonechucks/issues/13","id":453510761,"node_id":"MDU6SXNzdWU0NTM1MTA3NjE=","number":13,"title":"Memory leak","user":{"login":"shrubb","id":9570420,"node_id":"MDQ6VXNlcjk1NzA0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9570420?v=4","gravatar_id":"","url":"https://api.github.com/users/shrubb","html_url":"https://github.com/shrubb","followers_url":"https://api.github.com/users/shrubb/followers","following_url":"https://api.github.com/users/shrubb/following{/other_user}","gists_url":"https://api.github.com/users/shrubb/gists{/gist_id}","starred_url":"https://api.github.com/users/shrubb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shrubb/subscriptions","organizations_url":"https://api.github.com/users/shrubb/orgs","repos_url":"https://api.github.com/users/shrubb/repos","events_url":"https://api.github.com/users/shrubb/events{/privacy}","received_events_url":"https://api.github.com/users/shrubb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2019-06-07T13:20:52Z","updated_at":"2022-06-23T09:50:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nwhen the below example is run, the RAM usage grows forever:\r\n\r\n```python3\r\nimport torch, torch.utils.data\r\nimport nonechucks\r\n\r\nclass DummyDataset(torch.utils.data.Dataset):\r\n    def __len__(self):\r\n        return 1_000_000\r\n\r\n    def __getitem__(self, idx):\r\n        return 666\r\n\r\ndataset = nonechucks.SafeDataset(DummyDataset())\r\n\r\nfor _ in torch.utils.data.DataLoader(dataset):\r\n    pass\r\n```\r\n\r\nNotes:\r\n\r\n* Here the increase is quite slow; for a RAPID bug demonstration, replace `666` with `torch.empty(10_000)` (be careful to kill the process in time, before you're OOM!).\r\n* No problems without `SafeDataset`.\r\n* Without `torch.utils.data.DataLoader`, the leak is still there, although at a smaller scale, around 1 MB of RAM is lost per 30000-40000 `__getitem__` calls.\r\n* PyTorch 1.0.1, nonechucks 0.3.1.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/msamogh/nonechucks/issues/13/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/msamogh/nonechucks/issues/13/timeline","performed_via_github_app":null,"state_reason":null}