{"url":"https://api.github.com/repos/msamogh/nonechucks/issues/31","repository_url":"https://api.github.com/repos/msamogh/nonechucks","labels_url":"https://api.github.com/repos/msamogh/nonechucks/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/msamogh/nonechucks/issues/31/comments","events_url":"https://api.github.com/repos/msamogh/nonechucks/issues/31/events","html_url":"https://github.com/msamogh/nonechucks/issues/31","id":778140313,"node_id":"MDU6SXNzdWU3NzgxNDAzMTM=","number":31,"title":"Potential bug in `_reset_index`","user":{"login":"mdfirman","id":6114258,"node_id":"MDQ6VXNlcjYxMTQyNTg=","avatar_url":"https://avatars.githubusercontent.com/u/6114258?v=4","gravatar_id":"","url":"https://api.github.com/users/mdfirman","html_url":"https://github.com/mdfirman","followers_url":"https://api.github.com/users/mdfirman/followers","following_url":"https://api.github.com/users/mdfirman/following{/other_user}","gists_url":"https://api.github.com/users/mdfirman/gists{/gist_id}","starred_url":"https://api.github.com/users/mdfirman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdfirman/subscriptions","organizations_url":"https://api.github.com/users/mdfirman/orgs","repos_url":"https://api.github.com/users/mdfirman/repos","events_url":"https://api.github.com/users/mdfirman/events{/privacy}","received_events_url":"https://api.github.com/users/mdfirman/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-01-04T14:38:40Z","updated_at":"2021-01-04T14:40:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SafeDataset._reset_index is defined as follows:\r\n```\r\n    def _reset_index(self):\r\n        \"\"\"Resets the safe and unsafe samples indices.\"\"\"\r\n        self._safe_indices = self._unsafe_indices = []\r\n```\r\nI believe this has a bug, as after calling this function _safe_indices and _unsafe_indices will both point to the same underlying list in memory.\r\n\r\nCompare:\r\n```\r\n>> a = []\r\n>> b = []\r\n>> a.append(2)\r\n>> print(b)\r\n[]\r\n  --> expected!\r\n```\r\nwith\r\n```\r\n>> a = b = []\r\n>> a.append(2)\r\n>> print(b)\r\n[2]\r\n  --> unexpected!\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/msamogh/nonechucks/issues/31/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/msamogh/nonechucks/issues/31/timeline","performed_via_github_app":null,"state_reason":null}