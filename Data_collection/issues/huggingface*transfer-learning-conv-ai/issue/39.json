{"url":"https://api.github.com/repos/huggingface/transfer-learning-conv-ai/issues/39","repository_url":"https://api.github.com/repos/huggingface/transfer-learning-conv-ai","labels_url":"https://api.github.com/repos/huggingface/transfer-learning-conv-ai/issues/39/labels{/name}","comments_url":"https://api.github.com/repos/huggingface/transfer-learning-conv-ai/issues/39/comments","events_url":"https://api.github.com/repos/huggingface/transfer-learning-conv-ai/issues/39/events","html_url":"https://github.com/huggingface/transfer-learning-conv-ai/issues/39","id":506962838,"node_id":"MDU6SXNzdWU1MDY5NjI4Mzg=","number":39,"title":"Error trying to compute unigram precision/recall/F1","user":{"login":"g-karthik","id":3851993,"node_id":"MDQ6VXNlcjM4NTE5OTM=","avatar_url":"https://avatars.githubusercontent.com/u/3851993?v=4","gravatar_id":"","url":"https://api.github.com/users/g-karthik","html_url":"https://github.com/g-karthik","followers_url":"https://api.github.com/users/g-karthik/followers","following_url":"https://api.github.com/users/g-karthik/following{/other_user}","gists_url":"https://api.github.com/users/g-karthik/gists{/gist_id}","starred_url":"https://api.github.com/users/g-karthik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/g-karthik/subscriptions","organizations_url":"https://api.github.com/users/g-karthik/orgs","repos_url":"https://api.github.com/users/g-karthik/repos","events_url":"https://api.github.com/users/g-karthik/events{/privacy}","received_events_url":"https://api.github.com/users/g-karthik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-10-15T02:16:11Z","updated_at":"2019-10-17T04:12:35Z","closed_at":"2019-10-17T04:12:35Z","author_association":"NONE","active_lock_reason":null,"body":"https://github.com/huggingface/transfer-learning-conv-ai/blob/3bac4924fa307d5e4eba977818b2a29d403e8371/train.py#L235\r\n\r\nSo I tried extending the above metrics being computed during training to additionally compute validation set unigram precision, recall and F1 since these are supported in `pytorch-ignite`. I did something like the following:\r\n\r\n```\r\n    eval_metrics = {\"nll\": Loss(torch.nn.CrossEntropyLoss(ignore_index=-1), output_transform=lambda x: (x[0][0], x[1][0])),\r\n                    \"accuracy\": Accuracy(output_transform=lambda x: (x[0][1], x[1][1])),\r\n                    \"precision\": Precision(output_transform=lambda x: (x[0][0], x[1][0])),\r\n                    \"recall\": Recall(output_transform=lambda x: (x[0][0], x[1][0]))}\r\n    eval_metrics[\"ppl\"] = MetricsLambda(math.exp, eval_metrics[\"nll\"])\r\n\r\n    eval_metrics[\"f1\"] = eval_metrics[\"precision\"] * eval_metrics[\"recall\"] * 2 / (eval_metrics[\"precision\"] +\r\n                                                                                   eval_metrics[\"recall\"] + 1e-20)\r\n    eval_metrics[\"f1\"] = MetricsLambda(lambda t: torch.mean(t).item(), eval_metrics[\"f1\"])\r\n\r\n    eval_metrics.update({\"average_nll\": MetricsLambda(average_distributed_scalar, eval_metrics[\"nll\"], args),\r\n                         \"average_accuracy\": MetricsLambda(average_distributed_scalar, eval_metrics[\"accuracy\"], args),\r\n                         \"average_f1\": MetricsLambda(average_distributed_scalar, eval_metrics[\"f1\"], args)})\r\n    eval_metrics[\"average_ppl\"] = MetricsLambda(math.exp, eval_metrics[\"average_nll\"])\r\n    for name, metric in eval_metrics.items():\r\n        metric.attach(evaluator, name)\r\n```\r\n\r\nDoes this seem right? @thomwolf \r\n\r\nI'm getting a device-side assert failure with the following stack trace when I launch the distributed train job with `CUDA_LAUNCH_BLOCKING=1`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 402, in <module>\r\n    train()\r\n  File \"train.py\", line 391, in train\r\n    trainer.run(train_loader, max_epochs=args.n_epochs)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 446, in run\r\n    self._handle_exception(e)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 410, in _handle_exception\r\n    raise e\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 429, in run\r\n    self._fire_event(Events.STARTED)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 345, in _fire_event\r\n    func(self, *(event_args + args), **kwargs)\r\n  File \"train.py\", line 318, in <lambda>\r\n    trainer.add_event_handler(Events.STARTED, lambda _: evaluator.run(val_loader))\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 446, in run\r\n    self._handle_exception(e)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 410, in _handle_exception\r\n    raise e\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 433, in run\r\n    hours, mins, secs = self._run_once_on_dataset()\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 399, in _run_once_on_dataset\r\n    self._handle_exception(e)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 410, in _handle_exception\r\n    raise e\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 392, in _run_once_on_dataset\r\n    self._fire_event(Events.ITERATION_COMPLETED)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/engine/engine.py\", line 345, in _fire_event\r\n    func(self, *(event_args + args), **kwargs)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/torch/autograd/grad_mode.py\", line 43, in decorate_no_grad\r\n    return func(*args, **kwargs)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/metrics/metric.py\", line 65, in iteration_completed\r\n    self.update(output)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/metrics/precision.py\", line 101, in update\r\n    y = to_onehot(y.view(-1), num_classes=num_classes)\r\n  File \"/home/ec2-user/anaconda3/envs/pytorch_p36/lib/python3.6/site-packages/ignite/utils.py\", line 52, in to_onehot\r\n    return onehot.scatter_(1, indices.unsqueeze(1), 1)\r\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /opt/conda/conda-bld/pytorch_1556653099582/work/aten/src/THC/generic/THCTensorScatterGather.cu:380\r\nterminate called without an active exception\r\n```\r\n\r\nAny ideas on why this is happening?","closed_by":{"login":"g-karthik","id":3851993,"node_id":"MDQ6VXNlcjM4NTE5OTM=","avatar_url":"https://avatars.githubusercontent.com/u/3851993?v=4","gravatar_id":"","url":"https://api.github.com/users/g-karthik","html_url":"https://github.com/g-karthik","followers_url":"https://api.github.com/users/g-karthik/followers","following_url":"https://api.github.com/users/g-karthik/following{/other_user}","gists_url":"https://api.github.com/users/g-karthik/gists{/gist_id}","starred_url":"https://api.github.com/users/g-karthik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/g-karthik/subscriptions","organizations_url":"https://api.github.com/users/g-karthik/orgs","repos_url":"https://api.github.com/users/g-karthik/repos","events_url":"https://api.github.com/users/g-karthik/events{/privacy}","received_events_url":"https://api.github.com/users/g-karthik/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/huggingface/transfer-learning-conv-ai/issues/39/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/huggingface/transfer-learning-conv-ai/issues/39/timeline","performed_via_github_app":null,"state_reason":"completed"}