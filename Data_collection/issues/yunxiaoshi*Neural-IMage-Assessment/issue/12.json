{"url":"https://api.github.com/repos/yunxiaoshi/Neural-IMage-Assessment/issues/12","repository_url":"https://api.github.com/repos/yunxiaoshi/Neural-IMage-Assessment","labels_url":"https://api.github.com/repos/yunxiaoshi/Neural-IMage-Assessment/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/yunxiaoshi/Neural-IMage-Assessment/issues/12/comments","events_url":"https://api.github.com/repos/yunxiaoshi/Neural-IMage-Assessment/issues/12/events","html_url":"https://github.com/yunxiaoshi/Neural-IMage-Assessment/issues/12","id":464470168,"node_id":"MDU6SXNzdWU0NjQ0NzAxNjg=","number":12,"title":"Pre-trained model giving vague results","user":{"login":"shayan09","id":24634969,"node_id":"MDQ6VXNlcjI0NjM0OTY5","avatar_url":"https://avatars.githubusercontent.com/u/24634969?v=4","gravatar_id":"","url":"https://api.github.com/users/shayan09","html_url":"https://github.com/shayan09","followers_url":"https://api.github.com/users/shayan09/followers","following_url":"https://api.github.com/users/shayan09/following{/other_user}","gists_url":"https://api.github.com/users/shayan09/gists{/gist_id}","starred_url":"https://api.github.com/users/shayan09/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shayan09/subscriptions","organizations_url":"https://api.github.com/users/shayan09/orgs","repos_url":"https://api.github.com/users/shayan09/repos","events_url":"https://api.github.com/users/shayan09/events{/privacy}","received_events_url":"https://api.github.com/users/shayan09/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-07-05T05:41:09Z","updated_at":"2020-05-27T06:31:37Z","closed_at":"2020-05-27T06:31:37Z","author_association":"NONE","active_lock_reason":null,"body":"I am trying to implement this for a single image and not getting any mean value below 5.0. The good quality images also at times return low values. \r\n\r\nI am sharing the main.py file, please check if anything is wrong with the code.\r\n```\r\nimport argparse\r\nimport os\r\n\r\nimport numpy as np\r\nimport matplotlib\r\nimport matplotlib.pyplot as plt\r\n\r\nimport torch\r\nfrom torch import no_grad\r\nimport torch.autograd as autograd\r\nimport torch.optim as optim\r\n\r\nimport torchvision.transforms as transforms\r\nimport torchvision.datasets as dsets\r\nimport torchvision.models as models\r\n\r\nimport torch.nn.functional as F\r\n\r\nfrom model import *\r\n\r\nimport cv2\r\nfile_name = 'bad'\r\nfilename = '/home/shayan/Projects/NIMA/images/'+file_name+'.jpg'\r\n\r\nimage = cv2.imread(filename)\r\nimage = cv2.resize(image,(224,224))\r\n\r\nimg_arr = image.transpose(2, 0, 1) # C x H x W\r\nimg_arr = np.expand_dims(img_arr,axis = 0)\r\nprint(img_arr.shape)\r\n\r\nimg_tensor = torch.from_numpy(img_arr)\r\nimg_tensor = img_tensor.type('torch.FloatTensor')\r\nprint(img_tensor.shape,img_tensor.size)\r\n\r\ncuda = torch.cuda.is_available()\r\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\r\nif cuda:\r\n    print(\"Device: GPU\")\r\nelse:\r\n    print(\"Device: CPU\")\r\n    \r\nbase_model = models.vgg16(pretrained=True)\r\nmodel = NIMA(base_model)\r\n\r\nmodel.load_state_dict(torch.load(\"/home/shayan/Projects/NIMA/epoch-12.pkl\", map_location=lambda storage, loc: storage))\r\nprint(\"Successfully loaded model\")\r\n\r\nwith torch.no_grad():\r\n\r\n    model.eval()\r\n\r\noutput = model(img_tensor)\r\noutput = output.view(10, 1)\r\n\r\npredicted_mean, predicted_std = 0.0, 0.0\r\nfor i, elem in enumerate(output, 1):\r\n    predicted_mean += i * elem\r\nfor j, elem in enumerate(output, 1):\r\n    predicted_std += elem * (j - predicted_mean) ** 2\r\nprint(\"________________\")\r\nprint(u\"({}) \\u00B1{}\".format(round(float(predicted_mean),2), round(float(predicted_std), 2)))  ","closed_by":{"login":"yunxiaoshi","id":17340700,"node_id":"MDQ6VXNlcjE3MzQwNzAw","avatar_url":"https://avatars.githubusercontent.com/u/17340700?v=4","gravatar_id":"","url":"https://api.github.com/users/yunxiaoshi","html_url":"https://github.com/yunxiaoshi","followers_url":"https://api.github.com/users/yunxiaoshi/followers","following_url":"https://api.github.com/users/yunxiaoshi/following{/other_user}","gists_url":"https://api.github.com/users/yunxiaoshi/gists{/gist_id}","starred_url":"https://api.github.com/users/yunxiaoshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yunxiaoshi/subscriptions","organizations_url":"https://api.github.com/users/yunxiaoshi/orgs","repos_url":"https://api.github.com/users/yunxiaoshi/repos","events_url":"https://api.github.com/users/yunxiaoshi/events{/privacy}","received_events_url":"https://api.github.com/users/yunxiaoshi/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/yunxiaoshi/Neural-IMage-Assessment/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/yunxiaoshi/Neural-IMage-Assessment/issues/12/timeline","performed_via_github_app":null,"state_reason":"completed"}