{"url":"https://api.github.com/repos/NVlabs/MUNIT/issues/49","repository_url":"https://api.github.com/repos/NVlabs/MUNIT","labels_url":"https://api.github.com/repos/NVlabs/MUNIT/issues/49/labels{/name}","comments_url":"https://api.github.com/repos/NVlabs/MUNIT/issues/49/comments","events_url":"https://api.github.com/repos/NVlabs/MUNIT/issues/49/events","html_url":"https://github.com/NVlabs/MUNIT/issues/49","id":380090732,"node_id":"MDU6SXNzdWUzODAwOTA3MzI=","number":49,"title":"Code crashes on different new_size?","user":{"login":"wpeebles","id":35885960,"node_id":"MDQ6VXNlcjM1ODg1OTYw","avatar_url":"https://avatars.githubusercontent.com/u/35885960?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeebles","html_url":"https://github.com/wpeebles","followers_url":"https://api.github.com/users/wpeebles/followers","following_url":"https://api.github.com/users/wpeebles/following{/other_user}","gists_url":"https://api.github.com/users/wpeebles/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeebles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeebles/subscriptions","organizations_url":"https://api.github.com/users/wpeebles/orgs","repos_url":"https://api.github.com/users/wpeebles/repos","events_url":"https://api.github.com/users/wpeebles/events{/privacy}","received_events_url":"https://api.github.com/users/wpeebles/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-11-13T07:20:41Z","updated_at":"2018-11-13T07:46:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I think there may be a problem with the code's handling of the `new_size` field. I tried training a model with `crop_image_height = 256`, `crop_image_width = 256` and `new_size = 286`. However, this code crashes with the following error:\r\n\r\n`File \"PATH/utils.py\", line 114, in __write_images\r\n    image_tensor = torch.cat([images[:display_image_num] for images in image_outputs], 0)\r\nRuntimeError: invalid argument 0: Sizes of tensors must match except in dimension 0. Got 284 and 286 in dimension 2 at /opt/conda/conda-bld/pytorch_1525909934016/work/aten/src/THC/generic/THCTensorMath.cu:111`\r\n\r\nNote that this error message triggers on the `write_2images` call in `train.py`--but it only crashes when writing test images (when I commented that line out, it did not trigger when writing the training images). When I re-ran the experiment with `new_size = 256`, training does not crash and it saves images properly.\r\n\r\nLooking into it, it appears that the issue may be related to the parameters being supplied to the `get_data_loader_folder` function when called for test data, but I have not looked into it closely yet. If it matters, I ran using the folder setup, not the list. In particular, it appears that test images are resized to `new_size` and not cropped at all. Seeing as training is done using images of size `crop_image_height x crop_image_width`, shouldn't the test loader resize images to `new_size` and then center crop to `crop_image_height x crop_image_width`? ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/NVlabs/MUNIT/issues/49/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NVlabs/MUNIT/issues/49/timeline","performed_via_github_app":null,"state_reason":null}