[{"url":"https://api.github.com/repos/NVlabs/MUNIT/issues/comments/437108183","html_url":"https://github.com/NVlabs/MUNIT/issues/48#issuecomment-437108183","issue_url":"https://api.github.com/repos/NVlabs/MUNIT/issues/48","id":437108183,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNzEwODE4Mw==","user":{"login":"mingyuliutw","id":8594682,"node_id":"MDQ6VXNlcjg1OTQ2ODI=","avatar_url":"https://avatars.githubusercontent.com/u/8594682?v=4","gravatar_id":"","url":"https://api.github.com/users/mingyuliutw","html_url":"https://github.com/mingyuliutw","followers_url":"https://api.github.com/users/mingyuliutw/followers","following_url":"https://api.github.com/users/mingyuliutw/following{/other_user}","gists_url":"https://api.github.com/users/mingyuliutw/gists{/gist_id}","starred_url":"https://api.github.com/users/mingyuliutw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mingyuliutw/subscriptions","organizations_url":"https://api.github.com/users/mingyuliutw/orgs","repos_url":"https://api.github.com/users/mingyuliutw/repos","events_url":"https://api.github.com/users/mingyuliutw/events{/privacy}","received_events_url":"https://api.github.com/users/mingyuliutw/received_events","type":"User","site_admin":false},"created_at":"2018-11-08T18:35:03Z","updated_at":"2018-11-08T18:35:03Z","author_association":"COLLABORATOR","body":"The difference is between AdaIN and IN is that the affine parameters in AdaIN are data-adaptive (different test data have different affine parameters), while the affine parameters are fixed (fixed after fitting the training data). In the case of MUNIT, the affine parameters of AdaIN is coming from the style code via the decoding operation of MLP.","reactions":{"url":"https://api.github.com/repos/NVlabs/MUNIT/issues/comments/437108183/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mingyuliutw","id":8594682,"node_id":"MDQ6VXNlcjg1OTQ2ODI=","avatar_url":"https://avatars.githubusercontent.com/u/8594682?v=4","gravatar_id":"","url":"https://api.github.com/users/mingyuliutw","html_url":"https://github.com/mingyuliutw","followers_url":"https://api.github.com/users/mingyuliutw/followers","following_url":"https://api.github.com/users/mingyuliutw/following{/other_user}","gists_url":"https://api.github.com/users/mingyuliutw/gists{/gist_id}","starred_url":"https://api.github.com/users/mingyuliutw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mingyuliutw/subscriptions","organizations_url":"https://api.github.com/users/mingyuliutw/orgs","repos_url":"https://api.github.com/users/mingyuliutw/repos","events_url":"https://api.github.com/users/mingyuliutw/events{/privacy}","received_events_url":"https://api.github.com/users/mingyuliutw/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/NVlabs/MUNIT/issues/comments/500321507","html_url":"https://github.com/NVlabs/MUNIT/issues/48#issuecomment-500321507","issue_url":"https://api.github.com/repos/NVlabs/MUNIT/issues/48","id":500321507,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDMyMTUwNw==","user":{"login":"hujinsen","id":6258078,"node_id":"MDQ6VXNlcjYyNTgwNzg=","avatar_url":"https://avatars.githubusercontent.com/u/6258078?v=4","gravatar_id":"","url":"https://api.github.com/users/hujinsen","html_url":"https://github.com/hujinsen","followers_url":"https://api.github.com/users/hujinsen/followers","following_url":"https://api.github.com/users/hujinsen/following{/other_user}","gists_url":"https://api.github.com/users/hujinsen/gists{/gist_id}","starred_url":"https://api.github.com/users/hujinsen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hujinsen/subscriptions","organizations_url":"https://api.github.com/users/hujinsen/orgs","repos_url":"https://api.github.com/users/hujinsen/repos","events_url":"https://api.github.com/users/hujinsen/events{/privacy}","received_events_url":"https://api.github.com/users/hujinsen/received_events","type":"User","site_admin":false},"created_at":"2019-06-10T07:34:18Z","updated_at":"2019-06-10T07:34:18Z","author_association":"NONE","body":"> The difference is between AdaIN and IN is that the affine parameters in AdaIN are data-adaptive (different test data have different affine parameters), while the affine parameters are fixed (fixed after fitting the training data). In the case of MUNIT, the affine parameters of AdaIN is coming from the style code via the decoding operation of MLP.\r\n\r\nThe MLP need train? ","reactions":{"url":"https://api.github.com/repos/NVlabs/MUNIT/issues/comments/500321507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"hujinsen","id":6258078,"node_id":"MDQ6VXNlcjYyNTgwNzg=","avatar_url":"https://avatars.githubusercontent.com/u/6258078?v=4","gravatar_id":"","url":"https://api.github.com/users/hujinsen","html_url":"https://github.com/hujinsen","followers_url":"https://api.github.com/users/hujinsen/followers","following_url":"https://api.github.com/users/hujinsen/following{/other_user}","gists_url":"https://api.github.com/users/hujinsen/gists{/gist_id}","starred_url":"https://api.github.com/users/hujinsen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hujinsen/subscriptions","organizations_url":"https://api.github.com/users/hujinsen/orgs","repos_url":"https://api.github.com/users/hujinsen/repos","events_url":"https://api.github.com/users/hujinsen/events{/privacy}","received_events_url":"https://api.github.com/users/hujinsen/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/NVlabs/MUNIT/issues/comments/674322918","html_url":"https://github.com/NVlabs/MUNIT/issues/48#issuecomment-674322918","issue_url":"https://api.github.com/repos/NVlabs/MUNIT/issues/48","id":674322918,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDMyMjkxOA==","user":{"login":"hello-trouble","id":33440801,"node_id":"MDQ6VXNlcjMzNDQwODAx","avatar_url":"https://avatars.githubusercontent.com/u/33440801?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-trouble","html_url":"https://github.com/hello-trouble","followers_url":"https://api.github.com/users/hello-trouble/followers","following_url":"https://api.github.com/users/hello-trouble/following{/other_user}","gists_url":"https://api.github.com/users/hello-trouble/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-trouble/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-trouble/subscriptions","organizations_url":"https://api.github.com/users/hello-trouble/orgs","repos_url":"https://api.github.com/users/hello-trouble/repos","events_url":"https://api.github.com/users/hello-trouble/events{/privacy}","received_events_url":"https://api.github.com/users/hello-trouble/received_events","type":"User","site_admin":false},"created_at":"2020-08-15T00:41:23Z","updated_at":"2020-08-15T00:41:23Z","author_association":"NONE","body":"Thank you very much. I am also puzzled about the learned affine parameters. Is it possible to use the AdaInGen proposed in MUNIT to replace the network in \"arbitrarry style transfer in real-time\" , namely,  the content image is fed into the content encoder , the style image  is fed into the style encoder to learn the mean and var, then through the decoder the stylized image is synthesised with the content of content image and style of the style image.  Dose it still achieve the arbitrary style transfer?","reactions":{"url":"https://api.github.com/repos/NVlabs/MUNIT/issues/comments/674322918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"hello-trouble","id":33440801,"node_id":"MDQ6VXNlcjMzNDQwODAx","avatar_url":"https://avatars.githubusercontent.com/u/33440801?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-trouble","html_url":"https://github.com/hello-trouble","followers_url":"https://api.github.com/users/hello-trouble/followers","following_url":"https://api.github.com/users/hello-trouble/following{/other_user}","gists_url":"https://api.github.com/users/hello-trouble/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-trouble/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-trouble/subscriptions","organizations_url":"https://api.github.com/users/hello-trouble/orgs","repos_url":"https://api.github.com/users/hello-trouble/repos","events_url":"https://api.github.com/users/hello-trouble/events{/privacy}","received_events_url":"https://api.github.com/users/hello-trouble/received_events","type":"User","site_admin":false}}]