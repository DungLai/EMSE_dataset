{"url":"https://api.github.com/repos/codertimo/BERT-pytorch/issues/98","repository_url":"https://api.github.com/repos/codertimo/BERT-pytorch","labels_url":"https://api.github.com/repos/codertimo/BERT-pytorch/issues/98/labels{/name}","comments_url":"https://api.github.com/repos/codertimo/BERT-pytorch/issues/98/comments","events_url":"https://api.github.com/repos/codertimo/BERT-pytorch/issues/98/events","html_url":"https://github.com/codertimo/BERT-pytorch/issues/98","id":1296718075,"node_id":"I_kwDOCSBSd85NSlj7","number":98,"title":"why specify `ignore_index=0` in the NLLLoss function in BERTTrainer?","user":{"login":"Jasmine969","id":64536863,"node_id":"MDQ6VXNlcjY0NTM2ODYz","avatar_url":"https://avatars.githubusercontent.com/u/64536863?v=4","gravatar_id":"","url":"https://api.github.com/users/Jasmine969","html_url":"https://github.com/Jasmine969","followers_url":"https://api.github.com/users/Jasmine969/followers","following_url":"https://api.github.com/users/Jasmine969/following{/other_user}","gists_url":"https://api.github.com/users/Jasmine969/gists{/gist_id}","starred_url":"https://api.github.com/users/Jasmine969/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jasmine969/subscriptions","organizations_url":"https://api.github.com/users/Jasmine969/orgs","repos_url":"https://api.github.com/users/Jasmine969/repos","events_url":"https://api.github.com/users/Jasmine969/events{/privacy}","received_events_url":"https://api.github.com/users/Jasmine969/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-07T02:46:50Z","updated_at":"2023-01-10T16:17:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"# trainer/pretrain.py\r\n\r\n```python\r\nclass BERTTrainer:\r\n    def __init__(self, ...):\r\n        ... \r\n        # Using Negative Log Likelihood Loss function for predicting the masked_token\r\n        self.criterion = nn.NLLLoss(ignore_index=0)\r\n        ...\r\n```\r\n\r\nI cannot understand why `ignore index=0` is specified when calculating NLLLoss. If the ground truth of `is_next` is False (label = 0) in terms of the NSP task but BERT predicts True, then NLLLoss will be 0 (or nan)... so what's the aim of `ignore_index = 0` ???\r\n\r\n====================\r\n\r\nWell, I've found that `ignore_index = 0` is useful to the MLM task, but I still can't agree the NSP task should share the same NLLLoss with MLM.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/codertimo/BERT-pytorch/issues/98/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/codertimo/BERT-pytorch/issues/98/timeline","performed_via_github_app":null,"state_reason":null}