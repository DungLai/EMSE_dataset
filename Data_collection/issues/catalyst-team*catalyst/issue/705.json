{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/705","repository_url":"https://api.github.com/repos/catalyst-team/catalyst","labels_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/705/labels{/name}","comments_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/705/comments","events_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/705/events","html_url":"https://github.com/catalyst-team/catalyst/issues/705","id":581138462,"node_id":"MDU6SXNzdWU1ODExMzg0NjI=","number":705,"title":"Training without storing model states","user":{"login":"ditwoo","id":7264490,"node_id":"MDQ6VXNlcjcyNjQ0OTA=","avatar_url":"https://avatars.githubusercontent.com/u/7264490?v=4","gravatar_id":"","url":"https://api.github.com/users/ditwoo","html_url":"https://github.com/ditwoo","followers_url":"https://api.github.com/users/ditwoo/followers","following_url":"https://api.github.com/users/ditwoo/following{/other_user}","gists_url":"https://api.github.com/users/ditwoo/gists{/gist_id}","starred_url":"https://api.github.com/users/ditwoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ditwoo/subscriptions","organizations_url":"https://api.github.com/users/ditwoo/orgs","repos_url":"https://api.github.com/users/ditwoo/repos","events_url":"https://api.github.com/users/ditwoo/events{/privacy}","received_events_url":"https://api.github.com/users/ditwoo/received_events","type":"User","site_admin":false},"labels":[{"id":1029400272,"node_id":"MDU6TGFiZWwxMDI5NDAwMjcy","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1029400273,"node_id":"MDU6TGFiZWwxMDI5NDAwMjcz","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":1029400274,"node_id":"MDU6TGFiZWwxMDI5NDAwMjc0","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-03-14T10:06:51Z","updated_at":"2020-06-22T16:35:16Z","closed_at":"2020-06-22T16:35:16Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Description**\r\nIn some rare cases, for example, when you need to finetune a large model on a small dataset the majoring part of training loop is waiting for saving model checkpoints to a hard drive.\r\n\r\n**Proposal**\r\nWould be logically to add a `CheckpointCallback` with parameter `save_n_best=0` to a configuration and do not store best checkpoints and instead use the latest state of the model.\r\n\r\n**Note**\r\nAll of the described above is a proposal mostly for **config API** because **config API** during the stages loads the best checkpoint from the previous stage.\r\n\r\nSo here are a few steps to how it can be achieved:\r\n1. For using the latest state of the model you need to overload a `get_model` property of `ConfigExperiment` to return the latest model (something like in `BaseExperiment`).\r\n2. To prevent saving the model state to a hard drive overload property `get_callbacks` of experiment class and remove `CheckpointCallback ` from default callbacks.\r\n3. Create and use an empty callback instead of `CheckpointCallback`.\r\n","closed_by":{"login":"Scitator","id":7606451,"node_id":"MDQ6VXNlcjc2MDY0NTE=","avatar_url":"https://avatars.githubusercontent.com/u/7606451?v=4","gravatar_id":"","url":"https://api.github.com/users/Scitator","html_url":"https://github.com/Scitator","followers_url":"https://api.github.com/users/Scitator/followers","following_url":"https://api.github.com/users/Scitator/following{/other_user}","gists_url":"https://api.github.com/users/Scitator/gists{/gist_id}","starred_url":"https://api.github.com/users/Scitator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Scitator/subscriptions","organizations_url":"https://api.github.com/users/Scitator/orgs","repos_url":"https://api.github.com/users/Scitator/repos","events_url":"https://api.github.com/users/Scitator/events{/privacy}","received_events_url":"https://api.github.com/users/Scitator/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/705/timeline","performed_via_github_app":null,"state_reason":"completed"}