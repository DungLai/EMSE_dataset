{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1167","repository_url":"https://api.github.com/repos/catalyst-team/catalyst","labels_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1167/labels{/name}","comments_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1167/comments","events_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1167/events","html_url":"https://github.com/catalyst-team/catalyst/issues/1167","id":852240486,"node_id":"MDU6SXNzdWU4NTIyNDA0ODY=","number":1167,"title":"`AttributeError: 'TensorboardLogger' object has no attribute 'order'` when using `TensorboardLogger` callback","user":{"login":"LAnastasiia","id":33619627,"node_id":"MDQ6VXNlcjMzNjE5NjI3","avatar_url":"https://avatars.githubusercontent.com/u/33619627?v=4","gravatar_id":"","url":"https://api.github.com/users/LAnastasiia","html_url":"https://github.com/LAnastasiia","followers_url":"https://api.github.com/users/LAnastasiia/followers","following_url":"https://api.github.com/users/LAnastasiia/following{/other_user}","gists_url":"https://api.github.com/users/LAnastasiia/gists{/gist_id}","starred_url":"https://api.github.com/users/LAnastasiia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LAnastasiia/subscriptions","organizations_url":"https://api.github.com/users/LAnastasiia/orgs","repos_url":"https://api.github.com/users/LAnastasiia/repos","events_url":"https://api.github.com/users/LAnastasiia/events{/privacy}","received_events_url":"https://api.github.com/users/LAnastasiia/received_events","type":"User","site_admin":false},"labels":[{"id":1029400270,"node_id":"MDU6TGFiZWwxMDI5NDAwMjcw","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1029400273,"node_id":"MDU6TGFiZWwxMDI5NDAwMjcz","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":1029400277,"node_id":"MDU6TGFiZWwxMDI5NDAwMjc3","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"closed","locked":false,"assignee":{"login":"bagxi","id":19803638,"node_id":"MDQ6VXNlcjE5ODAzNjM4","avatar_url":"https://avatars.githubusercontent.com/u/19803638?v=4","gravatar_id":"","url":"https://api.github.com/users/bagxi","html_url":"https://github.com/bagxi","followers_url":"https://api.github.com/users/bagxi/followers","following_url":"https://api.github.com/users/bagxi/following{/other_user}","gists_url":"https://api.github.com/users/bagxi/gists{/gist_id}","starred_url":"https://api.github.com/users/bagxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bagxi/subscriptions","organizations_url":"https://api.github.com/users/bagxi/orgs","repos_url":"https://api.github.com/users/bagxi/repos","events_url":"https://api.github.com/users/bagxi/events{/privacy}","received_events_url":"https://api.github.com/users/bagxi/received_events","type":"User","site_admin":false},"assignees":[{"login":"ditwoo","id":7264490,"node_id":"MDQ6VXNlcjcyNjQ0OTA=","avatar_url":"https://avatars.githubusercontent.com/u/7264490?v=4","gravatar_id":"","url":"https://api.github.com/users/ditwoo","html_url":"https://github.com/ditwoo","followers_url":"https://api.github.com/users/ditwoo/followers","following_url":"https://api.github.com/users/ditwoo/following{/other_user}","gists_url":"https://api.github.com/users/ditwoo/gists{/gist_id}","starred_url":"https://api.github.com/users/ditwoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ditwoo/subscriptions","organizations_url":"https://api.github.com/users/ditwoo/orgs","repos_url":"https://api.github.com/users/ditwoo/repos","events_url":"https://api.github.com/users/ditwoo/events{/privacy}","received_events_url":"https://api.github.com/users/ditwoo/received_events","type":"User","site_admin":false},{"login":"Scitator","id":7606451,"node_id":"MDQ6VXNlcjc2MDY0NTE=","avatar_url":"https://avatars.githubusercontent.com/u/7606451?v=4","gravatar_id":"","url":"https://api.github.com/users/Scitator","html_url":"https://github.com/Scitator","followers_url":"https://api.github.com/users/Scitator/followers","following_url":"https://api.github.com/users/Scitator/following{/other_user}","gists_url":"https://api.github.com/users/Scitator/gists{/gist_id}","starred_url":"https://api.github.com/users/Scitator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Scitator/subscriptions","organizations_url":"https://api.github.com/users/Scitator/orgs","repos_url":"https://api.github.com/users/Scitator/repos","events_url":"https://api.github.com/users/Scitator/events{/privacy}","received_events_url":"https://api.github.com/users/Scitator/received_events","type":"User","site_admin":false},{"login":"bagxi","id":19803638,"node_id":"MDQ6VXNlcjE5ODAzNjM4","avatar_url":"https://avatars.githubusercontent.com/u/19803638?v=4","gravatar_id":"","url":"https://api.github.com/users/bagxi","html_url":"https://github.com/bagxi","followers_url":"https://api.github.com/users/bagxi/followers","following_url":"https://api.github.com/users/bagxi/following{/other_user}","gists_url":"https://api.github.com/users/bagxi/gists{/gist_id}","starred_url":"https://api.github.com/users/bagxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bagxi/subscriptions","organizations_url":"https://api.github.com/users/bagxi/orgs","repos_url":"https://api.github.com/users/bagxi/repos","events_url":"https://api.github.com/users/bagxi/events{/privacy}","received_events_url":"https://api.github.com/users/bagxi/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-04-07T10:01:16Z","updated_at":"2021-06-06T18:50:39Z","closed_at":"2021-06-06T18:50:39Z","author_association":"NONE","active_lock_reason":null,"body":"## üêõ Bug Report\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n\r\n### How To Reproduce\r\nSteps to reproduce the behavior:\r\n1. instantiate a dl.Supervised(...) runner\r\n2. `runner.train(..., callbacks=[dl.TensorboardLogger(logdir=\"...\"])`\r\n3. observe `AttributeError: 'TensorboardLogger' object has no attribute 'order'`\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well --> \r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-17-a757fc5a3396> in <module>()\r\n     16               #  dl.ConfusionMatrixCallback(),\r\n     17                ],\r\n---> 18     load_best_on_end=True,\r\n     19 )\r\n\r\n13 frames\r\n/usr/local/lib/python3.7/dist-packages/catalyst/runners/runner.py in train(self, loaders, model, engine, trial, criterion, optimizer, scheduler, callbacks, loggers, seed, hparams, num_epochs, logdir, valid_loader, valid_metric, minimize_valid_metric, verbose, timeit, check, overfit, load_best_on_end, fp16, amp, apex, ddp)\r\n    318         self._load_best_on_end = load_best_on_end\r\n    319         # run\r\n--> 320         self.run()\r\n    321 \r\n    322     @torch.no_grad()\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in run(self)\r\n    676         except (Exception, KeyboardInterrupt) as ex:\r\n    677             self.exception = ex\r\n--> 678             self._run_event(\"on_exception\")\r\n    679         return self\r\n    680 \r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in _run_event(self, event)\r\n    599             getattr(callback, event)(self)\r\n    600         if _has_str_intersections(event, (\"_end\", \"_exception\")):\r\n--> 601             getattr(self, event)(self)\r\n    602 \r\n    603     @abstractmethod\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in on_exception(self, runner)\r\n    591     def on_exception(self, runner: \"IRunner\"):\r\n    592         \"\"\"Event handler.\"\"\"\r\n--> 593         raise self.exception\r\n    594 \r\n    595     def _run_event(self, event: str) -> None:\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in run(self)\r\n    673         \"\"\"\r\n    674         try:\r\n--> 675             self._run_experiment()\r\n    676         except (Exception, KeyboardInterrupt) as ex:\r\n    677             self.exception = ex\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in _run_experiment(self)\r\n    663             else:\r\n    664                 # single-device branch (cpu, gpu, dp)\r\n--> 665                 self._run_stage()\r\n    666         self._run_event(\"on_experiment_end\")\r\n    667 \r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in _run_stage(self, rank, world_size)\r\n    644                 self.loggers = {}\r\n    645 \r\n--> 646         self._run_event(\"on_stage_start\")\r\n    647         while self.stage_epoch_step < self.stage_epoch_len:\r\n    648             self._run_epoch()\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in _run_event(self, event)\r\n    595     def _run_event(self, event: str) -> None:\r\n    596         if _has_str_intersections(event, (\"_start\",)):\r\n--> 597             getattr(self, event)(self)\r\n    598         for callback in self.callbacks.values():\r\n    599             getattr(callback, event)(self)\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in on_stage_start(self, runner)\r\n    502         self._setup_loaders()\r\n    503         self._setup_components()\r\n--> 504         self._setup_callbacks()\r\n    505         self.log_hparams(hparams=self.hparams, scope=\"stage\")\r\n    506 \r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/runner.py in _setup_callbacks(self)\r\n    473     def _setup_callbacks(self):\r\n    474         set_global_seed(self.seed + self.engine.rank + self.global_epoch_step)\r\n--> 475         callbacks = self.get_callbacks(self.stage_key)\r\n    476         callbacks = filter_callbacks_by_node(callbacks)\r\n    477         callbacks = sort_callbacks_by_order(callbacks)\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/runners/runner.py in get_callbacks(self, stage)\r\n    449             dictionary with stage callbacks\r\n    450         \"\"\"\r\n--> 451         callbacks = super().get_callbacks(stage=stage)\r\n    452         is_callback_exists = lambda callback_fn: any(\r\n    453             callback_isinstance(x, callback_fn) for x in callbacks.values()\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/runners/runner.py in get_callbacks(self, stage)\r\n    187     def get_callbacks(self, stage: str) -> \"OrderedDict[str, Callback]\":\r\n    188         \"\"\"Returns the callbacks for a given stage.\"\"\"\r\n--> 189         callbacks = sort_callbacks_by_order(self._callbacks)\r\n    190         is_callback_exists = lambda callback_fn: any(\r\n    191             callback_isinstance(x, callback_fn) for x in callbacks.values()\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/misc.py in sort_callbacks_by_order(callbacks)\r\n    108         output = OrderedDict(output)\r\n    109     elif isinstance(callbacks, list):\r\n--> 110         output = sorted(callbacks, key=lambda x: x.order)\r\n    111         output = OrderedDict([(i, value) for i, value in enumerate(output)])\r\n    112     else:\r\n\r\n/usr/local/lib/python3.7/dist-packages/catalyst/core/misc.py in <lambda>(x)\r\n    108         output = OrderedDict(output)\r\n    109     elif isinstance(callbacks, list):\r\n--> 110         output = sorted(callbacks, key=lambda x: x.order)\r\n    111         output = OrderedDict([(i, value) for i, value in enumerate(output)])\r\n    112     else:\r\n\r\nAttributeError: 'TensorboardLogger' object has no attribute 'order'\r\n```\r\n\r\n#### Code sample\r\n```\r\nrunner = dl.SupervisedRunner()\r\n\r\nmodel = ...\r\ntrain_dataloader, validation_dataloader = ..., ....\r\n\r\ncriterion = nn.KLDivLoss(reduction='mean')\r\noptimizer = optim.Adam(model.parameters(), lr=1e-3)\r\n\r\nrunner.train(\r\n    loaders={\"train\": train_dataloader, \"valid\": validation_dataloader},\r\n    model=model, \r\n    criterion=criterion, \r\n    optimizer=optimizer,\r\n\r\n    num_epochs=1, \r\n    logdir=\"./logs\",\r\n    verbose=True,\r\n    callbacks=[\r\n               dl.CheckpointCallback(logdir=\"...\", save_n_best=3),\r\n               dl.TensorboardLogger(logdir=\"....\"),\r\n              #  dl.EarlyStoppingCallback(patience=10),\r\n              #  dl.ConfusionMatrixCallback(),\r\n               ],\r\n    load_best_on_end=True,\r\n)\r\n```\r\n\r\n### Expected behavior\r\nhttps://catalyst-team.github.io/catalyst/v19.11/api/dl.html#catalyst.dl.callbacks.logging.TensorboardLogger\r\n\r\n\r\n### Environment\r\nplain Google Colab","closed_by":{"login":"Scitator","id":7606451,"node_id":"MDQ6VXNlcjc2MDY0NTE=","avatar_url":"https://avatars.githubusercontent.com/u/7606451?v=4","gravatar_id":"","url":"https://api.github.com/users/Scitator","html_url":"https://github.com/Scitator","followers_url":"https://api.github.com/users/Scitator/followers","following_url":"https://api.github.com/users/Scitator/following{/other_user}","gists_url":"https://api.github.com/users/Scitator/gists{/gist_id}","starred_url":"https://api.github.com/users/Scitator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Scitator/subscriptions","organizations_url":"https://api.github.com/users/Scitator/orgs","repos_url":"https://api.github.com/users/Scitator/repos","events_url":"https://api.github.com/users/Scitator/events{/privacy}","received_events_url":"https://api.github.com/users/Scitator/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1167/timeline","performed_via_github_app":null,"state_reason":"completed"}