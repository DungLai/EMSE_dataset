{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1064","repository_url":"https://api.github.com/repos/catalyst-team/catalyst","labels_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1064/labels{/name}","comments_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1064/comments","events_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1064/events","html_url":"https://github.com/catalyst-team/catalyst/issues/1064","id":807945743,"node_id":"MDU6SXNzdWU4MDc5NDU3NDM=","number":1064,"title":"Scheduler doesn't work with custom Runner","user":{"login":"MartSlaaf","id":1595440,"node_id":"MDQ6VXNlcjE1OTU0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/1595440?v=4","gravatar_id":"","url":"https://api.github.com/users/MartSlaaf","html_url":"https://github.com/MartSlaaf","followers_url":"https://api.github.com/users/MartSlaaf/followers","following_url":"https://api.github.com/users/MartSlaaf/following{/other_user}","gists_url":"https://api.github.com/users/MartSlaaf/gists{/gist_id}","starred_url":"https://api.github.com/users/MartSlaaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MartSlaaf/subscriptions","organizations_url":"https://api.github.com/users/MartSlaaf/orgs","repos_url":"https://api.github.com/users/MartSlaaf/repos","events_url":"https://api.github.com/users/MartSlaaf/events{/privacy}","received_events_url":"https://api.github.com/users/MartSlaaf/received_events","type":"User","site_admin":false},"labels":[{"id":1029400270,"node_id":"MDU6TGFiZWwxMDI5NDAwMjcw","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1029400273,"node_id":"MDU6TGFiZWwxMDI5NDAwMjcz","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":1029400277,"node_id":"MDU6TGFiZWwxMDI5NDAwMjc3","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"closed","locked":false,"assignee":{"login":"bagxi","id":19803638,"node_id":"MDQ6VXNlcjE5ODAzNjM4","avatar_url":"https://avatars.githubusercontent.com/u/19803638?v=4","gravatar_id":"","url":"https://api.github.com/users/bagxi","html_url":"https://github.com/bagxi","followers_url":"https://api.github.com/users/bagxi/followers","following_url":"https://api.github.com/users/bagxi/following{/other_user}","gists_url":"https://api.github.com/users/bagxi/gists{/gist_id}","starred_url":"https://api.github.com/users/bagxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bagxi/subscriptions","organizations_url":"https://api.github.com/users/bagxi/orgs","repos_url":"https://api.github.com/users/bagxi/repos","events_url":"https://api.github.com/users/bagxi/events{/privacy}","received_events_url":"https://api.github.com/users/bagxi/received_events","type":"User","site_admin":false},"assignees":[{"login":"ditwoo","id":7264490,"node_id":"MDQ6VXNlcjcyNjQ0OTA=","avatar_url":"https://avatars.githubusercontent.com/u/7264490?v=4","gravatar_id":"","url":"https://api.github.com/users/ditwoo","html_url":"https://github.com/ditwoo","followers_url":"https://api.github.com/users/ditwoo/followers","following_url":"https://api.github.com/users/ditwoo/following{/other_user}","gists_url":"https://api.github.com/users/ditwoo/gists{/gist_id}","starred_url":"https://api.github.com/users/ditwoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ditwoo/subscriptions","organizations_url":"https://api.github.com/users/ditwoo/orgs","repos_url":"https://api.github.com/users/ditwoo/repos","events_url":"https://api.github.com/users/ditwoo/events{/privacy}","received_events_url":"https://api.github.com/users/ditwoo/received_events","type":"User","site_admin":false},{"login":"Scitator","id":7606451,"node_id":"MDQ6VXNlcjc2MDY0NTE=","avatar_url":"https://avatars.githubusercontent.com/u/7606451?v=4","gravatar_id":"","url":"https://api.github.com/users/Scitator","html_url":"https://github.com/Scitator","followers_url":"https://api.github.com/users/Scitator/followers","following_url":"https://api.github.com/users/Scitator/following{/other_user}","gists_url":"https://api.github.com/users/Scitator/gists{/gist_id}","starred_url":"https://api.github.com/users/Scitator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Scitator/subscriptions","organizations_url":"https://api.github.com/users/Scitator/orgs","repos_url":"https://api.github.com/users/Scitator/repos","events_url":"https://api.github.com/users/Scitator/events{/privacy}","received_events_url":"https://api.github.com/users/Scitator/received_events","type":"User","site_admin":false},{"login":"bagxi","id":19803638,"node_id":"MDQ6VXNlcjE5ODAzNjM4","avatar_url":"https://avatars.githubusercontent.com/u/19803638?v=4","gravatar_id":"","url":"https://api.github.com/users/bagxi","html_url":"https://github.com/bagxi","followers_url":"https://api.github.com/users/bagxi/followers","following_url":"https://api.github.com/users/bagxi/following{/other_user}","gists_url":"https://api.github.com/users/bagxi/gists{/gist_id}","starred_url":"https://api.github.com/users/bagxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bagxi/subscriptions","organizations_url":"https://api.github.com/users/bagxi/orgs","repos_url":"https://api.github.com/users/bagxi/repos","events_url":"https://api.github.com/users/bagxi/events{/privacy}","received_events_url":"https://api.github.com/users/bagxi/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2021-02-14T11:53:44Z","updated_at":"2021-04-17T04:55:55Z","closed_at":"2021-04-17T04:55:40Z","author_association":"NONE","active_lock_reason":null,"body":"## üêõ Bug Report\r\nWhen creating a custom runner as described in the documentation, the scheduler parameter is accepted, but never called.\r\n\r\n\r\n### How To Reproduce\r\nSteps to reproduce:\r\n1. Create any sort of custom runner from the `Runner` parent class.\r\n2. Pass scheduler as a parameter to `.train` call.\r\n\r\n#### Code sample\r\n```python\r\nimport torch, torchvision\r\nfrom torch import nn\r\n\r\nfrom torchvision.datasets import MNIST\r\nfrom torch.utils.data import DataLoader\r\n\r\nfrom catalyst.dl.runner import SupervisedRunner, Runner\r\n\r\ntrain_loader = DataLoader(MNIST('mnist_test', train=True, download=True,\r\n                             transform=torchvision.transforms.Compose([\r\n                               torchvision.transforms.ToTensor(),\r\n                               torchvision.transforms.Normalize(\r\n                                 (0.1307,), (0.3081,))\r\n                             ])),\r\n  batch_size=128, shuffle=True)\r\n\r\ntest_loader = DataLoader(MNIST('mnist_test', train=False, download=True,\r\n                             transform=torchvision.transforms.Compose([\r\n                               torchvision.transforms.ToTensor(),\r\n                               torchvision.transforms.Normalize(\r\n                                 (0.1307,), (0.3081,))\r\n                             ])),\r\n  batch_size=256, shuffle=True)\r\n\r\nclass WrappedScheduler(torch.optim.lr_scheduler.ReduceLROnPlateau):\r\n    def step(self, *args, **kwargs):\r\n        raise Exception('Very step! Wow!')\r\n\r\nclass LeNet5(nn.Module):\r\n\r\n    def __init__(self, n_classes):\r\n        super(LeNet5, self).__init__()\r\n        \r\n        self.feature_extractor = nn.Sequential(            \r\n            nn.Conv2d(in_channels=1, out_channels=6, kernel_size=5, stride=1),\r\n            nn.Tanh(),\r\n            nn.AvgPool2d(kernel_size=2),\r\n            nn.Conv2d(in_channels=6, out_channels=16, kernel_size=5, stride=1),\r\n            nn.Tanh(),\r\n            nn.AvgPool2d(kernel_size=2),\r\n            nn.Conv2d(in_channels=16, out_channels=120, kernel_size=5, stride=1, padding=1),\r\n            nn.Tanh(),\r\n            nn.AvgPool2d(kernel_size=2)\r\n        )\r\n\r\n        self.classifier = nn.Sequential(\r\n            nn.Linear(in_features=120, out_features=84),\r\n            nn.Tanh(),\r\n            nn.Linear(in_features=84, out_features=n_classes),\r\n        )\r\n\r\n\r\n    def forward(self, x):\r\n        x = self.feature_extractor(x)\r\n        x = torch.flatten(x, 1)\r\n        x = self.classifier(x)\r\n        return x\r\n\r\nmodel = LeNet5(n_classes=10)\r\noptim = torch.optim.Adam(model.parameters())\r\nscheduler = WrappedScheduler(optim)\r\ncriterion = nn.CrossEntropyLoss()\r\n\r\n# this will throw an exception after one epoch.\r\nrunner = SupervisedRunner(model=model, device=torch.device('cpu'))\r\nrunner.train(model=model, \r\n             criterion=criterion, \r\n             optimizer=optim, \r\n             scheduler=scheduler, \r\n             loaders={\"train\": train_loader, \"valid\": test_loader}, verbose=True)\r\n\r\nclass SelfRunner(Runner):\r\n    def _handle_batch(self, batch):\r\n        x,y = batch\r\n\r\n        p = self.model(x)\r\n\r\n        loss = self.criterion(p, y)\r\n\r\n        self.batch_metrics.update({'loss': loss.item()})\r\n\r\n        if self.is_train_loader:\r\n            loss.backward()\r\n            self.optimizer.step()\r\n            self.optimizer.zero_grad()\r\n\r\n# this will not\r\nrunner = SelfRunner(device=torch.device('cpu'))\r\nrunner.train(model=model, \r\n             criterion=criterion, \r\n             optimizer=optim, \r\n             scheduler=scheduler, \r\n             loaders={\"train\": train_loader, \"valid\": test_loader}, verbose=True)\r\n```\r\n\r\n\r\n### Expected behavior\r\nScheduler should make a step after each epoch as in supervised runner.\r\n\r\n\r\n### Environment\r\n```bash\r\nCatalyst version: 20.11\r\nPyTorch version: 1.7.1+cu101\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.1\r\nTensorFlow version: N/A\r\nTensorBoard version: 2.3.0\r\n\r\nOS: Ubuntu 18.04.2 LTS\r\nGCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0\r\nCMake version: version 3.10.2\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.1.85\r\nGPU models and configuration: \r\nGPU 0: Quadro RTX 8000\r\nGPU 1: Quadro RTX 8000\r\nGPU 2: GeForce RTX 2080 Ti\r\nGPU 3: GeForce RTX 2080 Ti\r\n\r\nNvidia driver version: 430.50\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip3] catalyst==20.11\r\n[pip3] efficientnet-pytorch==0.6.3\r\n[pip3] numpy==1.20.0\r\n[pip3] numpydoc==1.1.0\r\n[pip3] segmentation-models-pytorch==0.1.3\r\n[pip3] tensorboard==2.3.0\r\n[pip3] tensorboard-plugin-wit==1.7.0\r\n[pip3] tensorboardX==2.1\r\n[pip3] torch==1.7.1+cu101\r\n[pip3] torchaudio==0.7.2\r\n[pip3] torchvision==0.8.2+cu101\r\n[conda] catalyst                  20.11                    pypi_0    pypi\r\n[conda] efficientnet-pytorch      0.6.3                    pypi_0    pypi\r\n[conda] mkl                       2020.4             h726a3e6_304    conda-forge\r\n[conda] mkl-service               2.3.0            py37h8f50634_2    conda-forge\r\n[conda] mkl_fft                   1.2.0            py37h161383b_1    conda-forge\r\n[conda] mkl_random                1.2.0            py37h9fdb41a_1    conda-forge\r\n[conda] numpy                     1.20.0           py37haa41c4c_0    conda-forge\r\n[conda] numpy-base                1.18.5           py37h2f8d375_0  \r\n[conda] numpydoc                  1.1.0                      py_1    conda-forge\r\n[conda] segmentation-models-pytorch 0.1.3                    pypi_0    pypi\r\n[conda] tensorboard               2.3.0                    pypi_0    pypi\r\n[conda] tensorboard-plugin-wit    1.7.0                    pypi_0    pypi\r\n[conda] tensorboardx              2.1                      pypi_0    pypi\r\n[conda] torch                     1.7.1+cu101              pypi_0    pypi\r\n[conda] torchaudio                0.7.2                    pypi_0    pypi\r\n[conda] torchvision               0.8.2+cu101              pypi_0    pypi\r\n\r\n```\r\n\r\n### Checklist\r\n- [x] bug description.\r\n- [x] steps to reproduce.\r\n- [x] expected behavior.\r\n- [x] environment.\r\n- [x] code sample / screenshots.\r\n- [x] I know, that I could [join Catalyst slack (#__questions channel)](https://join.slack.com/t/catalyst-team-core/shared_invite/zt-d9miirnn-z86oKDzFMKlMG4fgFdZafw) for issue discussion.\r\n","closed_by":{"login":"Scitator","id":7606451,"node_id":"MDQ6VXNlcjc2MDY0NTE=","avatar_url":"https://avatars.githubusercontent.com/u/7606451?v=4","gravatar_id":"","url":"https://api.github.com/users/Scitator","html_url":"https://github.com/Scitator","followers_url":"https://api.github.com/users/Scitator/followers","following_url":"https://api.github.com/users/Scitator/following{/other_user}","gists_url":"https://api.github.com/users/Scitator/gists{/gist_id}","starred_url":"https://api.github.com/users/Scitator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Scitator/subscriptions","organizations_url":"https://api.github.com/users/Scitator/orgs","repos_url":"https://api.github.com/users/Scitator/repos","events_url":"https://api.github.com/users/Scitator/events{/privacy}","received_events_url":"https://api.github.com/users/Scitator/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/1064/timeline","performed_via_github_app":null,"state_reason":"completed"}