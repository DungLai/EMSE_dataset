{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/804","repository_url":"https://api.github.com/repos/catalyst-team/catalyst","labels_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/804/labels{/name}","comments_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/804/comments","events_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/804/events","html_url":"https://github.com/catalyst-team/catalyst/issues/804","id":617187961,"node_id":"MDU6SXNzdWU2MTcxODc5NjE=","number":804,"title":"Code Architecture Enforcement","user":{"login":"ssakhavi","id":6030203,"node_id":"MDQ6VXNlcjYwMzAyMDM=","avatar_url":"https://avatars.githubusercontent.com/u/6030203?v=4","gravatar_id":"","url":"https://api.github.com/users/ssakhavi","html_url":"https://github.com/ssakhavi","followers_url":"https://api.github.com/users/ssakhavi/followers","following_url":"https://api.github.com/users/ssakhavi/following{/other_user}","gists_url":"https://api.github.com/users/ssakhavi/gists{/gist_id}","starred_url":"https://api.github.com/users/ssakhavi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ssakhavi/subscriptions","organizations_url":"https://api.github.com/users/ssakhavi/orgs","repos_url":"https://api.github.com/users/ssakhavi/repos","events_url":"https://api.github.com/users/ssakhavi/events{/privacy}","received_events_url":"https://api.github.com/users/ssakhavi/received_events","type":"User","site_admin":false},"labels":[{"id":1029400276,"node_id":"MDU6TGFiZWwxMDI5NDAwMjc2","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-05-13T06:45:39Z","updated_at":"2020-06-28T09:49:28Z","closed_at":"2020-06-28T09:49:28Z","author_association":"NONE","active_lock_reason":null,"body":"## ðŸš€ Feature Request\r\nEnforcing the structure of the code \r\n\r\n\r\n### Motivation\r\nIn many collaborative projects or even projects that explore a certain dataset with multiple annotations, one of the features that is useful is enforcing to the developers in how to present the final code. \r\n\r\nThis will result in code readability and cleaner code and faster validation and visualization.\r\nI am not proposing that the current structure to change, but rather, I am proposing that there is also an option where a single object can be defined and then passed to a single function for training. \r\n\r\n### Proposal\r\nIn the following, I refer to the [advanced segmentation code](https://github.com/catalyst-team/catalyst/blob/master/examples/notebooks/segmentation-tutorial.ipynb).\r\n\r\nIn the `runner` object, when using the `train` method, the following arguments are given: \r\n```\r\nrunner.train(\r\n    model=model,\r\n    criterion=criterion,\r\n    optimizer=optimizer,\r\n    scheduler=scheduler,\r\n    # our dataloaders\r\n    loaders=loaders,\r\n    # We can specify the callbacks list for the experiment;\r\n    callbacks=callbacks,\r\n    # path to save logs\r\n    logdir=logdir,\r\n    num_epochs=num_epochs,\r\n    # save our best checkpoint by IoU metric\r\n    main_metric=\"iou\",\r\n    # IoU needs to be maximized.\r\n    minimize_metric=False,\r\n    # for FP16. It uses the variable from the very first cell\r\n    fp16=fp16_params,\r\n    # prints train logs\r\n    verbose=True,\r\n)\r\n```\r\nI propose that some of the arguments are encapsulated into a single object and then passed to this method or the training method called on the new object. Let's call the new object `ExperimentObject` (I'm sure you guys can come up with a better name).\r\n\r\n```\r\nclass MyExperiment(ExperimentObject):\r\n  __init__(self):\r\n  self.experiment_name = ...\r\n\r\n  _get_model(self):\r\n   ....\r\n  return model\r\n _get_data_loader(self):\r\n  ...\r\n return loader\r\n_get_valid_visualization(self):\r\n# This method is for inference\r\n\r\n\r\n\r\n\r\n\r\n# And eventually:\r\n\r\nrunner.train(MyExperiment, ...)\r\n# or \r\nMyExperiment.train()\r\n\r\n# For visualization of the results (e.g. 3 Random Images):\r\nMyExperiment.visualize_valid(random=true,number=3)\r\n```\r\n\r\n\r\n\r\n### Alternatives\r\nThis feature is an extended version to the structure proposed in pytorch lightning and believe this extra feature can boost the usage of catalyst. \r\n","closed_by":{"login":"Scitator","id":7606451,"node_id":"MDQ6VXNlcjc2MDY0NTE=","avatar_url":"https://avatars.githubusercontent.com/u/7606451?v=4","gravatar_id":"","url":"https://api.github.com/users/Scitator","html_url":"https://github.com/Scitator","followers_url":"https://api.github.com/users/Scitator/followers","following_url":"https://api.github.com/users/Scitator/following{/other_user}","gists_url":"https://api.github.com/users/Scitator/gists{/gist_id}","starred_url":"https://api.github.com/users/Scitator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Scitator/subscriptions","organizations_url":"https://api.github.com/users/Scitator/orgs","repos_url":"https://api.github.com/users/Scitator/repos","events_url":"https://api.github.com/users/Scitator/events{/privacy}","received_events_url":"https://api.github.com/users/Scitator/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/804/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/804/timeline","performed_via_github_app":null,"state_reason":"completed"}