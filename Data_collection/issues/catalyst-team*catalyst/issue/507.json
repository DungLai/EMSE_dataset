{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/507","repository_url":"https://api.github.com/repos/catalyst-team/catalyst","labels_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/507/labels{/name}","comments_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/507/comments","events_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/507/events","html_url":"https://github.com/catalyst-team/catalyst/issues/507","id":519523217,"node_id":"MDU6SXNzdWU1MTk1MjMyMTc=","number":507,"title":"Accumulate gradient","user":{"login":"wmmxk","id":10648437,"node_id":"MDQ6VXNlcjEwNjQ4NDM3","avatar_url":"https://avatars.githubusercontent.com/u/10648437?v=4","gravatar_id":"","url":"https://api.github.com/users/wmmxk","html_url":"https://github.com/wmmxk","followers_url":"https://api.github.com/users/wmmxk/followers","following_url":"https://api.github.com/users/wmmxk/following{/other_user}","gists_url":"https://api.github.com/users/wmmxk/gists{/gist_id}","starred_url":"https://api.github.com/users/wmmxk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wmmxk/subscriptions","organizations_url":"https://api.github.com/users/wmmxk/orgs","repos_url":"https://api.github.com/users/wmmxk/repos","events_url":"https://api.github.com/users/wmmxk/events{/privacy}","received_events_url":"https://api.github.com/users/wmmxk/received_events","type":"User","site_admin":false},"labels":[{"id":1029400270,"node_id":"MDU6TGFiZWwxMDI5NDAwMjcw","url":"https://api.github.com/repos/catalyst-team/catalyst/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2019-11-07T21:28:38Z","updated_at":"2020-04-22T12:41:03Z","closed_at":"2020-04-22T12:41:03Z","author_association":"NONE","active_lock_reason":null,"body":"I was trying to use the accumulate gradient feature but run into an error. The training works without the ```OptimizerCallback(accmulation_steps=2)```.\r\n\r\n```\r\nrunner.train(\r\n    model=model,\r\n    criterion=criterion,\r\n    optimizer=optimizer,\r\n    scheduler=scheduler,\r\n    loaders=loaders,\r\n    callbacks=[DiceCallback(), EarlyStoppingCallback(patience=5, min_delta=0.001), \r\n                            OptimizerCallback(accumulation_steps=2)],\r\n    logdir=logdir,\r\n    num_epochs=num_epochs,\r\n    verbose=True\r\n)\r\n```\r\n**FYI,  the error message:**\r\n\r\n0/60 * Epoch (train):   0% 0/624 [00:00<?, ?it/s]\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-32-d63c6b5ac823> in <module>\r\n      9     logdir=logdir,\r\n     10     num_epochs=num_epochs,\r\n---> 11     verbose=True\r\n     12 )\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/runner/supervised.py in train(self, model, criterion, optimizer, loaders, logdir, callbacks, scheduler, resume, num_epochs, valid_loader, main_metric, minimize_metric, verbose, state_kwargs, checkpoint_data, fp16, monitoring_params, check)\r\n    195             monitoring_params=monitoring_params\r\n    196         )\r\n--> 197         self.run_experiment(experiment, check=check)\r\n    198 \r\n    199     def infer(\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/runner.py in run_experiment(self, experiment, check)\r\n    229         except (Exception, KeyboardInterrupt) as ex:\r\n    230             self.state.exception = ex\r\n--> 231             self._run_event(\"exception\")\r\n    232 \r\n    233         return self\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/runner.py in _run_event(self, event)\r\n    100 \r\n    101         if self.state is not None and hasattr(self.state, f\"on_{event}_post\"):\r\n--> 102             getattr(self.state, f\"on_{event}_post\")()\r\n    103 \r\n    104     @abstractmethod\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/state.py in on_exception_post(self)\r\n    183     def on_exception_post(self):\r\n    184         for logger in self.loggers.values():\r\n--> 185             logger.on_exception(self)\r\n    186 \r\n    187 \r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/callbacks/logging.py in on_exception(self, state)\r\n    194 \r\n    195         if state.need_reraise_exception:\r\n--> 196             raise exception\r\n    197 \r\n    198 \r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/runner.py in run_experiment(self, experiment, check)\r\n    226         try:\r\n    227             for stage in self.experiment.stages:\r\n--> 228                 self._run_stage(stage)\r\n    229         except (Exception, KeyboardInterrupt) as ex:\r\n    230             self.state.exception = ex\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/runner.py in _run_stage(self, stage)\r\n    199 \r\n    200             self._run_event(\"epoch_start\")\r\n--> 201             self._run_epoch(loaders)\r\n    202             self._run_event(\"epoch_end\")\r\n    203 \r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/runner.py in _run_epoch(self, loaders)\r\n    186             self._run_event(\"loader_start\")\r\n    187             with torch.set_grad_enabled(self.state.need_backward):\r\n--> 188                 self._run_loader(loader)\r\n    189             self._run_event(\"loader_end\")\r\n    190 \r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/runner.py in _run_loader(self, loader)\r\n    148 \r\n    149         for i, batch in enumerate(loader):\r\n--> 150             self._run_batch(batch)\r\n    151 \r\n    152             self.state.timer.reset()\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/runner.py in _run_batch(self, batch)\r\n    130         self.state.timer.stop(\"_timers/model_time\")\r\n    131         self.state.timer.stop(\"_timers/batch_time\")\r\n--> 132         self._run_event(\"batch_end\")\r\n    133 \r\n    134     def _run_loader(self, loader):\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/runner.py in _run_event(self, event)\r\n     97         if self.callbacks is not None:\r\n     98             for callback in self.callbacks.values():\r\n---> 99                 getattr(callback, f\"on_{event}\")(self.state)\r\n    100 \r\n    101         if self.state is not None and hasattr(self.state, f\"on_{event}_post\"):\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/callbacks/optimizer.py in on_batch_end(self, state)\r\n    117             return\r\n    118 \r\n--> 119         loss = self._get_loss(state)\r\n    120 \r\n    121         self._accumulation_counter += 1\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/callbacks/optimizer.py in _get_loss(self, state)\r\n     91 \r\n     92     def _get_loss(self, state) -> torch.Tensor:\r\n---> 93         loss = state.get_key(key=\"loss\", inner_key=self.loss_key)\r\n     94 \r\n     95         if isinstance(loss, list):\r\n\r\n~/.conda/envs/mmdet_cloud/lib/python3.6/site-packages/catalyst/dl/core/state.py in get_key(self, key, inner_key)\r\n    114             return getattr(self, key)\r\n    115         else:\r\n--> 116             return getattr(self, key)[inner_key]\r\n    117 \r\n    118     def set_key(self, value, key, inner_key=None):\r\n\r\nTypeError: 'NoneType' object is not subscriptable\r\n","closed_by":{"login":"Scitator","id":7606451,"node_id":"MDQ6VXNlcjc2MDY0NTE=","avatar_url":"https://avatars.githubusercontent.com/u/7606451?v=4","gravatar_id":"","url":"https://api.github.com/users/Scitator","html_url":"https://github.com/Scitator","followers_url":"https://api.github.com/users/Scitator/followers","following_url":"https://api.github.com/users/Scitator/following{/other_user}","gists_url":"https://api.github.com/users/Scitator/gists{/gist_id}","starred_url":"https://api.github.com/users/Scitator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Scitator/subscriptions","organizations_url":"https://api.github.com/users/Scitator/orgs","repos_url":"https://api.github.com/users/Scitator/repos","events_url":"https://api.github.com/users/Scitator/events{/privacy}","received_events_url":"https://api.github.com/users/Scitator/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/catalyst-team/catalyst/issues/507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/catalyst-team/catalyst/issues/507/timeline","performed_via_github_app":null,"state_reason":"completed"}