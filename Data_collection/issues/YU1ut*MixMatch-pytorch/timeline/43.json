[{"url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/comments/947684272","html_url":"https://github.com/YU1ut/MixMatch-pytorch/issues/43#issuecomment-947684272","issue_url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/43","id":947684272,"node_id":"IC_kwDOCzP5ec44fIOw","user":{"login":"DingYuan0118","id":42141845,"node_id":"MDQ6VXNlcjQyMTQxODQ1","avatar_url":"https://avatars.githubusercontent.com/u/42141845?v=4","gravatar_id":"","url":"https://api.github.com/users/DingYuan0118","html_url":"https://github.com/DingYuan0118","followers_url":"https://api.github.com/users/DingYuan0118/followers","following_url":"https://api.github.com/users/DingYuan0118/following{/other_user}","gists_url":"https://api.github.com/users/DingYuan0118/gists{/gist_id}","starred_url":"https://api.github.com/users/DingYuan0118/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DingYuan0118/subscriptions","organizations_url":"https://api.github.com/users/DingYuan0118/orgs","repos_url":"https://api.github.com/users/DingYuan0118/repos","events_url":"https://api.github.com/users/DingYuan0118/events{/privacy}","received_events_url":"https://api.github.com/users/DingYuan0118/received_events","type":"User","site_admin":false},"created_at":"2021-10-20T13:46:36Z","updated_at":"2021-10-20T13:47:58Z","author_association":"NONE","body":"In [`train.py` line 228-235](https://github.com/YU1ut/MixMatch-pytorch/blob/master/train.py#L228-235) , there is\r\n```\r\nwith torch.no_grad():\r\n    # compute guessed labels of unlabel samples\r\n    outputs_u = model(inputs_u)\r\n    outputs_u2 = model(inputs_u2)\r\n    p = (torch.softmax(outputs_u, dim=1) + torch.softmax(outputs_u2, dim=1)) / 2\r\n    pt = p**(1/args.T)\r\n    targets_u = pt / pt.sum(dim=1, keepdim=True)\r\n    targets_u = targets_u.detach()\r\n```\r\nAt this time, the **training mode** for the model is `True` means `model.training = True`. The Batchnorm layer will track the mean and std in the current unlabeled sample batch and update the `running_mean` and `running_var` of the BN layer. Should we set `model.eval()` here like\r\n```\r\nwith torch.no_grad():\r\n    # compute guessed labels of unlabel samples\r\n    model.eval()\r\n    outputs_u = model(inputs_u)\r\n    outputs_u2 = model(inputs_u2)\r\n    p = (torch.softmax(outputs_u, dim=1) + torch.softmax(outputs_u2, dim=1)) / 2\r\n    pt = p**(1/args.T)\r\n    targets_u = pt / pt.sum(dim=1, keepdim=True)\r\n    targets_u = targets_u.detach()\r\n    model.train()\r\n```\r\nto avoid repeated updates in the case of unlabeled samples?","reactions":{"url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/comments/947684272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"DingYuan0118","id":42141845,"node_id":"MDQ6VXNlcjQyMTQxODQ1","avatar_url":"https://avatars.githubusercontent.com/u/42141845?v=4","gravatar_id":"","url":"https://api.github.com/users/DingYuan0118","html_url":"https://github.com/DingYuan0118","followers_url":"https://api.github.com/users/DingYuan0118/followers","following_url":"https://api.github.com/users/DingYuan0118/following{/other_user}","gists_url":"https://api.github.com/users/DingYuan0118/gists{/gist_id}","starred_url":"https://api.github.com/users/DingYuan0118/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DingYuan0118/subscriptions","organizations_url":"https://api.github.com/users/DingYuan0118/orgs","repos_url":"https://api.github.com/users/DingYuan0118/repos","events_url":"https://api.github.com/users/DingYuan0118/events{/privacy}","received_events_url":"https://api.github.com/users/DingYuan0118/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/comments/948182549","html_url":"https://github.com/YU1ut/MixMatch-pytorch/issues/43#issuecomment-948182549","issue_url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/43","id":948182549,"node_id":"IC_kwDOCzP5ec44hB4V","user":{"login":"DingYuan0118","id":42141845,"node_id":"MDQ6VXNlcjQyMTQxODQ1","avatar_url":"https://avatars.githubusercontent.com/u/42141845?v=4","gravatar_id":"","url":"https://api.github.com/users/DingYuan0118","html_url":"https://github.com/DingYuan0118","followers_url":"https://api.github.com/users/DingYuan0118/followers","following_url":"https://api.github.com/users/DingYuan0118/following{/other_user}","gists_url":"https://api.github.com/users/DingYuan0118/gists{/gist_id}","starred_url":"https://api.github.com/users/DingYuan0118/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DingYuan0118/subscriptions","organizations_url":"https://api.github.com/users/DingYuan0118/orgs","repos_url":"https://api.github.com/users/DingYuan0118/repos","events_url":"https://api.github.com/users/DingYuan0118/events{/privacy}","received_events_url":"https://api.github.com/users/DingYuan0118/received_events","type":"User","site_admin":false},"created_at":"2021-10-21T01:47:24Z","updated_at":"2021-10-21T01:47:24Z","author_association":"NONE","body":"I have tried this method, but the result failed and the training loss is unstable. I don`t know what's wrong with it. Could you please give me some explanation?","reactions":{"url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/comments/948182549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"DingYuan0118","id":42141845,"node_id":"MDQ6VXNlcjQyMTQxODQ1","avatar_url":"https://avatars.githubusercontent.com/u/42141845?v=4","gravatar_id":"","url":"https://api.github.com/users/DingYuan0118","html_url":"https://github.com/DingYuan0118","followers_url":"https://api.github.com/users/DingYuan0118/followers","following_url":"https://api.github.com/users/DingYuan0118/following{/other_user}","gists_url":"https://api.github.com/users/DingYuan0118/gists{/gist_id}","starred_url":"https://api.github.com/users/DingYuan0118/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DingYuan0118/subscriptions","organizations_url":"https://api.github.com/users/DingYuan0118/orgs","repos_url":"https://api.github.com/users/DingYuan0118/repos","events_url":"https://api.github.com/users/DingYuan0118/events{/privacy}","received_events_url":"https://api.github.com/users/DingYuan0118/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/comments/953458843","html_url":"https://github.com/YU1ut/MixMatch-pytorch/issues/43#issuecomment-953458843","issue_url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/43","id":953458843,"node_id":"IC_kwDOCzP5ec441KCb","user":{"login":"DingYuan0118","id":42141845,"node_id":"MDQ6VXNlcjQyMTQxODQ1","avatar_url":"https://avatars.githubusercontent.com/u/42141845?v=4","gravatar_id":"","url":"https://api.github.com/users/DingYuan0118","html_url":"https://github.com/DingYuan0118","followers_url":"https://api.github.com/users/DingYuan0118/followers","following_url":"https://api.github.com/users/DingYuan0118/following{/other_user}","gists_url":"https://api.github.com/users/DingYuan0118/gists{/gist_id}","starred_url":"https://api.github.com/users/DingYuan0118/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DingYuan0118/subscriptions","organizations_url":"https://api.github.com/users/DingYuan0118/orgs","repos_url":"https://api.github.com/users/DingYuan0118/repos","events_url":"https://api.github.com/users/DingYuan0118/events{/privacy}","received_events_url":"https://api.github.com/users/DingYuan0118/received_events","type":"User","site_admin":false},"created_at":"2021-10-28T02:56:14Z","updated_at":"2021-10-28T02:56:14Z","author_association":"NONE","body":"I have found the answer after running a lot of ablation experiments.\r\n\r\nthe `model.eval()` changes the way the `BatchNorm2d` layer behaves. When in the `eval()` mode, BN layer will use the `running_mean` and `running_var` to compute the result, which is improper since the `running_mean` and `running_var` is initialized as 0 and 1 when the training process starts. So if you want to avoid repeated updates for BN statistics as I describe above, you should do things like this:\r\n```py\r\nimport torch.nn as nn\r\ndef freeze_bn(m):\r\n    if isinstance(m, nn,BatchNorm2d):\r\n        m.track_running_stats=False\r\n\r\ndef activate_bn(m):\r\n    if isinstance(m, nn.BatchNorm2d):\r\n        m.track_running_stats=True\r\n\r\nwith torch.no_grad():\r\n    # compute guessed labels of unlabel samples\r\n    model.apply(freeze_bn)\r\n    outputs_u = model(inputs_u)\r\n    outputs_u2 = model(inputs_u2)\r\n    p = (torch.softmax(outputs_u, dim=1) + torch.softmax(outputs_u2, dim=1)) / 2\r\n    pt = p**(1/args.T)\r\n    targets_u = pt / pt.sum(dim=1, keepdim=True)\r\n    targets_u = targets_u.detach()\r\n    model.apply(activate_bn)\r\n```\r\n\r\nThis will produce the right result.","reactions":{"url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/comments/953458843/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"DingYuan0118","id":42141845,"node_id":"MDQ6VXNlcjQyMTQxODQ1","avatar_url":"https://avatars.githubusercontent.com/u/42141845?v=4","gravatar_id":"","url":"https://api.github.com/users/DingYuan0118","html_url":"https://github.com/DingYuan0118","followers_url":"https://api.github.com/users/DingYuan0118/followers","following_url":"https://api.github.com/users/DingYuan0118/following{/other_user}","gists_url":"https://api.github.com/users/DingYuan0118/gists{/gist_id}","starred_url":"https://api.github.com/users/DingYuan0118/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DingYuan0118/subscriptions","organizations_url":"https://api.github.com/users/DingYuan0118/orgs","repos_url":"https://api.github.com/users/DingYuan0118/repos","events_url":"https://api.github.com/users/DingYuan0118/events{/privacy}","received_events_url":"https://api.github.com/users/DingYuan0118/received_events","type":"User","site_admin":false}},{"id":5531163569,"node_id":"CE_lADOCzP5ec49elFIzwAAAAFJrtux","url":"https://api.github.com/repos/YU1ut/MixMatch-pytorch/issues/events/5531163569","actor":{"login":"DingYuan0118","id":42141845,"node_id":"MDQ6VXNlcjQyMTQxODQ1","avatar_url":"https://avatars.githubusercontent.com/u/42141845?v=4","gravatar_id":"","url":"https://api.github.com/users/DingYuan0118","html_url":"https://github.com/DingYuan0118","followers_url":"https://api.github.com/users/DingYuan0118/followers","following_url":"https://api.github.com/users/DingYuan0118/following{/other_user}","gists_url":"https://api.github.com/users/DingYuan0118/gists{/gist_id}","starred_url":"https://api.github.com/users/DingYuan0118/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DingYuan0118/subscriptions","organizations_url":"https://api.github.com/users/DingYuan0118/orgs","repos_url":"https://api.github.com/users/DingYuan0118/repos","events_url":"https://api.github.com/users/DingYuan0118/events{/privacy}","received_events_url":"https://api.github.com/users/DingYuan0118/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2021-10-28T02:56:15Z","state_reason":null,"performed_via_github_app":null}]