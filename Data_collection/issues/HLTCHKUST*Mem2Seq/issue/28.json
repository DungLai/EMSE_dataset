{"url":"https://api.github.com/repos/HLTCHKUST/Mem2Seq/issues/28","repository_url":"https://api.github.com/repos/HLTCHKUST/Mem2Seq","labels_url":"https://api.github.com/repos/HLTCHKUST/Mem2Seq/issues/28/labels{/name}","comments_url":"https://api.github.com/repos/HLTCHKUST/Mem2Seq/issues/28/comments","events_url":"https://api.github.com/repos/HLTCHKUST/Mem2Seq/issues/28/events","html_url":"https://github.com/HLTCHKUST/Mem2Seq/issues/28","id":606984804,"node_id":"MDU6SXNzdWU2MDY5ODQ4MDQ=","number":28,"title":"The meaning of comments in the code.","user":{"login":"fairy-of-9","id":37280914,"node_id":"MDQ6VXNlcjM3MjgwOTE0","avatar_url":"https://avatars.githubusercontent.com/u/37280914?v=4","gravatar_id":"","url":"https://api.github.com/users/fairy-of-9","html_url":"https://github.com/fairy-of-9","followers_url":"https://api.github.com/users/fairy-of-9/followers","following_url":"https://api.github.com/users/fairy-of-9/following{/other_user}","gists_url":"https://api.github.com/users/fairy-of-9/gists{/gist_id}","starred_url":"https://api.github.com/users/fairy-of-9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fairy-of-9/subscriptions","organizations_url":"https://api.github.com/users/fairy-of-9/orgs","repos_url":"https://api.github.com/users/fairy-of-9/repos","events_url":"https://api.github.com/users/fairy-of-9/events{/privacy}","received_events_url":"https://api.github.com/users/fairy-of-9/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-26T11:06:53Z","updated_at":"2020-04-26T11:06:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! Thanks for your share code.\r\nI'm studying with your paper with code.\r\nI have a question about comments in your code.\r\n\r\n`EncoderMemNN in Mem2Seq.py`\r\n```\r\n    def forward(self, story):\r\n        story = story.transpose(0,1)\r\n        story_size = story.size() # b * m * 3 \r\n        if self.unk_mask:\r\n            if(self.training):\r\n                ones = np.ones((story_size[0],story_size[1],story_size[2]))\r\n                rand_mask = np.random.binomial([np.ones((story_size[0],story_size[1]))],1-self.dropout)[0]\r\n                ones[:,:,0] = ones[:,:,0] * rand_mask\r\n                a = Variable(torch.Tensor(ones))\r\n                if USE_CUDA: a = a.cuda()\r\n                story = story*a.long()\r\n        u = [self.get_state(story.size(0))]\r\n        for hop in range(self.max_hops):\r\n            embed_A = self.C[hop](story.contiguous().view(story.size(0), -1).long()) # b * (m * s) * e\r\n            embed_A = embed_A.view(story_size+(embed_A.size(-1),)) # b * m * s * e\r\n            m_A = torch.sum(embed_A, 2).squeeze(2) # b * m * e\r\n```\r\n\r\nWhat does `b, m, s, e, 3` mean?\r\n\r\nThank you!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/HLTCHKUST/Mem2Seq/issues/28/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/HLTCHKUST/Mem2Seq/issues/28/timeline","performed_via_github_app":null,"state_reason":null}