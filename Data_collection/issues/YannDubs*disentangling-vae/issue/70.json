{"url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/70","repository_url":"https://api.github.com/repos/YannDubs/disentangling-vae","labels_url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/70/labels{/name}","comments_url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/70/comments","events_url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/70/events","html_url":"https://github.com/YannDubs/disentangling-vae/issues/70","id":880718128,"node_id":"MDU6SXNzdWU4ODA3MTgxMjg=","number":70,"title":"evaluate.py compute_losses?","user":{"login":"MathildaHwang","id":12232317,"node_id":"MDQ6VXNlcjEyMjMyMzE3","avatar_url":"https://avatars.githubusercontent.com/u/12232317?v=4","gravatar_id":"","url":"https://api.github.com/users/MathildaHwang","html_url":"https://github.com/MathildaHwang","followers_url":"https://api.github.com/users/MathildaHwang/followers","following_url":"https://api.github.com/users/MathildaHwang/following{/other_user}","gists_url":"https://api.github.com/users/MathildaHwang/gists{/gist_id}","starred_url":"https://api.github.com/users/MathildaHwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MathildaHwang/subscriptions","organizations_url":"https://api.github.com/users/MathildaHwang/orgs","repos_url":"https://api.github.com/users/MathildaHwang/repos","events_url":"https://api.github.com/users/MathildaHwang/events{/privacy}","received_events_url":"https://api.github.com/users/MathildaHwang/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-08T11:49:43Z","updated_at":"2021-05-08T12:24:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! Thank u for this wonderful work!\r\nIn evaluate.py-->compute_losses(self, dataloader), it seems that  **only one batch** of data is used for evaluation.\r\nBut when it comes to loss computation, \r\n>  losses = {k: sum(v) / len(dataloader) for k, v in storer.items()}\r\n\r\nit uses len(dataloader) to average the loss.  Should that be the length of element v?\r\nI wonder if I misunderstand the above computation.\r\nAny help will be appreciated! ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/70/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/70/timeline","performed_via_github_app":null,"state_reason":null}