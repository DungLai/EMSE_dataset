{"url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/64","repository_url":"https://api.github.com/repos/YannDubs/disentangling-vae","labels_url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/64/comments","events_url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/64/events","html_url":"https://github.com/YannDubs/disentangling-vae/issues/64","id":817280827,"node_id":"MDU6SXNzdWU4MTcyODA4Mjc=","number":64,"title":"Low MIG values bug found & solution","user":{"login":"DianeBouchacourt","id":13796686,"node_id":"MDQ6VXNlcjEzNzk2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13796686?v=4","gravatar_id":"","url":"https://api.github.com/users/DianeBouchacourt","html_url":"https://github.com/DianeBouchacourt","followers_url":"https://api.github.com/users/DianeBouchacourt/followers","following_url":"https://api.github.com/users/DianeBouchacourt/following{/other_user}","gists_url":"https://api.github.com/users/DianeBouchacourt/gists{/gist_id}","starred_url":"https://api.github.com/users/DianeBouchacourt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DianeBouchacourt/subscriptions","organizations_url":"https://api.github.com/users/DianeBouchacourt/orgs","repos_url":"https://api.github.com/users/DianeBouchacourt/repos","events_url":"https://api.github.com/users/DianeBouchacourt/events{/privacy}","received_events_url":"https://api.github.com/users/DianeBouchacourt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-02-26T11:32:41Z","updated_at":"2021-03-02T11:08:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I trained a beta TCVAE with the code from https://github.com/rtqichen/beta-tcvae which gives MIG for beta TCVAE of ~0.50. When computing MIG with your code with the same model (based on MLP), I had values close to 0.0008. \r\n\r\nDifferences with Chen's code I found important:\r\n- MIG values are not computed on shape in Chen's code (not considered a factor of variation). I had to modify the dsprites dataset to remove shape from dSprites lat_names, and write a custom _estimate_H_zCv function. I can share if you want.\r\n- Chen uses samples, not the mean as you do here https://github.com/YannDubs/disentangling-vae/blob/7b8285baa19d591cf34c652049884aca5d8acbca/disvae/models/vae.py#L71  since self.training is False\r\n- The most important change is I changed these lines https://github.com/YannDubs/disentangling-vae/blob/7b8285baa19d591cf34c652049884aca5d8acbca/disvae/evaluate.py#L272 for \r\n\r\n        samples_zCx = samples_zCx.permute(1,0)\r\n        samples_zCx = samples_zCx.index_select(1, samples_x).view(latent_dim, n_samples)\r\n        samples_zCx = samples_zCx.view(1, latent_dim, n_samples).expand(len_dataset, latent_dim, n_samples)\r\n        mean = params_zCX[0].view(len_dataset, latent_dim, 1).expand(len_dataset, latent_dim, n_samples)\r\n        log_var = params_zCX[1].view(len_dataset, latent_dim, 1).expand(len_dataset, latent_dim, n_samples)\r\n\r\nwhich are closer to Chen's code, and I get values of ~0.50 now too. I don't exactly know why the original lines where not expanding the correct way","closed_by":null,"reactions":{"url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/64/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/YannDubs/disentangling-vae/issues/64/timeline","performed_via_github_app":null,"state_reason":null}