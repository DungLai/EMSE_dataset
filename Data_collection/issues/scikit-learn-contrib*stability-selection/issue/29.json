{"url":"https://api.github.com/repos/scikit-learn-contrib/stability-selection/issues/29","repository_url":"https://api.github.com/repos/scikit-learn-contrib/stability-selection","labels_url":"https://api.github.com/repos/scikit-learn-contrib/stability-selection/issues/29/labels{/name}","comments_url":"https://api.github.com/repos/scikit-learn-contrib/stability-selection/issues/29/comments","events_url":"https://api.github.com/repos/scikit-learn-contrib/stability-selection/issues/29/events","html_url":"https://github.com/scikit-learn-contrib/stability-selection/issues/29","id":517935786,"node_id":"MDU6SXNzdWU1MTc5MzU3ODY=","number":29,"title":" ValueError: all the input array dimensions except for the concatenation axis must match exactly","user":{"login":"goerch","id":3709434,"node_id":"MDQ6VXNlcjM3MDk0MzQ=","avatar_url":"https://avatars.githubusercontent.com/u/3709434?v=4","gravatar_id":"","url":"https://api.github.com/users/goerch","html_url":"https://github.com/goerch","followers_url":"https://api.github.com/users/goerch/followers","following_url":"https://api.github.com/users/goerch/following{/other_user}","gists_url":"https://api.github.com/users/goerch/gists{/gist_id}","starred_url":"https://api.github.com/users/goerch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/goerch/subscriptions","organizations_url":"https://api.github.com/users/goerch/orgs","repos_url":"https://api.github.com/users/goerch/repos","events_url":"https://api.github.com/users/goerch/events{/privacy}","received_events_url":"https://api.github.com/users/goerch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-11-05T17:58:50Z","updated_at":"2019-11-07T04:59:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The following cell from my notebook\r\n\r\n```\r\nfrom sklearn.feature_selection import VarianceThreshold\r\nfrom sklearn.feature_selection import SelectFpr, SelectFdr, SelectFwe\r\nfrom sklearn.preprocessing import FunctionTransformer, StandardScaler, MaxAbsScaler, RobustScaler\r\nfrom sklearn.linear_model import LogisticRegression, LogisticRegressionCV\r\nfrom sklearn.pipeline import Pipeline\r\nfrom stability_selection import StabilitySelection\r\nfrom sklearn.model_selection import cross_val_score\r\nfrom sklearn.metrics import accuracy_score\r\nfrom sklearn.metrics import roc_auc_score\r\nvt = VarianceThreshold()\r\nscl = RobustScaler(with_centering=False)\r\nlr = LogisticRegression(random_state=42, solver='lbfgs', C=.05, max_iter=10000, n_jobs=-1, verbose=1)\r\npipe = Pipeline([('vt', vt), ('scl', scl), ('lr', lr)])\r\nclf = StabilitySelection(base_estimator=pipe, lambda_name='lr__C', lambda_grid=np.array([.075, .05, .025]), n_bootstrap_iterations=3)\r\n```\r\n\r\ngives the output\r\n\r\n```\r\n[Parallel(n_jobs=-1)]: Using backend LokyBackend with 4 concurrent workers.\r\n[Parallel(n_jobs=-1)]: Done   1 out of   1 | elapsed:   34.1s finished\r\n[Parallel(n_jobs=-1)]: Using backend LokyBackend with 4 concurrent workers.\r\n[Parallel(n_jobs=-1)]: Done   1 out of   1 | elapsed:   32.4s finished\r\n[Parallel(n_jobs=-1)]: Using backend LokyBackend with 4 concurrent workers.\r\n[Parallel(n_jobs=-1)]: Done   1 out of   1 | elapsed:   32.9s finished\r\n```\r\n\r\nand then the traceback\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-41-f62a92b4924d> in <module>\r\n     38 clf = StabilitySelection(base_estimator=pipe, lambda_name='lr__C', lambda_grid=np.array([.075, .05, .025]), n_bootstrap_iterations=3)\r\n     39 \r\n---> 40 clf.fit(X_train, y_train)\r\n     41 #print(lr.C_)\r\n     42 print(pd.Series(features)[vt.get_support(indices=True)[sel.get_support(indices=True)[clf.get_support()]]].sort_values().tail(60))\r\n\r\n/opt/conda/lib/python3.6/site-packages/stability_selection/stability_selection.py in fit(self, X, y)\r\n    344               for subsample in bootstrap_samples)\r\n    345 \r\n--> 346             stability_scores[:, idx] = np.vstack(selected_variables).mean(axis=0)\r\n    347 \r\n    348         self.stability_scores_ = stability_scores\r\n\r\n/opt/conda/lib/python3.6/site-packages/numpy/core/shape_base.py in vstack(tup)\r\n    281     \"\"\"\r\n    282     _warn_for_nonsequence(tup)\r\n--> 283     return _nx.concatenate([atleast_2d(_m) for _m in tup], 0)\r\n    284 \r\n    285 \r\n\r\nValueError: all the input array dimensions except for the concatenation axis must match exactly\r\n```\r\n\r\nX_train is a scipy crs_matrix. Is this expected behaviour?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/scikit-learn-contrib/stability-selection/issues/29/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/scikit-learn-contrib/stability-selection/issues/29/timeline","performed_via_github_app":null,"state_reason":null}