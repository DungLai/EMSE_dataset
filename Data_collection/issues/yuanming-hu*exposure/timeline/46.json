[{"url":"https://api.github.com/repos/yuanming-hu/exposure/issues/comments/530932683","html_url":"https://github.com/yuanming-hu/exposure/issues/46#issuecomment-530932683","issue_url":"https://api.github.com/repos/yuanming-hu/exposure/issues/46","id":530932683,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDkzMjY4Mw==","user":{"login":"XononoX","id":13067661,"node_id":"MDQ6VXNlcjEzMDY3NjYx","avatar_url":"https://avatars.githubusercontent.com/u/13067661?v=4","gravatar_id":"","url":"https://api.github.com/users/XononoX","html_url":"https://github.com/XononoX","followers_url":"https://api.github.com/users/XononoX/followers","following_url":"https://api.github.com/users/XononoX/following{/other_user}","gists_url":"https://api.github.com/users/XononoX/gists{/gist_id}","starred_url":"https://api.github.com/users/XononoX/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/XononoX/subscriptions","organizations_url":"https://api.github.com/users/XononoX/orgs","repos_url":"https://api.github.com/users/XononoX/repos","events_url":"https://api.github.com/users/XononoX/events{/privacy}","received_events_url":"https://api.github.com/users/XononoX/received_events","type":"User","site_admin":false},"created_at":"2019-09-12T17:46:52Z","updated_at":"2019-09-12T17:50:25Z","author_association":"NONE","body":"I got a new model trained after changing some of the code in filters.py. I modified the class SaturationPlusFilter() to more closely resemble the ContrastFilter. After doing this and training for 20000 iterations over my own data, I now am getting the Saturation filter to give me different parameters! Unfortunately it's consistently returning parameters between -0.45 and -0.51, so it's reliably reducing saturation instead of enhancing it, which is what I expected the training to teach the network to do based on my Uncorrected and Corrected image dataset... \r\n\r\nHere's the code I changed to get the SaturationPlusFilter to work: \r\n\r\n```\r\nclass SaturationPlusFilter(Filter):\r\n\r\n  def __init__(self, net, cfg):\r\n    Filter.__init__(self, net, cfg)\r\n    self.short_name = \"S+\"\r\n    self.num_filter_parameters = 1\r\n\r\n  def filter_param_regressor(self, features):\r\n    sat_param = tf.tanh(features)\r\n    return sat_param # This parameter gets passed to the process() \r\n    # return tf.sigmoid(features) # Default Parameter\r\n\r\n  def process(self, img, param):\r\n    param = param[:, :, None, None]\r\n    full_color = tf.compat.v1.image.adjust_saturation(img, 1.5) # MODIFIED\r\n\r\n    img = tf.minimum(img, 1.0)\r\n\r\n    return lerp(img, full_color, param)\r\n\r\n  def visualize_filter(self, debug_info, canvas):\r\n    exposure = debug_info[\"filter_parameters\"][0]\r\n    if canvas.shape[0] == 256:\r\n      cv2.rectangle(canvas, (8, 40), (56, 52), (1, 1, 1), cv2.FILLED)\r\n      cv2.putText(canvas, \"S %+.2f\" % exposure, (8, 48),\r\n                  cv2.FONT_HERSHEY_SIMPLEX, 0.3, (0, 0, 0))\r\n    else:\r\n      self.draw_high_res_text(\"Saturation %+.2f\" % exposure, canvas)\r\n```\r\n\r\nNote that I've updated the code globally to reduce images down to a resolution of 256x256 pixels instead of 64x64 in order to preserve the histograms as much as possible since I'm working with very high-resolution (6000x4000) images and the default source image size seems to dropping too much information before processing. This may have some significant impact on the filters which I'm not aware of. So far, performance on my images seems to have improved with this change. ","reactions":{"url":"https://api.github.com/repos/yuanming-hu/exposure/issues/comments/530932683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"XononoX","id":13067661,"node_id":"MDQ6VXNlcjEzMDY3NjYx","avatar_url":"https://avatars.githubusercontent.com/u/13067661?v=4","gravatar_id":"","url":"https://api.github.com/users/XononoX","html_url":"https://github.com/XononoX","followers_url":"https://api.github.com/users/XononoX/followers","following_url":"https://api.github.com/users/XononoX/following{/other_user}","gists_url":"https://api.github.com/users/XononoX/gists{/gist_id}","starred_url":"https://api.github.com/users/XononoX/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/XononoX/subscriptions","organizations_url":"https://api.github.com/users/XononoX/orgs","repos_url":"https://api.github.com/users/XononoX/repos","events_url":"https://api.github.com/users/XononoX/events{/privacy}","received_events_url":"https://api.github.com/users/XononoX/received_events","type":"User","site_admin":false}}]