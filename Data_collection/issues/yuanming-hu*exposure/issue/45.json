{"url":"https://api.github.com/repos/yuanming-hu/exposure/issues/45","repository_url":"https://api.github.com/repos/yuanming-hu/exposure","labels_url":"https://api.github.com/repos/yuanming-hu/exposure/issues/45/labels{/name}","comments_url":"https://api.github.com/repos/yuanming-hu/exposure/issues/45/comments","events_url":"https://api.github.com/repos/yuanming-hu/exposure/issues/45/events","html_url":"https://github.com/yuanming-hu/exposure/issues/45","id":468984619,"node_id":"MDU6SXNzdWU0Njg5ODQ2MTk=","number":45,"title":"Question about value network","user":{"login":"yuke93","id":13863509,"node_id":"MDQ6VXNlcjEzODYzNTA5","avatar_url":"https://avatars.githubusercontent.com/u/13863509?v=4","gravatar_id":"","url":"https://api.github.com/users/yuke93","html_url":"https://github.com/yuke93","followers_url":"https://api.github.com/users/yuke93/followers","following_url":"https://api.github.com/users/yuke93/following{/other_user}","gists_url":"https://api.github.com/users/yuke93/gists{/gist_id}","starred_url":"https://api.github.com/users/yuke93/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuke93/subscriptions","organizations_url":"https://api.github.com/users/yuke93/orgs","repos_url":"https://api.github.com/users/yuke93/repos","events_url":"https://api.github.com/users/yuke93/events{/privacy}","received_events_url":"https://api.github.com/users/yuke93/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-07-17T04:51:08Z","updated_at":"2019-07-17T04:51:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi Yuanming,\r\n\r\nThanks for releasing codes of this wonderful project! \r\n\r\nI have a question about the value network. In `net.py`, the `new_value` is predicted by observing `fake_output` and `new_states`. Let `s_t` denote `fake_input`, and then `fake_output` is `s_{t+1}`. The `new_states` contain the ation `a_t` that transfers `s_t` to `s_{t+1}`. Therefore, it seems the codes are predicting `Q(s_t, a_{t-1})`, `Q(s_{t+1}, a_t)` rather than `Q(s_t, a_t)`, `Q(s_{t+1}, a_{t+1})`. If so, I am confused how the policy gradients are calculated (e.g., Eqn. (7) in the paper). I might get something wrong. I'd appreciate it if you could help me clarify this question. Thanks!\r\n\r\nYu Ke","closed_by":null,"reactions":{"url":"https://api.github.com/repos/yuanming-hu/exposure/issues/45/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/yuanming-hu/exposure/issues/45/timeline","performed_via_github_app":null,"state_reason":null}