{"url":"https://api.github.com/repos/DrSleep/light-weight-refinenet/issues/69","repository_url":"https://api.github.com/repos/DrSleep/light-weight-refinenet","labels_url":"https://api.github.com/repos/DrSleep/light-weight-refinenet/issues/69/labels{/name}","comments_url":"https://api.github.com/repos/DrSleep/light-weight-refinenet/issues/69/comments","events_url":"https://api.github.com/repos/DrSleep/light-weight-refinenet/issues/69/events","html_url":"https://github.com/DrSleep/light-weight-refinenet/issues/69","id":830967389,"node_id":"MDU6SXNzdWU4MzA5NjczODk=","number":69,"title":"Add CPU-only in serialization.py","user":{"login":"changbaishan","id":12687044,"node_id":"MDQ6VXNlcjEyNjg3MDQ0","avatar_url":"https://avatars.githubusercontent.com/u/12687044?v=4","gravatar_id":"","url":"https://api.github.com/users/changbaishan","html_url":"https://github.com/changbaishan","followers_url":"https://api.github.com/users/changbaishan/followers","following_url":"https://api.github.com/users/changbaishan/following{/other_user}","gists_url":"https://api.github.com/users/changbaishan/gists{/gist_id}","starred_url":"https://api.github.com/users/changbaishan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/changbaishan/subscriptions","organizations_url":"https://api.github.com/users/changbaishan/orgs","repos_url":"https://api.github.com/users/changbaishan/repos","events_url":"https://api.github.com/users/changbaishan/events{/privacy}","received_events_url":"https://api.github.com/users/changbaishan/received_events","type":"User","site_admin":false},"labels":[{"id":1082011085,"node_id":"MDU6TGFiZWwxMDgyMDExMDg1","url":"https://api.github.com/repos/DrSleep/light-weight-refinenet/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-03-13T19:01:19Z","updated_at":"2021-05-02T23:11:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"RuntimeError                              Traceback (most recent call last)\r\n<ipython-input-5-44b2c23fe340> in <module>\r\n      9 models = dict()\r\n     10 for key,fun in six.iteritems(model_inits):\r\n---> 11     net = fun(n_classes, pretrained=True).eval()\r\n     12     if has_cuda:\r\n     13         net = net.cuda()\r\n\r\n~/Documents/sandbox/torch/light-weight-refinenet/models/resnet.py in rf_lw50(num_classes, imagenet, pretrained, **kwargs)\r\n    246             key = \"rf_lw\" + bname\r\n    247             url = models_urls[bname]\r\n--> 248             model.load_state_dict(maybe_download(key, url), strict=False)\r\n    249     return model\r\n    250 \r\n\r\n~/Documents/sandbox/torch/light-weight-refinenet/utils/helpers.py in maybe_download(model_name, model_url, model_dir, map_location)\r\n     23         sys.stderr.write('Downloading: \"{}\" to {}\\n'.format(url, cached_file))\r\n     24         urllib.request.urlretrieve(url, cached_file)\r\n---> 25     return torch.load(cached_file, map_location=map_location)\r\n     26 \r\n     27 \r\n\r\n~/.local/lib/python3.6/site-packages/torch/serialization.py in load(f, map_location, pickle_module, **pickle_load_args)\r\n    593                     return torch.jit.load(opened_file)\r\n    594                 return _load(opened_zipfile, map_location, pickle_module, **pickle_load_args)\r\n--> 595         return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)\r\n    596 \r\n    597 \r\n\r\n~/.local/lib/python3.6/site-packages/torch/serialization.py in _legacy_load(f, map_location, pickle_module, **pickle_load_args)\r\n    772     unpickler = pickle_module.Unpickler(f, **pickle_load_args)\r\n    773     unpickler.persistent_load = persistent_load\r\n--> 774     result = unpickler.load()\r\n    775 \r\n    776     deserialized_storage_keys = pickle_module.load(f, **pickle_load_args)\r\n\r\n~/.local/lib/python3.6/site-packages/torch/serialization.py in persistent_load(saved_id)\r\n    728                 obj = data_type(size)\r\n    729                 obj._torch_load_uninitialized = True\r\n--> 730                 deserialized_objects[root_key] = restore_location(obj, location)\r\n    731             storage = deserialized_objects[root_key]\r\n    732             if view_metadata is not None:\r\n\r\n~/.local/lib/python3.6/site-packages/torch/serialization.py in default_restore_location(storage, location)\r\n    173 def default_restore_location(storage, location):\r\n    174     for _, _, fn in _package_registry:\r\n--> 175         result = fn(storage, location)\r\n    176         if result is not None:\r\n    177             return result\r\n\r\n~/.local/lib/python3.6/site-packages/torch/serialization.py in _cuda_deserialize(obj, location)\r\n    149 def _cuda_deserialize(obj, location):\r\n    150     if location.startswith('cuda'):\r\n--> 151         device = validate_cuda_device(location)\r\n    152         if getattr(obj, \"_torch_load_uninitialized\", False):\r\n    153             storage_type = getattr(torch.cuda, type(obj).__name__)\r\n\r\n~/.local/lib/python3.6/site-packages/torch/serialization.py in validate_cuda_device(location)\r\n    133 \r\n    134     if not torch.cuda.is_available():\r\n--> 135         raise RuntimeError('Attempting to deserialize object on a CUDA '\r\n    136                            'device but torch.cuda.is_available() is False. '\r\n    137                            'If you are running on a CPU-only machine, '\r\n\r\nRuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/DrSleep/light-weight-refinenet/issues/69/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/DrSleep/light-weight-refinenet/issues/69/timeline","performed_via_github_app":null,"state_reason":null}