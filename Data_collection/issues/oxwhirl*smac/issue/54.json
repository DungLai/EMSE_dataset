{"url":"https://api.github.com/repos/oxwhirl/smac/issues/54","repository_url":"https://api.github.com/repos/oxwhirl/smac","labels_url":"https://api.github.com/repos/oxwhirl/smac/issues/54/labels{/name}","comments_url":"https://api.github.com/repos/oxwhirl/smac/issues/54/comments","events_url":"https://api.github.com/repos/oxwhirl/smac/issues/54/events","html_url":"https://github.com/oxwhirl/smac/issues/54","id":667032795,"node_id":"MDU6SXNzdWU2NjcwMzI3OTU=","number":54,"title":"Simplify dense reward calculation if reward_only_positive is true","user":{"login":"douglasrizzo","id":2209364,"node_id":"MDQ6VXNlcjIyMDkzNjQ=","avatar_url":"https://avatars.githubusercontent.com/u/2209364?v=4","gravatar_id":"","url":"https://api.github.com/users/douglasrizzo","html_url":"https://github.com/douglasrizzo","followers_url":"https://api.github.com/users/douglasrizzo/followers","following_url":"https://api.github.com/users/douglasrizzo/following{/other_user}","gists_url":"https://api.github.com/users/douglasrizzo/gists{/gist_id}","starred_url":"https://api.github.com/users/douglasrizzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/douglasrizzo/subscriptions","organizations_url":"https://api.github.com/users/douglasrizzo/orgs","repos_url":"https://api.github.com/users/douglasrizzo/repos","events_url":"https://api.github.com/users/douglasrizzo/events{/privacy}","received_events_url":"https://api.github.com/users/douglasrizzo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-28T12:27:39Z","updated_at":"2020-07-28T13:07:35Z","closed_at":"2020-07-28T13:07:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In this part of the dense reward calculation method, the damage and deaths of ally units are accumulated into variables `delta_ally` and `delta_deaths`and used to compose the reward later. Notice how `dealth_deaths` is only changed if `self.reward_only_positive` is false:\r\n\r\nhttps://github.com/oxwhirl/smac/blob/a185b7082dc5a12debdec8a344cf5177a7f67fff/smac/env/starcraft2/starcraft2.py#L684-L701\r\n\r\nWhen the reward is calculated using the previous accumulated values, `delta_ally` is only used if `self.reward_only_positive` is false. The version of `delta_deaths` that is altered in the ally loop above is also only used if `self.reward_only_positive` is false.\r\n\r\nhttps://github.com/oxwhirl/smac/blob/a185b7082dc5a12debdec8a344cf5177a7f67fff/smac/env/starcraft2/starcraft2.py#L716-L719\r\n\r\nThis makes me conclude that we only need to process ally units in this method if `self.reward_only_positive` is false, otherwise we can ignore the first loop. I don't know how much this would affect performance (this is a method that runs on every game step, after all) but I could come up with this simplified version. I'd just like others to validate if what I said is true.","closed_by":{"login":"douglasrizzo","id":2209364,"node_id":"MDQ6VXNlcjIyMDkzNjQ=","avatar_url":"https://avatars.githubusercontent.com/u/2209364?v=4","gravatar_id":"","url":"https://api.github.com/users/douglasrizzo","html_url":"https://github.com/douglasrizzo","followers_url":"https://api.github.com/users/douglasrizzo/followers","following_url":"https://api.github.com/users/douglasrizzo/following{/other_user}","gists_url":"https://api.github.com/users/douglasrizzo/gists{/gist_id}","starred_url":"https://api.github.com/users/douglasrizzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/douglasrizzo/subscriptions","organizations_url":"https://api.github.com/users/douglasrizzo/orgs","repos_url":"https://api.github.com/users/douglasrizzo/repos","events_url":"https://api.github.com/users/douglasrizzo/events{/privacy}","received_events_url":"https://api.github.com/users/douglasrizzo/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/oxwhirl/smac/issues/54/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/oxwhirl/smac/issues/54/timeline","performed_via_github_app":null,"state_reason":"completed"}