{"url":"https://api.github.com/repos/ahmetozlu/color_recognition/issues/5","repository_url":"https://api.github.com/repos/ahmetozlu/color_recognition","labels_url":"https://api.github.com/repos/ahmetozlu/color_recognition/issues/5/labels{/name}","comments_url":"https://api.github.com/repos/ahmetozlu/color_recognition/issues/5/comments","events_url":"https://api.github.com/repos/ahmetozlu/color_recognition/issues/5/events","html_url":"https://github.com/ahmetozlu/color_recognition/issues/5","id":511000294,"node_id":"MDU6SXNzdWU1MTEwMDAyOTQ=","number":5,"title":"can I use it for a region of interest?","user":{"login":"Algabri","id":45939310,"node_id":"MDQ6VXNlcjQ1OTM5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/45939310?v=4","gravatar_id":"","url":"https://api.github.com/users/Algabri","html_url":"https://github.com/Algabri","followers_url":"https://api.github.com/users/Algabri/followers","following_url":"https://api.github.com/users/Algabri/following{/other_user}","gists_url":"https://api.github.com/users/Algabri/gists{/gist_id}","starred_url":"https://api.github.com/users/Algabri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Algabri/subscriptions","organizations_url":"https://api.github.com/users/Algabri/orgs","repos_url":"https://api.github.com/users/Algabri/repos","events_url":"https://api.github.com/users/Algabri/events{/privacy}","received_events_url":"https://api.github.com/users/Algabri/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-10-23T00:24:34Z","updated_at":"2020-10-10T11:52:38Z","closed_at":"2020-10-10T11:52:07Z","author_association":"NONE","active_lock_reason":null,"body":"I tried to implement it for a region of interest but gave me this error.\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/redhwan/1/body_color_training/color_recognition-master/src/webcam_human_color.py\", line 72, in <module>\r\n    prediction = knn_classifier.main('training.data', 'test.data')\r\n  File \"/home/redhwan/1/body_color_training/color_recognition-master/src/color_recognition_api/knn_classifier.py\", line 87, in main\r\n    return classifier_prediction[0]\t\t\r\nIndexError: list index out of range\r\n\r\n\r\n```\r\nfrom imutils.video import VideoStream\r\nfrom imutils.video import FPS\r\nimport numpy as np\r\nimport imutils\r\nimport time\r\nimport cv2\r\n\r\nfrom color_recognition_api import color_histogram_feature_extraction\r\nfrom color_recognition_api import knn_classifier\r\nimport os\r\nimport os.path\r\n# global x1 , y1 , w1, h1, endX, startX, endY, startY , area1\r\n\r\n\r\nCLASSES = [\"background\", \"aeroplane\", \"bicycle\", \"bird\", \"boat\", \"bottle\", \"bus\", \"car\", \"cat\", \"chair\", \"cow\", \"diningtable\", \"dog\", \"horse\", \"motorbike\", \"person\", \"pottedplant\", \"sheep\", \"sofa\", \"train\", \"tvmonitor\"]\r\nCOLORS = np.random.uniform(0, 255, size=(len(CLASSES), 3))\r\nprint(\"[INFO] loading model...\")\r\nnet = cv2.dnn.readNetFromCaffe('prototxt.txt', 'caffemodel')\r\nprint(\"[INFO] starting video stream...\")\r\nprediction = 'n.a.'\r\n\r\n# checking whether the training data is ready\r\nPATH = './training.data'\r\n\r\nif os.path.isfile(PATH) and os.access(PATH, os.R_OK):\r\n    print ('training data is ready, classifier is loading...')\r\nelse:\r\n    print ('training data is being created...')\r\n    open('training.data', 'w')\r\n    color_histogram_feature_extraction.training()\r\n    print ('training data is ready, classifier is loading...')\r\nvs = cv2.VideoCapture(0)\r\n# vs.release()\r\n# vs = cv2.VideoCapture(0)\r\ntime.sleep(2.0)\r\nfps = FPS().start()\r\nwidth = vs.get(3)  # float\r\nheight = vs.get(4)  # float\r\nprint width, height\r\n\r\nfps = FPS().start()\r\nwhile True:\r\n    ret, frame = vs.read()\r\n\r\n\r\n\r\n\r\n\r\n    # frame = imutils.resize(frame, width=400)\r\n    (h, w) = frame.shape[:2]\r\n    blob = cv2.dnn.blobFromImage(cv2.resize(frame, (300, 300)), 0.007843, (300, 300), 127.5)\r\n    net.setInput(blob)\r\n    detections = net.forward()\r\n    big_area = 0\r\n    big_center = 320\r\n    detected = 0\r\n    for i in np.arange(0, detections.shape[2]):\r\n        confidence = detections[0, 0, i, 2]\r\n        object_type = int(detections[0, 0, i, 1])\r\n        if object_type == 15 and confidence > 0.2:\r\n            box = detections[0, 0, i, 3:7] * np.array([w, h, w, h])\r\n            (startX, startY, endX, endY) = box.astype(\"int\")\r\n            label = \"{}: {:.2f}%\".format('person', confidence * 100)\r\n            cv2.rectangle(frame, (startX, startY), (endX, endY), [0, 0, 255], 2)\r\n            y = startY - 15 if startY - 15 > 15 else startY + 15\r\n            cv2.putText(frame, label, (startX, y), cv2.FONT_HERSHEY_SIMPLEX, 0.5, [0, 0, 255], 2)\r\n            # ROI = green[startX:endX, startY:endY]\r\n\r\n            ROI1 = frame[startX:endX, startY:endY]\r\n            color_histogram_feature_extraction.color_histogram_of_test_image(ROI1)\r\n\r\n            prediction = knn_classifier.main('training.data', 'test.data')\r\n            print  prediction\r\n            rect_area = (endX-startX)*(endY-startY)\r\n            # print (endX, startX, endY, startY, type(endX),type(startX),type(endY),type(startY))\r\n            detected = 1\r\n            if rect_area > big_area:\r\n                big_area = rect_area\r\n\r\n    cv2.imshow(\"Frame\", frame)\r\n\r\n    key = cv2.waitKey(1) & 0xFF\r\n    if key == ord(\"q\"):\r\n        break\r\n    fps.update()\r\n    fps.stop()\r\nvs.release()    \r\ncv2.destroyAllWindows()\r\n\r\n```\r\n","closed_by":{"login":"ahmetozlu","id":22610163,"node_id":"MDQ6VXNlcjIyNjEwMTYz","avatar_url":"https://avatars.githubusercontent.com/u/22610163?v=4","gravatar_id":"","url":"https://api.github.com/users/ahmetozlu","html_url":"https://github.com/ahmetozlu","followers_url":"https://api.github.com/users/ahmetozlu/followers","following_url":"https://api.github.com/users/ahmetozlu/following{/other_user}","gists_url":"https://api.github.com/users/ahmetozlu/gists{/gist_id}","starred_url":"https://api.github.com/users/ahmetozlu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahmetozlu/subscriptions","organizations_url":"https://api.github.com/users/ahmetozlu/orgs","repos_url":"https://api.github.com/users/ahmetozlu/repos","events_url":"https://api.github.com/users/ahmetozlu/events{/privacy}","received_events_url":"https://api.github.com/users/ahmetozlu/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ahmetozlu/color_recognition/issues/5/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ahmetozlu/color_recognition/issues/5/timeline","performed_via_github_app":null,"state_reason":"completed"}