{"url":"https://api.github.com/repos/wq2012/SpectralCluster/issues/18","repository_url":"https://api.github.com/repos/wq2012/SpectralCluster","labels_url":"https://api.github.com/repos/wq2012/SpectralCluster/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/wq2012/SpectralCluster/issues/18/comments","events_url":"https://api.github.com/repos/wq2012/SpectralCluster/issues/18/events","html_url":"https://github.com/wq2012/SpectralCluster/issues/18","id":644718019,"node_id":"MDU6SXNzdWU2NDQ3MTgwMTk=","number":18,"title":"Is the RowWiseThreshold doing what I think?","user":{"login":"clabornd","id":31082141,"node_id":"MDQ6VXNlcjMxMDgyMTQx","avatar_url":"https://avatars.githubusercontent.com/u/31082141?v=4","gravatar_id":"","url":"https://api.github.com/users/clabornd","html_url":"https://github.com/clabornd","followers_url":"https://api.github.com/users/clabornd/followers","following_url":"https://api.github.com/users/clabornd/following{/other_user}","gists_url":"https://api.github.com/users/clabornd/gists{/gist_id}","starred_url":"https://api.github.com/users/clabornd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clabornd/subscriptions","organizations_url":"https://api.github.com/users/clabornd/orgs","repos_url":"https://api.github.com/users/clabornd/repos","events_url":"https://api.github.com/users/clabornd/events{/privacy}","received_events_url":"https://api.github.com/users/clabornd/received_events","type":"User","site_admin":false},"labels":[{"id":1199083299,"node_id":"MDU6TGFiZWwxMTk5MDgzMjk5","url":"https://api.github.com/repos/wq2012/SpectralCluster/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"wq2012","id":3002724,"node_id":"MDQ6VXNlcjMwMDI3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/3002724?v=4","gravatar_id":"","url":"https://api.github.com/users/wq2012","html_url":"https://github.com/wq2012","followers_url":"https://api.github.com/users/wq2012/followers","following_url":"https://api.github.com/users/wq2012/following{/other_user}","gists_url":"https://api.github.com/users/wq2012/gists{/gist_id}","starred_url":"https://api.github.com/users/wq2012/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wq2012/subscriptions","organizations_url":"https://api.github.com/users/wq2012/orgs","repos_url":"https://api.github.com/users/wq2012/repos","events_url":"https://api.github.com/users/wq2012/events{/privacy}","received_events_url":"https://api.github.com/users/wq2012/received_events","type":"User","site_admin":false},"assignees":[{"login":"wq2012","id":3002724,"node_id":"MDQ6VXNlcjMwMDI3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/3002724?v=4","gravatar_id":"","url":"https://api.github.com/users/wq2012","html_url":"https://github.com/wq2012","followers_url":"https://api.github.com/users/wq2012/followers","following_url":"https://api.github.com/users/wq2012/following{/other_user}","gists_url":"https://api.github.com/users/wq2012/gists{/gist_id}","starred_url":"https://api.github.com/users/wq2012/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wq2012/subscriptions","organizations_url":"https://api.github.com/users/wq2012/orgs","repos_url":"https://api.github.com/users/wq2012/repos","events_url":"https://api.github.com/users/wq2012/events{/privacy}","received_events_url":"https://api.github.com/users/wq2012/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-06-24T15:41:43Z","updated_at":"2020-06-25T15:43:40Z","closed_at":"2020-06-25T15:43:40Z","author_association":"NONE","active_lock_reason":null,"body":"The paper states:\r\n\r\n_Row-wise  Thresholding:   For  each  row,  set  elements smaller than this rowâ€™s p-percentile to 0_\r\n\r\nSo, if p_percentile = 0.95, then we retain the top 5% of affinities and soft-threshold the rest (even if they are high), which seems intuitive to me.\r\n\r\nIn the code:  \r\n\r\n```\r\nrow_max = Y.max(axis=1)\r\nrow_max = np.expand_dims(row_max, axis=1)\r\nis_smaller = Y < (row_max * self.p_percentile)\r\n\r\nY = (Y * np.invert(is_smaller)) + (Y * self.multiplier * is_smaller)\r\n```\r\n\r\nThis appears to be retaining anything larger than 0.95 * row_max.  I tested a thresholding like:\r\n\r\n```\r\nrow_percentile = np.percentile(Y, self.p_percentile*100, axis = 1)\r\nrow_percentile = np.expand_dims(row_percentile, axis = 1)\r\nis_smaller = Y < row_percentile\r\n```\r\n\r\nAnd it seems to alleviate some issues I was having with returning very low #'s of speakers and extreme sensitivity to the p_percentile parameter.\r\n\r\nLet me know if I am confused.\r\n","closed_by":{"login":"wq2012","id":3002724,"node_id":"MDQ6VXNlcjMwMDI3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/3002724?v=4","gravatar_id":"","url":"https://api.github.com/users/wq2012","html_url":"https://github.com/wq2012","followers_url":"https://api.github.com/users/wq2012/followers","following_url":"https://api.github.com/users/wq2012/following{/other_user}","gists_url":"https://api.github.com/users/wq2012/gists{/gist_id}","starred_url":"https://api.github.com/users/wq2012/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wq2012/subscriptions","organizations_url":"https://api.github.com/users/wq2012/orgs","repos_url":"https://api.github.com/users/wq2012/repos","events_url":"https://api.github.com/users/wq2012/events{/privacy}","received_events_url":"https://api.github.com/users/wq2012/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/wq2012/SpectralCluster/issues/18/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/wq2012/SpectralCluster/issues/18/timeline","performed_via_github_app":null,"state_reason":"completed"}