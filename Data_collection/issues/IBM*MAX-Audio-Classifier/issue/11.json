{"url":"https://api.github.com/repos/IBM/MAX-Audio-Classifier/issues/11","repository_url":"https://api.github.com/repos/IBM/MAX-Audio-Classifier","labels_url":"https://api.github.com/repos/IBM/MAX-Audio-Classifier/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/IBM/MAX-Audio-Classifier/issues/11/comments","events_url":"https://api.github.com/repos/IBM/MAX-Audio-Classifier/issues/11/events","html_url":"https://github.com/IBM/MAX-Audio-Classifier/issues/11","id":355298951,"node_id":"MDU6SXNzdWUzNTUyOTg5NTE=","number":11,"title":"Lack of AVX in Docker image leading to Tensorflow crash?","user":{"login":"rachel-1","id":13966854,"node_id":"MDQ6VXNlcjEzOTY2ODU0","avatar_url":"https://avatars.githubusercontent.com/u/13966854?v=4","gravatar_id":"","url":"https://api.github.com/users/rachel-1","html_url":"https://github.com/rachel-1","followers_url":"https://api.github.com/users/rachel-1/followers","following_url":"https://api.github.com/users/rachel-1/following{/other_user}","gists_url":"https://api.github.com/users/rachel-1/gists{/gist_id}","starred_url":"https://api.github.com/users/rachel-1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rachel-1/subscriptions","organizations_url":"https://api.github.com/users/rachel-1/orgs","repos_url":"https://api.github.com/users/rachel-1/repos","events_url":"https://api.github.com/users/rachel-1/events{/privacy}","received_events_url":"https://api.github.com/users/rachel-1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2018-08-29T19:23:57Z","updated_at":"2020-02-19T01:22:06Z","closed_at":"2020-02-19T01:22:06Z","author_association":"NONE","active_lock_reason":null,"body":"With the default version of numpy (1.13.1) and tensorflow (1.8.0) given in the Dockerfile, I get a message saying `Illegal instruction (core dumped)`. Downgrading Tensorflow to 1.5.0 fixes the import issue, so I believe the problem is a lack of AVX support in the Docker image (see https://github.com/tensorflow/tensorflow/issues/17411). However, the code doesn't seem to be backward compatible, as with tensorflow 1.5.0 (and numpy 1.15.1 since 1.13.1 wasn't compatible) I then get:\r\n```\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: You must feed a value for placeholder tensor 'batch_normalization_1/keras_learning_phase' with dtype bool\r\n```\r\n\r\nHere is my original stack trace via GDB (from the unmodified Dockerfile):\r\n```\r\n#0  0x00007fffce85dfd0 in std::pair<std::__detail::_Node_iterator<std::pair<tensorflow::Stri\\\r\nngPiece const, std::function<bool (tensorflow::Variant*)> >, false, true>, bool> std::_Hasht\\\r\nable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<bool (t\\\r\nensorflow::Variant*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::functi\\\r\non<bool (tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::St\\\r\nringPiece>, tensorflow::hash<tensorflow::StringPiece>, std::__detail::_Mod_range_hashing, st\\\r\nd::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hash\\\r\ntable_traits<true, false, true> >::_M_emplace<std::pair<tensorflow::StringPiece, std::functi\\\r\non<bool (tensorflow::Variant*)> > >(std::integral_constant<bool, true>, std::pair<tensorflow\\\r\n::StringPiece, std::function<bool (tensorflow::Variant*)> >&&) ()\r\n   from /opt/conda/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.\\\r\nso\r\n#1  0x00007fffce8618e5 in tensorflow::UnaryVariantOpRegistry::RegisterDecodeFn(std::string c\\\r\nonst&, std::function<bool (tensorflow::Variant*)> const&) ()\r\n   from /opt/conda/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.\\\r\nso\r\n#2  0x00007fffce83d95c in tensorflow::variant_op_registry_fn_registration::UnaryVariantDecod\\\r\neRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::string const&) ()\r\n   from /opt/conda/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.\\\r\nso\r\n#3  0x00007fffce7a91f5 in _GLOBAL__sub_I_tensor.cc ()\r\n   from /opt/conda/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.\\\r\nso\r\n#4  0x00007ffff7de885a in call_init (l=<optimized out>, argc=argc@entry=2,\r\n    argv=argv@entry=0x7fffffffec18, env=env@entry=0x555555e59d40) at dl-init.c:72\r\n#5  0x00007ffff7de896b in call_init (env=0x555555e59d40, argv=0x7fffffffec18, argc=2,\r\n    l=<optimized out>) at dl-init.c:30\r\n#6  _dl_init (main_map=main_map@entry=0x5555566dfde0, argc=2, argv=0x7fffffffec18,\r\n    env=0x555555e59d40) at dl-init.c:120\r\n#7  0x00007ffff7decf18 in dl_open_worker (a=a@entry=0x7fffffff6380) at dl-open.c:575\r\n#8  0x00007ffff7de8704 in _dl_catch_error (objname=objname@entry=0x7fffffff6370,\r\n    errstring=errstring@entry=0x7fffffff6378, mallocedp=mallocedp@entry=0x7fffffff636f,\r\n    operate=operate@entry=0x7ffff7decb30 <dl_open_worker>, args=args@entry=0x7fffffff6380)\r\n    at dl-error.c:187\r\n```\r\n\r\nHow did everyone else fix this (or this somehow specific to my set-up)?\r\n\r\nNote: I've only worked with PyTorch, not Tensorflow/Keras","closed_by":{"login":"kmh4321","id":32885872,"node_id":"MDQ6VXNlcjMyODg1ODcy","avatar_url":"https://avatars.githubusercontent.com/u/32885872?v=4","gravatar_id":"","url":"https://api.github.com/users/kmh4321","html_url":"https://github.com/kmh4321","followers_url":"https://api.github.com/users/kmh4321/followers","following_url":"https://api.github.com/users/kmh4321/following{/other_user}","gists_url":"https://api.github.com/users/kmh4321/gists{/gist_id}","starred_url":"https://api.github.com/users/kmh4321/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kmh4321/subscriptions","organizations_url":"https://api.github.com/users/kmh4321/orgs","repos_url":"https://api.github.com/users/kmh4321/repos","events_url":"https://api.github.com/users/kmh4321/events{/privacy}","received_events_url":"https://api.github.com/users/kmh4321/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/IBM/MAX-Audio-Classifier/issues/11/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/IBM/MAX-Audio-Classifier/issues/11/timeline","performed_via_github_app":null,"state_reason":"completed"}