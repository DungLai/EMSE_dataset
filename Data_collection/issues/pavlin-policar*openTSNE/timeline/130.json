[{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626166322","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-626166322","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":626166322,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjE2NjMyMg==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2020-05-09T12:08:50Z","updated_at":"2020-05-09T12:08:50Z","author_association":"OWNER","body":"Yes, sure, that's totally fine. \r\n\r\nJust so we're on the same page, in this example that you gave, we need to be comparing the 39s + 3min 21s against the 7min 45s. We can get the nearest neighbors and their distances from the pynndescent object directly if it is built with the required number of neighbors.\r\n\r\nIf you can submit a PR that would be great.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626166322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626170317","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-626170317","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":626170317,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjE3MDMxNw==","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"created_at":"2020-05-09T12:41:40Z","updated_at":"2020-05-09T12:41:40Z","author_association":"CONTRIBUTOR","body":"Yes. However, I have a weirdest bug that I cannot fix so far. That's what I wrote in nearest_neighbors.py:\r\n\r\n```\r\n        if k <= 15:\r\n            n_neighbors_build = k + 1\r\n        else:\r\n            n_neighbors_build = 15\r\n\r\n        # UMAP uses the \"alternative\" algorithm, but that sometimes causes\r\n        # memory corruption, so use the standard one, which seems to work fine\r\n        self.index = pynndescent.NNDescent(\r\n            data,\r\n            n_neighbors=n_neighbors_build,\r\n            metric=self.metric,\r\n            metric_kwds=self.metric_params,\r\n            random_state=self.random_state,\r\n            n_trees=n_trees,\r\n            n_iters=n_iters,\r\n            algorithm=\"standard\",\r\n            max_candidates=60,\r\n            n_jobs=self.n_jobs,\r\n        )\r\n\r\n        if k <= 15:\r\n            indices, distances = self.index.neighbor_graph\r\n        else:\r\n            indices, distances = self.index.query(data, k=k + 1)\r\n```\r\n\r\nThis works fine for k>15, but always crashes my kernel whenever k<15. No Python errors, just a sudden kernel krush. I get `munmap_chunk(): invalid pointer` in the terminal output. At the same time, when I copy this exact code into my notebook outside of openTSNE, it works just fine. Driving me nuts.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626170317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626220415","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-626220415","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":626220415,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjIyMDQxNQ==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2020-05-09T18:54:29Z","updated_at":"2020-05-09T18:54:29Z","author_association":"OWNER","body":"Yeah, I don't see anything wrong there at all. I would open an issue in `pynndescent`. I did a quick search for `munmap_chunk` errors and it looks like it's related to broken pointers with heap allocations. I have no clue how this might relate to numba, or even how to begin debugging this. You can always try to set up a fresh conda environment and see if it happens there as well. Given that this only occurs if you import openTSNE, it might be the order of imports? Sorry I can't be of much help here.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626220415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626238923","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-626238923","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":626238923,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjIzODkyMw==","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"created_at":"2020-05-09T21:40:14Z","updated_at":"2020-05-09T21:40:14Z","author_association":"CONTRIBUTOR","body":"I located the source of the error. The kernel crush did not happen where I thought it was happening. It happened later when doing `P+P.T` for the affinity matrix. Took me some time to notice why. I raised an issue at pynndescent: https://github.com/lmcinnes/pynndescent/issues/99.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626238923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626240428","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-626240428","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":626240428,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjI0MDQyOA==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2020-05-09T21:54:34Z","updated_at":"2020-05-09T21:54:34Z","author_association":"OWNER","body":"Glad to hear you've located the problem. I don't really see how `P+P.T` could cause that problem? The memory there should be fully managed by python so memory errors should never occur. Does it maybe happen when you call `joint_probabilities_nn`? I'm fairly sure that function doesn't handle -1 values and indexing a C array with -1 could cause something like this.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626240428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626240979","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-626240979","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":626240979,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjI0MDk3OQ==","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"created_at":"2020-05-09T22:00:22Z","updated_at":"2020-05-09T22:00:22Z","author_association":"CONTRIBUTOR","body":"I swear that this\r\n```\r\nA = affinity.FixedSigmaNN(X, sigma=1e+6, k=15, metric=\"cosine\", n_jobs=1, verbose=1, symmetrize=False)\r\n```\r\nworks fine (note that I set `symmetrize=False` here because otherwise it crashed), and then when I run `A.P+A.P.T` in the next notebook cell (and nothing else, just this one line), the kernel crashes. Every time. \r\n\r\nAnd this does not happen if I insert `indices[indices<0] += indices.shape[0]` after `indices, distances = self.index.neighbor_graph`, so I concluded that it's due to -1 values in `indices`. No idea how exactly.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626240979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626243569","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-626243569","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":626243569,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjI0MzU2OQ==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2020-05-09T22:27:21Z","updated_at":"2020-05-09T22:27:21Z","author_association":"OWNER","body":"I think I've managed to crack what your issue is. Since `P` is constructed directly in [`FixedSigmaNN`](https://github.com/pavlin-policar/openTSNE/blob/master/openTSNE/affinity.py#L497-L504), then I suppose scipy doesn't do any validation that these are indeed valid indices. So if `indices` includes negative values, then any operation on this \"broken\" matrix will cause a segfault, since it will try to access a C array at index -1.\r\n\r\nMy code to reproduce:\r\n```\r\nimport numpy as np\r\nimport scipy.sparse as sp\r\nnp.random.seed(0)  # just so we always get the same result\r\nx = sp.random(100, 100).tocsr()\r\nx.indices[:10] = -1\r\nx + x.T\r\n# segmentation fault  ipython\r\n```\r\nCuriously, if I set a single index to -1 it sometimes doesn't crash. But I think this is probably the issue. The easiest fix would be to simply do\r\n```\r\nx.data[x.indices < 0] = 0\r\nx.eliminate_zeros()\r\n```\r\nIf this isn't the problem you're having, then I'm out of ideas right now.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626243569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626243933","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-626243933","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":626243933,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjI0MzkzMw==","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"created_at":"2020-05-09T22:30:57Z","updated_at":"2020-05-09T22:30:57Z","author_association":"CONTRIBUTOR","body":"Yes, this must be it. \r\n\r\nI think we should wait for Leland to clarify what these -1 values mean, before proceeding.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/626243933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/627462432","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-627462432","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":627462432,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzQ2MjQzMg==","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"created_at":"2020-05-12T16:47:11Z","updated_at":"2020-05-12T16:47:11Z","author_association":"CONTRIBUTOR","body":"Okay, so -1 values mean that pynndescent failed to identify some of neighbors (as per warning that it prints). If this happens, UMAP still proceeds with constructing embedding:\r\n\r\n> Any -1's are ignored by UMAP, so we just end up with fewer than expected neighbors in those cases. Generally this means those points end up being outliers.\r\n\r\nI am not quite sure what's the best way to deal with it in t-SNE. Just to be clear: `query()` results in this case are also bogus.\r\n\r\nOpenTSNE should either exit with an error, or somehow ignore those values. Is there an elegant hack of how we can make openTSNE ignore failed neighbors? We could replace all -1 with the index of the point itself, with distance 0. (And print a warning.) Not quite sure what it will do.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/627462432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/627510641","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-627510641","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":627510641,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzUxMDY0MQ==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2020-05-12T18:19:23Z","updated_at":"2020-05-12T18:19:23Z","author_association":"OWNER","body":"I don't think there is any way to trick openTSNE into dealing with that in the current implementation. The most correct thing to do IMO would be to compute the perplexity values on the reduced nearest neighbors. This would mean adding a couple of `if distances[i, j] == -1: continue` to [`compute_gaussian_perplexity `](https://github.com/pavlin-policar/openTSNE/blob/master/openTSNE/_tsne.pyx#L30-L100) and fixup the resulting `P` matrix in [`compute_gaussian_perpelxities`](https://github.com/pavlin-policar/openTSNE/blob/master/openTSNE/affinity.py#L383-L408). Implementation-wise, it would be simpler to throw an exception in after the KNN index is built.\r\n\r\nI'm not entirely sure what distance=0 would do. It probably wouldn't crash. It would likely just decrease the variance of the gaussian, which you probably wouldn't want to do. Maybe it wouldn't be an issue if it was just a couple of points.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/627510641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/627616507","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-627616507","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":627616507,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzYxNjUwNw==","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"created_at":"2020-05-12T21:48:31Z","updated_at":"2020-05-12T21:48:31Z","author_association":"CONTRIBUTOR","body":"Yeah. Unfortunately in most cases when there are -1 values, all `n_neighbors` values are equal to -1. So reducing the number of nearest neighbors won't help.\r\n\r\nFYI I'm looking into this dataset: https://johnhw.github.io/umap_primes/index.md.html. Turns out that pynndescent fails on around 10% of points (!). From the resulting UMAP embedding it seems that these points mostly stay where they were at initialization.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/627616507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/629545919","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-629545919","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":629545919,"node_id":"MDEyOklzc3VlQ29tbWVudDYyOTU0NTkxOQ==","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"created_at":"2020-05-15T23:22:10Z","updated_at":"2020-05-15T23:22:10Z","author_association":"CONTRIBUTOR","body":"I played around with this a little more.\r\n\r\nIn the linked issue, Leland wrote that a large number of -1s is expected behaviour on this dataset with cosine metric https://johnhw.github.io/umap_primes/index.md.html.\r\n\r\nJust to be clear: the current behaviour of openTSNE does not make sense, because `query()` yields meaningless results for all points for which `pynndescent` failed (i.e. that have -1 in the graph). I can see three options:\r\n\r\n1. If pynndescent fails for some points, openTSNE throws an exception and exits. Disadvantage: it won't be able to embed datasets like the prime numbers, where UMAP produces beautiful results.\r\n\r\n2. If pynndescent fails for some points, openTSNE has a special treatment downstream, e.g. these points are taken out of the optimization entirely, and just sit at the initialization (which means basically at 0). Disadvantage: requires ad hoc changes downstream.\r\n\r\n3. If pynndescent fails for some points, then some hack is applied to indices/distances arrays so that the points do get a special treatment but without any downstream changes. I tried a few things now, and what works reasonably well is to let all \"failed\" points randomly attract each other (i.e. I'm randomly making them neighbors of each other). This results in the cluster of \"failed\" points in the final embedding. For this particular dataset this behaviour actually makes a lot of sense because all \"failed\" points are similarly special in some way (they are prime numbers). Disadvantage: it's a hack. \r\n\r\nI prefer solution 3, but as I wrote -- it's a hack. I made it throw a warning in this case, explaining what is going on, so that at least the users are warned.\r\n\r\nWhat do you think?\r\n","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/629545919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/629758821","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-629758821","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":629758821,"node_id":"MDEyOklzc3VlQ29tbWVudDYyOTc1ODgyMQ==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2020-05-17T07:58:41Z","updated_at":"2020-05-17T07:58:41Z","author_association":"OWNER","body":"First, since the current behavior of our nearest neighbors using pynndescent is wrong and produces meaningless results in these edge cases, the first order of business should be to change the way we call pynndescent. So if I understand correctly if the method fails, `query` will still return some neighbors, but they will be wrong/meaningless. So `query` never returns -1. So this is dead wrong then. So we've got to change it so it won't use `query` but will build the KNNG with the proper number of neighbors. Unfortunately, this will make it slower on larger data sets. I'm not a fan of that, but I don't see any other way.\r\n\r\nI don't particularly like 2. because there might well be a cluster at 0.0 in the final embedding, then these random points will get lost somewhere. I don't particularly mind option 3. as long as the warning is very explicit. I think it would actually lead to more stable optimization. If we were to properly incorporate this, then such a point would have no neighbors then it would be attracted to nothing, but repelled by everything. This would (correctly) shoot the point off of the embedding, causing problems. However, 3. would cluster these points together and would produce a cluster of failed points. This would make them very easy to spot and investigate.\r\n\r\nI would also make sure to print out the indices of the failed points in the warning, e.g. `failed for points [2, 4, 1, 10, 20]`, so I can directly copy the indices into Python code, and possibly exclude them from the next run if I don't want to deal with them. And this way, I can also immediately check what's going on with these points.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/629758821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/629852854","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-629852854","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":629852854,"node_id":"MDEyOklzc3VlQ29tbWVudDYyOTg1Mjg1NA==","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"created_at":"2020-05-17T20:05:26Z","updated_at":"2020-05-17T20:05:26Z","author_association":"CONTRIBUTOR","body":"> So if I understand correctly if the method fails, query will still return some neighbors, but they will be wrong/meaningless. So query never returns -1. So this is dead wrong then. So we've got to change it so it won't use query but will build the KNNG with the proper number of neighbors. Unfortunately, this will make it slower on larger data sets. I'm not a fan of that, but I don't see any other way.\r\n\r\nI don't think this is needed. We can still construct the index using k=15, just need to check if there are any -1 produced by it. If yes, the subsequent query() results for these points should be discareded.\r\n\r\n>  This would (correctly) shoot the point off of the embedding, causing problems. However, 3. would cluster these points together and would produce a cluster of failed points. This would make them very easy to spot and investigate.\r\n\r\nI agree.\r\n\r\n> I would also make sure to print out the indices of the failed points in the warning, e.g. failed for points [2, 4, 1, 10, 20], so I can directly copy the indices into Python code, and possibly exclude them from the next run if I don't want to deal with them.\r\n\r\nWhat is there is a lot of points? For this prime factorization dataset, I get 10% failed points. It's a lot to print.\r\n\r\nSomething else: pynndescent with sparse inputs currently breaks with an error for n_jobs>1. Until this if fixed, we could set n_jobs to 1 for pynndescent calls with sparse inputs.\r\n\r\nI can submit what I currently have as a PR and we discuss there. It works fine for me.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/629852854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/629853688","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130#issuecomment-629853688","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","id":629853688,"node_id":"MDEyOklzc3VlQ29tbWVudDYyOTg1MzY4OA==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2020-05-17T20:11:40Z","updated_at":"2020-05-17T20:11:40Z","author_association":"OWNER","body":"> I don't think this is needed. We can still construct the index using k=15, just need to check if there are any -1 produced by it. If yes, the subsequent query() results for these points should be discareded.\r\n\r\nYeah, that works too.\r\n\r\n> What is there is a lot of points? For this prime factorization dataset, I get 10% failed points. It's a lot to print.\r\n\r\nHmm, I would prefer to have it show the indices all the time, but you've got like a couple of million numbers, right? Maybe a good middle ground would be to print out the indices only if `verbose=True` and just show the warning when `verbose=False`. It should also indicate that we can set `verbose=True` to get the indices. I think we should make it as easy as possible for someone to go look at the problematic points and the simplest way I can think of is to just dump out the indices.\r\n\r\n> Something else: pynndescent with sparse inputs currently breaks with an error for n_jobs>1. Until this if fixed, we could set n_jobs to 1 for pynndescent calls with sparse inputs.\r\n\r\nYeah, I suppose. But again, a warning would be nice. I dislike things like this...\r\n\r\n> I can submit what I currently have as a PR and we discuss there.\r\n\r\nThat would be great.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/629853688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"id":3512372250,"node_id":"MDExOkNsb3NlZEV2ZW50MzUxMjM3MjI1MA==","url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/events/3512372250","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-07-04T07:54:54Z","state_reason":null,"performed_via_github_app":null}]