[{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/840382821","html_url":"https://github.com/pavlin-policar/openTSNE/issues/183#issuecomment-840382821","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/183","id":840382821,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MDM4MjgyMQ==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2021-05-13T07:41:34Z","updated_at":"2021-05-13T07:41:34Z","author_association":"OWNER","body":"So, what you're getting there is the properly normalized P matrix. The normalization happens [here](https://github.com/pavlin-policar/openTSNE/blob/970a8d5d39540b6d864fd73cd8e545ca75355e96/openTSNE/affinity.py#L479-L482).\r\n\r\nHowever, the normalization doesn't happen on a per-row basis, but on the entire matrix as a whole. So for instance, using your first snippet of code, running `P.sum()` gives `1`, as expected. It's not a simple matter of scaling either. The steps to calculate the P matrix are as follows:\r\n1. Calculate the perplexities for each data point. This is the normalization you're expecting, I guess\r\n2. Symmetrize the entire P matrix, i.e.p_{ij} = p_{j|i} + p_{i|j}\r\n3. Renormalize so the entire matrix sums to 1. This is then used to calculate the KL divergence to the embedding similarities.\r\n\r\nYou would observe your expected behaviour when adding new data points into an existing embedding, where we calculate perplexities from new data points to existing data points. In this case, symmetrization is skipped, and all the data points are treated independently. So for instance, continuing your code snippet\r\n```python\r\ntmp = affinities.to_new(x)\r\ntmp.sum(axis=1)  # array of ones\r\n```\r\n\r\nAs a simple wrapper class, I recommend something like this. This isn't included in openTSNE currently, but I might add it later on. \r\n```python\r\nclass ExistingAffinities(openTSNE.affinity.Affinities):\r\n    def __init__(self, P, verbose=False):\r\n        super().__init__(verbose=verbose)\r\n        self.P = self.normalize(P)\r\n\r\n    def to_new(self, data, return_distances=False):\r\n        raise NotImplementedError(\r\n            \"`ExistingAffinities.to_new` is not implemented!\"\r\n        )\r\n\r\n    def normalize(self, P, symmetrize=True, normalization=\"pair-wise\"):\r\n        if symmetrize:\r\n            P = (P + P.T) / 2\r\n\r\n        if normalization == \"pair-wise\":\r\n            P /= np.sum(P)\r\n        elif normalization == \"point-wise\":\r\n            P = sp.diags(np.asarray(1 / P.sum(axis=1)).ravel()) @ P\r\n\r\n        return P\r\n```\r\n\r\n> Aside: I noticed a potential bug in PerplexityBasedNN and MultiscaleMixture --- in both cases, the set_perplexity(...) / set_perplexities(...) functions compute the P matrix with symmetrize=True, irrespective of how the symmetrize flag was set during initialization.\r\n\r\nThat's a good catch, it should respect the parameter. Thanks!","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/840382821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/841522510","html_url":"https://github.com/pavlin-policar/openTSNE/issues/183#issuecomment-841522510","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/183","id":841522510,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MTUyMjUxMA==","user":{"login":"lihenryhfl","id":9156971,"node_id":"MDQ6VXNlcjkxNTY5NzE=","avatar_url":"https://avatars.githubusercontent.com/u/9156971?v=4","gravatar_id":"","url":"https://api.github.com/users/lihenryhfl","html_url":"https://github.com/lihenryhfl","followers_url":"https://api.github.com/users/lihenryhfl/followers","following_url":"https://api.github.com/users/lihenryhfl/following{/other_user}","gists_url":"https://api.github.com/users/lihenryhfl/gists{/gist_id}","starred_url":"https://api.github.com/users/lihenryhfl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lihenryhfl/subscriptions","organizations_url":"https://api.github.com/users/lihenryhfl/orgs","repos_url":"https://api.github.com/users/lihenryhfl/repos","events_url":"https://api.github.com/users/lihenryhfl/events{/privacy}","received_events_url":"https://api.github.com/users/lihenryhfl/received_events","type":"User","site_admin":false},"created_at":"2021-05-14T21:56:17Z","updated_at":"2021-05-14T21:56:17Z","author_association":"NONE","body":"Ah! That is interesting! I certainly did not realize that there was a matrix-wise normalization step at the end. This makes sense, as Q is also normalized to sum to 1. It seems like this final matrix-wise normalization is very crucial for good convergence of tSNE. Thank you very much for the clarification :)\r\n\r\nI shall close the issue.\r\n","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/841522510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lihenryhfl","id":9156971,"node_id":"MDQ6VXNlcjkxNTY5NzE=","avatar_url":"https://avatars.githubusercontent.com/u/9156971?v=4","gravatar_id":"","url":"https://api.github.com/users/lihenryhfl","html_url":"https://github.com/lihenryhfl","followers_url":"https://api.github.com/users/lihenryhfl/followers","following_url":"https://api.github.com/users/lihenryhfl/following{/other_user}","gists_url":"https://api.github.com/users/lihenryhfl/gists{/gist_id}","starred_url":"https://api.github.com/users/lihenryhfl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lihenryhfl/subscriptions","organizations_url":"https://api.github.com/users/lihenryhfl/orgs","repos_url":"https://api.github.com/users/lihenryhfl/repos","events_url":"https://api.github.com/users/lihenryhfl/events{/privacy}","received_events_url":"https://api.github.com/users/lihenryhfl/received_events","type":"User","site_admin":false}},{"id":4749089384,"node_id":"MDExOkNsb3NlZEV2ZW50NDc0OTA4OTM4NA==","url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/events/4749089384","actor":{"login":"lihenryhfl","id":9156971,"node_id":"MDQ6VXNlcjkxNTY5NzE=","avatar_url":"https://avatars.githubusercontent.com/u/9156971?v=4","gravatar_id":"","url":"https://api.github.com/users/lihenryhfl","html_url":"https://github.com/lihenryhfl","followers_url":"https://api.github.com/users/lihenryhfl/followers","following_url":"https://api.github.com/users/lihenryhfl/following{/other_user}","gists_url":"https://api.github.com/users/lihenryhfl/gists{/gist_id}","starred_url":"https://api.github.com/users/lihenryhfl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lihenryhfl/subscriptions","organizations_url":"https://api.github.com/users/lihenryhfl/orgs","repos_url":"https://api.github.com/users/lihenryhfl/repos","events_url":"https://api.github.com/users/lihenryhfl/events{/privacy}","received_events_url":"https://api.github.com/users/lihenryhfl/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2021-05-14T21:56:17Z","state_reason":null,"performed_via_github_app":null}]