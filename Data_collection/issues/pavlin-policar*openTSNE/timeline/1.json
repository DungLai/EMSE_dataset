[{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/419098373","html_url":"https://github.com/pavlin-policar/openTSNE/issues/1#issuecomment-419098373","issue_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/1","id":419098373,"node_id":"MDEyOklzc3VlQ29tbWVudDQxOTA5ODM3Mw==","user":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"created_at":"2018-09-06T13:43:59Z","updated_at":"2018-09-06T13:44:48Z","author_association":"OWNER","body":"Hi, sorry for the late reply - I somehow missed this in my inbox. This is a re-implementation of Fit-SNE in python/cython. While working on this I simplified the Fit-SNE code substantially - this also resulted in a speed-up. These changes have already been merged into the C++ implementation ([see PR](https://github.com/KlugerLab/FIt-SNE/pull/20)).\r\n\r\nThe goal of this implementation is to have a pure python implementation, which wouldn't need any specific libraries which are difficult to compile on Windows (this is not true yet, because I need to replace fftw with numpy's FFT which are supposedly faster when using intel's mkl optimizations). I am currently integrating this into [Orange](https://github.com/biolab/orange3), where we currently use scikit-learn, which is terribly slow. Because we'll be using it in Orange, there's more functionality for interactive optimization than in most libraries. We can stop and continue optimization with callbacks, get visualizations before the optimization is complete. This is nice to have in an interactive widget environment. Having the library written in Python is also better for experimenting and possible extensions, and having written the slow parts in Cython, the difference in speed to the C++ implementation is negligible.\r\n\r\nThere are also a couple other minor differences:\r\n- we report the kl divergence (although I think George has incorporated this into Fit-SNE a couple weeks ago)\r\n- we allow new data to be added into the existing embedding by direct optimization. To my knowledge, no other library does this. It's sometimes difficult to get nice embeddings like this, but it may have potential.\r\n- I've added bits of useful code from various research papers on tSNE that don't really appear anywhere e.g. late exaggeration (I believe George came up with this as well and it's probably in FitSNE). I haven't really found it that useful, but maybe someday. Also, pBIC is a measure to evaluate the quality of the tSNE embedding that works across different perplexities. Again, I haven't played around with this too much, but one paper mentioned it, and if it turns out to be good, we could use it for automatic perplexity selection.\r\n- The code is written so it's extensible. tSNE only needs an affinity matrix to run, so in this sense, we are not limited to tabular data and their distances. We could probably embed graphs with adjacency matrices or powers of the adjacency matrix to embed large graphs. Or any other data on which we can compute similarities. I haven't tried this yet, but it should be possible.\r\n\r\nI've been meaning to put citations into the readme, so everything is properly attributed, but I've been swamped and haven't had the time to do it.\r\n\r\nTLDR: I found the FitSNE paper and implementation and couldn't really make sense of it, so I worked through the theory and wrote my own implementation, where the code is far more readable IMO. I added various bits and bobs that I found while reading up on tSNE. The slow parts are written in cython so it's multithreaded and about as fast as C++. The other parts are written in python so it's really easy to play around with and experiment with tSNE.","reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/comments/419098373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false}},{"id":1838324232,"node_id":"MDExOkNsb3NlZEV2ZW50MTgzODMyNDIzMg==","url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/events/1838324232","actor":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2018-09-11T11:53:17Z","state_reason":null,"performed_via_github_app":null}]