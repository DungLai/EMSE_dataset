{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/106","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/106/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/106/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/106/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/106","id":555278949,"node_id":"MDU6SXNzdWU1NTUyNzg5NDk=","number":106,"title":"Untangling a line in openTSNE vs FIt-SNE","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"labels":[{"id":1904753631,"node_id":"MDU6TGFiZWwxOTA0NzUzNjMx","url":"https://api.github.com/repos/pavlin-policar/openTSNE/labels/discussion","name":"discussion","color":"54e589","default":false,"description":"Needs more discussion"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2020-01-26T19:56:13Z","updated_at":"2020-03-22T17:16:00Z","closed_at":"2020-03-16T23:54:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I've been experimenting with extreme early exaggeration that should approximate Laplacian eigenmaps as shown in https://epubs.siam.org/doi/abs/10.1137/18M1216134. My simple toy example (straight line in 3D) works fine in FIt-SNE, but fails in openTSNE, and I struggle to understand why.\r\n\r\nHere is a reproducible example:\r\n\r\n```\r\nn = 10000\r\nX = np.zeros((n,3))\r\nX[:,0] = np.arange(n)\r\n\r\nZ1 = fast_tsne(X, seed=40, learning_rate=1, early_exag_coeff=n/10, stop_early_exag_iter=2000, max_iter=2000)\r\nZ2 = fast_tsne(X, seed=41, learning_rate=1, early_exag_coeff=n/10, stop_early_exag_iter=2000, max_iter=2000)\r\nZ3 = fast_tsne(X, seed=42, learning_rate=1, early_exag_coeff=n/10, stop_early_exag_iter=2000, max_iter=2000)\r\n\r\nZ4 = TSNE(n_jobs=-1, initialization='random', random_state=40, learning_rate=1, early_exaggeration=n/10, \r\n           early_exaggeration_iter=2000, n_iter=0).fit(X)\r\nZ5 = TSNE(n_jobs=-1, initialization='random', random_state=41, learning_rate=1, early_exaggeration=n/10, \r\n           early_exaggeration_iter=2000, n_iter=0).fit(X)\r\nZ6 = TSNE(n_jobs=-1, initialization='random', random_state=42, learning_rate=1, early_exaggeration=n/10, \r\n           early_exaggeration_iter=2000, n_iter=0).fit(X)\r\n\r\nplt.figure(figsize=(9,3))\r\nfor i,Z in enumerate([Z1,Z2,Z3], 1):\r\n    plt.subplot(1,3,i)\r\n    plt.scatter(Z[:,0], Z[:,1], s=1, c=np.arange(n))\r\nsns.despine()\r\nplt.tight_layout()\r\nplt.savefig('line_fitsne.png')\r\n\r\nplt.figure(figsize=(9,3))\r\nfor i,Z in enumerate([Z4,Z5,Z6], 1):\r\n    plt.subplot(1,3,i)\r\n    plt.scatter(Z[:,0], Z[:,1], s=1, c=np.arange(n))\r\nsns.despine()\r\nplt.tight_layout()\r\nplt.savefig('line_opentsne.png')\r\n```\r\n\r\nI set learning rate to 1 and exaggeration coefficient to n/10, as in the paper above. I do early exaggeration for 2000 iterations and nothing else. Other parameters are default. FIt-SNE successfully unwraps the line for every random seed, as it should.\r\n\r\n![line_fitsne](https://user-images.githubusercontent.com/8970231/73140762-c137bf80-407c-11ea-9b35-936af9f857b6.png)\r\n\r\nBut openTSNE fails to unwrap the line for every random seed:\r\n\r\n![line_opentsne](https://user-images.githubusercontent.com/8970231/73140763-cac12780-407c-11ea-9c85-95f646ad7778.png)\r\n\r\nIt does not look like it's due to convergence: I tried running it for another 1000 iterations (so 3000 in total) and it looks basically the same.\r\nIt does not look like it's due to initialization either: I tried manually initializing with random initializations with std=0.0001, and it still does not succeed. \r\n\r\nWeird. I wanted to use openTSNE to make animations of how the line gets untangled with extreme exaggeration, but it only seems to work in FIt-SNE :-(","closed_by":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/106/timeline","performed_via_github_app":null,"state_reason":"completed"}