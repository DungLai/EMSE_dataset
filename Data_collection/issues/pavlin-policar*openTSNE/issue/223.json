{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/223","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/223/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/223/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/223/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/223","id":1500152330,"node_id":"I_kwDOCCUuTM5ZaoIK","number":223,"title":"Switching spectral initialization to sklean.manifold.SpectralEmbeddings","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-12-16T12:47:10Z","updated_at":"2022-12-17T22:19:18Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"A student in our lab is currently looking into spectral initialization, and she found out that `openTSNE.init.spectral(tol=0)` in some cases does not agree to `sklearn.manifold.SpectralEmbedding(affinity='precomputed')`. In some cases it does agree perfectly or near-perfectly, but we have an example when the result is very different, and `SpectralEmbedding` gives what seems like a more meaningful result.\r\n\r\nI looked at the math, and it seems that they should conceptually be computing the same thing (`SpectralEmbedding` finds eigenvectors of the L_sym, whereas `init.spectral` finds generalized eigenvectors or W and D, but that should be equivalent, as per https://jlmelville.github.io/smallvis/spectral.html @jlmelville). We don't know what the difference is due to. It may be numerical. \r\n\r\nHowever, conceptually, it seems sensible if openTSNE would simply outsource the computation to sklearn.\r\n\r\nA related issue is that `init.spectral` is not reproducible and gives different results with each run. Apparently the way we initialize `v0` makes ARPACK to still have some randomness. Sklearn gets around this by initializing `v0` differently. I guess openTSNE should do the same -- but of course if we end up simply calling `SpectralEmbedding` then it won't matter.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/223/timeline","performed_via_github_app":null,"state_reason":null}