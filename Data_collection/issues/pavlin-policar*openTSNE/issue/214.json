{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/214","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/214/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/214/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/214/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/214","id":1376853630,"node_id":"I_kwDOCCUuTM5SER5-","number":214,"title":"precomputed knn","user":{"login":"jlmelville","id":1936393,"node_id":"MDQ6VXNlcjE5MzYzOTM=","avatar_url":"https://avatars.githubusercontent.com/u/1936393?v=4","gravatar_id":"","url":"https://api.github.com/users/jlmelville","html_url":"https://github.com/jlmelville","followers_url":"https://api.github.com/users/jlmelville/followers","following_url":"https://api.github.com/users/jlmelville/following{/other_user}","gists_url":"https://api.github.com/users/jlmelville/gists{/gist_id}","starred_url":"https://api.github.com/users/jlmelville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jlmelville/subscriptions","organizations_url":"https://api.github.com/users/jlmelville/orgs","repos_url":"https://api.github.com/users/jlmelville/repos","events_url":"https://api.github.com/users/jlmelville/events{/privacy}","received_events_url":"https://api.github.com/users/jlmelville/received_events","type":"User","site_admin":false},"labels":[{"id":959087254,"node_id":"MDU6TGFiZWw5NTkwODcyNTQ=","url":"https://api.github.com/repos/pavlin-policar/openTSNE/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-09-17T19:20:04Z","updated_at":"2022-09-30T15:32:17Z","closed_at":"2022-09-30T15:32:17Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, is there a way to use k-nearest neighbors data created externally? My current strategy is to create a dummy class of the form:\r\n\r\n```python\r\nclass PrecomputedKNNIndex:\r\n    def __init__(self, indices, distances):\r\n        self.indices = indices\r\n        self.distances = distances\r\n        self.k = indices.shape[1]\r\n\r\n    def build(self):\r\n        return self.indices, self.distances\r\n\r\n    def query(self, query, k):\r\n        raise NotImplementedError(\"No query with a pre-computed knn\")\r\n\r\n    def check_metric(self, metric):\r\n        if callable(metric):\r\n            pass\r\n        return metric\r\n```\r\n\r\nand use it like:\r\n\r\n```python\r\nimport openTSNE\r\n\r\nperplexity = 30\r\ndata = get_data_fom_somewhere()\r\n\r\nn_neighbors = min(data.shape[0] - 1, int(3 * perplexity))\r\n# assume this doesn't return the \"self\" neighbor as the first item in the knn\r\nindices, dists = get_nn_from_somewhere(data, n_neighbors)\r\nknn = PrecomputedKNNIndex(indices, dists)\r\n\r\naffinities = openTSNE.affinity.PerplexityBasedNN(\r\n    perplexity=perplexity,\r\n    knn_index=knn,\r\n)\r\nembedder = openTSNE.TSNE(n_components=2)\r\nembedded = embedder.fit(data, affinities=affinities)\r\n```\r\n\r\nThis seems to work perfectly well, just wondered if I am missing a more obvious approach.","closed_by":{"login":"jlmelville","id":1936393,"node_id":"MDQ6VXNlcjE5MzYzOTM=","avatar_url":"https://avatars.githubusercontent.com/u/1936393?v=4","gravatar_id":"","url":"https://api.github.com/users/jlmelville","html_url":"https://github.com/jlmelville","followers_url":"https://api.github.com/users/jlmelville/followers","following_url":"https://api.github.com/users/jlmelville/following{/other_user}","gists_url":"https://api.github.com/users/jlmelville/gists{/gist_id}","starred_url":"https://api.github.com/users/jlmelville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jlmelville/subscriptions","organizations_url":"https://api.github.com/users/jlmelville/orgs","repos_url":"https://api.github.com/users/jlmelville/repos","events_url":"https://api.github.com/users/jlmelville/events{/privacy}","received_events_url":"https://api.github.com/users/jlmelville/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/214/timeline","performed_via_github_app":null,"state_reason":"completed"}