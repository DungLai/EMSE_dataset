{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/183","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/183/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/183/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/183/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/183","id":890192358,"node_id":"MDU6SXNzdWU4OTAxOTIzNTg=","number":183,"title":"Using a custom P matrix","user":{"login":"lihenryhfl","id":9156971,"node_id":"MDQ6VXNlcjkxNTY5NzE=","avatar_url":"https://avatars.githubusercontent.com/u/9156971?v=4","gravatar_id":"","url":"https://api.github.com/users/lihenryhfl","html_url":"https://github.com/lihenryhfl","followers_url":"https://api.github.com/users/lihenryhfl/followers","following_url":"https://api.github.com/users/lihenryhfl/following{/other_user}","gists_url":"https://api.github.com/users/lihenryhfl/gists{/gist_id}","starred_url":"https://api.github.com/users/lihenryhfl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lihenryhfl/subscriptions","organizations_url":"https://api.github.com/users/lihenryhfl/orgs","repos_url":"https://api.github.com/users/lihenryhfl/repos","events_url":"https://api.github.com/users/lihenryhfl/events{/privacy}","received_events_url":"https://api.github.com/users/lihenryhfl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-05-12T15:12:09Z","updated_at":"2021-05-14T21:56:18Z","closed_at":"2021-05-14T21:56:17Z","author_association":"NONE","active_lock_reason":null,"body":"I want to use openTSNE with a custom P matrix. The documentation suggests that my custom P should be straightforward to substitute in. However, following the code example [here](https://opentsne.readthedocs.io/en/latest/examples/02_advanced_usage/02_advanced_usage.html), I noticed that the P matrix returned by `openTSNE.affinity.PerplexityBasedNN`, e.g. the `P` defined in the code snippet below:\r\n```\r\nimport numpy as np\r\nfrom openTSNE.affinity import PerplexityBasedNN\r\n\r\nx = np.random.normal(size=(1000, 10))\r\n\r\naffinities = PerplexityBasedNN(\r\n    x,\r\n    perplexity=30,\r\n    metric=\"euclidean\",\r\n    n_jobs=8,\r\n    random_state=42,\r\n    verbose=True\r\n)\r\n\r\nP = affinities.P\r\n```\r\ndoes not have rows sum equal to 1, nor does it have the correct row perplexities. That is,\r\n```\r\nP = affinities.P.todense()\r\n\r\nrow_sums = np.sum(P, axis=1)\r\navg_row_sum = np.mean(row_sums) # this is not ~approx = 1\r\n\r\nrow_entropies = np.sum(P * np.log2(P + 1e-7), axis=1)\r\nrow_perplexities = np.power(2, row_entropies)\r\navg_row_perplexity = np.mean(row_perplexities) # this is not ~approx = 30\r\n```\r\n Therefore, I assume that P is normalized at a later point --- so I also need to replace it with my custom P at this later point. However, I couldn't find the code anywhere in `openTSNE.TSNEEmbedding` that performs the row sum and perplexity normalization.\r\n\r\nIs the current standard to not normalize P? Or am I missing something here?\r\n\r\nAside: I noticed a potential bug in `PerplexityBasedNN` and `MultiscaleMixture` --- in both cases, the `set_perplexity(...)` / `set_perplexities(...)` functions compute the P matrix with `symmetrize=True`, irrespective of how the `symmetrize` flag was set during initialization.\r\n","closed_by":{"login":"lihenryhfl","id":9156971,"node_id":"MDQ6VXNlcjkxNTY5NzE=","avatar_url":"https://avatars.githubusercontent.com/u/9156971?v=4","gravatar_id":"","url":"https://api.github.com/users/lihenryhfl","html_url":"https://github.com/lihenryhfl","followers_url":"https://api.github.com/users/lihenryhfl/followers","following_url":"https://api.github.com/users/lihenryhfl/following{/other_user}","gists_url":"https://api.github.com/users/lihenryhfl/gists{/gist_id}","starred_url":"https://api.github.com/users/lihenryhfl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lihenryhfl/subscriptions","organizations_url":"https://api.github.com/users/lihenryhfl/orgs","repos_url":"https://api.github.com/users/lihenryhfl/repos","events_url":"https://api.github.com/users/lihenryhfl/events{/privacy}","received_events_url":"https://api.github.com/users/lihenryhfl/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/183/timeline","performed_via_github_app":null,"state_reason":"completed"}