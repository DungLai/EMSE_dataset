{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/132","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/132/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/132/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/132/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/132","id":615046187,"node_id":"MDU6SXNzdWU2MTUwNDYxODc=","number":132,"title":"Limit max_step_norm","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-05-09T00:07:31Z","updated_at":"2020-05-14T19:40:35Z","closed_at":"2020-05-14T19:40:35Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'd like to open a discussion about the `max_step_norm` parameter that we introduced into the last release of FIt-SNE as a hack after George came up with an example where some points were shooting off very fast.\r\n\r\nSince then, I ran into two other situations where the same thing happened in openTSNE. One example was running some experiments with very large exaggeration factor (30) and learning rate set to N/30. Some points were shooting off. Another example I had right now, using sparse data and cosine metric. I only had N=10000 so I ran Barnes-Hut and saw that several points ended up ~1000 distance away from the main embedding. Of course FFT just got stuck.\r\n\r\nI inserted the following lines before `embedding += update` and it seems to have eliminated these issues:\r\n\r\n```\r\n            # clip the step sizes\r\n            max_step_norm = 5\r\n            update_norms = np.linalg.norm(update, axis=1, keepdims=True)\r\n            norm_exceeded = update_norms.squeeze() > max_step_norm\r\n            update[norm_exceeded] /= update_norms[norm_exceeded]\r\n            update[norm_exceeded] *= max_step_norm\r\n```\r\n\r\nAlso, I noticed UMAP does a very similar clipping of the step sizes (I assume for similar reasons).\r\n\r\nYou currently have `max_grad_norm` which is sensible, but the gradient later gets modified by the gains, momentum, and learning rate. On reflection, I think that limiting the `update` norms makes more sense than limiting the `gradient` norms.","closed_by":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/132/timeline","performed_via_github_app":null,"state_reason":"completed"}