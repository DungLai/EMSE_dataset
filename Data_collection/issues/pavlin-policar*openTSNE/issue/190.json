{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/190","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/190/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/190/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/190/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/190","id":940873926,"node_id":"MDU6SXNzdWU5NDA4NzM5MjY=","number":190,"title":"Default learning rate in .optimize()","user":{"login":"ritagonmar","id":82372364,"node_id":"MDQ6VXNlcjgyMzcyMzY0","avatar_url":"https://avatars.githubusercontent.com/u/82372364?v=4","gravatar_id":"","url":"https://api.github.com/users/ritagonmar","html_url":"https://github.com/ritagonmar","followers_url":"https://api.github.com/users/ritagonmar/followers","following_url":"https://api.github.com/users/ritagonmar/following{/other_user}","gists_url":"https://api.github.com/users/ritagonmar/gists{/gist_id}","starred_url":"https://api.github.com/users/ritagonmar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ritagonmar/subscriptions","organizations_url":"https://api.github.com/users/ritagonmar/orgs","repos_url":"https://api.github.com/users/ritagonmar/repos","events_url":"https://api.github.com/users/ritagonmar/events{/privacy}","received_events_url":"https://api.github.com/users/ritagonmar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-09T15:40:34Z","updated_at":"2021-10-23T08:44:39Z","closed_at":"2021-10-23T08:44:39Z","author_association":"NONE","active_lock_reason":null,"body":"Hi Pavlin,\r\n\r\nSo I have notice something weird about the default learning rate when using `.optimize()`. In the documentation of `.optimize()`  it says the following:\r\n\r\n> learning_rate (Union[str, float]) – The learning rate for t-SNE optimization. When learning_rate=\"auto\" the appropriate learning rate is selected according to max(200, N / 12), as determined in Belkina et al. “Automated optimized parameters for t-distributed stochastic neighbor embedding improve visualization and analysis of large datasets”, 2019.\r\n\r\nIn my case, the default learning rate should be `n/12`,  since it is larger than `200`. I ran it without specifying the learning rate (assuming it would automatically use `n/12`) and got a weird embedding. I reran it specifying `learning_rate=n/12` and got a different embedding, that seemed to make more sense.\r\n\r\nI think maybe there is a problem with the default learning rate and it doesn't use `max(200, n/12)`.\r\n\r\n##### Steps to reproduce the behavior\r\n\r\nI realised about this using this piece of code:\r\n\r\n```\r\nI = initialization.pca(data, random_state=42)\r\n\r\nE = TSNEEmbedding(I, A, n_jobs=-1, random_state=42, verbose=True)\r\n\r\n# early exaggeration\r\nE = E.optimize(n_iter=125, exaggeration=12, momentum=0.5, n_jobs=-1, verbose=True, callbacks=mycallback, callbacks_every_iters=50)\r\n\r\n# exaggeration annealing\r\nexs = np.linspace(12,1,125)\r\nfor i in range(125):\r\n    if (i+1)%50 == 0:\r\n        E = E.optimize(n_iter=1, exaggeration=exs[i], momentum=0.8, n_jobs=-1, verbose=True, callbacks=mycallback, callbacks_every_iters=1)\r\n    else:\r\n        E = E.optimize(n_iter=1, exaggeration=exs[i], momentum=0.8, n_jobs=-1, verbose=True)\r\n        \r\n# final optimization without exaggeration\r\nE = E.optimize(n_iter=2000, exaggeration=1, momentum=0.8, n_jobs=-1, verbose=True, callbacks=mycallback, callbacks_every_iters=50)\r\n```\r\n\r\nIn the version that outputted the correct embedding I just specified the learning rate like this:\r\n\r\n```\r\nI = initialization.pca(data, random_state=42)\r\n\r\nE = TSNEEmbedding(I, A, n_jobs=-1, random_state=42, verbose=True)\r\n\r\nn = data.shape[0]\r\n\r\n# early exaggeration\r\nE = E.optimize(n_iter=125, exaggeration=12, momentum=0.5, n_jobs=-1, learning_rate=n/12, verbose=True, callbacks=mycallback, callbacks_every_iters=50)\r\n\r\n# exaggeration annealing\r\nexs = np.linspace(12,1,125)\r\nfor i in range(125):\r\n    if (i+1)%50 == 0:\r\n        E = E.optimize(n_iter=1, exaggeration=exs[i], momentum=0.8, n_jobs=-1, learning_rate=n/12, verbose=True, callbacks=mycallback, callbacks_every_iters=1)\r\n    else:\r\n        E = E.optimize(n_iter=1, exaggeration=exs[i], momentum=0.8, n_jobs=-1, learning_rate=n/12, verbose=True)\r\n        \r\n# final optimization without exaggeration\r\nE = E.optimize(n_iter=2000, exaggeration=1, momentum=0.8, n_jobs=-1, learning_rate=n/12, verbose=True, callbacks=mycallback, callbacks_every_iters=50)\r\n```","closed_by":{"login":"ritagonmar","id":82372364,"node_id":"MDQ6VXNlcjgyMzcyMzY0","avatar_url":"https://avatars.githubusercontent.com/u/82372364?v=4","gravatar_id":"","url":"https://api.github.com/users/ritagonmar","html_url":"https://github.com/ritagonmar","followers_url":"https://api.github.com/users/ritagonmar/followers","following_url":"https://api.github.com/users/ritagonmar/following{/other_user}","gists_url":"https://api.github.com/users/ritagonmar/gists{/gist_id}","starred_url":"https://api.github.com/users/ritagonmar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ritagonmar/subscriptions","organizations_url":"https://api.github.com/users/ritagonmar/orgs","repos_url":"https://api.github.com/users/ritagonmar/repos","events_url":"https://api.github.com/users/ritagonmar/events{/privacy}","received_events_url":"https://api.github.com/users/ritagonmar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/190/timeline","performed_via_github_app":null,"state_reason":"completed"}