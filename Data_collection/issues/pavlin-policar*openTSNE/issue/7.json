{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/7","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/7/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/7/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/7","id":360577171,"node_id":"MDU6SXNzdWUzNjA1NzcxNzE=","number":7,"title":"A bunch of comments and questions","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":37,"created_at":"2018-09-15T21:23:30Z","updated_at":"2018-11-19T15:44:16Z","closed_at":"2018-09-20T09:24:13Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi Pavlin! Great work. I did not know about Orange but I am working with scRNA-seq data myself (cf. your Zeisel2018 example) and I am using Python, so it's interesting to see developments in that direction.\r\n\r\nI have a couple of scattered comments/questions that I will just dump here. This isn't a real \"issue\".\r\n\r\n1. You say that BH is much faster than FFT for smaller datasets. That's interesting; I did not notice this. What kind of numbers are you talking about here? I was under impression that with n<10k both methods are so fast (I guess all 1000 iterations under 1 min?) that the exact time does not really matter...\r\n\r\n2. Any specific reason to use \"Python/Numba implementation of nearest neighbor descent\" for approximate nearest neighbours? There are some popular libraries, e.g. `annoy`. Is your implementation much faster than that? Because otherwise it could be easier to use a well-known established library... I think Leland McInnes is using something similar (Numba implementation of nearest neighbor descent) in his UMAP; did you follow him here?\r\n\r\n3. I did not look at the actual code, but from the description on the main page it sounds that you don't have a vanilla t-SNE implementation in here. Is it true? I think it would be nice to have vanilla t-SNE in here too. For datasets with n=1k-2k it's pretty fast and I guess many people would prefer to use vanilla t-SNE if possible.\r\n\r\n4. I noticed you writing this in one of the closed issues:\r\n\r\n    > we allow new data to be added into the existing embedding by direct optimization. To my knowledge, no other library does this. It's sometimes difficult to get nice embeddings like this, but it may have potential.\r\n\r\n    That's interesting. How exactly are you doing this? You fix the existing embedding, compute all the affinities for the extended dataset (original data + new data) and then optimize the cost by allowing only the positions of the new points to change? Something like that?\r\n\r\n5. George sped up his code quite a bit by adding multithreading to the F_attr computations. He is now implementing multithreading for the repulsive forces too. See https://github.com/KlugerLab/FIt-SNE/pull/32, and the discussion there. This might be interesting for you too. Or are you already using multithreading during gradient descent?\r\n\r\n6.  I am guessing that your Zeisel2018 plot is colored using the same 16 \"megaclusters\" that Zeisel et al. use in Figure 1B (https://www.cell.com/cms/attachment/f1754f20-890c-42f5-aa27-bbb243127883/gr1_lrg.jpg). If so, it would be great if you used the same colors as in their figure; this would ease the comparison. Of course you are not trying to make comparisons here, but this is something that would be interesting to me personally :)","closed_by":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/7/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/7/timeline","performed_via_github_app":null,"state_reason":"completed"}