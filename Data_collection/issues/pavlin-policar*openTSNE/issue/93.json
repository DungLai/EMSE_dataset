{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/93","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/93/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/93/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/93","id":487748047,"node_id":"MDU6SXNzdWU0ODc3NDgwNDc=","number":93,"title":"Add support for callable metrics","user":{"login":"jgraving","id":5445636,"node_id":"MDQ6VXNlcjU0NDU2MzY=","avatar_url":"https://avatars.githubusercontent.com/u/5445636?v=4","gravatar_id":"","url":"https://api.github.com/users/jgraving","html_url":"https://github.com/jgraving","followers_url":"https://api.github.com/users/jgraving/followers","following_url":"https://api.github.com/users/jgraving/following{/other_user}","gists_url":"https://api.github.com/users/jgraving/gists{/gist_id}","starred_url":"https://api.github.com/users/jgraving/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgraving/subscriptions","organizations_url":"https://api.github.com/users/jgraving/orgs","repos_url":"https://api.github.com/users/jgraving/repos","events_url":"https://api.github.com/users/jgraving/events{/privacy}","received_events_url":"https://api.github.com/users/jgraving/received_events","type":"User","site_admin":false},"labels":[{"id":959087250,"node_id":"MDU6TGFiZWw5NTkwODcyNTA=","url":"https://api.github.com/repos/pavlin-policar/openTSNE/labels/enhancement","name":"enhancement","color":"0799f4","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-08-31T08:51:42Z","updated_at":"2019-09-03T19:33:56Z","closed_at":"2019-09-03T19:33:56Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"##### Expected behaviour\r\npynndescent supports passing callable metrics compiled with numba, so I would expect openTSNE to be able to support this\r\n##### Actual behaviour\r\nWhen I pass a numba-compiled callable metric, openTSNE throws a ValueError\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-44-b188b4c74e96> in <module>()\r\n----> 1 embedding_train = tsne.fit(X_train)\r\n\r\n/home/jake/.local/lib/python3.6/site-packages/openTSNE/tsne.py in fit(self, X)\r\n   1040 \r\n   1041         \"\"\"\r\n-> 1042         embedding = self.prepare_initial(X)\r\n   1043 \r\n   1044         try:\r\n\r\n/home/jake/.local/lib/python3.6/site-packages/openTSNE/tsne.py in prepare_initial(self, X)\r\n   1118             metric_params=self.metric_params,\r\n   1119             n_jobs=self.n_jobs,\r\n-> 1120             random_state=self.random_state,\r\n   1121         )\r\n   1122 \r\n\r\n/home/jake/.local/lib/python3.6/site-packages/openTSNE/affinity.py in __init__(self, data, perplexity, method, metric, metric_params, symmetrize, n_jobs, random_state)\r\n    124         k_neighbors = min(self.n_samples - 1, int(3 * self.perplexity))\r\n    125         self.knn_index, self.__neighbors, self.__distances = build_knn_index(\r\n--> 126             data, method, k_neighbors, metric, metric_params, n_jobs, random_state\r\n    127         )\r\n    128 \r\n\r\n/home/jake/.local/lib/python3.6/site-packages/openTSNE/affinity.py in build_knn_index(data, method, k, metric, metric_params, n_jobs, random_state)\r\n    274             metric_params=metric_params,\r\n    275             n_jobs=n_jobs,\r\n--> 276             random_state=random_state,\r\n    277         )\r\n    278 \r\n\r\n/home/jake/.local/lib/python3.6/site-packages/openTSNE/nearest_neighbors.py in __init__(self, metric, metric_params, n_jobs, random_state)\r\n     11     def __init__(self, metric, metric_params=None, n_jobs=1, random_state=None):\r\n     12         self.index = None\r\n---> 13         self.metric = self.check_metric(metric)\r\n     14         self.metric_params = metric_params\r\n     15         self.n_jobs = n_jobs\r\n\r\n/home/jake/.local/lib/python3.6/site-packages/openTSNE/nearest_neighbors.py in check_metric(self, *args, **kwargs)\r\n    184             )\r\n    185 \r\n--> 186         return super().check_metric(*args, **kwargs)\r\n    187 \r\n    188     def build(self, data, k):\r\n\r\n/home/jake/.local/lib/python3.6/site-packages/openTSNE/nearest_neighbors.py in check_metric(self, metric)\r\n     58         if metric not in self.VALID_METRICS:\r\n     59             raise ValueError(\r\n---> 60                 f\"`{self.__class__.__name__}` does not support the `{metric}` \"\r\n     61                 f\"metric. Please choose one of the supported metrics: \"\r\n     62                 f\"{', '.join(self.VALID_METRICS)}.\"\r\n\r\nValueError: `NNDescent` does not support the `CPUDispatcher(<function kld at 0x7f7fe2311158>)` metric. Please choose one of the supported metrics: euclidean, l2, manhattan, taxicab, l1, chebyshev, linfinity, linfty, linf, minkowski, seuclidean, standardised_euclidean, wminkowski, weighted_minkowski, mahalanobis, canberra, cosine, correlation, haversine, braycurtis, hamming, jaccard, dice, matching, kulsinski, rogerstanimoto, russellrao, sokalsneath, sokalmichener, yule.\r\n```\r\n##### Steps to reproduce the behavior\r\nHere is a minimal working example:\r\n```python\r\n\r\nimport numpy as np\r\nfrom openTSNE import TSNE\r\nfrom openTSNE.callbacks import ErrorLogger\r\nfrom numba import njit\r\n\r\n@njit(fastmath=True)\r\ndef kld(p, q):\r\n    result = 0.0\r\n    for i in range(p.shape[0]):\r\n        logp = np.log(p[i]) if p[i] > 0 else 0\r\n        logq = np.log(q[i]) if q[i] > 0 else 0\r\n        result += p[i] * (logq - logp)\r\n    return -result / np.log(2.)\r\n\r\ntsne = TSNE(\r\n    perplexity=30,\r\n    metric=kld,\r\n    callbacks=ErrorLogger(),\r\n    n_jobs=1\r\n)\r\n\r\nx_train = np.random.beta(0.5, 0.5, size=(500,10))\r\nembedding_train = tsne.fit(x_train)\r\n```\r\n","closed_by":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/93/timeline","performed_via_github_app":null,"state_reason":"completed"}