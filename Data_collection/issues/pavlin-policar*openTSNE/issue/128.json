{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/128","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/128/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/128/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/128/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/128","id":612532136,"node_id":"MDU6SXNzdWU2MTI1MzIxMzY=","number":128,"title":"FFTW vs numpy.FFT speed gain","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2020-05-05T11:30:29Z","updated_at":"2020-05-08T21:52:38Z","closed_at":"2020-05-08T15:49:28Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The README says:\r\n\r\n> To squeeze the most out of openTSNE, you may also consider installing FFTW3 prior to installation. FFTW3 implements the Fast Fourier Transform, which is heavily used in openTSNE. If FFTW3 is not available, openTSNE will use numpyâ€™s implementation of the FFT, which is slightly slower than FFTW. The difference is only noticeable with large data sets containing millions of data points.\r\n\r\nI have not tried openTSNE with FFTW. Is there no noticeable difference on e.g. MNIST? I see FIt-SNE being almost 2x faster than openTSNE on MNIST (n=70000) with most of the speed-up taken by the gradient descent, not the affinity matrix construction. I'd expect Cython to be almost as fast as compiled C++, and not 2x slower. But of course openTSNE has to switch back and forth between Cython and numpy, so I could imagine that could cause the slowdown. Would it be avoided by using FFTW?\r\n\r\nOn my laptop FIT-SNE takes ~90 seconds, openTSNE with n_jobs=-1 takes ~180 seconds. That's with 50-dimensional input, after PCA.","closed_by":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/128/timeline","performed_via_github_app":null,"state_reason":"completed"}