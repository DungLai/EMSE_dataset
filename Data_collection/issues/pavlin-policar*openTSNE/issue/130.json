{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130","repository_url":"https://api.github.com/repos/pavlin-policar/openTSNE","labels_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130/labels{/name}","comments_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130/comments","events_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130/events","html_url":"https://github.com/pavlin-policar/openTSNE/issues/130","id":615031215,"node_id":"MDU6SXNzdWU2MTUwMzEyMTU=","number":130,"title":"Pynndescent build/query","user":{"login":"dkobak","id":8970231,"node_id":"MDQ6VXNlcjg5NzAyMzE=","avatar_url":"https://avatars.githubusercontent.com/u/8970231?v=4","gravatar_id":"","url":"https://api.github.com/users/dkobak","html_url":"https://github.com/dkobak","followers_url":"https://api.github.com/users/dkobak/followers","following_url":"https://api.github.com/users/dkobak/following{/other_user}","gists_url":"https://api.github.com/users/dkobak/gists{/gist_id}","starred_url":"https://api.github.com/users/dkobak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkobak/subscriptions","organizations_url":"https://api.github.com/users/dkobak/orgs","repos_url":"https://api.github.com/users/dkobak/repos","events_url":"https://api.github.com/users/dkobak/events{/privacy}","received_events_url":"https://api.github.com/users/dkobak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2020-05-08T23:09:36Z","updated_at":"2020-07-04T07:54:54Z","closed_at":"2020-07-04T07:54:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We discussed this before, but I've been playing around with some sparse data now and wanted to report some runtimes.\r\n\r\nWhen using pynndecent, openTSNE runs `build()` with n_neighbors=15 and then `query()` with n_neighbors=3*perplexity. At the same time, Leland said that that's not efficient and the recommended way to use pynndescent is to run `build()` with the desired number of neighbors and then simply take its constructed kNN graph without querying. You said that you ran some benchmarks and found your way to be faster. Here are runtimes I got on `X` that is sparse of size `(100000, 9630)`.\r\n\r\n```\r\nnn = NNDescent(X, metric='cosine', n_neighbors=15)      # Wall time: 39 s\r\nnn.query(X, k=15)                                         # Wall time: 1min 57s\r\nnn.query(X, k=90)                                         # Wall time: 3min 21s\r\nnn90 = NNDescent(X, metric='cosine', n_neighbors=90)  # Wall time: 7min 45s\r\nnn90.query(X, k=90)                                     # Wall time: 57min 53s\r\n```\r\n\r\nFor k=90 it is indeed faster to build with k=15 and then query with k=90, so I can confirm your observation. \r\n\r\nMy only suggestion would be to modify the `NNDescent` class so that if the desired `k` is less than some threshold then build is done with `k+1` and then the constructed tree is returned without `query`. We can simply use 15 as the threshold. I did this locally and can PR. ","closed_by":{"login":"pavlin-policar","id":5758119,"node_id":"MDQ6VXNlcjU3NTgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/5758119?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlin-policar","html_url":"https://github.com/pavlin-policar","followers_url":"https://api.github.com/users/pavlin-policar/followers","following_url":"https://api.github.com/users/pavlin-policar/following{/other_user}","gists_url":"https://api.github.com/users/pavlin-policar/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlin-policar/subscriptions","organizations_url":"https://api.github.com/users/pavlin-policar/orgs","repos_url":"https://api.github.com/users/pavlin-policar/repos","events_url":"https://api.github.com/users/pavlin-policar/events{/privacy}","received_events_url":"https://api.github.com/users/pavlin-policar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pavlin-policar/openTSNE/issues/130/timeline","performed_via_github_app":null,"state_reason":"completed"}