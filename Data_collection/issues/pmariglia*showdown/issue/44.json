{"url":"https://api.github.com/repos/pmariglia/showdown/issues/44","repository_url":"https://api.github.com/repos/pmariglia/showdown","labels_url":"https://api.github.com/repos/pmariglia/showdown/issues/44/labels{/name}","comments_url":"https://api.github.com/repos/pmariglia/showdown/issues/44/comments","events_url":"https://api.github.com/repos/pmariglia/showdown/issues/44/events","html_url":"https://github.com/pmariglia/showdown/issues/44","id":736851340,"node_id":"MDU6SXNzdWU3MzY4NTEzNDA=","number":44,"title":"Error when starting battle","user":{"login":"link-discord","id":50463727,"node_id":"MDQ6VXNlcjUwNDYzNzI3","avatar_url":"https://avatars.githubusercontent.com/u/50463727?v=4","gravatar_id":"","url":"https://api.github.com/users/link-discord","html_url":"https://github.com/link-discord","followers_url":"https://api.github.com/users/link-discord/followers","following_url":"https://api.github.com/users/link-discord/following{/other_user}","gists_url":"https://api.github.com/users/link-discord/gists{/gist_id}","starred_url":"https://api.github.com/users/link-discord/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/link-discord/subscriptions","organizations_url":"https://api.github.com/users/link-discord/orgs","repos_url":"https://api.github.com/users/link-discord/repos","events_url":"https://api.github.com/users/link-discord/events{/privacy}","received_events_url":"https://api.github.com/users/link-discord/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-05T11:27:15Z","updated_at":"2020-11-12T20:48:05Z","closed_at":"2020-11-12T20:48:05Z","author_association":"NONE","active_lock_reason":null,"body":"Traceback (most recent call last):\r\n\r\nFile \"run.py\", line 110, in <module>\r\n\r\nasyncio.get_event_loop().run_until_complete(showdown())\r\n\r\nFile \"/usr/lib/python3.6/asyncio/base_events.py\", line 484, in run_until_complete\r\n\r\nreturn future.result()\r\n\r\nFile \"run.py\", line 93, in showdown\r\n\r\nwinner = await pokemon_battle(ps_websocket_client, config.pokemon_mode)\r\n\r\nFile \"/showdown/showdown/run_battle.py\", line 156, in pokemon_battle\r\n\r\nbattle = await start_battle(ps_websocket_client, pokemon_battle_type)\r\n\r\nFile \"/showdown/showdown/run_battle.py\", line 147, in start_battle\r\n\r\nbattle = await start_standard_battle(ps_websocket_client, pokemon_battle_type)\r\n\r\nFile \"/showdown/showdown/run_battle.py\", line 137, in start_standard_battle\r\n\r\nawait handle_team_preview(battle, ps_websocket_client)\r\n\r\nFile \"/showdown/showdown/run_battle.py\", line 47, in handle_team_preview\r\n\r\nbest_move = await async_pick_move(battle_copy)\r\n\r\nFile \"/showdown/showdown/run_battle.py\", line 32, in async_pick_move\r\n\r\npool, battle_copy.find_best_move\r\n\r\nFile \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\n\r\nresult = self.fn(*self.args, **self.kwargs)\r\n\r\nFile \"/showdown/showdown/battle_bots/nash_equilibrium/main.py\", line 188, in find_best_move\r\n\r\nscores = get_payoff_matrix(mutator, user_options, opponent_options, prune=False)\r\n\r\nFile \"/showdown/showdown/engine/select_best_move.py\", line 115, in get_payoff_matrix\r\n\r\nsafest = pick_safest(get_payoff_matrix(mutator, next_turn_user_options, next_turn_opponent_options, depth=depth, prune=prune))\r\n\r\nFile \"/showdown/showdown/engine/select_best_move.py\", line 102, in get_payoff_matrix\r\n\r\nstate_instructions = get_all_state_instructions(mutator, user_move, opponent_move)\r\n\r\nFile \"/showdown/showdown/engine/find_state_instructions.py\", line 456, in get_all_state_instructions\r\n\r\ninstructions = get_state_instructions_from_move(mutator, opponent_move, user_move, constants.OPPONENT, constants.SELF, True, instructions)\r\n\r\nFile \"/showdown/showdown/engine/find_state_instructions.py\", line 379, in get_state_instructions_from_move\r\n\r\ntemp_instructions += instruction_generator.get_states_from_boosts(mutator, boosts_target, boosts, boosts_chance, instruction_set)\r\n\r\nFile \"/showdown/showdown/engine/instruction_generator.py\", line 756, in get_states_from_boosts\r\n\r\nnew_boost = pkmn_boost + v\r\n\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'","closed_by":{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pmariglia/showdown/issues/44/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pmariglia/showdown/issues/44/timeline","performed_via_github_app":null,"state_reason":"completed"}