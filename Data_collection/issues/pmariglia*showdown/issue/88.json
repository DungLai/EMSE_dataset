{"url":"https://api.github.com/repos/pmariglia/showdown/issues/88","repository_url":"https://api.github.com/repos/pmariglia/showdown","labels_url":"https://api.github.com/repos/pmariglia/showdown/issues/88/labels{/name}","comments_url":"https://api.github.com/repos/pmariglia/showdown/issues/88/comments","events_url":"https://api.github.com/repos/pmariglia/showdown/issues/88/events","html_url":"https://github.com/pmariglia/showdown/issues/88","id":1077866939,"node_id":"I_kwDOCpNhO85APvG7","number":88,"title":"Min/Max Stat Ranges","user":{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false},"labels":[{"id":1287447347,"node_id":"MDU6TGFiZWwxMjg3NDQ3MzQ3","url":"https://api.github.com/repos/pmariglia/showdown/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false},"assignees":[{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-12-12T17:48:44Z","updated_at":"2021-12-17T20:55:28Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"During a battle, certain information could reveal minimum / maximum stat values for the opponent's pokemon.\r\n\r\nFor example: if the enemy Pokemon moved before your Pokemon with an equal-priority move then the must have _at least_ the same speed as your active Pokemon. Care must be taken to account for things like speed-boosting abilities that _may_ be present, or speed-boosting weather.\r\n\r\nThis information is extremely valuable when inferring which set the opposing Pokemon may have. I have seen situations where information was provided that the opposing Pokemon was 100% faster than the bots Pokemon, but the spread the bot assumed was such that the opponents Pokemon was certainly slower. This resulted in the bot thinking it can stay in and KO the opponent when in reality it cannot.\r\n\r\nThe bot should be able to constantly update minimum/maximum stat values as the battle progresses, and then not assume sets that contradict these min/max stat ranges.\r\n\r\nAdding to the example provided, something similar can also be done for the other stats: HP, ATK, DEF, SPA, SPD. Speed is the easiest one however and should be done first as a proof-of-concept.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/pmariglia/showdown/issues/88/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pmariglia/showdown/issues/88/timeline","performed_via_github_app":null,"state_reason":null}