[{"url":"https://api.github.com/repos/pmariglia/showdown/issues/comments/569952288","html_url":"https://github.com/pmariglia/showdown/issues/26#issuecomment-569952288","issue_url":"https://api.github.com/repos/pmariglia/showdown/issues/26","id":569952288,"node_id":"MDEyOklzc3VlQ29tbWVudDU2OTk1MjI4OA==","user":{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false},"created_at":"2019-12-31T16:14:06Z","updated_at":"2019-12-31T16:14:06Z","author_association":"OWNER","body":"So you'll need to assemble the state such that each side has the active pokemon you want,.\r\n\r\nIt's really hacky, but this should get you the most damaging move for either side.\r\nNotice `calculate_damage` has been changed on the master branch from the version I see you were using. You may want to get the latest changes.\r\n```\r\nfrom showdown.engine import calculate_damage\r\ndef find_most_damage_move(state, side_string):\r\n    # `side_string` is either constants.SELF or constants.OPPONENT\r\n\r\n    my_options, opponent_options = state.get_all_options()\r\n    moves = []\r\n    switches = []\r\n    for option in my_options:\r\n        if option.startswith(constants.SWITCH_STRING + \" \"):\r\n            switches.append(option)\r\n        else:\r\n            moves.append(option)\r\n\r\n    most_damage = -1\r\n\r\n    for move in moves:\r\n        damage_amounts = calculate_damage(state, side_string, move, constants.DO_NOTHING_MOVE)\r\n        damage = damage_amounts[0] if damage_amounts else 0\r\n\r\n        if damage > most_damage:\r\n            most_damage = damage\r\n\r\n    return round(most_damage)\r\n```\r\n\r\n`side_string` should indicate which side you want to find the most damaging move for. You can use this function for both sides.\r\n\r\nTo repeat this for each matchup, you'll need to modify your other functions to change the active pokemon in the state each time `find_most_damage_move` is called.\r\n\r\nThis is REALLY hacky, but something like:\r\n```\r\nfrom copy import deepcopy\r\nimport constants\r\ndef how_many_each_sweeps(state, side, other_side):\r\n    how_many = dict()\r\n    for pkmn in ([side.active] + list(side.reserve.values())):\r\n        count = 0\r\n        if pkmn.hp == 0:\r\n            continue\r\n        for other_pkmn in ([other_side.active] + list(other_side.reserve.values())):\r\n            if other_pkmn.hp == 0:\r\n                continue\r\n            state_copy = deepcopy(state)\r\n            state_copy.self.active = pkmn\r\n            state_copy.opponent.active = other_pkmn\r\n\r\n            # use SELF to indicate we want to look at how much damage the active pokemon in state.self does\r\n            if find_most_damage_move(state_copy, constants.SELF) > (other_pkmn.hp / 2):\r\n                count += 1\r\n\r\n        how_many[pkmn.id] = count\r\n\r\n    return how_many\r\n\r\nmy_state = State(...)\r\nhow_many = how_many_each_sweeps(state, state.self, state.opponent)\r\n```\r\nand `how_many` will be a dictionary representing how many pokemon each pokemon sweeps.\r\n\r\nTo do this for the opponent, you can simply reverse the order of sending in `state.self` and `state.opponent`","reactions":{"url":"https://api.github.com/repos/pmariglia/showdown/issues/comments/569952288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/pmariglia/showdown/issues/comments/570797388","html_url":"https://github.com/pmariglia/showdown/issues/26#issuecomment-570797388","issue_url":"https://api.github.com/repos/pmariglia/showdown/issues/26","id":570797388,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MDc5NzM4OA==","user":{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false},"created_at":"2020-01-04T16:09:38Z","updated_at":"2020-01-04T16:09:51Z","author_association":"OWNER","body":"closing this as we have discussed this privately","reactions":{"url":"https://api.github.com/repos/pmariglia/showdown/issues/comments/570797388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false}},{"id":2921918501,"node_id":"MDExOkNsb3NlZEV2ZW50MjkyMTkxODUwMQ==","url":"https://api.github.com/repos/pmariglia/showdown/issues/events/2921918501","actor":{"login":"pmariglia","id":25304649,"node_id":"MDQ6VXNlcjI1MzA0NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/25304649?v=4","gravatar_id":"","url":"https://api.github.com/users/pmariglia","html_url":"https://github.com/pmariglia","followers_url":"https://api.github.com/users/pmariglia/followers","following_url":"https://api.github.com/users/pmariglia/following{/other_user}","gists_url":"https://api.github.com/users/pmariglia/gists{/gist_id}","starred_url":"https://api.github.com/users/pmariglia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pmariglia/subscriptions","organizations_url":"https://api.github.com/users/pmariglia/orgs","repos_url":"https://api.github.com/users/pmariglia/repos","events_url":"https://api.github.com/users/pmariglia/events{/privacy}","received_events_url":"https://api.github.com/users/pmariglia/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-01-04T16:09:38Z","state_reason":null,"performed_via_github_app":null}]