{"url":"https://api.github.com/repos/trent-b/iterative-stratification/issues/6","repository_url":"https://api.github.com/repos/trent-b/iterative-stratification","labels_url":"https://api.github.com/repos/trent-b/iterative-stratification/issues/6/labels{/name}","comments_url":"https://api.github.com/repos/trent-b/iterative-stratification/issues/6/comments","events_url":"https://api.github.com/repos/trent-b/iterative-stratification/issues/6/events","html_url":"https://github.com/trent-b/iterative-stratification/issues/6","id":423803287,"node_id":"MDU6SXNzdWU0MjM4MDMyODc=","number":6,"title":"Balanced sample with low number of one of the classes","user":{"login":"miguelwon","id":7373193,"node_id":"MDQ6VXNlcjczNzMxOTM=","avatar_url":"https://avatars.githubusercontent.com/u/7373193?v=4","gravatar_id":"","url":"https://api.github.com/users/miguelwon","html_url":"https://github.com/miguelwon","followers_url":"https://api.github.com/users/miguelwon/followers","following_url":"https://api.github.com/users/miguelwon/following{/other_user}","gists_url":"https://api.github.com/users/miguelwon/gists{/gist_id}","starred_url":"https://api.github.com/users/miguelwon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguelwon/subscriptions","organizations_url":"https://api.github.com/users/miguelwon/orgs","repos_url":"https://api.github.com/users/miguelwon/repos","events_url":"https://api.github.com/users/miguelwon/events{/privacy}","received_events_url":"https://api.github.com/users/miguelwon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-03-21T15:49:15Z","updated_at":"2019-03-25T20:51:10Z","closed_at":"2019-03-25T20:51:10Z","author_association":"NONE","active_lock_reason":null,"body":"I'm working with an extreme large multilabel problem and there are some rare classes. I was trying to use your package to balance by train/test split and notice that it does not guarantee at least one class in each set. The following example shows to the problem:\r\n\r\n\r\n```\r\n>>> import numpy as np\r\n>>> from iterstrat.ml_stratifiers import MultilabelStratifiedShuffleSplit\r\n>>> X = np.arange(10)\r\n>>> \r\n>>> \r\n>>> \r\n>>> import numpy as np\r\n>>> from iterstrat.ml_stratifiers import MultilabelStratifiedShuffleSplit\r\n>>> \r\n>>> \r\n>>> X = np.arange(10)\r\n>>> X\r\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\r\n>>> \r\n>>> y = np.array([[1,1,0],[0,1,0],[1,0,0],[1,0,0],[0,1,0],[0,1,0],[0,1,0],[1,1,0],[0,1,1],[1,0,1]])\r\n>>> y\r\narray([[1, 1, 0],\r\n       [0, 1, 0],\r\n       [1, 0, 0],\r\n       [1, 0, 0],\r\n       [0, 1, 0],\r\n       [0, 1, 0],\r\n       [0, 1, 0],\r\n       [1, 1, 0],\r\n       [0, 1, 1],\r\n       [1, 0, 1]])\r\n>>> \r\n>>> temp = MultilabelStratifiedShuffleSplit(n_splits = 1,test_size =.2,random_state = 0)\r\n>>> train, test  = list(temp.split(X, y))[0]\r\n>>> \r\n>>> train\r\narray([1, 2, 3, 4, 5, 6, 7, 8, 9])\r\n>>> \r\n>>> \r\n>>> test\r\narray([0])\r\n```\r\n\r\nThe train set contains both samples 8 and 9, which are the only ones that have the class with index 2. \r\nHow can I make sure that all splits have at least one sample per class?\r\n\r\n","closed_by":{"login":"trent-b","id":34728837,"node_id":"MDQ6VXNlcjM0NzI4ODM3","avatar_url":"https://avatars.githubusercontent.com/u/34728837?v=4","gravatar_id":"","url":"https://api.github.com/users/trent-b","html_url":"https://github.com/trent-b","followers_url":"https://api.github.com/users/trent-b/followers","following_url":"https://api.github.com/users/trent-b/following{/other_user}","gists_url":"https://api.github.com/users/trent-b/gists{/gist_id}","starred_url":"https://api.github.com/users/trent-b/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trent-b/subscriptions","organizations_url":"https://api.github.com/users/trent-b/orgs","repos_url":"https://api.github.com/users/trent-b/repos","events_url":"https://api.github.com/users/trent-b/events{/privacy}","received_events_url":"https://api.github.com/users/trent-b/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/trent-b/iterative-stratification/issues/6/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/trent-b/iterative-stratification/issues/6/timeline","performed_via_github_app":null,"state_reason":"completed"}