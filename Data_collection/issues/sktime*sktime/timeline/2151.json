[{"id":6156391151,"node_id":"LE_lADOCVKAsc5EzjbVzwAAAAFu8xLv","url":"https://api.github.com/repos/sktime/sktime/issues/events/6156391151","actor":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-02-28T17:31:52Z","label":{"name":"enhancement","color":"fef2c0"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054602381","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1054602381","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1054602381,"node_id":"IC_kwDOCVKAsc4-2_SN","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2022-02-28T19:46:39Z","updated_at":"2022-02-28T19:46:39Z","author_association":"COLLABORATOR","body":"I was thinking about sth like this longer time ago, but actually can we not just do grid search with the `Differencer` instead of a test? The search should find automatically the best performing params (which should be the ones that make the series stationary?)","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054602381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}},{"id":6157112321,"node_id":"LE_lADOCVKAsc5EzjbVzwAAAAFu_hQB","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157112321","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-02-28T19:46:57Z","label":{"name":"module:transformations","color":"0865AF"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054621322","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1054621322","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1054621322,"node_id":"IC_kwDOCVKAsc4-3D6K","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"created_at":"2022-02-28T20:11:29Z","updated_at":"2022-02-28T20:11:29Z","author_association":"CONTRIBUTOR","body":"@aiwalter VAR model needs the inputs to be stationary. So just finding the best parameter is not the goal. I would like to make the inputs stationary before feeding to the VAR model. Just doing a grid search may still result in the data being non-stationary which will violate the assumptions of VAR.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054621322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false}},{"id":6157250259,"node_id":"MEE_lADOCVKAsc5EzjbVzwAAAAFvAC7T","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157250259","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-02-28T20:11:29Z","performed_via_github_app":null},{"id":6157250263,"node_id":"SE_lADOCVKAsc5EzjbVzwAAAAFvAC7X","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157250263","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-02-28T20:11:29Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054636335","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1054636335","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1054636335,"node_id":"IC_kwDOCVKAsc4-3Hkv","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2022-02-28T20:30:34Z","updated_at":"2022-02-28T20:30:34Z","author_association":"COLLABORATOR","body":"I would assume that cross-validation will always find the stationarity solution, however I can not proof this hypothesis. The issue is more when people dont use cross-validation, then we need a test for stationarity.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054636335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054668752","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1054668752","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1054668752,"node_id":"IC_kwDOCVKAsc4-3PfQ","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"created_at":"2022-02-28T21:15:02Z","updated_at":"2022-02-28T21:15:02Z","author_association":"CONTRIBUTOR","body":"I see a couple of potential issues here:\r\n\r\n1. I think it might be a stretch to make that assumption (it could just happen by chance that a non-stationary series gives the best CV results).\r\n2. Also, the other disadvantage is that model building with potentially non-stationary series values in the grid search is costly in terms of compute time.\r\n\r\nHence, I feel it would add value to do this using a transformer prior to model building and grid search. Would it be possible to add such a transformer?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054668752/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054681388","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1054681388","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1054681388,"node_id":"IC_kwDOCVKAsc4-3Sks","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-02-28T21:29:33Z","updated_at":"2022-02-28T21:29:42Z","author_association":"COLLABORATOR","body":"@aiwalter, I think grid search is unrelated to guaranteeing stationarity?\r\nStationarity or similar conditions are typically assumptions that estimates obtained from resampling (incl grid search) are applicable to the temporal future. But applying grid search does not *guarantee* stationarity as far as I see.\r\n\r\nI agree with @ngupta23 that \"making stationary\" transformers would be useful to have!\r\n\r\nMight be worth working on the testing module that @RNKuhns has started a while ago, before he left.\r\nUnfortunately, no one has picked that up...","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1054681388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"id":6157640732,"node_id":"MEE_lADOCVKAsc5EzjbVzwAAAAFvBiQc","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157640732","actor":{"login":"RNKuhns","id":26907244,"node_id":"MDQ6VXNlcjI2OTA3MjQ0","avatar_url":"https://avatars.githubusercontent.com/u/26907244?v=4","gravatar_id":"","url":"https://api.github.com/users/RNKuhns","html_url":"https://github.com/RNKuhns","followers_url":"https://api.github.com/users/RNKuhns/followers","following_url":"https://api.github.com/users/RNKuhns/following{/other_user}","gists_url":"https://api.github.com/users/RNKuhns/gists{/gist_id}","starred_url":"https://api.github.com/users/RNKuhns/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RNKuhns/subscriptions","organizations_url":"https://api.github.com/users/RNKuhns/orgs","repos_url":"https://api.github.com/users/RNKuhns/repos","events_url":"https://api.github.com/users/RNKuhns/events{/privacy}","received_events_url":"https://api.github.com/users/RNKuhns/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-02-28T21:29:34Z","performed_via_github_app":null},{"id":6157640735,"node_id":"SE_lADOCVKAsc5EzjbVzwAAAAFvBiQf","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157640735","actor":{"login":"RNKuhns","id":26907244,"node_id":"MDQ6VXNlcjI2OTA3MjQ0","avatar_url":"https://avatars.githubusercontent.com/u/26907244?v=4","gravatar_id":"","url":"https://api.github.com/users/RNKuhns","html_url":"https://github.com/RNKuhns","followers_url":"https://api.github.com/users/RNKuhns/followers","following_url":"https://api.github.com/users/RNKuhns/following{/other_user}","gists_url":"https://api.github.com/users/RNKuhns/gists{/gist_id}","starred_url":"https://api.github.com/users/RNKuhns/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RNKuhns/subscriptions","organizations_url":"https://api.github.com/users/RNKuhns/orgs","repos_url":"https://api.github.com/users/RNKuhns/repos","events_url":"https://api.github.com/users/RNKuhns/events{/privacy}","received_events_url":"https://api.github.com/users/RNKuhns/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-02-28T21:29:34Z","performed_via_github_app":null},{"id":6157640742,"node_id":"MEE_lADOCVKAsc5EzjbVzwAAAAFvBiQm","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157640742","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-02-28T21:29:34Z","performed_via_github_app":null},{"id":6157640748,"node_id":"SE_lADOCVKAsc5EzjbVzwAAAAFvBiQs","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157640748","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-02-28T21:29:34Z","performed_via_github_app":null},{"id":6157640752,"node_id":"MEE_lADOCVKAsc5EzjbVzwAAAAFvBiQw","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157640752","actor":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-02-28T21:29:34Z","performed_via_github_app":null},{"id":6157640757,"node_id":"SE_lADOCVKAsc5EzjbVzwAAAAFvBiQ1","url":"https://api.github.com/repos/sktime/sktime/issues/events/6157640757","actor":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-02-28T21:29:34Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1055177365","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1055177365","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1055177365,"node_id":"IC_kwDOCVKAsc4-5LqV","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2022-03-01T08:59:17Z","updated_at":"2022-03-01T08:59:17Z","author_association":"COLLABORATOR","body":"@fkiraly yes ist not directly related, but related with model error in my opinion. I would assume that empirically, models that required stationary input data will perform better if the data is stationary than if its not stationary (otherwise that stationarity assumption/requirement would not make sense, right?). So, that is why in practice you might just do a grid search as an heuristic to find the stationary data (by tuning `Differencer` in combination with a forecaster).","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1055177365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}},{"id":6160355786,"node_id":"MEE_lADOCVKAsc5EzjbVzwAAAAFvL5HK","url":"https://api.github.com/repos/sktime/sktime/issues/events/6160355786","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-03-01T08:59:17Z","performed_via_github_app":null},{"id":6160355792,"node_id":"SE_lADOCVKAsc5EzjbVzwAAAAFvL5HQ","url":"https://api.github.com/repos/sktime/sktime/issues/events/6160355792","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-03-01T08:59:17Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1057426566","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1057426566","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1057426566,"node_id":"IC_kwDOCVKAsc4_BwyG","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-03-02T21:50:10Z","updated_at":"2022-03-02T21:50:43Z","author_association":"COLLABORATOR","body":"> I would assume that empirically, models that required stationary input data will perform better if the data is stationary than if its not stationary\r\n\r\nI think this is a common misconception? Afaik there is no logically implied direction here.\r\n\r\nConsider moving average, on the following three generating scenarios:\r\n(a) i.i.d. Gaussian noise with variance one - this is stationary\r\n(b) i.i.d. Gaussian noise with variance one, up until time T, and then with variance 0.1 - this is non-stationary\r\n(c) i.i.d. Gaussian noise with variance one, up until time T, and then with variance 10 - this is non-stationary\r\n\r\nThe MA model will be better on (b) than on scenario (a), and better on (a) than on (c), long-term.\r\n(hence, grid search would not make the data stationary!)","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1057426566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1074285298","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1074285298","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1074285298,"node_id":"IC_kwDOCVKAsc5ACEry","user":{"login":"RNKuhns","id":26907244,"node_id":"MDQ6VXNlcjI2OTA3MjQ0","avatar_url":"https://avatars.githubusercontent.com/u/26907244?v=4","gravatar_id":"","url":"https://api.github.com/users/RNKuhns","html_url":"https://github.com/RNKuhns","followers_url":"https://api.github.com/users/RNKuhns/followers","following_url":"https://api.github.com/users/RNKuhns/following{/other_user}","gists_url":"https://api.github.com/users/RNKuhns/gists{/gist_id}","starred_url":"https://api.github.com/users/RNKuhns/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RNKuhns/subscriptions","organizations_url":"https://api.github.com/users/RNKuhns/orgs","repos_url":"https://api.github.com/users/RNKuhns/repos","events_url":"https://api.github.com/users/RNKuhns/events{/privacy}","received_events_url":"https://api.github.com/users/RNKuhns/received_events","type":"User","site_admin":false},"created_at":"2022-03-21T18:49:45Z","updated_at":"2022-03-21T18:52:19Z","author_association":"COLLABORATOR","body":"My two sense on this is that I think @ngupta23's proposal of a conditional differencer seems to make sense.  Having an automatic way to make sure data is stationary is important, because a variety of models make use of the nice properties associated with stationary data (their statistical underpinnings rely on this to overcome the fact that the usual regression assumptions of independence are violated). I had hoped to implement this after the statistical testing module was up and running. But keep in mind that there can be a variety of causes of non-stationarity and differencing is not always the best answer for correcting it. For example, a series of gaussian noise around a deterministic linear time trend may be best made stationary by a simple linear detrender, even if differencing could be used.\r\n\r\nIts also probably important to keep in mind that stationarity or non-stationarity also is directly related to the general idea machine learning assumption that your training data should be representative of the unseen data you are going to be predicting in production. If you observe some non-stationary data and build a model from it, then the unseen data may actually be from a different distribution (e.g. the variance could be time-varying, but also the mean could be changing over time in arbitrary ways). In particular, models designed to predict the mean based on the previously seen distribution may not do well, if the mean changes in future time periods that are being predicted (this is just the timeseries version of building a model on a set of cross-sectional observations and then it not necessarily being appropriate to use it to make predictions on new observations well outside the original training data). Making the data stationary helps alleviate this. Assuming the data generating process doesn't change, you are assuming that the transformation you learned from the training data will help make future data stationary from the same distribution you saw in training, meaning that your conditional mean predictions from the model built on observed data should perform reasonably. ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1074285298/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"RNKuhns","id":26907244,"node_id":"MDQ6VXNlcjI2OTA3MjQ0","avatar_url":"https://avatars.githubusercontent.com/u/26907244?v=4","gravatar_id":"","url":"https://api.github.com/users/RNKuhns","html_url":"https://github.com/RNKuhns","followers_url":"https://api.github.com/users/RNKuhns/followers","following_url":"https://api.github.com/users/RNKuhns/following{/other_user}","gists_url":"https://api.github.com/users/RNKuhns/gists{/gist_id}","starred_url":"https://api.github.com/users/RNKuhns/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RNKuhns/subscriptions","organizations_url":"https://api.github.com/users/RNKuhns/orgs","repos_url":"https://api.github.com/users/RNKuhns/repos","events_url":"https://api.github.com/users/RNKuhns/events{/privacy}","received_events_url":"https://api.github.com/users/RNKuhns/received_events","type":"User","site_admin":false}},{"id":6278067259,"node_id":"MEE_lADOCVKAsc5EzjbVzwAAAAF2M7Q7","url":"https://api.github.com/repos/sktime/sktime/issues/events/6278067259","actor":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-03-21T18:49:45Z","performed_via_github_app":null},{"id":6278067264,"node_id":"SE_lADOCVKAsc5EzjbVzwAAAAF2M7RA","url":"https://api.github.com/repos/sktime/sktime/issues/events/6278067264","actor":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-03-21T18:49:45Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279889068","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1279889068","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1279889068,"node_id":"IC_kwDOCVKAsc5MSY6s","user":{"login":"topher-lo","id":46541035,"node_id":"MDQ6VXNlcjQ2NTQxMDM1","avatar_url":"https://avatars.githubusercontent.com/u/46541035?v=4","gravatar_id":"","url":"https://api.github.com/users/topher-lo","html_url":"https://github.com/topher-lo","followers_url":"https://api.github.com/users/topher-lo/followers","following_url":"https://api.github.com/users/topher-lo/following{/other_user}","gists_url":"https://api.github.com/users/topher-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/topher-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topher-lo/subscriptions","organizations_url":"https://api.github.com/users/topher-lo/orgs","repos_url":"https://api.github.com/users/topher-lo/repos","events_url":"https://api.github.com/users/topher-lo/events{/privacy}","received_events_url":"https://api.github.com/users/topher-lo/received_events","type":"User","site_admin":false},"created_at":"2022-10-16T04:30:00Z","updated_at":"2022-10-16T04:30:00Z","author_association":"CONTRIBUTOR","body":"```python\r\nimport math\r\nfrom dataclasses import dataclass\r\nfrom typing import Callable, List, Optional, Tuple, Union\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom scipy.special import inv_boxcox as _inv_boxcox\r\nfrom scipy.stats import boxcox\r\nfrom statsmodels.tsa.statespace.tools import diff\r\nfrom statsmodels.tsa.stattools import acf, adfuller, kpss, pacf\r\nfrom statsmodels.tsa.tsatools import detrend\r\nfrom tqdm import tqdm\r\n\r\nfrom ._offset import offset_to_sp\r\n\r\n@dataclass\r\nclass UnitRootTestResults:\r\n    is_stationary: bool\r\n    stationary_type: Union[None, str]\r\n    adf_pval: float\r\n    kpss_pval: float\r\n\r\n\r\nclass UnitRootTest:\r\n    def __init__(self, siglevel: Optional[float] = None):\r\n        self.siglevel = siglevel or 0.05\r\n        self._adf_results = None\r\n        self._kpss_results = None\r\n\r\n    def fit(self, y: pd.Series):\r\n        self._adf_results = adfuller(y, regression=\"n\")\r\n        self._kpss_results = kpss(y, regression=\"ct\")\r\n        return self\r\n\r\n    def predict(self) -> UnitRootTestResults:\r\n        adf_pval = self._adf_results[1]\r\n        kpss_pval = self._kpss_results[1]\r\n        siglevel = self.siglevel\r\n        reject_adf_null = adf_pval < siglevel\r\n        reject_kpss_null = (\r\n            kpss_pval == 0.01\r\n        )  # kpss test returns p-value within interval [0.01, 0.1]\r\n        if not reject_adf_null and reject_kpss_null:\r\n            # ADF: Under null, cannot reject null that series has unit root (non-stationary)\r\n            # KPSS: Under null, reject null that series is trend stationary (non-stationary)\r\n            return UnitRootTestResults(False, None, adf_pval, kpss_pval)\r\n        elif reject_adf_null and not reject_kpss_null:\r\n            # ADF: Under null, reject null that series has unit root (stationary)\r\n            # KPSS: Under null, cannot reject null that series is trend stationary (stationary)\r\n            return UnitRootTestResults(True, None, adf_pval, kpss_pval)\r\n        elif reject_adf_null and reject_kpss_null:\r\n            # ADF: Under null, reject null that series has unit root (stationary)\r\n            # KPSS: Under null, reject null that series is trend stationary (non-stationary)\r\n            return UnitRootTestResults(False, \"trend\", adf_pval, kpss_pval)\r\n        else:\r\n            # ADF: Under null, cannot reject null that series has unit root (non-stationary)\r\n            # KPSS: Under null, cannot reject null that series is trend stationary (stationary)\r\n            return UnitRootTestResults(False, \"difference\", adf_pval, kpss_pval)\r\n\r\n\r\ndef inv_boxcox(\r\n    y, lmbda, bias_adjusted: bool = False, y_pred: Optional[Callable] = None\r\n):\r\n    if bias_adjusted:\r\n        var = np.sum((y - y_pred) ** 2)\r\n        std = np.sqrt(var / (len(y) - 1))\r\n        if lmbda == 0:\r\n            x = np.exp(y) * (1 + 0.5 * std**2)\r\n        else:\r\n            x = np.power(lmbda * y + 1, 1 / lmbda) * (\r\n                1 + 0.5 * std**2 * (1 - lmbda) / (lmbda * y + 1) ** 2\r\n            )\r\n    else:\r\n        x = _inv_boxcox(y, lmbda)\r\n    return x\r\n\r\n\r\nSTATIONARITY_TRANSFORMERS = lambda sp: {\r\n    \"detrend_mean\": lambda y: detrend(y, order=0),\r\n    \"detrend_linear\": lambda y: detrend(y, order=1),\r\n    \"detrend_quadratic\": lambda y: detrend(y, order=2),\r\n    \"detrend_polynomial\": lambda y: detrend(y, order=3),\r\n    \"deseasonalize\": lambda y: diff(y, seasonal_periods=sp),\r\n    \"first_difference\": lambda y: diff(y, k_diff=1),\r\n    \"double_difference\": lambda y: diff(y, k_diff=2),\r\n    \"boxcox\": lambda y: boxcox(\r\n        y, alpha=0.05\r\n    ),  # Returns transformed array and optimized lambda\r\n}\r\n\r\n\r\nSTATIONARITY_TRANSFORMS = lambda sp: {\r\n    \"no_change\": lambda y: y,\r\n    **STATIONARITY_TRANSFORMERS(sp),\r\n    **{\r\n        f\"deseasonalize:{method}\": [\r\n            STATIONARITY_TRANSFORMERS(sp)[\"deseasonalize\"],\r\n            STATIONARITY_TRANSFORMERS(sp)[method],\r\n        ]\r\n        for method in [\r\n            \"detrend_mean\",\r\n            \"detrend_linear\",\r\n            \"detrend_quadratic\",\r\n            \"detrend_polynomial\",\r\n            \"first_difference\",\r\n            \"double_difference\",\r\n        ]\r\n    },\r\n    **{\r\n        f\"boxcox:{method}\": [\r\n            STATIONARITY_TRANSFORMERS(sp)[\"boxcox\"],\r\n            STATIONARITY_TRANSFORMERS(sp)[method],\r\n        ]\r\n        for method in [\r\n            \"detrend_mean\",\r\n            \"detrend_linear\",\r\n            \"detrend_quadratic\",\r\n            \"detrend_polynomial\",\r\n            \"deseasonalize\",\r\n            \"first_difference\",\r\n            \"double_difference\",\r\n        ]\r\n    },\r\n    **{\r\n        f\"boxcox:deseasonalize:{method}\": [\r\n            STATIONARITY_TRANSFORMERS(sp)[\"boxcox\"],\r\n            STATIONARITY_TRANSFORMERS(sp)[\"deseasonalize\"],\r\n            STATIONARITY_TRANSFORMERS(sp)[method],\r\n        ]\r\n        for method in [\"first_difference\", \"double_difference\"]\r\n    },\r\n}\r\n\r\n\r\ndef run_stationarity_tests(y: pd.Series) -> pd.DataFrame:\r\n    \"\"\"Returns DataFrame indexed by names of stationary transform strategies with columns:\r\n    - is_stationary: bool\r\n    - stationary_type: str | None\r\n    - adf_pval: float\r\n    - kpss_pval: float\r\n    - boxcox_lmbda: float\r\n    - acf: array of floats\r\n    - pacf: array of floats\r\n    - acf_confint: array of array of floats\r\n    - pacf_confint: array of array of floats\r\n    \"\"\"\r\n\r\n    sp = offset_to_sp(y.index.freq, len(y))\r\n    stationarity_transforms = STATIONARITY_TRANSFORMS(sp)\r\n    adjusted_siglevel = 0.05 / len(\r\n        stationarity_transforms\r\n    )  # Multiple-comparison correction\r\n\r\n    # If y contains any value <= 0, then shift to all values upwards by min(y) + 1\r\n    # Required because box-cox transformation requires all positive values\r\n    if not (y > 0).all():\r\n        y = y + abs(min(y)) + 1\r\n\r\n    def _test_strategy(strategy: str):\r\n        funcs = stationarity_transforms[strategy]\r\n        boxcox_lmbda = None\r\n        if not isinstance(funcs, List):\r\n            funcs = [funcs]\r\n        for i, func in enumerate(funcs):\r\n            if i == 0:\r\n                y_internal = func(y)\r\n            else:\r\n                y_internal = func(y_internal)\r\n            if isinstance(y_internal, Tuple):\r\n                boxcox_lmbda = y_internal[1]\r\n                y_internal = y_internal[0]\r\n        test_res = UnitRootTest(siglevel=adjusted_siglevel).fit(y_internal).predict()\r\n        nlags = min(24, (len(y_internal) // 2) - 1)\r\n        acf_val, acf_confint = acf(\r\n            x=y_internal, nlags=nlags, alpha=0.05, adjusted=True\r\n        )  # Ignore conf int\r\n        pacf_val, pacf_confint = pacf(\r\n            x=y_internal, nlags=nlags, alpha=0.05, method=\"ols-adjusted\"\r\n        )\r\n        return test_res, boxcox_lmbda, acf_val, acf_confint, pacf_val, pacf_confint\r\n\r\n    strategies = stationarity_transforms.keys()\r\n    test_results = []\r\n    boxcox_lmbdas = []\r\n    acf_values = []\r\n    acf_confints = []\r\n    pacf_values = []\r\n    pacf_confints = []\r\n\r\n    strategies_success = []\r\n    for strategy in tqdm(strategies):\r\n        (\r\n            test_res,\r\n            boxcox_lmbda,\r\n            acf_val,\r\n            acf_confint,\r\n            pacf_val,\r\n            pacf_confint,\r\n        ) = _test_strategy(strategy)\r\n        if test_res is not None:\r\n            strategies_success.append(strategy)\r\n            test_results.append(test_res)\r\n            boxcox_lmbdas.append(boxcox_lmbda)\r\n            acf_values.append(acf_val)\r\n            acf_confints.append(acf_confint)\r\n            pacf_values.append(pacf_val)\r\n            pacf_confints.append(pacf_confint)\r\n\r\n    if len(test_results) == 0:\r\n        raise ValueError(\"All tests failed\")\r\n\r\n    result = (\r\n        pd.DataFrame(\r\n            test_results, index=pd.Index(strategies_success, name=\"strategy\")\r\n        ).assign(\r\n            boxcox_lmbda=boxcox_lmbdas,\r\n            acf=acf_values,\r\n            pacf=pacf_values,\r\n            acf_confint=acf_confints,\r\n            pacf_confint=pacf_confints,\r\n        )\r\n        # Sort by lowest adf pvalue\r\n        .sort_values(\"adf_pval\")\r\n    )\r\n\r\n    return result\r\n```","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279889068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"topher-lo","id":46541035,"node_id":"MDQ6VXNlcjQ2NTQxMDM1","avatar_url":"https://avatars.githubusercontent.com/u/46541035?v=4","gravatar_id":"","url":"https://api.github.com/users/topher-lo","html_url":"https://github.com/topher-lo","followers_url":"https://api.github.com/users/topher-lo/followers","following_url":"https://api.github.com/users/topher-lo/following{/other_user}","gists_url":"https://api.github.com/users/topher-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/topher-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topher-lo/subscriptions","organizations_url":"https://api.github.com/users/topher-lo/orgs","repos_url":"https://api.github.com/users/topher-lo/repos","events_url":"https://api.github.com/users/topher-lo/events{/privacy}","received_events_url":"https://api.github.com/users/topher-lo/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279889205","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1279889205","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1279889205,"node_id":"IC_kwDOCVKAsc5MSY81","user":{"login":"topher-lo","id":46541035,"node_id":"MDQ6VXNlcjQ2NTQxMDM1","avatar_url":"https://avatars.githubusercontent.com/u/46541035?v=4","gravatar_id":"","url":"https://api.github.com/users/topher-lo","html_url":"https://github.com/topher-lo","followers_url":"https://api.github.com/users/topher-lo/followers","following_url":"https://api.github.com/users/topher-lo/following{/other_user}","gists_url":"https://api.github.com/users/topher-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/topher-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topher-lo/subscriptions","organizations_url":"https://api.github.com/users/topher-lo/orgs","repos_url":"https://api.github.com/users/topher-lo/repos","events_url":"https://api.github.com/users/topher-lo/events{/privacy}","received_events_url":"https://api.github.com/users/topher-lo/received_events","type":"User","site_admin":false},"created_at":"2022-10-16T04:30:57Z","updated_at":"2022-10-16T04:30:57Z","author_association":"CONTRIBUTOR","body":"<img width=\"596\" alt=\"Screenshot 2022-10-16 122608\" src=\"https://user-images.githubusercontent.com/46541035/196018134-396afe20-e153-46e0-b04e-6b1d1aec5ca7.png\">\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279889205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"topher-lo","id":46541035,"node_id":"MDQ6VXNlcjQ2NTQxMDM1","avatar_url":"https://avatars.githubusercontent.com/u/46541035?v=4","gravatar_id":"","url":"https://api.github.com/users/topher-lo","html_url":"https://github.com/topher-lo","followers_url":"https://api.github.com/users/topher-lo/followers","following_url":"https://api.github.com/users/topher-lo/following{/other_user}","gists_url":"https://api.github.com/users/topher-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/topher-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topher-lo/subscriptions","organizations_url":"https://api.github.com/users/topher-lo/orgs","repos_url":"https://api.github.com/users/topher-lo/repos","events_url":"https://api.github.com/users/topher-lo/events{/privacy}","received_events_url":"https://api.github.com/users/topher-lo/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279889330","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1279889330","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1279889330,"node_id":"IC_kwDOCVKAsc5MSY-y","user":{"login":"topher-lo","id":46541035,"node_id":"MDQ6VXNlcjQ2NTQxMDM1","avatar_url":"https://avatars.githubusercontent.com/u/46541035?v=4","gravatar_id":"","url":"https://api.github.com/users/topher-lo","html_url":"https://github.com/topher-lo","followers_url":"https://api.github.com/users/topher-lo/followers","following_url":"https://api.github.com/users/topher-lo/following{/other_user}","gists_url":"https://api.github.com/users/topher-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/topher-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topher-lo/subscriptions","organizations_url":"https://api.github.com/users/topher-lo/orgs","repos_url":"https://api.github.com/users/topher-lo/repos","events_url":"https://api.github.com/users/topher-lo/events{/privacy}","received_events_url":"https://api.github.com/users/topher-lo/received_events","type":"User","site_admin":false},"created_at":"2022-10-16T04:31:57Z","updated_at":"2022-10-16T04:32:21Z","author_association":"CONTRIBUTOR","body":"I posted code above that can be turned into an sktime Transformer. Don't have bandwidth to work on this. But somebody can just use the code posted above and I can help provide comments / review.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279889330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"topher-lo","id":46541035,"node_id":"MDQ6VXNlcjQ2NTQxMDM1","avatar_url":"https://avatars.githubusercontent.com/u/46541035?v=4","gravatar_id":"","url":"https://api.github.com/users/topher-lo","html_url":"https://github.com/topher-lo","followers_url":"https://api.github.com/users/topher-lo/followers","following_url":"https://api.github.com/users/topher-lo/following{/other_user}","gists_url":"https://api.github.com/users/topher-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/topher-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topher-lo/subscriptions","organizations_url":"https://api.github.com/users/topher-lo/orgs","repos_url":"https://api.github.com/users/topher-lo/repos","events_url":"https://api.github.com/users/topher-lo/events{/privacy}","received_events_url":"https://api.github.com/users/topher-lo/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279893563","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1279893563","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1279893563,"node_id":"IC_kwDOCVKAsc5MSaA7","user":{"login":"topher-lo","id":46541035,"node_id":"MDQ6VXNlcjQ2NTQxMDM1","avatar_url":"https://avatars.githubusercontent.com/u/46541035?v=4","gravatar_id":"","url":"https://api.github.com/users/topher-lo","html_url":"https://github.com/topher-lo","followers_url":"https://api.github.com/users/topher-lo/followers","following_url":"https://api.github.com/users/topher-lo/following{/other_user}","gists_url":"https://api.github.com/users/topher-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/topher-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topher-lo/subscriptions","organizations_url":"https://api.github.com/users/topher-lo/orgs","repos_url":"https://api.github.com/users/topher-lo/repos","events_url":"https://api.github.com/users/topher-lo/events{/privacy}","received_events_url":"https://api.github.com/users/topher-lo/received_events","type":"User","site_admin":false},"created_at":"2022-10-16T05:08:08Z","updated_at":"2022-10-16T05:08:41Z","author_association":"CONTRIBUTOR","body":"@fkiraly I think the code I posted above might be appropriate for your experimental `param_est` module. On a periphery note, have you considered that `param_est` feels a bit like feature creep? I would argue that running stationarity tests and identifying the seasonal periods (outside of any automated forecaster e.g. AutoSARIMA) feels like an EDA task. In which case, I think a functional design that returns a DataFrame of statistics (similar to `evaluate`) will be a lot more user friendly (similar to what `pycaret` does with time series summary statistics). At the same time, using a functional design for parameter estimation also makes it easy to use internally within different implementations that need them (e.g. the `StationarityTransformer` currently being discussed)?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279893563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"topher-lo","id":46541035,"node_id":"MDQ6VXNlcjQ2NTQxMDM1","avatar_url":"https://avatars.githubusercontent.com/u/46541035?v=4","gravatar_id":"","url":"https://api.github.com/users/topher-lo","html_url":"https://github.com/topher-lo","followers_url":"https://api.github.com/users/topher-lo/followers","following_url":"https://api.github.com/users/topher-lo/following{/other_user}","gists_url":"https://api.github.com/users/topher-lo/gists{/gist_id}","starred_url":"https://api.github.com/users/topher-lo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/topher-lo/subscriptions","organizations_url":"https://api.github.com/users/topher-lo/orgs","repos_url":"https://api.github.com/users/topher-lo/repos","events_url":"https://api.github.com/users/topher-lo/events{/privacy}","received_events_url":"https://api.github.com/users/topher-lo/received_events","type":"User","site_admin":false}},{"id":7595873276,"node_id":"MEE_lADOCVKAsc5EzjbVzwAAAAHEv9P8","url":"https://api.github.com/repos/sktime/sktime/issues/events/7595873276","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-10-16T05:08:08Z","performed_via_github_app":null},{"id":7595873277,"node_id":"SE_lADOCVKAsc5EzjbVzwAAAAHEv9P9","url":"https://api.github.com/repos/sktime/sktime/issues/events/7595873277","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-10-16T05:08:08Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279956409","html_url":"https://github.com/sktime/sktime/issues/2151#issuecomment-1279956409","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2151","id":1279956409,"node_id":"IC_kwDOCVKAsc5MSpW5","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-10-16T12:07:24Z","updated_at":"2022-10-16T12:07:24Z","author_association":"COLLABORATOR","body":"Yes, I was reading this and thinking about, let's put this in `param_est`.\r\n\r\nI don't consider it feature creep, since:\r\n\r\n* can be used standalone in EDA, under unified interface\r\n* it is a common feature to \"plug in estimated parameters\"\r\n* @ngupta23 alone has requested different instances of this at least 3 times if I am counting correctly, and this is meant to be the architectural foundation to address this in a [rincipled, common interface","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1279956409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"id":7596291093,"node_id":"MEE_lADOCVKAsc5EzjbVzwAAAAHExjQV","url":"https://api.github.com/repos/sktime/sktime/issues/events/7596291093","actor":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-10-16T12:07:25Z","performed_via_github_app":null}]