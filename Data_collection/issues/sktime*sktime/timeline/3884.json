[{"id":7949254311,"node_id":"LE_lADOCVKAsc5X7Zz2zwAAAAHZz_6n","url":"https://api.github.com/repos/sktime/sktime/issues/events/7949254311","actor":{"login":"RNKuhns","id":26907244,"node_id":"MDQ6VXNlcjI2OTA3MjQ0","avatar_url":"https://avatars.githubusercontent.com/u/26907244?v=4","gravatar_id":"","url":"https://api.github.com/users/RNKuhns","html_url":"https://github.com/RNKuhns","followers_url":"https://api.github.com/users/RNKuhns/followers","following_url":"https://api.github.com/users/RNKuhns/following{/other_user}","gists_url":"https://api.github.com/users/RNKuhns/gists{/gist_id}","starred_url":"https://api.github.com/users/RNKuhns/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RNKuhns/subscriptions","organizations_url":"https://api.github.com/users/RNKuhns/orgs","repos_url":"https://api.github.com/users/RNKuhns/repos","events_url":"https://api.github.com/users/RNKuhns/events{/privacy}","received_events_url":"https://api.github.com/users/RNKuhns/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-12-04T21:13:45Z","label":{"name":"enhancement","color":"fef2c0"},"performed_via_github_app":null},{"id":7949558505,"node_id":"LE_lADOCVKAsc5X7Zz2zwAAAAHZ1KLp","url":"https://api.github.com/repos/sktime/sktime/issues/events/7949558505","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-12-04T23:51:06Z","label":{"name":"module:forecasting","color":"35FCCE"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1336555515","html_url":"https://github.com/sktime/sktime/issues/3884#issuecomment-1336555515","issue_url":"https://api.github.com/repos/sktime/sktime/issues/3884","id":1336555515,"node_id":"IC_kwDOCVKAsc5Pqjf7","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-12-04T23:55:40Z","updated_at":"2022-12-04T23:55:40Z","author_association":"COLLABORATOR","body":"> For example, fitting several forecasters and then comparing the results amongst the forecasters and different ensembles of the forecasters. In a simple case, where the forecasters are compared to a single ensemble, this would currently result in the forecasters each being fit and predicted twice for each evaluation window (once for each forecaster individually and once in the ensemble forecaster). If there are multiple ensembles being compared the level of duplication grows. \r\n\r\nYes, I do get the efficiency/duplication argument here.\r\n\r\nI think there are two points to discuss:\r\n\r\n* is the use case as stated the right workflow? I think it might be prone to overfitting, and methodologically maybe you want to do sth else (but very similar) instead?\r\n* is there a way to do this without increasing coupling between the choice of the ensemble/composite/pipeline and the evaluation method? Or, more generally, what are the ways to do it? I assume you recognize the risk of coupling and the risk making an already high-complexity interface (`evaluate`) acquire parameters that are only valid in some special use cases.\r\n\r\nI'll go through these separately.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1336555515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1336560793","html_url":"https://github.com/sktime/sktime/issues/3884#issuecomment-1336560793","issue_url":"https://api.github.com/repos/sktime/sktime/issues/3884","id":1336560793,"node_id":"IC_kwDOCVKAsc5PqkyZ","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-12-05T00:09:25Z","updated_at":"2022-12-05T00:09:32Z","author_association":"COLLABORATOR","body":"> is the use case as stated the right workflow?\r\n\r\nDepending on what you mean, it might lead to \"overfitting in evaluation\".\r\n\r\nSuppose we have 6 component forecasters that we could ensemble over, and 2 ways to aggregate. That gives us $(2^6 - 1) \\cdot 2 = 126$ combinations to evaluate.\r\n\r\nLet's say what we choose does not have an influence at all on the error metric, but it is independently (identically) distributed.\r\n\r\nThen, the \"best\" model will appear with the maximum order statistic in the sample of 126, i.e., it will have the cdf $F'(x) = F(x) ^ {126}$ of whatever the metric was distributed (assuming wlog that bigger was better).\r\n\r\nThis skews it pretty far up. For instance, if we start with a uniform distribution on $[0,1]$ (let's say, an R-squared), the point $x$ where $F'(x) = \\frac{1}{2}$ will be $x = 0.5 ^ {\\frac{1}{126}} \\approx 0.995$, that is, it looks like we have a pretty good model with the top performer, it has 0.99-something, even if it is just equally performant as everything else.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1336560793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1336562593","html_url":"https://github.com/sktime/sktime/issues/3884#issuecomment-1336562593","issue_url":"https://api.github.com/repos/sktime/sktime/issues/3884","id":1336562593,"node_id":"IC_kwDOCVKAsc5PqlOh","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-12-05T00:13:26Z","updated_at":"2022-12-05T00:15:53Z","author_association":"COLLABORATOR","body":"What is more \"sound\" imo is to put the ensemble in a multiplexer or other tuner, and tune which models are included. Generalization include weighted ensemble methods, with weights being determined after a single fit of all compnent models, such as `AutoEnsembleForeceaster` which is currently in sktime.\r\n\r\nI do agree that if you would want to do the exhaustive search, it does end up being wasteful, so maybe what you want is a *tuner* and not a change to the `evaluate` function? E.g., sth similar to `AutoEnsembleForecaster` or the `online_learning` module?\r\n\r\nHaving said that, it may be worth having a variant of the `evaluate` function to use inside a tuner?\r\nFor that, you would need access to predictions that you can then ensemle and compute metrics of.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1336562593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1336567549","html_url":"https://github.com/sktime/sktime/issues/3884#issuecomment-1336567549","issue_url":"https://api.github.com/repos/sktime/sktime/issues/3884","id":1336567549,"node_id":"IC_kwDOCVKAsc5Pqmb9","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-12-05T00:21:58Z","updated_at":"2022-12-05T00:21:58Z","author_association":"COLLABORATOR","body":"Regarding the point on coupling:\r\n\r\nmy main question is, can we solve this without adding more args to the `evaluate` function?\r\n\r\nSome thoughts:\r\n\r\n* if `evaluate` returns predictions, we can wrap it in another utility that takes the prediction and computes the metrics\r\n* would it also make sense to use this to return optimal weights, i.e., have it do the 1/0 on/off case, as well as arbitrary scalar weights?\r\n* there is the `_PredictionWeightedEnsembler` class in `online_learning`, could something like this (perhaps `BaseObject` inheriting) encapsulate how we ensemble?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1336567549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}}]