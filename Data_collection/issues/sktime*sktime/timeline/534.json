[{"id":4102893754,"node_id":"MDEyOkxhYmVsZWRFdmVudDQxMDI4OTM3NTQ=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4102893754","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2020-12-11T23:49:45Z","label":{"name":"bug","color":"d73a4a"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/743758365","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-743758365","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":743758365,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc1ODM2NQ==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2020-12-12T13:45:03Z","updated_at":"2020-12-12T13:52:43Z","author_association":"COLLABORATOR","body":"Thanks for raising the bug. \r\n\r\nWhen I run this I don't get the exception but even worse, a silent error (the computed relative horizon is wrong). \r\n\r\nThe problem comes down to computing time deltas. \r\n\r\nThis works as expected:\r\n```python\r\ncutoff = y_train.index[-1]\r\ncutoff\r\n>>> Timestamp('1950-12-01 00:00:00', freq='MS')\r\n```\r\n\r\nThis also works but returns time deltas in days rather than the months what we would like based on the \"MS\" (month start) frequency:\r\n```python\r\nvalues = fh.to_pandas() - cutoff\r\nvalues\r\n>>> TimedeltaIndex(['31 days', '62 days', '90 days', '121 days', '151 days'], dtype='timedelta64[ns]', name='Period', freq=None)\r\n```\r\n\r\nTrying to convert this into months doesn't seem to work:\r\n```python\r\n(values / pd.Timedelta(1, \"MS\"))\r\n>>> Float64Index([2678400000.0, 5356800000.0, 7776000000.0, 10454400000.0, 13046400000.0], dtype='float64', name='Period')\r\n```\r\n\r\nSomewhat confusingly \"MS\" now refers to milliseconds as it seems: \r\n```python\r\npd.Timedelta(1, \"MS\")\r\n>>> Timedelta('0 days 00:00:00.001000')\r\n```\r\n\r\nNow this would work: \r\n```python\r\n(values / np.timedelta64(1, \"M\")).astype(int)\r\n```\r\nBut relies on rounding and may fail for long horizons and still requires to convert \"MS\" to \"M\" and probably a few other frequency conversions too. \r\n\r\nAlternatively:\r\n```python\r\nfh.to_pandas().to_period(\"M\") - cutoff.to_period(\"M\")\r\n```\r\nBut again requires to know about \"MS\" meaning \"M\" here. \r\n\r\nWorking with `pd.PeriodIndex` is somewhat easier when it comes to time deltas but also more restricted in terms of other functionality. \r\n\r\nNot sure how to best address this, any ideas? \r\n\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/743758365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2020-12-19T22:19:55Z","updated_at":"2020-12-19T22:19:55Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/550","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/550/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/550/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/550/events","html_url":"https://github.com/sktime/sktime/issues/550","id":771463096,"node_id":"MDU6SXNzdWU3NzE0NjMwOTY=","number":550,"title":"[BUG] Prediction with DatetimeIndex as ForecastingHorizon values","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-12-19T21:57:26Z","updated_at":"2020-12-19T23:32:43Z","closed_at":"2020-12-19T23:00:38Z","author_association":"COLLABORATOR","active_lock_reason":null,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"**Describe the bug**\r\nThere is an issue with `DatetimeIndex` in `ForecastingHorizon` when doing prediction. Seems this came up by recent commits?\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-5-0c038f527191> in <module>\r\n      9 forecaster = NaiveForecaster(strategy=\"last\", sp=12)\r\n     10 forecaster.fit(y_train)\r\n---> 11 y_pred = forecaster.predict(fh)\r\n     12 y_pred\r\n\r\n~\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_sktime.py in predict(self, fh, X, return_pred_int, alpha)\r\n    216         self.check_is_fitted()\r\n    217         self._set_fh(fh)\r\n--> 218         return self._predict(self.fh, X, return_pred_int=return_pred_int, alpha=alpha)\r\n    219 \r\n    220     def compute_pred_int(self, y_pred, alpha=DEFAULT_ALPHA):\r\n\r\n~\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_sktime.py in _predict(self, fh, X, return_pred_int, alpha)\r\n    616 \r\n    617         # all values are out-of-sample\r\n--> 618         if fh.is_all_out_of_sample(self.cutoff):\r\n    619             return self._predict_fixed_cutoff(\r\n    620                 fh.to_out_of_sample(self.cutoff), **kwargs\r\n\r\n~\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_fh.py in is_all_out_of_sample(self, cutoff)\r\n    346             cutoff.\r\n    347         \"\"\"\r\n--> 348         return sum(self._is_out_of_sample(cutoff)) == len(self)\r\n    349 \r\n    350     def to_indexer(self, cutoff=None, from_cutoff=True):\r\n\r\n~\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_fh.py in _is_out_of_sample(self, cutoff)\r\n    328         \"\"\"Get index location of out-of-sample values\"\"\"\r\n    329         # return ~self._in_sample_idx(cutoff)\r\n--> 330         return self.to_relative(cutoff).to_pandas() > 0\r\n    331 \r\n    332     def is_all_out_of_sample(self, cutoff=None):\r\n\r\n~\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_fh.py in to_relative(self, cutoff)\r\n    223                 values = _coerce_duration_to_int(values, unit=_get_unit(cutoff))\r\n    224 \r\n--> 225             return self._new(values, is_relative=True)\r\n    226 \r\n    227     @lru_cache(typed=True)\r\n\r\n~\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_fh.py in _new(self, values, is_relative)\r\n    160         if is_relative is None:\r\n    161             is_relative = self.is_relative\r\n--> 162         return type(self)(values, is_relative)\r\n    163 \r\n    164     @property\r\n\r\n~\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_fh.py in __init__(self, values, is_relative)\r\n    137         if not isinstance(is_relative, bool):\r\n    138             raise TypeError(\"`is_relative` must be a boolean\")\r\n--> 139         values = _check_values(values)\r\n    140 \r\n    141         # check types, note that isinstance() does not work here because index\r\n\r\n~\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_fh.py in _check_values(values)\r\n    105     # check values does not contain duplicates\r\n    106     if len(values) != values.nunique():\r\n--> 107         raise ValueError(\"`values` must not contain duplicates.\")\r\n    108 \r\n    109     # return sorted values\r\n\r\nValueError: `values` must not contain duplicates.\r\n```\r\n\r\n**To Reproduce**\r\n```python\r\nfrom sktime.forecasting.all import *\r\n\r\ny = load_airline()\r\ny.index = y.index.to_timestamp()\r\ny_train, y_test = temporal_train_test_split(y, test_size=44)\r\n\r\nfh = ForecastingHorizon(y_test.index[0:5], is_relative=False)\r\n\r\nforecaster = NaiveForecaster(strategy=\"last\", sp=12)\r\nforecaster.fit(y_train)\r\ny_pred = forecaster.predict(fh)\r\ny_pred\r\n```\r\n\r\n**Versions**\r\nCurrent master\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/550/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/748535860","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-748535860","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":748535860,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODUzNTg2MA==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2020-12-19T22:50:59Z","updated_at":"2020-12-19T23:32:03Z","author_association":"COLLABORATOR","body":"Forcing a conversion to `pd.PeriodIndex` internally whenever we need to do arithmetics with `pd.DatetimeIndex` may be the best option (e.g. subtraction of the cutoff point when going from absolute to relative representation). This requires that the `pd.DatetimeIndex` is regular and that the frequency is given or can be inferred which seems like a reasonable assumption for the methods we currently support. This way we avoid having to deal with `pd.Timedeltas` altogether.  \r\n\r\nSomething like this could work:\r\n\r\n```python\r\ndef _coerce_offset_index_to_int_index(index):\r\n    return pd.Int64Index([offset.n for offset in index])\r\n\r\ndef _check_freq(values):\r\n    # check if values.freq is given\r\n\r\nvalues = self.to_pandas()\r\n\r\nif isinstance(values, pd.DatetimeIndex):\r\n    freq = _check_freq(values)\r\n    try:\r\n        # coerce to pd.Period for easier arithmetics\r\n        absolute = values.to_period(freq)\r\n        cutoff = cutoff.to_period(freq)\r\n        \r\n    except ValueError:\r\n        #raise a more informative error message\r\n    \r\n    # compute integer-valued relative fh \r\n    relative = absolute - cutoff\r\n    integers = _coerce_offset_index_to_int_index(relative)\r\n```","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/748535860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2020-12-24T13:03:38Z","updated_at":"2020-12-24T13:03:38Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/561","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/561/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/561/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/561/events","html_url":"https://github.com/sktime/sktime/issues/561","id":774185807,"node_id":"MDU6SXNzdWU3NzQxODU4MDc=","number":561,"title":"[BUG] Issue of the class ForecastingHorizon and related functions causing downstream issues with Prophet Ensemble","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-12-24T05:11:35Z","updated_at":"2020-12-28T15:29:53Z","closed_at":"2020-12-28T15:29:53Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"**Describe the bug**\r\nSince Prophet needs the index to be in `pd.DatetimeIndex` format, it does not work in ensemble mode with other models.\r\n\r\n**To Reproduce**\r\n\r\n```python\r\ny = load_airline()\r\ny_train, y_test = temporal_train_test_split(y, test_size=36)\r\nfh = ForecastingHorizon(y_test.index, is_relative=False)\r\n\r\nforecaster = EnsembleForecaster([\r\n    (\"autoARIMA\", AutoARIMA(sp=12, suppress_warnings=True)),\r\n    (\"autoETS\", AutoETS(auto=True, sp=12, n_jobs=-1)),\r\n    (\"fbprophet\", Prophet(seasonality_mode=\"multiplicative\", add_country_holidays={\"country_name\": \"US\"}))\r\n])\r\n%time forecaster.fit(y_train)\r\ny_pred = forecaster.predict(fh)\r\n```\r\n\r\nError message is as follows\r\n```terminal\r\nNotImplementedError: <class 'pandas.core.indexes.period.PeriodIndex'> is not supported. Please use type: <class 'pandas.core.indexes.datetimes.DatetimeIndex'> instead.\r\n```\r\n\r\n**Expected behavior**\r\nIt would be ok to provide a working example of this use case. If it means I have to change data index to `pd.DatetimeIndex` for other models, I am ok doing that but I tried it and it gave an error as well\r\n\r\n```python\r\n# Convert index to pd.DatetimeIndex\r\nz = y.copy()\r\nz.index = y.index.to_timestamp()\r\nz_train, z_test = temporal_train_test_split(z, test_size=36)\r\n\r\nforecaster = EnsembleForecaster([\r\n    (\"autoARIMA\", AutoARIMA(sp=12, suppress_warnings=True)),\r\n    (\"autoETS\", AutoETS(auto=True, sp=12, n_jobs=-1)),\r\n    (\"fbprophet\", Prophet( seasonality_mode=\"multiplicative\", add_country_holidays={\"country_name\": \"US\"}))\r\n])\r\n%time forecaster.fit(z_train)\r\ny_pred = forecaster.predict(fh)\r\n```\r\n\r\nError Message is as follows\r\n\r\n```terminal\r\nsktime\\forecasting\\base\\_fh.py in _check_cutoff(self, cutoff)\r\n    388 \r\n    389         if isinstance(index, pd.PeriodIndex):\r\n--> 390             assert isinstance(cutoff, pd.Period)\r\n    391         if isinstance(index, pd.DatetimeIndex):\r\n    392             assert isinstance(cutoff, pd.Timestamp)\r\n```\r\n\r\nI tried another variant of the above (changes the arg to the pred function) but got a different error\r\n\r\n```python\r\nforecaster = EnsembleForecaster([\r\n    (\"autoARIMA\", AutoARIMA(sp=12, suppress_warnings=True)),\r\n    (\"autoETS\", AutoETS(auto=True, sp=12, n_jobs=-1)),\r\n    (\"fbprophet\", Prophet( seasonality_mode=\"multiplicative\", add_country_holidays={\"country_name\": \"US\"}))\r\n])\r\n%time forecaster.fit(z_train)\r\ny_pred = forecaster.predict(fh.to_relative(cutoff=y_train.index[-1]))\r\n```\r\n\r\n```\r\nsktime\\forecasting\\base\\_fh.py in _check_values(values)\r\n    108     # check values does not contain duplicates\r\n    109     if len(values) != values.nunique():\r\n--> 110         raise ValueError(\"`values` must not contain duplicates.\")\r\n    111 \r\n    112     # return sorted values\r\n\r\nValueError: `values` must not contain duplicates.\r\n```\r\n\r\n\r\n\r\n\r\n**Versions**\r\nSystem:\r\n    python: 3.6.12 |Anaconda, Inc.| (default, Sep  9 2020, 00:29:25) [MSC v.1916 64 bit (AMD64)]\r\nexecutable: C:\\Users\\Nikhil\\.conda\\envs\\sktime_dev\\python.exe\r\n   machine: Windows-10-10.0.18362-SP0\r\n\r\nPython dependencies:\r\n          pip: 20.3.3\r\n   setuptools: 51.0.0.post20201207\r\n      sklearn: 0.24.0\r\n       sktime: 0.5.0\r\n  statsmodels: 0.12.1\r\n        numpy: 1.19.4\r\n        scipy: 1.5.4\r\n       Cython: 0.29.17\r\n       pandas: 1.1.5\r\n   matplotlib: 3.3.3\r\n       joblib: 1.0.0\r\n        numba: 0.52.0\r\n     pmdarima: 1.8.0\r\n      tsfresh: 0.17.0","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/561/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/751872095","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-751872095","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":751872095,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MTg3MjA5NQ==","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2020-12-28T21:37:17Z","updated_at":"2020-12-28T21:39:05Z","author_association":"COLLABORATOR","body":"@mloning  I had a look into it and I think the best way is what you wrote here: \r\n\r\n> fh.to_pandas().to_period(\"M\") - cutoff.to_period(\"M\")\r\n\r\nSo basically what you already said, when doing `fh.to_relative()` then just converting it to a `PerdiodIndex` first in case it is a `DatetimeIndex`.\r\nThe good thing is that pandas can convert the `DatetimIndex` also just like this:\r\n```python\r\nfrom sktime.forecasting.all import *\r\ny = load_airline()\r\ny = y.to_timestamp()\r\ncutoff = y.index[-1]\r\ny.index.to_period()\r\n```\r\nand  it works without giving the `freq=\"M\"`  argument:\r\n```\r\nPeriodIndex(['1949-01', '1949-02', '1949-03', '1949-04', '1949-05', '1949-06',\r\n             '1949-07', '1949-08', '1949-09', '1949-10',\r\n             ...\r\n             '1960-03', '1960-04', '1960-05', '1960-06', '1960-07', '1960-08',\r\n             '1960-09', '1960-10', '1960-11', '1960-12'],\r\n            dtype='period[M]', name='Period', length=144, freq='M')\r\n```\r\nThe bad thing is that `to_period()` does not work for a single `Timestamp` like below. I think I will raise this as an issue to pandas, as this is should then also work imho.\r\n\r\n```python\r\ncutoff.to_period()\r\n```\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\npandas\\_libs\\tslibs\\period.pyx in pandas._libs.tslibs.period.freq_to_dtype_code()\r\n\r\nAttributeError: 'pandas._libs.tslibs.offsets.MonthBegin' object has no attribute '_period_dtype_code'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-122-1571c54e24e5> in <module>\r\n      1 cutoff = y.index[-1]\r\n----> 2 cutoff.to_period()\r\n\r\npandas\\_libs\\tslibs\\timestamps.pyx in pandas._libs.tslibs.timestamps._Timestamp.to_period()\r\n\r\npandas\\_libs\\tslibs\\period.pyx in pandas._libs.tslibs.period.Period.__new__()\r\n\r\npandas\\_libs\\tslibs\\period.pyx in pandas._libs.tslibs.period.freq_to_dtype_code()\r\n\r\nValueError: Invalid frequency: {0}\r\n```\r\nSo I have now a good workaroud to convert the `Timestamp` to a `Period` without including a hardcoded `freq` value or other if statements:\r\n```python\r\ndate = pd.DatetimeIndex([cutoff], freq=cutoff.freq)\r\ncutoff = date.to_period()[0]\r\ncutoff\r\n```\r\nThis results in `Period('1949-01', 'M')`.  🎉 So now we ca do the delta calculation as usual with the `PeriodIndex` in order to get the relative `fh`.\r\nWhat do you think? I can try to implement it. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/751872095/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}},{"id":4153119926,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDE1MzExOTkyNg==","url":"https://api.github.com/repos/sktime/sktime/issues/events/4153119926","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-12-28T21:37:18Z","performed_via_github_app":null},{"id":4153119928,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQxNTMxMTk5Mjg=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4153119928","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-12-28T21:37:18Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752022986","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-752022986","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":752022986,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MjAyMjk4Ng==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2020-12-29T10:14:13Z","updated_at":"2020-12-29T10:14:13Z","author_association":"COLLABORATOR","body":"Hi @aiwalter - yes that sounds like a good plan. Would really appreciate a PR! Even if it doesn't work always, I'd rather have it fail at the `to_period()` step than what we have currently where it silently produces errors. ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752022986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"id":4154220184,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDE1NDIyMDE4NA==","url":"https://api.github.com/repos/sktime/sktime/issues/events/4154220184","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-12-29T10:14:13Z","performed_via_github_app":null},{"id":4154220188,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQxNTQyMjAxODg=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4154220188","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-12-29T10:14:13Z","performed_via_github_app":null},{"actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2020-12-29T14:18:16Z","updated_at":"2020-12-29T14:18:16Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/582","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/582/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/582/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/582/events","html_url":"https://github.com/sktime/sktime/pull/582","id":775915616,"node_id":"MDExOlB1bGxSZXF1ZXN0NTQ2NTA0Mjc4","number":582,"title":"Fix fh.to_relative() bug for DatetimeIndex","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2020-12-29T14:18:15Z","updated_at":"2021-01-05T12:33:24Z","closed_at":"2021-01-05T12:33:24Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/sktime/sktime/pulls/582","html_url":"https://github.com/sktime/sktime/pull/582","diff_url":"https://github.com/sktime/sktime/pull/582.diff","patch_url":"https://github.com/sktime/sktime/pull/582.patch","merged_at":"2021-01-05T12:33:24Z"},"body":"<!--\r\nThanks for contributing a pull request! Please ensure you have taken a look at our contribution guide: https://github.com/alan-turing-institute/sktime/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n#### Reference Issues/PRs\r\nSolved #534 \r\nNot solved #561 as this comes from `AutoETS` and is a different bug.\r\n\r\n\r\n#### What does this implement/fix? Explain your changes.\r\nBug fix\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/582/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752721191","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-752721191","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":752721191,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MjcyMTE5MQ==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2020-12-30T18:46:37Z","updated_at":"2020-12-30T19:40:23Z","author_association":"COLLABORATOR","body":"There's another issue: `pd.DatetimeIndex` looses the `freq` information if the index is no longer regular (e.g. when it has gaps after slicing). Indices with less than 3 items also don't carry the `freq` information. This makes it hard to rely on it for arithmetic operations. \r\n\r\nSome forecasters (e.g. pipelines) may work with irregular time indices (e.g. predictions for specific steps of the forecasting horizon which are passed to the inverse transformation) but will no longer find the `freq` information on the index. \r\n\r\n```python\r\nindex = pd.date_range(\"01-01-2021\", periods=10, freq=\"D\")\r\nindex.freqstr\r\n>>> \"D\"\r\n\r\nindex[[1, 2]].freqstr\r\n>>> None\r\n```","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752721191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752736575","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-752736575","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":752736575,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MjczNjU3NQ==","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2020-12-30T19:44:46Z","updated_at":"2020-12-30T19:45:15Z","author_association":"COLLABORATOR","body":"if you do `index[:5]` it works! Seems to be another pandas issue.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752736575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752737674","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-752737674","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":752737674,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MjczNzY3NA==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2020-12-30T19:49:01Z","updated_at":"2020-12-30T19:49:01Z","author_association":"COLLABORATOR","body":"Yes I asked about it on their Gitter: https://gitter.im/pydata/pandas\r\n\r\nThe issue is we often work with incomplete indices (e.g. forecasting horizon or windows in temporal CV), not sure how to best handle that yet. ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752737674/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752744955","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-752744955","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":752744955,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjc0NDk1NQ==","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2020-12-30T20:15:36Z","updated_at":"2020-12-30T20:27:27Z","author_association":"COLLABORATOR","body":"I was thinking a bit about the bigger picture of how the class `ForecastingHorizon` is sructured, the way `predict()` is used and which index types are accepted in `fit()`. I guess you had some ideas in mind when designing this and allowing different index types, slicing etc. However, I think this makes it a bit vulnerable as the `fh` became sth like the backbone of `sktime`. If we would be more restrictive in what we allow, things would be more stable I guess. I had in mind to completely restructure and simplifying it to e.g. the following limitations:\r\n\r\n- **Data**: Accepting only `DatetimeIndex` (or maybe additionally `RangeIndex` (like 0,1,2,3,4,5..) which is the dafault index of `DataFrame`). The later could be internally replaced with a dummy `DatetimeIndex` so that we internally only deal with one index type. We could also accept all like now, and replace them with `DatetimeIndex` also internally.\r\n\r\n- **Predict function**: We could only accept the following way to predict, which is mainly based on the `freq` value of the index:\r\n1) Allow `predict()` to just return the next step\r\n2) Allow `predict([1,2,3,4,5])`\r\n3) Allow `predict([-3,-2,-1,0,1,2,3])`\r\n4) Maybe allow `predict([1,3,10])`, not sure on this. Actually doing predictions like this is very unlikely to be used by users.\r\n5) Allow `predict(10)` to get next 10 data points\r\n6) Prohibit `predict(-10)` or related\r\n7) Prohibit predictions on index values, just allow `int` or `[int]`\r\n\r\n- **ForecastingHorizon**: This class would not be needed any more and could be replaced by an argument `fh` of type `int` or `[int]`\r\n\r\nThis is just an idea, and some point might be solved better. I am also fine with keeping things like it is now. Would appreciate your feedback on this @mloning !","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752744955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}},{"id":4158261812,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDE1ODI2MTgxMg==","url":"https://api.github.com/repos/sktime/sktime/issues/events/4158261812","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-12-30T20:15:36Z","performed_via_github_app":null},{"id":4158261815,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQxNTgyNjE4MTU=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4158261815","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-12-30T20:15:36Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752751363","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-752751363","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":752751363,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjc1MTM2Mw==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2020-12-30T20:39:37Z","updated_at":"2020-12-30T20:41:10Z","author_association":"COLLABORATOR","body":"Some of the rationale for the forecasting horizon can be found here: https://github.com/sktime/enhancement-proposals/blob/master/steps/01_forecasting_api/01_forecasting_api.md\r\n\r\nWe actually started without the `ForecastingHorizon` class but realised that we need some abstraction to handle the different representations. Both relative and absolute representations are commonly used in practice. In addition, different libraries require different representation (e.g. compare pmdarima and fbprophet). Having a forecasting horizon class helps us manage these representations. Distinguishing between in-sample and out-of-sample horizons is another problem that you need to handle somehow. \r\n\r\nI agree about the simplification. The problem is that `pd.DatetimeIndex` has more functionality than `pd.PeriodIndex` but is less reliable for arithmetic computations and seems to forget about `freq` in some cases. \r\n\r\nRegarding your points: \r\n* Accepting only `pd.DatetimeIndex` and `pd.RangeIndex` seems reasonable, but most issues come from `pd.DatetimeIndex`. \r\n* As to the predict interface:  \r\n1. We could add this as the default argument if no horizon is passed\r\n2. That works currently - internally it's simply cast into a `ForecastingHorizon`\r\n3. That works currently too\r\n4. Many forecasters generate predictions recursively, i.e. they generate predictions for all previous steps to predict the next step (e.g. ARIMA), however some forecasters don't do that (e.g. \"direct\" strategy when reducing forecasting to regression where we train a separate model for each step in the horizon). To avoid needless computations, we need to be able to specify the exact steps we want to predict.  \r\n5. Given the point above, `predict(10)` wouldn't be the same as `predict([10])`, I think it's preferable to avoid the confusion over the convenience of not having to type the square brackets in this case \r\n6. How would you specify in-sample predictions? \r\n7. What do you mean by index values?\r\n\r\nHope this makes our thinking a bit clearer, always happy to be convinced of something else! ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752751363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752776597","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-752776597","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":752776597,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjc3NjU5Nw==","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"created_at":"2020-12-30T22:24:38Z","updated_at":"2020-12-30T22:24:38Z","author_association":"COLLABORATOR","body":"I think most issues come from:\r\n\r\n- converting type of index\r\n- converting `fh` absolute to relative and vice versa\r\n- slicing index\r\n\r\nThis is why it would be more stable to just accept..\r\n\r\n- one index type (at least use one type interanally). If there is a dependency package that uses a different type, we could wrap that anyway just for this specific package.\r\n- only relative `fh`\r\n- only continuous `fh` lists and not sth like in 4), so no slicing\r\n\r\nJust few points:\r\n1) Yes we could just add this anyway 👍🏻 \r\n5) I agree that acceptiong `int` might be confusing in combination with `list`, most likely it would be best to just accept continuous `[int]` or `predict()` for one step ahead.\r\n6) Insample would be done by `predict([-3,-2,-1])` e.g.\r\n7) I meant using e.g. `ForecastingHorizon(['2018-01-01', '2018-01-02', '2018-01-03'], dtype='datetime64[ns]', freq='D', is_relative=False)`, so basically just accepting relative horizons and no absolute.\r\n\r\nI mean as you said, almost all things (inspite 1) are already possible with `ForecastingHorizon` from user perspective , so that is the good news :)","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/752776597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}},{"actor":{"login":"mpindado","id":19164478,"node_id":"MDQ6VXNlcjE5MTY0NDc4","avatar_url":"https://avatars.githubusercontent.com/u/19164478?v=4","gravatar_id":"","url":"https://api.github.com/users/mpindado","html_url":"https://github.com/mpindado","followers_url":"https://api.github.com/users/mpindado/followers","following_url":"https://api.github.com/users/mpindado/following{/other_user}","gists_url":"https://api.github.com/users/mpindado/gists{/gist_id}","starred_url":"https://api.github.com/users/mpindado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mpindado/subscriptions","organizations_url":"https://api.github.com/users/mpindado/orgs","repos_url":"https://api.github.com/users/mpindado/repos","events_url":"https://api.github.com/users/mpindado/events{/privacy}","received_events_url":"https://api.github.com/users/mpindado/received_events","type":"User","site_admin":false},"created_at":"2021-02-11T10:38:14Z","updated_at":"2021-02-11T10:38:14Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/670","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/670/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/670/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/670/events","html_url":"https://github.com/sktime/sktime/issues/670","id":806266268,"node_id":"MDU6SXNzdWU4MDYyNjYyNjg=","number":670,"title":"[BUG] Wrong Forecast calculation on freq values not 1","user":{"login":"mpindado","id":19164478,"node_id":"MDQ6VXNlcjE5MTY0NDc4","avatar_url":"https://avatars.githubusercontent.com/u/19164478?v=4","gravatar_id":"","url":"https://api.github.com/users/mpindado","html_url":"https://github.com/mpindado","followers_url":"https://api.github.com/users/mpindado/followers","following_url":"https://api.github.com/users/mpindado/following{/other_user}","gists_url":"https://api.github.com/users/mpindado/gists{/gist_id}","starred_url":"https://api.github.com/users/mpindado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mpindado/subscriptions","organizations_url":"https://api.github.com/users/mpindado/orgs","repos_url":"https://api.github.com/users/mpindado/repos","events_url":"https://api.github.com/users/mpindado/events{/privacy}","received_events_url":"https://api.github.com/users/mpindado/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-02-11T10:38:14Z","updated_at":"2022-02-23T22:42:33Z","closed_at":"2022-02-23T22:42:32Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"**Describe the bug**\r\nHi! I have just come upon sktime and performing a quick test on ExponentialSmoothing with 15 minute data (freq=\"15T\") the prediction raises an exception, however, when using 1-frequencies (1T, 1H) etc the program seems to work.\r\n\r\nI think this is somehow related to issue #534.\r\n\r\n**To Reproduce**\r\n```python\r\nidx = pd.period_range(\"2021-01-01\", \"2021-01-02\", freq=\"15T\")\r\nvalues = np.random.randint(1, 10, len(idx))\r\nts = pd.Series(values, index=idx)\r\ny_train, y_test = temporal_train_test_split(ts, test_size=1/3)\r\nfh = np.arange(len(y_test)) + 1\r\nforecaster = ExponentialSmoothing(trend=\"add\")\r\nforecaster.fit(y_train)\r\ny_pred = forecaster.predict(fh)\r\n\r\nKeyError: \"None of [PeriodIndex(['2021-01-01 16:00', '2021-01-01 16:15', '2021-01-01 16:30',\\n             '2021-01-01 16:45', '2021-01-01 17:00', '2021-01-01 17:15',\\n             '2021-01-01 17:30', '2021-01-01 17:45', '2021-01-01 18:00',\\n             '2021-01-01 18:15', '2021-01-01 18:30', '2021-01-01 18:45',\\n             '2021-01-01 19:00', '2021-01-01 19:15', '2021-01-01 19:30',\\n             '2021-01-01 19:45', '2021-01-01 20:00', '2021-01-01 20:15',\\n             '2021-01-01 20:30', '2021-01-01 20:45', '2021-01-01 21:00',\\n             '2021-01-01 21:15', '2021-01-01 21:30', '2021-01-01 21:45',\\n             '2021-01-01 22:00', '2021-01-01 22:15', '2021-01-01 22:30',\\n             '2021-01-01 22:45', '2021-01-01 23:00', '2021-01-01 23:15',\\n             '2021-01-01 23:30', '2021-01-01 23:45', '2021-01-02 00:00'],\\n            dtype='period[15T]', freq='15T')] are in the [index]\"\r\n\r\n```\r\n\r\n**Expected behavior**\r\nPrediction should work.\r\n\r\n**Additional context**\r\nSo debugging, the problem seems to be over here in _fh.py\r\n\r\n```python\r\n        # Note: We should here also coerce to periods for more reliable arithmetic\r\n        # operations as in `to_relative` but currently doesn't work with\r\n        # `update_predict` and incomplete time indices where the `freq` information\r\n        # is lost, see comment on issue #534\r\n        integers = absolute - start\r\n\r\n        if isinstance(absolute, (pd.PeriodIndex, pd.DatetimeIndex)):\r\n            integers = _coerce_duration_to_int(integers, freq=_get_freq(cutoff))\r\n```\r\nThe function coerce_duration_to_int does not take into account the cutoff frequency on a PeriodIndex, as it does with TimeDeltas:\r\n```python\r\n    elif isinstance(duration, pd.Index) and isinstance(\r\n        duration[0], pd.tseries.offsets.BaseOffset\r\n    ):\r\n        return pd.Int64Index([d.n for d in duration])\r\n    elif isinstance(duration, (pd.Timedelta, pd.TimedeltaIndex)):\r\n        if freq is None:\r\n            raise ValueError(\"`unit` missing\")\r\n```\r\nAs a result, ``integers`` value is multiplied by 15 (in the example, for freq ```15T```), and PeriodIndex \"indexes\" generated are far bigger and so the exception.\r\n\r\n**Versions**\r\n<details>\r\n\r\nSystem:\r\n    python: 3.7.5 (tags/v3.7.5:5c02a39a0b, Oct 15 2019, 00:11:34) [MSC v.1916 64 bit (AMD64)]\r\nexecutable: C:\\Users\\XXX\\AppData\\Local\\Programs\\Python\\Python37\\python.exe\r\n   machine: Windows-10-10.0.19041-SP0\r\nPython dependencies:\r\n          pip: 20.1.1\r\n   setuptools: 41.2.0\r\n      sklearn: 0.24.1\r\n       sktime: 0.5.3\r\n  statsmodels: 0.12.2\r\n        numpy: 1.20.1\r\n        scipy: 1.3.3\r\n       Cython: 0.29.17\r\n       pandas: 1.2.2\r\n   matplotlib: 3.1.3\r\n       joblib: 0.14.0\r\n        numba: 0.52.0\r\n     pmdarima: 1.8.0\r\n      tsfresh: None\r\n\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/670/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"id":4919394885,"node_id":"MDEyOkxhYmVsZWRFdmVudDQ5MTkzOTQ4ODU=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4919394885","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2021-06-21T22:23:51Z","label":{"name":"module:forecasting","color":"35FCCE"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/945018586","html_url":"https://github.com/sktime/sktime/issues/534#issuecomment-945018586","issue_url":"https://api.github.com/repos/sktime/sktime/issues/534","id":945018586,"node_id":"IC_kwDOCVKAsc44U9ba","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2021-10-16T23:01:43Z","updated_at":"2021-10-16T23:01:43Z","author_association":"COLLABORATOR","body":"Hm. this discussion broke off, and is closely related to the bug #1523 that came out of @asksteph's problem.\r\n\r\nWhat is the most recent on this, @aiwalter, @mloning?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/945018586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"id":5473574989,"node_id":"MEE_lADOCVKAsc4te3eHzwAAAAFGQCBN","url":"https://api.github.com/repos/sktime/sktime/issues/events/5473574989","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-10-16T23:01:43Z","performed_via_github_app":null},{"id":5473574990,"node_id":"SE_lADOCVKAsc4te3eHzwAAAAFGQCBO","url":"https://api.github.com/repos/sktime/sktime/issues/events/5473574990","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-10-16T23:01:43Z","performed_via_github_app":null},{"id":5473574991,"node_id":"MEE_lADOCVKAsc4te3eHzwAAAAFGQCBP","url":"https://api.github.com/repos/sktime/sktime/issues/events/5473574991","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-10-16T23:01:43Z","performed_via_github_app":null},{"id":5473574992,"node_id":"SE_lADOCVKAsc4te3eHzwAAAAFGQCBQ","url":"https://api.github.com/repos/sktime/sktime/issues/events/5473574992","actor":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-10-16T23:01:43Z","performed_via_github_app":null},{"id":5473574993,"node_id":"MEE_lADOCVKAsc4te3eHzwAAAAFGQCBR","url":"https://api.github.com/repos/sktime/sktime/issues/events/5473574993","actor":{"login":"asksteph","id":31328623,"node_id":"MDQ6VXNlcjMxMzI4NjIz","avatar_url":"https://avatars.githubusercontent.com/u/31328623?v=4","gravatar_id":"","url":"https://api.github.com/users/asksteph","html_url":"https://github.com/asksteph","followers_url":"https://api.github.com/users/asksteph/followers","following_url":"https://api.github.com/users/asksteph/following{/other_user}","gists_url":"https://api.github.com/users/asksteph/gists{/gist_id}","starred_url":"https://api.github.com/users/asksteph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asksteph/subscriptions","organizations_url":"https://api.github.com/users/asksteph/orgs","repos_url":"https://api.github.com/users/asksteph/repos","events_url":"https://api.github.com/users/asksteph/events{/privacy}","received_events_url":"https://api.github.com/users/asksteph/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-10-16T23:01:43Z","performed_via_github_app":null},{"id":5473574994,"node_id":"SE_lADOCVKAsc4te3eHzwAAAAFGQCBS","url":"https://api.github.com/repos/sktime/sktime/issues/events/5473574994","actor":{"login":"asksteph","id":31328623,"node_id":"MDQ6VXNlcjMxMzI4NjIz","avatar_url":"https://avatars.githubusercontent.com/u/31328623?v=4","gravatar_id":"","url":"https://api.github.com/users/asksteph","html_url":"https://github.com/asksteph","followers_url":"https://api.github.com/users/asksteph/followers","following_url":"https://api.github.com/users/asksteph/following{/other_user}","gists_url":"https://api.github.com/users/asksteph/gists{/gist_id}","starred_url":"https://api.github.com/users/asksteph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asksteph/subscriptions","organizations_url":"https://api.github.com/users/asksteph/orgs","repos_url":"https://api.github.com/users/asksteph/repos","events_url":"https://api.github.com/users/asksteph/events{/privacy}","received_events_url":"https://api.github.com/users/asksteph/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-10-16T23:01:44Z","performed_via_github_app":null},{"id":5712438691,"node_id":"ATPE_lADOCVKAsc4te3eHzwAAAAFUfOWj","url":"https://api.github.com/repos/sktime/sktime/issues/events/5712438691","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"added_to_project","commit_id":null,"commit_url":null,"created_at":"2021-12-03T14:24:07Z","project_card":{"id":74147815,"url":"https://api.github.com/projects/columns/cards/74147815","project_id":5198515,"project_url":"https://api.github.com/projects/5198515","column_name":"Needs triage & validation"},"performed_via_github_app":null}]