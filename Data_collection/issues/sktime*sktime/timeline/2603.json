[{"id":6551677471,"node_id":"LE_lADOCVKAsc5JERdyzwAAAAGGgqof","url":"https://api.github.com/repos/sktime/sktime/issues/events/6551677471","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-05-04T19:56:51Z","label":{"name":"enhancement","color":"fef2c0"},"performed_via_github_app":null},{"id":6551677575,"node_id":"MEE_lADOCVKAsc5JERdyzwAAAAGGgqqH","url":"https://api.github.com/repos/sktime/sktime/issues/events/6551677575","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-05-04T19:56:51Z","performed_via_github_app":null},{"id":6551677591,"node_id":"SE_lADOCVKAsc5JERdyzwAAAAGGgqqX","url":"https://api.github.com/repos/sktime/sktime/issues/events/6551677591","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-05-04T19:56:51Z","performed_via_github_app":null},{"id":6551677605,"node_id":"MEE_lADOCVKAsc5JERdyzwAAAAGGgqql","url":"https://api.github.com/repos/sktime/sktime/issues/events/6551677605","actor":{"login":"ltsaprounis","id":64217214,"node_id":"MDQ6VXNlcjY0MjE3MjE0","avatar_url":"https://avatars.githubusercontent.com/u/64217214?v=4","gravatar_id":"","url":"https://api.github.com/users/ltsaprounis","html_url":"https://github.com/ltsaprounis","followers_url":"https://api.github.com/users/ltsaprounis/followers","following_url":"https://api.github.com/users/ltsaprounis/following{/other_user}","gists_url":"https://api.github.com/users/ltsaprounis/gists{/gist_id}","starred_url":"https://api.github.com/users/ltsaprounis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ltsaprounis/subscriptions","organizations_url":"https://api.github.com/users/ltsaprounis/orgs","repos_url":"https://api.github.com/users/ltsaprounis/repos","events_url":"https://api.github.com/users/ltsaprounis/events{/privacy}","received_events_url":"https://api.github.com/users/ltsaprounis/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-05-04T19:56:51Z","performed_via_github_app":null},{"id":6551677609,"node_id":"SE_lADOCVKAsc5JERdyzwAAAAGGgqqp","url":"https://api.github.com/repos/sktime/sktime/issues/events/6551677609","actor":{"login":"ltsaprounis","id":64217214,"node_id":"MDQ6VXNlcjY0MjE3MjE0","avatar_url":"https://avatars.githubusercontent.com/u/64217214?v=4","gravatar_id":"","url":"https://api.github.com/users/ltsaprounis","html_url":"https://github.com/ltsaprounis","followers_url":"https://api.github.com/users/ltsaprounis/followers","following_url":"https://api.github.com/users/ltsaprounis/following{/other_user}","gists_url":"https://api.github.com/users/ltsaprounis/gists{/gist_id}","starred_url":"https://api.github.com/users/ltsaprounis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ltsaprounis/subscriptions","organizations_url":"https://api.github.com/users/ltsaprounis/orgs","repos_url":"https://api.github.com/users/ltsaprounis/repos","events_url":"https://api.github.com/users/ltsaprounis/events{/privacy}","received_events_url":"https://api.github.com/users/ltsaprounis/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-05-04T19:56:52Z","performed_via_github_app":null},{"id":6552083005,"node_id":"LE_lADOCVKAsc5JERdyzwAAAAGGiNo9","url":"https://api.github.com/repos/sktime/sktime/issues/events/6552083005","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-05-04T20:36:05Z","label":{"name":"API design","color":"874db7"},"performed_via_github_app":null},{"id":6552083014,"node_id":"LE_lADOCVKAsc5JERdyzwAAAAGGiNpG","url":"https://api.github.com/repos/sktime/sktime/issues/events/6552083014","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-05-04T20:36:05Z","label":{"name":"implementing framework","color":"61c7f9"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1117936716","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1117936716","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1117936716,"node_id":"IC_kwDOCVKAsc5ColxM","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-05-04T21:04:15Z","updated_at":"2022-05-04T21:04:15Z","author_association":"COLLABORATOR","body":"Trying to summarize my comments, after reading the above and looking at #2570 (\"new solution\" above).\r\n\r\n1. I think #2570 is quite well done from an implementation perspective! And it runs, nice!!\r\n2. My main issue with #2570 is that it is \"breaking\" patterns central to the sktime design. I will explain below, next post.\r\n3. I see the same issue with the third, hybrid solution (although there is less of it).\r\n4. I suspect there is a fourth solution which behaves like #2570 minus the \"pattern breakage\", although I'm not entirely sure how it would look.\r\n5. I see another hybrid here, this would have the current delegator mixin design looking for all underscore methods in the delegate and simply delegate them exactly as in the current one for forecasters. It would continue being used as an inheritance mixin. How about that?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1117936716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1117948928","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1117948928","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1117948928,"node_id":"IC_kwDOCVKAsc5CoowA","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-05-04T21:20:46Z","updated_at":"2022-05-04T21:20:46Z","author_association":"COLLABORATOR","body":"So, what do I mean with \"pattern breakage\".\r\n\r\nThe `sktime` design relies mainly on a combination of two oop patterns:\r\n\r\n* the \"strategy\" pattern - all estimators of the same type (e.g., forecasters) have indistinguishable behaviour with respect to their public interface elements. Subtlety: this is refined by tags which can indicate additional behaviour that is available, but the \"set of behaviours\" that an estimator offers is the same for all estimators of a given type. It is important for this pattern that all estimators exhibit the same \"kind of behaviour\" as dfined this way (type and tags).\r\n* the \"template\" pattern - all estimators of the same type have a common, \"boilerplate\" layer, which sits in the non-underscore functions `fit`, `predict`, etc. Specific behaviour of concrete descendants is \"filled in\" to that template via `_fit`, `_predict`, etc. It is important for this pattern that the code in the \"templated\", i.e., boilerplate layer here, is *identical* for all estimators.\r\n\r\nFurther, there is a general best practice principle of \"separation of concerns\", e.g., localizing delegator logic in one place, since not all estimators will require a kind of delegation. Most estimators in sktime, in fact, are non-composite, so have no use for delegation. Conversely, many composites are not delegates.\r\n\r\nFrom the perspective of the above.\r\n\r\nThe \"new approach\" (no.2):\r\n* breaks the template pattern, since it introduces branching behaviour on top of `fit`, which should remain untouched, for the template pattern.\r\n* does not respect separation of concerns well, since the delegation logic intrudes into the `BaseObject` base class, in a sense the most \"holy\" of all places. If it were localized to there, it would be sort-of ok (but still very invasive), but it expects to \"talk\" to logic in other classes.\r\n* the strategy pattern might also be broken, though possibly in a subtle way. By directly looping through tags and the public interface points, it seems to me we can no longer control boilerplate logic in delegate and delegating class separately. For example, suppose you want to build a delegate that first removes all missing values before applying the wrapped estimator. The outer estimator should have a memory of the data *with* the missing values, while the inner estimator should have a memory of the data *without* the missing values, but this is now by defaeult delegated. Or, an estimator that passes data in less granular batches to the wrapped one, the inner estimator should have a different `cutoff` from the outer one.\r\n\r\nThe \"hybrid approach\" (no.3) solves the \"separation of concerns\" issue, but it still seems to have the \"broken patterns\" issue, to me.\r\n\r\nAm I making sense? As said, I'm not entirely sure about the \"strategy pattern\", whether that is impacted, I would have to understand the intended usage for implementing estimators (beyond multiplexers). I see you've looked at grid search, although I can't fully visualize the usage pattern from the two examples.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1117948928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1117952106","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1117952106","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1117952106,"node_id":"IC_kwDOCVKAsc5Cophq","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-05-04T21:25:23Z","updated_at":"2022-05-04T21:32:27Z","author_association":"COLLABORATOR","body":"Some comments on specific statements of yours follow.\r\n\r\n> The solution to this is to add some logic to `__init__`, and have a `reset()` function that is called at the start of each call to `fit()`. \r\n\r\nThat is a solution to a more general problem, in fact, see here: https://github.com/alan-turing-institute/sktime/issues/2573\r\nThe delegator is impacted insofar it is an estimator whose properties depend on hyper-parameter choices, which is the more general case that is problematic (and typically appears for composites, but not only for composites).\r\n\r\n>The advantage of this approach is only the estimator actually in need of having a delegation ability is exposed to the delegation logic by inheriting from the mixin.\r\n\r\nYes, indeed. There is a more general design principle here, the \"law of Demeter\", which is an instance of the more general area of coupling/cohesion desiderata.\r\n\r\n>This approach has a disadvantage in that all `BaseEstimator`'s now have delegation logic attached to them even though many of them might not need it. \r\n\r\nThis is also common enough to have a name, it's an instance of the \"Banana, Gorilla, Jungle\" problem.\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1117952106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1117956315","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1117956315","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1117956315,"node_id":"IC_kwDOCVKAsc5Coqjb","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-05-04T21:31:32Z","updated_at":"2022-05-04T21:31:32Z","author_association":"COLLABORATOR","body":"> Note - this would stick with delegating the non-underscore classes, which I think is a good idea\r\n\r\nI think we have now analyzed sufficiently deep to identify a point where we disagree 😄 ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1117956315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1119593808","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1119593808","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1119593808,"node_id":"IC_kwDOCVKAsc5Cu6VQ","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-05-06T13:02:38Z","updated_at":"2022-05-06T13:02:38Z","author_association":"COLLABORATOR","body":"I'm reading my own writing here, @miraep8, and wondering: is attaching the `TransformerPipeline` and `TransformedTargetForecaster` etc via the dunders also not Banana/Gorilla/Jungle (but done by me)?\r\n\r\nIs there a smarter way to disentangle the individual dunders from the base classes?\r\nThe \"clean\" way is possible only in a language capable of multiple dispatch, and I would tend against introducing some multiple dispatch system just because of this. Interpreter pattern still has the coupling.\r\n\r\nPerhaps an interpreter abstraction that is coupled to each class, which in turn is coupled to the parsed expressions (classes involving `TransformerPipeline` etc)?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1119593808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"id":6563426027,"node_id":"MEE_lADOCVKAsc5JERdyzwAAAAGHNe7r","url":"https://api.github.com/repos/sktime/sktime/issues/events/6563426027","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-05-06T13:02:38Z","performed_via_github_app":null},{"id":6563426031,"node_id":"SE_lADOCVKAsc5JERdyzwAAAAGHNe7v","url":"https://api.github.com/repos/sktime/sktime/issues/events/6563426031","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-05-06T13:02:38Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1119753798","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1119753798","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1119753798,"node_id":"IC_kwDOCVKAsc5CvhZG","user":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"created_at":"2022-05-06T15:42:58Z","updated_at":"2022-05-06T15:42:58Z","author_association":"COLLABORATOR","body":"I mean.... I guess so?  To be honest, I don't know if it bothers me that much as I think there is a balance to strike between reducing some of these concerns and writing code that is easy to maintain. Personally, I also don't see a good way to get around this in python that wouldn't \"break\" our sense of inheritance (ie whether the base classes has this `__or__` functionality now depends on the context?).  This to me sounds like a bigger error?  I suppose there are ways around this too, by adding some wrappers on top of the base class, but I am worried this might add a lot of unneeded complexity. So in my mind, the dunders in the base classes is ok with me. But let me know if you come up with a clever solution :) \r\n\r\nAs to the other issues above it seems like the main point of disagreement really boils down to whether to delegate the underscore/non-underscore. I am happy to change solution 3) so it delegates the underscore methods instead, which seems like it should resolve the style/design issues? \r\n\r\nHowever switching to delegating the underscore rather than the non underscore methods doesn't get rid of the need to dynamically set tags for in order for `fit` etc to work.  I was thinking about this more, and I think perhaps a better way to handle the dynamic tag setting issue could be to actually make the current template more flexible.  ie - within `fit` and many of the other non underscore classes define a `_validate` function, that defaults to the current method of validating input, but can be overwritten by children classes. \r\n\r\nIn my mind this solves both the templating style concern and the strategy pattern. I will throw together a demo of what this would look like this weekend to more clearly show what I have in mind and tack it on as a new draft PR on top of my current one. Will also have more time this weekend to work on #2570 and convert it over to a mixing/to using the underscore methods.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1119753798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1119865037","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1119865037","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1119865037,"node_id":"IC_kwDOCVKAsc5Cv8jN","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-05-06T18:09:04Z","updated_at":"2022-05-06T18:25:07Z","author_association":"COLLABORATOR","body":"> As to the other issues above it seems like the main point of disagreement really boils down to whether to delegate the underscore/non-underscore.\r\n\r\nNo, that's not my favourite alternative.\r\nMy favourite alternative is that the wrapper underscore calls the wrapped non-underscore. That retains both strategy and template pattern.\r\n\r\nWhy we shouldn't call the underscores in a composite: anything that is not the class itself calling underscores violates the public interface, and in particular the public interface underlying the strategy pattern.\r\n\r\nWhy the call ought to go through the non-underscore and hence call from the underscore: otherwise, the template pattern would be broken.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1119865037/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1119945121","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1119945121","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1119945121,"node_id":"IC_kwDOCVKAsc5CwQGh","user":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"created_at":"2022-05-06T19:24:31Z","updated_at":"2022-05-06T20:21:07Z","author_association":"COLLABORATOR","body":"I think we are in agreement though I spoke imprecisely.  By \"delegate\" I had meant overwrite the underscore methods rather than the non-underscore methods.  But I should have said \"overwrite\" the underscore methods.  I am in agreement though - we should be calling the non-underscore on the wrapped estimator. ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1119945121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1120180714","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1120180714","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1120180714,"node_id":"IC_kwDOCVKAsc5CxJnq","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-05-07T10:09:34Z","updated_at":"2022-05-07T10:09:34Z","author_association":"COLLABORATOR","body":"ah, ok - I misunderstood then. Looking forward to the prototype!\r\nPerhaps a piece of advice, not sure if it makes sense: since we are looking at multiple options, and going from option A to option B will take some work not just conceptually but making it work. Hence, perhaps, different pull requests to contain the different prototypes make sense, at least until we have the final one.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1120180714/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"created_at":"2022-05-07T19:16:25Z","updated_at":"2022-05-07T19:16:25Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/2612","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2612/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2612/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2612/events","html_url":"https://github.com/sktime/sktime/pull/2612","id":1228702672,"node_id":"PR_kwDOCVKAsc43c9Nl","number":2612,"title":"[ENH] Created _DelegatedTransformer","user":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"labels":[{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-05-07T19:16:24Z","updated_at":"2022-05-13T10:12:43Z","closed_at":"2022-05-10T11:46:24Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/sktime/sktime/pulls/2612","html_url":"https://github.com/sktime/sktime/pull/2612","diff_url":"https://github.com/sktime/sktime/pull/2612.diff","patch_url":"https://github.com/sktime/sktime/pull/2612.patch","merged_at":"2022-05-10T11:46:23Z"},"body":"#### Reference Issues/PRs\r\n\r\nRelated to convo in #2603, and replaces #2570\r\n\r\n\r\n#### What does this implement/fix? Explain your changes.\r\n\r\nCreates a DelegatedTransformer.  Method is identical to creation of DelegatedForecaster. \r\n\r\n#### Does your contribution introduce a new dependency? If yes, which one?\r\n\r\nNo\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2612/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1120270375","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1120270375","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1120270375,"node_id":"IC_kwDOCVKAsc5Cxfgn","user":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"created_at":"2022-05-07T19:23:05Z","updated_at":"2022-05-07T19:23:05Z","author_association":"COLLABORATOR","body":"In the end I went with an implementation basically identical to the method in `DelegatedForecaster`.  Since it is basically identical to the approach taken in `DelegatedForecaster` I went ahead and made you an author as well, but again let me know if that is an issue. I don't really care either way, it just seemed like a reasonable distribution of credit in this case. \r\n\r\nThe reason why I decided to do it this way: \r\n\r\n- Using the decorator in this format doesn't really save you much as you still need to overwrite all the classes one by one, so might as well just do that and not involve the decorator (would just add complexity and not help much). \r\n- When taking this approach, making a more general `DelegatedEstimator` rather instead of having the separate `DelegatedForecaster` and `DelegatedTransformer` ends up requiring a lot more complexity to work (in my mind), as you would probably need to inherit from both `BaseForecaster` and `BaseTransformer` in that case and have some method for resolving function name conflicts.  In my mind it just wasn't worth it. \r\n\r\nSo in the end we have something very similar to approach 1, just applied to transformers instead of forecasters. ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1120270375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false}},{"id":6581234922,"node_id":"REFE_lADOCVKAsc5JERdyzwAAAAGIRazq","url":"https://api.github.com/repos/sktime/sktime/issues/events/6581234922","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"referenced","commit_id":"2a0df3f52a6fe67f5509f6199cc60f01e3dc0adf","commit_url":"https://api.github.com/repos/sktime/sktime/commits/2a0df3f52a6fe67f5509f6199cc60f01e3dc0adf","created_at":"2022-05-10T11:46:25Z","performed_via_github_app":null},{"actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-05-20T17:57:26Z","updated_at":"2022-05-20T17:57:26Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/2670","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2670/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2670/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2670/events","html_url":"https://github.com/sktime/sktime/issues/2670","id":1243457602,"node_id":"I_kwDOCVKAsc5KHahC","number":2670,"title":"[ENH] MultiplexTransformer Discussion","user":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"labels":[{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"},{"id":1180366006,"node_id":"MDU6TGFiZWwxMTgwMzY2MDA2","url":"https://api.github.com/repos/sktime/sktime/labels/implementing%20framework","name":"implementing framework","color":"61c7f9","default":false,"description":"Implementing frameworks for new learning tasks"},{"id":3105907331,"node_id":"MDU6TGFiZWwzMTA1OTA3MzMx","url":"https://api.github.com/repos/sktime/sktime/labels/module:transformations","name":"module:transformations","color":"0865AF","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":26,"created_at":"2022-05-20T17:53:03Z","updated_at":"2022-07-07T16:02:32Z","closed_at":"2022-07-07T15:49:53Z","author_association":"COLLABORATOR","active_lock_reason":null,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"During the community meetup today @aiwalter and @indinewton suggested it would be useful to create this issue to discuss the implementation of a  `MultiplexTransformer`.  After getting a chance to check out `OptionalPassthrough` I think we might not need build this thing at all (I agree it could be a bad idea to have multiple areas of the code base with such overlapping/similar functionality).  But - it did leave me with some questions/ideas about some potential use cases that might be worth expanding the current model to support: \r\n\r\n#### Some Background:\r\n\r\n- The original idea  to make a `MultiplexTransformer` came from a suggestion in #2459 that it would be nice to create a `MultiplexTransformer` to complement the `MultiplexForecaster`.\r\n- As of #2612 we have implemented a `_DelegatedTransformer` to facilitate implementation of `MultiplexTransformer` in a similar way to how `MultiplexForecaster` has been written. \r\n- As was mentioned in the community meeting however - it seems like the `OptionalPassthrough` transformer can already do most of what we would want to do with the `MultiplexTransformer` though performing a grid search over its `passthrough` variable.  (A solution which I was not aware of, thank you for bringing it up!)\r\n\r\n#### Some remaining questions/ideas I had:\r\n\r\n-  **Question 1 - What if we want to use exactly 1 Transformer from a list of `n` transformers?**.  It seems to me with the current system if we did something like this (borrowed from the docstring example for `OptionalPassthrough`):\r\n\r\n```\r\npipe = TransformedTargetForecaster(steps=[\r\n    (\"deseasonalizer\", OptionalPassthrough(Deseasonalizer())),\r\n    (\"scaler\", OptionalPassthrough(TabularToSeriesAdaptor(StandardScaler()))),\r\n    (\"forecaster\", NaiveForecaster())])\r\n# putting it all together in a grid search\r\ncv = SlidingWindowSplitter(\r\n    initial_window=60,\r\n    window_length=24,\r\n    start_with_window=True,\r\n    step_length=48)\r\nparam_grid = {\r\n    \"deseasonalizer__passthrough\" : [True, False],\r\n    \"scaler__transformer__transformer__with_mean\": [True, False],\r\n    \"scaler__passthrough\" : [True, False],\r\n    \"forecaster__strategy\": [\"drift\", \"mean\", \"last\"]}\r\ngscv = ForecastingGridSearchCV(\r\n    forecaster=pipe,\r\n    param_grid=param_grid,\r\n    cv=cv,\r\n    n_jobs=-1)\r\ngscv_fitted = gscv.fit(load_airline())\r\n```\r\nThen we could actually end up with a situation where we either skip both `deseasonalizer` and `scaler` or include them both.  One might imagine it *could* be nice in some situations to specify that we want exactly one transformer from a list of transformers. Having a `MultiplexTransformer` is one way to achieve this (I didn't see a good way to do this with the current system), though I imagine it could also be supported by making some modifications to `param_grid` (ie could we specify pairs of variables simultaneously).  Personally I like the second idea, but I am not sure that it is the \"best solution\"\r\n\r\n- **Question 2: What is the best way to support \"multiplexing\" over pairs of transformers/forecasters simultaneously?**  (eg, maybe some transformations are needed for certain forecasters).  The way that springs to mind would be to create a separate `ForecastingPipeline` or a `TransformedTargetForecaster` for each pair, and then put all the pairs into a `MultiplexForecaster`?   Would it be worth building a cleaner work around? (a similar question/solution springs to mind in the case where we had a list of known transformations to use but we wanted to select the optimal ordering ie `trans_a` -> `trans_b` vs `trans_b` -> `trans_a`) \r\n \r\n\r\n#### What should be resolved:\r\n\r\n- [ ] Identify any meaningful use cases that either a) something like a `MultiplexTransformer` could uniquely support or b) that are worth expanding the current `OptionalPassthrough` approach to support as well?\r\n- [ ] Should we clean up (ie delete) the `DelegatedTransformer` code if we don't need it? \r\n\r\nLastly - I wonder if there is some way we can more easily inform people of the existence of `OptionalPassthrough`?  (Clearly people know about it!!  But I had missed it (which may of course just be on me)!  Thoughts on a Documentation page which has all the various Pipeline/model selection components? (and related dunders?)) ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2670/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-07-26T17:19:27Z","updated_at":"2022-07-26T17:19:27Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/3102","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3102/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3102/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3102/events","html_url":"https://github.com/sktime/sktime/pull/3102","id":1318543173,"node_id":"PR_kwDOCVKAsc48IM9s","number":3102,"title":"[ENH] refactor `RocketClassifier` to pipeline delegate","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":3102418261,"node_id":"MDU6TGFiZWwzMTAyNDE4MjYx","url":"https://api.github.com/repos/sktime/sktime/labels/module:classification","name":"module:classification","color":"BEB114","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2022-07-26T17:19:26Z","updated_at":"2022-07-27T21:14:25Z","closed_at":"2022-07-27T21:14:24Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/sktime/sktime/pulls/3102","html_url":"https://github.com/sktime/sktime/pull/3102","diff_url":"https://github.com/sktime/sktime/pull/3102.diff","patch_url":"https://github.com/sktime/sktime/pull/3102.patch","merged_at":"2022-07-27T21:14:24Z"},"body":"Many classifiers in the classification module are just \"special names\" for simple [transformer][classifier] pipelines.\r\n\r\nThis is the first PR in an intended refactor of the classification module to expose those \"special classifier pipeliens\" as shorthand delegates for said pipelines, in the form of `ClassifierPipeline`.\r\n\r\nThis PR:\r\n* adds `_DelegatedClassifier`, similar to `_DelegatedForecaster` and `_DelegatedTransformer`\r\n* refactors `RocketClassifier` as a specific `_DelegatedClassifier`\r\n\r\nMinor changes:\r\ndocstrings in the extension template for classifier seemed out of date, these were fixed.\r\n\r\nRelies on https://github.com/alan-turing-institute/sktime/pull/3104 which fixes unreported bugs in `predict_proba` defaulting of classifiers that this has uncovered.\r\n\r\nRelated PR: https://github.com/alan-turing-institute/sktime/pull/767\r\n(was going through old PRs and seeing what could be done easily)\r\n\r\nRelated issue: https://github.com/alan-turing-institute/sktime/issues/2603\r\n(on delegator design - I notice the delegator class for regression/classification could be identical, if it weren't for docstrings!)\r\n\r\nFYI @MatthewMiddlehurst, @victordremov (re `RocketClassifier`) and @miraep8 (re delegator)","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3102/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195775178","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1195775178","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1195775178,"node_id":"IC_kwDOCVKAsc5HRhTK","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-07-26T17:31:46Z","updated_at":"2022-07-26T17:31:46Z","author_association":"COLLABORATOR","body":"Inspiration from #3102: \"multiplexer base class\" which delegates to all base classes, according to a tag or attribute.\r\n\r\nWould use of this be the solution to the generic delegator?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195775178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195850682","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1195850682","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1195850682,"node_id":"IC_kwDOCVKAsc5HRzu6","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-07-26T18:42:18Z","updated_at":"2022-07-26T18:42:42Z","author_association":"COLLABORATOR","body":"moving comments from @miraep8 from #3102 here:\r\n\r\nYes! I totally agree that this is an interesting connection/motivation, and I would say is connected with some of the discussion we have had with the pywatts people about whether or not there is any value in \"considering everything a graph\" (which personally I think there is)!\r\n\r\nSeveral thoughts with this - I think that trying to dynamically set the base class is perhaps messy... I think it is possible that it might be able to be done, but I personally am not sure it is the best line of evidence.\r\n\r\nOne way that you could imagine doing this is having a very simple base class that simply tests the types of objects it wraps /has been passed and applies functionality appropriately. - ie do I have a forecaster in my sequence of estimators? ok then I can behave as a forecaster, if not raise an error. Same for annotators.\r\n\r\nPersonally though I think this is further evidence that there is merit in a very simple BaseEstimator/Object where additional functionality can be added on via composition! But of course I am biased in favor of that solution/would be interested in seeing if anyone else had a better solution in mind! :)\r\n\r\nAnd yes, on this note to some degree I think that some of the issues that came up in the discussion about a more general Multiplexer/a more general Delegator are related to the design issues that were brought up here as well/the current templating design.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195850682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"id":7067341588,"node_id":"MEE_lADOCVKAsc5JERdyzwAAAAGlPxMU","url":"https://api.github.com/repos/sktime/sktime/issues/events/7067341588","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-07-26T18:42:19Z","performed_via_github_app":null},{"id":7067341593,"node_id":"SE_lADOCVKAsc5JERdyzwAAAAGlPxMZ","url":"https://api.github.com/repos/sktime/sktime/issues/events/7067341593","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-07-26T18:42:19Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195851393","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1195851393","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1195851393,"node_id":"IC_kwDOCVKAsc5HRz6B","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-07-26T18:43:08Z","updated_at":"2022-07-26T18:43:08Z","author_association":"COLLABORATOR","body":"> Personally though I think this is further evidence that there is merit in a very simple BaseEstimator/Object where additional functionality can be added on via composition! But of course I am biased in favor of that solution/would be interested in seeing if anyone else had a better solution in mind! :)\r\n\r\nBut would a polymorphic multiplexer base class not be a prime example of composition? It takes the \"specific\" base classes as components!","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195851393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195860026","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1195860026","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1195860026,"node_id":"IC_kwDOCVKAsc5HR2A6","user":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"created_at":"2022-07-26T18:52:26Z","updated_at":"2022-07-26T18:52:26Z","author_association":"COLLABORATOR","body":"Yes!!  Absolutely.  I suspect we might agree -but in case we aren't - to clarify my point was more - there seems to be value in having a more general `BaseClass` that could facilitate this polymorphism.  Currently there is some question of what should each multiplexer inherit from?  `BaseForecaster`? `BaseTransformer`? When in reality we want a more general `BaseObject` that supports basic scikit-learn compatibility and can also support more specific functionality etc via composition? \r\n\r\nI think this could lead to just one universal `BaseObject` rather than a specific `BaseMultiplexer`","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195860026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195982189","html_url":"https://github.com/sktime/sktime/issues/2603#issuecomment-1195982189","issue_url":"https://api.github.com/repos/sktime/sktime/issues/2603","id":1195982189,"node_id":"IC_kwDOCVKAsc5HST1t","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2022-07-26T21:07:16Z","updated_at":"2022-07-26T21:14:25Z","author_association":"COLLABORATOR","body":">I think this could lead to just one universal `BaseObject` rather than a specific `BaseMultiplexer`\r\n\r\nWe already have a `BaseObject`!\r\n\r\nI think the class diagram looks like this:\r\n\r\n* `BasePolymorph` inherits from `BaseObject`\r\n* `BasePolymorph` is a multiplexer composite of all other estimator base classes\r\n* `Multiplexer` inherits from `BasePolymorph`","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1195982189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}}]