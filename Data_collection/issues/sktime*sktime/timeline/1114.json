[{"id":4979909331,"node_id":"MDEyOkxhYmVsZWRFdmVudDQ5Nzk5MDkzMzE=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4979909331","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2021-07-05T19:40:39Z","label":{"name":"bug","color":"d73a4a"},"performed_via_github_app":null},{"id":4979909333,"node_id":"MDEyOkxhYmVsZWRFdmVudDQ5Nzk5MDkzMzM=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4979909333","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2021-07-05T19:40:39Z","label":{"name":"module:classification","color":"BEB114"},"performed_via_github_app":null},{"id":4979909348,"node_id":"MDEzOkFzc2lnbmVkRXZlbnQ0OTc5OTA5MzQ4","url":"https://api.github.com/repos/sktime/sktime/issues/events/4979909348","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"assigned","commit_id":null,"commit_url":null,"created_at":"2021-07-05T19:40:39Z","assignee":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"performed_via_github_app":null},{"actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2021-07-05T19:43:31Z","updated_at":"2021-07-05T19:43:31Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/1026","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1026/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1026/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1026/events","html_url":"https://github.com/sktime/sktime/pull/1026","id":928233506,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc2MjY2ODk3","number":1026,"title":"TSC base template refactor","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":3102418261,"node_id":"MDU6TGFiZWwzMTAyNDE4MjYx","url":"https://api.github.com/repos/sktime/sktime/labels/module:classification","name":"module:classification","color":"BEB114","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":32,"created_at":"2021-06-23T13:02:44Z","updated_at":"2021-07-10T22:31:21Z","closed_at":"2021-07-10T22:31:21Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/sktime/sktime/pulls/1026","html_url":"https://github.com/sktime/sktime/pull/1026","diff_url":"https://github.com/sktime/sktime/pull/1026.diff","patch_url":"https://github.com/sktime/sktime/pull/1026.patch","merged_at":"2021-07-10T22:31:21Z"},"body":"I've started refactoring the time series classification base template according to #993.\r\n\r\nThis is just a start, but I would like to:\r\n\r\n* move what is now \"capabilities\" to a joint \"tags\" systems across all estimator scitypes\r\n* add functionality to handle multiple input types along the lines of #980, especially since some estimators assume nested df and some assume numpy\r\n* refactor TSC similar to #955\r\n\r\n@TonyBagnall, we will be discussing tags today  in the core dev sprint hours, with @mloning, @aiwalterand @thayeylolu - would be great if you could join.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1026/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/874901110","html_url":"https://github.com/sktime/sktime/issues/1114#issuecomment-874901110","issue_url":"https://api.github.com/repos/sktime/sktime/issues/1114","id":874901110,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDkwMTExMA==","user":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"created_at":"2021-07-06T16:20:03Z","updated_at":"2021-07-06T16:20:03Z","author_association":"CONTRIBUTOR","body":"what is the actual error thrown and do you have a stack trace to give an indication of where it occurs? I am not familiar with the orchestration code. What is it actually testing? ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/874901110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false}},{"actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2021-07-08T20:30:14Z","updated_at":"2021-07-08T20:30:14Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/1122","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1122/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1122/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1122/events","html_url":"https://github.com/sktime/sktime/pull/1122","id":940197866,"node_id":"MDExOlB1bGxSZXF1ZXN0Njg2MzA1OTE5","number":1122,"title":"[BUG] TESTING branch to reproduce proximity forest test bug","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-07-08T20:30:14Z","updated_at":"2022-03-21T23:04:32Z","closed_at":"2022-02-28T21:54:41Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":true,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/sktime/sktime/pulls/1122","html_url":"https://github.com/sktime/sktime/pull/1122","diff_url":"https://github.com/sktime/sktime/pull/1122.diff","patch_url":"https://github.com/sktime/sktime/pull/1122.patch","merged_at":null},"body":"TESTING - NOT FOR MERGE\r\n\r\nThis PR is for convenience to reproduce the proximity forest test bug discussed in #1114, arising from #1026.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1122/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/876726815","html_url":"https://github.com/sktime/sktime/issues/1114#issuecomment-876726815","issue_url":"https://api.github.com/repos/sktime/sktime/issues/1114","id":876726815,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NjcyNjgxNQ==","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2021-07-08T20:31:25Z","updated_at":"2021-07-08T20:31:25Z","author_association":"COLLABORATOR","body":"I've opened a branch that reproduces the error, see PR #1122.\r\n\r\nYou should be able to see the trace if you go on any failing check.\r\n\r\nAlternatively, you can manually run `test_orchestration.test_stat` in that branch.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/876726815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/876759274","html_url":"https://github.com/sktime/sktime/issues/1114#issuecomment-876759274","issue_url":"https://api.github.com/repos/sktime/sktime/issues/1114","id":876759274,"node_id":"MDEyOklzc3VlQ29tbWVudDg3Njc1OTI3NA==","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2021-07-08T21:29:56Z","updated_at":"2021-07-08T21:31:22Z","author_association":"COLLABORATOR","body":"Here is the traceback, @TonyBagnall:\r\n```\r\n2021-07-08T21:14:09.0945458Z __________________________________ test_stat ___________________________________\r\n2021-07-08T21:14:09.0945931Z \r\n2021-07-08T21:14:09.0946415Z     def test_stat():\r\n2021-07-08T21:14:09.0946983Z         data = load_gunpoint(split=\"train\")\r\n2021-07-08T21:14:09.0947838Z         dataset = RAMDataset(dataset=data, name=\"gunpoint\")\r\n2021-07-08T21:14:09.0948455Z         task = TSCTask(target=\"class_val\")\r\n2021-07-08T21:14:09.0949163Z     \r\n2021-07-08T21:14:09.0949749Z         fc = ComposableTimeSeriesForestClassifier(n_estimators=1, random_state=1)\r\n2021-07-08T21:14:09.0950379Z         strategy_fc = TSCStrategy(fc, name=\"tsf\")\r\n2021-07-08T21:14:09.0950990Z         pf = ProximityForest(n_estimators=1, random_state=1)\r\n2021-07-08T21:14:09.0951597Z         strategy_pf = TSCStrategy(pf, name=\"pf\")\r\n2021-07-08T21:14:09.0952185Z     \r\n2021-07-08T21:14:09.0952675Z         # result backend\r\n2021-07-08T21:14:09.0953217Z         results = RAMResults()\r\n2021-07-08T21:14:09.0953768Z         orchestrator = Orchestrator(\r\n2021-07-08T21:14:09.0954324Z             datasets=[dataset],\r\n2021-07-08T21:14:09.0954861Z             tasks=[task],\r\n2021-07-08T21:14:09.0955413Z             strategies=[strategy_pf, strategy_fc],\r\n2021-07-08T21:14:09.0956000Z             cv=SingleSplit(random_state=1),\r\n2021-07-08T21:14:09.0956569Z             results=results,\r\n2021-07-08T21:14:09.0957084Z         )\r\n2021-07-08T21:14:09.0957566Z     \r\n2021-07-08T21:14:09.0959785Z >       orchestrator.fit_predict(save_fitted_strategies=False)\r\n2021-07-08T21:14:09.0960021Z \r\n2021-07-08T21:14:09.0960348Z data       =                                                 dim_0 class_val\r\n2021-07-08T21:14:09.0961260Z 0   0     -0.64789\r\n2021-07-08T21:14:09.0961718Z 1     -0.64199\r\n2021-07-08T21:14:09.0962152Z 2     -0.63819\r\n2021-07-08T21:14:09.0962582Z 3... ...  -0.70303\r\n2021-07-08T21:14:09.0963014Z 1     -0.70262\r\n2021-07-08T21:14:09.0963416Z 2     -0.70250\r\n2021-07-08T21:14:09.0963710Z 3...         1\r\n2021-07-08T21:14:09.0964107Z 49  0     -1.4357\r\n2021-07-08T21:14:09.0964529Z 1     -1.4323\r\n2021-07-08T21:14:09.0964925Z 2     -1.4329\r\n2021-07-08T21:14:09.0965221Z 3   ...         2\r\n2021-07-08T21:14:09.0965513Z dataset    = RAMDataset(name=gunpoint)\r\n2021-07-08T21:14:09.0965900Z fc         = ComposableTimeSeriesForestClassifier(bootstrap=False, class_weight=None,\r\n2021-07-08T21:14:09.0966377Z                                      criterio...                     oob_score=False, random_state=1, verbose=0,\r\n2021-07-08T21:14:09.0966846Z                                      warm_start=False)\r\n2021-07-08T21:14:09.0967256Z orchestrator = <sktime.benchmarking.orchestration.Orchestrator object at 0x7f758a8d1d30>\r\n2021-07-08T21:14:09.0967687Z pf         = ProximityForest(distance_measure=None, find_stump=None,\r\n2021-07-08T21:14:09.0968057Z                 get_distance_measure=None,\r\n2021-07-08T21:14:09.0968482Z                 get...up_distance_measure_getter=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.0968875Z                 verbosity=0)\r\n2021-07-08T21:14:09.0969215Z results    = RAMResults(strategies=[], datasets=[], cv_folds=1)\r\n2021-07-08T21:14:09.0969760Z strategy_fc = TSCStrategy(ComposableTimeSeriesForestClassifier(estimator=ComposableTimeSeriesForestClassifier(bootstrap=False, class... oob_score=False, random_state=1, verbose=0,\r\n2021-07-08T21:14:09.0970319Z                                      warm_start=False),\r\n2021-07-08T21:14:09.0970794Z       name='tsf'))\r\n2021-07-08T21:14:09.0971206Z strategy_pf = TSCStrategy(ProximityForest(estimator=ProximityForest(distance_measure=None, find_stump=None,\r\n2021-07-08T21:14:09.0971714Z                 get_dist..._getter=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.0972114Z                 verbosity=0),\r\n2021-07-08T21:14:09.0972537Z       name='pf'))\r\n2021-07-08T21:14:09.0973065Z task       = TSCTask(features=Index(['dim_0'], dtype='object'),\r\n2021-07-08T21:14:09.0973861Z     metadata={'nrow': 37, 'ncol': 2, 'target_type': {'class_val': <class 'str'>}, 'feature_type': {'dim_0': {<class 'pandas.core.series.Series'>}}},\r\n2021-07-08T21:14:09.0974531Z     target='class_val')\r\n2021-07-08T21:14:09.0974720Z \r\n2021-07-08T21:14:09.0975294Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/benchmarking/tests/test_orchestration.py:186: \r\n2021-07-08T21:14:09.0975999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n2021-07-08T21:14:09.0976732Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/benchmarking/orchestration.py:218: in fit_predict\r\n2021-07-08T21:14:09.0977306Z     y_pred = strategy.predict(test)\r\n2021-07-08T21:14:09.0977615Z         cv_fold    = 0\r\n2021-07-08T21:14:09.0977957Z         data       =                                                 dim_0 class_val\r\n2021-07-08T21:14:09.0978477Z 0   0     -0.64789\r\n2021-07-08T21:14:09.0978911Z 1     -0.64199\r\n2021-07-08T21:14:09.0979333Z 2     -0.63819\r\n2021-07-08T21:14:09.0979758Z 3... ...  -0.70303\r\n2021-07-08T21:14:09.0980161Z 1     -0.70262\r\n2021-07-08T21:14:09.0980581Z 2     -0.70250\r\n2021-07-08T21:14:09.0980891Z 3...         1\r\n2021-07-08T21:14:09.0981298Z 49  0     -1.4357\r\n2021-07-08T21:14:09.0981703Z 1     -1.4323\r\n2021-07-08T21:14:09.0982115Z 2     -1.4329\r\n2021-07-08T21:14:09.0984349Z 3   ...         2\r\n2021-07-08T21:14:09.0984861Z         dataset    = RAMDataset(name=gunpoint)\r\n2021-07-08T21:14:09.0985699Z         fit_estimator_end_time = Timestamp('2021-07-08 20:43:04.309179')\r\n2021-07-08T21:14:09.0986583Z         fit_estimator_start_time = Timestamp('2021-07-08 20:43:02.934694')\r\n2021-07-08T21:14:09.0987645Z         fitted_stategy_exists = False\r\n2021-07-08T21:14:09.0988184Z         overwrite_fitted_strategies = False\r\n2021-07-08T21:14:09.0988529Z         overwrite_predictions = False\r\n2021-07-08T21:14:09.0989172Z         predict_estimator_start_time = Timestamp('2021-07-08 20:43:04.309422')\r\n2021-07-08T21:14:09.0989966Z         predict_on_train = False\r\n2021-07-08T21:14:09.0990301Z         save_fitted_strategies = False\r\n2021-07-08T21:14:09.0990719Z         self       = <sktime.benchmarking.orchestration.Orchestrator object at 0x7f758a8d1d30>\r\n2021-07-08T21:14:09.0991367Z         strategy   = TSCStrategy(ProximityForest(estimator=ProximityForest(distance_measure=<function distance_predefined_params.<locals>.d..._getter=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.0991956Z                 verbosity=0),\r\n2021-07-08T21:14:09.0992403Z       name='pf'))\r\n2021-07-08T21:14:09.0992980Z         task       = TSCTask(features=Index(['dim_0'], dtype='object'),\r\n2021-07-08T21:14:09.0994137Z     metadata={'nrow': 37, 'ncol': 2, 'target_type': {'class_val': <class 'str'>}, 'feature_type': {'dim_0': {<class 'pandas.core.series.Series'>}}},\r\n2021-07-08T21:14:09.0994807Z     target='class_val')\r\n2021-07-08T21:14:09.0995189Z         test       =                                                 dim_0 class_val\r\n2021-07-08T21:14:09.0995693Z 27  0     -1.0810\r\n2021-07-08T21:14:09.0996479Z 1     -1.0789\r\n2021-07-08T21:14:09.0996940Z 2     -1.0795\r\n2021-07-08T21:14:09.0997392Z 3   ... ...  -1.1132\r\n2021-07-08T21:14:09.1001456Z 1     -1.1132\r\n2021-07-08T21:14:09.1002128Z 2     -1.1143\r\n2021-07-08T21:14:09.1002564Z 3   ...         2\r\n2021-07-08T21:14:09.1003069Z 21  0     -0.76929\r\n2021-07-08T21:14:09.1003638Z 1     -0.77280\r\n2021-07-08T21:14:09.1004198Z 2     -0.76754\r\n2021-07-08T21:14:09.1004608Z 3...         1\r\n2021-07-08T21:14:09.1005025Z         test_idx   = array([27, 35, 40, 38,  2,  3, 48, 29, 46, 31, 32, 39, 21])\r\n2021-07-08T21:14:09.1005492Z         test_pred_exist = False\r\n2021-07-08T21:14:09.1005949Z         train      =                                                 dim_0 class_val\r\n2021-07-08T21:14:09.1006555Z 36  0     -1.2870\r\n2021-07-08T21:14:09.1007088Z 1     -1.2824\r\n2021-07-08T21:14:09.1007644Z 2     -1.3037\r\n2021-07-08T21:14:09.1008200Z 3   ... ...  -1.1602\r\n2021-07-08T21:14:09.1008758Z 1     -1.2430\r\n2021-07-08T21:14:09.1009319Z 2     -1.2543\r\n2021-07-08T21:14:09.1009731Z 3   ...         1\r\n2021-07-08T21:14:09.1010244Z 37  0     -0.54635\r\n2021-07-08T21:14:09.1010799Z 1     -0.54858\r\n2021-07-08T21:14:09.1011332Z 2     -0.54965\r\n2021-07-08T21:14:09.1011737Z 3...         2\r\n2021-07-08T21:14:09.1012192Z         train_idx  = array([36, 19, 42, 49, 26, 22, 13, 41, 17, 45, 24, 23,  4, 33, 14, 30, 10,\r\n2021-07-08T21:14:09.1012736Z        28, 44, 34, 18, 20, 25,  6,  7, 47,  1, 16,  0, 15,  5, 11,  9,  8,\r\n2021-07-08T21:14:09.1013357Z        12, 43, 37])\r\n2021-07-08T21:14:09.1013720Z         train_pred_exist = False\r\n2021-07-08T21:14:09.1014099Z         verbose    = False\r\n2021-07-08T21:14:09.1014602Z         y_true     = 27    1\r\n2021-07-08T21:14:09.1014963Z 35    1\r\n2021-07-08T21:14:09.1015267Z 40    2\r\n2021-07-08T21:14:09.1015583Z 38    2\r\n2021-07-08T21:14:09.1015902Z 2     1\r\n2021-07-08T21:14:09.1016222Z 3     1\r\n2021-07-08T21:14:09.1016524Z 48    1\r\n2021-07-08T21:14:09.1016843Z 29    1\r\n2021-07-08T21:14:09.1017160Z 46    1\r\n2021-07-08T21:14:09.1017477Z 31    2\r\n2021-07-08T21:14:09.1017776Z 32    2\r\n2021-07-08T21:14:09.1018100Z 39    2\r\n2021-07-08T21:14:09.1018421Z 21    1\r\n2021-07-08T21:14:09.1018937Z Name: class_val, dtype: object\r\n2021-07-08T21:14:09.1019808Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/benchmarking/strategies.py:253: in predict\r\n2021-07-08T21:14:09.1021165Z     return self.estimator.predict(X)\r\n2021-07-08T21:14:09.1021685Z         X          =                                                 dim_0\r\n2021-07-08T21:14:09.1022395Z 27  0     -1.0810\r\n2021-07-08T21:14:09.1023004Z 1     -1.0789\r\n2021-07-08T21:14:09.1023616Z 2     -1.0795\r\n2021-07-08T21:14:09.1024398Z 3   ...\r\n2021-07-08T21:14:09.1025070Z 35  0     ....97764\r\n2021-07-08T21:14:09.1025388Z 3...\r\n2021-07-08T21:14:09.1025877Z 39  0     -1.1132\r\n2021-07-08T21:14:09.1026428Z 1     -1.1132\r\n2021-07-08T21:14:09.1026974Z 2     -1.1143\r\n2021-07-08T21:14:09.1027348Z 3   ...\r\n2021-07-08T21:14:09.1027845Z 21  0     -0.76929\r\n2021-07-08T21:14:09.1028401Z 1     -0.77280\r\n2021-07-08T21:14:09.1028950Z 2     -0.76754\r\n2021-07-08T21:14:09.1029324Z 3...\r\n2021-07-08T21:14:09.1029750Z         data       =                                                 dim_0 class_val\r\n2021-07-08T21:14:09.1030351Z 27  0     -1.0810\r\n2021-07-08T21:14:09.1030900Z 1     -1.0789\r\n2021-07-08T21:14:09.1031432Z 2     -1.0795\r\n2021-07-08T21:14:09.1031995Z 3   ... ...  -1.1132\r\n2021-07-08T21:14:09.1032551Z 1     -1.1132\r\n2021-07-08T21:14:09.1033091Z 2     -1.1143\r\n2021-07-08T21:14:09.1033480Z 3   ...         2\r\n2021-07-08T21:14:09.1033991Z 21  0     -0.76929\r\n2021-07-08T21:14:09.1034544Z 1     -0.77280\r\n2021-07-08T21:14:09.1035089Z 2     -0.76754\r\n2021-07-08T21:14:09.1035480Z 3...         1\r\n2021-07-08T21:14:09.1036086Z         self       = TSCStrategy(ProximityForest(estimator=ProximityForest(distance_measure=<function distance_predefined_params.<locals>.d..._getter=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1036727Z                 verbosity=0),\r\n2021-07-08T21:14:09.1037277Z       name='pf'))\r\n2021-07-08T21:14:09.1038324Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/base.py:111: in predict\r\n2021-07-08T21:14:09.1038934Z     y = self._predict(X)\r\n2021-07-08T21:14:09.1039630Z         X          = array([[[-1.081  , -1.0789 , -1.0795 , ..., -1.187  , -1.1738 ,\r\n2021-07-08T21:14:09.1054426Z          -1.1666 ]],\r\n2021-07-08T21:14:09.1054892Z \r\n2021-07-08T21:14:09.1055631Z        [[-0.60447, -0.60808, -0...., -1.175  ,\r\n2021-07-08T21:14:09.1056323Z          -1.1749 ]],\r\n2021-07-08T21:14:09.1056612Z \r\n2021-07-08T21:14:09.1057438Z        [[-0.76929, -0.7728 , -0.76754, ..., -0.99739, -0.99621,\r\n2021-07-08T21:14:09.1058317Z          -0.99484]]])\r\n2021-07-08T21:14:09.1058774Z         coerce_to_numpy = True\r\n2021-07-08T21:14:09.1059349Z         self       = ProximityForest(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334048>,\r\n2021-07-08T21:14:09.1060191Z           ...up_distance_measure_getter=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1060869Z                 verbosity=0)\r\n2021-07-08T21:14:09.1061766Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/base.py:163: in _predict\r\n2021-07-08T21:14:09.1062339Z     distributions = self.predict_proba(X)\r\n2021-07-08T21:14:09.1063023Z         X          = array([[[-1.081  , -1.0789 , -1.0795 , ..., -1.187  , -1.1738 ,\r\n2021-07-08T21:14:09.1063698Z          -1.1666 ]],\r\n2021-07-08T21:14:09.1064151Z \r\n2021-07-08T21:14:09.1064748Z        [[-0.60447, -0.60808, -0...., -1.175  ,\r\n2021-07-08T21:14:09.1065556Z          -1.1749 ]],\r\n2021-07-08T21:14:09.1066012Z \r\n2021-07-08T21:14:09.1067638Z        [[-0.76929, -0.7728 , -0.76754, ..., -0.99739, -0.99621,\r\n2021-07-08T21:14:09.1069277Z          -0.99484]]])\r\n2021-07-08T21:14:09.1070777Z         self       = ProximityForest(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334048>,\r\n2021-07-08T21:14:09.1072598Z           ...up_distance_measure_getter=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1073294Z                 verbosity=0)\r\n2021-07-08T21:14:09.1074446Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:1420: in predict_proba\r\n2021-07-08T21:14:09.1075187Z     distributions = [self._predict_proba_tree(X, tree) for tree in self.trees]\r\n2021-07-08T21:14:09.1075737Z         X          =                                                  var_0\r\n2021-07-08T21:14:09.1076378Z -1   0     -1.0810\r\n2021-07-08T21:14:09.1077121Z 1     -1.0789\r\n2021-07-08T21:14:09.1078024Z 2     -1.0795\r\n2021-07-08T21:14:09.1078491Z 3   ...\r\n2021-07-08T21:14:09.1079010Z -2   0  ...7764\r\n2021-07-08T21:14:09.1079402Z 3...\r\n2021-07-08T21:14:09.1079913Z -12  0     -1.1132\r\n2021-07-08T21:14:09.1080477Z 1     -1.1132\r\n2021-07-08T21:14:09.1081043Z 2     -1.1143\r\n2021-07-08T21:14:09.1081427Z 3   ...\r\n2021-07-08T21:14:09.1081938Z -13  0     -0.76929\r\n2021-07-08T21:14:09.1082505Z 1     -0.77280\r\n2021-07-08T21:14:09.1083068Z 2     -0.76754\r\n2021-07-08T21:14:09.1083450Z 3...\r\n2021-07-08T21:14:09.1084826Z         self       = ProximityForest(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334048>,\r\n2021-07-08T21:14:09.1085745Z           ...up_distance_measure_getter=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1086370Z                 verbosity=0)\r\n2021-07-08T21:14:09.1087718Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:1420: in <listcomp>\r\n2021-07-08T21:14:09.1088472Z     distributions = [self._predict_proba_tree(X, tree) for tree in self.trees]\r\n2021-07-08T21:14:09.1088997Z         .0         = <list_iterator object at 0x7f7586e5b9b0>\r\n2021-07-08T21:14:09.1089504Z         X          =                                                  var_0\r\n2021-07-08T21:14:09.1090124Z -1   0     -1.0810\r\n2021-07-08T21:14:09.1090689Z 1     -1.0789\r\n2021-07-08T21:14:09.1091264Z 2     -1.0795\r\n2021-07-08T21:14:09.1091682Z 3   ...\r\n2021-07-08T21:14:09.1092197Z -2   0  ...7764\r\n2021-07-08T21:14:09.1092582Z 3...\r\n2021-07-08T21:14:09.1093094Z -12  0     -1.1132\r\n2021-07-08T21:14:09.1093825Z 1     -1.1132\r\n2021-07-08T21:14:09.1094383Z 2     -1.1143\r\n2021-07-08T21:14:09.1094769Z 3   ...\r\n2021-07-08T21:14:09.1095279Z -13  0     -0.76929\r\n2021-07-08T21:14:09.1095851Z 1     -0.77280\r\n2021-07-08T21:14:09.1096413Z 2     -0.76754\r\n2021-07-08T21:14:09.1096794Z 3...\r\n2021-07-08T21:14:09.1097290Z         self       = ProximityForest(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334048>,\r\n2021-07-08T21:14:09.1097916Z           ...up_distance_measure_getter=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1098408Z                 verbosity=0)\r\n2021-07-08T21:14:09.1098923Z         tree       = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334400>,\r\n2021-07-08T21:14:09.1099518Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1100007Z               verbosity=0)\r\n2021-07-08T21:14:09.1100811Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:1392: in _predict_proba_tree\r\n2021-07-08T21:14:09.1101439Z     return tree.predict_proba(X)\r\n2021-07-08T21:14:09.1101934Z         X          =                                                  var_0\r\n2021-07-08T21:14:09.1102736Z -1   0     -1.0810\r\n2021-07-08T21:14:09.1103298Z 1     -1.0789\r\n2021-07-08T21:14:09.1103863Z 2     -1.0795\r\n2021-07-08T21:14:09.1104260Z 3   ...\r\n2021-07-08T21:14:09.1104899Z -2   0  ...7764\r\n2021-07-08T21:14:09.1105309Z 3...\r\n2021-07-08T21:14:09.1105814Z -12  0     -1.1132\r\n2021-07-08T21:14:09.1106380Z 1     -1.1132\r\n2021-07-08T21:14:09.1106914Z 2     -1.1143\r\n2021-07-08T21:14:09.1107314Z 3   ...\r\n2021-07-08T21:14:09.1107823Z -13  0     -0.76929\r\n2021-07-08T21:14:09.1108392Z 1     -0.77280\r\n2021-07-08T21:14:09.1108932Z 2     -0.76754\r\n2021-07-08T21:14:09.1109333Z 3...\r\n2021-07-08T21:14:09.1109827Z         tree       = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334400>,\r\n2021-07-08T21:14:09.1110454Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1110945Z               verbosity=0)\r\n2021-07-08T21:14:09.1111710Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:1160: in predict_proba\r\n2021-07-08T21:14:09.1112366Z     sub_distribution = sub_tree.predict_proba(sub_X)\r\n2021-07-08T21:14:09.1112857Z         X          =                                                  var_0\r\n2021-07-08T21:14:09.1113455Z -1   0     -1.0810\r\n2021-07-08T21:14:09.1114021Z 1     -1.0789\r\n2021-07-08T21:14:09.1114558Z 2     -1.0795\r\n2021-07-08T21:14:09.1114960Z 3   ...\r\n2021-07-08T21:14:09.1115460Z -2   0  ...7764\r\n2021-07-08T21:14:09.1115880Z 3...\r\n2021-07-08T21:14:09.1116374Z -12  0     -1.1132\r\n2021-07-08T21:14:09.1116941Z 1     -1.1132\r\n2021-07-08T21:14:09.1117493Z 2     -1.1143\r\n2021-07-08T21:14:09.1118151Z 3   ...\r\n2021-07-08T21:14:09.1118683Z -13  0     -0.76929\r\n2021-07-08T21:14:09.1119262Z 1     -0.77280\r\n2021-07-08T21:14:09.1119820Z 2     -0.76754\r\n2021-07-08T21:14:09.1120212Z 3...\r\n2021-07-08T21:14:09.1120624Z         closest_exemplar_indices = array([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0])\r\n2021-07-08T21:14:09.1121092Z         distribution = array([[0., 0.],\r\n2021-07-08T21:14:09.1121475Z        [0., 0.],\r\n2021-07-08T21:14:09.1121879Z        [0., 0.],\r\n2021-07-08T21:14:09.1122259Z        [0., 0.],\r\n2021-07-08T21:14:09.1122605Z        [0., 0.],\r\n2021-07-08T21:14:09.1122960Z        [0., 0.],\r\n2021-07-08T21:14:09.1123304Z        [0., 0.],\r\n2021-07-08T21:14:09.1123629Z        [0., 0.],\r\n2021-07-08T21:14:09.1123973Z        [0., 0.],\r\n2021-07-08T21:14:09.1124315Z        [0., 0.],\r\n2021-07-08T21:14:09.1124656Z        [0., 0.],\r\n2021-07-08T21:14:09.1124982Z        [0., 0.],\r\n2021-07-08T21:14:09.1125323Z        [0., 0.]])\r\n2021-07-08T21:14:09.1125679Z         index      = 0\r\n2021-07-08T21:14:09.1126180Z         indices    = array([ 0,  1,  2,  4,  5,  6,  8, 12])\r\n2021-07-08T21:14:09.1126591Z         n_classes  = 2\r\n2021-07-08T21:14:09.1127114Z         self       = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334400>,\r\n2021-07-08T21:14:09.1127740Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1128265Z               verbosity=0)\r\n2021-07-08T21:14:09.1128711Z         sub_X      =                                                  var_0\r\n2021-07-08T21:14:09.1129323Z -1   0     -1.0810\r\n2021-07-08T21:14:09.1129900Z 1     -1.0789\r\n2021-07-08T21:14:09.1130453Z 2     -1.0795\r\n2021-07-08T21:14:09.1130847Z 3   ...\r\n2021-07-08T21:14:09.1131322Z -2   0  ...0250\r\n2021-07-08T21:14:09.1131715Z 3...\r\n2021-07-08T21:14:09.1132212Z -9   0     -0.61464\r\n2021-07-08T21:14:09.1132989Z 1     -0.61499\r\n2021-07-08T21:14:09.1133543Z 2     -0.61479\r\n2021-07-08T21:14:09.1134118Z 3...\r\n2021-07-08T21:14:09.1134643Z -13  0     -0.76929\r\n2021-07-08T21:14:09.1135228Z 1     -0.77280\r\n2021-07-08T21:14:09.1135788Z 2     -0.76754\r\n2021-07-08T21:14:09.1136199Z 3...\r\n2021-07-08T21:14:09.1136711Z         sub_tree   = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334730>,\r\n2021-07-08T21:14:09.1137681Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1138333Z               verbosity=0)\r\n2021-07-08T21:14:09.1139126Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:1160: in predict_proba\r\n2021-07-08T21:14:09.1139892Z     sub_distribution = sub_tree.predict_proba(sub_X)\r\n2021-07-08T21:14:09.1140378Z         X          =                                                 var_0\r\n2021-07-08T21:14:09.1140979Z -1  0     -1.0810\r\n2021-07-08T21:14:09.1141525Z 1     -1.0789\r\n2021-07-08T21:14:09.1142080Z 2     -1.0795\r\n2021-07-08T21:14:09.1142479Z 3   ...\r\n2021-07-08T21:14:09.1143014Z -2  0     ....70250\r\n2021-07-08T21:14:09.1143391Z 3...\r\n2021-07-08T21:14:09.1143894Z -7  0     -0.61464\r\n2021-07-08T21:14:09.1144455Z 1     -0.61499\r\n2021-07-08T21:14:09.1145013Z 2     -0.61479\r\n2021-07-08T21:14:09.1145563Z 3...\r\n2021-07-08T21:14:09.1146256Z -8  0     -0.76929\r\n2021-07-08T21:14:09.1147645Z 1     -0.77280\r\n2021-07-08T21:14:09.1148537Z 2     -0.76754\r\n2021-07-08T21:14:09.1148960Z 3...\r\n2021-07-08T21:14:09.1149492Z         class_label = 0\r\n2021-07-08T21:14:09.1149929Z         closest_exemplar_indices = array([0, 1, 1, 1, 1, 1, 1, 0])\r\n2021-07-08T21:14:09.1150388Z         distribution = array([[1., 0.],\r\n2021-07-08T21:14:09.1150749Z        [0., 0.],\r\n2021-07-08T21:14:09.1151100Z        [0., 0.],\r\n2021-07-08T21:14:09.1151448Z        [0., 0.],\r\n2021-07-08T21:14:09.1151792Z        [0., 0.],\r\n2021-07-08T21:14:09.1152119Z        [0., 0.],\r\n2021-07-08T21:14:09.1152464Z        [0., 0.],\r\n2021-07-08T21:14:09.1152811Z        [1., 0.]])\r\n2021-07-08T21:14:09.1153168Z         index      = 1\r\n2021-07-08T21:14:09.1153783Z         indices    = array([1, 2, 3, 4, 5, 6])\r\n2021-07-08T21:14:09.1154476Z         n_classes  = 2\r\n2021-07-08T21:14:09.1155067Z         self       = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334730>,\r\n2021-07-08T21:14:09.1155767Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1156319Z               verbosity=0)\r\n2021-07-08T21:14:09.1156787Z         sub_X      =                                                 var_0\r\n2021-07-08T21:14:09.1157946Z -2  0     -0.60447\r\n2021-07-08T21:14:09.1158588Z 1     -0.60808\r\n2021-07-08T21:14:09.1159153Z 2     -0.61307\r\n2021-07-08T21:14:09.1159546Z 3...\r\n2021-07-08T21:14:09.1160025Z -3  0     ....74616\r\n2021-07-08T21:14:09.1160426Z 3...\r\n2021-07-08T21:14:09.1160920Z -6  0     -0.70303\r\n2021-07-08T21:14:09.1161474Z 1     -0.70262\r\n2021-07-08T21:14:09.1162013Z 2     -0.70250\r\n2021-07-08T21:14:09.1162405Z 3...\r\n2021-07-08T21:14:09.1162899Z -7  0     -0.61464\r\n2021-07-08T21:14:09.1163431Z 1     -0.61499\r\n2021-07-08T21:14:09.1163980Z 2     -0.61479\r\n2021-07-08T21:14:09.1164373Z 3...\r\n2021-07-08T21:14:09.1164756Z         sub_distribution = array([[1., 0.]])\r\n2021-07-08T21:14:09.1165271Z         sub_tree   = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334510>,\r\n2021-07-08T21:14:09.1165895Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1166382Z               verbosity=0)\r\n2021-07-08T21:14:09.1167170Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:1160: in predict_proba\r\n2021-07-08T21:14:09.1167807Z     sub_distribution = sub_tree.predict_proba(sub_X)\r\n2021-07-08T21:14:09.1168290Z         X          =                                                 var_0\r\n2021-07-08T21:14:09.1168861Z -1  0     -0.60447\r\n2021-07-08T21:14:09.1169427Z 1     -0.60808\r\n2021-07-08T21:14:09.1169982Z 2     -0.61307\r\n2021-07-08T21:14:09.1170375Z 3...\r\n2021-07-08T21:14:09.1170856Z -2  0     ....74616\r\n2021-07-08T21:14:09.1171258Z 3...\r\n2021-07-08T21:14:09.1171783Z -5  0     -0.70303\r\n2021-07-08T21:14:09.1172344Z 1     -0.70262\r\n2021-07-08T21:14:09.1172880Z 2     -0.70250\r\n2021-07-08T21:14:09.1173274Z 3...\r\n2021-07-08T21:14:09.1173768Z -6  0     -0.61464\r\n2021-07-08T21:14:09.1174502Z 1     -0.61499\r\n2021-07-08T21:14:09.1175044Z 2     -0.61479\r\n2021-07-08T21:14:09.1175447Z 3...\r\n2021-07-08T21:14:09.1175847Z         closest_exemplar_indices = array([0, 1, 1, 1, 1, 1])\r\n2021-07-08T21:14:09.1176615Z         distribution = array([[1., 0.],\r\n2021-07-08T21:14:09.1177182Z        [0., 0.],\r\n2021-07-08T21:14:09.1177553Z        [0., 0.],\r\n2021-07-08T21:14:09.1177918Z        [0., 0.],\r\n2021-07-08T21:14:09.1178282Z        [0., 0.],\r\n2021-07-08T21:14:09.1178627Z        [0., 0.]])\r\n2021-07-08T21:14:09.1178999Z         index      = 1\r\n2021-07-08T21:14:09.1179470Z         indices    = array([1, 2, 3, 4, 5])\r\n2021-07-08T21:14:09.1179897Z         n_classes  = 2\r\n2021-07-08T21:14:09.1180588Z         self       = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334510>,\r\n2021-07-08T21:14:09.1181215Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1181701Z               verbosity=0)\r\n2021-07-08T21:14:09.1182145Z         sub_X      =                                                 var_0\r\n2021-07-08T21:14:09.1182758Z -2  0     -0.74412\r\n2021-07-08T21:14:09.1183310Z 1     -0.73426\r\n2021-07-08T21:14:09.1183870Z 2     -0.73051\r\n2021-07-08T21:14:09.1185656Z 3...\r\n2021-07-08T21:14:09.1186385Z -3  0     ....74616\r\n2021-07-08T21:14:09.1186887Z 3...\r\n2021-07-08T21:14:09.1187544Z -5  0     -0.70303\r\n2021-07-08T21:14:09.1188677Z 1     -0.70262\r\n2021-07-08T21:14:09.1189237Z 2     -0.70250\r\n2021-07-08T21:14:09.1189616Z 3...\r\n2021-07-08T21:14:09.1190109Z -6  0     -0.61464\r\n2021-07-08T21:14:09.1190668Z 1     -0.61499\r\n2021-07-08T21:14:09.1191216Z 2     -0.61479\r\n2021-07-08T21:14:09.1191592Z 3...\r\n2021-07-08T21:14:09.1191964Z         sub_distribution = array([[1., 0.]])\r\n2021-07-08T21:14:09.1192500Z         sub_tree   = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a3348c8>,\r\n2021-07-08T21:14:09.1193118Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1193611Z               verbosity=0)\r\n2021-07-08T21:14:09.1194372Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:1160: in predict_proba\r\n2021-07-08T21:14:09.1195023Z     sub_distribution = sub_tree.predict_proba(sub_X)\r\n2021-07-08T21:14:09.1195508Z         X          =                                                 var_0\r\n2021-07-08T21:14:09.1196101Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1196668Z 1     -0.73426\r\n2021-07-08T21:14:09.1197210Z 2     -0.73051\r\n2021-07-08T21:14:09.1197730Z 3...\r\n2021-07-08T21:14:09.1198340Z -2  0     ....74616\r\n2021-07-08T21:14:09.1198744Z 3...\r\n2021-07-08T21:14:09.1199228Z -4  0     -0.70303\r\n2021-07-08T21:14:09.1199793Z 1     -0.70262\r\n2021-07-08T21:14:09.1200347Z 2     -0.70250\r\n2021-07-08T21:14:09.1200738Z 3...\r\n2021-07-08T21:14:09.1201217Z -5  0     -0.61464\r\n2021-07-08T21:14:09.1201782Z 1     -0.61499\r\n2021-07-08T21:14:09.1202372Z 2     -0.61479\r\n2021-07-08T21:14:09.1202752Z 3...\r\n2021-07-08T21:14:09.1203153Z         closest_exemplar_indices = array([0, 0, 0, 1, 1])\r\n2021-07-08T21:14:09.1203590Z         distribution = array([[0., 0.],\r\n2021-07-08T21:14:09.1203978Z        [0., 0.],\r\n2021-07-08T21:14:09.1204324Z        [0., 0.],\r\n2021-07-08T21:14:09.1204652Z        [0., 0.],\r\n2021-07-08T21:14:09.1204998Z        [0., 0.]])\r\n2021-07-08T21:14:09.1205356Z         index      = 0\r\n2021-07-08T21:14:09.1209959Z         indices    = array([0, 1, 2])\r\n2021-07-08T21:14:09.1210329Z         n_classes  = 2\r\n2021-07-08T21:14:09.1210758Z         self       = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a3348c8>,\r\n2021-07-08T21:14:09.1211295Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1211701Z               verbosity=0)\r\n2021-07-08T21:14:09.1212053Z         sub_X      =                                                 var_0\r\n2021-07-08T21:14:09.1212636Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1213285Z 1     -0.73426\r\n2021-07-08T21:14:09.1213713Z 2     -0.73051\r\n2021-07-08T21:14:09.1213998Z 3...\r\n2021-07-08T21:14:09.1214374Z -2  0     -0.77835\r\n2021-07-08T21:14:09.1214931Z 1     -0.77828\r\n2021-07-08T21:14:09.1215352Z 2     -0.77715\r\n2021-07-08T21:14:09.1215628Z 3...\r\n2021-07-08T21:14:09.1215996Z -3  0     -0.75006\r\n2021-07-08T21:14:09.1216423Z 1     -0.74810\r\n2021-07-08T21:14:09.1216839Z 2     -0.74616\r\n2021-07-08T21:14:09.1217120Z 3...\r\n2021-07-08T21:14:09.1217502Z         sub_tree   = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334e18>,\r\n2021-07-08T21:14:09.1218044Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1224339Z               verbosity=0)\r\n2021-07-08T21:14:09.1225391Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:1146: in predict_proba\r\n2021-07-08T21:14:09.1225994Z     closest_exemplar_indices = self.stump.find_closest_exemplar_indices(X)\r\n2021-07-08T21:14:09.1226419Z         X          =                                                 var_0\r\n2021-07-08T21:14:09.1226936Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1227382Z 1     -0.73426\r\n2021-07-08T21:14:09.1227808Z 2     -0.73051\r\n2021-07-08T21:14:09.1228095Z 3...\r\n2021-07-08T21:14:09.1228469Z -2  0     -0.77835\r\n2021-07-08T21:14:09.1228902Z 1     -0.77828\r\n2021-07-08T21:14:09.1229323Z 2     -0.77715\r\n2021-07-08T21:14:09.1229586Z 3...\r\n2021-07-08T21:14:09.1229977Z -3  0     -0.75006\r\n2021-07-08T21:14:09.1230406Z 1     -0.74810\r\n2021-07-08T21:14:09.1230828Z 2     -0.74616\r\n2021-07-08T21:14:09.1231092Z 3...\r\n2021-07-08T21:14:09.1231492Z         self       = ProximityTree(distance_measure=<function distance_predefined_params.<locals>.distance at 0x7f758a334e18>,\r\n2021-07-08T21:14:09.1232033Z             ...      setup_distance_measure=<function setup_all_distance_measure_getter at 0x7f758187d158>,\r\n2021-07-08T21:14:09.1232436Z               verbosity=0)\r\n2021-07-08T21:14:09.1233165Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:928: in find_closest_exemplar_indices\r\n2021-07-08T21:14:09.1233707Z     distances = self.distance_to_exemplars(X)\r\n2021-07-08T21:14:09.1234074Z         X          =                                                 var_0\r\n2021-07-08T21:14:09.1234564Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1234997Z 1     -0.73426\r\n2021-07-08T21:14:09.1235421Z 2     -0.73051\r\n2021-07-08T21:14:09.1235683Z 3...\r\n2021-07-08T21:14:09.1236067Z -2  0     -0.77835\r\n2021-07-08T21:14:09.1236494Z 1     -0.77828\r\n2021-07-08T21:14:09.1236915Z 2     -0.77715\r\n2021-07-08T21:14:09.1237180Z 3...\r\n2021-07-08T21:14:09.1237561Z -3  0     -0.75006\r\n2021-07-08T21:14:09.1239859Z 1     -0.74810\r\n2021-07-08T21:14:09.1240304Z 2     -0.74616\r\n2021-07-08T21:14:09.1240565Z 3...\r\n2021-07-08T21:14:09.1240826Z         n_instances = 3\r\n2021-07-08T21:14:09.1241521Z         self       = <[AttributeError(\"'ProximityStump' object has no attribute 'get_exemplars'\",) raised in repr()] ProximityStump object at 0x7f7586de65c0>\r\n2021-07-08T21:14:09.1242450Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:875: in distance_to_exemplars\r\n2021-07-08T21:14:09.1242972Z     for index in range(X.shape[0])\r\n2021-07-08T21:14:09.1243328Z         X          =                                                 var_0\r\n2021-07-08T21:14:09.1243814Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1244242Z 1     -0.73426\r\n2021-07-08T21:14:09.1244660Z 2     -0.73051\r\n2021-07-08T21:14:09.1244919Z 3...\r\n2021-07-08T21:14:09.1245305Z -2  0     -0.77835\r\n2021-07-08T21:14:09.1245730Z 1     -0.77828\r\n2021-07-08T21:14:09.1246150Z 2     -0.77715\r\n2021-07-08T21:14:09.1246410Z 3...\r\n2021-07-08T21:14:09.1246795Z -3  0     -0.75006\r\n2021-07-08T21:14:09.1247216Z 1     -0.74810\r\n2021-07-08T21:14:09.1247635Z 2     -0.74616\r\n2021-07-08T21:14:09.1247893Z 3...\r\n2021-07-08T21:14:09.1248732Z         self       = <[AttributeError(\"'ProximityStump' object has no attribute 'get_exemplars'\",) raised in repr()] ProximityStump object at 0x7f7586de65c0>\r\n2021-07-08T21:14:09.1249829Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:875: in <listcomp>\r\n2021-07-08T21:14:09.1250448Z     for index in range(X.shape[0])\r\n2021-07-08T21:14:09.1251001Z         .0         = <range_iterator object at 0x7f7588e52270>\r\n2021-07-08T21:14:09.1251598Z         X          =                                                 var_0\r\n2021-07-08T21:14:09.1252701Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1253612Z 1     -0.73426\r\n2021-07-08T21:14:09.1254423Z 2     -0.73051\r\n2021-07-08T21:14:09.1254781Z 3...\r\n2021-07-08T21:14:09.1255450Z -2  0     -0.77835\r\n2021-07-08T21:14:09.1256438Z 1     -0.77828\r\n2021-07-08T21:14:09.1257044Z 2     -0.77715\r\n2021-07-08T21:14:09.1259551Z 3...\r\n2021-07-08T21:14:09.1260331Z -3  0     -0.75006\r\n2021-07-08T21:14:09.1260918Z 1     -0.74810\r\n2021-07-08T21:14:09.1261866Z 2     -0.74616\r\n2021-07-08T21:14:09.1262316Z 3...\r\n2021-07-08T21:14:09.1263246Z         index      = 0\r\n2021-07-08T21:14:09.1265084Z         self       = <[AttributeError(\"'ProximityStump' object has no attribute 'get_exemplars'\",) raised in repr()] ProximityStump object at 0x7f7586de65c0>\r\n2021-07-08T21:14:09.1266737Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:843: in _distance_to_exemplars_inst\r\n2021-07-08T21:14:09.1267987Z     distance = distance_measure(instance, exemplar)  # , min_distance)\r\n2021-07-08T21:14:09.1268720Z         distance_measure = <function distance_predefined_params.<locals>.distance at 0x7f758a334e18>\r\n2021-07-08T21:14:09.1269222Z         distances  = array([2.20326076, 9.83394437])\r\n2021-07-08T21:14:09.1269859Z         exemplar   = dim_0    0     -0.72396\r\n2021-07-08T21:14:09.1270459Z 1     -0.72526\r\n2021-07-08T21:14:09.1271012Z 2     -0.72925\r\n2021-07-08T21:14:09.1271388Z 3...\r\n2021-07-08T21:14:09.1271743Z Name: 1, dtype: object\r\n2021-07-08T21:14:09.1272132Z         exemplar_index = 0\r\n2021-07-08T21:14:09.1272716Z         exemplars  = [dim_0    0     -0.72396\r\n2021-07-08T21:14:09.1273296Z 1     -0.72526\r\n2021-07-08T21:14:09.1273854Z 2     -0.72925\r\n2021-07-08T21:14:09.1274252Z 3...\r\n2021-07-08T21:14:09.1274823Z Name: 1, dtype: object, dim_0    0     -0.62213\r\n2021-07-08T21:14:09.1275407Z 1     -0.61916\r\n2021-07-08T21:14:09.1275962Z 2     -0.61331\r\n2021-07-08T21:14:09.1276350Z 3...\r\n2021-07-08T21:14:09.1276705Z Name: 0, dtype: object]\r\n2021-07-08T21:14:09.1277265Z         instance   = var_0    0     -0.74412\r\n2021-07-08T21:14:09.1278027Z 1     -0.73426\r\n2021-07-08T21:14:09.1278652Z 2     -0.73051\r\n2021-07-08T21:14:09.1279050Z 3...\r\n2021-07-08T21:14:09.1279548Z Name: -1, dtype: object\r\n2021-07-08T21:14:09.1279990Z         min_distance = inf\r\n2021-07-08T21:14:09.1280381Z         n_exemplars = 2\r\n2021-07-08T21:14:09.1281152Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:147: in distance\r\n2021-07-08T21:14:09.1281801Z     return distance_measure(instance_a, instance_b, **params)\r\n2021-07-08T21:14:09.1282336Z         distance_measure = <function _derivative_distance.<locals>.distance at 0x7f758a334b70>\r\n2021-07-08T21:14:09.1283023Z         instance_a = var_0    0     -0.74412\r\n2021-07-08T21:14:09.1283624Z 1     -0.73426\r\n2021-07-08T21:14:09.1284178Z 2     -0.73051\r\n2021-07-08T21:14:09.1284553Z 3...\r\n2021-07-08T21:14:09.1285974Z Name: -1, dtype: object\r\n2021-07-08T21:14:09.1286860Z         instance_b = dim_0    0     -0.72396\r\n2021-07-08T21:14:09.1287607Z 1     -0.72526\r\n2021-07-08T21:14:09.1288427Z 2     -0.72925\r\n2021-07-08T21:14:09.1289004Z 3...\r\n2021-07-08T21:14:09.1289370Z Name: 1, dtype: object\r\n2021-07-08T21:14:09.1289994Z         params     = {'w': 0.033804543351363014}\r\n2021-07-08T21:14:09.1292537Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:130: in distance\r\n2021-07-08T21:14:09.1293287Z     df = transformer.transform(X=df)\r\n2021-07-08T21:14:09.1293844Z         df         =                                                 var_0                                              dim_0\r\n2021-07-08T21:14:09.1294804Z -1  0     -0....           NaN\r\n2021-07-08T21:14:09.1295666Z  1                                                NaN  0     -0.72396\r\n2021-07-08T21:14:09.1296319Z 1     -0.72526\r\n2021-07-08T21:14:09.1296872Z 2     -0.72925\r\n2021-07-08T21:14:09.1297276Z 3...\r\n2021-07-08T21:14:09.1297717Z         distance_measure = <function cython_wrapper.<locals>.distance at 0x7f758a334ae8>\r\n2021-07-08T21:14:09.1298392Z         instance_a = var_0    0     -0.74412\r\n2021-07-08T21:14:09.1298980Z 1     -0.73426\r\n2021-07-08T21:14:09.1299543Z 2     -0.73051\r\n2021-07-08T21:14:09.1299933Z 3...\r\n2021-07-08T21:14:09.1300455Z Name: -1, dtype: object\r\n2021-07-08T21:14:09.1301116Z         instance_b = dim_0    0     -0.72396\r\n2021-07-08T21:14:09.1301914Z 1     -0.72526\r\n2021-07-08T21:14:09.1302757Z 2     -0.72925\r\n2021-07-08T21:14:09.1303171Z 3...\r\n2021-07-08T21:14:09.1303525Z Name: 1, dtype: object\r\n2021-07-08T21:14:09.1304168Z         params     = {'w': 0.033804543351363014}\r\n2021-07-08T21:14:09.1304765Z         transformer = _CachedTransformer(transformer=DerivativeSlopeTransformer())\r\n2021-07-08T21:14:09.1305924Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/classification/distance_based/_proximity_forest.py:104: in transform\r\n2021-07-08T21:14:09.1306564Z     uncached_instances\r\n2021-07-08T21:14:09.1307219Z         X          =                                                 var_0                                              dim_0\r\n2021-07-08T21:14:09.1308080Z -1  0     -0....           NaN\r\n2021-07-08T21:14:09.1308800Z  1                                                NaN  0     -0.72396\r\n2021-07-08T21:14:09.1309416Z 1     -0.72526\r\n2021-07-08T21:14:09.1310448Z 2     -0.72925\r\n2021-07-08T21:14:09.1310836Z 3...\r\n2021-07-08T21:14:09.1311890Z         cached_instances = {1: {'der_dim_0': 0     -0.001972\r\n2021-07-08T21:14:09.1312576Z 1     -0.001972\r\n2021-07-08T21:14:09.1313147Z 2     -0.003852\r\n2021-07-08T21:14:09.1313747Z 3     -0.002808\r\n2021-07-08T21:14:09.1314486Z 4     -0.000883\r\n2021-07-08T21:14:09.1315047Z          ...   \r\n2021-07-08T21:14:09.1315550Z 145    0.002797\r\n2021-07-08T21:14:09.1316333Z 146    0.003917\r\n2021-07-08T21:14:09.1316693Z 147    0.001642\r\n2021-07-08T21:14:09.1317048Z 148    0.002755\r\n2021-07-08T21:14:09.1317388Z 149    0.002755\r\n2021-07-08T21:14:09.1318177Z Length: 150, dtype: float64}}\r\n2021-07-08T21:14:09.1318610Z         index      = 1\r\n2021-07-08T21:14:09.1319426Z         self       = _CachedTransformer(transformer=DerivativeSlopeTransformer())\r\n2021-07-08T21:14:09.1320065Z         uncached_indices = [-1]\r\n2021-07-08T21:14:09.1320544Z         uncached_instances =                                                 var_0 dim_0\r\n2021-07-08T21:14:09.1321135Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1321656Z 1     -0.73426\r\n2021-07-08T21:14:09.1322183Z 2     -0.73051\r\n2021-07-08T21:14:09.1322529Z 3...   NaN\r\n2021-07-08T21:14:09.1322863Z         y          = None\r\n2021-07-08T21:14:09.1323549Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/transformations/base.py:88: in fit_transform\r\n2021-07-08T21:14:09.1324087Z     return self.fit(Z).transform(Z)\r\n2021-07-08T21:14:09.1324441Z         X          = None\r\n2021-07-08T21:14:09.1324872Z         Z          =                                                 var_0 dim_0\r\n2021-07-08T21:14:09.1325445Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1325970Z 1     -0.73426\r\n2021-07-08T21:14:09.1326484Z 2     -0.73051\r\n2021-07-08T21:14:09.1326833Z 3...   NaN\r\n2021-07-08T21:14:09.1327198Z         self       = DerivativeSlopeTransformer()\r\n2021-07-08T21:14:09.1328507Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/transformations/panel/summarize/_extract.py:111: in transform\r\n2021-07-08T21:14:09.1338970Z     out = self.row_wise_get_der(dim_data)\r\n2021-07-08T21:14:09.1339440Z         X          =                                                 var_0 dim_0\r\n2021-07-08T21:14:09.1340119Z -1  0     -0.74412\r\n2021-07-08T21:14:09.1340680Z 1     -0.73426\r\n2021-07-08T21:14:09.1341393Z 2     -0.73051\r\n2021-07-08T21:14:09.1341749Z 3...   NaN\r\n2021-07-08T21:14:09.1342083Z         dim        = 1\r\n2021-07-08T21:14:09.1342599Z         dim_data   = -1    NaN\r\n2021-07-08T21:14:09.1343139Z Name: dim_0, dtype: object\r\n2021-07-08T21:14:09.1343506Z         num_cases  = 1\r\n2021-07-08T21:14:09.1343827Z         num_dim    = 2\r\n2021-07-08T21:14:09.1344186Z         out        = [0      0.008332\r\n2021-07-08T21:14:09.1344537Z 1      0.008332\r\n2021-07-08T21:14:09.1344860Z 2      0.005075\r\n2021-07-08T21:14:09.1345258Z 3      0.010032\r\n2021-07-08T21:14:09.1345579Z 4      0.012090\r\n2021-07-08T21:14:09.1345895Z          ...   \r\n2021-07-08T21:14:09.1346213Z 145    0.001760\r\n2021-07-08T21:14:09.1346512Z 146    0.000795\r\n2021-07-08T21:14:09.1346833Z 147    0.001300\r\n2021-07-08T21:14:09.1347149Z 148    0.000085\r\n2021-07-08T21:14:09.1347465Z 149    0.000085\r\n2021-07-08T21:14:09.1347788Z Length: 150, dtype: float64]\r\n2021-07-08T21:14:09.1348210Z         output_df  =                                            der_dim_0\r\n2021-07-08T21:14:09.1348625Z 0  0      0.008332\r\n2021-07-08T21:14:09.1348948Z 1      0.008332\r\n2021-07-08T21:14:09.1349253Z 2      0.00507...\r\n2021-07-08T21:14:09.1349622Z         self       = DerivativeSlopeTransformer()\r\n2021-07-08T21:14:09.1350004Z         y          = None\r\n2021-07-08T21:14:09.1350773Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/transformations/panel/summarize/_extract.py:124: in row_wise_get_der\r\n2021-07-08T21:14:09.1351324Z     return [get_der(x) for x in X]\r\n2021-07-08T21:14:09.1351861Z         X          = -1    NaN\r\n2021-07-08T21:14:09.1352279Z Name: dim_0, dtype: object\r\n2021-07-08T21:14:09.1352756Z         get_der    = <function DerivativeSlopeTransformer.row_wise_get_der.<locals>.get_der at 0x7f758a347048>\r\n2021-07-08T21:14:09.1353600Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/transformations/panel/summarize/_extract.py:124: in <listcomp>\r\n2021-07-08T21:14:09.1354147Z     return [get_der(x) for x in X]\r\n2021-07-08T21:14:09.1354548Z         .0         = <map object at 0x7f758ae15e10>\r\n2021-07-08T21:14:09.1355049Z         get_der    = <function DerivativeSlopeTransformer.row_wise_get_der.<locals>.get_der at 0x7f758a347048>\r\n2021-07-08T21:14:09.1355516Z         x          = nan\r\n2021-07-08T21:14:09.1355936Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n2021-07-08T21:14:09.1356207Z \r\n2021-07-08T21:14:09.1356497Z x = nan\r\n2021-07-08T21:14:09.1356670Z \r\n2021-07-08T21:14:09.1356983Z     def get_der(x):\r\n2021-07-08T21:14:09.1357320Z         der = []\r\n2021-07-08T21:14:09.1398286Z >       for i in range(1, len(x) - 1):\r\n2021-07-08T21:14:09.1399355Z E       TypeError: object of type 'float' has no len()\r\n2021-07-08T21:14:09.1399712Z \r\n2021-07-08T21:14:09.1400225Z der        = []\r\n2021-07-08T21:14:09.1400663Z x          = nan\r\n2021-07-08T21:14:09.1400857Z \r\n2021-07-08T21:14:09.1401623Z /opt/_internal/cpython-3.6.14/lib/python3.6/site-packages/sktime/transformations/panel/summarize/_extract.py:120: TypeError\r\n```","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/876759274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"id":4997288893,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDk5NzI4ODg5Mw==","url":"https://api.github.com/repos/sktime/sktime/issues/events/4997288893","actor":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-07-08T21:29:56Z","performed_via_github_app":null},{"id":4997288897,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQ5OTcyODg4OTc=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4997288897","actor":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-07-08T21:29:56Z","performed_via_github_app":null},{"id":5712435758,"node_id":"ATPE_lADOCVKAsc433nuYzwAAAAFUfNou","url":"https://api.github.com/repos/sktime/sktime/issues/events/5712435758","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"added_to_project","commit_id":null,"commit_url":null,"created_at":"2021-12-03T14:23:36Z","project_card":{"id":74147780,"url":"https://api.github.com/projects/columns/cards/74147780","project_id":5198515,"project_url":"https://api.github.com/projects/5198515","column_name":"Needs triage & validation"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1008046463","html_url":"https://github.com/sktime/sktime/issues/1114#issuecomment-1008046463","issue_url":"https://api.github.com/repos/sktime/sktime/issues/1114","id":1008046463,"node_id":"IC_kwDOCVKAsc48FZF_","user":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"created_at":"2022-01-08T16:19:24Z","updated_at":"2022-01-08T16:19:24Z","author_association":"CONTRIBUTOR","body":"I have rolled this into the general PF issue, so will close this\r\nhttps://github.com/alan-turing-institute/sktime/issues/1715\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1008046463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false}},{"id":5861375983,"node_id":"CE_lADOCVKAsc433nuYzwAAAAFdXX_v","url":"https://api.github.com/repos/sktime/sktime/issues/events/5861375983","actor":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-01-08T16:19:24Z","state_reason":null,"performed_via_github_app":null},{"id":5861375995,"node_id":"MCIPE_lADOCVKAsc433nuYzwAAAAFdXX_7","url":"https://api.github.com/repos/sktime/sktime/issues/events/5861375995","actor":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"event":"moved_columns_in_project","commit_id":null,"commit_url":null,"created_at":"2022-01-08T16:19:25Z","project_card":{"id":74147780,"url":"https://api.github.com/projects/columns/cards/74147780","project_id":5198515,"project_url":"https://api.github.com/projects/5198515","column_name":"Fixed/resolved","previous_column_name":"Needs triage & validation"},"performed_via_github_app":null}]