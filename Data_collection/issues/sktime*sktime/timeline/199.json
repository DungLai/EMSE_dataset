[{"id":2805373501,"node_id":"MDEyOkxhYmVsZWRFdmVudDI4MDUzNzM1MDE=","url":"https://api.github.com/repos/sktime/sktime/issues/events/2805373501","actor":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-11-17T12:19:31Z","label":{"name":"bug","color":"d73a4a"},"performed_via_github_app":null},{"id":2806576876,"node_id":"MDE0OlVubGFiZWxlZEV2ZW50MjgwNjU3Njg3Ng==","url":"https://api.github.com/repos/sktime/sktime/issues/events/2806576876","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"unlabeled","commit_id":null,"commit_url":null,"created_at":"2019-11-18T08:31:05Z","label":{"name":"bug","color":"d73a4a"},"performed_via_github_app":null},{"id":2806576878,"node_id":"MDEyOkxhYmVsZWRFdmVudDI4MDY1NzY4Nzg=","url":"https://api.github.com/repos/sktime/sktime/issues/events/2806576878","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-11-18T08:31:05Z","label":{"name":"API design","color":"874db7"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/554911642","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-554911642","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":554911642,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDkxMTY0Mg==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T08:40:51Z","updated_at":"2019-11-18T08:43:49Z","author_association":"COLLABORATOR","body":"Thanks for raising the issue! Some forecasters will need the forecasting horizon already during training (e.g. reduction to regression when you fit in training one estimator for each step of the forecasting horizon). All forecasters should accept `fh` in `fit` and remember it for `predict`. So your example should work if you pass fh to `fit` instead of `predict`. That's implemented on the `forecast` branch.\r\n\r\nIn the DummyForecaster that's probably not the case. I needed it in `fit` for the \"seasonal last\" strategy I believe, but the different strategies need to be separated more cleanly into different classes, e.g. into a TrendForecaster which also handles seasonal trends and perhaps some kind of a SmoothingForecaster (for rolling mean predictions, etc).","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/554911642/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"id":2806613881,"node_id":"MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQyODA2NjEzODgx","url":"https://api.github.com/repos/sktime/sktime/issues/events/2806613881","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"added_to_project","commit_id":null,"commit_url":null,"created_at":"2019-11-18T08:44:07Z","project_card":{"id":29354259,"url":"https://api.github.com/projects/columns/cards/29354259","project_id":2386754,"project_url":"https://api.github.com/projects/2386754","column_name":"To do"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/554991673","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-554991673","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":554991673,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDk5MTY3Mw==","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T12:18:20Z","updated_at":"2019-11-18T12:18:20Z","author_association":"COLLABORATOR","body":"Is this maybe also another interesting architecture discussion point raised?\r\n- interaction of different kinds of forecasters and forecasting, with inheritance hierarchy and task specification and/or method signature","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/554991673/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555044668","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-555044668","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":555044668,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTA0NDY2OA==","user":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T14:43:01Z","updated_at":"2019-11-18T14:44:10Z","author_association":"CONTRIBUTOR","body":"> In the DummyForecaster that's probably not the case. I needed it in `fit` for the \"seasonal last\" strategy I believe, but the different strategies need to be separated more cleanly into different classes, e.g. into a TrendForecaster which also handles seasonal trends and perhaps some kind of a SmoothingForecaster (for rolling mean predictions, etc).\r\n\r\nI see your point, but looking at the code it seems to me like `fh` is only really being used to calculate `y_pred` - something that I think could (and should) be put off until the call to `predict`. The only real \"fitting\" I can see in any of the strategies is in the \"linear\" strategy, where a SARIMAX estimator is trained, but this estimator makes no use of `fh` except, again, when calculating the actual predictions.\r\n\r\nUnless i've misunderstood something, if you delay calculating `y_pred` until you're inside the `predict` method (which is the behaviour I would have expected), I don't think there's any need for `fh` in _any_ of the current strategies until `predict` is called, as per the other forecasters.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555044668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555055942","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-555055942","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":555055942,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTA1NTk0Mg==","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T15:07:54Z","updated_at":"2019-11-18T15:09:31Z","author_association":"COLLABORATOR","body":"The most common example of a strategy that needs `fh` already within fit is the lagged/rolling window reduction to supervised learning. `fh` is needed within fit to create the vector/matrix of the y-s to present the tabular supervised learner with.\r\n\r\nThus, there are some forecasters which don't need `fh` in fit, and some which do.\r\n\r\nIn terms of architecture, this is perhaps not too dissimilar from supervised learners which don't make \"real\" use of the Xtrain before prediction, such as knn?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555055942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555082519","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-555082519","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":555082519,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTA4MjUxOQ==","user":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T16:03:14Z","updated_at":"2019-11-18T16:03:14Z","author_association":"CONTRIBUTOR","body":"Just to clarify for everyone, the point I want to make here is that I don't think `fh` is needed by `DummyForecaster.fit` specifically - I won't comment on what might be needed by other/future forecasters. I realise now that the way I worded it might have made it sound like I don't think `fh` should be needed by _any_ forecaster `fit()` method, but as you've already pointed out this isn't the case.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555082519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555083971","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-555083971","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":555083971,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTA4Mzk3MQ==","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2019-11-18T16:06:24Z","updated_at":"2019-11-18T16:06:24Z","author_association":"COLLABORATOR","body":"Ah, I see - though still, the \"unified interface\" architectural principle usually implies that all methods belonging to a class of strategies should support methods with the same (key) signature, as to not break if you iterate over methods or switch them out.\r\n\r\nE.g., in sklearn, k-nearest-neighors still has a `fit` methods, even though all it does is to remember the data for `predict`.\r\n\r\nOf course the jury is still out on where `fh` should sit - in the native fit, or in a task object, somehwere else etc.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555083971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555765340","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-555765340","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":555765340,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTc2NTM0MA==","user":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T23:34:13Z","updated_at":"2019-11-19T23:34:13Z","author_association":"CONTRIBUTOR","body":"In lieu of joining your discussion later this week, I'll leave a few thoughts here about this issue.\r\n\r\nI think the problem here is inconsistent method signatures across `BaseForecaster` children, which breaks the duck-typing approach that many people like to use: if it implements `fit` and `predict`, then I should be able to use it in the same way as anything else that implements `fit` and `predict`. This inconsistency also makes much it harder to use pipelines and `Mixin`s effectively.\r\n\r\nHaving thought about it more, I now think that any extra parameters that are needed at fit-time should be provided to the constructor instead, meaning that `fit` never takes anything except the training data, regardless of the algorithm used. So things like `DummyForecaster`, which currently requires knowledge of the horizon at fit-time, would now be given `fh` as a constructor parameter instead. If you need to train the `DummyForecaster` with a different horizon, then you would have to create a new instance (which I think is clearer and encourages less error-prone coding by the user anyway).\r\n\r\nLikewise for predict: it should ideally take nothing more than a forecast horizon, optional exogenous variables and confidence levels for the desired PIs (since we don't want to have to retrain a new model just to change the PIs). In the case of the `DummyForecaster`, since we provided `fh` on initialisation, all `predict` would do here is validate that the provided `fh` is the same as the initial one. Other forecasters can be more flexible as no prior constraints have been placed on `fh`. But despite this difference, all forecasters still maintain the same _interface_, so I can use them consistently.\r\n\r\nThis consistency will also make it easier to take more of a `Mixin` approach: take a look at the RegressorMixin in sklearn as a good example: [it assumes `predict()` is implemented in a certain way](https://github.com/scikit-learn/scikit-learn/blob/1495f6924/sklearn/base.py#L408).","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555765340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false}},{"actor":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"created_at":"2019-11-19T23:35:47Z","updated_at":"2019-11-19T23:35:47Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/sktime/sktime/issues/200","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/200/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/200/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/200/events","html_url":"https://github.com/sktime/sktime/issues/200","id":523978180,"node_id":"MDU6SXNzdWU1MjM5NzgxODA=","number":200,"title":"fit_predict for Forecasters","user":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2019-11-17T12:22:57Z","updated_at":"2020-01-30T12:31:32Z","closed_at":"2020-01-30T12:31:31Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"repository":{"id":156401841,"node_id":"MDEwOlJlcG9zaXRvcnkxNTY0MDE4NDE=","name":"sktime","full_name":"sktime/sktime","private":false,"owner":{"login":"sktime","id":56396127,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Mzk2MTI3","avatar_url":"https://avatars.githubusercontent.com/u/56396127?v=4","gravatar_id":"","url":"https://api.github.com/users/sktime","html_url":"https://github.com/sktime","followers_url":"https://api.github.com/users/sktime/followers","following_url":"https://api.github.com/users/sktime/following{/other_user}","gists_url":"https://api.github.com/users/sktime/gists{/gist_id}","starred_url":"https://api.github.com/users/sktime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktime/subscriptions","organizations_url":"https://api.github.com/users/sktime/orgs","repos_url":"https://api.github.com/users/sktime/repos","events_url":"https://api.github.com/users/sktime/events{/privacy}","received_events_url":"https://api.github.com/users/sktime/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/sktime/sktime","description":"A unified framework for machine learning with time series","fork":false,"url":"https://api.github.com/repos/sktime/sktime","forks_url":"https://api.github.com/repos/sktime/sktime/forks","keys_url":"https://api.github.com/repos/sktime/sktime/keys{/key_id}","collaborators_url":"https://api.github.com/repos/sktime/sktime/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/sktime/sktime/teams","hooks_url":"https://api.github.com/repos/sktime/sktime/hooks","issue_events_url":"https://api.github.com/repos/sktime/sktime/issues/events{/number}","events_url":"https://api.github.com/repos/sktime/sktime/events","assignees_url":"https://api.github.com/repos/sktime/sktime/assignees{/user}","branches_url":"https://api.github.com/repos/sktime/sktime/branches{/branch}","tags_url":"https://api.github.com/repos/sktime/sktime/tags","blobs_url":"https://api.github.com/repos/sktime/sktime/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/sktime/sktime/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/sktime/sktime/git/refs{/sha}","trees_url":"https://api.github.com/repos/sktime/sktime/git/trees{/sha}","statuses_url":"https://api.github.com/repos/sktime/sktime/statuses/{sha}","languages_url":"https://api.github.com/repos/sktime/sktime/languages","stargazers_url":"https://api.github.com/repos/sktime/sktime/stargazers","contributors_url":"https://api.github.com/repos/sktime/sktime/contributors","subscribers_url":"https://api.github.com/repos/sktime/sktime/subscribers","subscription_url":"https://api.github.com/repos/sktime/sktime/subscription","commits_url":"https://api.github.com/repos/sktime/sktime/commits{/sha}","git_commits_url":"https://api.github.com/repos/sktime/sktime/git/commits{/sha}","comments_url":"https://api.github.com/repos/sktime/sktime/comments{/number}","issue_comment_url":"https://api.github.com/repos/sktime/sktime/issues/comments{/number}","contents_url":"https://api.github.com/repos/sktime/sktime/contents/{+path}","compare_url":"https://api.github.com/repos/sktime/sktime/compare/{base}...{head}","merges_url":"https://api.github.com/repos/sktime/sktime/merges","archive_url":"https://api.github.com/repos/sktime/sktime/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/sktime/sktime/downloads","issues_url":"https://api.github.com/repos/sktime/sktime/issues{/number}","pulls_url":"https://api.github.com/repos/sktime/sktime/pulls{/number}","milestones_url":"https://api.github.com/repos/sktime/sktime/milestones{/number}","notifications_url":"https://api.github.com/repos/sktime/sktime/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/sktime/sktime/labels{/name}","releases_url":"https://api.github.com/repos/sktime/sktime/releases{/id}","deployments_url":"https://api.github.com/repos/sktime/sktime/deployments","created_at":"2018-11-06T15:08:24Z","updated_at":"2023-01-18T23:14:26Z","pushed_at":"2023-01-19T01:03:12Z","git_url":"git://github.com/sktime/sktime.git","ssh_url":"git@github.com:sktime/sktime.git","clone_url":"https://github.com/sktime/sktime.git","svn_url":"https://github.com/sktime/sktime","homepage":"https://sktime.org","size":56007,"stargazers_count":6043,"watchers_count":6043,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1009,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":649,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["data-mining","data-science","forecasting","machine-learning","scikit-learn","time-series","time-series-analysis","time-series-classification","time-series-regression"],"visibility":"public","forks":1009,"open_issues":649,"watchers":6043,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"**Is your feature request related to a problem? Please describe.**\r\nI'm sure there will be many situations where users just want to get a quick forecast on a time series. Implementing a `fit_predict` method would make the forecaster interface simpler for this common use case.\r\n\r\n**Describe the solution you'd like**\r\nAdd a `fit_predict` method to BaseForecaster, which takes in all the arguments of `fit` and `predict`, fits the forecaster and returns the prediction for the provided horizon. I'm not aware of any clashing arguments for `fit` and `predict` in any of the existing forecasters, and implementing this method earlier on will force authors to avoid such clashes in the future.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/200/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555972471","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-555972471","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":555972471,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTk3MjQ3MQ==","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2019-11-20T11:55:28Z","updated_at":"2019-11-20T11:55:28Z","author_association":"COLLABORATOR","body":"Interesting.\r\nI'll comment separately on multiple points raised.\r\n\r\n(i) \"fit/predict should have a unified/consistent interface\" - I completely agree with this, though I would restrict this requirement within \"task types\", of which there are multiple.\r\nFor example, a supervised learner will naturally expects a different input (X/y data frames) than a forecaster (series). But of course within the \"task type\", all learners should adhere to the same specification standard for methods, interfaces, etc.\r\n\r\n(ii) \"stick `fh` in the constructor\" - my intuition says \"don't\" here, since there are methods that don't need a `fh` specified that early.\r\n\r\nNow I get that your recommendation for (ii) comes from (i) - but there is another way to comply with (i), namely having a \"control\" structured container, possibly but not necessarily a \"task object\". Another alternative is polymorphic `fit`/`predict` signatures with dispatch methods.\r\n\r\nWe have indeed been discussing mixins, in the context of these last two - mixins for \"task type\" specific dispatch.\r\n\r\n(iii) \"specify PI confidence in `predict`\" - the rationale for this recommendation of yours seems to clash with that for `fh` - why: there are models which need PI already specified in `fit`. For example: models fit using a Q-loss aka pinball loss for that specific confidence level. Thus, if your argumentation were consistent, you would want the PI to be specified at construction (which I would somewhat disagree with in line with my comment about (ii) above).","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/555972471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/556571142","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-556571142","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":556571142,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjU3MTE0Mg==","user":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"created_at":"2019-11-21T00:13:30Z","updated_at":"2019-11-21T00:13:30Z","author_association":"CONTRIBUTOR","body":"> (i) \"fit/predict should have a unified/consistent interface\" - I completely agree with this, though I would restrict this requirement within \"task types\", of which there are multiple.\r\n> For example, a supervised learner will naturally expects a different input (X/y data frames) than a forecaster (series). But of course within the \"task type\", all learners should adhere to the same specification standard for methods, interfaces, etc.\r\n\r\nAbsolutely - I think this is more or less already the case, unless I'm mistaken? Just there are a few exceptions to the rule that aren't being adhered to (like the DummyForecaster).\r\n\r\n> (ii) \"stick fh in the constructor\" - my intuition says \"don't\" here, since there are methods that don't need a fh specified that early.\r\n\r\nAgain this suggestion was specific to DummyForecaster (or any other forecaster that needs `fh` before `predict`). The only thing I'd want to enforce in this approach is specifiying `fh` in `predict` and not in `fit`. `__init__` would be more relaxed and allow you to code in the exceptions to the rule, such as forecasters that need to know `fh` beforehand. So in the case of DummyForecaster you'd be specifying `fh` twice, which seems a little wasteful but it's there to guarantee compliance with the interface. Other forecasters would only need to specify `fh` in the `predict` method.\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/556571142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/557275451","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-557275451","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":557275451,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzI3NTQ1MQ==","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2019-11-21T21:16:34Z","updated_at":"2019-11-21T21:16:34Z","author_association":"COLLABORATOR","body":"Valid point. Just to play the devil's advocate: can anyone think of a situation where it is of substantial advantage to specify `fh` late in `predict` and not already in `fit`?\r\n\r\nIt's true that some learners don't need it, but is there (beyond usabiluty) any advantage to not supply it, e.g., in deployment scenarios?","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/557275451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/580192742","html_url":"https://github.com/sktime/sktime/issues/199#issuecomment-580192742","issue_url":"https://api.github.com/repos/sktime/sktime/issues/199","id":580192742,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDE5Mjc0Mg==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2020-01-30T10:39:32Z","updated_at":"2020-01-30T10:39:32Z","author_association":"COLLABORATOR","body":"Fixed in #218 ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/580192742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"id":2992812095,"node_id":"MDExOkNsb3NlZEV2ZW50Mjk5MjgxMjA5NQ==","url":"https://api.github.com/repos/sktime/sktime/issues/events/2992812095","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-01-30T10:39:32Z","state_reason":null,"performed_via_github_app":null},{"id":2992812138,"node_id":"MDI2Ok1vdmVkQ29sdW1uc0luUHJvamVjdEV2ZW50Mjk5MjgxMjEzOA==","url":"https://api.github.com/repos/sktime/sktime/issues/events/2992812138","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"event":"moved_columns_in_project","commit_id":null,"commit_url":null,"created_at":"2020-01-30T10:39:33Z","project_card":{"id":29354259,"url":"https://api.github.com/projects/columns/cards/29354259","project_id":2386754,"project_url":"https://api.github.com/projects/2386754","column_name":"Done","previous_column_name":"To do"},"performed_via_github_app":null}]