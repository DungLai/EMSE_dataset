[{"id":8153945190,"node_id":"LE_lADOCVKAsc5akTONzwAAAAHmA1Rm","url":"https://api.github.com/repos/sktime/sktime/issues/events/8153945190","actor":{"login":"KishManani","id":30973056,"node_id":"MDQ6VXNlcjMwOTczMDU2","avatar_url":"https://avatars.githubusercontent.com/u/30973056?v=4","gravatar_id":"","url":"https://api.github.com/users/KishManani","html_url":"https://github.com/KishManani","followers_url":"https://api.github.com/users/KishManani/followers","following_url":"https://api.github.com/users/KishManani/following{/other_user}","gists_url":"https://api.github.com/users/KishManani/gists{/gist_id}","starred_url":"https://api.github.com/users/KishManani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KishManani/subscriptions","organizations_url":"https://api.github.com/users/KishManani/orgs","repos_url":"https://api.github.com/users/KishManani/repos","events_url":"https://api.github.com/users/KishManani/events{/privacy}","received_events_url":"https://api.github.com/users/KishManani/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2023-01-04T19:23:32Z","label":{"name":"documentation","color":"f4bdf9"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1371354243","html_url":"https://github.com/sktime/sktime/issues/4062#issuecomment-1371354243","issue_url":"https://api.github.com/repos/sktime/sktime/issues/4062","id":1371354243,"node_id":"IC_kwDOCVKAsc5RvTSD","user":{"login":"KishManani","id":30973056,"node_id":"MDQ6VXNlcjMwOTczMDU2","avatar_url":"https://avatars.githubusercontent.com/u/30973056?v=4","gravatar_id":"","url":"https://api.github.com/users/KishManani","html_url":"https://github.com/KishManani","followers_url":"https://api.github.com/users/KishManani/followers","following_url":"https://api.github.com/users/KishManani/following{/other_user}","gists_url":"https://api.github.com/users/KishManani/gists{/gist_id}","starred_url":"https://api.github.com/users/KishManani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KishManani/subscriptions","organizations_url":"https://api.github.com/users/KishManani/orgs","repos_url":"https://api.github.com/users/KishManani/repos","events_url":"https://api.github.com/users/KishManani/events{/privacy}","received_events_url":"https://api.github.com/users/KishManani/received_events","type":"User","site_admin":false},"created_at":"2023-01-04T19:54:24Z","updated_at":"2023-01-04T19:54:24Z","author_association":"CONTRIBUTOR","body":"Update: Actually this might be isolated to `WindowSummarizer` as the groupby operations in https://github.com/sktime/sktime/pull/3935 and https://github.com/sktime/sktime/pull/4061 don't act on the non-time index.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1371354243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"KishManani","id":30973056,"node_id":"MDQ6VXNlcjMwOTczMDU2","avatar_url":"https://avatars.githubusercontent.com/u/30973056?v=4","gravatar_id":"","url":"https://api.github.com/users/KishManani","html_url":"https://github.com/KishManani","followers_url":"https://api.github.com/users/KishManani/followers","following_url":"https://api.github.com/users/KishManani/following{/other_user}","gists_url":"https://api.github.com/users/KishManani/gists{/gist_id}","starred_url":"https://api.github.com/users/KishManani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KishManani/subscriptions","organizations_url":"https://api.github.com/users/KishManani/orgs","repos_url":"https://api.github.com/users/KishManani/repos","events_url":"https://api.github.com/users/KishManani/events{/privacy}","received_events_url":"https://api.github.com/users/KishManani/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1371554284","html_url":"https://github.com/sktime/sktime/issues/4062#issuecomment-1371554284","issue_url":"https://api.github.com/repos/sktime/sktime/issues/4062","id":1371554284,"node_id":"IC_kwDOCVKAsc5RwEHs","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2023-01-04T23:48:59Z","updated_at":"2023-01-04T23:48:59Z","author_association":"COLLABORATOR","body":"can you kindly post code with a dummy example? I can't quite visualize the failure case and the expected outcome.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1371554284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"id":8155403905,"node_id":"UNLE_lADOCVKAsc5akTONzwAAAAHmGZaB","url":"https://api.github.com/repos/sktime/sktime/issues/events/8155403905","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"unlabeled","commit_id":null,"commit_url":null,"created_at":"2023-01-04T23:49:13Z","label":{"name":"documentation","color":"f4bdf9"},"performed_via_github_app":null},{"id":8155403908,"node_id":"LE_lADOCVKAsc5akTONzwAAAAHmGZaE","url":"https://api.github.com/repos/sktime/sktime/issues/events/8155403908","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2023-01-04T23:49:13Z","label":{"name":"module:transformations","color":"0865AF"},"performed_via_github_app":null},{"id":8155403910,"node_id":"LE_lADOCVKAsc5akTONzwAAAAHmGZaG","url":"https://api.github.com/repos/sktime/sktime/issues/events/8155403910","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2023-01-04T23:49:13Z","label":{"name":"enhancement","color":"fef2c0"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1374539704","html_url":"https://github.com/sktime/sktime/issues/4062#issuecomment-1374539704","issue_url":"https://api.github.com/repos/sktime/sktime/issues/4062","id":1374539704,"node_id":"IC_kwDOCVKAsc5R7c-4","user":{"login":"KishManani","id":30973056,"node_id":"MDQ6VXNlcjMwOTczMDU2","avatar_url":"https://avatars.githubusercontent.com/u/30973056?v=4","gravatar_id":"","url":"https://api.github.com/users/KishManani","html_url":"https://github.com/KishManani","followers_url":"https://api.github.com/users/KishManani/followers","following_url":"https://api.github.com/users/KishManani/following{/other_user}","gists_url":"https://api.github.com/users/KishManani/gists{/gist_id}","starred_url":"https://api.github.com/users/KishManani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KishManani/subscriptions","organizations_url":"https://api.github.com/users/KishManani/orgs","repos_url":"https://api.github.com/users/KishManani/repos","events_url":"https://api.github.com/users/KishManani/events{/privacy}","received_events_url":"https://api.github.com/users/KishManani/received_events","type":"User","site_admin":false},"created_at":"2023-01-07T16:59:02Z","updated_at":"2023-01-07T17:02:21Z","author_association":"CONTRIBUTOR","body":"Of course! Checkout out this [issue](https://github.com/pandas-dev/pandas/issues/17631) which illustrates how columns with the `category` dtype behave during `groupby`. \r\n\r\nHere is a dummy example about how this could effect the performance of transformers that use `groupby`:\r\n```Python\r\nimport pandas as pd\r\nfrom sklearn import clone\r\nfrom sktime.transformations.series.summarize import WindowSummarizer\r\nfrom sktime.utils._testing.hierarchical import _make_hierarchical\r\n\r\n# Make hierarchical data\r\ndf = _make_hierarchical(hierarchy_levels=(10000,), min_timepoints=1000, max_timepoints=1000)\r\n\r\n# Create the same panel dataframe with\r\n# the index type being categorical\r\ndf_cat = df.reset_index()\r\ndf_cat[\"h0\"] = df_cat[\"h0\"].astype(\"category\").cat.as_ordered()\r\ndf_cat = df_cat.set_index([\"h0\", \"time\"])\r\n\r\n# Take a sample of the time series instances.\r\n# Something we might want to do for our own application.\r\nidx_cat = df_cat.index.levels[0][:3]\r\nidx_obj = df.index.levels[0][:3]\r\n\r\ndf_sample_cat = df_cat.loc[idx_cat]\r\ndf_sample = df.loc[idx_obj]\r\n\r\n# Create the same panel dataframe\r\n# but drop the unused categories\r\nindex_cat = df_sample_cat.index.get_level_values(0).remove_unused_categories()\r\ntime_index = df_sample_cat.index.get_level_values(-1)\r\ndf_sample_cat_slim = df_sample_cat.set_index(keys=[index_cat, time_index])\r\n\r\n# Make transformer \r\ntrafo = WindowSummarizer(\r\n    lag_feature={\r\n        \"lag\": [1, 2, 3,],  # Lag features.\r\n        \"mean\": [[1, 3]]\r\n    },\r\n    target_cols=[\"c0\"],\r\n    truncate=\"bfill\",  # Backfill missing values from lagging and windowing.\r\n)\r\n\r\n# First level index has object type\r\n%%timeit\r\ntrafo.fit(df_sample)\r\n# 21.6 ms ± 299 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n\r\n%%timeit\r\nresult = trafo.transform(df_sample)\r\n# 49.6 ms ± 1.96 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n\r\n# First level index has categorical type \r\n%%timeit\r\ntrafo.fit(df_sample_cat)\r\n# 36.5 ms ± 2.26 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n\r\n%%timeit\r\nresult = trafo.transform(df_sample_cat)\r\n# 81.5 ms ± 2.45 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n\r\n# First level index has categorical type \r\n# but drop the unused categories in the index\r\n# (i.e., the time series instances no longer present)\r\n%%timeit\r\ntrafo.fit(df_sample_cat_slim)\r\n# 23.5 ms ± 1.52 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n\r\n%%timeit\r\ntrafo.transform(df_sample_cat_slim)\r\n# 39.8 ms ± 434 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n```\r\n\r\nTwo observations:\r\n1) The dataframe which has a categorical index containing the categories of the original dataframe can take about twice as long to run. \r\n2) Stochastically, sometimes when I run `transform` for the first it can take up to 1-2 seconds to run. I'm not sure why... even after re-creating the transformer I can't systematically reproduce this. \r\n\r\nOne comment:\r\n1) If a transformer does not know it is dealing with a `CategoricalIndex` then after doing any `groupby` operations internally, we may end up with a dataframe with more instances than was provided to the transformer.\r\n\r\nI still think 3 possible solutions are the ones I've listed [above](https://github.com/sktime/sktime/issues/4062#issue-1519465357). ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1374539704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"KishManani","id":30973056,"node_id":"MDQ6VXNlcjMwOTczMDU2","avatar_url":"https://avatars.githubusercontent.com/u/30973056?v=4","gravatar_id":"","url":"https://api.github.com/users/KishManani","html_url":"https://github.com/KishManani","followers_url":"https://api.github.com/users/KishManani/followers","following_url":"https://api.github.com/users/KishManani/following{/other_user}","gists_url":"https://api.github.com/users/KishManani/gists{/gist_id}","starred_url":"https://api.github.com/users/KishManani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KishManani/subscriptions","organizations_url":"https://api.github.com/users/KishManani/orgs","repos_url":"https://api.github.com/users/KishManani/repos","events_url":"https://api.github.com/users/KishManani/events{/privacy}","received_events_url":"https://api.github.com/users/KishManani/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1377292674","html_url":"https://github.com/sktime/sktime/issues/4062#issuecomment-1377292674","issue_url":"https://api.github.com/repos/sktime/sktime/issues/4062","id":1377292674,"node_id":"IC_kwDOCVKAsc5SF9GC","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2023-01-10T13:35:30Z","updated_at":"2023-01-10T13:35:30Z","author_association":"COLLABORATOR","body":"Ah, thanks for the explanation!\r\n\r\nI have some comments and questions.\r\n\r\nQuestion: do we know how in your original example a lot of categories ended up in the index? Maybe there was sth that should not have happened in the first place.\r\n\r\nComment:\r\nI think I understand the problem now. May I rephrase to check whether I do:\r\n* a `CategoricalIndex` carries with it the \"universe of categories\". This may be much larger than the actualy occurring categories, and typically happens when row sub-setting or selecting a frame with a `CategoricalIndex`. Let's call this \"situation A\"\r\n* vanilla `groupby` is inefficient when applied to a `CategoricalIndex` in situation A, as compared to a `groupby` loop over only the occurring categories (which is done when `observed=True`)\r\n* that's the problem in this case, right?\r\n\r\nRegarding solutions, I think `observed=True` is indeed the most straighforward one, and seems to address the issue.\r\n\r\nI also see a fourth solution: in input checks, always coerce input series so that `CategoricalIndex` has minimal universe. I wouldn't see where we would carry along information of a larger universe where it was subsampled from - but I might be overlooking sth here.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1377292674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1379565789","html_url":"https://github.com/sktime/sktime/issues/4062#issuecomment-1379565789","issue_url":"https://api.github.com/repos/sktime/sktime/issues/4062","id":1379565789,"node_id":"IC_kwDOCVKAsc5SOoDd","user":{"login":"KishManani","id":30973056,"node_id":"MDQ6VXNlcjMwOTczMDU2","avatar_url":"https://avatars.githubusercontent.com/u/30973056?v=4","gravatar_id":"","url":"https://api.github.com/users/KishManani","html_url":"https://github.com/KishManani","followers_url":"https://api.github.com/users/KishManani/followers","following_url":"https://api.github.com/users/KishManani/following{/other_user}","gists_url":"https://api.github.com/users/KishManani/gists{/gist_id}","starred_url":"https://api.github.com/users/KishManani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KishManani/subscriptions","organizations_url":"https://api.github.com/users/KishManani/orgs","repos_url":"https://api.github.com/users/KishManani/repos","events_url":"https://api.github.com/users/KishManani/events{/privacy}","received_events_url":"https://api.github.com/users/KishManani/received_events","type":"User","site_admin":false},"created_at":"2023-01-11T22:27:29Z","updated_at":"2023-01-11T22:29:30Z","author_association":"CONTRIBUTOR","body":"> Question: do we know how in your original example a lot of categories ended up in the index? Maybe there was sth that should not have happened in the first place.\r\n\r\nSo in my case it was the following. I'm working with the M5 dataset. To save on memory I converted any categorical column to the `categorical` dtype and I store this as a partitioned parquet file. I then load a segment of the data that I want to train a model with. However, at this point the columns remember all the categories, not just the ones in the segment of the data that I loaded. So, after loading the data I then have two choices: 1) use `remove_unused_categories` as a preprocessing step, 2) in any `groupby` I do I specify that `observed=True`. \r\n\r\n> that's the problem in this case, right?\r\n\r\nYour understanding is correct.\r\n\r\n> I also see a fourth solution: in input checks, always coerce input series so that CategoricalIndex has minimal universe. I wouldn't see where we would carry along information of a larger universe where it was subsampled from - but I might be overlooking sth here.\r\n\r\nThis is also a neat solution. \r\n\r\nI have a nagging doubt though and would love to get your opinion. Do you think, however, that we're dealing with a peculiarity of `pandas` and something that perhaps the user should consider instead? Perhaps I, as the user, should be aware if I'm carrying around the universe of categories when I only need a subset and choose to get rid of them myself?\r\n","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1379565789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"KishManani","id":30973056,"node_id":"MDQ6VXNlcjMwOTczMDU2","avatar_url":"https://avatars.githubusercontent.com/u/30973056?v=4","gravatar_id":"","url":"https://api.github.com/users/KishManani","html_url":"https://github.com/KishManani","followers_url":"https://api.github.com/users/KishManani/followers","following_url":"https://api.github.com/users/KishManani/following{/other_user}","gists_url":"https://api.github.com/users/KishManani/gists{/gist_id}","starred_url":"https://api.github.com/users/KishManani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KishManani/subscriptions","organizations_url":"https://api.github.com/users/KishManani/orgs","repos_url":"https://api.github.com/users/KishManani/repos","events_url":"https://api.github.com/users/KishManani/events{/privacy}","received_events_url":"https://api.github.com/users/KishManani/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1380537528","html_url":"https://github.com/sktime/sktime/issues/4062#issuecomment-1380537528","issue_url":"https://api.github.com/repos/sktime/sktime/issues/4062","id":1380537528,"node_id":"IC_kwDOCVKAsc5SSVS4","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"created_at":"2023-01-12T15:12:07Z","updated_at":"2023-01-12T15:12:07Z","author_association":"COLLABORATOR","body":"> I have a nagging doubt though and would love to get your opinion. Do you think, however, that we're dealing with a peculiarity of `pandas` and something that perhaps the user should consider instead? Perhaps I, as the user, should be aware if I'm carrying around the universe of categories when I only need a subset and choose to get rid of them myself?\r\n\r\nHm, I suppose there are multiple things that come together here.\r\n\r\n* as a user, I think I should be aware of the data model. A categorical column, in common modern formalism, does come with its own universe. So, if I prepare my data, I should prepare the universe as appropriate.\r\n* Having said that, it is probably fair that in re-sampling the universe of the \"whole\" is retained.\r\n* Also, when re-sampling happens inside an estimator rather than at the hands of a user, there is a separate decision to make - \"should the user be aware\" cannot impact this, because it happens layers removed from the user. Not sure when and where that situation occurs, as opposed to the one where a user handles the data manually, but it's worth noting I think.\r\n\r\nRegarding a clear answer - at the moment I can't see one, but I will keep thinking.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/1380537528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false}}]