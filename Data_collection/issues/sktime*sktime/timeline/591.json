[{"id":4164267575,"node_id":"MDEyOkxhYmVsZWRFdmVudDQxNjQyNjc1NzU=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4164267575","actor":{"login":"alpozcan","id":9840837,"node_id":"MDQ6VXNlcjk4NDA4Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/9840837?v=4","gravatar_id":"","url":"https://api.github.com/users/alpozcan","html_url":"https://github.com/alpozcan","followers_url":"https://api.github.com/users/alpozcan/followers","following_url":"https://api.github.com/users/alpozcan/following{/other_user}","gists_url":"https://api.github.com/users/alpozcan/gists{/gist_id}","starred_url":"https://api.github.com/users/alpozcan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpozcan/subscriptions","organizations_url":"https://api.github.com/users/alpozcan/orgs","repos_url":"https://api.github.com/users/alpozcan/repos","events_url":"https://api.github.com/users/alpozcan/events{/privacy}","received_events_url":"https://api.github.com/users/alpozcan/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2021-01-04T10:12:27Z","label":{"name":"bug","color":"d73a4a"},"performed_via_github_app":null},{"actor":{"login":"alpozcan","id":9840837,"node_id":"MDQ6VXNlcjk4NDA4Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/9840837?v=4","gravatar_id":"","url":"https://api.github.com/users/alpozcan","html_url":"https://github.com/alpozcan","followers_url":"https://api.github.com/users/alpozcan/followers","following_url":"https://api.github.com/users/alpozcan/following{/other_user}","gists_url":"https://api.github.com/users/alpozcan/gists{/gist_id}","starred_url":"https://api.github.com/users/alpozcan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpozcan/subscriptions","organizations_url":"https://api.github.com/users/alpozcan/orgs","repos_url":"https://api.github.com/users/alpozcan/repos","events_url":"https://api.github.com/users/alpozcan/events{/privacy}","received_events_url":"https://api.github.com/users/alpozcan/received_events","type":"User","site_admin":false},"created_at":"2021-01-04T10:18:40Z","updated_at":"2021-01-04T10:18:40Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/numba/numba/issues/6616","repository_url":"https://api.github.com/repos/numba/numba","labels_url":"https://api.github.com/repos/numba/numba/issues/6616/labels{/name}","comments_url":"https://api.github.com/repos/numba/numba/issues/6616/comments","events_url":"https://api.github.com/repos/numba/numba/issues/6616/events","html_url":"https://github.com/numba/numba/issues/6616","id":777986451,"node_id":"MDU6SXNzdWU3Nzc5ODY0NTE=","number":6616,"title":"Use of unsupported opcode (IS_OP) found on Python 3.9.1","user":{"login":"alpozcan","id":9840837,"node_id":"MDQ6VXNlcjk4NDA4Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/9840837?v=4","gravatar_id":"","url":"https://api.github.com/users/alpozcan","html_url":"https://github.com/alpozcan","followers_url":"https://api.github.com/users/alpozcan/followers","following_url":"https://api.github.com/users/alpozcan/following{/other_user}","gists_url":"https://api.github.com/users/alpozcan/gists{/gist_id}","starred_url":"https://api.github.com/users/alpozcan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpozcan/subscriptions","organizations_url":"https://api.github.com/users/alpozcan/orgs","repos_url":"https://api.github.com/users/alpozcan/repos","events_url":"https://api.github.com/users/alpozcan/events{/privacy}","received_events_url":"https://api.github.com/users/alpozcan/received_events","type":"User","site_admin":false},"labels":[{"id":971733,"node_id":"MDU6TGFiZWw5NzE3MzM=","url":"https://api.github.com/repos/numba/numba/labels/duplicate","name":"duplicate","color":"cccccc","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-01-04T10:18:39Z","updated_at":"2021-01-04T10:26:41Z","closed_at":"2021-01-04T10:26:32Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":3659275,"node_id":"MDEwOlJlcG9zaXRvcnkzNjU5Mjc1","name":"numba","full_name":"numba/numba","private":false,"owner":{"login":"numba","id":1628082,"node_id":"MDEyOk9yZ2FuaXphdGlvbjE2MjgwODI=","avatar_url":"https://avatars.githubusercontent.com/u/1628082?v=4","gravatar_id":"","url":"https://api.github.com/users/numba","html_url":"https://github.com/numba","followers_url":"https://api.github.com/users/numba/followers","following_url":"https://api.github.com/users/numba/following{/other_user}","gists_url":"https://api.github.com/users/numba/gists{/gist_id}","starred_url":"https://api.github.com/users/numba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/numba/subscriptions","organizations_url":"https://api.github.com/users/numba/orgs","repos_url":"https://api.github.com/users/numba/repos","events_url":"https://api.github.com/users/numba/events{/privacy}","received_events_url":"https://api.github.com/users/numba/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/numba/numba","description":"NumPy aware dynamic Python compiler using LLVM","fork":false,"url":"https://api.github.com/repos/numba/numba","forks_url":"https://api.github.com/repos/numba/numba/forks","keys_url":"https://api.github.com/repos/numba/numba/keys{/key_id}","collaborators_url":"https://api.github.com/repos/numba/numba/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/numba/numba/teams","hooks_url":"https://api.github.com/repos/numba/numba/hooks","issue_events_url":"https://api.github.com/repos/numba/numba/issues/events{/number}","events_url":"https://api.github.com/repos/numba/numba/events","assignees_url":"https://api.github.com/repos/numba/numba/assignees{/user}","branches_url":"https://api.github.com/repos/numba/numba/branches{/branch}","tags_url":"https://api.github.com/repos/numba/numba/tags","blobs_url":"https://api.github.com/repos/numba/numba/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/numba/numba/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/numba/numba/git/refs{/sha}","trees_url":"https://api.github.com/repos/numba/numba/git/trees{/sha}","statuses_url":"https://api.github.com/repos/numba/numba/statuses/{sha}","languages_url":"https://api.github.com/repos/numba/numba/languages","stargazers_url":"https://api.github.com/repos/numba/numba/stargazers","contributors_url":"https://api.github.com/repos/numba/numba/contributors","subscribers_url":"https://api.github.com/repos/numba/numba/subscribers","subscription_url":"https://api.github.com/repos/numba/numba/subscription","commits_url":"https://api.github.com/repos/numba/numba/commits{/sha}","git_commits_url":"https://api.github.com/repos/numba/numba/git/commits{/sha}","comments_url":"https://api.github.com/repos/numba/numba/comments{/number}","issue_comment_url":"https://api.github.com/repos/numba/numba/issues/comments{/number}","contents_url":"https://api.github.com/repos/numba/numba/contents/{+path}","compare_url":"https://api.github.com/repos/numba/numba/compare/{base}...{head}","merges_url":"https://api.github.com/repos/numba/numba/merges","archive_url":"https://api.github.com/repos/numba/numba/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/numba/numba/downloads","issues_url":"https://api.github.com/repos/numba/numba/issues{/number}","pulls_url":"https://api.github.com/repos/numba/numba/pulls{/number}","milestones_url":"https://api.github.com/repos/numba/numba/milestones{/number}","notifications_url":"https://api.github.com/repos/numba/numba/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/numba/numba/labels{/name}","releases_url":"https://api.github.com/repos/numba/numba/releases{/id}","deployments_url":"https://api.github.com/repos/numba/numba/deployments","created_at":"2012-03-08T11:12:43Z","updated_at":"2023-01-19T03:11:20Z","pushed_at":"2023-01-18T22:24:39Z","git_url":"git://github.com/numba/numba.git","ssh_url":"git@github.com:numba/numba.git","clone_url":"https://github.com/numba/numba.git","svn_url":"https://github.com/numba/numba","homepage":"http://numba.pydata.org/","size":72950,"stargazers_count":8206,"watchers_count":8206,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":false,"forks_count":987,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":1581,"license":{"key":"bsd-2-clause","name":"BSD 2-Clause \"Simplified\" License","spdx_id":"BSD-2-Clause","url":"https://api.github.com/licenses/bsd-2-clause","node_id":"MDc6TGljZW5zZTQ="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["compiler","cuda","llvm","numpy","parallel","python"],"visibility":"public","forks":987,"open_issues":1581,"watchers":8206,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"<!--\r\n\r\nThanks for opening an issue! To help the Numba team handle your information\r\nefficiently, please first ensure that there is no other issue present that\r\nalready describes the issue you have\r\n(search at https://github.com/numba/numba/issues?&q=is%3Aissue).\r\n\r\n-->\r\n\r\n## Reporting a bug\r\n\r\n<!--\r\n\r\nBefore submitting a bug report please ensure that you can check off these boxes:\r\n\r\n-->\r\n\r\n- [X] I have tried using the latest released version of Numba (most recent is\r\n visible in the change log (https://github.com/numba/numba/blob/master/CHANGE_LOG).\r\n- [X] I have included a self contained code sample to reproduce the problem.\r\n  i.e. it's possible to run as 'python bug.py'.\r\n\r\n**Describe the bug**\r\n\r\nWhile running the unmodified code of [sktime's the second example](https://github.com/alan-turing-institute/sktime#time-series-classification), the following error is encountered:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nUnsupportedError                          Traceback (most recent call last)\r\n<ipython-input-2-c43f88b2feab> in <module>\r\n----> 1 from sktime.classification.all import *\r\n      2 from sklearn.model_selection import train_test_split\r\n      3 from sklearn.metrics import accuracy_score\r\n      4 \r\n      5 X, y = load_arrow_head(return_X_y=True)\r\n\r\n~/python3/lib/python3.9/site-packages/sktime/classification/all/__init__.py in <module>\r\n     31 from sktime.classification.compose import ColumnEnsembleClassifier\r\n     32 from sktime.classification.compose import TimeSeriesForestClassifier\r\n---> 33 from sktime.classification.dictionary_based import BOSSEnsemble\r\n     34 from sktime.classification.dictionary_based import BOSSIndividual\r\n     35 from sktime.classification.dictionary_based import TemporalDictionaryEnsemble\r\n\r\n~/python3/lib/python3.9/site-packages/sktime/classification/dictionary_based/__init__.py in <module>\r\n      9 ]\r\n     10 \r\n---> 11 from sktime.classification.dictionary_based._boss import BOSSEnsemble\r\n     12 from sktime.classification.dictionary_based._boss import BOSSIndividual\r\n     13 from sktime.classification.dictionary_based._weasel import WEASEL\r\n\r\n~/python3/lib/python3.9/site-packages/sktime/classification/dictionary_based/_boss.py in <module>\r\n     18 \r\n     19 from sktime.classification.base import BaseClassifier\r\n---> 20 from sktime.transformers.series_as_features.dictionary_based import SFA\r\n     21 from sktime.utils.validation.series_as_features import check_X\r\n     22 from sktime.utils.validation.series_as_features import check_X_y\r\n\r\n~/python3/lib/python3.9/site-packages/sktime/transformers/series_as_features/dictionary_based/__init__.py in <module>\r\n      7 from sktime.transformers.series_as_features.dictionary_based._paa import PAA\r\n      8 from sktime.transformers.series_as_features.dictionary_based._sax import SAX\r\n----> 9 from sktime.transformers.series_as_features.dictionary_based._sfa import SFA\r\n\r\n~/python3/lib/python3.9/site-packages/sktime/transformers/series_as_features/dictionary_based/_sfa.py in <module>\r\n     24 \r\n     25 \r\n---> 26 class SFA(BaseSeriesAsFeaturesTransformer):\r\n     27     \"\"\"SFA (Symbolic Fourier Approximation) Transformer, as described in\r\n     28 \r\n\r\n~/python3/lib/python3.9/site-packages/sktime/transformers/series_as_features/dictionary_based/_sfa.py in SFA()\r\n    585     @staticmethod\r\n    586     @njit(\"float64[:](float64[:],int32,int32,float64[:])\", fastmath=True, cache=True)\r\n--> 587     def _calc_incremental_mean_std(series, end, window_size, stds=None):\r\n    588         # means = np.zeros(end)\r\n    589 \r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/decorators.py in wrapper(func)\r\n    216             with typeinfer.register_dispatcher(disp):\r\n    217                 for sig in sigs:\r\n--> 218                     disp.compile(sig)\r\n    219                 disp.disable_compile()\r\n    220         return disp\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler_lock.py in _acquire_compile_lock(*args, **kwargs)\r\n     30         def _acquire_compile_lock(*args, **kwargs):\r\n     31             with self:\r\n---> 32                 return func(*args, **kwargs)\r\n     33         return _acquire_compile_lock\r\n     34 \r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/dispatcher.py in compile(self, sig)\r\n    817             self._cache_misses[sig] += 1\r\n    818             try:\r\n--> 819                 cres = self._compiler.compile(args, return_type)\r\n    820             except errors.ForceLiteralArg as e:\r\n    821                 def folded(args, kws):\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/dispatcher.py in compile(self, args, return_type)\r\n     76 \r\n     77     def compile(self, args, return_type):\r\n---> 78         status, retval = self._compile_cached(args, return_type)\r\n     79         if status:\r\n     80             return retval\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/dispatcher.py in _compile_cached(self, args, return_type)\r\n     90 \r\n     91         try:\r\n---> 92             retval = self._compile_core(args, return_type)\r\n     93         except errors.TypingError as e:\r\n     94             self._failed_cache[key] = e\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/dispatcher.py in _compile_core(self, args, return_type)\r\n    103 \r\n    104         impl = self._get_implementation(args, {})\r\n--> 105         cres = compiler.compile_extra(self.targetdescr.typing_context,\r\n    106                                       self.targetdescr.target_context,\r\n    107                                       impl,\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler.py in compile_extra(typingctx, targetctx, func, args, return_type, flags, locals, library, pipeline_class)\r\n    625     pipeline = pipeline_class(typingctx, targetctx, library,\r\n    626                               args, return_type, flags, locals)\r\n--> 627     return pipeline.compile_extra(func)\r\n    628 \r\n    629 \r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler.py in compile_extra(self, func)\r\n    361         self.state.lifted = ()\r\n    362         self.state.lifted_from = None\r\n--> 363         return self._compile_bytecode()\r\n    364 \r\n    365     def compile_ir(self, func_ir, lifted=(), lifted_from=None):\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler.py in _compile_bytecode(self)\r\n    423         \"\"\"\r\n    424         assert self.state.func_ir is None\r\n--> 425         return self._compile_core()\r\n    426 \r\n    427     def _compile_ir(self):\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler.py in _compile_core(self)\r\n    403                 self.state.status.fail_reason = e\r\n    404                 if is_final_pipeline:\r\n--> 405                     raise e\r\n    406         else:\r\n    407             raise CompilerError(\"All available pipelines exhausted\")\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler.py in _compile_core(self)\r\n    394             res = None\r\n    395             try:\r\n--> 396                 pm.run(self.state)\r\n    397                 if self.state.cr is not None:\r\n    398                     break\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler_machinery.py in run(self, state)\r\n    339                     (self.pipeline_name, pass_desc)\r\n    340                 patched_exception = self._patch_error(msg, e)\r\n--> 341                 raise patched_exception\r\n    342 \r\n    343     def dependency_analysis(self):\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler_machinery.py in run(self, state)\r\n    330                 pass_inst = _pass_registry.get(pss).pass_inst\r\n    331                 if isinstance(pass_inst, CompilerPass):\r\n--> 332                     self._runPass(idx, pass_inst, state)\r\n    333                 else:\r\n    334                     raise BaseException(\"Legacy pass in use\")\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler_lock.py in _acquire_compile_lock(*args, **kwargs)\r\n     30         def _acquire_compile_lock(*args, **kwargs):\r\n     31             with self:\r\n---> 32                 return func(*args, **kwargs)\r\n     33         return _acquire_compile_lock\r\n     34 \r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler_machinery.py in _runPass(self, index, pss, internal_state)\r\n    289             mutated |= check(pss.run_initialization, internal_state)\r\n    290         with SimpleTimer() as pass_time:\r\n--> 291             mutated |= check(pss.run_pass, internal_state)\r\n    292         with SimpleTimer() as finalize_time:\r\n    293             mutated |= check(pss.run_finalizer, internal_state)\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/compiler_machinery.py in check(func, compiler_state)\r\n    262 \r\n    263         def check(func, compiler_state):\r\n--> 264             mangled = func(compiler_state)\r\n    265             if mangled not in (True, False):\r\n    266                 msg = (\"CompilerPass implementations should return True/False. \"\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/untyped_passes.py in run_pass(self, state)\r\n     84         bc = state['bc']\r\n     85         interp = interpreter.Interpreter(func_id)\r\n---> 86         func_ir = interp.interpret(bc)\r\n     87         state[\"func_ir\"] = func_ir\r\n     88         return True\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/interpreter.py in interpret(self, bytecode)\r\n    123         else:\r\n    124             flow = Flow(bytecode)\r\n--> 125             flow.run()\r\n    126             self.dfa = AdaptDFA(flow)\r\n    127             self.cfa = AdaptCFA(flow)\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/byteflow.py in run(self)\r\n    105                 # Loop over the state until it is terminated.\r\n    106                 while True:\r\n--> 107                     runner.dispatch(state)\r\n    108                     # Terminated?\r\n    109                     if state.has_terminated():\r\n\r\n~/python3/lib/python3.9/site-packages/numba/core/byteflow.py in dispatch(self, state)\r\n    267         else:\r\n    268             msg = \"Use of unsupported opcode (%s) found\" % inst.opname\r\n--> 269             raise UnsupportedError(msg, loc=self.get_debug_loc(inst.lineno))\r\n    270 \r\n    271     def op_NOP(self, state, inst):\r\n\r\nUnsupportedError: Failed in nopython mode pipeline (step: analyzing bytecode)\r\nUse of unsupported opcode (IS_OP) found\r\n\r\nFile \"../../python3/lib/python3.9/site-packages/sktime/transformers/series_as_features/dictionary_based/_sfa.py\", line 590:\r\n    def _calc_incremental_mean_std(series, end, window_size, stds=None):\r\n        <source elided>\r\n\r\n        if stds is None or len(stds) != end:\r\n        ^\r\n```\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nfrom sktime.classification.all import *\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.metrics import accuracy_score\r\n\r\nX, y = load_arrow_head(return_X_y=True)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y)\r\nclassifier = TimeSeriesForest()\r\nclassifier.fit(X_train, y_train)\r\ny_pred = classifier.predict(X_test)\r\naccuracy_score(y_test, y_pred)\r\n```\r\n\r\n**Expected behavior**\r\n\r\nThe sample should run without any error.\r\n\r\n**Versions**\r\n\r\nDebian 10 OS, Python 3.9.1 compiled from source with `CFLAGS=-march=native -O2 -fomit-frame-pointer -pipe`.\r\nllvmlite Python package version 0.34.0 compiled against LLVM 10.0.1 installed from the official .deb repository.\r\n```\r\nSystem:\r\n    python: 3.9.1 (default, Dec 26 2020, 12:05:43)  [GCC 8.3.0]\r\nexecutable: /home/a/python3/bin/python\r\n   machine: Linux-4.19.0-13-amd64-x86_64-with-glibc2.28\r\n\r\nPython dependencies:\r\n          pip: 20.3.3\r\n   setuptools: 49.2.1\r\n      sklearn: 0.24.0\r\n        numpy: 1.19.4\r\n        scipy: 1.5.4\r\n       Cython: 0.29.17\r\n       pandas: 1.2.0\r\n   matplotlib: 3.3.3\r\n       joblib: 1.0.0\r\n        numba: 0.51.2\r\n     pmdarima: 1.8.0\r\n      tsfresh: 0.17.0\r\n\r\n```\r\n\r\n</details>\r\n\r\nI have opened an issue with the same bug report contents on https://github.com/alan-turing-institute/sktime/issues/591. I wanted to open this issue here as well since this is seems likely to have the root cause in `numba` itself.","reactions":{"url":"https://api.github.com/repos/numba/numba/issues/6616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/numba/numba/issues/6616/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/753902828","html_url":"https://github.com/sktime/sktime/issues/591#issuecomment-753902828","issue_url":"https://api.github.com/repos/sktime/sktime/issues/591","id":753902828,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MzkwMjgyOA==","user":{"login":"alpozcan","id":9840837,"node_id":"MDQ6VXNlcjk4NDA4Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/9840837?v=4","gravatar_id":"","url":"https://api.github.com/users/alpozcan","html_url":"https://github.com/alpozcan","followers_url":"https://api.github.com/users/alpozcan/followers","following_url":"https://api.github.com/users/alpozcan/following{/other_user}","gists_url":"https://api.github.com/users/alpozcan/gists{/gist_id}","starred_url":"https://api.github.com/users/alpozcan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpozcan/subscriptions","organizations_url":"https://api.github.com/users/alpozcan/orgs","repos_url":"https://api.github.com/users/alpozcan/repos","events_url":"https://api.github.com/users/alpozcan/events{/privacy}","received_events_url":"https://api.github.com/users/alpozcan/received_events","type":"User","site_admin":false},"created_at":"2021-01-04T10:47:56Z","updated_at":"2021-01-04T10:47:56Z","author_association":"NONE","body":"confirmed as a known numba issue in https://github.com/numba/numba/issues/6616. Closing this.","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/753902828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"alpozcan","id":9840837,"node_id":"MDQ6VXNlcjk4NDA4Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/9840837?v=4","gravatar_id":"","url":"https://api.github.com/users/alpozcan","html_url":"https://github.com/alpozcan","followers_url":"https://api.github.com/users/alpozcan/followers","following_url":"https://api.github.com/users/alpozcan/following{/other_user}","gists_url":"https://api.github.com/users/alpozcan/gists{/gist_id}","starred_url":"https://api.github.com/users/alpozcan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpozcan/subscriptions","organizations_url":"https://api.github.com/users/alpozcan/orgs","repos_url":"https://api.github.com/users/alpozcan/repos","events_url":"https://api.github.com/users/alpozcan/events{/privacy}","received_events_url":"https://api.github.com/users/alpozcan/received_events","type":"User","site_admin":false}},{"id":4164408162,"node_id":"MDExOkNsb3NlZEV2ZW50NDE2NDQwODE2Mg==","url":"https://api.github.com/repos/sktime/sktime/issues/events/4164408162","actor":{"login":"alpozcan","id":9840837,"node_id":"MDQ6VXNlcjk4NDA4Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/9840837?v=4","gravatar_id":"","url":"https://api.github.com/users/alpozcan","html_url":"https://github.com/alpozcan","followers_url":"https://api.github.com/users/alpozcan/followers","following_url":"https://api.github.com/users/alpozcan/following{/other_user}","gists_url":"https://api.github.com/users/alpozcan/gists{/gist_id}","starred_url":"https://api.github.com/users/alpozcan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpozcan/subscriptions","organizations_url":"https://api.github.com/users/alpozcan/orgs","repos_url":"https://api.github.com/users/alpozcan/repos","events_url":"https://api.github.com/users/alpozcan/events{/privacy}","received_events_url":"https://api.github.com/users/alpozcan/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2021-01-04T10:47:56Z","state_reason":null,"performed_via_github_app":null},{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/754605283","html_url":"https://github.com/sktime/sktime/issues/591#issuecomment-754605283","issue_url":"https://api.github.com/repos/sktime/sktime/issues/591","id":754605283,"node_id":"MDEyOklzc3VlQ29tbWVudDc1NDYwNTI4Mw==","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"created_at":"2021-01-05T12:27:11Z","updated_at":"2021-01-05T12:27:11Z","author_association":"COLLABORATOR","body":"@alpozcan alright thanks for linking the issue here! ","reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/comments/754605283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}},{"id":4169527948,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDE2OTUyNzk0OA==","url":"https://api.github.com/repos/sktime/sktime/issues/events/4169527948","actor":{"login":"alpozcan","id":9840837,"node_id":"MDQ6VXNlcjk4NDA4Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/9840837?v=4","gravatar_id":"","url":"https://api.github.com/users/alpozcan","html_url":"https://github.com/alpozcan","followers_url":"https://api.github.com/users/alpozcan/followers","following_url":"https://api.github.com/users/alpozcan/following{/other_user}","gists_url":"https://api.github.com/users/alpozcan/gists{/gist_id}","starred_url":"https://api.github.com/users/alpozcan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpozcan/subscriptions","organizations_url":"https://api.github.com/users/alpozcan/orgs","repos_url":"https://api.github.com/users/alpozcan/repos","events_url":"https://api.github.com/users/alpozcan/events{/privacy}","received_events_url":"https://api.github.com/users/alpozcan/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-01-05T12:27:11Z","performed_via_github_app":null},{"id":4169527951,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQxNjk1Mjc5NTE=","url":"https://api.github.com/repos/sktime/sktime/issues/events/4169527951","actor":{"login":"alpozcan","id":9840837,"node_id":"MDQ6VXNlcjk4NDA4Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/9840837?v=4","gravatar_id":"","url":"https://api.github.com/users/alpozcan","html_url":"https://github.com/alpozcan","followers_url":"https://api.github.com/users/alpozcan/followers","following_url":"https://api.github.com/users/alpozcan/following{/other_user}","gists_url":"https://api.github.com/users/alpozcan/gists{/gist_id}","starred_url":"https://api.github.com/users/alpozcan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alpozcan/subscriptions","organizations_url":"https://api.github.com/users/alpozcan/orgs","repos_url":"https://api.github.com/users/alpozcan/repos","events_url":"https://api.github.com/users/alpozcan/events{/privacy}","received_events_url":"https://api.github.com/users/alpozcan/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-01-05T12:27:11Z","performed_via_github_app":null}]