{"url":"https://api.github.com/repos/sktime/sktime/issues/3534","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3534/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3534/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3534/events","html_url":"https://github.com/sktime/sktime/issues/3534","id":1399464733,"node_id":"I_kwDOCVKAsc5TaiMd","number":3534,"title":"[ENH] ROCKET should support unequal length data","user":{"login":"maxdd","id":6155973,"node_id":"MDQ6VXNlcjYxNTU5NzM=","avatar_url":"https://avatars.githubusercontent.com/u/6155973?v=4","gravatar_id":"","url":"https://api.github.com/users/maxdd","html_url":"https://github.com/maxdd","followers_url":"https://api.github.com/users/maxdd/followers","following_url":"https://api.github.com/users/maxdd/following{/other_user}","gists_url":"https://api.github.com/users/maxdd/gists{/gist_id}","starred_url":"https://api.github.com/users/maxdd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maxdd/subscriptions","organizations_url":"https://api.github.com/users/maxdd/orgs","repos_url":"https://api.github.com/users/maxdd/repos","events_url":"https://api.github.com/users/maxdd/events{/privacy}","received_events_url":"https://api.github.com/users/maxdd/received_events","type":"User","site_admin":false},"labels":[{"id":3102418261,"node_id":"MDU6TGFiZWwzMTAyNDE4MjYx","url":"https://api.github.com/repos/sktime/sktime/labels/module:classification","name":"module:classification","color":"BEB114","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-10-06T11:57:24Z","updated_at":"2022-10-11T22:41:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\ni'm trying to classify some unequal/variable-length data\r\nI read that ROCKET is capable of supporting this but when i use it i receive\r\n\r\n`Data seen by RocketClassifier instance has unequal length series, but this RocketClassifier instance cannot handle unequal length series. Calls with unequal length series may result in error or unreliable results.`\r\n\r\nI guess it is due to the fact that maybe the current implementation is not supporting it?\r\nOr shall i do something differently from\r\n\r\n```\r\nrocket = RocketClassifier()\r\nrocket.fit(training_segments, np.zeros(len(training_segments)))\r\n```\r\n\r\nIf the \"unequal length\" won't come anytime soon can you suggest a python code that can fill zeros or NaN or whatever value across all the training samples?\r\nI'm currently using nested dataframes out of a dictionary\r\n\r\n```\r\nd['dim_0'].append(training_segment['Var']) //training_segment is a panda df\r\ntraining_segments = pd.DataFrame(data=d)\r\n```\r\n\r\nIn the documentation it is written\r\n\r\n```\r\nTo apply sklearn classifiers directly, the data needs to be reshaped into one of the sklearn compatible 2D data formats. sklearn cannot be used directly with multivariate or unequal length data sets, without making choices in how to insert the data into a 2D structure.\r\n\r\nsktime provides functionality to make these choices explicit and tunable, under a unified interface for time series classifiers.\r\n\r\nsktime also provides pipeline construction functionality for transformers and classifiers that are specific to time series datasets.\r\n```\r\n\r\nas if something is already available but i cant find how","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3534/timeline","performed_via_github_app":null,"state_reason":null}