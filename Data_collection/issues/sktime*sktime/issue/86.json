{"url":"https://api.github.com/repos/sktime/sktime/issues/86","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/86/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/86/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/86/events","html_url":"https://github.com/sktime/sktime/issues/86","id":459464698,"node_id":"MDU6SXNzdWU0NTk0NjQ2OTg=","number":86,"title":"[BUG] TimeSeriesForestClassifier.predict_proba() returns 1-dim array upon single instance input","user":{"login":"LoadingByte","id":2351649,"node_id":"MDQ6VXNlcjIzNTE2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/2351649?v=4","gravatar_id":"","url":"https://api.github.com/users/LoadingByte","html_url":"https://github.com/LoadingByte","followers_url":"https://api.github.com/users/LoadingByte/followers","following_url":"https://api.github.com/users/LoadingByte/following{/other_user}","gists_url":"https://api.github.com/users/LoadingByte/gists{/gist_id}","starred_url":"https://api.github.com/users/LoadingByte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LoadingByte/subscriptions","organizations_url":"https://api.github.com/users/LoadingByte/orgs","repos_url":"https://api.github.com/users/LoadingByte/repos","events_url":"https://api.github.com/users/LoadingByte/events{/privacy}","received_events_url":"https://api.github.com/users/LoadingByte/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"assignees":[{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-06-22T11:24:52Z","updated_at":"2019-06-24T16:30:58Z","closed_at":"2019-06-24T16:21:45Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\n\r\nWhen you feed a single instance into `TimeSeriesForestClassifier.predict_proba()`, i.e., a DataFrame with the following structure:\r\n\r\n&nbsp; | dim_0\r\n-|-\r\n**0** | x1, x2, x3, x4, ...\r\n\r\n...a 1-dimensional array is returned, i.e., an array with the following structure:\r\n\r\n`[p1, p2, p3, ...]`\r\n\r\nEvery other sklearn classifier that I'm aware of, as well as the elastic ensemble classifier from sktime, would return a 2-dimensional array in this case, thus matching the array structure of multi-instance predictions:\r\n\r\n`[[p1, p2, p3, ...]]`\r\n\r\nTherefore, TimeSeriesForestClassifier presents unexpected behavior, which also contradicts the documentation of `predict_proba()`:\r\n\r\n>Returns\r\n>p : array of shape = [n_samples, n_classes] [...]\r\n\r\nThe unexpected behavior is most likely caused by a seemingly deliberate conversion statement at the end of `predict_proba()`:\r\n\r\n```python\r\nif len(all_proba) == 1:\r\n    return all_proba[0]\r\nelse:\r\n    return all_proba\r\n```\r\n\r\nNote that this unexpected behavior presumably also confuses `TimeSeriesForestClassifier.predict()` when inputting single instances, since that leads to an exception hinting at `predict()` tripping over the unusual 1-dimensional return format:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAxisError                                 Traceback (most recent call last)\r\n<ipython-input-56-a8b067ca3dcd> in <module>\r\n----> 1 clf.predict(X_test.iloc[0:1, :])\r\n\r\n~/.conda/envs/py3/lib/python3.7/site-packages/sklearn/utils/metaestimators.py in <lambda>(*args, **kwargs)\r\n    114 \r\n    115         # lambda, but not partial, allows help() to work with update_wrapper\r\n--> 116         out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)\r\n    117         # update the docstring of the returned function\r\n    118         update_wrapper(out, self.fn)\r\n\r\n~/.conda/envs/py3/lib/python3.7/site-packages/sklearn/pipeline.py in predict(self, X, **predict_params)\r\n    420         for _, name, transform in self._iter(with_final=False):\r\n    421             Xt = transform.transform(Xt)\r\n--> 422         return self.steps[-1][-1].predict(Xt, **predict_params)\r\n    423 \r\n    424     @if_delegate_has_method(delegate='_final_estimator')\r\n\r\n~/.conda/envs/py3/lib/python3.7/site-packages/sklearn/ensemble/forest.py in predict(self, X)\r\n    546 \r\n    547         if self.n_outputs_ == 1:\r\n--> 548             return self.classes_.take(np.argmax(proba, axis=1), axis=0)\r\n    549 \r\n    550         else:\r\n\r\n~/.conda/envs/py3/lib/python3.7/site-packages/numpy/core/fromnumeric.py in argmax(a, axis, out)\r\n   1101 \r\n   1102     \"\"\"\r\n-> 1103     return _wrapfunc(a, 'argmax', axis=axis, out=out)\r\n   1104 \r\n   1105 \r\n\r\n~/.conda/envs/py3/lib/python3.7/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)\r\n     54 def _wrapfunc(obj, method, *args, **kwds):\r\n     55     try:\r\n---> 56         return getattr(obj, method)(*args, **kwds)\r\n     57 \r\n     58     # An AttributeError occurs if the object does not have\r\n\r\nAxisError: axis 1 is out of bounds for array of dimension 1\r\n```\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nfrom sktime.utils.load_data import load_from_ucr_tsv_to_dataframe\r\nfrom sktime.classifiers.ensemble import TimeSeriesForestClassifier\r\n\r\nX_train, y_train = load_from_ucr_tsv_to_dataframe(\"GunPoint_TRAIN.tsv\")\r\n\r\nclf = TimeSeriesForestClassifier()\r\nclf.fit(X_train, y_train)\r\n\r\nprint(clf.predict_proba(X_train.iloc[[0], :]))  # leads to unusual return format\r\nprint(clf.predict(X_train.iloc[[0], :]))        # leads to exception\r\n```\r\n\r\n**Expected behavior**\r\n\r\n`TimeSeriesForestClassifier.predict_proba()` should **always** return a 2-dimensional array, even on single-instance inputs, just as the documentation states. Moreover, `TimeSeriesForestClassifier.predict()` should not fail on single-instance inputs, which can likely be resolved by fixing the `predict_proba()` bug.\r\n\r\n**Versions**\r\n\r\n<details>\r\nLinux-4.19.49-1-MANJARO-x86_64-with-arch-Manjaro-Linux\r\nPython 3.7.3 (default, Mar 27 2019, 22:11:17) \r\n[GCC 7.3.0]\r\nNumPy 1.16.4\r\nSciPy 1.2.1\r\nsktime 0.2.0\r\n</details>","closed_by":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/86/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/86/timeline","performed_via_github_app":null,"state_reason":"completed"}