{"url":"https://api.github.com/repos/sktime/sktime/issues/633","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/633/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/633/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/633/events","html_url":"https://github.com/sktime/sktime/issues/633","id":794200773,"node_id":"MDU6SXNzdWU3OTQyMDA3NzM=","number":633,"title":"Multi-step forecasting horizons with multiple cutoffs/window","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-01-26T12:41:23Z","updated_at":"2021-04-14T13:58:12Z","closed_at":"2021-04-14T13:58:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nI was wondering if there is a roadmap for addition of multi-step forecasting horizons with multiple cutoffs/window. This will be very helpful for `ForecastingGridSearchCV`\r\n\r\nhttps://github.com/alan-turing-institute/sktime/blob/79ac80ab65adb30fdf233e98433646c1989da2fc/sktime/forecasting/model_selection/_tune.py#L37\r\n\r\n\r\n**Current**\r\n```python\r\ny = load_airline()\r\n\r\nfh = np.arange(1, 13)\r\ny_train, y_test = temporal_train_test_split(y, test_size=len(fh))\r\nprint(y.shape, y_train.shape[0], y_test.shape[0])\r\n\r\ncv = SlidingWindowSplitter(initial_window=int(len(y_train) * 0.5), start_with_window=True)\r\n\r\nregressor = RandomForestRegressor(random_state=42)\r\nforecaster = ReducedRegressionForecaster(regressor=regressor, strategy=\"recursive\")\r\n\r\nparam_grid = {\"regressor__n_estimators\": [200, 300]}\r\n\r\ngscv = ForecastingGridSearchCV(forecaster=forecaster, cv=cv, param_grid=param_grid, verbose=1)\r\ngscv.fit(y_train)\r\n```\r\n\r\n\r\nThe current flow only seems to be able to perform \"one step ahead\" validation\r\n\r\n![image](https://user-images.githubusercontent.com/33585645/105845615-aefaa500-5fa0-11eb-9d5a-3e0e3ae90c4c.png)\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n```python\r\ny = load_airline()\r\n\r\nfh = np.arange(1, 13)  # How much to forecast (from 1 to 12 or 1 year)\r\ny_train, y_test = temporal_train_test_split(y, test_size=len(fh))\r\nprint(y.shape, y_train.shape[0], y_test.shape[0])\r\n\r\n# Want to provide the forecast horizon here\r\ncv = SlidingWindowSplitter(initial_window=int(len(y_train) * 0.5), fh=fh, start_with_window=True)\r\n\r\nregressor = RandomForestRegressor(random_state=42)\r\nforecaster = ReducedRegressionForecaster(regressor=regressor, strategy=\"recursive\")\r\n\r\nparam_grid = {\"regressor__n_estimators\": [200, 300]}\r\n\r\ngscv = ForecastingGridSearchCV(forecaster=forecaster, cv=cv, param_grid=param_grid, verbose=1)\r\ngscv.fit(y_train)\r\n```\r\n\r\nIdeally, the validation should be done for the entire horizon in each window. \r\n\r\n![image](https://user-images.githubusercontent.com/33585645/105846155-6099d600-5fa1-11eb-9b91-066f61f8dfcb.png)\r\n\r\n\r\n**Describe alternatives you've considered**\r\nNone that I can think of\r\n","closed_by":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/633/timeline","performed_via_github_app":null,"state_reason":"completed"}