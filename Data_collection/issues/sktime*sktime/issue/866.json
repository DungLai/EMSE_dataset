{"url":"https://api.github.com/repos/sktime/sktime/issues/866","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/866/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/866/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/866/events","html_url":"https://github.com/sktime/sktime/issues/866","id":884864518,"node_id":"MDU6SXNzdWU4ODQ4NjQ1MTg=","number":866,"title":"ExponentialSmoothing results in error for a series with w-sun freq","user":{"login":"eyalshafran","id":16999574,"node_id":"MDQ6VXNlcjE2OTk5NTc0","avatar_url":"https://avatars.githubusercontent.com/u/16999574?v=4","gravatar_id":"","url":"https://api.github.com/users/eyalshafran","html_url":"https://github.com/eyalshafran","followers_url":"https://api.github.com/users/eyalshafran/followers","following_url":"https://api.github.com/users/eyalshafran/following{/other_user}","gists_url":"https://api.github.com/users/eyalshafran/gists{/gist_id}","starred_url":"https://api.github.com/users/eyalshafran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eyalshafran/subscriptions","organizations_url":"https://api.github.com/users/eyalshafran/orgs","repos_url":"https://api.github.com/users/eyalshafran/repos","events_url":"https://api.github.com/users/eyalshafran/events{/privacy}","received_events_url":"https://api.github.com/users/eyalshafran/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-05-10T18:49:13Z","updated_at":"2022-02-23T22:40:15Z","closed_at":"2022-02-23T22:40:15Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm using sktime 0.6.0\r\n\r\nIf I use the following code:\r\n\r\n```\r\nforecaster = ExponentialSmoothing()\r\ndate = pd.date_range(start='01/07/2018',end='05/09/2021',freq='W')\r\nvalue = np.random.normal(size=175)\r\nts = pd.Series(value, index=date)\r\nforecaster.fit(ts)\r\nforecaster.predict(fh=np.arange(1,10))\r\n```\r\n\r\nI get the error below. If I replace the forecaster with something else (e.g. NaiveForecaster) I do not get an error.\r\n\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\npandas/_libs/tslibs/timedeltas.pyx in pandas._libs.tslibs.timedeltas.parse_timedelta_unit()\r\n\r\nKeyError: 'w-sun'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n/opt/anaconda3/lib/python3.8/site-packages/sktime/utils/datetime.py in _coerce_duration_to_int(duration, freq)\r\n     43             if isinstance(duration, pd.TimedeltaIndex):\r\n---> 44                 return (duration / pd.Timedelta(1, freq)).astype(np.int)\r\n     45         except ValueError:\r\n\r\npandas/_libs/tslibs/timedeltas.pyx in pandas._libs.tslibs.timedeltas.Timedelta.__new__()\r\n\r\npandas/_libs/tslibs/timedeltas.pyx in pandas._libs.tslibs.timedeltas.parse_timedelta_unit()\r\n\r\nValueError: invalid unit abbreviation: W-SUN\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-594-c72ddc4c380b> in <module>\r\n      4 ts = pd.Series(value,index=date)\r\n      5 forecaster.fit(ts)\r\n----> 6 forecaster.predict(fh=np.arange(1,10))\r\n\r\n/opt/anaconda3/lib/python3.8/site-packages/sktime/forecasting/base/_sktime.py in predict(self, fh, X, return_pred_int, alpha)\r\n    226         self.check_is_fitted()\r\n    227         self._set_fh(fh)\r\n--> 228         return self._predict(self.fh, X, return_pred_int=return_pred_int, alpha=alpha)\r\n    229 \r\n    230     def compute_pred_int(self, y_pred, alpha=DEFAULT_ALPHA):\r\n\r\n/opt/anaconda3/lib/python3.8/site-packages/sktime/forecasting/base/adapters/_statsmodels.py in _predict(self, fh, X, return_pred_int, alpha)\r\n     78         # statsmodels requires zero-based indexing starting at the\r\n     79         # beginning of the training series when passing integers\r\n---> 80         start, end = fh.to_absolute_int(self._y.index[0], self.cutoff)[[0, -1]]\r\n     81         y_pred = self._fitted_forecaster.predict(start, end)\r\n     82 \r\n\r\n/opt/anaconda3/lib/python3.8/site-packages/sktime/forecasting/base/_fh.py in to_absolute_int(self, start, cutoff)\r\n    322 \r\n    323         if isinstance(absolute, (pd.PeriodIndex, pd.DatetimeIndex)):\r\n--> 324             integers = _coerce_duration_to_int(integers, freq=_get_freq(cutoff))\r\n    325 \r\n    326         return self._new(integers, is_relative=False)\r\n\r\n/opt/anaconda3/lib/python3.8/site-packages/sktime/utils/datetime.py in _coerce_duration_to_int(duration, freq)\r\n     44                 return (duration / pd.Timedelta(1, freq)).astype(np.int)\r\n     45         except ValueError:\r\n---> 46             raise ValueError(\r\n     47                 \"Index type not supported. Please consider using pd.PeriodIndex.\"\r\n     48             )\r\n\r\nValueError: Index type not supported. Please consider using pd.PeriodIndex.","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/866/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/866/timeline","performed_via_github_app":null,"state_reason":"completed"}