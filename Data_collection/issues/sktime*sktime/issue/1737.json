{"url":"https://api.github.com/repos/sktime/sktime/issues/1737","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1737/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1737/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1737/events","html_url":"https://github.com/sktime/sktime/issues/1737","id":1076714480,"node_id":"I_kwDOCVKAsc5ALVvw","number":1737,"title":"[ENH] Train/test split and evaluation with disaggregated time series","user":{"login":"khrapovs","id":3774663,"node_id":"MDQ6VXNlcjM3NzQ2NjM=","avatar_url":"https://avatars.githubusercontent.com/u/3774663?v=4","gravatar_id":"","url":"https://api.github.com/users/khrapovs","html_url":"https://github.com/khrapovs","followers_url":"https://api.github.com/users/khrapovs/followers","following_url":"https://api.github.com/users/khrapovs/following{/other_user}","gists_url":"https://api.github.com/users/khrapovs/gists{/gist_id}","starred_url":"https://api.github.com/users/khrapovs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khrapovs/subscriptions","organizations_url":"https://api.github.com/users/khrapovs/orgs","repos_url":"https://api.github.com/users/khrapovs/repos","events_url":"https://api.github.com/users/khrapovs/events{/privacy}","received_events_url":"https://api.github.com/users/khrapovs/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"},{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3105907331,"node_id":"MDU6TGFiZWwzMTA1OTA3MzMx","url":"https://api.github.com/repos/sktime/sktime/labels/module:transformations","name":"module:transformations","color":"0865AF","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-12-10T10:54:10Z","updated_at":"2022-06-27T11:58:22Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is.\r\n\r\nI have a very specific forecasting use case that I solved elsewhere on my own. But only recently I discovered this fantastic library and obviously regret that it did not happen much earlier. I think that my use case could be a nice contribution.\r\n\r\nThe problem is the following. Suppose I have disaggregated data `y` and `X`. \"Disaggregated\" means that the forecasting frequency is, say, weekly, but the raw data is daily. My model extracts exogenous features from the past daily data (`X_train`) and uses an \"auxiliary\" model to forecast those features (`X_test`) which are in turn used in `.predict` method of the main forecaster. The current limitation of the library is that all the splitters and evaluation function assume that the data is already \"regular\", in my case weekly. This of course is not a problem if I only want to forecast once. But evaluation with `sktime.forecasting.model_evaluation._functions.evaluate` is impossible.\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen, ideally taking into consideration the existing toolbox design, classes and methods.\r\n\r\nI see two alternative solutions. Either a couple of new splitters alternative to existing ones, or a generalization of existing ones. The core change I need is replacing `np.arange` (e.g. in `train = np.arange(start - window_length, split_point)`) by pandas Series or DataFrame indices that are not directly linked to a regular grid. Function `sktime.forecasting.model_evaluation._functions._split` will have to be changed as well by rewriting this arithmetic: `test = np.arange(test[0] - fh.min(), test[-1]) + 1`. At the first glance it seems enough.\r\n\r\nGiven these changes I can easily imagine a forecasting pipeline where one of the steps would be an auxiliary model forecaster that would generate `X` on-the-fly. Next step would be data aggregation into, say, weekly frequency. And finally a main usual time series model for a regular frequency data.\r\n\r\nI would love to contribute the solution myself. But I write this issue first in order to prevent unnecessary work if my solution violates some high level vision of the core developers. Please, let me know how do I proceed. Thanks!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1737/timeline","performed_via_github_app":null,"state_reason":null}