{"url":"https://api.github.com/repos/sktime/sktime/issues/2711","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2711/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2711/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2711/events","html_url":"https://github.com/sktime/sktime/issues/2711","id":1251696262,"node_id":"I_kwDOCVKAsc5Km16G","number":2711,"title":"[BUG] Hierarchical Forecasting does not work with reconciler ","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-05-28T18:23:35Z","updated_at":"2022-06-22T13:57:18Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nHierarchical Forecasting does not work with reconciler (possibly due to empty X dataframe)\r\n\r\n\r\n**To Reproduce**\r\nModified from pydata Berlin notebooks. Complete code & data [here](https://github.com/ngupta23/sktime-tutorial-pydata-berlin-2022/blob/109e25cafe798dc2d24d96427a5fd62866bab901/notebooks/minimal_issue_hierarchical.ipynb).\r\n\r\n```python\r\nsteps=[\r\n        (\"daily_season\", DateTimeFeatures(ts_freq=\"D\")),  \r\n        (\"daily_season2\", DateTimeFeatures(manual_selection=[\"week_of_month\", \"day_of_quarter\"])),\r\n]  \r\n\r\nforecaster_hier = NaiveForecaster()\r\n\r\n# Version 1A: Local Vectorized (Hierarchical) Forecasts (without reconciliation)\r\npipe_hier_norecon = ForecastingPipeline(steps= steps + [(\"forecaster\", forecaster_hier)])\r\n\r\n# Version 1B: Local Vectorized (Hierarchical) Forecasts (with reconciliation)\r\npipe_hier_recon = Aggregator() * pipe_hier_norecon * Reconciler(method=\"ols\")\r\n\r\n# Version 1A: Local Vectorized (Hierarchical) Forecasts (without reconciliation)\r\n# This works\r\n_ = pipe_hier_norecon.fit(y_train_hier, X_train_hier, fh=FH)\r\n\r\n# Version 1B: Local Vectorized (Hierarchical) Forecasts (with reconciliation)\r\n# Does not work with X_train (is it because of empty X dataframe?)\r\n# If 1A works with X_train, shouldn't 1B also work?\r\n_ = pipe_hier_recon.fit(y_train_hier, X_train_hier, fh=FH)\r\n\r\n# This works (without passing X)\r\n# _ = pipe_hier_recon.fit(y_train_hier, fh=FH)\r\n```\r\n\r\n```python-traceback\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nInput In [10], in <cell line: 4>()\r\n      1 # Version 1B: Local Vectorized (Hierarchical) Forecasts (with reconciliation)\r\n      2 # Does not work with X_train (is it because of empty X dataframe)\r\n      3 # If 1A works with X_train, shouldn't 1B also work?\r\n----> 4 _ = pipe_hier_recon.fit(y_train_hier, X_train_hier, fh=FH)\r\n\r\nFile ~\\.conda\\envs\\sktime-pydata\\lib\\site-packages\\sktime\\forecasting\\base\\_base.py:265, in BaseForecaster.fit(self, y, X, fh)\r\n    263 # we call the ordinary _fit if no looping/vectorization needed\r\n    264 if not vectorization_needed:\r\n--> 265     self._fit(y=y_inner, X=X_inner, fh=fh)\r\n    266 else:\r\n    267     # otherwise we call the vectorized version of fit\r\n    268     self._vectorize(\"fit\", y=y_inner, X=X_inner, fh=fh)\r\n\r\nFile ~\\.conda\\envs\\sktime-pydata\\lib\\site-packages\\sktime\\forecasting\\compose\\_pipeline.py:824, in TransformedTargetForecaster._fit(self, y, X, fh)\r\n    822 # fit forecaster\r\n    823 f = self.forecaster_\r\n--> 824 f.fit(y=yt, X=X, fh=fh)\r\n    826 # transform post\r\n    827 for _, t in self.transformers_post_:\r\n\r\nFile ~\\.conda\\envs\\sktime-pydata\\lib\\site-packages\\sktime\\forecasting\\base\\_base.py:253, in BaseForecaster.fit(self, y, X, fh)\r\n    250 fh = self._check_fh(fh)\r\n    252 # check and convert X/y\r\n--> 253 X_inner, y_inner = self._check_X_y(X=X, y=y)\r\n    255 # set internal X/y to the new X/y\r\n    256 # this also updates cutoff from y\r\n    257 self._update_y_X(y_inner, X_inner)\r\n\r\nFile ~\\.conda\\envs\\sktime-pydata\\lib\\site-packages\\sktime\\forecasting\\base\\_base.py:1206, in BaseForecaster._check_X_y(self, X, y)\r\n   1204 if X is not None and y is not None:\r\n   1205     if self.get_tag(\"X-y-must-have-same-index\"):\r\n-> 1206         check_equal_time_index(X, y, mode=\"contains\")\r\n   1208     if y_scitype != X_scitype:\r\n   1209         raise TypeError(\"X and y must have the same scitype\")\r\n\r\nFile ~\\.conda\\envs\\sktime-pydata\\lib\\site-packages\\sktime\\utils\\validation\\series.py:290, in check_equal_time_index(mode, *ys)\r\n    287     raise ValueError('mode must be \"equal\" or \"contains\"')\r\n    289 if failure_cond:\r\n--> 290     raise ValueError(msg)\r\n\r\nValueError: (time) indices of series 0 are not contained in index of series 0, extra indices are: MultiIndex([(        5, '__total', '2013-01-01'),\r\n            (        5, '__total', '2013-01-02'),\r\n            (        5, '__total', '2013-01-03'),\r\n            (        5, '__total', '2013-01-04'),\r\n            (        5, '__total', '2013-01-05'),\r\n            (        5, '__total', '2013-01-06'),\r\n            (        5, '__total', '2013-01-07'),\r\n            (        5, '__total', '2013-01-08'),\r\n            (        5, '__total', '2013-01-09'),\r\n            (        5, '__total', '2013-01-10'),\r\n            ...\r\n            ('__total', '__total', '2016-09-21'),\r\n            ('__total', '__total', '2016-09-22'),\r\n            ('__total', '__total', '2016-09-23'),\r\n            ('__total', '__total', '2016-09-24'),\r\n            ('__total', '__total', '2016-09-25'),\r\n            ('__total', '__total', '2016-09-26'),\r\n            ('__total', '__total', '2016-09-27'),\r\n            ('__total', '__total', '2016-09-28'),\r\n            ('__total', '__total', '2016-09-29'),\r\n            ('__total', '__total', '2016-09-30')],\r\n           names=['store', 'item', 'date'], length=4107)\r\n```\r\n\r\n\r\n**Expected behavior**\r\nInterestingly, this works without reconciliation (even with empty X data frame). So I would have expected the forecaster with reconciliation to work as well.\r\n\r\n\r\n\r\n**Versions**\r\n<details>\r\n\r\nSystem:\r\npython: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]\r\nexecutable: C:\\Users\\Nikhil.conda\\envs\\sktime-pydata\\python.exe\r\nmachine: Windows-10-10.0.19044-SP0\r\n\r\nPython dependencies:\r\npip: 22.1.1\r\nsetuptools: 62.3.2\r\nsklearn: 1.1.1\r\nsktime: 0.11.4\r\nstatsmodels: 0.13.2\r\nnumpy: 1.22.4\r\nscipy: 1.7.3\r\npandas: 1.4.2\r\nmatplotlib: 3.5.2\r\njoblib: 1.1.0\r\nnumba: 0.53.0\r\npmdarima: 1.8.5\r\ntsfresh: 0.19.0\r\n\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2711/timeline","performed_via_github_app":null,"state_reason":null}