{"url":"https://api.github.com/repos/sktime/sktime/issues/3682","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3682/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3682/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3682/events","html_url":"https://github.com/sktime/sktime/issues/3682","id":1429042570,"node_id":"I_kwDOCVKAsc5VLXWK","number":3682,"title":"[ENH] A variation of CutoffSplitter that allows for the options of (1) using all training data possible and (2) varying forecast horizons for each split","user":{"login":"GianlucaGuarroSonos","id":107063818,"node_id":"U_kgDOBmGqCg","avatar_url":"https://avatars.githubusercontent.com/u/107063818?v=4","gravatar_id":"","url":"https://api.github.com/users/GianlucaGuarroSonos","html_url":"https://github.com/GianlucaGuarroSonos","followers_url":"https://api.github.com/users/GianlucaGuarroSonos/followers","following_url":"https://api.github.com/users/GianlucaGuarroSonos/following{/other_user}","gists_url":"https://api.github.com/users/GianlucaGuarroSonos/gists{/gist_id}","starred_url":"https://api.github.com/users/GianlucaGuarroSonos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GianlucaGuarroSonos/subscriptions","organizations_url":"https://api.github.com/users/GianlucaGuarroSonos/orgs","repos_url":"https://api.github.com/users/GianlucaGuarroSonos/repos","events_url":"https://api.github.com/users/GianlucaGuarroSonos/events{/privacy}","received_events_url":"https://api.github.com/users/GianlucaGuarroSonos/received_events","type":"User","site_admin":false},"labels":[{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-10-30T22:39:40Z","updated_at":"2022-11-11T22:34:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nRight now the CutoffSplitter splits time series data at given cutoff points into fixed-length training and test sets.\r\nI believe it would be useful to extend the functionality of the CutoffSplitter to allow it to have the following two features:\r\n\r\n1. The training sets of the splits can be composed of ALL the data prior to the cutoff instead of a fixed amount. (The same idea behind ExpandingWindowSplitter).\r\n2. The test sets of each split can vary in size. The motivation behind this is for when I am building models at a disaggregate time series level but I care about the performance at a more aggregate level in which the sizes of the test sets at the disaggregate level are not necessarily the same. For example consider that I train my model on weekly data but I want to test the performance using a year's worth of data from the cutoff point. Depending on the year this may be 52 weeks or 53 weeks so I cannot use a fixed length forecasting horizon for each split.\r\n\r\n**Describe the solution you'd like**\r\n**For feature 1**\r\nI am not sure whether these functionalities should be built into the existing CutoffSplitter or if a different splitter should be created. In any case if we wanted to use the existing CutoffSplitter, in order to satisfy feature (1), the user could pass in a \"-1\" to `window_length` to indicates to use the expanding window lengths. Alternatively a new boolean parameter can be created called `use_expanding` to indicate whether the windows should be expanding or sliding.\r\n\r\n**For feature 2**\r\nPerhaps the easiest and most flexible solution would be to add another parameter that allows for a list of forecasting horizons or ints which serves to specify how long each test set should be in each window. The length of this array should naturally be the same as the length of the `cutoffs` array.\r\n\r\n**Describe alternatives you've considered**\r\nAlternative solution would be to create an entire new Splitter class altogether to disentangle whether the created windows should be sliding or expanding (thus addressing feature request (1)). This would involve renaming the existing `CutoffSplitter` to something like `CutoffSlidingSplitter` and the creation of a new splitter called `CutoffExpandingSplitter`. Feature request (2) would have to be added to both classes and perhaps the `ExpandingWindowSplitter` and the `SlidingWindowSplitter` as well.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3682/timeline","performed_via_github_app":null,"state_reason":null}