{"url":"https://api.github.com/repos/sktime/sktime/issues/3811","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3811/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3811/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3811/events","html_url":"https://github.com/sktime/sktime/issues/3811","id":1454652611,"node_id":"I_kwDOCVKAsc5WtDzD","number":3811,"title":"[ENH] \"compatible only with specific data format\" tag","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-11-18T08:00:28Z","updated_at":"2022-11-18T08:00:28Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"I think we need a tag that describes estimators which are compatible only with a specific format of data.\r\n\r\nThis can occur if more is assumed than the general `sktime` interface assumption.\r\n\r\nExample:\r\n\r\n* pretrained estimator which assumes certain columns to be present\r\n* @KishManani's `TimeSince` transformer, which assumes that the time diff parameter is compatible with the data frame index\r\n\r\nFor inspection and testing purposes, we may also like to introduce, in this case, a method `_compatible_with_data` or similar, that tells us whether `fit` args and so on are compatible. In testing, this can be used to rule out incompatible scenarios.\r\n\r\nAny thoughts on this?\r\n\r\nIt is one solution to the interface issue we have with pretrained models, because the pretraining often restricts the data format below the minimum compatibility requirements of the general interface.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3811/timeline","performed_via_github_app":null,"state_reason":null}