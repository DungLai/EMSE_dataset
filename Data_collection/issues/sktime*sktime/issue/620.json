{"url":"https://api.github.com/repos/sktime/sktime/issues/620","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/620/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/620/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/620/events","html_url":"https://github.com/sktime/sktime/issues/620","id":785938419,"node_id":"MDU6SXNzdWU3ODU5Mzg0MTk=","number":620,"title":"Refit with ForecastingGridSearchCV when using a Grid Search based forecasters may not use \"best hyperparameters\"","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-01-14T12:11:18Z","updated_at":"2021-01-26T21:36:42Z","closed_at":"2021-01-26T21:36:42Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nWhen using a Grid Search based forecaster (such as `AutoARIMA`, or `ReducedRegressionForecaster` with `GridSearchCV` from scikit-learn) in `ForecastingGridSearchCV`, the best hyperparameters that are found in the `initial_window` may not be used when the final refit is done. \r\n\r\nThe outer Grid Search (that in `ForecastingGridSearchCV`) works fine and picks the right hyperparameters for the final fit, but the inner Grid Search is a problem. This is due to the fact that the final refit is simply calling the fit function on the full data which leads to the entire \"inner\" grid search to be rerun. This may lead to a different set of best hyperparameters being selected than those that were selected during the fit in the `initial_window`. \r\n\r\n**Since the final hyperparameters can be different from the ones used in the sliding cross validation, this has the potential to make the cross validation results incorrect (i.e. cross validation results will not correspond to the final model hyperparameters that are refit).**\r\n\r\n**To Reproduce**\r\n\r\n```python\r\ny = load_airline()\r\nfh = np.arange(1, 13)  \r\n\r\ny_train, y_test = temporal_train_test_split(y, test_size=len(fh))\r\n\r\ncv = SlidingWindowSplitter(\r\n    initial_window=int(len(y_train) * 0.5),\r\n    start_with_window=True,\r\n)\r\n\r\n# ARIMA\r\nforecaster_param_grid = {\"sp\": [12, 24]}\r\nforecaster = AutoARIMA(suppress_warnings=True)\r\n\r\ngscv_arima = ForecastingGridSearchCV(\r\n    forecaster, cv=cv, param_grid=forecaster_param_grid, verbose=True\r\n)\r\ngscv_arima.fit(y_train)\r\n```\r\n\r\n**During the Grid Search, the hyperparameter values with sp=12 indicate that only 2 lags are selected along with a seasonal lag. Note, I have left out the parameters for sp=24 since that is not selected as the final best_forecaster.**\r\n\r\n```python\r\n# Initial Window Fit\r\nforecaster._get_fitted_param_names()\r\n['intercept', 'ar.L1', 'ar.L2', 'ar.S.L12', 'sigma2']\r\nforecaster._get_fitted_params()\r\narray([ 7.99081197,  0.56606485,  0.1956277 , -0.47478481, 68.31476303])\r\n```\r\n\r\n**Best Estimator**\r\n```python\r\nself.best_forecaster_\r\nAutoARIMA(sp=12, suppress_warnings=True)\r\n```\r\n\r\n**Final Refit: This seems to indicate that there 3 lags should be used. This means that the hyperparameters selected by the final fit are not the same as those selected by the fit in the \"initial_window\". Note, that the actual parameter values will be different and that is OK, but the hyperparameters (param_names below) should be the same for the initial window and final refit.**\r\n\r\n```python\r\nself.best_forecaster_._get_fitted_param_names()\r\n['intercept', 'ar.L1', 'ar.L2', 'ar.L3', 'sigma2']\r\nself.best_forecaster_._get_fitted_params()\r\narray([  5.53410033,   0.70489183,   0.25742152,  -0.14344774, 101.09688613])\r\n```\r\n\r\n\r\n**Expected behavior**\r\nThe param names should be the same as those selected in the initial window. \r\n\r\n**Additional context**\r\nThe same issue can potentially be observed when `ReducedRegressionForecaster` with `GridSearchCV` from scikit-learn is used in `ForecastingGridSearchCV`.\r\n\r\nAn example is shown below (note that in this case, it ends up picking the same hyperparameter in the final refit as in the `initial_window`, but since the `GridSearchCV` object is fit again in the end without any regard to the hyperparameters selected in the `initial_window`, it could have picked different hyperparameters.\r\n\r\n```python\r\nregressor_param_grid = {\"n_estimators\": [200, 300]}\r\nforecaster_param_grid = {\"window_length\": [12, 15]}\r\ntscv = TimeSeriesSplit()\r\n\r\n# create a tunnable regressor with GridSearchCV\r\nregressor = GridSearchCV(\r\n    RandomForestRegressor(),\r\n    param_grid=regressor_param_grid,\r\n    cv = tscv,\r\n    scoring='neg_mean_squared_error',  \r\n    verbose=1\r\n)\r\nforecaster = ReducedRegressionForecaster(\r\n    regressor, strategy=\"recursive\"\r\n)\r\n\r\ngscv = ForecastingGridSearchCV(\r\n    forecaster, cv=cv, param_grid=forecaster_param_grid, verbose=1\r\n)\r\ngscv.fit(y_train)\r\n```\r\n\r\n### Possible Solution\r\nImplement a refit method in the forecasters. \r\n- For the Grid Search Based forecasters, this will pluck the \"best hyperparameters\" based on the \"inner\" grid search and use those for the final fit by setting those explicitly in the underlying forecaster (`ARIMA` for `AutoARIMA`, `RandomForestRegressor` for `ReducedRegressionForecaster`, etc.) instead of performing the \"inner\" grid search again.\r\n- For non Grid Search based forecasters, this can simply alias the fit method.\r\n\r\n**Versions**\r\n<details>\r\n\r\n```python\r\nSystem:\r\n    python: 3.6.12 |Anaconda, Inc.| (default, Sep  9 2020, 00:29:25) [MSC v.1916 64 bit (AMD64)]\r\nexecutable: C:\\Users\\Nikhil\\.conda\\envs\\sktime_dev\\python.exe\r\n   machine: Windows-10-10.0.18362-SP0\r\n\r\nPython dependencies:\r\n          pip: 20.3.3\r\n   setuptools: 51.0.0.post20201207\r\n      sklearn: 0.24.0\r\n       sktime: 0.5.1\r\n  statsmodels: 0.12.1\r\n        numpy: 1.19.4\r\n        scipy: 1.5.4\r\n       Cython: 0.29.17\r\n       pandas: 1.1.5\r\n   matplotlib: 3.3.3\r\n       joblib: 1.0.0\r\n        numba: 0.52.0\r\n     pmdarima: 1.8.0\r\n      tsfresh: 0.17.0\r\n```\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/620/timeline","performed_via_github_app":null,"state_reason":"completed"}