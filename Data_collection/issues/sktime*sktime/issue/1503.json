{"url":"https://api.github.com/repos/sktime/sktime/issues/1503","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1503/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1503/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1503/events","html_url":"https://github.com/sktime/sktime/issues/1503","id":1021421688,"node_id":"I_kwDOCVKAsc484ah4","number":1503,"title":"[BUG] AutoARIMA fit breaks with sktime 0.8.0, sklearn 1.0, pmdarima 1.8.2","user":{"login":"asksteph","id":31328623,"node_id":"MDQ6VXNlcjMxMzI4NjIz","avatar_url":"https://avatars.githubusercontent.com/u/31328623?v=4","gravatar_id":"","url":"https://api.github.com/users/asksteph","html_url":"https://github.com/asksteph","followers_url":"https://api.github.com/users/asksteph/followers","following_url":"https://api.github.com/users/asksteph/following{/other_user}","gists_url":"https://api.github.com/users/asksteph/gists{/gist_id}","starred_url":"https://api.github.com/users/asksteph/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asksteph/subscriptions","organizations_url":"https://api.github.com/users/asksteph/orgs","repos_url":"https://api.github.com/users/asksteph/repos","events_url":"https://api.github.com/users/asksteph/events{/privacy}","received_events_url":"https://api.github.com/users/asksteph/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2021-10-08T19:59:16Z","updated_at":"2022-07-03T20:40:52Z","closed_at":"2022-07-03T20:40:33Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\n<!--\r\nA clear and concise description of what the bug is.\r\n-->\r\n\r\n**To Reproduce**\r\n<!--\r\nAdd a Minimal, Complete, and Verifiable example (for more details, see e.g. https://stackoverflow.com/help/mcve\r\n\r\nIf the code is too long, feel free to put it in a public gist and link it in the issue: https://gist.github.com\r\n-->\r\n\r\n```python\r\nimport numpy as np\r\nimport pandas as pd\r\nimport statsmodels.api as sm\r\nfrom sktime.forecasting.model_selection import temporal_train_test_split\r\nfrom sktime.forecasting.arima import AutoARIMA\r\n\r\ndf = sm.datasets.macrodata.load_pandas()['data']\r\ndf['q_date'] = df.apply(lambda x: str(int(x['year'])) + '-Q' + str(int(x['quarter'])), axis=1)\r\ndf['date'] = pd.PeriodIndex(df['q_date'], freq='Q').to_timestamp()\r\ndf = df.set_index('date').to_period(\"Q\")\r\n\r\ny = df['realgdp']\r\ny_train, y_test = temporal_train_test_split(y, test_size=30)\r\nforecaster = AutoARIMA(sp=4)\r\nforecaster.fit(y_train)\r\n```\r\n\r\nError:\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n~\\AppData\\Local\\Temp/ipykernel_22920/2308042316.py in <module>\r\n     13 y_train, y_test = temporal_train_test_split(y, test_size=30)\r\n     14 forecaster = AutoARIMA(sp=4)\r\n---> 15 forecaster.fit(y_train)\r\n\r\n~\\AppData\\Roaming\\Python\\Python38\\site-packages\\sktime\\forecasting\\base\\_base.py in fit(self, y, X, fh)\r\n    178         #####################################################\r\n    179 \r\n--> 180         self._fit(y=y_inner, X=X_inner, fh=fh)\r\n    181 \r\n    182         # this should happen last\r\n\r\n~\\AppData\\Roaming\\Python\\Python38\\site-packages\\sktime\\forecasting\\base\\adapters\\_pmdarima.py in _fit(self, y, X, fh, **fit_params)\r\n     47         \"\"\"\r\n     48         self._forecaster = self._instantiate_model()\r\n---> 49         self._forecaster.fit(y, X=X, **fit_params)\r\n     50         return self\r\n     51 \r\n\r\n~\\anaconda3\\envs\\skt080\\lib\\site-packages\\pmdarima\\arima\\auto.py in fit(self, y, X, **fit_args)\r\n    175         # Temporary shim until we remove `exogenous` support completely\r\n    176         X, fit_kwargs = pm_compat.get_X(X, **fit_args)\r\n--> 177         self.model_ = auto_arima(\r\n    178             y,\r\n    179             X=X,\r\n\r\n~\\anaconda3\\envs\\skt080\\lib\\site-packages\\pmdarima\\arima\\auto.py in auto_arima(y, X, start_p, d, start_q, max_p, max_d, max_q, start_P, D, start_Q, max_P, max_D, max_Q, max_order, m, seasonal, stationary, information_criterion, alpha, test, seasonal_test, stepwise, n_jobs, start_params, trend, method, maxiter, offset_test_args, seasonal_test_args, suppress_warnings, error_action, trace, random, random_state, n_fits, return_valid_fits, out_of_sample_size, scoring, scoring_args, with_intercept, sarimax_kwargs, **fit_args)\r\n    715         )\r\n    716 \r\n--> 717     sorted_res = search.solve()\r\n    718     return _return_wrapper(sorted_res, return_valid_fits, start, trace)\r\n    719 \r\n\r\n~\\anaconda3\\envs\\skt080\\lib\\site-packages\\pmdarima\\arima\\_auto_solvers.py in solve(self)\r\n    284 \r\n    285         # fit a baseline p, d, q model\r\n--> 286         self._do_fit((p, d, q), (P, D, Q, m))\r\n    287 \r\n    288         # null model with possible constant\r\n\r\n~\\anaconda3\\envs\\skt080\\lib\\site-packages\\pmdarima\\arima\\_auto_solvers.py in _do_fit(self, order, seasonal_order, constant)\r\n    231             self.k += 1\r\n    232 \r\n--> 233             fit, fit_time, new_ic = self._fit_arima(\r\n    234                 order=order,\r\n    235                 seasonal_order=seasonal_order,\r\n\r\n~\\anaconda3\\envs\\skt080\\lib\\site-packages\\pmdarima\\arima\\_auto_solvers.py in _fit_candidate_model(y, X, order, seasonal_order, start_params, trend, method, maxiter, fit_params, suppress_warnings, trace, error_action, out_of_sample_size, scoring, scoring_args, with_intercept, information_criterion, **kwargs)\r\n    528         # check the roots of the new model, and set IC to inf if the\r\n    529         # roots are near non-invertible\r\n--> 530         ic = _root_test(fit, ic, trace)\r\n    531 \r\n    532     # log the model fit\r\n\r\n~\\anaconda3\\envs\\skt080\\lib\\site-packages\\pmdarima\\arima\\_auto_solvers.py in _root_test(model, ic, trace)\r\n     36 \r\n     37     if p + P > 0:\r\n---> 38         max_invroot = max(0, *np.abs(1 / model.arroots()))\r\n     39     if q + Q > 0 and np.isfinite(ic):\r\n     40         max_invroot = max(0, *np.abs(1 / model.maroots()))\r\n\r\n~\\anaconda3\\envs\\skt080\\lib\\site-packages\\sklearn\\utils\\metaestimators.py in __get__(self, obj, owner)\r\n    107             # delegate only on instances, not the classes.\r\n    108             # this is to allow access to the docstrings.\r\n--> 109             if not self.check(obj):\r\n    110                 raise attr_err\r\n    111 \r\n\r\n~\\anaconda3\\envs\\skt080\\lib\\site-packages\\sklearn\\utils\\metaestimators.py in _check(self, obj)\r\n    195             return False\r\n    196         # raise original AttributeError\r\n--> 197         return getattr(delegate, self.attribute_name) or True\r\n    198 \r\n    199 \r\n\r\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\r\n```\r\n\r\n**Expected behavior**\r\n<!--\r\nA clear and concise description of what you expected to happen.\r\n-->\r\nThis code works in version 0.7.0 and would return the fitted ARIMA model.\r\n\r\n**Additional context**\r\n<!--\r\nAdd any other context about the problem here.\r\n-->\r\n\r\n**Versions**\r\n<details>\r\n\r\n<!--\r\nPlease run the following code snippet and paste the output here:\r\n \r\nfrom sktime import show_versions; show_versions()\r\n-->\r\nSystem:\r\n    python: 3.8.11 (default, Aug  6 2021, 09:57:55) [MSC v.1916 64 bit (AMD64)]\r\nexecutable: C:\\Users\\szipk\\anaconda3\\envs\\skt080\\python.exe\r\n   machine: Windows-10-10.0.19042-SP0\r\n\r\nPython dependencies:\r\n          pip: 21.0.1\r\n   setuptools: 58.0.4\r\n      sklearn: 1.0\r\n       sktime: 0.8.0\r\n  statsmodels: 0.13.0\r\n        numpy: 1.19.5\r\n        scipy: 1.5.4\r\n       Cython: 0.29.14\r\n       pandas: 1.3.3\r\n   matplotlib: 3.4.3\r\n       joblib: 1.1.0\r\n        numba: 0.54.1\r\n     pmdarima: 1.8.2\r\n      tsfresh: 0.18.0\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1503/timeline","performed_via_github_app":null,"state_reason":"completed"}