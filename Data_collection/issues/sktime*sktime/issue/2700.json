{"url":"https://api.github.com/repos/sktime/sktime/issues/2700","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2700/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2700/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2700/events","html_url":"https://github.com/sktime/sktime/issues/2700","id":1248635753,"node_id":"I_kwDOCVKAsc5KbKtp","number":2700,"title":"[ENH] test_update_predict_predicted_index should have no gaps between data passed in fit and the consecutive update steps.","user":{"login":"ltsaprounis","id":64217214,"node_id":"MDQ6VXNlcjY0MjE3MjE0","avatar_url":"https://avatars.githubusercontent.com/u/64217214?v=4","gravatar_id":"","url":"https://api.github.com/users/ltsaprounis","html_url":"https://github.com/ltsaprounis","followers_url":"https://api.github.com/users/ltsaprounis/followers","following_url":"https://api.github.com/users/ltsaprounis/following{/other_user}","gists_url":"https://api.github.com/users/ltsaprounis/gists{/gist_id}","starred_url":"https://api.github.com/users/ltsaprounis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ltsaprounis/subscriptions","organizations_url":"https://api.github.com/users/ltsaprounis/orgs","repos_url":"https://api.github.com/users/ltsaprounis/repos","events_url":"https://api.github.com/users/ltsaprounis/events{/privacy}","received_events_url":"https://api.github.com/users/ltsaprounis/received_events","type":"User","site_admin":false},"labels":[{"id":1631667223,"node_id":"MDU6TGFiZWwxNjMxNjY3MjIz","url":"https://api.github.com/repos/sktime/sktime/labels/maintenance","name":"maintenance","color":"ea761e","default":false,"description":"Continuous integration, unit testing & package distribution"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-05-25T19:49:47Z","updated_at":"2022-05-27T05:27:23Z","closed_at":"2022-05-26T17:10:30Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nThe forecasting test [`test_update_predict_predicted_index`](https://github.com/alan-turing-institute/sktime/blob/df683766f4af7fd7fbe339fbf306d7a560827574/sktime/forecasting/tests/test_all_forecasters.py#L520) does the following:\r\n1. splits a time series y in `y_train` and `y_test`. \r\n2. fits a forecasting algorithm using `y_train`\r\n3. calls `update_predict` on the fitted forecaster using `y_test` and a `SlidingWindowSplitter`. \r\n\r\nThe problem with the test is that the first non-trivial update call uses data that are more than one time step ahead than the data passed in fit. As a result when we try to reconcile `y_train` and the subset of `y_test` from the splitter the resulting time series has gaps and frequency None. For some reason this was not causing any forecasting algorithm to break apart from `BaggingForecaster` in #2248 and in only 2 test cases ([see CI log](https://github.com/alan-turing-institute/sktime/runs/6397105019?check_suite_focus=true#step:7:47103)).\r\n\r\nThe following code reproduces the behaviour of the test:\r\n```python\r\nfrom sktime.utils._testing.series import _make_series\r\nfrom sktime.forecasting.model_selection import (\r\n    SlidingWindowSplitter,\r\n    temporal_train_test_split,\r\n)\r\n\r\nn_columns = 1\r\nfh_int_oos = [2, 5]\r\nwindow_length = 1\r\nstep_length = 5\r\n\r\ny = _make_series(n_columns=n_columns, all_positive=True, index_type=\"datetime\")\r\ny_train, y_test = temporal_train_test_split(y)\r\ncv = SlidingWindowSplitter(\r\n    fh_int_oos,\r\n    window_length=window_length,\r\n    step_length=step_length,\r\n    start_with_window=False,\r\n)\r\n\r\nprint(f\"max date seen during fit: {y_train.index.max()}\")\r\ncounter = 0\r\nfor train_idx, test_idx in cv.split(y_test):\r\n    print(f\"split {counter} min date seen during update: {y_test.iloc[train_idx].index.min()}\")\r\n    counter += 1\r\n\r\n# Prints:\r\n# max date seen during fit: 2000-02-06 00:00:00\r\n# split 0 min date seen during update: NaT\r\n# split 1 min date seen during update: 2000-02-11 00:00:00\r\n```\r\n\r\n**Describe the solution you'd like**\r\nHaving a complete time series is a fair requirement from a forecasting algorithm, the test should reflect this.\r\nUsing the `ExpandingWindowSlicer` instead of the `SlidingWindowSplitter` will fix this.\r\n\r\n**Describe alternatives you've considered**\r\nNot implementing BaggingForecaster\r\n\r\n⚠️ **Disclaimer** ⚠️\r\nThere's a good chance that my conclusion that the test needs some changes is wrong and there's a valid reason for it being that way.\r\n\r\n","closed_by":{"login":"ltsaprounis","id":64217214,"node_id":"MDQ6VXNlcjY0MjE3MjE0","avatar_url":"https://avatars.githubusercontent.com/u/64217214?v=4","gravatar_id":"","url":"https://api.github.com/users/ltsaprounis","html_url":"https://github.com/ltsaprounis","followers_url":"https://api.github.com/users/ltsaprounis/followers","following_url":"https://api.github.com/users/ltsaprounis/following{/other_user}","gists_url":"https://api.github.com/users/ltsaprounis/gists{/gist_id}","starred_url":"https://api.github.com/users/ltsaprounis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ltsaprounis/subscriptions","organizations_url":"https://api.github.com/users/ltsaprounis/orgs","repos_url":"https://api.github.com/users/ltsaprounis/repos","events_url":"https://api.github.com/users/ltsaprounis/events{/privacy}","received_events_url":"https://api.github.com/users/ltsaprounis/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2700/timeline","performed_via_github_app":null,"state_reason":"completed"}