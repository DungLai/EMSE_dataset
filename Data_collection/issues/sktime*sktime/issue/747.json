{"url":"https://api.github.com/repos/sktime/sktime/issues/747","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/747/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/747/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/747/events","html_url":"https://github.com/sktime/sktime/issues/747","id":840065798,"node_id":"MDU6SXNzdWU4NDAwNjU3OTg=","number":747,"title":"Tuning implicite hyperparameter of tranformers inside TransformedTargetForecaster","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2021-03-24T19:04:22Z","updated_at":"2021-04-08T09:05:11Z","closed_at":"2021-04-08T09:05:11Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nI have locally created a class `TuningTransformer` inspired by this `TabularToSeriesAdaptor` in order to tune the implicite hyperparameter of using a tranformers or not inside `TransformedTargetForecaster` in order to tune this all together in a `ForecastingGridSearchCV`. Therefore, the class `TuningTransformer` has an arg `use: bool` to turn on and off the use of a tranformer.\r\n\r\n**Describe the solution you'd like**\r\nAll together looks as follows:\r\n```python\r\nTuningTransformer(BoxCoxTransformer(method=\"pearsonr\"))\r\n```\r\nOr more complicated with `TabularToSeriesAdaptor`:\r\n```python\r\nTuningTransformer(TabularToSeriesAdaptor(MinMaxScaler()))\r\n```\r\nSo in the end I will put each tranformer inside a `TuningTransformer` and all together with GS looks like this:\r\n```python\r\npipe = TransformedTargetForecaster(steps=[\r\n    (\"deseasonalise\", TuningTransformer(transformer=Deseasonalizer())),\r\n    (\"minmax\", TuningTransformer(transformer=TabularToSeriesAdaptor(MinMaxScaler()))),\r\n    (\"power\", TuningTransformer(transformer=TabularToSeriesAdaptor(PowerTransformer()))),\r\n    (\"model\", TBATS()),\r\n    ]\r\n)\r\n\r\ncv = SlidingWindowSplitter(initial_window=int(len(y_train) * 0.5), window_length=24, start_with_window=True, step_length=24)\r\nparam_grid = {\r\n    \"deseasonalise__transformer__model\" : [\"multiplicative\", \"additive\"],\r\n    \"deseasonalise__transformer__sp\" : [12],\r\n    \"deseasonalise__use\" : [True, False],\r\n\r\n    \"power__transformer__transformer__method\" : [\"yeo-johnson\", \"box-cox\"],\r\n    \"power__transformer__transformer__standardize\" : [True, False],\r\n    \"power__use\" : [True, False],\r\n\r\n    \"minmax__transformer__transformer__copy\": [(0,1), (0,2)],\r\n    \"minmax__use\" : [True, False],\r\n\r\n    'model__sp': [12],\r\n}\r\ngscv = ForecastingGridSearchCV(forecaster=pipe, param_grid=param_grid, cv=cv, n_jobs=-1)\r\ngscv.fit(y)\r\n\r\n```\r\nIt can look a bit confusing to have grid arguments like `minmax__transformer__transformer__copy`, however this is all consistent with existing stuff in `sktime` and `sklearn`. And it is very handy for tuning :)\r\n\r\n**Additional context**\r\nI might contribute this to `sktime` in case it is appreciated, otherwise I dont mind to keep it in our private repo. I am open to adjust my implementations in case there are other ideas how to solve the implicit hyperparameter tuning in this case. Maybe the class can have a better name..\r\n___\r\nMartin Walter <martin_friedrich.walter@daimler.com>, Mercedes-Benz AG on behalf of Daimler TSS GmbH.\r\nhttps://github.com/Daimler/daimler-foss/blob/master/LEGAL_IMPRINT.md","closed_by":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/747/timeline","performed_via_github_app":null,"state_reason":"completed"}