{"url":"https://api.github.com/repos/sktime/sktime/issues/1990","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1990/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1990/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1990/events","html_url":"https://github.com/sktime/sktime/issues/1990","id":1124947081,"node_id":"I_kwDOCVKAsc5DDVSJ","number":1990,"title":"[BUG] NaiveForecaster fails when sp>1 and fh is combination of in-sample and out-sample","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"eenticott-shell","id":93924843,"node_id":"U_kgDOBZkt6w","avatar_url":"https://avatars.githubusercontent.com/u/93924843?v=4","gravatar_id":"","url":"https://api.github.com/users/eenticott-shell","html_url":"https://github.com/eenticott-shell","followers_url":"https://api.github.com/users/eenticott-shell/followers","following_url":"https://api.github.com/users/eenticott-shell/following{/other_user}","gists_url":"https://api.github.com/users/eenticott-shell/gists{/gist_id}","starred_url":"https://api.github.com/users/eenticott-shell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eenticott-shell/subscriptions","organizations_url":"https://api.github.com/users/eenticott-shell/orgs","repos_url":"https://api.github.com/users/eenticott-shell/repos","events_url":"https://api.github.com/users/eenticott-shell/events{/privacy}","received_events_url":"https://api.github.com/users/eenticott-shell/received_events","type":"User","site_admin":false},"assignees":[{"login":"eenticott-shell","id":93924843,"node_id":"U_kgDOBZkt6w","avatar_url":"https://avatars.githubusercontent.com/u/93924843?v=4","gravatar_id":"","url":"https://api.github.com/users/eenticott-shell","html_url":"https://github.com/eenticott-shell","followers_url":"https://api.github.com/users/eenticott-shell/followers","following_url":"https://api.github.com/users/eenticott-shell/following{/other_user}","gists_url":"https://api.github.com/users/eenticott-shell/gists{/gist_id}","starred_url":"https://api.github.com/users/eenticott-shell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eenticott-shell/subscriptions","organizations_url":"https://api.github.com/users/eenticott-shell/orgs","repos_url":"https://api.github.com/users/eenticott-shell/repos","events_url":"https://api.github.com/users/eenticott-shell/events{/privacy}","received_events_url":"https://api.github.com/users/eenticott-shell/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-02-05T14:42:40Z","updated_at":"2022-02-11T21:00:13Z","closed_at":"2022-02-11T21:00:13Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Describe the bug**\r\nException:\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n~\\AppData\\Local\\Temp\\ipykernel_1832\\2346858064.py in <module>\r\n     11 forecaster = NaiveForecaster(sp=2)\r\n     12 forecaster.fit(y_train)\r\n---> 13 forecaster.predict(fh=fh)\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_base.py in predict(self, fh, X, return_pred_int, alpha, keep_old_return_type)\r\n    203         # this is how it is supposed to be after the refactor is complete and effective\r\n    204         if not return_pred_int:\r\n--> 205             y_pred = self._predict(fh=fh, X=X_inner)\r\n    206 \r\n    207             # convert to output mtype, identical with last y mtype seen\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\naive.py in _predict(self, fh, X, return_pred_int, alpha)\r\n    340         \"\"\"\r\n    341         y_pred = self._forecaster.predict(\r\n--> 342             fh=fh, X=X, return_pred_int=return_pred_int, alpha=alpha\r\n    343         )\r\n    344 \r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_base.py in predict(self, fh, X, return_pred_int, alpha, keep_old_return_type)\r\n    203         # this is how it is supposed to be after the refactor is complete and effective\r\n    204         if not return_pred_int:\r\n--> 205             y_pred = self._predict(fh=fh, X=X_inner)\r\n    206 \r\n    207             # convert to output mtype, identical with last y mtype seen\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\compose\\_column_ensemble.py in _predict(self, fh, X, return_pred_int, alpha)\r\n    149         y_pred = np.zeros((len(fh), len(self.forecasters_)))\r\n    150         for (_, forecaster, index) in self.forecasters_:\r\n--> 151             y_pred[:, index] = forecaster.predict(fh)\r\n    152 \r\n    153         y_pred = pd.DataFrame(data=y_pred, columns=self.y_columns)\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_base.py in predict(self, fh, X, return_pred_int, alpha, keep_old_return_type)\r\n    203         # this is how it is supposed to be after the refactor is complete and effective\r\n    204         if not return_pred_int:\r\n--> 205             y_pred = self._predict(fh=fh, X=X_inner)\r\n    206 \r\n    207             # convert to output mtype, identical with last y mtype seen\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_sktime.py in _predict(self, fh, X, return_pred_int, alpha)\r\n     86         # both in-sample and out-of-sample values\r\n     87         else:\r\n---> 88             y_ins = self._predict_in_sample(fh.to_in_sample(self.cutoff), **kwargs)\r\n     89             y_oos = self._predict_fixed_cutoff(\r\n     90                 fh.to_out_of_sample(self.cutoff), **kwargs\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_sktime.py in _predict_in_sample(self, fh, X, return_pred_int, alpha)\r\n    145             update_params=False,\r\n    146             return_pred_int=return_pred_int,\r\n--> 147             alpha=alpha,\r\n    148         )\r\n    149 \r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_base.py in _predict_moving_cutoff(self, y, cv, X, update_params, return_pred_int, alpha)\r\n   1454                     update_params=update_params,\r\n   1455                     return_pred_int=return_pred_int,\r\n-> 1456                     alpha=alpha,\r\n   1457                 )\r\n   1458                 y_preds.append(y_pred)\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_sktime.py in _update_predict_single(self, y, fh, X, update_params, return_pred_int, alpha)\r\n    217             raise NotImplementedError()\r\n    218         self.update(y, X, update_params=update_params)\r\n--> 219         return self._predict(fh, X, return_pred_int=return_pred_int, alpha=alpha)\r\n    220 \r\n    221 \r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_sktime.py in _predict(self, fh, X, return_pred_int, alpha)\r\n     77         if fh.is_all_out_of_sample(self.cutoff):\r\n     78             return self._predict_fixed_cutoff(\r\n---> 79                 fh.to_out_of_sample(self.cutoff), **kwargs\r\n     80             )\r\n     81 \r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\base\\_sktime.py in _predict_fixed_cutoff(self, fh, X, return_pred_int, alpha)\r\n    111         # assert all(fh > 0)\r\n    112         y_pred = self._predict_last_window(\r\n--> 113             fh, X, return_pred_int=return_pred_int, alpha=alpha\r\n    114         )\r\n    115         index = fh.to_absolute(self.cutoff)\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\naive.py in _predict_last_window(self, fh, X, return_pred_int, alpha)\r\n    131             else:\r\n    132                 # reshape last window, one column per season\r\n--> 133                 last_window = self._reshape_last_window_for_sp(last_window)\r\n    134 \r\n    135                 # select last non-NaN row for every column\r\n\r\nC:/Users/X/Desktop/sktime/sktime\\sktime\\forecasting\\naive.py in _reshape_last_window_for_sp(self, last_window)\r\n    202         # reshape last window, one column per season\r\n    203         last_window = last_window.reshape(\r\n--> 204             int(np.ceil(self.window_length_ / self.sp_)), self.sp_\r\n    205         )\r\n    206 \r\n\r\nValueError: cannot reshape array of size 46 into shape (25,2)\r\n```\r\n**To Reproduce**\r\n\r\n```python\r\nfrom sktime.forecasting.naive import NaiveForecaster\r\nfrom sktime.utils._testing.series import _make_series\r\nfrom sktime.utils._testing.forecasting import _make_fh\r\nimport numpy as np\r\n\r\ny_train = _make_series(\r\n    n_columns=1, index_type=\"period\", n_timepoints=50\r\n)\r\nfh = _make_fh(cutoff=y_train.index[-1], steps=np.array([-3, 2]), fh_type=\"period\", is_relative=False)\r\n\r\nforecaster = NaiveForecaster(sp=2)\r\nforecaster.fit(y_train)\r\nforecaster.predict(fh=fh)\r\n```\r\n\r\n**Expected behavior**\r\n<!--\r\nA clear and concise description of what you expected to happen.\r\n-->\r\n\r\n**Additional context**\r\nBug revealed in #1963 . Bug seems to exist for relative as well as absolute `fh`.\r\n\r\n**Versions**\r\n`main`\r\n\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1990/timeline","performed_via_github_app":null,"state_reason":"completed"}