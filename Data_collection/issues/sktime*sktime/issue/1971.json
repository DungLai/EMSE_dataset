{"url":"https://api.github.com/repos/sktime/sktime/issues/1971","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1971/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1971/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1971/events","html_url":"https://github.com/sktime/sktime/issues/1971","id":1120599229,"node_id":"I_kwDOCVKAsc5Cyvy9","number":1971,"title":"[BUG] sporadic failure in `HIVECOTEV2.fit`","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3102418261,"node_id":"MDU6TGFiZWwzMTAyNDE4MjYx","url":"https://api.github.com/repos/sktime/sktime/labels/module:classification","name":"module:classification","color":"BEB114","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-02-01T12:18:05Z","updated_at":"2022-02-08T09:54:52Z","closed_at":"2022-02-08T09:54:52Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"It seems that `HIVECOTEV2.fit` sporadically fails on the standard test cases.\r\n\r\nFrom this run:\r\nhttps://github.com/alan-turing-institute/sktime/runs/5018516510\r\n\r\nRelevant piece of log is below.\r\n\r\n```\r\n___________ test_fit_returns_self[HIVECOTEV2-ClassifierFitPredict] ____________\r\n[gw0] win32 -- Python 3.7.9 C:\\Miniconda\\envs\\test\\python.exe\r\n\r\nestimator_instance = HIVECOTEV2(arsenal_params={'n_estimators': 2, 'num_kernels': 20},\r\n           drcif_params={'n_estimators': 2}, n_jobs=...eter_samples': 4,\r\n                       'randomly_selected_params': 2},\r\n           time_limit_in_minutes=0, verbose=0)\r\nscenario = ClassifierFitPredict(args={'fit': {'X':                                                var_0\r\n0  0     0.248357\r\n1    -0...836\r\n1     0.178556\r\n2     0.738947\r\n3...}},\r\n                     default_arg_sequence=None, default_method_sequence=None)\r\n\r\n    def test_fit_returns_self(estimator_instance, scenario):\r\n        \"\"\"Check that fit returns self.\"\"\"\r\n>       fit_return = scenario.run(estimator_instance, method_sequence=[\"fit\"])\r\n\r\nestimator_instance = HIVECOTEV2(arsenal_params={'n_estimators': 2, 'num_kernels': 20},\r\n           drcif_params={'n_estimators': 2}, n_jobs=...eter_samples': 4,\r\n                       'randomly_selected_params': 2},\r\n           time_limit_in_minutes=0, verbose=0)\r\nscenario   = ClassifierFitPredict(args={'fit': {'X':                                                var_0\r\n0  0     0.248357\r\n1    -0...836\r\n1     0.178556\r\n2     0.738947\r\n3...}},\r\n                     default_arg_sequence=None, default_method_sequence=None)\r\n\r\nC:\\Miniconda\\envs\\test\\lib\\site-packages\\sktime\\tests\\test_all_estimators.py:481: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nC:\\Miniconda\\envs\\test\\lib\\site-packages\\sktime\\utils\\_testing\\scenarios.py:183: in run\r\n    res = getattr(obj, methodname)(**args)\r\n        arg_sequence = ['fit']\r\n        args       = {'X':                                                var_0\r\n0  0     0.248357\r\n1    -0.069132\r\n2     0.323844\r\n3...\r\n1  0  ...93542\r\n2     100.57...\r\n9  0     0.312834\r\n1    -0.428579\r\n2    -0.535446\r\n3..., 'y': array([0, 1, 1, 0, 1, 0, 1, 0, 1, 0])}\r\n        args_after_call = []\r\n        deepcopy_return = False\r\n        i          = 0\r\n        method_sequence = ['fit']\r\n        methodname = 'fit'\r\n        num_calls  = 1\r\n        obj        = HIVECOTEV2(arsenal_params={'n_estimators': 2, 'num_kernels': 20},\r\n           drcif_params={'n_estimators': 2}, n_jobs=...eter_samples': 4,\r\n                        \"if it contains a single sample.\".format(array)\r\n                    )\r\n    \r\n            # make sure we actually converted to numeric:\r\n            if dtype_numeric and array.dtype.kind in \"OUSV\":\r\n                warnings.warn(\r\n                    \"Arrays of bytes/strings is being converted to decimal \"\r\n                    \"numbers if dtype='numeric'. This behavior is deprecated in \"\r\n                    \"0.24 and will be removed in 1.1 (renaming of 0.26). Please \"\r\n                    \"convert your data to numeric values explicitly instead.\",\r\n                    FutureWarning,\r\n                    stacklevel=2,\r\n                )\r\n                try:\r\n                    array = array.astype(np.float64)\r\n                except ValueError as e:\r\n                    raise ValueError(\r\n                        \"Unable to convert array of bytes/strings \"\r\n                        \"into decimal numbers with dtype='numeric'\"\r\n                    ) from e\r\n            if not allow_nd and array.ndim >= 3:\r\n                raise ValueError(\r\n                    \"Found array with dim %d. %s expected <= 2.\"\r\n                    % (array.ndim, estimator_name)\r\n                )\r\n    \r\n            if force_all_finite:\r\n                _assert_all_finite(array, allow_nan=force_all_finite == \"allow-nan\")\r\n    \r\n        if ensure_min_samples > 0:\r\n            n_samples = _num_samples(array)\r\n            if n_samples < ensure_min_samples:\r\n                raise ValueError(\r\n                    \"Found array with %d sample(s) (shape=%s) while a\"\r\n                    \" minimum of %d is required%s.\"\r\n>                   % (n_samples, array.shape, ensure_min_samples, context)\r\n                )\r\nE               ValueError: Found array with 0 sample(s) (shape=(0, 4)) while a minimum of 1 is required.\r\n\r\naccept_large_sparse = True\r\naccept_sparse = 'csr'\r\nallow_nd   = False\r\narray      = array([], shape=(0, 4), dtype=float32)\r\narray_orig = array([], shape=(0, 4), dtype=float64)\r\ncontext    = ''\r\ncopy       = False\r\ndtype      = <class 'numpy.float32'>\r\ndtype_numeric = False\r\ndtype_orig = dtype('float64')\r\ndtypes_orig = None\r\nensure_2d  = True\r\nensure_min_features = 1\r\nensure_min_samples = 1\r\nestimator  = None\r\nestimator_name = 'Estimator'\r\nforce_all_finite = True\r\nhas_pd_integer_array = False\r\nn_samples  = 0\r\norder      = None\r\n```","closed_by":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1971/timeline","performed_via_github_app":null,"state_reason":"completed"}