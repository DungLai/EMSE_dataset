{"url":"https://api.github.com/repos/sktime/sktime/issues/297","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/297/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/297/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/297/events","html_url":"https://github.com/sktime/sktime/issues/297","id":642108767,"node_id":"MDU6SXNzdWU2NDIxMDg3Njc=","number":297,"title":"Implement series-as-features transformers","user":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"},{"id":1118163266,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY2","url":"https://api.github.com/repos/sktime/sktime/labels/good%20first%20issue","name":"good first issue","color":"9eff91","default":true,"description":"Good for newcomers"},{"id":1180387595,"node_id":"MDU6TGFiZWwxMTgwMzg3NTk1","url":"https://api.github.com/repos/sktime/sktime/labels/implementing%20algorithms","name":"implementing algorithms","color":"c5c0f7","default":false,"description":"Implementing new algorithms/estimators"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-06-19T16:55:58Z","updated_at":"2020-11-13T08:41:28Z","closed_at":"2020-11-13T08:41:28Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**List of transformations we'd like to include in sktime**\r\nsee #6 and #224 \r\n\r\n**Describe the solution you'd like**\r\nHere's a template for a series-as-features transformer:\r\n\r\n```python\r\nfrom sktime.transformers.series_as_features.base import \\\r\n    BaseSeriesAsFeaturesTransformer\r\nfrom sktime.utils.validation.series_as_features import check_X\r\n\r\nclass MyTransformer(BaseSeriesAsFeaturesTransformer):\r\n    \"\"\"MyTransformer docstring\r\n    \"\"\"\r\n\r\n    def __init__(self, my_parameter=10):\r\n        self.my_parameter = my_parameter\r\n        super(MyTransformer, self).__init__()\r\n\r\n    def fit(self, X, y=None):\r\n        \"\"\"\r\n        Fit transformer.\r\n\r\n        Parameters\r\n        ----------\r\n        X : pandas DataFrame of shape [n_samples, n_features]\r\n            Input data\r\n        y : pandas Series, shape (n_samples, ...), optional\r\n            Targets for supervised learning.\r\n\r\n        Returns\r\n        -------\r\n        self : an instance of self.\r\n        \"\"\"\r\n        X = check_X(X, enforce_univariate=True)\r\n        # fit transformer\r\n        ...\r\n\r\n        self._is_fitted = True\r\n        return self\r\n\r\n    def transform(self, X, y=None):\r\n        \"\"\"\r\n        Transform X.\r\n\r\n        Parameters\r\n        ----------\r\n        X : nested pandas DataFrame of shape [n_instances, n_columns]\r\n            Nested dataframe with time-series in cells.\r\n\r\n        Returns\r\n        -------\r\n        Xt : pandas DataFrame\r\n        \"\"\"\r\n        self.check_is_fitted()\r\n        X = check_X(X)\r\n\r\n        # Apply transformation on X\r\n        Xt = ...\r\n        return Xt\r\n```\r\n","closed_by":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/297/timeline","performed_via_github_app":null,"state_reason":"completed"}