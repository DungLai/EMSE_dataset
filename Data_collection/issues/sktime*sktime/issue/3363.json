{"url":"https://api.github.com/repos/sktime/sktime/issues/3363","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3363/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3363/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3363/events","html_url":"https://github.com/sktime/sktime/issues/3363","id":1354823973,"node_id":"I_kwDOCVKAsc5QwPkl","number":3363,"title":"[ENH] Import more estimators from hmmlearn","user":{"login":"miraep8","id":10511777,"node_id":"MDQ6VXNlcjEwNTExNzc3","avatar_url":"https://avatars.githubusercontent.com/u/10511777?v=4","gravatar_id":"","url":"https://api.github.com/users/miraep8","html_url":"https://github.com/miraep8","followers_url":"https://api.github.com/users/miraep8/followers","following_url":"https://api.github.com/users/miraep8/following{/other_user}","gists_url":"https://api.github.com/users/miraep8/gists{/gist_id}","starred_url":"https://api.github.com/users/miraep8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miraep8/subscriptions","organizations_url":"https://api.github.com/users/miraep8/orgs","repos_url":"https://api.github.com/users/miraep8/repos","events_url":"https://api.github.com/users/miraep8/events{/privacy}","received_events_url":"https://api.github.com/users/miraep8/received_events","type":"User","site_admin":false},"labels":[{"id":1118163266,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY2","url":"https://api.github.com/repos/sktime/sktime/labels/good%20first%20issue","name":"good first issue","color":"9eff91","default":true,"description":"Good for newcomers"},{"id":3108854999,"node_id":"MDU6TGFiZWwzMTA4ODU0OTk5","url":"https://api.github.com/repos/sktime/sktime/labels/module:annotation","name":"module:annotation","color":"F1ECF1","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2022-08-29T20:15:51Z","updated_at":"2023-01-07T20:06:40Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"[hmmlearn](https://github.com/hmmlearn/hmmlearn) is a nifty python package with a lot of different sci-kit learn like estimators for using HMM algorithms. \r\n\r\nWe now have a simple way to wrap and thus import new HMM estimators into `sktime`, and I thought that it could be a great task for anyone new to `sktime` or open source in general to get started with if you are looking for an easy issue to contribute. \r\n\r\nThe estimators which still need to be wrapped are:\r\n  - [ ] CategoricalHMM\r\n  - [ ] MultinomialHMM\r\n  - [ ] PoissonHMM\r\n\r\nHere is a rough guide for what needs to be done in order to wrap an estimator from `hmmlearn`:\r\n   - in the `sktime.annotations.hmm_learn` file add your new estimator to the `__all__` attribute list near the top of the file.\r\n   - make a new class for your relevant `hmmlearn` estimator.\r\n   - right before this new class add the code which will ignore  the soft dependency warning:\r\n   ```_check_soft_dependencies(\"hmmlearn.hmm\", severity=\"warning\")```\r\n   - copy over the docstring from `hmmlearn` into your new class.  [Here](https://github.com/hmmlearn/hmmlearn/blob/main/lib/hmmlearn/hmm.py) is where the code lives on Github and you can check it out there.  (may need to look into both the `__init__` function and the main class docstring in order to get both the `Parameters` section and the `Attributes` slash general description. \r\n   - update the `__init__` and `_fit` functions to properly collect and store all the attributes needed for your wrapped estimator.  In `_fit` pass these parameters to a wrapped version of your estimator. \r\n   - update the docstring example\r\n   - update the get_test_params method with some relevant params for your new estimator.\r\n   - add a quick test in test_hmm_learn that gaurantees your new wrapped estimator agrees with the estimator it is wrapping in `hmmlearn`.  It will be important to make sure both implementations have the same random state. \r\n   \r\n   To see an example of what this should look like please check out my recent PR (#3362) for GMMHMM which has all these steps in it.  If you would like top take on an estimator just comment in this issue so other people know you are working on it! :) \r\n  ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3363/timeline","performed_via_github_app":null,"state_reason":null}