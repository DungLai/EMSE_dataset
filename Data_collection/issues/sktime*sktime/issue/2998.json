{"url":"https://api.github.com/repos/sktime/sktime/issues/2998","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2998/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2998/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2998/events","html_url":"https://github.com/sktime/sktime/issues/2998","id":1303699895,"node_id":"I_kwDOCVKAsc5NtOG3","number":2998,"title":"[ENH] TruncationTransformer should preserve index and column names of initial pandas dataframe ","user":{"login":"mccrindlebrian","id":83707037,"node_id":"MDQ6VXNlcjgzNzA3MDM3","avatar_url":"https://avatars.githubusercontent.com/u/83707037?v=4","gravatar_id":"","url":"https://api.github.com/users/mccrindlebrian","html_url":"https://github.com/mccrindlebrian","followers_url":"https://api.github.com/users/mccrindlebrian/followers","following_url":"https://api.github.com/users/mccrindlebrian/following{/other_user}","gists_url":"https://api.github.com/users/mccrindlebrian/gists{/gist_id}","starred_url":"https://api.github.com/users/mccrindlebrian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mccrindlebrian/subscriptions","organizations_url":"https://api.github.com/users/mccrindlebrian/orgs","repos_url":"https://api.github.com/users/mccrindlebrian/repos","events_url":"https://api.github.com/users/mccrindlebrian/events{/privacy}","received_events_url":"https://api.github.com/users/mccrindlebrian/received_events","type":"User","site_admin":false},"labels":[{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-07-13T16:50:43Z","updated_at":"2022-10-06T18:50:15Z","closed_at":"2022-10-06T18:49:38Z","author_association":"NONE","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nTruncationTransformer is a very useful function, but it become hard to use in conjunction with an sklearn ColumnTransformer if you want the Pipeline to be interpretable. After the transform, the new truncated dataframe loses all feature and index name conventions. The image below illustrates what occurs after the transform: \r\n![image](https://user-images.githubusercontent.com/83707037/178787184-5ef0be61-894d-4022-af92-ad432df29521.png)\r\n\r\n**Describe the solution you'd like**\r\n\r\nIt is highly desirable that the truncated dataframe preserve the labelling convention of the initial dataframe. In this way, the user is less prone to error and avoid unnecessary bugs. For example, if I'm attempting to create an interpretable pipeline that utilizes a ColumnTransformer and the names given of the initial dataframe, the pipeline will break:\r\n```\r\n    ct = ColumnTransformer(\r\n        [\r\n            (sensor_col, univariate_pipeline, [sensor_col]) for sensor_col in sensor_cols\r\n        ]\r\n    )\r\n\r\n    multivariate_pipeline = Pipeline(\r\n        [\r\n            ('truncator', TruncationTransformer()), #apply truncation across all periods in the panel_df\r\n            ('univariate_model', ct),\r\n        ]\r\n    )\r\n```\r\n\r\n```\r\nKeyError: 's1' \r\n....\r\n\r\nFile ~/projects/PdM/PdM/lib/python3.8/site-packages/sklearn/compose/_column_transformer.py:357, in ColumnTransformer._validate_column_callables(self, X)\r\n    355         columns = columns(X)\r\n    356     all_columns.append(columns)\r\n--> 357     transformer_to_input_indices[name] = _get_column_indices(X, columns)\r\n    359 self._columns = all_columns\r\n    360 self._transformer_to_input_indices = transformer_to_input_indices\r\n\r\nFile ~/projects/PdM/PdM/lib/python3.8/site-packages/sklearn/utils/__init__.py:424, in _get_column_indices(X, key)\r\n    421             column_indices.append(col_idx)\r\n    423     except KeyError as e:\r\n--> 424         raise ValueError(\"A given column is not a column of the dataframe\") from e\r\n    426     return column_indices\r\n    427 else:\r\n\r\nValueError: A given column is not a column of the dataframe\r\n\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nSolutions include iterating over range(0, num_sensor_columns), but this shouldn't be considered a clean and interpretable option. Is there anyway to have the Transformer preserve the labels? \r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2998/timeline","performed_via_github_app":null,"state_reason":"completed"}