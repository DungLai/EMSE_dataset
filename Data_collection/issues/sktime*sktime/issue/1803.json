{"url":"https://api.github.com/repos/sktime/sktime/issues/1803","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1803/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1803/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1803/events","html_url":"https://github.com/sktime/sktime/issues/1803","id":1089349794,"node_id":"I_kwDOCVKAsc5A7iii","number":1803,"title":"[BUG] multiple tests related to `FRESH` fail on all platforms and python versions","user":{"login":"lmmentel","id":8989838,"node_id":"MDQ6VXNlcjg5ODk4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/8989838?v=4","gravatar_id":"","url":"https://api.github.com/users/lmmentel","html_url":"https://github.com/lmmentel","followers_url":"https://api.github.com/users/lmmentel/followers","following_url":"https://api.github.com/users/lmmentel/following{/other_user}","gists_url":"https://api.github.com/users/lmmentel/gists{/gist_id}","starred_url":"https://api.github.com/users/lmmentel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lmmentel/subscriptions","organizations_url":"https://api.github.com/users/lmmentel/orgs","repos_url":"https://api.github.com/users/lmmentel/repos","events_url":"https://api.github.com/users/lmmentel/events{/privacy}","received_events_url":"https://api.github.com/users/lmmentel/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-12-27T16:35:22Z","updated_at":"2022-01-23T00:26:21Z","closed_at":"2022-01-23T00:26:21Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Describe the bug**\r\n<!--\r\nA clear and concise description of what the bug is.\r\n-->\r\n\r\nI found another test failing on all platforms and python versions.\r\n\r\n<details>\r\n<summary>test_fresh_prince_on_unit_test_data</summary>\r\n\r\n```python\r\n================================== FAILURES ===================================\r\n_____________________ test_fresh_prince_on_unit_test_data _____________________\r\n[gw0] win32 -- Python 3.8.5 C:\\Miniconda\\envs\\test\\python.exe\r\n\r\n    def test_fresh_prince_on_unit_test_data():\r\n        \"\"\"Test of FreshPRINCE on unit test data.\"\"\"\r\n        # load unit test data\r\n        X_train, y_train = load_unit_test(split=\"train\")\r\n        X_test, y_test = load_unit_test(split=\"test\")\r\n        indices = np.random.RandomState(0).choice(len(y_train), 10, replace=False)\r\n    \r\n        # train FreshPRINCE classifier\r\n        fp = FreshPRINCE(\r\n            random_state=0,\r\n            default_fc_parameters=\"minimal\",\r\n            n_estimators=10,\r\n            save_transformed_data=True,\r\n        )\r\n        fp.fit(X_train, y_train)\r\n    \r\n        # assert probabilities are the same\r\n        probas = fp.predict_proba(X_test.iloc[indices])\r\n>       testing.assert_array_almost_equal(probas, fp_classifier_unit_test_probas, decimal=2)\r\nE       AssertionError: \r\nE       Arrays are not almost equal to 2 decimals\r\nE       \r\nE       Mismatched elements: 10 / 20 (50%)\r\nE       Max absolute difference: 0.2\r\nE       Max relative difference: 1.\r\nE        x: array([[0.2, 0.8],\r\nE              [1. , 0. ],\r\nE              [0. , 1. ],...\r\nE        y: array([[0.2, 0.8],\r\nE              [1. , 0. ],\r\nE              [0.1, 0.9],...\r\n\r\nX_test     =                                                 dim_0\r\n0   0      501.0\r\n1      328.0\r\n2      195.0\r\n3      ...\r\n1   0     ...\r\n3      ...\r\n20  0       95.0\r\n1       63.0\r\n2       45.0\r\n3      ...\r\n21  0      193.0\r\n1      195.0\r\n2       90.0\r\n3      ...\r\nX_train    =                                                 dim_0\r\n0   0      573.0\r\n1      375.0\r\n2      301.0\r\n3      ...\r\n1   0     ...\r\n3      ...\r\n18  0       95.0\r\n1       63.0\r\n2       45.0\r\n3      ...\r\n19  0       82.0\r\n1       93.0\r\n2       51.0\r\n3      ...\r\nfp         = FreshPRINCE(chunksize=None, default_fc_parameters='minimal', n_estimators=10,\r\n            n_jobs=1, random_state=0, save_transformed_data=True, verbose=0)\r\nindices    = array([18,  1, 19,  8, 10, 17,  6, 13,  4,  2])\r\nprobas     = array([[0.2, 0.8],\r\n       [1. , 0. ],\r\n       [0. , 1. ],\r\n       [1. , 0. ],\r\n       [1. , 0. ],\r\n       [1. , 0. ],\r\n       [1. , 0. ],\r\n       [1. , 0. ],\r\n       [1. , 0. ],\r\n       [1. , 0. ]])\r\ny_test     = array(['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2',\r\n       '2', '2', '2', '2', '2', '2', '2', '2', '2'], dtype='<U1')\r\ny_train    = <details>\r\n<summary>test_fresh_prince_on_unit_test_data</summary>array(['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2',\r\n       '2', '2', '2', '2', '2', '2', '2'], dtype='<U1')\r\n\r\nC:\\Miniconda\\envs\\test\\lib\\site-packages\\sktime\\classification\\feature_based\\tests\\test_fresh_prince.py:29: AssertionError\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>test_tsfresh_classifier_on_unit_test_data failure</summary>\r\n\r\n```python\r\n__________________ test_tsfresh_classifier_on_unit_test_data __________________\r\n[gw0] win32 -- Python 3.8.5 C:\\Miniconda\\envs\\test\\python.exe\r\n\r\n    def test_tsfresh_classifier_on_unit_test_data():\r\n        \"\"\"Test of TSFreshClassifier on unit test data.\"\"\"\r\n        # load unit test data\r\n        X_train, y_train = load_unit_test(split=\"train\")\r\n        X_test, y_test = load_unit_test(split=\"test\")\r\n        indices = np.random.RandomState(0).choice(len(y_train), 10, replace=False)\r\n    \r\n        # train TSFresh classifier\r\n        tsfc = TSFreshClassifier(\r\n            random_state=0,\r\n            default_fc_parameters=\"minimal\",\r\n            relevant_feature_extractor=False,\r\n            estimator=RandomForestClassifier(n_estimators=10),\r\n        )\r\n        tsfc.fit(X_train, y_train)\r\n    \r\n        # assert probabilities are the same\r\n        probas = tsfc.predict_proba(X_test.iloc[indices])\r\n>       testing.assert_array_almost_equal(\r\n            probas, tsfresh_classifier_unit_test_probas, decimal=2\r\n        )\r\nE       AssertionError: \r\nE       Arrays are not almost equal to 2 decimals\r\nE       \r\nE       Mismatched elements: 10 / 20 (50%)\r\nE       Max absolute difference: 0.2\r\nE       Max relative difference: 2.\r\nE        x: array([[0.1, 0.9],\r\nE              [0.7, 0.3],\r\nE              [0. , 1. ],...\r\nE        y: array([[0. , 1. ],\r\nE              [0.9, 0.1],\r\nE              [0. , 1. ],...\r\n\r\nX_test     =                                                 dim_0\r\n0   0      501.0\r\n1      328.0\r\n2      195.0\r\n3      ...\r\n1   0     ...\r\n3      ...\r\n20  0       95.0\r\n1       63.0\r\n2       45.0\r\n3      ...\r\n21  0      193.0\r\n1      195.0\r\n2       90.0\r\n3      ...\r\nX_train    =                                                 dim_0\r\n0   0      573.0\r\n1      375.0\r\n2      301.0\r\n3      ...\r\n1   0     ...\r\n3      ...\r\n18  0       95.0\r\n1       63.0\r\n2       45.0\r\n3      ...\r\n19  0       82.0\r\n1       93.0\r\n2       51.0\r\n3      ...\r\nindices    = array([18,  1, 19,  8, 10, 17,  6, 13,  4,  2])\r\nprobas     = array([[0.1, 0.9],\r\n       [0.7, 0.3],\r\n       [0. , 1. ],\r\n       [0.9, 0.1],\r\n       [0.8, 0.2],\r\n       [1. , 0. ],\r\n       [0.6, 0.4],\r\n       [0.9, 0.1],\r\n       [1. , 0. ],\r\n       [0.9, 0.1]])\r\ntsfc       = TSFreshClassifier(chunksize=None, default_fc_parameters='minimal',\r\n                  estimator=RandomForestClassifier(...tart=False),\r\n                  n_jobs=1, random_state=0, relevant_feature_extractor=False,\r\n                  verbose=0)\r\ny_test     = array(['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2',\r\n       '2', '2', '2', '2', '2', '2', '2', '2', '2'], dtype='<U1')\r\ny_train    = array(['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2',\r\n       '2', '2', '2', '2', '2', '2', '2'], dtype='<U1')\r\n\r\nC:\\Miniconda\\envs\\test\\lib\\site-packages\\sktime\\classification\\feature_based\\tests\\test_tsfresh_classifier.py:29: AssertionError\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>test_tsfresh_classifier_on_basic_motions</summary>\r\n\r\n```python\r\n__________________ test_tsfresh_classifier_on_basic_motions ___________________\r\n[gw1] win32 -- Python 3.8.5 C:\\Miniconda\\envs\\test\\python.exe\r\n\r\n    def test_tsfresh_classifier_on_basic_motions():\r\n        \"\"\"Test of TSFreshClassifier on basic motions.\"\"\"\r\n        # load basic motions data\r\n        X_train, y_train = load_basic_motions(split=\"train\")\r\n        X_test, y_test = load_basic_motions(split=\"test\")\r\n        indices = np.random.RandomState(4).choice(len(y_train), 10, replace=False)\r\n    \r\n        # train TSFresh classifier\r\n        tsfc = TSFreshClassifier(\r\n            random_state=0,\r\n            default_fc_parameters=\"minimal\",\r\n            relevant_feature_extractor=False,\r\n            estimator=RandomForestClassifier(n_estimators=10),\r\n        )\r\n        tsfc.fit(X_train.iloc[indices], y_train[indices])\r\n    \r\n        # assert probabilities are the same\r\n        probas = tsfc.predict_proba(X_test.iloc[indices])\r\n>       testing.assert_array_almost_equal(\r\n            probas, tsfresh_classifier_basic_motions_probas, decimal=2\r\n        )\r\nE       AssertionError: \r\nE       Arrays are not almost equal to 2 decimals\r\nE       \r\nE       Mismatched elements: 14 / 40 (35%)\r\nE       Max absolute difference: 0.2\r\nE       Max relative difference: 1.\r\nE        x: array([[0. , 0. , 0.2, 0.8],\r\nE              [0.4, 0.3, 0. , 0.3],\r\nE              [0. , 0. , 0.8, 0.2],...\r\nE        y: array([[0. , 0. , 0.2, 0.8],\r\nE              [0.4, 0.2, 0.1, 0.3],\r\nE              [0. , 0. , 0.9, 0.1],...\r\n\r\nX_test     =                                                 dim_0  ...                                              dim_5\r\n0   0   ...901645\r\n1      0.901645\r\n2     -0.05469...  ...  0     0.245030\r\n1     0.245030\r\n2     0.005327\r\n3...\r\n\r\n[40 rows x 6 columns]\r\nX_train    =                                                 dim_0  ...                                              dim_5\r\n0   0   ...11973\r\n1     1.211973\r\n2    -0.605948\r\n3...  ...  0    -0.042614\r\n1    -0.042614\r\n2    -0.095881\r\n3...\r\n\r\n[40 rows x 6 columns]\r\nindices    = array([28, 39,  4, 15, 26, 20, 31,  7, 16, 11])\r\nprobas     = array([[0. , 0. , 0.2, 0.8],\r\n       [0.4, 0.3, 0. , 0.3],\r\n       [0. , 0. , 0.8, 0.2],\r\n       [0. , 1. , 0. , 0. ],\r\n  ...],\r\n       [0.5, 0.3, 0. , 0.2],\r\n       [0. , 0. , 0.9, 0.1],\r\n       [0.1, 0.9, 0. , 0. ],\r\n       [0. , 1. , 0. , 0. ]])\r\ntsfc       = TSFreshClassifier(chunksize=None, default_fc_parameters='minimal',\r\n                  estimator=RandomForestClassifier(...tart=False),\r\n                  n_jobs=1, random_state=0, relevant_feature_extractor=False,\r\n                  verbose=0)\r\ny_test     = array(['standing', 'standing', 'standing', 'standing', 'standing',\r\n       'standing', 'standing', 'standing', 'standin...\r\n       'badminton', 'badminton', 'badminton', 'badminton', 'badminton',\r\n       'badminton', 'badminton'], dtype='<U9')\r\ny_train    = array(['standing', 'standing', 'standing', 'standing', 'standing',\r\n       'standing', 'standing', 'standing', 'standin...\r\n       'badminton', 'badminton', 'badminton', 'badminton', 'badminton',\r\n       'badminton', 'badminton'], dtype='<U9')\r\n\r\nC:\\Miniconda\\envs\\test\\lib\\site-packages\\sktime\\classification\\feature_based\\tests\\test_tsfresh_classifier.py:52: AssertionError\r\n```\r\n\r\n</details>\r\n\r\n**To Reproduce**\r\n\r\nIn order to reproduce you need to bump statsmodels to `>=0.13` or use sktime version from #1620 PR.\r\n\r\nTo recreate the env you can use:\r\n\r\n```bash\r\nconda install -c anaconda libpython\r\nconda install -c anaconda \"pystan==2.19.1.1\"\r\nconda install -c conda-forge \"fbprophet>=0.7.1\"\r\nconda install -c conda-forge scipy cython matplotlib\r\npython -m pip install .[all_extras,dev]\r\n```\r\n\r\nthen run the test with:\r\n\r\n```bash\r\npython -m pytest --showlocals --durations=10 --cov-report=xml -n 2 --cov=sktime -v --pyargs sktime\r\n```\r\n\r\n**Expected behavior**\r\n<!--\r\nA clear and concise description of what you expected to happen.\r\n-->\r\nTest passes\r\n**Additional context**\r\n<!--\r\nAdd any other context about the problem here.\r\n-->\r\n\r\n**Versions**\r\n<details>\r\n\r\n<!--\r\nPlease run the following code snippet and paste the output here:\r\n \r\nfrom sktime import show_versions; show_versions()\r\n-->\r\n\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1803/timeline","performed_via_github_app":null,"state_reason":"completed"}