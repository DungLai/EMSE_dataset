{"url":"https://api.github.com/repos/sktime/sktime/issues/477","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/477/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/477/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/477/events","html_url":"https://github.com/sktime/sktime/issues/477","id":740306038,"node_id":"MDU6SXNzdWU3NDAzMDYwMzg=","number":477,"title":"Add SlidingWindowSplitter visualization","user":{"login":"robomotic","id":315964,"node_id":"MDQ6VXNlcjMxNTk2NA==","avatar_url":"https://avatars.githubusercontent.com/u/315964?v=4","gravatar_id":"","url":"https://api.github.com/users/robomotic","html_url":"https://github.com/robomotic","followers_url":"https://api.github.com/users/robomotic/followers","following_url":"https://api.github.com/users/robomotic/following{/other_user}","gists_url":"https://api.github.com/users/robomotic/gists{/gist_id}","starred_url":"https://api.github.com/users/robomotic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robomotic/subscriptions","organizations_url":"https://api.github.com/users/robomotic/orgs","repos_url":"https://api.github.com/users/robomotic/repos","events_url":"https://api.github.com/users/robomotic/events{/privacy}","received_events_url":"https://api.github.com/users/robomotic/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2020-11-10T23:03:10Z","updated_at":"2021-03-23T09:56:58Z","closed_at":"2021-03-23T09:56:57Z","author_association":"NONE","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nI want to be able to visualize the cross folds generated by the sliding window splitter.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nIn the example:\r\n\r\n```\r\nforecaster = ReducedRegressionForecaster(regressor=regressor, window_length=15, strategy=\"recursive\")\r\nparam_grid = {\"window_length\": [5, 10, 15]}\r\ntrain_window = int(len(y_train) * 0.5)\r\nprint('Train initial window = %d' % train_window)\r\nprint('Train size = %d' % len(y_train))\r\nprint('Test size = %d' % (len(y) - len(y_train)))\r\n#Â we fit the forecaster on the initial window, and then use temporal cross-validation to find the optimal parameter\r\ncv = SlidingWindowSplitter(initial_window=train_window)\r\ngscv = ForecastingGridSearchCV(forecaster, cv=cv, param_grid=param_grid)\r\ngscv.fit(y_train)\r\ny_pred = gscv.predict(fh)\r\n```\r\nI want to see all the training windows and their corresponding points in a dataframe that I can also use to plot via vertical lines.\r\n\r\nI tried this:\r\n\r\n```\r\nprint('Total Splits %d' % cv.get_n_splits(y=y_test))\r\nprint('Cutoff points %s' % cv.get_cutoffs(y=y_test))\r\n```\r\n\r\nWhich gives me:\r\n\r\n```\r\nTotal Splits 36\r\nCutoff points [-1  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22\r\n 23 24 25 26 27 28 29 30 31 32 33 34]\r\n```\r\nI am not sure how do I interpret those offsets, are they relative to the y_test index? For example -1 bleeds into the y_train (last point) and 0 is the first point of y_test?\r\nHow are the training windows expanded backward from the cutoff points?\r\n\r\n**Describe alternatives you've considered**\r\n\r\nFor the cutoff maybe this is the solution:\r\n```\r\ncutoff = cv.get_cutoffs(y=y_test)\r\ny_test.index[cutoff]\r\n```\r\nFor the training windows I am not sure.","closed_by":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/477/timeline","performed_via_github_app":null,"state_reason":"completed"}