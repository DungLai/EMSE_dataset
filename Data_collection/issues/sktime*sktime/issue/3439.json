{"url":"https://api.github.com/repos/sktime/sktime/issues/3439","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3439/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3439/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3439/events","html_url":"https://github.com/sktime/sktime/issues/3439","id":1376787539,"node_id":"I_kwDOCVKAsc5SEBxT","number":3439,"title":"[ENH] Tuning order of transformers in pipelines as a hyper-parameter","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3105907331,"node_id":"MDU6TGFiZWwzMTA1OTA3MzMx","url":"https://api.github.com/repos/sktime/sktime/labels/module:transformations","name":"module:transformations","color":"0865AF","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"closed","locked":false,"assignee":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"assignees":[{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2022-09-17T14:28:06Z","updated_at":"2022-11-26T17:27:33Z","closed_at":"2022-11-26T17:27:33Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nWe have currently three sequential pipeline classes `TransformedTragetForecaster`, `ForecastingPipeline` and `TransformerPipeline`. Having several transformers chained raises the question which is the best order (permutation) of the given transformers.\r\nFor example in the pipeline below, what is the best order of transformers?\r\n```python\r\n    >>> pipe = TransformedTargetForecaster(\r\n        steps=[\r\n    ...     (\"outlier\", HampelFilter()),\r\n    ...     (\"impute\", Imputer()),\r\n    ...     (\"detrend\", Detrender()),\r\n    ...     (\"deseason\", Deseasonalizer()),\r\n    ...     (\"minmax\", TabularToSeriesAdaptor(MinMaxScaler())),\r\n    ...     (\"difference\", Differencer()),\r\n    ...     (\"forecast\", NaiveForecaster(strategy=\"drift\")),\r\n    ... ])\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nTo tune the permutations of transformers, we would need another parameter that allow to give several sortings of the steps.\r\nA solution could look as follows:\r\n```python\r\n    >>> pipe = TransformedTargetForecaster(\r\n        steps=[\r\n    ...     (\"outlier\", HampelFilter()),\r\n    ...     (\"impute\", Imputer()),\r\n    ...     (\"detrend\", Detrender()),\r\n    ...     (\"deseason\", Deseasonalizer()),\r\n    ...     (\"minmax\", TabularToSeriesAdaptor(MinMaxScaler())),\r\n    ...     (\"difference\", Differencer()),\r\n    ...     (\"forecast\", NaiveForecaster(strategy=\"drift\")),\r\n    ... ],\r\n    ... permutation=[\"difference\", \"outlier\", \"deseason\", \"detrend\", \"impute\", \"minmax\", \"forecast\"],\r\n    ... )\r\n```\r\nThis could be implemented as a `Mixin` class so all sequential pipeline classes could inherit and implement it. To be discussed if `\"forecast\"` step should be part of `permutation` list or if it should just stay at position where it is given. The param `permutation` could also accept `permutation=\"all\"` to try all `n!` combinations with `n` as number of given transformers.\r\n\r\n**Describe alternatives you've considered**\r\nI thought first of having a separate transformer composition for this, but now I think its actually best to integrate this into the existing pipeline classes.\r\n\r\n**Additional context**\r\nGrid search, tuning\r\n\r\n@miraep8  would be interested about your feedback as you wrote the `MultiplexTransformer` which solves the 1:n selection of transformers.\r\nAlso pinging @benHeid and @fkiraly ","closed_by":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3439/timeline","performed_via_github_app":null,"state_reason":"completed"}