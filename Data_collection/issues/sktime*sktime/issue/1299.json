{"url":"https://api.github.com/repos/sktime/sktime/issues/1299","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1299/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1299/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1299/events","html_url":"https://github.com/sktime/sktime/issues/1299","id":971512180,"node_id":"MDU6SXNzdWU5NzE1MTIxODA=","number":1299,"title":"Implement modular ThetaForecaster","user":{"login":"GuzalBulatova","id":73598322,"node_id":"MDQ6VXNlcjczNTk4MzIy","avatar_url":"https://avatars.githubusercontent.com/u/73598322?v=4","gravatar_id":"","url":"https://api.github.com/users/GuzalBulatova","html_url":"https://github.com/GuzalBulatova","followers_url":"https://api.github.com/users/GuzalBulatova/followers","following_url":"https://api.github.com/users/GuzalBulatova/following{/other_user}","gists_url":"https://api.github.com/users/GuzalBulatova/gists{/gist_id}","starred_url":"https://api.github.com/users/GuzalBulatova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuzalBulatova/subscriptions","organizations_url":"https://api.github.com/users/GuzalBulatova/orgs","repos_url":"https://api.github.com/users/GuzalBulatova/repos","events_url":"https://api.github.com/users/GuzalBulatova/events{/privacy}","received_events_url":"https://api.github.com/users/GuzalBulatova/received_events","type":"User","site_admin":false},"labels":[{"id":1180387595,"node_id":"MDU6TGFiZWwxMTgwMzg3NTk1","url":"https://api.github.com/repos/sktime/sktime/labels/implementing%20algorithms","name":"implementing algorithms","color":"c5c0f7","default":false,"description":"Implementing new algorithms/estimators"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"GuzalBulatova","id":73598322,"node_id":"MDQ6VXNlcjczNTk4MzIy","avatar_url":"https://avatars.githubusercontent.com/u/73598322?v=4","gravatar_id":"","url":"https://api.github.com/users/GuzalBulatova","html_url":"https://github.com/GuzalBulatova","followers_url":"https://api.github.com/users/GuzalBulatova/followers","following_url":"https://api.github.com/users/GuzalBulatova/following{/other_user}","gists_url":"https://api.github.com/users/GuzalBulatova/gists{/gist_id}","starred_url":"https://api.github.com/users/GuzalBulatova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuzalBulatova/subscriptions","organizations_url":"https://api.github.com/users/GuzalBulatova/orgs","repos_url":"https://api.github.com/users/GuzalBulatova/repos","events_url":"https://api.github.com/users/GuzalBulatova/events{/privacy}","received_events_url":"https://api.github.com/users/GuzalBulatova/received_events","type":"User","site_admin":false},"assignees":[{"login":"GuzalBulatova","id":73598322,"node_id":"MDQ6VXNlcjczNTk4MzIy","avatar_url":"https://avatars.githubusercontent.com/u/73598322?v=4","gravatar_id":"","url":"https://api.github.com/users/GuzalBulatova","html_url":"https://github.com/GuzalBulatova","followers_url":"https://api.github.com/users/GuzalBulatova/followers","following_url":"https://api.github.com/users/GuzalBulatova/following{/other_user}","gists_url":"https://api.github.com/users/GuzalBulatova/gists{/gist_id}","starred_url":"https://api.github.com/users/GuzalBulatova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuzalBulatova/subscriptions","organizations_url":"https://api.github.com/users/GuzalBulatova/orgs","repos_url":"https://api.github.com/users/GuzalBulatova/repos","events_url":"https://api.github.com/users/GuzalBulatova/events{/privacy}","received_events_url":"https://api.github.com/users/GuzalBulatova/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-08-16T08:52:39Z","updated_at":"2021-12-03T16:12:58Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"**References re-design of Theta Forecaster #854**\r\n\r\nImplements ThetaLinesTransformer #923\r\nImplements ColumnEnsembleForecaster #1082\r\n\r\n**Describe the solution you'd like**\r\n\r\nImplement modular `Theta Forecaster` that will\r\n1. Decompose original data (univariate series) into theta lines (implementation of `ThetaLinesTransformer`, returns transformed time series in DataFrame);\r\n2. Forecast each of these theta lines with different forecasters (implementation of `ColumnEnsembleForecaster`, returns predicted DataFrame)\r\n3. Then aggregate the forecasts into one resulting prediction (return univariate pd.Series)\r\n\r\nUsers should be able to pass theta values for the transformation step, forecasters and aggregation function as parameters.\r\n\r\n**Related issues:**\r\nPoor Theta model predictions #421\r\nImplementation of AutoTheta Forecaster #738\r\n\r\nExisting implementations:\r\nin sktime `sktime/forecasting/theta.py` (theta parameter is assumed)\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1299/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1299/timeline","performed_via_github_app":null,"state_reason":null}