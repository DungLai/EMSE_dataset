{"url":"https://api.github.com/repos/sktime/sktime/issues/3601","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3601/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3601/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3601/events","html_url":"https://github.com/sktime/sktime/issues/3601","id":1412762486,"node_id":"I_kwDOCVKAsc5UNQt2","number":3601,"title":"[BUG] Recursive forecasting and Window Summarizer don't work similarly to each other.","user":{"login":"HishamSalem","id":63689667,"node_id":"MDQ6VXNlcjYzNjg5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/63689667?v=4","gravatar_id":"","url":"https://api.github.com/users/HishamSalem","html_url":"https://github.com/HishamSalem","followers_url":"https://api.github.com/users/HishamSalem/followers","following_url":"https://api.github.com/users/HishamSalem/following{/other_user}","gists_url":"https://api.github.com/users/HishamSalem/gists{/gist_id}","starred_url":"https://api.github.com/users/HishamSalem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HishamSalem/subscriptions","organizations_url":"https://api.github.com/users/HishamSalem/orgs","repos_url":"https://api.github.com/users/HishamSalem/repos","events_url":"https://api.github.com/users/HishamSalem/events{/privacy}","received_events_url":"https://api.github.com/users/HishamSalem/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-10-18T08:07:14Z","updated_at":"2022-11-08T20:27:21Z","closed_at":"2022-11-08T20:17:34Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\n<!--\r\n-->\r\nRecursive Forecasting and Window Summarizer do not provide similar results. \r\n**To Reproduce**\r\n<!--\r\nAdd a Minimal, Complete, and Verifiable example (for more details, see e.g. https://stackoverflow.com/help/mcve\r\n\r\nIf the code is too long, feel free to put it in a public gist and link it in the issue: https://gist.github.com\r\n-->\r\n\r\n```python\r\n#### Imports\r\nfrom sktime.forecasting.model_selection import temporal_train_test_split\r\nfrom sktime.utils.plotting import plot_series\r\nfrom sktime.performance_metrics.forecasting import mean_absolute_percentage_error\r\nfrom sktime.forecasting.base import ForecastingHorizon\r\nfrom sktime.datasets import load_airline\r\nfrom sktime.forecasting.compose import make_reduction\r\nfrom lightgbm.sklearn import LGBMRegressor\r\nfrom sklearn.ensemble import RandomForestRegressor\r\nfrom sklearn.ensemble import HistGradientBoostingRegressor\r\nfrom sklearn.ensemble import GradientBoostingRegressor\r\nfrom xgboost import XGBRegressor\r\nfrom sktime.transformations.series.summarize import WindowSummarizer\r\n\r\n\r\n### Different regressors to try\r\nensemblealgos=[RandomForestRegressor(),GradientBoostingRegressor(),HistGradientBoostingRegressor(),XGBRegressor(),LGBMRegressor()]\r\n\r\ny = load_airline()\r\ny_train, y_test = temporal_train_test_split(y, test_size=30)\r\nfh = ForecastingHorizon(y_test.index, is_relative=False)\r\n\r\nkwargs = {\r\n    \"lag_feature\": {\r\n        \"lag\": [i for i in range(1,13)],\r\n        #\"mean\": [[1, 52], [3, 52]],\r\n        #\"std\": [[1, 52]],\r\n    }\r\n}\r\n\r\n%%time\r\nfor algo in ensemblealgos:\r\n  print(algo)\r\n  for i in range(1,5):\r\n    regressor = algo\r\n    forecaster = make_reduction(regressor, window_length=int(12), strategy=\"recursive\")\r\n    forecaster.fit(y_train)\r\n    y_pred = forecaster.predict(fh)\r\n    #plot_series(y_train, y_test, y_pred, labels=[\"y_train\", \"y_test\", \"y_pred\"])\r\n    print(mean_absolute_percentage_error(y_test, y_pred, symmetric=False))\r\n\r\n\r\n### Model with different transformer\r\n%%time\r\nfor algo in ensemblealgos:\r\n  print(algo)\r\n  for i in range(1,5):\r\n    regressor = RandomForestRegressor()\r\n    forecaster = make_reduction(regressor, window_length=None, strategy=\"recursive\",transformers=[WindowSummarizer(**kwargs, n_jobs=1)])\r\n    forecaster.fit(y_train)\r\n    y_pred = forecaster.predict(fh)\r\n    #plot_series(y_train, y_test, y_pred, labels=[\"y_train\", \"y_test\", \"y_pred\"])\r\n    print(mean_absolute_percentage_error(y_test, y_pred, symmetric=False))\r\n\r\n```\r\n\r\n**Expected behavior**\r\n<!--\r\n-->\r\nResults should look similar or close to each other.\r\n\r\n**Additional context**\r\n<!--\r\n\r\n-->\r\n```\r\n####Using sliding window\r\nOutputs from my end\r\nRandomForestRegressor()\r\n0.09542393170024911\r\n0.09587192333423149\r\n0.09615042673478116\r\n0.09577830829281102\r\nGradientBoostingRegressor()\r\n0.11872564042764874\r\n0.12392810863519736\r\n0.12256783941521117\r\n0.12273453850458489\r\nHistGradientBoostingRegressor()\r\n0.16575414733367372\r\n0.16575414733367372\r\n0.16575414733367372\r\n0.16575414733367372\r\nXGBRegressor()\r\n[08:02:42] WARNING: /workspace/src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\r\n0.11228547590670347\r\n[08:02:42] WARNING: /workspace/src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\r\n0.11228547590670347\r\n[08:02:42] WARNING: /workspace/src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\r\n0.11228547590670347\r\n[08:02:42] WARNING: /workspace/src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\r\n0.11228547590670347\r\nLGBMRegressor()\r\n0.16571286941830107\r\n0.16571286941830107\r\n0.16571286941830107\r\n0.16571286941830107\r\nCPU times: user 4.21 s, sys: 186 ms, total: 4.4 s\r\nWall time: 4.75 s\r\n\r\n##Using Window Transformer\r\nRandomForestRegressor()\r\n0.12962186701907566\r\n0.13159675122854436\r\n0.13033714391420395\r\n0.1350507664821064\r\nGradientBoostingRegressor()\r\n0.1335840947243475\r\n0.13659263188925375\r\n0.13345639986226712\r\n0.13470339423499217\r\nHistGradientBoostingRegressor()\r\n0.13264430177747516\r\n0.1339983399675518\r\n0.1326587102817897\r\n0.1312519660031352\r\nXGBRegressor()\r\n0.13625537316198463\r\n0.13197734633305888\r\n0.1326847438448919\r\n0.13490143601616006\r\nLGBMRegressor()\r\n0.13516534619940587\r\n0.1354277168232956\r\n0.13382313420397354\r\n0.13207307261137405\r\nCPU times: user 42.4 s, sys: 739 ms, total: 43.1 s\r\nWall time: 43.5 s\r\n```\r\n**Versions**\r\nXGBoost: 0.90\r\nLightGBM:2.2.3\r\n<!--\r\nPlease run the following code snippet and paste the output here:\r\n \r\nfrom sktime import show_versions; show_versions()\r\n-->\r\n\r\n\r\nSystem:\r\n    python: 3.7.15 (default, Oct 12 2022, 19:14:55)  [GCC 7.5.0]\r\nexecutable: /usr/bin/python3\r\n   machine: Linux-5.10.133+-x86_64-with-Ubuntu-18.04-bionic\r\n\r\nPython dependencies:\r\n          pip: 21.1.3\r\n   setuptools: 57.4.0\r\n      sklearn: 1.0.2\r\n       sktime: 0.13.4\r\n  statsmodels: 0.13.2\r\n        numpy: 1.21.6\r\n        scipy: 1.7.3\r\n       pandas: 1.3.5\r\n   matplotlib: 3.5.3\r\n       joblib: 1.2.0\r\n        numba: 0.56.2\r\n     pmdarima: 2.0.1\r\n      tsfresh: None\r\n\r\n","closed_by":{"login":"danbartl","id":19947407,"node_id":"MDQ6VXNlcjE5OTQ3NDA3","avatar_url":"https://avatars.githubusercontent.com/u/19947407?v=4","gravatar_id":"","url":"https://api.github.com/users/danbartl","html_url":"https://github.com/danbartl","followers_url":"https://api.github.com/users/danbartl/followers","following_url":"https://api.github.com/users/danbartl/following{/other_user}","gists_url":"https://api.github.com/users/danbartl/gists{/gist_id}","starred_url":"https://api.github.com/users/danbartl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danbartl/subscriptions","organizations_url":"https://api.github.com/users/danbartl/orgs","repos_url":"https://api.github.com/users/danbartl/repos","events_url":"https://api.github.com/users/danbartl/events{/privacy}","received_events_url":"https://api.github.com/users/danbartl/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3601/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3601/timeline","performed_via_github_app":null,"state_reason":"completed"}