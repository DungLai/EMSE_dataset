{"url":"https://api.github.com/repos/sktime/sktime/issues/641","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/641/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/641/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/641/events","html_url":"https://github.com/sktime/sktime/issues/641","id":798261234,"node_id":"MDU6SXNzdWU3OTgyNjEyMzQ=","number":641,"title":"Converting data to nested dataframe.","user":{"login":"Leonardbcm","id":48202779,"node_id":"MDQ6VXNlcjQ4MjAyNzc5","avatar_url":"https://avatars.githubusercontent.com/u/48202779?v=4","gravatar_id":"","url":"https://api.github.com/users/Leonardbcm","html_url":"https://github.com/Leonardbcm","followers_url":"https://api.github.com/users/Leonardbcm/followers","following_url":"https://api.github.com/users/Leonardbcm/following{/other_user}","gists_url":"https://api.github.com/users/Leonardbcm/gists{/gist_id}","starred_url":"https://api.github.com/users/Leonardbcm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leonardbcm/subscriptions","organizations_url":"https://api.github.com/users/Leonardbcm/orgs","repos_url":"https://api.github.com/users/Leonardbcm/repos","events_url":"https://api.github.com/users/Leonardbcm/events{/privacy}","received_events_url":"https://api.github.com/users/Leonardbcm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-02-01T11:30:57Z","updated_at":"2021-02-02T09:11:07Z","closed_at":"2021-02-02T09:11:07Z","author_association":"NONE","active_lock_reason":null,"body":"Hi everyone,\r\n\r\nIm am trying to use sktime for time series forecasting. I have a stream of multivariate data with a daily granularity and the objective is to produce a forecast everyday for the next one.\r\nMy data is formated the following way : each column represent a feqature of the multivariate time serie, and each row is a timestamp.\r\nI want to convert it into a nested dataframe. I can do this manually by copying data and replacing each cell by the correponding serie but I was wondering if such function would exist in sktime. \r\n\r\n\r\n**Describe the solution you'd like**\r\nI would like to have a function that converts a DataFrame containing a multivariate time serie into a nested dataframe, usable by sktime's algorithms. A function where you could chose the time series length would be perfect.\r\n\r\n**Describe alternatives you've considered**\r\nI have tried converting my data into other formats which have their converting functions but the code required is as long as for converting into a nested dataframe.\r\n\r\n**Additional context**\r\nHere is a sample from my data so that you can understand their format.\r\n![image](https://user-images.githubusercontent.com/48202779/106453246-48d2be00-6489-11eb-840c-df7a875dbb88.png)\r\n\r\nThanks for your help!\r\n","closed_by":{"login":"Leonardbcm","id":48202779,"node_id":"MDQ6VXNlcjQ4MjAyNzc5","avatar_url":"https://avatars.githubusercontent.com/u/48202779?v=4","gravatar_id":"","url":"https://api.github.com/users/Leonardbcm","html_url":"https://github.com/Leonardbcm","followers_url":"https://api.github.com/users/Leonardbcm/followers","following_url":"https://api.github.com/users/Leonardbcm/following{/other_user}","gists_url":"https://api.github.com/users/Leonardbcm/gists{/gist_id}","starred_url":"https://api.github.com/users/Leonardbcm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leonardbcm/subscriptions","organizations_url":"https://api.github.com/users/Leonardbcm/orgs","repos_url":"https://api.github.com/users/Leonardbcm/repos","events_url":"https://api.github.com/users/Leonardbcm/events{/privacy}","received_events_url":"https://api.github.com/users/Leonardbcm/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/641/timeline","performed_via_github_app":null,"state_reason":"completed"}