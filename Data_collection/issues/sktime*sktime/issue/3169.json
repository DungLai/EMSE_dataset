{"url":"https://api.github.com/repos/sktime/sktime/issues/3169","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3169/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3169/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3169/events","html_url":"https://github.com/sktime/sktime/issues/3169","id":1328070934,"node_id":"I_kwDOCVKAsc5PKMEW","number":3169,"title":"[BUG] IndexError when selecting `return_X_y=False` and `return_type` is not referencing to a pandas dataframe.","user":{"login":"achieveordie","id":54197164,"node_id":"MDQ6VXNlcjU0MTk3MTY0","avatar_url":"https://avatars.githubusercontent.com/u/54197164?v=4","gravatar_id":"","url":"https://api.github.com/users/achieveordie","html_url":"https://github.com/achieveordie","followers_url":"https://api.github.com/users/achieveordie/followers","following_url":"https://api.github.com/users/achieveordie/following{/other_user}","gists_url":"https://api.github.com/users/achieveordie/gists{/gist_id}","starred_url":"https://api.github.com/users/achieveordie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/achieveordie/subscriptions","organizations_url":"https://api.github.com/users/achieveordie/orgs","repos_url":"https://api.github.com/users/achieveordie/repos","events_url":"https://api.github.com/users/achieveordie/events{/privacy}","received_events_url":"https://api.github.com/users/achieveordie/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3821859781,"node_id":"LA_kwDOCVKAsc7jzPPF","url":"https://api.github.com/repos/sktime/sktime/labels/module:datasets&loaders","name":"module:datasets&loaders","color":"0052cc","default":false,"description":"data sets and data loaders"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2022-08-04T05:03:16Z","updated_at":"2022-08-20T15:36:45Z","closed_at":"2022-08-20T15:36:45Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Describe the bug**\r\n<!--\r\nA clear and concise description of what the bug is.\r\n-->\r\nAs per the discussion in #2697, it was [found](https://github.com/alan-turing-institute/sktime/issues/2697#issuecomment-1196290311) that `_load_provided_dataset()` must throw an error if `return_type` is not a reference to `pd.DataFrame` and `return_X_y=False`. This happens because of code appends the response variable into predictors under the column name 'class_val'.\r\n\r\n**To Reproduce**\r\n<!--\r\nAdd a Minimal, Complete, and Verifiable example (for more details, see e.g. https://stackoverflow.com/help/mcve\r\n\r\nIf the code is too long, feel free to put it in a public gist and link it in the issue: https://gist.github.com\r\n-->\r\n\r\n```python\r\nimport sktime\r\nfrom sktime.datasets._data_io import _load_provided_dataset\r\n\r\ndef test_load_provided_dataset():\r\n    name = \"UnitTest\"                                    # referencing to dataset available for testing in the directory 'datasets/data/'\r\n    X, y = _load_provided_dataset(name, return_type='np2D', return_X_y=False)\r\n    print(X.shape, y.shape)\r\n\r\nif __name__ == \"__main__\":\r\n    print(\"Staring program\")\r\n    test_load_provided_dataset()\r\n    print(\"Done\")\r\n```\r\n\r\n**Output of above code**\r\n```\r\nPS D:\\Projects\\sktime\\sktime\\sktime\\datasets\\tests> D:/Anaconda/envs/sktime-dev/python temp_test_data_io.py\r\nStaring program\r\nTraceback (most recent call last):\r\n  File \"temp_test_data_io.py\", line 11, in <module>\r\n    test_load_provided_dataset()\r\n  File \"temp_test_data_io.py\", line 6, in test_load_provided_dataset\r\n    X, y = _load_provided_dataset(name, return_type='np2D', return_X_y=False)\r\n  File \"d:\\projects\\sktime\\sktime\\sktime\\datasets\\_data_io.py\", line 224, in _load_provided_dataset\r\n    X[\"class_val\"] = pd.Series(y)\r\nIndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\r\n```\r\n\r\n**Expected behavior**\r\n<!--\r\nA clear and concise description of what you expected to happen.\r\n-->\r\nThis clearly is an issue because we are not checking the instance type of X, which could be `np.array` or `pd.DataFrame`.\r\n\r\n**Solutions(?)**\r\n* _Solution 1: Check instance and append in the appropriate axis_\r\n  Consider the following cases \r\n  - Univariate, 2D, equal length data (`X=np.random.randn(20, 24), y=np.random.randn(20,)`) then `output.shape=(20,25)`\r\n  - Univariate 3D, equal length data (`X=np.random.randn(20,1,24), y=np.random.randn(20,)`) then `output.shape=(20,1,25)`\r\n  - Multivariate, equal length data (`X=np.random.randn(20,6,24), y=np.random.randn(20,)`) then `output.shape=(20,6,25)`; requires tiling labels which might not be desirable.\r\n \r\n  I think it should also work for unequal length data but I need confirmation. The only drawback of this solution apart from the repetition of y in the multivariate case is that it might be less intuitive.\r\n\r\n* _Solution 2: Force convert the data into pandas dataframe and give a warning about the conversion._\r\n\r\n**Final Comments**\r\n- There are more solutions to this but I think these two are the most straightforward. I also have the code ready for the first solution and will send a pull request if that is chosen, otherwise I'll take a day's time to send a pull request if we move forward with any other solution.\r\n- I can also add unit tests regarding the same, I don't know if having tests for private methods are a thing or not, but I think it won't hurt having more tests.\r\n\r\n**Versions**\r\n<details>\r\n\r\n<!--\r\nPlease run the following code snippet and paste the output here:\r\n \r\nfrom sktime import show_versions; show_versions()\r\n-->\r\n```\r\nD:\\Anaconda\\envs\\sktime-dev\\lib\\site-packages\\_distutils_hack\\__init__.py:33: UserWarning: Setuptools is replacing distutils.\r\n  warnings.warn(\"Setuptools is replacing distutils.\")\r\n\r\nSystem:\r\n    python: 3.8.13 | packaged by conda-forge | (default, Mar 25 2022, 05:59:00) [MSC v.1929 64 bit (AMD64)]\r\nexecutable: D:\\Anaconda\\envs\\sktime-dev\\python.exe\r\n   machine: Windows-10-10.0.22000-SP0\r\n\r\nPython dependencies:\r\n          pip: 22.1.2\r\n   setuptools: 63.1.0\r\n      sklearn: 1.1.1\r\n       sktime: 0.13.0\r\n  statsmodels: 0.13.2\r\n        numpy: 1.22.4\r\n        scipy: 1.8.1\r\n       pandas: 1.4.3\r\n   matplotlib: 3.5.2\r\n       joblib: 1.1.0\r\n        numba: 0.55.2\r\n     pmdarima: None\r\n      tsfresh: None\r\n```\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3169/timeline","performed_via_github_app":null,"state_reason":"completed"}