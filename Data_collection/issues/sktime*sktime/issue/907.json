{"url":"https://api.github.com/repos/sktime/sktime/issues/907","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/907/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/907/events","html_url":"https://github.com/sktime/sktime/issues/907","id":903908156,"node_id":"MDU6SXNzdWU5MDM5MDgxNTY=","number":907,"title":"[BUG] Seasonal periodicity seems to work incorrectly (at least for naive forecasts with mean strategy)","user":{"login":"Flix6x","id":30658763,"node_id":"MDQ6VXNlcjMwNjU4NzYz","avatar_url":"https://avatars.githubusercontent.com/u/30658763?v=4","gravatar_id":"","url":"https://api.github.com/users/Flix6x","html_url":"https://github.com/Flix6x","followers_url":"https://api.github.com/users/Flix6x/followers","following_url":"https://api.github.com/users/Flix6x/following{/other_user}","gists_url":"https://api.github.com/users/Flix6x/gists{/gist_id}","starred_url":"https://api.github.com/users/Flix6x/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Flix6x/subscriptions","organizations_url":"https://api.github.com/users/Flix6x/orgs","repos_url":"https://api.github.com/users/Flix6x/repos","events_url":"https://api.github.com/users/Flix6x/events{/privacy}","received_events_url":"https://api.github.com/users/Flix6x/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-05-27T15:24:16Z","updated_at":"2021-07-09T16:01:32Z","closed_at":"2021-07-09T16:01:32Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\n<!--\r\nA clear and concise description of what the bug is.\r\n-->\r\nThe interpretation of seasonal periodicity seems to be off by a number of steps in some cases, resulting in shifted forecasts.\r\n\r\n**To Reproduce**\r\n<!--\r\nAdd a Minimal, Complete, and Verifiable example (for more details, see e.g. https://stackoverflow.com/help/mcve\r\n\r\nIf the code is too long, feel free to put it in a public gist and link it in the issue: https://gist.github.com\r\n-->\r\n\r\n```python\r\nimport pandas as pd\r\nfrom sktime.forecasting.base import ForecastingHorizon\r\nfrom sktime.forecasting.naive import NaiveForecaster\r\n\r\n# given 4 hours of data with a seasonal periodicity of 3 hours\r\nsp = 3\r\ntrain_period = pd.date_range(\"2021-06-01 00:00\", \"2021-06-1 04:00\", freq=\"1h\", closed=\"left\")\r\ntrain_data = pd.Series(\r\n    index=train_period,\r\n    data=(list(range(1, sp + 1))*len(train_period))[:len(train_period)],\r\n)\r\nprint(train_data)\r\n\r\n# 2021-06-01 00:00:00    1\r\n# 2021-06-01 01:00:00    2\r\n# 2021-06-01 02:00:00    3\r\n# 2021-06-01 03:00:00    1\r\n# Freq: H, dtype: int64\r\n\r\n# let's forecast the next 5 hours with a periodicity of 3 hours\r\ntest_period = pd.date_range(\"2021-06-01 04:00\", \"2021-06-1 09:00\", freq=\"1h\", closed=\"left\")\r\nfh = ForecastingHorizon(test_period, is_relative=False)\r\nmodel = NaiveForecaster(strategy=\"mean\", sp=sp)\r\nmodel.fit(train_data)\r\ntest_data = model.predict(fh)\r\nprint(test_data)\r\n\r\n# 2021-06-01 04:00:00    1.0\r\n# 2021-06-01 05:00:00    2.0\r\n# 2021-06-01 06:00:00    3.0\r\n# 2021-06-01 07:00:00    1.0\r\n# 2021-06-01 08:00:00    2.0\r\n# dtype: float64\r\n```\r\n\r\n**Expected behavior**\r\n<!--\r\nA clear and concise description of what you expected to happen.\r\n-->\r\n```python\r\n# the result I expected is\r\n\r\n# 2021-06-01 04:00:00    2.0  # (value of 3 hours earlier)\r\n# 2021-06-01 05:00:00    3.0  # (value of 3 hours earlier)\r\n# 2021-06-01 06:00:00    1.0  # (mean value of 3 and 6 hours earlier)\r\n# 2021-06-01 07:00:00    2.0  # (value of 6 hours earlier)\r\n# 2021-06-01 08:00:00    3.0  # (value of 6 hours earlier)\r\n# dtype: float64\r\n```\r\n\r\n**Additional context**\r\n<!--\r\nAdd any other context about the problem here.\r\n-->\r\nIn the above, `sp=3` gives forecasts shifted by 1 step. Changing `sp=3` to `sp=1`, `sp=2` or `sp=4` all yield results as expected. With a training dataset of 5 hours and a seasonality of 3 hours, the forecasts are shifted by 2 steps. It this somehow caused by the training set not being divisible by the periodicity?\r\n\r\n**Versions**\r\n<details>\r\n\r\n<!--\r\nPlease run the following code snippet and paste the output here:\r\n \r\nfrom sktime import show_versions; show_versions()\r\n-->\r\nSystem:\r\n    python: 3.8.6 (default, Jan 27 2021, 15:42:20)  [GCC 10.2.0]\r\nexecutable: /home/felix/PycharmProjects/sktime/venv/bin/python\r\n   machine: Linux-5.11.0-7614-generic-x86_64-with-glibc2.32\r\n\r\nPython dependencies:\r\n          pip: 21.1.2\r\n   setuptools: 57.0.0\r\n      sklearn: 0.24.2\r\n       sktime: 0.6.1\r\n  statsmodels: 0.12.2\r\n        numpy: 1.20.3\r\n        scipy: 1.6.3\r\n       Cython: 0.29.23\r\n       pandas: 1.2.4\r\n   matplotlib: None\r\n       joblib: 1.0.1\r\n        numba: 0.53.1\r\n     pmdarima: None\r\n      tsfresh: None\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/907/timeline","performed_via_github_app":null,"state_reason":"completed"}