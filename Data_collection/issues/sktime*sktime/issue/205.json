{"url":"https://api.github.com/repos/sktime/sktime/issues/205","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/205/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/205/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/205/events","html_url":"https://github.com/sktime/sktime/issues/205","id":531961096,"node_id":"MDU6SXNzdWU1MzE5NjEwOTY=","number":205,"title":"[ENH] Implement AWarp distance measure","user":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"},{"id":4242190496,"node_id":"LA_kwDOCVKAsc782rCg","url":"https://api.github.com/repos/sktime/sktime/labels/needs%20triage","name":"needs triage","color":"CECC4B","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-12-03T12:48:11Z","updated_at":"2022-06-17T12:05:13Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\n[AWarp](https://www.cs.unm.edu/~mueen/Projects/AWarp/) is a variant of Dynamic Time Warping for sparse time series. It claims to be exact for binary-valued series and a close approximation for continuous-valued series. DTW can be prohibitively slow for large, sparse series and series which are unaligned (which leads to a sparse DTW matrix). In these cases, AWarp may provide something more feasible.\r\n\r\n**Describe the solution you'd like**\r\nImplement a new distance metric, `'awarp'`, that can be used in place of existing metrics when desired. Would it also be a good idea to fall back onto `awarp` automatically if `dtw` is requested but a high degree of sparsity is detected in the DTW matrix?\r\n\r\n**Describe alternatives you've considered**\r\nThe only alternative I'm aware of is FastDTW, but AWarp claims to be much more performant (for sparse series at least).\r\n\r\nA Python implementation now exists here: https://github.com/mclmza/AWarp. It uses Numba to further speed things up. Given how small the code is though, it could be easier to re-implement than wrap. It looks like this implementation uses dense matrices and iteration, so maybe some further improvements could be made by using sparse containers and (if possible) broadcasting.\r\n\r\nI'm aware there is a discussion ongoing around data containers, so the best way to implement AWarp could depend on the outcome of this.\r\n\r\n**Additional context**\r\nThe original paper, test datasets and an implementation in C++/Matlab can be found [here](https://www.cs.unm.edu/~mueen/Projects/AWarp/).\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/205/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/205/timeline","performed_via_github_app":null,"state_reason":null}