{"url":"https://api.github.com/repos/sktime/sktime/issues/3479","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3479/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3479/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3479/events","html_url":"https://github.com/sktime/sktime/issues/3479","id":1384980761,"node_id":"I_kwDOCVKAsc5SjSEZ","number":3479,"title":"[BUG] `self._check_fh(fh)` failure in `predict_residuals` for estimators with `\"requires-fh-in-fit\": True`","user":{"login":"kcc-lion","id":54307609,"node_id":"MDQ6VXNlcjU0MzA3NjA5","avatar_url":"https://avatars.githubusercontent.com/u/54307609?v=4","gravatar_id":"","url":"https://api.github.com/users/kcc-lion","html_url":"https://github.com/kcc-lion","followers_url":"https://api.github.com/users/kcc-lion/followers","following_url":"https://api.github.com/users/kcc-lion/following{/other_user}","gists_url":"https://api.github.com/users/kcc-lion/gists{/gist_id}","starred_url":"https://api.github.com/users/kcc-lion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kcc-lion/subscriptions","organizations_url":"https://api.github.com/users/kcc-lion/orgs","repos_url":"https://api.github.com/users/kcc-lion/repos","events_url":"https://api.github.com/users/kcc-lion/events{/privacy}","received_events_url":"https://api.github.com/users/kcc-lion/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-09-25T11:01:03Z","updated_at":"2022-09-28T09:45:30Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\n<!--\r\nA clear and concise description of what the bug is.\r\n-->\r\nThis is a potential bug occurring when `predict_residuals` is called for forecasters with `requires-fh-in-fit=True`. This is caused by a discrepancy in the `fh` inferred by `predict_residuals` and `self.fh` which is derived from the `fh` in `fit`.\r\n\r\nExample:\r\nFit a forecaster with e.g. a  fh of `ForecastingHorizon([1], dtype='int64', is_relative=True)` to a `y` that gives `self.cutoff=52`. Then, calling `predict_residuals` with `y: (5, 1.0)` creates a forecasting horizon that does not match the one that was passed in fit, causing `self._check_fh(fh)` to fail. In the example above, `predict_residuals` would generate fh as `ForecastingHorizon([-47], dtype='int64', is_relative=True)` which does not match the `fh` seen in fit, which causes the failure in `self._check_fh(fh)`.\r\n\r\nThis failure is possibly related to #3475.\r\n\r\n**To Reproduce**\r\n<!--\r\nAdd a Minimal, Complete, and Verifiable example (for more details, see e.g. https://stackoverflow.com/help/mcve\r\n\r\nIf the code is too long, feel free to put it in a public gist and link it in the issue: https://gist.github.com\r\n-->\r\n\r\nThe gist below contains an implementation of an estimator that requires fh in fit and implements `predict_residuals`:\r\nhttps://gist.github.com/kcc-lion/9d77bf0820db0ccac114e8933295200e\r\n\r\nTo replicate, one can alternatively take any estimator that requires `fh` in fit and does not return a `NotImplementedError` for `predict_residuals` and run \r\n\r\n```python\r\nfrom sktime.forecasting.example import ExampleEstimator\r\nfrom sktime.utils.estimator_checks import check_estimator\r\ncheck_estimator(ExampleEstimator, fixtures_to_run='test_predict_residuals[ExampleEstimator-y:1cols-fh=1-int-int-True]', return_exceptions=False)\r\n```\r\n\r\nTo the best of my knowledge, there is no such estimator which requires `fh` in fit and does not return a `NotImplementedError` for `predict_residuals`. This is why the above code snippet uses `ExampleEstimator` as a placeholder for such an estimator.\r\n\r\n**Expected behavior**\r\n<!--\r\nA clear and concise description of what you expected to happen.\r\n-->\r\nExpected behavior would be that `self._check_fh(fh)` does not fail for in-sample prediction to generate residuals.\r\n\r\n**Additional context**\r\n<!--\r\nAdd any other context about the problem here.\r\n-->\r\nThe traceback looks as follows:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/kai/Desktop/repos/sktime/sktime/forecasting/tests/test_all_forecasters.py\", line 262, in test_predict_residuals\r\n    y_res = estimator_instance.predict_residuals(y_test)\r\n  File \"/Users/kai/Desktop/repos/sktime/sktime/forecasting/base/_base.py\", line 1078, in predict_residuals\r\n    fh = self._check_fh(fh)\r\n  File \"/Users/kai/Desktop/repos/sktime/sktime/forecasting/base/_base.py\", line 1634, in _check_fh\r\n    raise ValueError(\r\nValueError: A different forecasting horizon `fh` has been provided from the one seen in `fit`. If you want to change the forecasting horizon, please re-fit the forecaster. This is because fitting of the `SquaringResiduals` depends on `fh`. \r\n```\r\n**Versions**\r\n<details>\r\n\r\n<!--\r\nPlease run the following code snippet and paste the output here:\r\n \r\nfrom sktime import show_versions; show_versions()\r\n-->\r\n\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3479/timeline","performed_via_github_app":null,"state_reason":null}