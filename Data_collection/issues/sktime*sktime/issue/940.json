{"url":"https://api.github.com/repos/sktime/sktime/issues/940","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/940/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/940/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/940/events","html_url":"https://github.com/sktime/sktime/issues/940","id":917233119,"node_id":"MDU6SXNzdWU5MTcyMzMxMTk=","number":940,"title":"ThetaForecaster does not work with time series containig negative values","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"labels":[{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-10T11:26:01Z","updated_at":"2021-06-21T22:21:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\n`ThetaForecaster` does not work with negative values\r\n\r\n**Describe the solution you'd like**\r\nI am trying to train the theta model on a time series with negative values. But it looks like the default deseasonalizing is set to multiplicative which causes this to fail. Is it possible to provide the component types so that it can be externally set to additive when there are negative values? Or does the `ThetaForecaster` have to be defined with multiplicative deseasonalizer only?\r\n\r\n```python\r\nfrom sktime.datasets import load_airline\r\nfrom sktime.forecasting.theta import ThetaForecaster\r\n\r\ny = load_airline() - 400  # simulate negative values\r\nforecaster = ThetaForecaster(sp=12)\r\nforecaster.fit(y)\r\n```\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"c:/Users/Nikhil/OneDrive/my_libraries/my_python_libraries/pycaret_dev/time_series_debug_white_noise.py\", line 49, in <module>\r\n    forecaster.fit(y)\r\n  File \"C:\\Users\\Nikhil\\AppData\\Roaming\\Python\\Python37\\site-packages\\sktime\\forecasting\\theta.py\", line 127, in fit\r\n    y = self.deseasonalizer_.fit_transform(y)\r\n  File \"C:\\Users\\Nikhil\\AppData\\Roaming\\Python\\Python37\\site-packages\\sktime\\transformations\\base.py\", line 88, in fit_transform\r\n    return self.fit(Z).transform(Z)\r\n  File \"C:\\Users\\Nikhil\\AppData\\Roaming\\Python\\Python37\\site-packages\\sktime\\transformations\\series\\detrend\\_deseasonalize.py\", line 89, in fit\r\n    extrapolate_trend=0,\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\pycaret_dev\\lib\\site-packages\\pandas\\util\\_decorators.py\", line 199, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\pycaret_dev\\lib\\site-packages\\statsmodels\\tsa\\seasonal.py\", line 135, in seasonal_decompose\r\n    raise ValueError(\"Multiplicative seasonality is not appropriate \"\r\nValueError: Multiplicative seasonality is not appropriate for zero and negative values\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nRun without deseasonalizing works but would be nice to work with `deseasonalize=True` as well.\r\n```python\r\nforecaster = ThetaForecaster(sp=12, deseasonalize=False)\r\nforecaster.fit(y)\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/940/timeline","performed_via_github_app":null,"state_reason":null}