{"url":"https://api.github.com/repos/sktime/sktime/issues/4013","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/4013/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/4013/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/4013/events","html_url":"https://github.com/sktime/sktime/issues/4013","id":1513678938,"node_id":"I_kwDOCVKAsc5aOOha","number":4013,"title":"[ENH] end-to-end `dask` integration","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-12-29T12:13:44Z","updated_at":"2023-01-09T12:47:55Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"This issue collects a roadmap for achieving end-to-end integration with `dask` data containers at the framework (not estimator) level. For discussion and design.\r\n\r\n* `dask` based mtypes, especially for panel and hierarchical data\r\n    * DONE: https://github.com/sktime/sktime/pull/3554\r\n    * DONE: https://github.com/sktime/sktime/pull/4011\r\n* base classes, esp forecasters and transformers, recognize `dask` data frames and avoid calls to `compute`. Possibly:\r\n    * option: pass to `VectorizeDF`, which recognizes `dask` and handles vectorization via `dask` `groupby`\r\n    * option: if forecaster/transformer does not support `dask` natively, it is wrapped in a `delayed` call\r\n    * option: if transformer is instance-wise, always uses `dask` `groupby` for vectorization\r\n* `dask` support in key transformers: lag, windowing, aggregation/summarization, temporal features","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/4013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/4013/timeline","performed_via_github_app":null,"state_reason":null}