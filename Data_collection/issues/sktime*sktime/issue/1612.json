{"url":"https://api.github.com/repos/sktime/sktime/issues/1612","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1612/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1612/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1612/events","html_url":"https://github.com/sktime/sktime/issues/1612","id":1051960314,"node_id":"I_kwDOCVKAsc4-s6P6","number":1612,"title":"[ENH] window summaries and lagged reducer","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1180391124,"node_id":"MDU6TGFiZWwxMTgwMzkxMTI0","url":"https://api.github.com/repos/sktime/sktime/labels/interfacing%20algorithms","name":"interfacing algorithms","color":"ffc9cd","default":false,"description":"Interfacing existing algorithms/estimators for other packages"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"danbartl","id":19947407,"node_id":"MDQ6VXNlcjE5OTQ3NDA3","avatar_url":"https://avatars.githubusercontent.com/u/19947407?v=4","gravatar_id":"","url":"https://api.github.com/users/danbartl","html_url":"https://github.com/danbartl","followers_url":"https://api.github.com/users/danbartl/followers","following_url":"https://api.github.com/users/danbartl/following{/other_user}","gists_url":"https://api.github.com/users/danbartl/gists{/gist_id}","starred_url":"https://api.github.com/users/danbartl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danbartl/subscriptions","organizations_url":"https://api.github.com/users/danbartl/orgs","repos_url":"https://api.github.com/users/danbartl/repos","events_url":"https://api.github.com/users/danbartl/events{/privacy}","received_events_url":"https://api.github.com/users/danbartl/received_events","type":"User","site_admin":false},"assignees":[{"login":"danbartl","id":19947407,"node_id":"MDQ6VXNlcjE5OTQ3NDA3","avatar_url":"https://avatars.githubusercontent.com/u/19947407?v=4","gravatar_id":"","url":"https://api.github.com/users/danbartl","html_url":"https://github.com/danbartl","followers_url":"https://api.github.com/users/danbartl/followers","following_url":"https://api.github.com/users/danbartl/following{/other_user}","gists_url":"https://api.github.com/users/danbartl/gists{/gist_id}","starred_url":"https://api.github.com/users/danbartl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danbartl/subscriptions","organizations_url":"https://api.github.com/users/danbartl/orgs","repos_url":"https://api.github.com/users/danbartl/repos","events_url":"https://api.github.com/users/danbartl/events{/privacy}","received_events_url":"https://api.github.com/users/danbartl/received_events","type":"User","site_admin":false}],"milestone":null,"comments":24,"created_at":"2021-11-12T13:19:25Z","updated_at":"2022-04-14T06:27:14Z","closed_at":"2022-04-14T06:27:14Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Design rom the Sep 16 design meeting.\r\n\r\nFYI @danbartl, @ltsaprounis (have agreed to take this one).\r\n\r\nWe actually already had this lying around, it would supersede #1581 and address #1577.\r\n\r\n---\r\ndesign proposal for components implementing (implicit) requirements from David's proposal:\r\n\r\n```python\r\nfeature_extractor = LaggedWindowSummarizer(\r\n  window_functions = {\r\n    \"mean\":   (None, [1,8], [7,14]), #(None, [(1,7), (1, 14), (8, 7), (8,14)])\r\n    \"median\": (None, [1,2,3,4], [2,]),\r\n    \"std\":    (None, [1], [2,5]),\r\n    \"kurt\":   (None, [1], [5]), # strings same as in pandas?\r\n    custom_function (Series -> float): (sthsth), #maybe later\r\n    custom_transformer: (sthsthelse), # maybe later\r\n     },\r\n)\r\n# \"mean\" : {lags : [1, 8], window_lengths : [7, 14]}\r\n# \"mean\" : [(1,7), (1, 14), (8, 7), (8,14)] - FK prefers this\r\n# same as\r\n# \"mean\" : generate_windows(lags = [1, 8], window_lengths = [7, 14])\r\n\r\n# -> Leonidas to adapt Daniel's code\r\n\r\ncalendar_features = CalendarDummies(\r\n  base_frequency = \"month\",\r\n  calendar_dummies = ['month','quarter','year',],\r\n  calendar_other = ['proportion_total'],\r\n)\r\n\r\n# series-to-series\r\n#  -> Daniel working on CalendarDummies 1356\r\n#  -> fourier features to add, series-to-series\r\n\r\nforecaster = LaggedReducer(\r\n    regressor = RandomForestRegressor(), \r\n    transformers = [\r\n        feature_extractor,\r\n        calendar_features\r\n        ]\r\n)\r\n\r\n# -> satya tentatively, or first person finished with rest\r\n```\r\n\r\n\r\n`LaggedReducer`\r\n\r\nimplements *direct forecasting approach on the lagged features*\r\n\r\nWhat happens in `fit(y, fh= [1, 5, 7], X)`\r\n\r\n1. create `X_for_regressor` matrix with columns:\r\n\r\n* mean_aggr_1, mean_aggr_2, ..., median_aggr_1, etc = summaries applied to `y`\r\n* calendar_feat_1, calendar_feat_2, ... = calendar transformer applied to `y`\r\n* anything from `X` (if applicable), no transforms are applied to `X`\r\n\r\nand `y_for_regressor` with columns:\r\n\r\n* `lag_1`, `lag_5`, `lag_7` (in future) = lagged versions of `y`\r\n\r\n2. we fit random forest to predict `lag_1` from `X_for_regressor`, `lag_5` from `X_for_regressor`, etc\r\n\r\n\r\nWhat happens in `predict`\r\n\r\n1. create lagged features for the \"to predict line\"\r\n\r\n2. use fitted random forest to predict `lag_1` etc based on this\r\n\r\n\r\nrecursive: would have to apply transformation to the forecasts - sounds inefficient\r\n\r\nFK opinion: let's implement only \"direct\" first\r\n\r\n\r\nReferences: \r\n* [M5 winning solution](https://github.com/Mcompetitions/M5-methods/tree/master/Code%20of%20Winning%20Methods/A1/3.%20code/2.%20train\r\n* [M5 post-opp analysis (from the organisers)](https://www.researchgate.net/publication/344487258_The_M5_Accuracy_competition_Results_findings_and_conclusions)","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1612/timeline","performed_via_github_app":null,"state_reason":"completed"}