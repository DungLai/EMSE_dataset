{"url":"https://api.github.com/repos/sktime/sktime/issues/2640","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2640/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2640/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2640/events","html_url":"https://github.com/sktime/sktime/issues/2640","id":1235397749,"node_id":"I_kwDOCVKAsc5Joqx1","number":2640,"title":"[ENH] type convention clash between transformers and classifiers in case of 2D numpy input","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"},{"id":3102418261,"node_id":"MDU6TGFiZWwzMTAyNDE4MjYx","url":"https://api.github.com/repos/sktime/sktime/labels/module:classification","name":"module:classification","color":"BEB114","default":false,"description":""},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3105907331,"node_id":"MDU6TGFiZWwzMTA1OTA3MzMx","url":"https://api.github.com/repos/sktime/sktime/labels/module:transformations","name":"module:transformations","color":"0865AF","default":false,"description":""},{"id":3745673790,"node_id":"LA_kwDOCVKAsc7fQnI-","url":"https://api.github.com/repos/sktime/sktime/labels/module:datatypes","name":"module:datatypes","color":"bfdadc","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-05-13T15:32:19Z","updated_at":"2022-05-13T19:54:38Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"There is a type convention clash between transformers and classifiers, as currently in sktime.\r\nðŸ˜± \r\n\r\nTransformers are consistent with the forecasting module and the datatypes module (convention A), but classifiers are not (convention B).\r\n\r\nThe clash is as how 2D `numpy` arrays are being interpreted.\r\n\r\nClassifiers (convention B) interpret them as a panel of univariate series, (n_series, n_timepoints).\r\nThis is in accordance with the `numpyflat` mtype that I thought we were using only internally.\r\n\r\nEverything else (convention A) interpret them as a single multivariate series, (n_timepoints, n_variables).\r\nThis is in accordance with the `numpy2D` mtype.\r\n\r\nConvention A is also consistent with the datatypes notebook that contains the preferred specifications.\r\n\r\nWhat should we do?\r\n\r\nI think we need to be consistent here, or we get weirdness in pipelines, such as in https://github.com/alan-turing-institute/sktime/issues/2637. Non-uniform conventions on data representations will leave us in a situation where transformers are either compatible with one or the other, but they cannot be with both.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2640/timeline","performed_via_github_app":null,"state_reason":null}