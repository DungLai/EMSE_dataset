{"url":"https://api.github.com/repos/sktime/sktime/issues/716","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/716/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/716/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/716/events","html_url":"https://github.com/sktime/sktime/issues/716","id":819959431,"node_id":"MDU6SXNzdWU4MTk5NTk0MzE=","number":716,"title":"[BUG] ValueError when using exogenous data in a ForecastingGridSearchCV","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-02T12:11:38Z","updated_at":"2021-03-31T07:20:16Z","closed_at":"2021-03-31T07:20:16Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Describe the bug**\r\n<!--\r\nA clear and concise description of what the bug is.\r\n-->\r\nHi together, just found a possible bug with `ValueError` on master branch and `sktime==0.5.3` when using exogenous data `X` in a `ForecastingGridSearchCV` during `fit()`. Error might come from recent changes on the `update()` function, however not sure if this is already on PyPI?\r\n\r\nError message:\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-7-30ce10c703b7> in <module>\r\n      8 cv = ExpandingWindowSplitter(initial_window=60, window_length=12, start_with_window=True, step_length=12)\r\n      9 gscv = ForecastingGridSearchCV(forecaster, cv=cv, param_grid=param_grid)\r\n---> 10 gscv.fit(y=y_train, X=X_train)\r\n     11 #,\r\n     12 # y_pred = gscv.predict(fh=[x + 1 for x in range(len(y_test))], X=X_test)\r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\model_selection\\_tune.py in fit(self, y, X, fh, **fit_params)\r\n    466             return results\r\n    467 \r\n--> 468         self._run_search(evaluate_candidates)\r\n    469 \r\n    470         self.best_index_ = results[\"rank_test_%s\" % refit_metric].argmin()\r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\model_selection\\_tune.py in _run_search(self, evaluate_candidates)\r\n    576     def _run_search(self, evaluate_candidates):\r\n    577         \"\"\"Search all candidates in param_grid\"\"\"\r\n--> 578         evaluate_candidates(ParameterGrid(self.param_grid))\r\n    579 \r\n    580 \r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\model_selection\\_tune.py in evaluate_candidates(candidate_params)\r\n    446                     X,\r\n    447                     parameters=parameters,\r\n--> 448                     **fit_and_score_kwargs\r\n    449                 )\r\n    450                 out.append(r)\r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\model_selection\\_tune.py in _fit_and_score(forecaster, cv, y, X, scorer, verbose, parameters, fit_params, return_parameters, return_times, return_train_score, return_forecaster, error_score)\r\n    153     else:\r\n    154         fit_time = time.time() - start_time\r\n--> 155         test_scores = _update_score(forecaster, cv, y_val, X_val, scorer)\r\n    156         score_time = time.time() - start_time - fit_time\r\n    157 \r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\model_selection\\_tune.py in _update_score(forecaster, cv, y, X, scorer)\r\n     73 def _update_score(forecaster, cv, y, X, scorer):\r\n     74     \"\"\"Make, update and evaluate forecasts\"\"\"\r\n---> 75     y_pred = forecaster.update_predict(y, cv=cv, X=X)\r\n     76     return _score(y, y_pred, scorer)\r\n     77 \r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\base\\_sktime.py in update_predict(self, y, cv, X, update_params, return_pred_int, alpha)\r\n    422             update_params=update_params,\r\n    423             return_pred_int=return_pred_int,\r\n--> 424             alpha=alpha,\r\n    425         )\r\n    426 \r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\base\\_sktime.py in _predict_moving_cutoff(self, y, cv, X, update_params, return_pred_int, alpha)\r\n    473                     update_params=update_params,\r\n    474                     return_pred_int=return_pred_int,\r\n--> 475                     alpha=alpha,\r\n    476                 )\r\n    477                 y_preds.append(y_pred)\r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\base\\_sktime.py in _update_predict_single(self, y, fh, X, update_params, return_pred_int, alpha)\r\n    346         to implement more efficient updating algorithms when available.\r\n    347         \"\"\"\r\n--> 348         self.update(y, X, update_params=update_params)\r\n    349         return self.predict(fh, X, return_pred_int=return_pred_int, alpha=alpha)\r\n    350 \r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\base\\_sktime.py in update(self, y, X, update_params)\r\n    371         \"\"\"\r\n    372         self.check_is_fitted()\r\n--> 373         self._update_y_X(y, X)\r\n    374         if update_params:\r\n    375             # default to re-fitting if update is not implemented\r\n\r\n~\\bla\\bla\\bla\\sktime\\forecasting\\base\\_sktime.py in _update_y_X(self, y, X, enforce_index_type)\r\n     73         \"\"\"\r\n     74         # update only for non-empty data\r\n---> 75         y, X = check_y_X(y, X, allow_empty=True, enforce_index_type=enforce_index_type)\r\n     76 \r\n     77         if len(y) > 0:\r\n\r\n~\\bla\\bla\\bla\\sktime\\utils\\validation\\forecasting.py in check_y_X(y, X, allow_empty, allow_constant, enforce_index_type)\r\n     58         # checking for index equality here\r\n     59         X = check_X(X)\r\n---> 60         check_equal_time_index(y, X)\r\n     61 \r\n     62     return y, X\r\n\r\n~\\bla\\bla\\bla\\sktime\\utils\\validation\\series.py in check_equal_time_index(*ys)\r\n    150 \r\n    151         if not first_index.equals(y.index):\r\n--> 152             raise ValueError(\"Some (time) indices are not the same.\")\r\n\r\nValueError: Some (time) indices are not the same.\r\n```\r\n**To Reproduce**\r\n<!--\r\nAdd a Minimal, Complete, and Verifiable example (for more details, see e.g. https://stackoverflow.com/help/mcve\r\n\r\nIf the code is too long, feel free to put it in a public gist and link it in the issue: https://gist.github.com\r\n-->\r\n\r\n```python\r\nimport pandas as pd\r\nfrom sktime.forecasting.model_selection import temporal_train_test_split\r\nfrom sktime.forecasting.model_selection import (\r\n    ForecastingGridSearchCV,\r\n    SlidingWindowSplitter)\r\nfrom sktime.forecasting.arima import ARIMA, AutoARIMA\r\nfrom sktime.datasets import load_airline\r\n\r\ny = load_airline()\r\nX = pd.DataFrame({\"y_1\": y * 2, \"y_2\": y * 0.5})\r\nX_train, X_test = temporal_train_test_split(X, test_size = 10)\r\ny_train, y_test = temporal_train_test_split(y, test_size = 10)\r\n\r\nforecaster = AutoARIMA()\r\nparam_grid = {\"sp\": [6, 12], \"suppress_warnings\":[True]}\r\ncv = SlidingWindowSplitter(initial_window=60, window_length=12, start_with_window=True, step_length=12)\r\ngscv = ForecastingGridSearchCV(forecaster, cv=cv, param_grid=param_grid)\r\ngscv.fit(y=y_train,X=X_train)\r\n```\r\n\r\n**Expected behavior**\r\nNo exception.\r\n\r\n**Additional context**\r\nError happens also with `ExpandingWindowSplitter`.\r\n\r\n**Versions**\r\n<details>\r\n\r\nSystem:\r\n    python: 3.7.10 (default, Feb 26 2021, 13:06:18) [MSC v.1916 64 bit (AMD64)]\r\nexecutable: C:\\Users\\bla\\Python\\Miniconda3\\envs\\sktime37\\python.exe\r\n   machine: Windows-10-10.0.17763-SP0\r\n\r\nPython dependencies:\r\n          pip: 21.0.1\r\n   setuptools: 47.3.1\r\n      sklearn: 0.23.2\r\n       sktime: 0.5.3\r\n  statsmodels: 0.12.2\r\n        numpy: 1.19.0\r\n        scipy: 1.6.1\r\n       Cython: 0.29.17\r\n       pandas: 1.1.5\r\n   matplotlib: 3.3.4\r\n       joblib: 1.0.1\r\n        numba: 0.52.0\r\n     pmdarima: 1.8.0\r\n      tsfresh: 0.17.0\r\n\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n#### Author and Legal Imprint:\r\nMartin Walter <martin_friedrich.walter@daimler.com>, Mercedes-Benz AG on behalf of Daimler TSS GmbH.\r\nhttps://github.com/Daimler/daimler-foss/blob/master/LEGAL_IMPRINT.md","closed_by":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/716/timeline","performed_via_github_app":null,"state_reason":"completed"}