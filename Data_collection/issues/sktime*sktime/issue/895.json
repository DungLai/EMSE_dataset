{"url":"https://api.github.com/repos/sktime/sktime/issues/895","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/895/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/895/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/895/events","html_url":"https://github.com/sktime/sktime/issues/895","id":897690294,"node_id":"MDU6SXNzdWU4OTc2OTAyOTQ=","number":895,"title":"[BUG] HIVE-COTE having issue with RISE implementation","user":{"login":"gulstein86","id":21325864,"node_id":"MDQ6VXNlcjIxMzI1ODY0","avatar_url":"https://avatars.githubusercontent.com/u/21325864?v=4","gravatar_id":"","url":"https://api.github.com/users/gulstein86","html_url":"https://github.com/gulstein86","followers_url":"https://api.github.com/users/gulstein86/followers","following_url":"https://api.github.com/users/gulstein86/following{/other_user}","gists_url":"https://api.github.com/users/gulstein86/gists{/gist_id}","starred_url":"https://api.github.com/users/gulstein86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gulstein86/subscriptions","organizations_url":"https://api.github.com/users/gulstein86/orgs","repos_url":"https://api.github.com/users/gulstein86/repos","events_url":"https://api.github.com/users/gulstein86/events{/privacy}","received_events_url":"https://api.github.com/users/gulstein86/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-05-21T05:27:19Z","updated_at":"2021-06-09T08:58:59Z","closed_at":"2021-06-09T08:58:59Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\n<!--\r\nA clear and concise description of what the bug is.\r\n-->\r\nThis is my first time writing an issue in github for other project. I've been trying to run HIVE-COTE with stable sktime from the pypi. So far the model running fine start with STC and TSF however it have a problem with RISE. Already change multiple parameter in `rise_params={'min_interval':1}` but still having the same issue. The data loaded directly from the package itself `from sktime.datasets import load_italy_power_demand`. Trying to google in github, stackoverflow but nothing help. \r\n\r\nSo far running and fit the package individually works well.\r\n\r\n```python\r\nfrom sktime.classification.shapelet_based import ShapeletTransformClassifier\r\nfrom sktime.classification.interval_based._tsf import TimeSeriesForestClassifier\r\nfrom sktime.classification.interval_based import RandomIntervalSpectralForest\r\nfrom sktime.classification.dictionary_based import ContractableBOSS\r\n```\r\n\r\nI believe @TonyBagnall @MatthewMiddlehurst are currently busy with other things (tsml etc). So no worry, on the timeline.\r\n\r\n\r\n**To Reproduce**\r\n<!--\r\nAdd a Minimal, Complete, and Verifiable example (for more details, see e.g. https://stackoverflow.com/help/mcve\r\n\r\nIf the code is too long, feel free to put it in a public gist and link it in the issue: https://gist.github.com\r\n-->\r\nRunning below code after `pip install sktime`\r\n```python\r\nfrom sktime.classification.hybrid import HIVECOTEV1\r\nfrom sktime.datasets import load_italy_power_demand\r\nfrom sklearn.pipeline import Pipeline\r\nfrom sktime.transformations.panel.compose import ColumnConcatenator\r\n\r\nIPD_X_train, IPD_y_train = load_italy_power_demand(split=\"train\", return_X_y=True)\r\n\r\n#univariate\r\nhivecote = HIVECOTEV1(verbose=1, n_jobs=1, rise_params={'min_interval':1}, stc_params={'time_contract_in_mins':1},cboss_params={'time_limit':1} )\r\nhivecote.fit(IPD_X_train, IPD_y_train)\r\n```\r\nIt show below log with `ValueError: Input contains NaN, infinity or a value too large for dtype('float32')` error\r\n```log\r\nSTC  04:35:01 21/05/2021\r\nSTC train estimate  04:45:26 21/05/2021\r\nSTC weight = 0.8325698605055272\r\nTSF  04:45:26 21/05/2021\r\nTSF train estimate  04:45:31 21/05/2021\r\nTSF weight = 0.7332761289061784\r\n/usr/local/lib/python3.7/dist-packages/sktime/classification/interval_based/_rise.py:352: RuntimeWarning: invalid value encountered in double_scalars\r\n  s1 = s1 / (length - lag)\r\n/usr/local/lib/python3.7/dist-packages/sktime/classification/interval_based/_rise.py:353: RuntimeWarning: invalid value encountered in double_scalars\r\n  s2 = s2 / (length - lag)\r\n/usr/local/lib/python3.7/dist-packages/sktime/classification/interval_based/_rise.py:355: RuntimeWarning: invalid value encountered in double_scalars\r\n  y[lag - 1] = y[lag - 1] / (length - lag)\r\n/usr/local/lib/python3.7/dist-packages/sktime/classification/interval_based/_rise.py:356: RuntimeWarning: invalid value encountered in double_scalars\r\n  v1 = ss1 / (length - lag) - s1 * s1\r\n/usr/local/lib/python3.7/dist-packages/sktime/classification/interval_based/_rise.py:357: RuntimeWarning: invalid value encountered in double_scalars\r\n  v2 = ss2 / (length - lag) - s2 * s2\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-6-84d7db33a99a> in <module>()\r\n      1 #univariate\r\n      2 hivecote = HIVECOTEV1(verbose=1, n_jobs=1, rise_params={'min_interval':1}, stc_params={'time_contract_in_mins':1},cboss_params={'time_limit':1} )\r\n----> 3 hivecote.fit(IPD_X_train, IPD_y_train)\r\n\r\n15 frames\r\n/usr/local/lib/python3.7/dist-packages/sktime/classification/hybrid/_hivecote_v1.py in fit(self, X, y)\r\n    182             n_jobs=self.n_jobs,\r\n    183         )\r\n--> 184         self.rise.fit(X, y)\r\n    185 \r\n    186         if self.verbose > 0:\r\n\r\n/usr/local/lib/python3.7/dist-packages/sktime/classification/interval_based/_rise.py in fit(self, X, y)\r\n    240                 self.acf_min_values,\r\n    241             )\r\n--> 242             for i, tree in enumerate(trees)\r\n    243         )\r\n    244 \r\n\r\n/usr/local/lib/python3.7/dist-packages/joblib/parallel.py in __call__(self, iterable)\r\n   1042                 self._iterating = self._original_iterator is not None\r\n   1043 \r\n-> 1044             while self.dispatch_one_batch(iterator):\r\n   1045                 pass\r\n   1046 \r\n\r\n/usr/local/lib/python3.7/dist-packages/joblib/parallel.py in dispatch_one_batch(self, iterator)\r\n    857                 return False\r\n    858             else:\r\n--> 859                 self._dispatch(tasks)\r\n    860                 return True\r\n    861 \r\n\r\n/usr/local/lib/python3.7/dist-packages/joblib/parallel.py in _dispatch(self, batch)\r\n    775         with self._lock:\r\n    776             job_idx = len(self._jobs)\r\n--> 777             job = self._backend.apply_async(batch, callback=cb)\r\n    778             # A job can complete so quickly than its callback is\r\n    779             # called before we get here, causing self._jobs to\r\n\r\n/usr/local/lib/python3.7/dist-packages/joblib/_parallel_backends.py in apply_async(self, func, callback)\r\n    206     def apply_async(self, func, callback=None):\r\n    207         \"\"\"Schedule a func to be run\"\"\"\r\n--> 208         result = ImmediateResult(func)\r\n    209         if callback:\r\n    210             callback(result)\r\n\r\n/usr/local/lib/python3.7/dist-packages/joblib/_parallel_backends.py in __init__(self, batch)\r\n    570         # Don't delay the application, to avoid keeping the input\r\n    571         # arguments in memory\r\n--> 572         self.results = batch()\r\n    573 \r\n    574     def get(self):\r\n\r\n/usr/local/lib/python3.7/dist-packages/joblib/parallel.py in __call__(self)\r\n    261         with parallel_backend(self._backend, n_jobs=self._n_jobs):\r\n    262             return [func(*args, **kwargs)\r\n--> 263                     for func, args, kwargs in self.items]\r\n    264 \r\n    265     def __reduce__(self):\r\n\r\n/usr/local/lib/python3.7/dist-packages/joblib/parallel.py in <listcomp>(.0)\r\n    261         with parallel_backend(self._backend, n_jobs=self._n_jobs):\r\n    262             return [func(*args, **kwargs)\r\n--> 263                     for func, args, kwargs in self.items]\r\n    264 \r\n    265     def __reduce__(self):\r\n\r\n/usr/local/lib/python3.7/dist-packages/sktime/classification/interval_based/_rise.py in _parallel_build_trees(X, y, tree, interval, lag, acf_min_values)\r\n     52     transformed_x = _transform(X, interval, temp_lag)\r\n     53 \r\n---> 54     tree.fit(transformed_x, y)\r\n     55 \r\n     56     return temp_lag, tree\r\n\r\n/usr/local/lib/python3.7/dist-packages/sklearn/tree/_classes.py in fit(self, X, y, sample_weight, check_input, X_idx_sorted)\r\n    905             sample_weight=sample_weight,\r\n    906             check_input=check_input,\r\n--> 907             X_idx_sorted=X_idx_sorted)\r\n    908         return self\r\n    909 \r\n\r\n/usr/local/lib/python3.7/dist-packages/sklearn/tree/_classes.py in fit(self, X, y, sample_weight, check_input, X_idx_sorted)\r\n    157             X, y = self._validate_data(X, y,\r\n    158                                        validate_separately=(check_X_params,\r\n--> 159                                                             check_y_params))\r\n    160             if issparse(X):\r\n    161                 X.sort_indices()\r\n\r\n/usr/local/lib/python3.7/dist-packages/sklearn/base.py in _validate_data(self, X, y, reset, validate_separately, **check_params)\r\n    428                 # :(\r\n    429                 check_X_params, check_y_params = validate_separately\r\n--> 430                 X = check_array(X, **check_X_params)\r\n    431                 y = check_array(y, **check_y_params)\r\n    432             else:\r\n\r\n/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py in inner_f(*args, **kwargs)\r\n     61             extra_args = len(args) - len(all_args)\r\n     62             if extra_args <= 0:\r\n---> 63                 return f(*args, **kwargs)\r\n     64 \r\n     65             # extra_args > 0\r\n\r\n/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py in check_array(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)\r\n    719         if force_all_finite:\r\n    720             _assert_all_finite(array,\r\n--> 721                                allow_nan=force_all_finite == 'allow-nan')\r\n    722 \r\n    723     if ensure_min_samples > 0:\r\n\r\n/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py in _assert_all_finite(X, allow_nan, msg_dtype)\r\n    104                     msg_err.format\r\n    105                     (type_err,\r\n--> 106                      msg_dtype if msg_dtype is not None else X.dtype)\r\n    107             )\r\n    108     # for object dtype data, we only check for NaNs (GH-13254)\r\n\r\nValueError: Input contains NaN, infinity or a value too large for dtype('float32').\r\n```\r\n\r\n**Expected behavior**\r\n<!--\r\nA clear and concise description of what you expected to happen.\r\n-->\r\nRISE and cBOSS will running afterwards without error. Then the CAWPE should be able to be calculated and fit into the model\r\n\r\n**Additional context**\r\n<!--\r\nAdd any other context about the problem here.\r\n-->\r\nI'm using this [google colab ](https://colab.research.google.com/drive/15omM5umHYWSQJoEp7hf3wAL0aBLNQdSv?usp=sharing) with below cpu power\r\n\r\n**Versions**\r\n<details>\r\n\r\n<!--\r\nPlease run the following code snippet and paste the output here:\r\n \r\nfrom sktime import show_versions; show_versions()\r\n-->\r\n```from sktime import show_versions; show_versions()\r\nSystem:\r\n    python: 3.7.10 (default, May  3 2021, 02:48:31)  [GCC 7.5.0]\r\nexecutable: /usr/bin/python3\r\n   machine: Linux-5.4.109+-x86_64-with-Ubuntu-18.04-bionic\r\n\r\nPython dependencies:\r\n          pip: 19.3.1\r\n   setuptools: 56.1.0\r\n      sklearn: 0.24.2\r\n       sktime: 0.6.1\r\n  statsmodels: 0.12.2\r\n        numpy: 1.19.5\r\n        scipy: 1.4.1\r\n       Cython: 0.29.23\r\n       pandas: 1.1.5\r\n   matplotlib: 3.2.2\r\n       joblib: 1.0.1\r\n        numba: 0.51.2\r\n     pmdarima: None\r\n      tsfresh: None\r\n```\r\n```shell\r\n!cat /proc/cpuinfo\r\nprocessor\t: 0\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 63\r\nmodel name\t: Intel(R) Xeon(R) CPU @ 2.30GHz\r\nstepping\t: 0\r\nmicrocode\t: 0x1\r\ncpu MHz\t\t: 2299.998\r\ncache size\t: 46080 KB\r\nphysical id\t: 0\r\nsiblings\t: 2\r\ncore id\t\t: 0\r\ncpu cores\t: 1\r\napicid\t\t: 0\r\ninitial apicid\t: 0\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm invpcid_single ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt arat md_clear arch_capabilities\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs\r\nbogomips\t: 4599.99\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 46 bits physical, 48 bits virtual\r\npower management:\r\n\r\nprocessor\t: 1\r\nvendor_id\t: GenuineIntel\r\ncpu family\t: 6\r\nmodel\t\t: 63\r\nmodel name\t: Intel(R) Xeon(R) CPU @ 2.30GHz\r\nstepping\t: 0\r\nmicrocode\t: 0x1\r\ncpu MHz\t\t: 2299.998\r\ncache size\t: 46080 KB\r\nphysical id\t: 0\r\nsiblings\t: 2\r\ncore id\t\t: 0\r\ncpu cores\t: 1\r\napicid\t\t: 1\r\ninitial apicid\t: 1\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 13\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm invpcid_single ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt arat md_clear arch_capabilities\r\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs\r\nbogomips\t: 4599.99\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 46 bits physical, 48 bits virtual\r\npower management:\r\n\r\n```\r\n</details>\r\n","closed_by":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/895/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/895/timeline","performed_via_github_app":null,"state_reason":"completed"}