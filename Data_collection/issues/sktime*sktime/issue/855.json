{"url":"https://api.github.com/repos/sktime/sktime/issues/855","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/855/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/855/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/855/events","html_url":"https://github.com/sktime/sktime/issues/855","id":873981745,"node_id":"MDU6SXNzdWU4NzM5ODE3NDU=","number":855,"title":"Probabilistic Forecasting using NGboost","user":{"login":"satya-pattnaik","id":22102468,"node_id":"MDQ6VXNlcjIyMTAyNDY4","avatar_url":"https://avatars.githubusercontent.com/u/22102468?v=4","gravatar_id":"","url":"https://api.github.com/users/satya-pattnaik","html_url":"https://github.com/satya-pattnaik","followers_url":"https://api.github.com/users/satya-pattnaik/followers","following_url":"https://api.github.com/users/satya-pattnaik/following{/other_user}","gists_url":"https://api.github.com/users/satya-pattnaik/gists{/gist_id}","starred_url":"https://api.github.com/users/satya-pattnaik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satya-pattnaik/subscriptions","organizations_url":"https://api.github.com/users/satya-pattnaik/orgs","repos_url":"https://api.github.com/users/satya-pattnaik/repos","events_url":"https://api.github.com/users/satya-pattnaik/events{/privacy}","received_events_url":"https://api.github.com/users/satya-pattnaik/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-05-02T16:16:22Z","updated_at":"2021-06-21T22:22:55Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nCan we build a Probabilistic Forecaster using Ngboost. A Probabilistic regression like Ngboost method will give us the confidence intervals out of the box unlike others where we need a heuristic(like quantile loss) to get the values of Conf/Pred Ints.\r\n\r\n**Describe the solution you'd like**\r\nA rough sketch:\r\n```\r\nclass ProbForecaster:\r\n     def __init__():\r\n           self.estimator_ = NgboostRegressor()\r\n     def fit(y,X=None):\r\n           y = make_reduction(y)\r\n           self.estimator_.fit(y)\r\n     def predict(fh,X=none,alpha=0.95,conf_int=True):\r\n           mean_preds =  self.estimator_.predict(y)\r\n           distribution =  self.estimator_.pred_dist(y)\r\n           conf_ints = scipy.norm.interval(alpha, distribution.loc, distribution.scale )\r\n           return mean_preds,conf_ints\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nUsing Xgboost/LightGBM with quantile loss makes the calculation of prediction intervals inefficient.\r\n\r\n**Additional context**\r\nNgboost Doc- [https://stanfordmlgroup.github.io/projects/ngboost/](https://stanfordmlgroup.github.io/projects/ngboost/)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/855/timeline","performed_via_github_app":null,"state_reason":null}