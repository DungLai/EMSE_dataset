{"url":"https://api.github.com/repos/sktime/sktime/issues/1443","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1443/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1443/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1443/events","html_url":"https://github.com/sktime/sktime/issues/1443","id":1004153624,"node_id":"I_kwDOCVKAsc472isY","number":1443,"title":"[ENH] Adding a Featureizer as _SeriesToSeriesTransformer","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[{"id":1118163266,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY2","url":"https://api.github.com/repos/sktime/sktime/labels/good%20first%20issue","name":"good first issue","color":"9eff91","default":true,"description":"Good for newcomers"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3105907331,"node_id":"MDU6TGFiZWwzMTA1OTA3MzMx","url":"https://api.github.com/repos/sktime/sktime/labels/module:transformations","name":"module:transformations","color":"0865AF","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-09-22T10:58:03Z","updated_at":"2021-11-14T14:11:54Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nWhen doing feature engineering, we want to calculate new features by means of any transformer and add them to existing ones. For this there is a need for a new transformer composition called `Featurizer` which gets any `_SeriesToSeriesTransformer` and appends the transformed data as new columns instead of overwriting the input data. `Featurizer` could either get a single transformer or a list of transformers (advanced implementation), this two cases look as follows.\r\n\r\nRelated: #1174\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen, ideally taking into consideration the existing toolbox design, classes and methods.\r\n\r\n**Describe alternatives you've considered**\r\nUse case when getting a single transformer:\r\n```python\r\npipe = ForecastingPipeline(steps=[\r\n    (\"imputer\", Imputer(method=\"mean\")),\r\n    (\"minmaxscaler\", Featurizer(TabularToSeriesAdaptor(MinMaxScaler(feature_range=(1,2))))),\r\n    (\"boxcox\", Featurizer(TabularToSeriesAdaptor(PowerTransformer(method=\"box-cox\")))),\r\n    (\"forecaster\", AutoARIMA(suppress_warnings=True))])\r\npipe.fit(y=y_train, X=X_train)\r\n```\r\nIn this case, the `boxcox` gets also the newly added features from `minmaxscaler`, whereas below the features are appended in parallel and not in sequence.\r\nUse case when getting a list of transformers:\r\n```python\r\npipe = ForecastingPipeline(steps=[\r\n    (\"imputer\", Imputer(method=\"mean\")),\r\n    (\"featurizer\", Featurizer(\r\n        (\"minmaxscaler\", TabularToSeriesAdaptor(MinMaxScaler(feature_range=(1,2)))),\r\n        (\"boxcox\", TabularToSeriesAdaptor(PowerTransformer(method=\"box-cox\"))),\r\n    )),\r\n    (\"forecaster\", AutoARIMA(suppress_warnings=True))])\r\npipe.fit(y=y_train, X=X_train)\r\n```\r\nThe `Featurizer` would by default add the new columns by means of a suffix which is derived from the name of the transformer. Otherwise there could be a praram `suffix` and `prefix` so that user can also define this optionally.\r\n\r\n**Additional context**\r\nPipelining\r\n\r\nAny opinions @RNKuhns @mloning @fkiraly @ViktorKaz \r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1443/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1443/timeline","performed_via_github_app":null,"state_reason":null}