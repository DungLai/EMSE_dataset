{"url":"https://api.github.com/repos/sktime/sktime/issues/4054","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/4054/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/4054/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/4054/events","html_url":"https://github.com/sktime/sktime/issues/4054","id":1517714300,"node_id":"I_kwDOCVKAsc5adnt8","number":4054,"title":"[ENH] rolling window (out of sample) detrender","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"},{"id":1118163266,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY2","url":"https://api.github.com/repos/sktime/sktime/labels/good%20first%20issue","name":"good first issue","color":"9eff91","default":true,"description":"Good for newcomers"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3105907331,"node_id":"MDU6TGFiZWwzMTA1OTA3MzMx","url":"https://api.github.com/repos/sktime/sktime/labels/module:transformations","name":"module:transformations","color":"0865AF","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-01-03T17:35:54Z","updated_at":"2023-01-03T17:36:55Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"It would be good to have a rolling window detrender that allows out-of-sample forecast detrending, i.e., computing rolling window out-of-sample residuals rather than in-sample residuals.\r\n\r\nThe current `Detrender` computes in-sample residuals, when naively applied (via `fit_transform`, which is called in a forecasting pipeline).\r\n\r\nNot sure whether this should be an option in the class or a separate class - it should probably take a splitter (inheriting from `BaseSplitter`) as an argument. There is also some thought to be had around what should happen if the series seen in `transform` is not entirely identical nor entirely different from the one in `fit`.\r\n\r\nIf someone wants to take this up soon, it is perhaps best to base this on the simplified logic in https://github.com/sktime/sktime/pull/4053 rather than the current `main`.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/4054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/4054/timeline","performed_via_github_app":null,"state_reason":null}