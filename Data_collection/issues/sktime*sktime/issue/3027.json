{"url":"https://api.github.com/repos/sktime/sktime/issues/3027","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3027/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3027/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3027/events","html_url":"https://github.com/sktime/sktime/issues/3027","id":1306060811,"node_id":"I_kwDOCVKAsc5N2OgL","number":3027,"title":"[ENH] parameter estimators and `FittedParamPlugin` compositor","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"},{"id":1180366006,"node_id":"MDU6TGFiZWwxMTgwMzY2MDA2","url":"https://api.github.com/repos/sktime/sktime/labels/implementing%20framework","name":"implementing framework","color":"61c7f9","default":false,"description":"Implementing frameworks for new learning tasks"},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-15T13:48:07Z","updated_at":"2022-08-07T13:07:05Z","closed_at":"2022-08-07T13:07:05Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Design idea, based on presentation of @ltsaprounis (example 1) and an earlier discussion with @ngupta23 (example 2).\r\n\r\nWe should have a compositor dealing with the following kind of situation.\r\n\r\nExample 1:\r\n1. determine auto-correlation range\r\n2. window bootstrap with window length at 3 times auto-correlation range\r\n\r\nExample 2:\r\n1. find difference order d that makes series stationary\r\n2. plug that d into an ARIMA model, then fit that ARIMA model\r\n\r\nIn either case, I think we need two things:\r\n* estimators, that only have `fit` and `get_fitted_params`, step 1\r\n* a `FittedParamPlugin` that takes parameters from 1., possibly modifies them, and plugs them into 2\r\n\r\nPossible docstring, for a forecaster:\r\n```python\r\nclass FittedParamPlugin(???):\r\n   \"\"\"Fitted parameter plugin compositor.\r\n\r\n    Overrides fit of forecaster:\r\n    First runs fit of estimator, and then plugs in fitted params into forecaster. Then, fits forecaster.\r\n    Parameters plugged in are listed in params, can be aliased via alias, and transformed via func.\r\n\r\n    Parameters\r\n    ----------\r\n    estimator : BaseEstimator descendant\r\n    forecaster : BaseForecaster descendant\r\n    params : str or list of str, optional, default = intersection of estimator fitted params, foreceaster params\r\n    alias: dict of str, keys = forecaster param names, values = estimator param names\r\n        aliases, describe which params of estimator are plugged into params of forecaster (if differently named)\r\n    func : callable or dict of callable, keys = params, transformations applied before pluggin in\r\n    \"\"\"\r\n```\r\n\r\nIt seems to me that this would be a good use case for a generic delegator!\r\nFYI @miraep8, @ltsaprounis \r\n\r\nDesign input appreciated.","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3027/timeline","performed_via_github_app":null,"state_reason":"completed"}