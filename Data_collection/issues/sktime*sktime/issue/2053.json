{"url":"https://api.github.com/repos/sktime/sktime/issues/2053","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2053/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2053/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2053/events","html_url":"https://github.com/sktime/sktime/issues/2053","id":1133937738,"node_id":"I_kwDOCVKAsc5DloRK","number":2053,"title":"Overview issue for test framework related PR","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1631667223,"node_id":"MDU6TGFiZWwxNjMxNjY3MjIz","url":"https://api.github.com/repos/sktime/sktime/labels/maintenance","name":"maintenance","color":"ea761e","default":false,"description":"Continuous integration, unit testing & package distribution"},{"id":3137622230,"node_id":"MDU6TGFiZWwzMTM3NjIyMjMw","url":"https://api.github.com/repos/sktime/sktime/labels/module:tests","name":"module:tests","color":"43421D","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-02-12T11:52:00Z","updated_at":"2022-02-26T12:22:33Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"This is an overview of the various PRs related to the class refactor, and trying to address the memory issues.\r\n\r\nThere are two concerns:\r\n* A: moving tests to classes, so they can be reused easily, e.g., in other packages\r\n* B: addressing the memory issue\r\n\r\nConcern A, moving to classes, is addressed by:\r\n* \"test classes\" - introduction of test classes in `test_all_estimators`, this is a simple move from loose functions to class structure https://github.com/alan-turing-institute/sktime/pull/1987\r\n* \"forec test\" - refactor `test_all_forecasters` along the lines of this architecture, in https://github.com/alan-turing-institute/sktime/pull/1992\r\n\r\nAddressing concern A highlighted memory-out issues, concern B.\r\nThis is addressed by:\r\n* \"pytest -xdist\" - removing, or adding back `pytest-xdist`\r\n* \"fixt gen\" - changing fixture lists (used in `mark.parametrize) to generators, and making parallel changes in the conditional fixtures plug-in; prototype PR is https://github.com/alan-turing-institute/sktime/pull/2022\r\n* \"cache fit\" - caching (via hash, `cache_lru`) fitted estimators to avoid refitting; prototype PR is https://github.com/alan-turing-institute/sktime/pull/2024\r\n* \"garb coll\" - adding garbage collection (as an auto-use fixture) before all tests, prototype PR is https://github.com/alan-turing-institute/sktime/pull/2052\r\n* \"ests first\" - inverting the test order, i.e., looping over estimators first, then test modules and individual tests - this keeps estimator related content in one chunk, prototype PR is https://github.com/alan-turing-institute/sktime/pull/2054\r\n* \"_tests\" - renames `sktime.tests` to `sktime._tests`, so `pytest-xdist` picks up the long `check_estimator` tests first, and both workers are loaded in balance, prototype PR is https://github.com/alan-turing-institute/sktime/pull/2056\r\n\r\n| PR | test classes | forec test | pytest -xdist | fixt gen | cache fit | garb coll | ests first | `_tests` | what happens &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |\r\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\r\n| `main` | :x: | :x: | :x: | :x: | :x: | :x: | :x: | :x: | tests run ca 1h |\r\n| #2141 | :x: | :x: | :white_check_mark: | :x: | :x: | :x: | :x: | :x: | tests run 30min  |\r\n| #1987 | :white_check_mark: | :x: | :white_check_mark: | :x: | :x: | :x: | :x: | :x: | tests run ca 1h |\r\n| #1992 | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :x: | :x: | :x: | :x: | linux mem fail (original); tests run 30min (using mark.parametrize) |\r\n| #2003 | :white_check_mark: | :white_check_mark: | :x: | :x: | :x: | :x: | :x: | :x: | linux mem fail (original); tests run 1h (using mark.parametrize) |\r\n| #2022 | :white_check_mark: | :white_check_mark: | :x: | :white_check_mark: | :x: | :x: | :x: | :x: | linux mem fail |\r\n| #2023 | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :x: | :x: | :x: | tests run 20min |\r\n| #2024 | :white_check_mark: | :white_check_mark: | :x: | :white_check_mark: | :white_check_mark: | :x: | :x: | :x: | linux mem fail |\r\n| #2028 | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :x: | :x: | linux mem fail |\r\n| #2052 | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :white_check_mark: | :x: | :x: | tests run ca 2h |\r\n| #2054 | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :x: | :x: | :white_check_mark: | :x: | linux hangs (6h) |\r\n| #2055 | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :x: | :white_check_mark: | :x: |  linux hangs (6h) |\r\n| #2056 | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :x: | :white_check_mark: | :white_check_mark: | linux hangs |\r\n| #2057 | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :white_check_mark: | :white_check_mark: | linux hangs |\r\n\r\n\r\nconditionalities in the above:\r\n* fixture generators require test classes introduced\r\n* `test_all_forecasters` refactor requires test classes introduced\r\n* \"estimators first\" test order requires `test_all_forecasters`\r\n* cached fit requires fixture generators\r\n* rename `_tests` requires \"estimators first\" and pytest-xdist\r\n\r\nStrangely:\r\n\r\n#2023, #2024,# 2028 ran when they were first raised.\r\nRe-running after merging PR from main makes them fail again.\r\nPR merged seem not to be related directly, although this https://github.com/alan-turing-institute/sktime/pull/2020 was suspected to interact with tests (but it might just be an \"impact on memory\" thing).\r\n\r\nUpdate:\r\n#1992 runs properly when coding more closely to the original forecaster tests, i.e., using multiple `@pytest.mark.parametrize` instead of a single big one. This indicates there might be sth going on with the `pytest` garbage collection, or memory usage by mutated fixtures.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2053/timeline","performed_via_github_app":null,"state_reason":null}