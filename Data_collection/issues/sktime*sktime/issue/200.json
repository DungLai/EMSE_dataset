{"url":"https://api.github.com/repos/sktime/sktime/issues/200","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/200/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/200/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/200/events","html_url":"https://github.com/sktime/sktime/issues/200","id":523978180,"node_id":"MDU6SXNzdWU1MjM5NzgxODA=","number":200,"title":"fit_predict for Forecasters","user":{"login":"big-o","id":1134151,"node_id":"MDQ6VXNlcjExMzQxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/1134151?v=4","gravatar_id":"","url":"https://api.github.com/users/big-o","html_url":"https://github.com/big-o","followers_url":"https://api.github.com/users/big-o/followers","following_url":"https://api.github.com/users/big-o/following{/other_user}","gists_url":"https://api.github.com/users/big-o/gists{/gist_id}","starred_url":"https://api.github.com/users/big-o/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-o/subscriptions","organizations_url":"https://api.github.com/users/big-o/orgs","repos_url":"https://api.github.com/users/big-o/repos","events_url":"https://api.github.com/users/big-o/events{/privacy}","received_events_url":"https://api.github.com/users/big-o/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2019-11-17T12:22:57Z","updated_at":"2020-01-30T12:31:32Z","closed_at":"2020-01-30T12:31:31Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nI'm sure there will be many situations where users just want to get a quick forecast on a time series. Implementing a `fit_predict` method would make the forecaster interface simpler for this common use case.\r\n\r\n**Describe the solution you'd like**\r\nAdd a `fit_predict` method to BaseForecaster, which takes in all the arguments of `fit` and `predict`, fits the forecaster and returns the prediction for the provided horizon. I'm not aware of any clashing arguments for `fit` and `predict` in any of the existing forecasters, and implementing this method earlier on will force authors to avoid such clashes in the future.","closed_by":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/200/timeline","performed_via_github_app":null,"state_reason":"completed"}