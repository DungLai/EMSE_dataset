{"url":"https://api.github.com/repos/sktime/sktime/issues/2712","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2712/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2712/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2712/events","html_url":"https://github.com/sktime/sktime/issues/2712","id":1251697717,"node_id":"I_kwDOCVKAsc5Km2Q1","number":2712,"title":"[ENH] Utility functions to format pandas data frame into correct hierarchical/global format","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"labels":[{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-05-28T18:31:17Z","updated_at":"2022-05-31T17:37:41Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nUsually, hierarchical data is available in the form of a pandas data frame with various hierarchy values and time stamps present as columns. Would it be possible to provide a utility function to format this into the right format for sktime?, e.g,\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n```python\r\ndef create_multiindex(data: pd.DataFrame, hierarchy: List[str], timestamps: Optional[str]) -> pd.DataFrame:\r\n    \"\"\"Returns the data in a MultiIndex format that is compatible with sktime hierarchical and global forecasters\r\n    hierarchy: columns to use for the hierarchy. Ordered (highest hierarchy to lowest hierarchy)\r\n    timestamps: column to use for time stamps. If None, the `data` index is used as timestamps\r\n    \"\"\"\r\n    # format the dataframe\r\n    return formatted_data\r\n```\r\n\r\n\r\n**Describe alternatives you've considered**\r\nThis has to be done manually by everyone right now. Having this utility function would be helpful.\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2712/timeline","performed_via_github_app":null,"state_reason":null}