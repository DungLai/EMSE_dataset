{"url":"https://api.github.com/repos/sktime/sktime/issues/3345","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3345/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3345/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3345/events","html_url":"https://github.com/sktime/sktime/issues/3345","id":1351497923,"node_id":"I_kwDOCVKAsc5QjjjD","number":3345,"title":"[BUG] `Differencer` returns original data instead of inverting when all in-sample","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2022-08-25T22:09:25Z","updated_at":"2022-09-21T20:57:46Z","closed_at":"2022-09-21T20:57:46Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"From @ilkersigirci in #3277.\n\nUnexpected behaviour when `Differencer` is asked to inverse transform in-sample and used inside a target transformation forecasting pipeline - because `Differencer` just retrieves the data seen in `fit`.\n\n---\nAssume that I want to log&diff y and X and use ARIMA model as forecaster. When I tried to get in_sample prediction of the pipeline, I got exactly original y data instead of arima's in_sample prediction. Note that this is not the case when using just the model not the pipeline with the transformer. I think this happens because Differencer returns its stored data for the same indices. \n\nI believe this is a general bug for any forecasting pipeline that uses Differencer and forecaster whose able to do in_sample prediction together.\n\n```python\nimport numpy as np\nfrom sktime.forecasting.compose import (\n    ForecastingPipeline,\n    TransformedTargetForecaster,\n)\nfrom sktime.transformations.compose import TransformerPipeline\nfrom sktime.transformations.series.compose import OptionalPassthrough\nfrom sktime.forecasting.model_selection import temporal_train_test_split\nfrom sktime.transformations.series.difference import Differencer\nfrom sktime.transformations.series.boxcox import LogTransformer\nfrom sktime.forecasting.base import ForecastingHorizon\nfrom sktime.datasets import load_airline\n\ny = load_airline()\nX = pd.DataFrame({\"lag1\": y.shift(1).fillna(method=\"bfill\"),\n                  \"lag2\": y.shift(2).fillna(method=\"bfill\")}, \n                 index=y.index)\n\ny_train, y_test, X_train, X_test = temporal_train_test_split(y=y,X=X, test_size=30)\nfh_out = np.arange(1, len(y_test)+1)\nfh_ins = ForecastingHorizon(y_train.index, is_relative=False)\n\npipe = ForecastingPipeline(\n    steps=[\n        (\n            \"transformersX\",\n            TransformerPipeline(\n                steps=[\n                    (\"logX\", OptionalPassthrough(LogTransformer())),\n                    (\"differencerX\", Differencer(na_handling=\"fill_zero\")),\n                ]\n            ),\n        ),\n        (\n            \"forecaster\",\n            TransformedTargetForecaster(\n                steps=[\n                    (\n                        \"transformers\",\n                        TransformerPipeline(\n                            steps=[\n                                (\"log\", OptionalPassthrough(LogTransformer())),\n                                (\"differencer\", Differencer(na_handling=\"fill_zero\")),\n                            ]\n                        ),\n                    ),\n                    (\"arima\", ARIMA()),\n                ]\n            ),\n        ),\n    ]\n)\n\npipe.fit(y=y_train, X=X_train)\npipe_ins = pipe.predict(fh=fh_ins, X=X_train)\npipe_forecast = pipe.predict(fh=fh_out, X=X_test)\n\narima_model = ARIMA()\narima_model.fit(y=y_train, X=X_train)\nmodel_ins = arima_model.predict(fh=fh_ins, X=X_train)\nmodel_forecast = arima_model.predict(fh=fh_out, X=X_test)\n\n\n# Returns True - not expected\nnp.allclose(y_train.to_numpy(), pipe_ins.to_numpy())\n\n# Returns False - not expected\nnp.allclose(pipe_ins.to_numpy(), model_ins.to_numpy())\n\n# Returns False - expected\nnp.allclose(y_train.to_numpy(), model_ins.to_numpy())\n```\n\n_Originally posted by @ilkersigirci in https://github.com/alan-turing-institute/sktime/discussions/3277#discussioncomment-3469781_","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3345/timeline","performed_via_github_app":null,"state_reason":"completed"}