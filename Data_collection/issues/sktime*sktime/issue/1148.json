{"url":"https://api.github.com/repos/sktime/sktime/issues/1148","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1148/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1148/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1148/events","html_url":"https://github.com/sktime/sktime/issues/1148","id":946779365,"node_id":"MDU6SXNzdWU5NDY3NzkzNjU=","number":1148,"title":"[DOC] Completing estimator class docstrings","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1203928605,"node_id":"MDU6TGFiZWwxMjAzOTI4NjA1","url":"https://api.github.com/repos/sktime/sktime/labels/documentation","name":"documentation","color":"f4bdf9","default":true,"description":"Documentation & tutorials"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/sktime/sktime/milestones/6","html_url":"https://github.com/sktime/sktime/milestone/6","labels_url":"https://api.github.com/repos/sktime/sktime/milestones/6/labels","id":6956457,"node_id":"MI_kwDOCVKAsc4AaiWp","number":6,"title":"The Great Documentation Overhaul","description":"","creator":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"open_issues":6,"closed_issues":24,"state":"open","created_at":"2021-07-17T09:28:03Z","updated_at":"2022-04-18T21:23:55Z","due_on":null,"closed_at":null},"comments":7,"created_at":"2021-07-17T09:38:28Z","updated_at":"2022-04-18T21:23:55Z","closed_at":"2022-04-18T21:23:55Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Every estimator class should have a complete docstring.\r\nThis should be worked on one-by-one, and feel free to complete only individual rubrics if it's unclear what to fill in for the others.\r\n\r\nA good estimator docstring should include rubrics:\r\n* one-liner description (top), start capitalized, end with `.`\r\n* description paragraph - what is the algorithm?\r\n* `Components` block - only if there are estimator components. The list of components should be identical with constructor arguments that are estimators (inheriting from `BaseClassifier`, `BaseForecaster`, etc).\r\n* `Parameters` block - individual parameters listed with `param_name: type, explanation`, explanation should include value/structure convention if expectation is more specific than just stating the type, e.g., `n: int, integer between 0 and 42`.\r\nThe list of `Parameters` should be identical with constructor arguments that are not estimators.\r\n* `Attributes` block - these are the most important attributes of object instances which are not parameters or components. It should include attributes that correspond to the \"fitted model\".\r\n* `Notes` - details, formulae, academic references\r\n* `Example` - self-contained example on `sktime` internal toy data that runs\r\n\r\nFor formatting, we use the [numpy style](https://numpydoc.readthedocs.io/en/latest/format.html), though note that the rubrics are slightly different (because we are dealing with algorithms/estimators).\r\nAlso look at the [extension templates](https://github.com/alan-turing-institute/sktime/tree/main/extension_templates) for the algorithm scitype for a \"fill-in template\" that algorithm implementers are using (or should be using).\r\n\r\nHere's an example of a good class docstring:\r\n\r\n```python\r\nclass BOSSEnsemble(BaseClassifier):\r\n    \"\"\"Ensemble of bag of Symbolic Fourier Approximation Symbols (BOSS).\r\n\r\n    Implementation of BOSS Ensemble from Schäfer (2015). [1]_\r\n\r\n    Overview: Input \"n\" series of length \"m\" and BOSS performs a grid search over\r\n    a set of parameter values, evaluating each with a LOOCV. It then retains\r\n    all ensemble members within 92% of the best by default for use in the ensmeble.\r\n    There are three primary parameters:\r\n        - alpha: alphabet size\r\n        - w: window length\r\n        - l: word length.\r\n\r\n    For any combination, a single BOSS slides a window length \"w\" along the\r\n    series. The w length window is shortened to an \"l\" length word through\r\n    taking a Fourier transform and keeping the first l/2 complex coefficients.\r\n    These \"l\" coefficients are then discretized into alpha possible values,\r\n    to form a word length \"l\". A histogram of words for each\r\n    series is formed and stored.\r\n\r\n    Fit involves finding \"n\" histograms.\r\n\r\n    Predict uses 1 nearest neighbor with a bespoke BOSS distance function.\r\n\r\n    Parameters\r\n    ----------\r\n    threshold : float, default=0.92\r\n        Threshold used to determine which classifiers to retain. All classifiers\r\n        within percentage `threshold` of the best one are retained.\r\n    max_ensemble_size : int or None, default=500\r\n        Maximum number of classifiers to retain. Will limit number of retained\r\n        classifiers even if more than `max_ensemble_size` are within threshold.\r\n    max_win_len_prop : int or float, default=1\r\n        Maximum window length as a proportion of the series length.\r\n    min_window : int, default=10\r\n        Minimum window size.\r\n    n_jobs : int, default=1\r\n        The number of jobs to run in parallel for both `fit` and `predict`.\r\n        ``-1`` means using all processors.\r\n    random_state : int or None, default=None\r\n        Seed for random, integer.\r\n\r\n    Attributes\r\n    ----------\r\n    n_classes : int\r\n        Number of classes. Extracted from the data.\r\n    n_instances : int\r\n        Number of instances. Extracted from the data.\r\n    n_estimators : int\r\n        The final number of classifiers used. Will be <= `max_ensemble_size` if\r\n        `max_ensemble_size` has been specified.\r\n    series_length : int\r\n        Length of all series (assumed equal).\r\n    classifiers : list\r\n       List of DecisionTree classifiers.\r\n\r\n    See Also\r\n    --------\r\n    IndividualBOSS, ContractableBOSS\r\n\r\n    Notes\r\n    -------\r\n    For the Java version, see\r\n    `TSML <https://github.com/uea-machine-learning/tsml/blob/master/src/\r\n    main/java/tsml/classifiers/dictionary_based/BOSS.java>`_.\r\n\r\n    References\r\n    ----------\r\n    .. [1] Patrick Schäfer, \"The BOSS is concerned with time series classification\r\n       in the presence of noise\", Data Mining and Knowledge Discovery, 29(6): 2015\r\n       https://link.springer.com/article/10.1007/s10618-014-0377-7\r\n\r\n    Example\r\n    -------\r\n    >>> from sktime.classification.dictionary_based import BOSSEnsemble\r\n    >>> from sktime.datasets import load_italy_power_demand\r\n    >>> X_train, y_train = load_italy_power_demand(split=\"train\", return_X_y=True)\r\n    >>> X_test, y_test = load_italy_power_demand(split=\"test\", return_X_y=True)\r\n    >>> clf = BOSSEnsemble()\r\n    >>> clf.fit(X_train, y_train)\r\n    BOSSEnsemble(...)\r\n    >>> y_pred = clf.predict(X_test)\r\n    \"\"\"\r\n```\r\n\r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1148/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1148/timeline","performed_via_github_app":null,"state_reason":"completed"}