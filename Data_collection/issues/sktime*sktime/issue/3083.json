{"url":"https://api.github.com/repos/sktime/sktime/issues/3083","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3083/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3083/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3083/events","html_url":"https://github.com/sktime/sktime/issues/3083","id":1315864207,"node_id":"I_kwDOCVKAsc5Obn6P","number":3083,"title":"[BUG] sporadic failure in HIVE-COTE2 continuous interval tree subsampling to single class data sample","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3102418261,"node_id":"MDU6TGFiZWwzMTAyNDE4MjYx","url":"https://api.github.com/repos/sktime/sktime/labels/module:classification","name":"module:classification","color":"BEB114","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-24T10:08:40Z","updated_at":"2022-07-26T11:34:52Z","closed_at":"2022-07-26T11:34:52Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"HIVE-COTE2 sporadically fails on standard test scenarios, as continuous interval tree can end up sub-sampling such that the sub-sampled data contains only one class.\r\n\r\nExample run:\r\nhttps://github.com/alan-turing-institute/sktime/runs/7484288807?check_suite_focus=true\r\n\r\nExample traceback:\r\n```\r\n2022-07-24T01:23:32.2345094Z self = ContinuousIntervalTree()\r\n2022-07-24T01:23:32.2345493Z X = array([[ 0.12919995,  0.2       , -0.11130629,  0.25      ,  1.0588584 ,\r\n2022-07-24T01:23:32.2346768Z         -0.25      ,  0.65891194,  0.5       ...     0.75      ,  3.2562025 , -0.5       , -0.08817679,  0.33333334,\r\n2022-07-24T01:23:32.2347199Z          0.05919602,  0.25      ]], dtype=float32)\r\n2022-07-24T01:23:32.2347537Z y = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\r\n2022-07-24T01:23:32.2347774Z \r\n2022-07-24T01:23:32.2347964Z     def fit(self, X, y):\r\n2022-07-24T01:23:32.2348325Z         \"\"\"Fit a tree on cases (X,y), where y is the target variable.\r\n2022-07-24T01:23:32.2348672Z     \r\n2022-07-24T01:23:32.2349059Z         Build an information gain based tree for continuous attributes using the\r\n2022-07-24T01:23:32.2349447Z         margin gain metric for ties.\r\n2022-07-24T01:23:32.2349753Z     \r\n2022-07-24T01:23:32.2350037Z         Parameters\r\n2022-07-24T01:23:32.2350336Z         ----------\r\n2022-07-24T01:23:32.2350708Z         X : array-like or sparse matrix of shape = [n_instances,n_attributes]\r\n2022-07-24T01:23:32.2351114Z         The training input samples.\r\n2022-07-24T01:23:32.2351512Z         y : array-like, shape =  [n_instances]    The class labels.\r\n2022-07-24T01:23:32.2351838Z     \r\n2022-07-24T01:23:32.2352115Z         Returns\r\n2022-07-24T01:23:32.2352401Z         -------\r\n2022-07-24T01:23:32.2352691Z         self : object\r\n2022-07-24T01:23:32.2352960Z         \"\"\"\r\n2022-07-24T01:23:32.2353336Z         if isinstance(X, np.ndarray) and len(X.shape) == 3 and X.shape[1] == 1:\r\n2022-07-24T01:23:32.2353755Z             X = np.reshape(X, (X.shape[0], -1))\r\n2022-07-24T01:23:32.2354134Z         elif not isinstance(X, np.ndarray) or len(X.shape) > 2:\r\n2022-07-24T01:23:32.2354501Z             raise ValueError(\r\n2022-07-24T01:23:32.2354903Z                 \"ContinuousIntervalTree is not a time series classifier. \"\r\n2022-07-24T01:23:32.2355361Z                 \"A valid sklearn input such as a 2d numpy array is required.\"\r\n2022-07-24T01:23:32.2355802Z                 \"Sparse input formats are currently not supported.\"\r\n2022-07-24T01:23:32.2356157Z             )\r\n2022-07-24T01:23:32.2356518Z         X, y = self._validate_data(X=X, y=y, ensure_min_samples=2)\r\n2022-07-24T01:23:32.2356893Z     \r\n2022-07-24T01:23:32.2357230Z         self.n_instances_, self.n_atts_ = X.shape\r\n2022-07-24T01:23:32.2357574Z         self.classes_ = np.unique(y)\r\n2022-07-24T01:23:32.2357944Z         self.n_classes_ = self.classes_.shape[0]\r\n2022-07-24T01:23:32.2358309Z         self._class_dictionary = {}\r\n2022-07-24T01:23:32.2358691Z         for index, classVal in enumerate(self.classes_):\r\n2022-07-24T01:23:32.2359076Z             self._class_dictionary[classVal] = index\r\n2022-07-24T01:23:32.2359402Z     \r\n2022-07-24T01:23:32.2359699Z         if self.n_classes_ == 1:\r\n2022-07-24T01:23:32.2360076Z >           raise ValueError(\"fit input y must contain more than one class\")\r\n2022-07-24T01:23:32.2360523Z E           ValueError: fit input y must contain more than one class\r\n```","closed_by":{"login":"MatthewMiddlehurst","id":25731235,"node_id":"MDQ6VXNlcjI1NzMxMjM1","avatar_url":"https://avatars.githubusercontent.com/u/25731235?v=4","gravatar_id":"","url":"https://api.github.com/users/MatthewMiddlehurst","html_url":"https://github.com/MatthewMiddlehurst","followers_url":"https://api.github.com/users/MatthewMiddlehurst/followers","following_url":"https://api.github.com/users/MatthewMiddlehurst/following{/other_user}","gists_url":"https://api.github.com/users/MatthewMiddlehurst/gists{/gist_id}","starred_url":"https://api.github.com/users/MatthewMiddlehurst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MatthewMiddlehurst/subscriptions","organizations_url":"https://api.github.com/users/MatthewMiddlehurst/orgs","repos_url":"https://api.github.com/users/MatthewMiddlehurst/repos","events_url":"https://api.github.com/users/MatthewMiddlehurst/events{/privacy}","received_events_url":"https://api.github.com/users/MatthewMiddlehurst/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3083/timeline","performed_via_github_app":null,"state_reason":"completed"}