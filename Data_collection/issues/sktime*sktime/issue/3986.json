{"url":"https://api.github.com/repos/sktime/sktime/issues/3986","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3986/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3986/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3986/events","html_url":"https://github.com/sktime/sktime/issues/3986","id":1509242771,"node_id":"I_kwDOCVKAsc5Z9TeT","number":3986,"title":"[BUG] ForecastX is returning wrong predictions","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2022-12-23T11:35:01Z","updated_at":"2022-12-30T14:09:09Z","closed_at":"2022-12-30T14:09:09Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Describe the bug**\r\n`ForecastX` returns weird predictions, when I recreate the composition manually I get different results, see below.\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nfrom sktime.datasets import load_longley\r\nfrom sktime.forecasting.arima import ARIMA\r\nfrom sktime.forecasting.base import ForecastingHorizon\r\nfrom sktime.forecasting.compose import ForecastX\r\nfrom sktime.forecasting.var import VAR\r\nfrom sktime.forecasting.model_selection import temporal_train_test_split\r\nimport pandas as pd\r\n\r\ny, X = load_longley()\r\ny_train, y_test, X_train, X_test = temporal_train_test_split(y, X, test_size=3)\r\nfh = ForecastingHorizon([1, 2, 3])\r\ncolumns=[\"ARMED\", \"POP\"]\r\n\r\n# ForecastX\r\npipe = ForecastX(  \r\n    forecaster_X=VAR(),\r\n    forecaster_y=ARIMA(),\r\n    columns=columns,\r\n)\r\npipe = pipe.fit(y_train, X=X_train, fh=fh) \r\n# dropping [\"ARMED\", \"POP\"] as those are the columns where we expect not to have future values\r\ny_pred = pipe.predict(fh=fh, X=X_test.drop(columns=columns))\r\ny_pred.to_frame()\r\n```\r\n<html>\r\n<body>\r\n<!--StartFragment-->\r\n\r\n  | 0\r\n-- | --\r\n-285606.156664\r\n-276594.299226\r\n-267325.354023\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\n**Expected behavior**\r\n\r\nExpected would be following, recreated manually:\r\n```python\r\n# fit y forecaster\r\narima = ARIMA().fit(y_train, X=X_train)\r\n\r\n# fit and predict X forecaster\r\nvar = VAR()\r\nvar.fit(X_train[columns])\r\nvar_pred = var.predict(fh)\r\n\r\n# predict y forecaster with predictions from VAR\r\nX_pred = pd.concat([X_test.drop(columns=columns), var_pred], axis=1)\r\narima.predict(fh=fh, X=X_pred).to_frame()\r\n```\r\n<html>\r\n<body>\r\n<!--StartFragment-->\r\n\r\n  | 0\r\n-- | --\r\n70085.541848\r\n70073.339809\r\n72665.367272\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\nThis makes more sense if we look into what plain `ARIMA` is forecasting:\r\n```python\r\narima = ARIMA()\r\narima.fit(y=y_train, X=X_train, fh=fh)\r\narima.predict(X=X_test).to_frame()\r\n```\r\n<html>\r\n<body>\r\n<!--StartFragment-->\r\n\r\n  | 0\r\n-- | --\r\n70372.810378\r\n70873.888217\r\n73678.534405\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\n**Additional context**\r\nI am wonderind how I can use `ForecastX` in `evaluate`? The `X` will be always given with all columns but I want to be sure that `ForecastX` is overwriting the given `columns` in `X` in `predict` so that `forecaster_y` gets the predictions of `forecaster_X` appended with the other columns as input (see above where I reproduced the `ForecastX` coposition manually and use `append`). So even if `X` is given in `predict` with all columns it should overwrite the `columns` specified in `ForecastX(columns=[...])`- is that already like that?\r\n\r\n**Versions**\r\n<details>\r\n\r\nSystem:\r\n    python: 3.8.10 (default, Jun 22 2022, 20:18:18)  [GCC 9.4.0]\r\nexecutable: /local_disk0/.ephemeral_nfs/envs/pythonEnv-8a6aed3a-d844-4ca9-bc34-194086d0db32/bin/python\r\n   machine: Linux-5.4.0-1090-azure-x86_64-with-glibc2.29\r\n\r\nPython dependencies:\r\n          pip: 21.0.1\r\n   setuptools: 52.0.0\r\n      sklearn: 0.24.1\r\n       sktime: 0.15.0\r\n  statsmodels: 0.13.5\r\n        numpy: 1.22.4\r\n        scipy: 1.6.2\r\n       pandas: 1.2.4\r\n   matplotlib: 3.4.2\r\n       joblib: 1.0.1\r\n        numba: 0.56.4\r\n     pmdarima: 2.0.2\r\n      tsfresh: None\r\n\r\n</details>\r\n\r\n<!-- Thanks for contributing! -->\r\n\r\n\r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3986/timeline","performed_via_github_app":null,"state_reason":"completed"}