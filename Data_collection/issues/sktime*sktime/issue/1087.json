{"url":"https://api.github.com/repos/sktime/sktime/issues/1087","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1087/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1087/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1087/events","html_url":"https://github.com/sktime/sktime/issues/1087","id":934129349,"node_id":"MDU6SXNzdWU5MzQxMjkzNDk=","number":1087,"title":"Redesign check_X and check_X_y, factor out conversion functionality","user":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-30T21:09:22Z","updated_at":"2021-07-01T20:53:38Z","closed_at":"2021-07-01T20:53:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"check_X and check_X_y follow the scikit learn strategy and do more than check_X and y. They also convert data types. This is poor engineering and, with classifiers in particular, makes modular design complicated. I propose we decouple these two operations into separate functions, so that check_X simply checks the validity of input (is it a series or a panda?) and then \"coercion\" happens separately. We can in the first instance decide on how to do this without deciding on where to do it (related structural issues). Decide on names, what checks, what coercion etc\r\n\r\ncheck_X and y varients\r\n    simply makes sure the input is actually valid (and we decide what that means)\r\ndata structure transform:\r\nwe can either do this in one function, or write a range of functions\r\n\r\nas to where to do these in a fit/_fit model, in the first instance I think checking can always be done in the base class fit, but data structure transform is, in the first instance, done in the estimator _fit. \r\n","closed_by":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1087/timeline","performed_via_github_app":null,"state_reason":"completed"}