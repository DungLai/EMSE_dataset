{"url":"https://api.github.com/repos/sktime/sktime/issues/3491","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3491/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3491/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3491/events","html_url":"https://github.com/sktime/sktime/issues/3491","id":1387984514,"node_id":"I_kwDOCVKAsc5SuvaC","number":3491,"title":"[BUG] DirectReductionForecaster fails with DataFrame input","user":{"login":"aiwalter","id":29627036,"node_id":"MDQ6VXNlcjI5NjI3MDM2","avatar_url":"https://avatars.githubusercontent.com/u/29627036?v=4","gravatar_id":"","url":"https://api.github.com/users/aiwalter","html_url":"https://github.com/aiwalter","followers_url":"https://api.github.com/users/aiwalter/followers","following_url":"https://api.github.com/users/aiwalter/following{/other_user}","gists_url":"https://api.github.com/users/aiwalter/gists{/gist_id}","starred_url":"https://api.github.com/users/aiwalter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aiwalter/subscriptions","organizations_url":"https://api.github.com/users/aiwalter/orgs","repos_url":"https://api.github.com/users/aiwalter/repos","events_url":"https://api.github.com/users/aiwalter/events{/privacy}","received_events_url":"https://api.github.com/users/aiwalter/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-09-27T15:47:50Z","updated_at":"2022-11-22T21:45:01Z","closed_at":"2022-11-22T21:45:00Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Describe the bug**\r\n```python\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\n~\\AppData\\Local\\Temp\\ipykernel_27752\\3920336442.py in <module>\r\n     27     # error_score='raise',\r\n     28 )\r\n---> 29 gscv.fit(y, fh=fh)\r\n     30 y_pred = gscv.predict(fh=fh)\r\n\r\nc:\\Users\\mf-wa\\Desktop\\sktime\\sktime\\sktime\\forecasting\\base\\_base.py in fit(self, y, X, fh)\r\n    301         # we call the ordinary _fit if no looping/vectorization needed\r\n    302         if not vectorization_needed:\r\n--> 303             self._fit(y=y_inner, X=X_inner, fh=fh)\r\n    304         else:\r\n    305             # otherwise we call the vectorized version of fit\r\n\r\nc:\\Users\\mf-wa\\Desktop\\sktime\\sktime\\sktime\\forecasting\\model_selection\\_tune.py in _fit(self, y, X, fh)\r\n    183 \r\n    184         # Run grid-search cross-validation.\r\n--> 185         results = self._run_search(evaluate_candidates)\r\n    186 \r\n    187         results = pd.DataFrame(results)\r\n\r\nc:\\Users\\mf-wa\\Desktop\\sktime\\sktime\\sktime\\forecasting\\model_selection\\_tune.py in _run_search(self, evaluate_candidates)\r\n    477         \"\"\"Search all candidates in param_grid.\"\"\"\r\n    478         self._check_param_grid(self.param_grid)\r\n--> 479         return evaluate_candidates(ParameterGrid(self.param_grid))\r\n    480 \r\n    481     @classmethod\r\n\r\nc:\\Users\\mf-wa\\Desktop\\sktime\\sktime\\sktime\\forecasting\\model_selection\\_tune.py in evaluate_candidates(candidate_params)\r\n    170 \r\n    171             out = parallel(\r\n--> 172                 delayed(_fit_and_score)(params) for params in candidate_params\r\n    173             )\r\n    174 \r\n\r\nc:\\Users\\mf-wa\\miniconda3\\envs\\test37\\lib\\site-packages\\joblib\\parallel.py in __call__(self, iterable)\r\n   1096 \r\n   1097             with self._backend.retrieval_context():\r\n-> 1098                 self.retrieve()\r\n   1099             # Make sure that we get a last message telling us we are done\r\n   1100             elapsed_time = time.time() - self._start_time\r\n\r\nc:\\Users\\mf-wa\\miniconda3\\envs\\test37\\lib\\site-packages\\joblib\\parallel.py in retrieve(self)\r\n    973             try:\r\n    974                 if getattr(self._backend, 'supports_timeout', False):\r\n--> 975                     self._output.extend(job.get(timeout=self.timeout))\r\n    976                 else:\r\n    977                     self._output.extend(job.get())\r\n\r\nc:\\Users\\mf-wa\\miniconda3\\envs\\test37\\lib\\site-packages\\joblib\\_parallel_backends.py in wrap_future_result(future, timeout)\r\n    565         AsyncResults.get from multiprocessing.\"\"\"\r\n    566         try:\r\n--> 567             return future.result(timeout=timeout)\r\n    568         except CfTimeoutError as e:\r\n...\r\n--> 384             raise self._exception\r\n    385         else:\r\n    386             return self._result\r\n\r\nNotImplementedError: <class 'pandas.core.indexes.multi.MultiIndex'> is not supported for input, use one of (<class 'pandas.core.indexes.range.RangeIndex'>, <class 'pandas.core.indexes.period.PeriodIndex'>, <class 'pandas.core.indexes.datetimes.DatetimeIndex'>, <class 'pandas.core.indexes.timedeltas.TimedeltaIndex'>) instead.\r\n```\r\n**To Reproduce**\r\n<!--\r\nAdd a Minimal, Complete, and Verifiable example (for more details, see e.g. https://stackoverflow.com/help/mcve\r\n\r\nIf the code is too long, feel free to put it in a public gist and link it in the issue: https://gist.github.com\r\n-->\r\nFails:\r\n```python\r\nfrom sktime.forecasting.compose._reduce import DirectReductionForecaster\r\nfrom sktime.datatypes import get_examples\r\nfrom sktime.forecasting.model_selection import ExpandingWindowSplitter\r\nfrom sktime.forecasting.model_selection import ForecastingGridSearchCV\r\nfrom sklearn.ensemble import RandomForestRegressor\r\n\r\ny = get_examples(mtype=\"pd_multiindex_hier\")[1]\r\nforecaster = DirectReductionForecaster(\r\n    estimator=RandomForestRegressor(random_state=1),\r\n    window_length=3,\r\n    pooling=\"global\",\r\n)\r\nfh=[1,2,3]\r\ncv = ExpandingWindowSplitter(\r\n    initial_window=3,\r\n    step_length=3,\r\n    start_with_window=True,\r\n    fh=fh,\r\n)\r\ngscv = ForecastingGridSearchCV(\r\n    forecaster=forecaster,\r\n    param_grid={\r\n        \"estimator__n_estimators\": [50, 70]\r\n    },\r\n    cv=cv,\r\n    n_jobs=-1,\r\n    # error_score='raise',\r\n)\r\ngscv.fit(y, fh=fh)\r\ny_pred = gscv.predict(fh=fh)\r\n```\r\nIf I change the fitting line to `gscv.fit(y.values, fh=fh)` it works. However some fits have failed.\r\n\r\n\r\n**Additional context**\r\n<!--\r\nAdd any other context about the problem here.\r\n-->\r\n\r\n**Versions**\r\nmain\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3491/timeline","performed_via_github_app":null,"state_reason":"completed"}