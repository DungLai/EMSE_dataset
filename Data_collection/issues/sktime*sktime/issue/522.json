{"url":"https://api.github.com/repos/sktime/sktime/issues/522","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/522/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/522/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/522/events","html_url":"https://github.com/sktime/sktime/issues/522","id":755695854,"node_id":"MDU6SXNzdWU3NTU2OTU4NTQ=","number":522,"title":"[BUG] AutoARIMA not working with Temporal Cross Validation","user":{"login":"ngupta23","id":33585645,"node_id":"MDQ6VXNlcjMzNTg1NjQ1","avatar_url":"https://avatars.githubusercontent.com/u/33585645?v=4","gravatar_id":"","url":"https://api.github.com/users/ngupta23","html_url":"https://github.com/ngupta23","followers_url":"https://api.github.com/users/ngupta23/followers","following_url":"https://api.github.com/users/ngupta23/following{/other_user}","gists_url":"https://api.github.com/users/ngupta23/gists{/gist_id}","starred_url":"https://api.github.com/users/ngupta23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngupta23/subscriptions","organizations_url":"https://api.github.com/users/ngupta23/orgs","repos_url":"https://api.github.com/users/ngupta23/repos","events_url":"https://api.github.com/users/ngupta23/events{/privacy}","received_events_url":"https://api.github.com/users/ngupta23/received_events","type":"User","site_admin":false},"labels":[{"id":1118163262,"node_id":"MDU6TGFiZWwxMTE4MTYzMjYy","url":"https://api.github.com/repos/sktime/sktime/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-12-02T23:48:15Z","updated_at":"2020-12-14T13:39:04Z","closed_at":"2020-12-14T13:39:04Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nWould like the statistical models like ARIMA, ETS, etc to work with the Temporal Cross Validation Flow. I am not able to reproduce the same results as the standalone ARIMA when using the Temporal Cross Validation Flow.\r\n\r\n**To Reproduce**\r\n\r\n## Setup\r\n\r\n```python\r\ny = load_airline()\r\ny_train, y_test = temporal_train_test_split(y, test_size=36)\r\n\r\nfh = ForecastingHorizon(np.arange(len(y_test)) + 1, is_relative=True)\r\n```\r\n\r\n## Regular AutoARIMA (Baseline for test)\r\n\r\n```python\r\nforecaster = AutoARIMA(sp=12, suppress_warnings=True)\r\nforecaster.fit(y_train)\r\ny_pred = forecaster.predict(fh)\r\nplot_series(y_train, y_test, y_pred, labels=[\"y_train\", \"y_test\", \"y_pred\"]);\r\nsmape_loss(y_test, y_pred)\r\n```\r\n\r\n> 0.04117062370076287\r\n\r\n![image](https://user-images.githubusercontent.com/33585645/100943934-d2830100-34c3-11eb-9449-389a67ebcaf0.png)\r\n\r\n## Using Temporal Cross Validation \r\n\r\n### Version 1:  'sp' in `forecaster_param_grid` (does not work)\r\n\r\n```python\r\nforecaster_param_grid = {'sp': [12]}\r\nforecaster = AutoARIMA(suppress_warnings=True)\r\n\r\ncv = SlidingWindowSplitter(initial_window=int(len(y_train) * 0.90), start_with_window=True)\r\ngscv = ForecastingGridSearchCV(forecaster, cv=cv, param_grid=forecaster_param_grid, verbose=True)\r\n\r\ngscv.fit(y_train)\r\ny_pred = gscv.predict(fh)\r\nplot_series(y_train, y_test, y_pred, labels=[\"y_train\", \"y_test\", \"y_pred\"]);\r\nsmape_loss(y_test, y_pred)\r\n```\r\n\r\n> 0.11346208431398466\r\n\r\n![image](https://user-images.githubusercontent.com/33585645/100944054-0a8a4400-34c4-11eb-93a6-fb40bcbd2012.png)\r\n\r\n### Version 2:  'sp' in `forecaster` (works but defeats the purpose of Grid Search)\r\n\r\n```python\r\nforecaster_param_grid = {}\r\nforecaster = AutoARIMA(sp=12, suppress_warnings=True)\r\n\r\ncv = SlidingWindowSplitter(initial_window=int(len(y_train) * 0.90), start_with_window=True)\r\ngscv = ForecastingGridSearchCV(forecaster, cv=cv, param_grid=forecaster_param_grid, verbose=True)\r\n\r\ngscv.fit(y_train)\r\ny_pred = gscv.predict(fh)\r\nplot_series(y_train, y_test, y_pred, labels=[\"y_train\", \"y_test\", \"y_pred\"]);\r\nsmape_loss(y_test, y_pred)\r\n```\r\n\r\n> 0.04117062370076287  (matches standalone AutoARIMA without GridSearch above)\r\n\r\n![image](https://user-images.githubusercontent.com/33585645/100944698-64d7d480-34c5-11eb-9054-cd16156f5958.png)\r\n\r\n\r\n**Expected behavior**\r\nIt does not look like the best_estimator is taking the seasonality value of 12 when 'sp' is just passed through the `forecaster_param_grid `. It only works if it is set natively in the forecaster initialization. \r\n\r\n**Additional context**\r\nBasically, I would like to create a unified flow around sktime to build and compare multiple models (ARIMA, ETS, Random Forest, SVM, etc), including hyper parameter parameter for the statistical models. I see from the examples folder how this can be done for native scikit models but wanted to recreate the same for the statistical models\r\n\r\n\r\n**Versions**\r\n\r\nSystem:\r\n    python: 3.6.12 |Anaconda, Inc.| (default, Sep  9 2020, 00:29:25) [MSC v.1916 64 bit (AMD64)]\r\nexecutable: C:\\Users\\xxxx\\AppData\\Local\\Continuum\\anaconda3\\envs\\sktime\\python.exe\r\n   machine: Windows-10-10.0.18362-SP0\r\n\r\nPython dependencies:\r\n          pip: 20.3\r\n   setuptools: 49.6.0\r\n      sklearn: 0.23.2\r\n        numpy: 1.19.2\r\n        scipy: 1.5.2\r\n       Cython: 0.29.17\r\n       pandas: 1.1.3\r\n   matplotlib: 3.3.2\r\n       joblib: 0.17.0\r\n        numba: None\r\n     pmdarima: 1.7.1\r\n      tsfresh: None\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"mloning","id":21020482,"node_id":"MDQ6VXNlcjIxMDIwNDgy","avatar_url":"https://avatars.githubusercontent.com/u/21020482?v=4","gravatar_id":"","url":"https://api.github.com/users/mloning","html_url":"https://github.com/mloning","followers_url":"https://api.github.com/users/mloning/followers","following_url":"https://api.github.com/users/mloning/following{/other_user}","gists_url":"https://api.github.com/users/mloning/gists{/gist_id}","starred_url":"https://api.github.com/users/mloning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mloning/subscriptions","organizations_url":"https://api.github.com/users/mloning/orgs","repos_url":"https://api.github.com/users/mloning/repos","events_url":"https://api.github.com/users/mloning/events{/privacy}","received_events_url":"https://api.github.com/users/mloning/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/522/timeline","performed_via_github_app":null,"state_reason":"completed"}