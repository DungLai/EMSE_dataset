{"url":"https://api.github.com/repos/sktime/sktime/issues/878","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/878/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/878/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/878/events","html_url":"https://github.com/sktime/sktime/issues/878","id":895013378,"node_id":"MDU6SXNzdWU4OTUwMTMzNzg=","number":878,"title":"[DOC] Note on approaches to multivariate time series classification","user":{"login":"DanieleBaranzini","id":42250123,"node_id":"MDQ6VXNlcjQyMjUwMTIz","avatar_url":"https://avatars.githubusercontent.com/u/42250123?v=4","gravatar_id":"","url":"https://api.github.com/users/DanieleBaranzini","html_url":"https://github.com/DanieleBaranzini","followers_url":"https://api.github.com/users/DanieleBaranzini/followers","following_url":"https://api.github.com/users/DanieleBaranzini/following{/other_user}","gists_url":"https://api.github.com/users/DanieleBaranzini/gists{/gist_id}","starred_url":"https://api.github.com/users/DanieleBaranzini/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanieleBaranzini/subscriptions","organizations_url":"https://api.github.com/users/DanieleBaranzini/orgs","repos_url":"https://api.github.com/users/DanieleBaranzini/repos","events_url":"https://api.github.com/users/DanieleBaranzini/events{/privacy}","received_events_url":"https://api.github.com/users/DanieleBaranzini/received_events","type":"User","site_admin":false},"labels":[{"id":1203928605,"node_id":"MDU6TGFiZWwxMjAzOTI4NjA1","url":"https://api.github.com/repos/sktime/sktime/labels/documentation","name":"documentation","color":"f4bdf9","default":true,"description":"Documentation & tutorials"},{"id":3102418261,"node_id":"MDU6TGFiZWwzMTAyNDE4MjYx","url":"https://api.github.com/repos/sktime/sktime/labels/module:classification","name":"module:classification","color":"BEB114","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-19T05:42:29Z","updated_at":"2021-10-16T21:55:32Z","closed_at":"2021-10-16T21:55:32Z","author_association":"NONE","active_lock_reason":null,"body":"#### sktime description in \"03_classification_multivariate.ipynb\" reports: \r\n\r\n[... sktime offers three main ways of solving multivariate time series classification problems:\r\n\r\n   1.  Concatenation of time series columns into a single long time series column via ColumnConcatenator and apply a classifier to the concatenated data,\r\n   2. Column-wise ensembling via ColumnEnsembleClassifier in which one classifier is fitted for each time series column and their predictions aggregated,...\r\n...]\r\n\r\n<\r\nan improvement in the documentation is to clarify minimally the implication between learning a single timeseries composite ( a single large time series column) in 1. vs the ensembling approach in 2. (multiple time series columns). The former does fit a model learning a target on a single profile (long timeseries), the latter learns the target on multiple component profiles and then vote them. Apparently, this may account for potentially different results trainabile in classifying with ColumnConcatenator() vs  ColumnEnsembleClassifier(). Simply in 2. there may be cases where some time series columns are not useful predictor features impacting heavily on the final ensembling results ... and in turn this might reflect different results in classifications between ColumnConcatenator() vs  ColumnEnsembleClassifier()\r\n\r\nin essence: classifying a target combining different time series \"features\" (dim_0, dim_1,...,dim_n) is only partilally similar to classifying a target multiple times on different individual time series \"features\".\r\n-->\r\n\r\n#### Suggest a potential alternative/fix\r\n\r\n<\r\nI would add \r\n Important Note: ColumnConcatenator() and ColumnEnsembleClassifier() in 1. and 2. respectively might have certain implications on the learning models proposed. \r\n\r\n                        Please note that classifying a target \"once\" combining different time series \"features\" (dim_0, dim_1,...,dim_n) \r\n                        additively (i.e., the ColumnConcatenator() approach) is only partially similar to learning a target \"multiple times\" \r\n                        on different individual time series \"features\" learned separately by the model and then ensembled (i.e., the\r\n                        ColumnEnsembleClassifier() approach). This might also be reflected in differences in the the genralization                         \r\n                        performaces of such different approaches.\r\n-->\r\n","closed_by":{"login":"TonyBagnall","id":9594042,"node_id":"MDQ6VXNlcjk1OTQwNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9594042?v=4","gravatar_id":"","url":"https://api.github.com/users/TonyBagnall","html_url":"https://github.com/TonyBagnall","followers_url":"https://api.github.com/users/TonyBagnall/followers","following_url":"https://api.github.com/users/TonyBagnall/following{/other_user}","gists_url":"https://api.github.com/users/TonyBagnall/gists{/gist_id}","starred_url":"https://api.github.com/users/TonyBagnall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TonyBagnall/subscriptions","organizations_url":"https://api.github.com/users/TonyBagnall/orgs","repos_url":"https://api.github.com/users/TonyBagnall/repos","events_url":"https://api.github.com/users/TonyBagnall/events{/privacy}","received_events_url":"https://api.github.com/users/TonyBagnall/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/878/timeline","performed_via_github_app":null,"state_reason":"completed"}