{"url":"https://api.github.com/repos/sktime/sktime/issues/1012","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1012/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1012/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1012/events","html_url":"https://github.com/sktime/sktime/issues/1012","id":926579864,"node_id":"MDU6SXNzdWU5MjY1Nzk4NjQ=","number":1012,"title":"Refactoring input checks to be scitype-based rather than argument name based","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-21T20:43:24Z","updated_at":"2021-06-22T10:28:54Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"I've looked throug the `validation.forecasting` module and `validation.series` module and it seems to me there is a lot of duplication. In general, that's an anti-pattern, since boilerplate code and functions with mostly the same arguments are repeated over and over - for example, `check_X`, `check_y` (a special case that allows only series), `check_series`, seems very redundant.\r\n\r\nI suggest to clean the input checks for forecasting up, to two functions:\r\n* `check_equal_index` - the same as `check_equal_time_index`\r\n* `check_as_Series` - basically the same as `check_series` - capital `Series` since that's the name of the scitype\r\n\r\nThis would be formulaically applied: first, each argument of `fit` etc is checked by `check_as_Series` (single-input checks); then, compatibility checks. We read things like `enforce_univariate` from the tags.\r\n\r\n`check_as_Series` has a slightly different input signature, arguments:\r\n* what - an object of any type; should be np.array, pd.DataFrame, or pd.Series\r\n* allowed_mtypes - type or list of type, those that are allowed for `what`\r\n* other stuff from current `check_series`\r\n\r\ninternally, `check_as_Series` will access a dispatch `dict` in the module, say, `check_type_as_Series`, where the element `check_type_as_Series[typename]` does the checks assuming `what` is of type `typename`. This is only for `allowed_mtypes`, otherwise an error is returned. The \"other stuff\" arguments, like univariate etc, are passed on.\r\n\r\nWhat do you think? @aiwalter, @mloning?\r\n\r\nThis should make adding type checks in new modules far easier, since they are more formulaic.\r\nNo more `check_X`, `check_y`, `check_Y`, `check_Z`, `check_series` etc that is basically all the same.\r\n\r\nTSC would work similarly - think `check_type_as_Panel`.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1012/timeline","performed_via_github_app":null,"state_reason":null}