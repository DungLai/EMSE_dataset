{"url":"https://api.github.com/repos/sktime/sktime/issues/2777","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2777/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2777/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2777/events","html_url":"https://github.com/sktime/sktime/issues/2777","id":1267681089,"node_id":"I_kwDOCVKAsc5Lj0dB","number":2777,"title":"[ENH] Benchmarking Discussion","user":{"login":"TNTran92","id":55965636,"node_id":"MDQ6VXNlcjU1OTY1NjM2","avatar_url":"https://avatars.githubusercontent.com/u/55965636?v=4","gravatar_id":"","url":"https://api.github.com/users/TNTran92","html_url":"https://github.com/TNTran92","followers_url":"https://api.github.com/users/TNTran92/followers","following_url":"https://api.github.com/users/TNTran92/following{/other_user}","gists_url":"https://api.github.com/users/TNTran92/gists{/gist_id}","starred_url":"https://api.github.com/users/TNTran92/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TNTran92/subscriptions","organizations_url":"https://api.github.com/users/TNTran92/orgs","repos_url":"https://api.github.com/users/TNTran92/repos","events_url":"https://api.github.com/users/TNTran92/events{/privacy}","received_events_url":"https://api.github.com/users/TNTran92/received_events","type":"User","site_admin":false},"labels":[{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2022-06-10T15:09:11Z","updated_at":"2022-07-11T21:45:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"During the benchmarking meeting today, a number of topics was discussed regarding benchmarking. This issue summarizes/expands these discussions. This documents will be updated after meetings:\r\nThree packages were among the discussions on 06/10/2022:\r\n* Benchmarking-wise, the `Evaluator()` class of `gluonts` requires about 3 adapters to make it work with `sktime`. I do recall exactly but one of the adapter would be for sktime's `metrics`. Need to consider additional options. There are 2 candidates: Kotsu and OpenML\r\n* Kotsu is a high level and light-weight package that performs benchmarking that has no dependency on specific packages. At a high level, it allows users to register a dataset with a predicting task and then apply estimators to that registration. Will need more investigation about application to sktime.\r\n* OpenML performs a similar task to kotsu. An additional plus is that such registration has a share-able ID that can be shared on the cloud, allowing other users to repeat the same task. At the moment, it has limited support for time series dataset. Will also need to investigate its application in `sktime`.\r\n\r\n**To do tasks (High priority):**\r\n- [x] Investigate the implementation of `kotsu` into `sktime` - refer to Issue #2804\r\n- [x] Investigate implementation of `OpenML` into sktime - refer to Issue #2821\r\n- [x] Investigate implementaition of  `Mlflow` into sktime - refer to Issue #2916 \r\n- [x] Compare available benchmarking approaches\r\n- [ ] Converter for Multiindex DF into ListDataset -- refer to Issue #2860 \r\n- [ ] Converter for ListDataset into Multiindex DF\r\n\r\nUpdate: 6/20/2022\r\n- [x] kotsu's experiment: Test all estimators for point forecasting\r\n- [x]  kotsu's experiment: Test all estimators for interval forecasting\r\n- [ ] kotsu's experiment: Investigate Issue #2742\r\n- [ ] Prep M4 dataset for sktime\r\n- [ ] Mock a benchmarking study with vanilla kotsu\r\n- [ ] kotsu's experiment: Draft interface design for kotsu\r\n- [ ] kotsu's experiment: Try with annotations\r\n\r\n\r\n**Good to have (Lower priority):**\r\nN/A\r\n\r\n**Additional thoughts (Not action item)**\r\nIf implemented,  the `gluonts`'s adapter would look similar to statsmodel's adapter.\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2777/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2777/timeline","performed_via_github_app":null,"state_reason":null}