{"url":"https://api.github.com/repos/sktime/sktime/issues/2547","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/2547/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/2547/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/2547/events","html_url":"https://github.com/sktime/sktime/issues/2547","id":1213760213,"node_id":"I_kwDOCVKAsc5IWILV","number":2547,"title":"[ENH] design discussion - auto-resolution of forecaster restrictions: early fh, univariate, index format","user":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"labels":[{"id":1180363817,"node_id":"MDU6TGFiZWwxMTgwMzYzODE3","url":"https://api.github.com/repos/sktime/sktime/labels/API%20design","name":"API design","color":"874db7","default":false,"description":"API design & software architecture"},{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-04-24T20:29:18Z","updated_at":"2022-06-25T18:23:23Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Design discussion, would be interested to hear opinions.\r\n\r\nNow that the base class boilerplate layer is in place, we could do the following\r\n\r\n- [ ] if a forecaster requires `fh` in `fit`, and it is not passed, instead of erroring out, we could simply skip `fit`, and run `fit_predict` (with `fh`) when `predict` is called. This would allow `fh` to be passed late for all forecasters, for some forecasters at an efficiency cost.\r\n- [ ] if a forecaster is univariate but is passed a multivariate series, instead of erroring out, we could simply vectorize across columns, like we do with hierarchy levels now.\r\n- [ ] if `enforce_index_type` is set to a particular index, we coerce or overwrite, instead of erroring out, and convert back after prediction","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/2547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/2547/timeline","performed_via_github_app":null,"state_reason":null}