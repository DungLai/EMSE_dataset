{"url":"https://api.github.com/repos/sktime/sktime/issues/1652","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/1652/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/1652/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/1652/events","html_url":"https://github.com/sktime/sktime/issues/1652","id":1064543734,"node_id":"I_kwDOCVKAsc4_c6X2","number":1652,"title":"[ENH] Numba optimisation for time series","user":{"login":"chrisholder","id":4674372,"node_id":"MDQ6VXNlcjQ2NzQzNzI=","avatar_url":"https://avatars.githubusercontent.com/u/4674372?v=4","gravatar_id":"","url":"https://api.github.com/users/chrisholder","html_url":"https://github.com/chrisholder","followers_url":"https://api.github.com/users/chrisholder/followers","following_url":"https://api.github.com/users/chrisholder/following{/other_user}","gists_url":"https://api.github.com/users/chrisholder/gists{/gist_id}","starred_url":"https://api.github.com/users/chrisholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrisholder/subscriptions","organizations_url":"https://api.github.com/users/chrisholder/orgs","repos_url":"https://api.github.com/users/chrisholder/repos","events_url":"https://api.github.com/users/chrisholder/events{/privacy}","received_events_url":"https://api.github.com/users/chrisholder/received_events","type":"User","site_admin":false},"labels":[{"id":1118163264,"node_id":"MDU6TGFiZWwxMTE4MTYzMjY0","url":"https://api.github.com/repos/sktime/sktime/labels/feature%20request","name":"feature request","color":"38d191","default":false,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"chrisholder","id":4674372,"node_id":"MDQ6VXNlcjQ2NzQzNzI=","avatar_url":"https://avatars.githubusercontent.com/u/4674372?v=4","gravatar_id":"","url":"https://api.github.com/users/chrisholder","html_url":"https://github.com/chrisholder","followers_url":"https://api.github.com/users/chrisholder/followers","following_url":"https://api.github.com/users/chrisholder/following{/other_user}","gists_url":"https://api.github.com/users/chrisholder/gists{/gist_id}","starred_url":"https://api.github.com/users/chrisholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrisholder/subscriptions","organizations_url":"https://api.github.com/users/chrisholder/orgs","repos_url":"https://api.github.com/users/chrisholder/repos","events_url":"https://api.github.com/users/chrisholder/events{/privacy}","received_events_url":"https://api.github.com/users/chrisholder/received_events","type":"User","site_admin":false},"assignees":[{"login":"chrisholder","id":4674372,"node_id":"MDQ6VXNlcjQ2NzQzNzI=","avatar_url":"https://avatars.githubusercontent.com/u/4674372?v=4","gravatar_id":"","url":"https://api.github.com/users/chrisholder","html_url":"https://github.com/chrisholder","followers_url":"https://api.github.com/users/chrisholder/followers","following_url":"https://api.github.com/users/chrisholder/following{/other_user}","gists_url":"https://api.github.com/users/chrisholder/gists{/gist_id}","starred_url":"https://api.github.com/users/chrisholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrisholder/subscriptions","organizations_url":"https://api.github.com/users/chrisholder/orgs","repos_url":"https://api.github.com/users/chrisholder/repos","events_url":"https://api.github.com/users/chrisholder/events{/privacy}","received_events_url":"https://api.github.com/users/chrisholder/received_events","type":"User","site_admin":false},{"login":"MatthewMiddlehurst","id":25731235,"node_id":"MDQ6VXNlcjI1NzMxMjM1","avatar_url":"https://avatars.githubusercontent.com/u/25731235?v=4","gravatar_id":"","url":"https://api.github.com/users/MatthewMiddlehurst","html_url":"https://github.com/MatthewMiddlehurst","followers_url":"https://api.github.com/users/MatthewMiddlehurst/followers","following_url":"https://api.github.com/users/MatthewMiddlehurst/following{/other_user}","gists_url":"https://api.github.com/users/MatthewMiddlehurst/gists{/gist_id}","starred_url":"https://api.github.com/users/MatthewMiddlehurst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MatthewMiddlehurst/subscriptions","organizations_url":"https://api.github.com/users/MatthewMiddlehurst/orgs","repos_url":"https://api.github.com/users/MatthewMiddlehurst/repos","events_url":"https://api.github.com/users/MatthewMiddlehurst/events{/privacy}","received_events_url":"https://api.github.com/users/MatthewMiddlehurst/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-11-26T14:37:21Z","updated_at":"2021-11-27T17:39:26Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nNumba is a library that drastically speeds up python performance while only requiring a simple decorator. Numba does this by looking at the python code and compiling it to c. To achieve this many of the numpy and python standard library functions have been rewritten by the guys at numba so a python function can be mapped to these predefined c functions. While in 99% of cases these rewritten function are incredibly well optimised, as they weren't designed specifically for time series data there are a couple functions that perform very poorly on time series data. \r\n\r\n**Describe the solution you'd like**\r\nTo address this I am proposing a bench mark be run for the relevent numpy functions inside numba for time series data. For the numba functions that are identified as slow we reimplement them in a numba_uils.py file so that everyone can use the optimised version.\r\n\r\n**Additional context**\r\nI am not suggesting we reimplement every function but benchmarking the most common ones that are used to calculate something from a time series. I believe this will save a lot of time debugging in the future trying to work out why a numba implementation is slow (i've already had to do this with the distances finding out np.sum isn't well optimised for time series data) and additionally greatly speed up many numba methods already defined, and will be defined in the future.\r\n\r\nHere is a list of functions i'd like to investigate at first:\r\n\r\nall()\r\nany()\r\nargmax()\r\nargmin()\r\nconj()\r\nconjugate()\r\ncumprod()\r\ncumsum()\r\nmax()\r\nmean()\r\nmin()\r\nnonzero()\r\nprod()\r\nstd()\r\nvar()\r\ndot()\r\nravel() \r\nsort()\r\nsum()\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/1652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/1652/timeline","performed_via_github_app":null,"state_reason":null}