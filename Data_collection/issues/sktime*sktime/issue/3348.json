{"url":"https://api.github.com/repos/sktime/sktime/issues/3348","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3348/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3348/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3348/events","html_url":"https://github.com/sktime/sktime/issues/3348","id":1351949769,"node_id":"I_kwDOCVKAsc5QlR3J","number":3348,"title":"[ENH] Add option to provide sparse output for BaseForecasters.update_predict()","user":{"login":"benHeid","id":9725296,"node_id":"MDQ6VXNlcjk3MjUyOTY=","avatar_url":"https://avatars.githubusercontent.com/u/9725296?v=4","gravatar_id":"","url":"https://api.github.com/users/benHeid","html_url":"https://github.com/benHeid","followers_url":"https://api.github.com/users/benHeid/followers","following_url":"https://api.github.com/users/benHeid/following{/other_user}","gists_url":"https://api.github.com/users/benHeid/gists{/gist_id}","starred_url":"https://api.github.com/users/benHeid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benHeid/subscriptions","organizations_url":"https://api.github.com/users/benHeid/orgs","repos_url":"https://api.github.com/users/benHeid/repos","events_url":"https://api.github.com/users/benHeid/events{/privacy}","received_events_url":"https://api.github.com/users/benHeid/received_events","type":"User","site_admin":false},"labels":[{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-26T08:41:20Z","updated_at":"2022-08-26T08:44:08Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nCurrently, the output of `update_predict` is not memory efficient. Currently, the output is structured as follows: \r\n\r\n|                  | Date0 | Date1 | .. | Date N |\r\n|------------------|-------|-------|----|--------|\r\n| Date1            | Value | NaN   | .. | Nan    |\r\n| Date2            | Value | Value | .. | Nan    |\r\n| ...              | ..    | ..    | .. | ..     |\r\n| Date N + Horizon | NaN   | NaN   | .. | Value  |\r\n\r\nThis needs more memory than\r\n\r\n|         | Horizon1 | Horizon2 | .. | Horizon |\r\n|---------|----------|----------|----|---------|\r\n| Date1   | Value    | Value    | .. | Value   |\r\n| Date2   | Value    | Value    | .. | Value   |\r\n| ...     | ..       | ..       | .. | ..      |\r\n| Date N  | Value    | Value    | .. | Value   |\r\n\r\n\r\nIn  the following experiment: \r\n\r\n``` python\r\nfrom sktime.forecasting.ets import AutoETS\r\nimport numpy as np\r\nimport pandas as pd\r\nets = AutoETS()\r\ndata = pd.DataFrame(np.random.random(400))\r\nets.fit(data[:100])\r\nresult = ets.update_predict(data[100:], cv=ExpandingWindowSplitter(fh=ForecastingHorizon(np.arange(1, 24), freq=\"1h\")))\r\nvalues = []\r\nfor i in range(0, len(result.columns)):\r\n    values.append(result[result.columns[i]][i:i+23].values)\r\nvalues = np.array(values)       \r\ndf = pd.DataFrame(values, index=result.columns)\r\nprint(result.memory_usage().sum()) # Output: 624080\r\nprint(df.memory_usage().sum()) # Output: 69000\r\n```\r\nThe memory usage is significantly higher than necessary.\r\n\r\n**Describe the solution you'd like**\r\nI would like to have an option for the `update_predict` method that allows a more memory efficient way for the result dataframe. A possible option would be to use a structure as the second table above does. \r\n\r\nFor being backward compatible, I would propose to control that behaviour via a parameter. \r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3348/timeline","performed_via_github_app":null,"state_reason":null}