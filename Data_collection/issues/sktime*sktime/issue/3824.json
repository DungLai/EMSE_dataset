{"url":"https://api.github.com/repos/sktime/sktime/issues/3824","repository_url":"https://api.github.com/repos/sktime/sktime","labels_url":"https://api.github.com/repos/sktime/sktime/issues/3824/labels{/name}","comments_url":"https://api.github.com/repos/sktime/sktime/issues/3824/comments","events_url":"https://api.github.com/repos/sktime/sktime/issues/3824/events","html_url":"https://github.com/sktime/sktime/issues/3824","id":1457331171,"node_id":"I_kwDOCVKAsc5W3Rvj","number":3824,"title":"[ENH] Allow `plot_series()` to plot prediction intervals","user":{"login":"chillerobscuro","id":5232872,"node_id":"MDQ6VXNlcjUyMzI4NzI=","avatar_url":"https://avatars.githubusercontent.com/u/5232872?v=4","gravatar_id":"","url":"https://api.github.com/users/chillerobscuro","html_url":"https://github.com/chillerobscuro","followers_url":"https://api.github.com/users/chillerobscuro/followers","following_url":"https://api.github.com/users/chillerobscuro/following{/other_user}","gists_url":"https://api.github.com/users/chillerobscuro/gists{/gist_id}","starred_url":"https://api.github.com/users/chillerobscuro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chillerobscuro/subscriptions","organizations_url":"https://api.github.com/users/chillerobscuro/orgs","repos_url":"https://api.github.com/users/chillerobscuro/repos","events_url":"https://api.github.com/users/chillerobscuro/events{/privacy}","received_events_url":"https://api.github.com/users/chillerobscuro/received_events","type":"User","site_admin":false},"labels":[{"id":3105906374,"node_id":"MDU6TGFiZWwzMTA1OTA2Mzc0","url":"https://api.github.com/repos/sktime/sktime/labels/module:forecasting","name":"module:forecasting","color":"35FCCE","default":false,"description":""},{"id":3796180314,"node_id":"LA_kwDOCVKAsc7iRR1a","url":"https://api.github.com/repos/sktime/sktime/labels/enhancement","name":"enhancement","color":"fef2c0","default":true,"description":"Adding new functionality"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-11-21T05:26:23Z","updated_at":"2022-12-02T18:13:36Z","closed_at":"2022-12-02T18:13:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nMaking interval forecasts is a key feature of `sktime`, seems like there should be a simple way to plot the intervals. \r\n\r\n**Describe the solution you'd like**\r\nPass the results of `forecaster.predict_interval()` or `forecaster.predict_quantiles()`  directly to `utils.plotting.plot_series()`. This would entail adding an argument like `intervals_to_plot`. \r\n\r\n**Describe alternatives you've considered**\r\nPlot by hand, like in the [forecasting example](https://www.sktime.org/en/stable/examples/01_forecasting.html). The code is as follows:\r\n```\r\nfrom sktime.utils import plotting\r\ny_pred = forecaster.predict()\r\ny_pred_ints = forecaster.predict_interval(coverage=.95)\r\n\r\nfig, ax = plotting.plot_series(y, y_pred, labels=[\"y\", \"y_pred\"])\r\nax.fill_between(\r\n    ax.get_lines()[-1].get_xdata(),\r\n    y_pred_ints[\"Coverage\"][coverage][\"lower\"],\r\n    y_pred_ints[\"Coverage\"][coverage][\"upper\"],\r\n    alpha=0.2,\r\n    color=ax.get_lines()[-1].get_c(),\r\n    label=f\"{coverage}% prediction intervals\",\r\n)\r\nax.legend();\r\n```\r\nMy working solution involves adding the above code to a new function `plot_interval()` in `sktime/utils/plotting.py`, which is called on `ax` if `plot_series()` receives a pandas DataFrame including either `\"Coverage\"` or `\"Quantile\"` nested keys.\r\n\r\n**Questions**\r\n - How to check if the interval is included and find its value in the predicted_interval df? It could be nested under `y_pred_ints[\"Coverage\"]` but if the df was created by `forecaster.predict_quantiles()` it may be under `y_pred_ints[\"Quantiles\"]`. Are there any other schemas that need to be checked for/accepted? We could allow an additional descriptive argument (ie `coverage=.95`) to `plot_series()` but I think it's cleaner to only add one new argument to that function, and raise an error if we can't infer the value from what is provided.\r\n - How to handle the case where multiple series and/or more than one pair of upper/lower intervals are passed?\r\n","closed_by":{"login":"fkiraly","id":7985502,"node_id":"MDQ6VXNlcjc5ODU1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7985502?v=4","gravatar_id":"","url":"https://api.github.com/users/fkiraly","html_url":"https://github.com/fkiraly","followers_url":"https://api.github.com/users/fkiraly/followers","following_url":"https://api.github.com/users/fkiraly/following{/other_user}","gists_url":"https://api.github.com/users/fkiraly/gists{/gist_id}","starred_url":"https://api.github.com/users/fkiraly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkiraly/subscriptions","organizations_url":"https://api.github.com/users/fkiraly/orgs","repos_url":"https://api.github.com/users/fkiraly/repos","events_url":"https://api.github.com/users/fkiraly/events{/privacy}","received_events_url":"https://api.github.com/users/fkiraly/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sktime/sktime/issues/3824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sktime/sktime/issues/3824/timeline","performed_via_github_app":null,"state_reason":"completed"}