{"url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/24","repository_url":"https://api.github.com/repos/kpe/bert-for-tf2","labels_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/24/labels{/name}","comments_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/24/comments","events_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/24/events","html_url":"https://github.com/kpe/bert-for-tf2/issues/24","id":529855756,"node_id":"MDU6SXNzdWU1Mjk4NTU3NTY=","number":24,"title":"Exception with TFLiteConverter convert method call","user":{"login":"bill3code","id":17447547,"node_id":"MDQ6VXNlcjE3NDQ3NTQ3","avatar_url":"https://avatars.githubusercontent.com/u/17447547?v=4","gravatar_id":"","url":"https://api.github.com/users/bill3code","html_url":"https://github.com/bill3code","followers_url":"https://api.github.com/users/bill3code/followers","following_url":"https://api.github.com/users/bill3code/following{/other_user}","gists_url":"https://api.github.com/users/bill3code/gists{/gist_id}","starred_url":"https://api.github.com/users/bill3code/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bill3code/subscriptions","organizations_url":"https://api.github.com/users/bill3code/orgs","repos_url":"https://api.github.com/users/bill3code/repos","events_url":"https://api.github.com/users/bill3code/events{/privacy}","received_events_url":"https://api.github.com/users/bill3code/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-11-28T11:27:54Z","updated_at":"2019-12-15T00:10:42Z","closed_at":"2019-12-15T00:10:42Z","author_association":"NONE","active_lock_reason":null,"body":"``` Python\r\nfrom tensorflow.keras.models import Model\r\nfrom tensorflow.keras.layers import Input\r\nfrom bert import BertModelLayer, params_from_pretrained_ckpt, load_bert_weights\r\nfrom tensorflow.compat.v2.lite import TFLiteConverter\r\n\r\nbert_params = params_from_pretrained_ckpt(folder)\r\nl_bert = BertModelLayer.from_params(bert_params, name=\"bert\")\r\n\r\nmax_seq_len = 512\r\nl_input_ids = Input(shape=(max_seq_len,), dtype='int32')\r\nl_token_type_ids = Input(shape=(max_seq_len,), dtype='int32')\r\n\r\noutput = l_bert([l_input_ids, l_token_type_ids])\r\n\r\nmodel = Model(inputs=[l_input_ids, l_token_type_ids], outputs=output)\r\nmodel.build(input_shape=[(None, max_seq_len), (None, max_seq_len)])\r\n\r\nload_bert_weights(l_bert, checkpoint_path)\r\n\r\nconverter = TFLiteConverter.from_keras_model(model)\r\ntflite_model = converter.convert()\r\n```\r\n<pre>\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/importer.py in _import_graph_def_internal(graph_def, input_map, return_elements, validate_colocation_constraints, name, op_dict, producer_op_list)\r\n    500         results = c_api.TF_GraphImportGraphDefWithResults(\r\n--> 501             graph._c_graph, serialized, options)  # pylint: disable=protected-access\r\n    502         results = c_api_util.ScopedTFImportGraphDefResults(results)\r\n\r\nInvalidArgumentError: Input 0 of node model_6/bert/embeddings/word_embeddings/embedding_lookup was passed float from model_6/bert/embeddings/word_embeddings/embedding_lookup/Read/ReadVariableOp/resource:0 incompatible with expected resource.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-31-330d0f1c4d51> in <module>\r\n     21 \r\n     22 converter = TFLiteConverter.from_keras_model(model)\r\n---> 23 tflite_model = converter.convert()\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/lite/python/lite.py in convert(self)\r\n    403 \r\n    404     frozen_func = _convert_to_constants.convert_variables_to_constants_v2(\r\n--> 405         self._funcs[0], lower_control_flow=False)\r\n    406     input_tensors = [\r\n    407         tensor for tensor in frozen_func.inputs\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/convert_to_constants.py in convert_variables_to_constants_v2(func, lower_control_flow)\r\n    573   output_graph_def.versions.CopyFrom(graph_def.versions)\r\n    574   return _construct_concrete_function(func, output_graph_def,\r\n--> 575                                       converted_input_indices)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/convert_to_constants.py in _construct_concrete_function(func, output_graph_def, converted_input_indices)\r\n    369   new_func = wrap_function.function_from_graph_def(output_graph_def,\r\n    370                                                    new_input_names,\r\n--> 371                                                    new_output_names)\r\n    372 \r\n    373   # Manually propagate shape for input tensors where the shape is not correctly\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/wrap_function.py in function_from_graph_def(graph_def, inputs, outputs)\r\n    618     importer.import_graph_def(graph_def, name=\"\")\r\n    619 \r\n--> 620   wrapped_import = wrap_function(_imports_graph_def, [])\r\n    621   import_graph = wrapped_import.graph\r\n    622   return wrapped_import.prune(\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/wrap_function.py in wrap_function(fn, signature, name)\r\n    596           signature=signature,\r\n    597           add_control_dependencies=False,\r\n--> 598           collections={}),\r\n    599       variable_holder=holder,\r\n    600       signature=signature)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/func_graph.py in func_graph_from_py_func(name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes)\r\n    913                                           converted_func)\r\n    914 \r\n--> 915       func_outputs = python_func(*func_args, **func_kwargs)\r\n    916 \r\n    917       # invariant: `func_outputs` contains only Tensors, CompositeTensors,\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/wrap_function.py in __call__(self, *args, **kwargs)\r\n     81 \r\n     82   def __call__(self, *args, **kwargs):\r\n---> 83     return self.call_with_variable_creator_scope(self._fn)(*args, **kwargs)\r\n     84 \r\n     85   def call_with_variable_creator_scope(self, fn):\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/wrap_function.py in wrapped(*args, **kwargs)\r\n     87     def wrapped(*args, **kwargs):\r\n     88       with variable_scope.variable_creator_scope(self.variable_creator_scope):\r\n---> 89         return fn(*args, **kwargs)\r\n     90 \r\n     91     return wrapped\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/wrap_function.py in _imports_graph_def()\r\n    616 \r\n    617   def _imports_graph_def():\r\n--> 618     importer.import_graph_def(graph_def, name=\"\")\r\n    619 \r\n    620   wrapped_import = wrap_function(_imports_graph_def, [])\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/util/deprecation.py in new_func(*args, **kwargs)\r\n    505                 'in a future version' if date is None else ('after %s' % date),\r\n    506                 instructions)\r\n--> 507       return func(*args, **kwargs)\r\n    508 \r\n    509     doc = _add_deprecated_arg_notice_to_docstring(\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/importer.py in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)\r\n    403       name=name,\r\n    404       op_dict=op_dict,\r\n--> 405       producer_op_list=producer_op_list)\r\n    406 \r\n    407 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/importer.py in _import_graph_def_internal(graph_def, input_map, return_elements, validate_colocation_constraints, name, op_dict, producer_op_list)\r\n    503       except errors.InvalidArgumentError as e:\r\n    504         # Convert to ValueError for backwards compatibility.\r\n--> 505         raise ValueError(str(e))\r\n    506 \r\n    507     # Create _DefinedFunctions for any imported functions.\r\n\r\nValueError: Input 0 of node model_6/bert/embeddings/word_embeddings/embedding_lookup was passed float from model_6/bert/embeddings/word_embeddings/embedding_lookup/Read/ReadVariableOp/resource:0 incompatible with expected resource.\r\n</pre>","closed_by":{"login":"kpe","id":2535923,"node_id":"MDQ6VXNlcjI1MzU5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/2535923?v=4","gravatar_id":"","url":"https://api.github.com/users/kpe","html_url":"https://github.com/kpe","followers_url":"https://api.github.com/users/kpe/followers","following_url":"https://api.github.com/users/kpe/following{/other_user}","gists_url":"https://api.github.com/users/kpe/gists{/gist_id}","starred_url":"https://api.github.com/users/kpe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kpe/subscriptions","organizations_url":"https://api.github.com/users/kpe/orgs","repos_url":"https://api.github.com/users/kpe/repos","events_url":"https://api.github.com/users/kpe/events{/privacy}","received_events_url":"https://api.github.com/users/kpe/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/24/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/24/timeline","performed_via_github_app":null,"state_reason":"completed"}