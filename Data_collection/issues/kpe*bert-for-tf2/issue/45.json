{"url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/45","repository_url":"https://api.github.com/repos/kpe/bert-for-tf2","labels_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/45/labels{/name}","comments_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/45/comments","events_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/45/events","html_url":"https://github.com/kpe/bert-for-tf2/issues/45","id":551301332,"node_id":"MDU6SXNzdWU1NTEzMDEzMzI=","number":45,"title":"Serving through API","user":{"login":"sarnikowski","id":52626521,"node_id":"MDQ6VXNlcjUyNjI2NTIx","avatar_url":"https://avatars.githubusercontent.com/u/52626521?v=4","gravatar_id":"","url":"https://api.github.com/users/sarnikowski","html_url":"https://github.com/sarnikowski","followers_url":"https://api.github.com/users/sarnikowski/followers","following_url":"https://api.github.com/users/sarnikowski/following{/other_user}","gists_url":"https://api.github.com/users/sarnikowski/gists{/gist_id}","starred_url":"https://api.github.com/users/sarnikowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sarnikowski/subscriptions","organizations_url":"https://api.github.com/users/sarnikowski/orgs","repos_url":"https://api.github.com/users/sarnikowski/repos","events_url":"https://api.github.com/users/sarnikowski/events{/privacy}","received_events_url":"https://api.github.com/users/sarnikowski/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-17T09:27:27Z","updated_at":"2020-01-17T09:27:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello @kpe \r\n\r\nI have a repo showcasing how to serve vanilla BERT multiclass predictions through a dockerized flask API. The repo contains a complete example all the way from training, to serving through the API. I recently bumped the project to Tensorflow 2.0 using [kpe/bert-for-tf2](https://github.com/kpe/bert-for-tf2). I thought it might be a useful ressource. Feel free to check it out: [sarnikowski/bert_in_a_flask](https://github.com/sarnikowski/bert_in_a_flask). Thanks.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/45/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/45/timeline","performed_via_github_app":null,"state_reason":null}