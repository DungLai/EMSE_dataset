{"url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/5","repository_url":"https://api.github.com/repos/kpe/bert-for-tf2","labels_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/5/labels{/name}","comments_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/5/comments","events_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/5/events","html_url":"https://github.com/kpe/bert-for-tf2/issues/5","id":472089457,"node_id":"MDU6SXNzdWU0NzIwODk0NTc=","number":5,"title":"get error when predict","user":{"login":"breadbread1984","id":1930282,"node_id":"MDQ6VXNlcjE5MzAyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1930282?v=4","gravatar_id":"","url":"https://api.github.com/users/breadbread1984","html_url":"https://github.com/breadbread1984","followers_url":"https://api.github.com/users/breadbread1984/followers","following_url":"https://api.github.com/users/breadbread1984/following{/other_user}","gists_url":"https://api.github.com/users/breadbread1984/gists{/gist_id}","starred_url":"https://api.github.com/users/breadbread1984/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breadbread1984/subscriptions","organizations_url":"https://api.github.com/users/breadbread1984/orgs","repos_url":"https://api.github.com/users/breadbread1984/repos","events_url":"https://api.github.com/users/breadbread1984/events{/privacy}","received_events_url":"https://api.github.com/users/breadbread1984/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-07-24T05:43:24Z","updated_at":"2019-07-25T00:53:06Z","closed_at":"2019-07-25T00:53:06Z","author_association":"NONE","active_lock_reason":null,"body":"I load pretrained chinese model and predict semantic similarity. then I get the following error message\r\n\r\n>  File \"Predictor.py\", line 154, in _classify\r\n    outputs = self.bert(inputs, mask, training);\r\n  File \"/home/xieyi/.local/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 712, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/home/xieyi/.local/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 753, in call\r\n    return self._run_internal_graph(inputs, training=training, mask=mask)\r\n  File \"/home/xieyi/.local/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 905, in _run_internal_graph\r\n    assert str(id(x)) in tensor_dict, 'Could not compute output ' + str(x)\r\nAssertionError: Could not compute output Tensor(\"bert/Identity:0\", shape=(None, 128, 768), dtype=float32)\r\n\r\nI am using tensorflow-beta1. I load pretrained bert with the following code.\r\n\r\n```python\r\n#!/usr/bin/python3\r\n\r\nimport os;\r\nimport tensorflow as tf;\r\nfrom bert import BertModelLayer;\r\nfrom bert.loader import StockBertConfig, load_stock_weights;\r\nfrom bert.tokenization import FullTokenizer;\r\n\r\ndef flatten_layers(root_layer):\r\n    if isinstance(root_layer, tf.keras.layers.Layer):\r\n        yield root_layer\r\n    for layer in root_layer._layers:\r\n        for sub_layer in flatten_layers(layer):\r\n            yield sub_layer\r\n\r\ndef freeze_bert_layers(l_bert):\r\n    \"\"\"\r\n    Freezes all but LayerNorm and adapter layers - see arXiv:1902.00751.\r\n    \"\"\"\r\n    for layer in flatten_layers(l_bert):\r\n        if layer.name in [\"LayerNorm\", \"adapter-down\", \"adapter-up\"]:\r\n            layer.trainable = True\r\n        elif len(layer._layers) == 0:\r\n            layer.trainable = False\r\n        l_bert.embeddings_layer.trainable = False\r\n\r\ndef BERT(max_seq_len = 128, bert_model_dir = 'models/chinese_L-12_H-768_A-12', do_lower_case = False):\r\n\r\n    # load bert parameters\r\n    with tf.io.gfile.GFile(os.path.join(bert_model_dir, \"bert_config.json\"), \"r\") as reader:\r\n        stock_params = StockBertConfig.from_json_string(reader.read());\r\n        bert_params = stock_params.to_bert_model_layer_params();\r\n    # create bert structure according to the parameters\r\n    bert = BertModelLayer.from_params(bert_params, name = \"bert\");\r\n    # inputs\r\n    input_token_ids = tf.keras.Input((max_seq_len,), dtype = tf.int32, name = 'input_ids');\r\n    input_segment_ids = tf.keras.Input((max_seq_len,), dtype = tf.int32, name = 'token_type_ids');\r\n    # outputs\r\n    output = bert([input_token_ids, input_segment_ids]);\r\n    # create model containing only bert layer\r\n    model = tf.keras.Model(inputs = [input_token_ids, input_segment_ids], outputs = output);\r\n    model.build(input_shape = [(None, max_seq_len), (None, max_seq_len)]);\r\n    # freeze_bert_layers\r\n    freeze_bert_layers(bert);\r\n    # load bert layer weights\r\n    load_stock_weights(bert, os.path.join(bert_model_dir, \"bert_model.ckpt\"));\r\n    # create tokenizer, chinese character needs no lower case.\r\n    tokenizer = FullTokenizer(vocab_file = os.path.join(bert_model_dir, \"vocab.txt\"), do_lower_case = do_lower_case);\r\n    return model, tokenizer;\r\n```","closed_by":{"login":"breadbread1984","id":1930282,"node_id":"MDQ6VXNlcjE5MzAyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1930282?v=4","gravatar_id":"","url":"https://api.github.com/users/breadbread1984","html_url":"https://github.com/breadbread1984","followers_url":"https://api.github.com/users/breadbread1984/followers","following_url":"https://api.github.com/users/breadbread1984/following{/other_user}","gists_url":"https://api.github.com/users/breadbread1984/gists{/gist_id}","starred_url":"https://api.github.com/users/breadbread1984/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breadbread1984/subscriptions","organizations_url":"https://api.github.com/users/breadbread1984/orgs","repos_url":"https://api.github.com/users/breadbread1984/repos","events_url":"https://api.github.com/users/breadbread1984/events{/privacy}","received_events_url":"https://api.github.com/users/breadbread1984/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/5/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kpe/bert-for-tf2/issues/5/timeline","performed_via_github_app":null,"state_reason":"completed"}