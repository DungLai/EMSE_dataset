[{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/574111681","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/203#issuecomment-574111681","issue_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/203","id":574111681,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDExMTY4MQ==","user":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false},"created_at":"2020-01-14T10:37:20Z","updated_at":"2020-01-14T10:37:20Z","author_association":"COLLABORATOR","body":"The first two ways are basically identical, since the MD17 dataset makes use of AtomsData.\r\nSo there are two instances where a cutoff can be given:\r\n1. via an environment provider when generating a dataset. Here the environment provider is used to collect the neighbors of each atom. If a cutoff is given, all neighbors beyond the cutoff are neglected. This means, the network never sees these neighbors and no interactions are computed. This can save quite some computations for large/periodic systems.\r\n2. via the `cutoff` passed to the model. In this case, after all pairwise interactions indicated in the neighbor list generated via the environment provider are computed, a cutoff function is applied to these interactions, forcing them to decay to zero at the cutoff. \r\n\r\nIn general, one wants to introduce a cutoff to save computational time. The idea is, that interactions with atoms past a certain distance from the central atom become quite small and can be neglected. This can also lead to better generalization and by modeling local atomic environments the potentials become transferable.  In our setup, the selection would be done via 1. However, if neighbors are purely ignored past a certain point, there will be discontinuities in the potential energy surface. Because of this, the second type of cutoff is introduced, which smoothly decays the interactions to 0.\r\n\r\nTo make things more complicated, there are two environment providers in SchNetPack, the `SimpleEnvironmentProvider` (default) and the `AseEnvironmentProvider`. The former just generates environments containing all neighbors without regards to cutoff, the second uses special algorithms to generate the neighbor lists. How well they perform depends on the size of the molecule. For small molecules, the simple provider works faster, as it uses little overhead to construct the environment. For large molecules, the cost incurred by using the more elaborate ASE provider is offset by not having to evaluate all interactions, making this the better choice.\r\n\r\nIn your case, it could be that the systems are to small to profit from using the ASE provider with cutoff. However, I am not sure what the reasons for the improvement in convergence are. The only thing I could imagine is, that no cutoff was set when building the model. Then the ASE provider would also serve as cutoff for the interactions, making the model more local and improving convergence. Unfortunately, using only the provider cutoff, the model would suffer from discontinuities.\r\n\r\nIn general, for small molecules use the simple provider and the ASE for larger ones (never tested this, but I would guess starting around 40 to 50 atoms) and periodic boundary conditions. A cutoff for the interactions should be used in all cases. And never set the provider cutoff smaller than the model cutoff. \r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/574111681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/574413457","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/203#issuecomment-574413457","issue_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/203","id":574413457,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQxMzQ1Nw==","user":{"login":"neojie","id":44279474,"node_id":"MDQ6VXNlcjQ0Mjc5NDc0","avatar_url":"https://avatars.githubusercontent.com/u/44279474?v=4","gravatar_id":"","url":"https://api.github.com/users/neojie","html_url":"https://github.com/neojie","followers_url":"https://api.github.com/users/neojie/followers","following_url":"https://api.github.com/users/neojie/following{/other_user}","gists_url":"https://api.github.com/users/neojie/gists{/gist_id}","starred_url":"https://api.github.com/users/neojie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neojie/subscriptions","organizations_url":"https://api.github.com/users/neojie/orgs","repos_url":"https://api.github.com/users/neojie/repos","events_url":"https://api.github.com/users/neojie/events{/privacy}","received_events_url":"https://api.github.com/users/neojie/received_events","type":"User","site_admin":false},"created_at":"2020-01-14T22:58:14Z","updated_at":"2020-01-14T22:58:14Z","author_association":"NONE","body":"Thank you for your prompt reply.\r\n1) setting cutoff via an environment provider when generating a dataset. Is there any way of saving the calculated information in the database? For example, \r\n```\r\nfrom ase.build import molecule\r\nfrom schnetpack import AtomsData\r\nfrom schnetpack.environment import AseEnvironmentProvider\r\nimport numpy as np\r\nfrom ase.calculators.emt import EMT\r\nwater = molecule('H2O')\r\nwater.set_calculator(EMT())\r\natoms = [water]\r\nproperty_list = []\r\nfor at in atoms:\r\n\r\n    energy = np.array([at.get_potential_energy()], dtype=np.float32)\r\n    forces = np.array([at.get_forces()], dtype=np.float32)\r\n    property_list.append(\r\n        {'energy': energy,'forces':forces}\r\n    )\r\n\r\ndb =AtomsData('water.db', available_properties=['energy','forces'],environment_provider=AseEnvironmentProvider(1))\r\ndb.add_systems(atoms,property_list)\r\n\r\ndb[0]['_neighbors']\r\n```\r\nWe would get a neighbor list as \r\n```\r\ntensor([[ 1,  2],\r\n        [ 0, -1],\r\n        [ 0, -1]])\r\n```\r\nHowever, we when load the data by\r\n```\r\nfrom schnetpack.datasets import MD17\r\ndb_loaded = MD17('water.db')\r\ndb_loaded[0]['_neighbors']\r\n```\r\nwe get the neighbors list as \r\n```\r\ntensor([[1, 2],\r\n        [0, 2],\r\n        [0, 1]])\r\n```\r\nI understand that this is because we the default environment is SimpleEnvironmentProvider. \r\nIn order to recover the data we have to set \r\n```\r\ndb_loaded = MD17('water.db',environment_provider=AseEnvironmentProvider(1))\r\n```\r\nBut in this case, we actually re-calculate the neighbors using the AseEnvironmentProvider. Just wonder if there is anyway by which we can store the  neighbors list info in the dataset and when we load it, we can directly get all the stored info rather than calculate it again.\r\n\r\n2) My system is actually pretty big containing 160 atoms. If I have set cutoff when loading the data by `db_loaded = MD17('water.db',environment_provider=AseEnvironmentProvider(1))\r\n`, according to your answer, we do not have to set cutoff when building the representation, because the network never sees these neighbors beyond the cutoff anyway. Right?\r\n\r\nThank you.\r\nJie","reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/574413457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"neojie","id":44279474,"node_id":"MDQ6VXNlcjQ0Mjc5NDc0","avatar_url":"https://avatars.githubusercontent.com/u/44279474?v=4","gravatar_id":"","url":"https://api.github.com/users/neojie","html_url":"https://github.com/neojie","followers_url":"https://api.github.com/users/neojie/followers","following_url":"https://api.github.com/users/neojie/following{/other_user}","gists_url":"https://api.github.com/users/neojie/gists{/gist_id}","starred_url":"https://api.github.com/users/neojie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neojie/subscriptions","organizations_url":"https://api.github.com/users/neojie/orgs","repos_url":"https://api.github.com/users/neojie/repos","events_url":"https://api.github.com/users/neojie/events{/privacy}","received_events_url":"https://api.github.com/users/neojie/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/574728977","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/203#issuecomment-574728977","issue_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/203","id":574728977,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDcyODk3Nw==","user":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false},"created_at":"2020-01-15T16:05:43Z","updated_at":"2020-01-15T16:05:43Z","author_association":"COLLABORATOR","body":"1. Currently, there is no way to store the computed neighbor lists in SchNetPack. We found that this quickly uses a lot of disk space and due to the IO overhead it is usually actually faster to compute the neighbors on the fly. But you could always extend your database to store the neighbor lists as additional properties.\r\n2. I actually recommend to set the representation cutoff all the time, since otherwise it would lead to discontinuities in the potential energy surface. It is true, that the central atom never sees the atoms beyond the cutoff, but if an atom e.g. leaves the cutoff during simulation, it is suddenly gone. This leads to jumps in the predicted properties. The representation cutoff makes it, so that the atoms fade in/out in a continuous manner. SchNetPack should use a CosineCutoff by default. \r\n\r\nPS.: I do not know if this is a practical example and Angstrom, but I would recommend a cutoff larger than 1 for water.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/574728977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/574731013","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/203#issuecomment-574731013","issue_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/203","id":574731013,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDczMTAxMw==","user":{"login":"neojie","id":44279474,"node_id":"MDQ6VXNlcjQ0Mjc5NDc0","avatar_url":"https://avatars.githubusercontent.com/u/44279474?v=4","gravatar_id":"","url":"https://api.github.com/users/neojie","html_url":"https://github.com/neojie","followers_url":"https://api.github.com/users/neojie/followers","following_url":"https://api.github.com/users/neojie/following{/other_user}","gists_url":"https://api.github.com/users/neojie/gists{/gist_id}","starred_url":"https://api.github.com/users/neojie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neojie/subscriptions","organizations_url":"https://api.github.com/users/neojie/orgs","repos_url":"https://api.github.com/users/neojie/repos","events_url":"https://api.github.com/users/neojie/events{/privacy}","received_events_url":"https://api.github.com/users/neojie/received_events","type":"User","site_admin":false},"created_at":"2020-01-15T16:10:05Z","updated_at":"2020-01-15T16:10:05Z","author_association":"NONE","body":"Thank you.  Cutoff of 1 A is just a practical example. ","reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/574731013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"neojie","id":44279474,"node_id":"MDQ6VXNlcjQ0Mjc5NDc0","avatar_url":"https://avatars.githubusercontent.com/u/44279474?v=4","gravatar_id":"","url":"https://api.github.com/users/neojie","html_url":"https://github.com/neojie","followers_url":"https://api.github.com/users/neojie/followers","following_url":"https://api.github.com/users/neojie/following{/other_user}","gists_url":"https://api.github.com/users/neojie/gists{/gist_id}","starred_url":"https://api.github.com/users/neojie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neojie/subscriptions","organizations_url":"https://api.github.com/users/neojie/orgs","repos_url":"https://api.github.com/users/neojie/repos","events_url":"https://api.github.com/users/neojie/events{/privacy}","received_events_url":"https://api.github.com/users/neojie/received_events","type":"User","site_admin":false}},{"id":2951396174,"node_id":"MDExOkNsb3NlZEV2ZW50Mjk1MTM5NjE3NA==","url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/events/2951396174","actor":{"login":"neojie","id":44279474,"node_id":"MDQ6VXNlcjQ0Mjc5NDc0","avatar_url":"https://avatars.githubusercontent.com/u/44279474?v=4","gravatar_id":"","url":"https://api.github.com/users/neojie","html_url":"https://github.com/neojie","followers_url":"https://api.github.com/users/neojie/followers","following_url":"https://api.github.com/users/neojie/following{/other_user}","gists_url":"https://api.github.com/users/neojie/gists{/gist_id}","starred_url":"https://api.github.com/users/neojie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neojie/subscriptions","organizations_url":"https://api.github.com/users/neojie/orgs","repos_url":"https://api.github.com/users/neojie/repos","events_url":"https://api.github.com/users/neojie/events{/privacy}","received_events_url":"https://api.github.com/users/neojie/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-01-15T16:10:10Z","state_reason":null,"performed_via_github_app":null},{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/594181382","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/203#issuecomment-594181382","issue_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/203","id":594181382,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDE4MTM4Mg==","user":{"login":"simonbatzner","id":24858197,"node_id":"MDQ6VXNlcjI0ODU4MTk3","avatar_url":"https://avatars.githubusercontent.com/u/24858197?v=4","gravatar_id":"","url":"https://api.github.com/users/simonbatzner","html_url":"https://github.com/simonbatzner","followers_url":"https://api.github.com/users/simonbatzner/followers","following_url":"https://api.github.com/users/simonbatzner/following{/other_user}","gists_url":"https://api.github.com/users/simonbatzner/gists{/gist_id}","starred_url":"https://api.github.com/users/simonbatzner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonbatzner/subscriptions","organizations_url":"https://api.github.com/users/simonbatzner/orgs","repos_url":"https://api.github.com/users/simonbatzner/repos","events_url":"https://api.github.com/users/simonbatzner/events{/privacy}","received_events_url":"https://api.github.com/users/simonbatzner/received_events","type":"User","site_admin":false},"created_at":"2020-03-03T21:35:07Z","updated_at":"2020-03-03T21:35:07Z","author_association":"NONE","body":"So why would I ever set the environment cutoff larger than the representation cutoff? If its only purpose is to compute the neighborlists that a convolution runs over, but then the representation cutoff zeros out any features beyond it, then how would the atoms beyond that contribute? \r\n\r\nAnother, related question to that would be: even if both the data cutoff and the representation cutoff are say 5A, as I have multiple interaction blocks, this would multiply right? So say both my cutoffs are 5A, and I have 3 interaction blocks, then information in the graph would travel over 15A in total because the atom features get updated? \r\n","reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/594181382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"simonbatzner","id":24858197,"node_id":"MDQ6VXNlcjI0ODU4MTk3","avatar_url":"https://avatars.githubusercontent.com/u/24858197?v=4","gravatar_id":"","url":"https://api.github.com/users/simonbatzner","html_url":"https://github.com/simonbatzner","followers_url":"https://api.github.com/users/simonbatzner/followers","following_url":"https://api.github.com/users/simonbatzner/following{/other_user}","gists_url":"https://api.github.com/users/simonbatzner/gists{/gist_id}","starred_url":"https://api.github.com/users/simonbatzner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonbatzner/subscriptions","organizations_url":"https://api.github.com/users/simonbatzner/orgs","repos_url":"https://api.github.com/users/simonbatzner/repos","events_url":"https://api.github.com/users/simonbatzner/events{/privacy}","received_events_url":"https://api.github.com/users/simonbatzner/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/594424886","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/203#issuecomment-594424886","issue_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/203","id":594424886,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDQyNDg4Ng==","user":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false},"created_at":"2020-03-04T09:52:10Z","updated_at":"2020-03-04T09:52:10Z","author_association":"COLLABORATOR","body":"To your first question: For training purposes it makes no sense, but it can be useful in molecular dynamics simulations. If the cutoff in the environment is e.g. set 1 A larger than in the representation, then the neighborlist only has to be recomputed if the atoms move out of this buffer zone. This can lead to some speedups, especially for materials.\r\n\r\nTo the second question: The `n_interactions` * `cutoff` formula is in principle right, however it only gives you the value where the interactions definitively decay to 0. The overall behavior is actually a convolution of the cutoff function and looks somewhat like this (for 5A cutoff and cosine):\r\n![image](https://user-images.githubusercontent.com/36198330/75866316-22ce1500-5e05-11ea-8d23-4f47b213cd0e.png)\r\nAlthough e.g. 3 interactions would give contributions up to 15A, they decay around 10A and become very small afterwards. As you can see, this happens quicker the more interactions there are.\r\n","reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/594424886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/594780750","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/203#issuecomment-594780750","issue_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/203","id":594780750,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDc4MDc1MA==","user":{"login":"simonbatzner","id":24858197,"node_id":"MDQ6VXNlcjI0ODU4MTk3","avatar_url":"https://avatars.githubusercontent.com/u/24858197?v=4","gravatar_id":"","url":"https://api.github.com/users/simonbatzner","html_url":"https://github.com/simonbatzner","followers_url":"https://api.github.com/users/simonbatzner/followers","following_url":"https://api.github.com/users/simonbatzner/following{/other_user}","gists_url":"https://api.github.com/users/simonbatzner/gists{/gist_id}","starred_url":"https://api.github.com/users/simonbatzner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonbatzner/subscriptions","organizations_url":"https://api.github.com/users/simonbatzner/orgs","repos_url":"https://api.github.com/users/simonbatzner/repos","events_url":"https://api.github.com/users/simonbatzner/events{/privacy}","received_events_url":"https://api.github.com/users/simonbatzner/received_events","type":"User","site_admin":false},"created_at":"2020-03-04T19:33:42Z","updated_at":"2020-03-04T19:33:42Z","author_association":"NONE","body":"Thank you for your answer - so in running MD simulations, this would be like the ghost radius in LAMMPS, that makes sense. \r\n\r\nRegarding the cutoff sum - do I understand correctly that this stems from the form of the cosine cutoff, which begins at 0 and ends at the cutoff distance: \r\n\r\n`cutoffs = 0.5 * (torch.cos(distances * np.pi / self.cutoff) + 1.0)`\r\n\r\nIf so, then it seems like that could easily be fixed then by just using a shifted cosine that would give a value of 1 until a certain radius r_c and only start the cosine form for values r > r_c beyond that. \r\n","reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/594780750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"simonbatzner","id":24858197,"node_id":"MDQ6VXNlcjI0ODU4MTk3","avatar_url":"https://avatars.githubusercontent.com/u/24858197?v=4","gravatar_id":"","url":"https://api.github.com/users/simonbatzner","html_url":"https://github.com/simonbatzner","followers_url":"https://api.github.com/users/simonbatzner/followers","following_url":"https://api.github.com/users/simonbatzner/following{/other_user}","gists_url":"https://api.github.com/users/simonbatzner/gists{/gist_id}","starred_url":"https://api.github.com/users/simonbatzner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonbatzner/subscriptions","organizations_url":"https://api.github.com/users/simonbatzner/orgs","repos_url":"https://api.github.com/users/simonbatzner/repos","events_url":"https://api.github.com/users/simonbatzner/events{/privacy}","received_events_url":"https://api.github.com/users/simonbatzner/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/595768823","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/203#issuecomment-595768823","issue_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/203","id":595768823,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTc2ODgyMw==","user":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false},"created_at":"2020-03-06T13:32:25Z","updated_at":"2020-03-06T13:32:25Z","author_association":"COLLABORATOR","body":"Yes, this is due to the cutoff form. We are not sure, if this is a behavior that should be fixed, at least for molecules it makes sense to focus on the local environment. What this tells you is, that give a 5 Angstrom cutoff, each atom effectively experiences an environment of ~12-14A.","reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/comments/595768823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false}}]