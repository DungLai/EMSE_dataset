{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/249","repository_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack","labels_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/249/labels{/name}","comments_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/249/comments","events_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/249/events","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/249","id":752944190,"node_id":"MDU6SXNzdWU3NTI5NDQxOTA=","number":249,"title":"Not able to reduce MAE on OMDB","user":{"login":"MiracAydin1","id":64257834,"node_id":"MDQ6VXNlcjY0MjU3ODM0","avatar_url":"https://avatars.githubusercontent.com/u/64257834?v=4","gravatar_id":"","url":"https://api.github.com/users/MiracAydin1","html_url":"https://github.com/MiracAydin1","followers_url":"https://api.github.com/users/MiracAydin1/followers","following_url":"https://api.github.com/users/MiracAydin1/following{/other_user}","gists_url":"https://api.github.com/users/MiracAydin1/gists{/gist_id}","starred_url":"https://api.github.com/users/MiracAydin1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MiracAydin1/subscriptions","organizations_url":"https://api.github.com/users/MiracAydin1/orgs","repos_url":"https://api.github.com/users/MiracAydin1/repos","events_url":"https://api.github.com/users/MiracAydin1/events{/privacy}","received_events_url":"https://api.github.com/users/MiracAydin1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-11-29T15:44:30Z","updated_at":"2021-03-24T10:06:35Z","closed_at":"2021-03-24T10:06:35Z","author_association":"NONE","active_lock_reason":null,"body":"Dear All,\r\n\r\nFirst of all, thanks for creating an awesome tool like SchNetPack. \r\n\r\nI created a model following the documentation of SchNetPack and ran it for bandgap prediction using QM9 database for my molecule. The molecule contains 161 atoms.\r\n\r\nFirst I created db from xyz file of the molecule (xyz file just includes atom numbers and coordinates) and fed into the model but it performed very bad with QM9. I think QM9 does not contains big molecules like this. Then I moved to OMDB to test the molecule according to the following article:\r\n\r\n1. Band gap prediction for large organic crystal structures with machine learning\r\n\r\nThe article says that MAE is around 0.4 when SchNetPack is used with OMDB-GAP1 database. I applied the values of parameters that has been mentioned in the article but  I never reached this value with both databases. After that, I changed paramaters according to trained models of SchNetPack on the website: [benchmarks of SchNetPack](https://schnetpack.readthedocs.io/en/stable/getstarted/benchmarks.html) \r\n\r\n\r\nI trained 2 identical models according to article above and trained SchNet bandgap model (In the original paper of Schnet, bandgap MAE is around 0.07). Cutoff is the only difference between models. Here is the results:\r\n\r\n**Model-1**\r\nMAE: 0.81\r\nPrediction: 3.25 eV\r\nTruth: 3.50 eV\r\ncutoff: 4A\r\n\r\n**Model-2**\r\nMAE: 0.55\r\nPrediction: 0.96 eV\r\nTruth: 3.50 eV\r\ncutoff: 10A\r\n\r\nThe following code has been used to train models above:\r\n\r\n`import os`\r\n`import schnetpack as spk`\r\n`from schnetpack.datasets import OrganicMaterialsDatabase as OMDB`\r\n\r\n`omdbase = './omdbase'`\r\n`if not os.path.exists('omdbase'):`\r\n`os.makedirs(omdbase)`\r\n\r\n`omdata = OMDB('/home/eduline/Desktop/schnetpack/databases/OMDB-GAP1_v1.1.tar.gz')`\r\n\r\n`train, val, test = spk.train_test_split(`\r\n`data=omdata,`\r\n`num_train=9000,`\r\n`num_val=1000,`\r\n`split_file=os.path.join(omdbase, \"split.npz\"),`\r\n`)`\r\n\r\n`batchsize = 32`\r\n`n_epochs = 500`\r\n`lr_rate = 1e-4`\r\n\r\n`train_loader = spk.AtomsLoader(train, batch_size=batchsize, shuffle=True)`\r\n`val_loader = spk.AtomsLoader(val, batch_size=batchsize)`\r\n\r\n`schnet = spk.representation.SchNet(`\r\n`n_atom_basis=128, n_filters=128, n_gaussians=50, n_interactions=3,`\r\n`cutoff=4., cutoff_network=spk.nn.cutoff.CosineCutoff`\r\n`)`\r\n\r\n`output_gap = spk.atomistic.Atomwise(n_in=128, atomref=atomrefs[OMDB.BandGap], property=OMDB.BandGap,`\r\n`mean=means[OMDB.BandGap], stddev=stddevs[OMDB.BandGap])`\r\n\r\n`model = spk.AtomisticModel(representation=schnet, output_modules=output_gap)`\r\n\r\n`from torch.optim import Adam`\r\n\r\n`optimizer = Adam(model.parameters(), lr=lr_rate)`\r\n\r\n`os.system(\"rm -r ./omdbase/checkpoints\")`\r\n`os.system(\"rm -r ./omdbase/log.csv\")`\r\n\r\n`import schnetpack.train as trn`\r\n`loss = trn.build_mse_loss([OMDB.BandGap])`\r\n`metrics = [spk.metrics.MeanAbsoluteError(OMDB.BandGap)]`\r\n`hooks = [`\r\n`trn.CSVHook(log_path=omdbase, metrics=metrics),`\r\n`trn.ReduceLROnPlateauHook(`\r\n`optimizer,`\r\n`patience=5, factor=0.8, min_lr=1e-6,`\r\n`stop_after_min=True`\r\n`)`\r\n`]`\r\n`trainer = trn.Trainer(`\r\n`model_path=omdbase,`\r\n`model=model,`\r\n`hooks=hooks,`\r\n`loss_fn=loss,`\r\n`optimizer=optimizer,`\r\n`train_loader=train_loader,`\r\n`validation_loader=val_loader,`\r\n`)`\r\n\r\n`device = \"cuda\" # change to 'cpu' if gpu is not available`\r\n`trainer.train(device=device, n_epochs=n_epochs)`\r\n\r\nAs a results, I barely succeeded to reduce MAE by changing cutoff  but Model-2 is far away to predict bandgap of the molecule. I am stucked in this problem.\r\n\r\nIf you can help i would appreciate.\r\n\r\nBest regards,\r\nMiraç Aydın\r\n\r\n\r\n\r\n","closed_by":{"login":"Stefaanhess","id":23171261,"node_id":"MDQ6VXNlcjIzMTcxMjYx","avatar_url":"https://avatars.githubusercontent.com/u/23171261?v=4","gravatar_id":"","url":"https://api.github.com/users/Stefaanhess","html_url":"https://github.com/Stefaanhess","followers_url":"https://api.github.com/users/Stefaanhess/followers","following_url":"https://api.github.com/users/Stefaanhess/following{/other_user}","gists_url":"https://api.github.com/users/Stefaanhess/gists{/gist_id}","starred_url":"https://api.github.com/users/Stefaanhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Stefaanhess/subscriptions","organizations_url":"https://api.github.com/users/Stefaanhess/orgs","repos_url":"https://api.github.com/users/Stefaanhess/repos","events_url":"https://api.github.com/users/Stefaanhess/events{/privacy}","received_events_url":"https://api.github.com/users/Stefaanhess/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/249/timeline","performed_via_github_app":null,"state_reason":"completed"}