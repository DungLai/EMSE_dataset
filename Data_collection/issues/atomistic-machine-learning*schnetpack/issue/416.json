{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/416","repository_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack","labels_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/416/labels{/name}","comments_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/416/comments","events_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/416/events","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/416","id":1260091186,"node_id":"I_kwDOCMZ5Ls5LG3cy","number":416,"title":"[Usage Question] How to improve (reduce) the evaluation metrics when training complex system (Zeolites) MD data with forces?","user":{"login":"Chenghan-Sun","id":43866006,"node_id":"MDQ6VXNlcjQzODY2MDA2","avatar_url":"https://avatars.githubusercontent.com/u/43866006?v=4","gravatar_id":"","url":"https://api.github.com/users/Chenghan-Sun","html_url":"https://github.com/Chenghan-Sun","followers_url":"https://api.github.com/users/Chenghan-Sun/followers","following_url":"https://api.github.com/users/Chenghan-Sun/following{/other_user}","gists_url":"https://api.github.com/users/Chenghan-Sun/gists{/gist_id}","starred_url":"https://api.github.com/users/Chenghan-Sun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Chenghan-Sun/subscriptions","organizations_url":"https://api.github.com/users/Chenghan-Sun/orgs","repos_url":"https://api.github.com/users/Chenghan-Sun/repos","events_url":"https://api.github.com/users/Chenghan-Sun/events{/privacy}","received_events_url":"https://api.github.com/users/Chenghan-Sun/received_events","type":"User","site_admin":false},"labels":[{"id":1044272344,"node_id":"MDU6TGFiZWwxMDQ0MjcyMzQ0","url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/labels/question","name":"question","color":"d876e3","default":true,"description":"Not a bug report, but a question or other problem"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-06-03T16:04:22Z","updated_at":"2022-06-17T21:41:39Z","closed_at":"2022-06-17T12:28:00Z","author_association":"NONE","active_lock_reason":null,"body":"Hi SchNetPack development team,\r\n\r\nI've been using SchNetPack as an alternative approach to the traditional descriptor-based molecular representations for a while, and I also did some research on the original published papers of SchNet as well as some recent applications of SchNet in various molecular prediction tasks. \r\n\r\nRecently, I'm trying to use SchNet representation to train on about 10K (specifically, 10344 images) MD data with both energies and forces on Chabazite Zeolite system (108 atoms per image, with 72O and 36Si). In this dataset, PBC is guaranteed, so even if the number of atoms per image is relatively large, that should be the only resource of complexity regarding to the relatively simple local environments. However, with a very finely tuned hyper-parameters searching procedure, I'm still very struggled with training with forces (i.e., to achieve a low MAEs for decomposed forces in x-y-z directions). \r\n\r\nThe finalized parameters and partitions I used is listed as:\r\n```\r\nData Settings:\r\n num_train: 100 / 1000 / 10000 \r\n num_val: 20 / 100 / 344 \r\n num_test: the remaining dataset\r\n batch_size: 8\r\n\r\nModel Settings:\r\n n_features: 128\r\n n_atom_basis: 128\r\n n_filters: 128\r\n n_gaussians: 60\r\n n_interactions: 6\r\n cutoff: 6.0\r\n force option: yes \r\n\r\nTraining Settings:\r\n Device: cuda\r\n rho_tradeoff: 0.01\r\n learning rate: 0.001\r\n Patience: 5\r\n n_epochs: 300 \r\n```\r\n\r\nHere is some of my SchNetPack training results: \r\n- Task 1: randomly select 100 images as training set and 20 images as validation set:\r\n```\r\nMAE train = 0.365 eV; MAE validation = 0.356 eV (energy)\r\nMAE train = 0.333 eV/A; MAE validation = 0.324  eV/A (forces at x axis )\r\nMAE train = 0.340 eV/A; MAE validation = 0.306 eV/A (forces at y axis)\r\nMAE train = 0.363 eV/A; MAE validation = 0.339 eV/A (forces at z axis)\r\n```\r\n- Task 2: randomly select 1000 images as training set and 100 images as validation set:\r\n```\r\nMAE train = 0.186 eV; MAE validation = 0.239 eV (energy)\r\nMAE train = 0.283 eV/A; MAE validation = 0.298  eV/A (forces at x axis )\r\nMAE train = 0.290 eV/A; MAE validation = 0.309 eV/A (forces at y axis)\r\nMAE train = 0.318 eV/A; MAE validation = 0.334 eV/A (forces at z axis)\r\n```\r\n- Task 3: randomly select 10000 images as training set and the remaining 344 images as validation set:\r\n```\r\nMAE train = 0.067 eV; MAE validation = 0.112 eV (energy)\r\nMAE train = 0.212 eV/A; MAE validation = 0.248  eV/A (forces at x axis )\r\nMAE train = 0.218 eV/A; MAE validation = 0.248 eV/A (forces at y axis)\r\nMAE train = 0.241 eV/A; MAE validation = 0.275 eV/A (forces at z axis)\r\n```\r\nAll the training and validation loss functions plotted in scenarios above looks fairly smooth. So in summary, as I increase the size of training set, I do see improvements of MAEs for both energies and forces. The MAE of energies can be improved to between 0.1 eV and 0..15 eV, which is very acceptable considering the typical error of ab-Initio method (e.g. DFT) with +- 0.15 eV error. However, regarding the forces, the MAEs are generally too large. \r\n\r\nWith the same setting of hyper-parameters, I finally did a full train-validation-test splits on my CHA database, following with 80-10-10 percent rule. Here is some more specific parity plots I obtained after reloaded the model on the test set: \r\n- Task 4: randomly select 8344 images as training set 1000 images as validation set, and the remaining 1000 images as test set:\r\n```\r\nMAE train = 0.079 eV; MAE validation = 0.119 eV; MAE test = 0.132 eV (energy)\r\nMAE train = 0.218 eV/A; MAE validation = 0.256 eV/A; MAE test = 0.256 eV/A (forces at x axis )\r\nMAE train = 0.224 eV/A; MAE validation = 0.262 eV/A; MAE test = 0.262 eV/A (forces at y axis)\r\nMAE train = 0.246 eV/A; MAE validation = 0.285 eV/A; MAE test = 0.284 eV/A (forces at z axis)\r\n```\r\nParity plots:\r\n![energy_parity_plots_sns_ver](https://user-images.githubusercontent.com/43866006/171902522-0acc973f-e318-43f4-a2cb-3e5be8c651f4.png)\r\n![force_x_parity_plots_sns_ver_mixedCHA_8344train_batch4](https://user-images.githubusercontent.com/43866006/171925637-60fc8174-3b32-4457-9444-7877c2f4620c.png)\r\n![force_y_parity_plots_sns_ver_mixedCHA_8344train_batch4](https://user-images.githubusercontent.com/43866006/171925658-fe62dba8-601c-424f-9782-34fc79483074.png)\r\n![force_z_parity_plots_sns_ver_mixedCHA_8344train_batch4](https://user-images.githubusercontent.com/43866006/171925676-6f1cb0a7-1908-412b-b82a-eeef9cf6cc90.png)\r\n\r\nLoss functions: \r\n![loss_mixedCHA_model_v4_8344train](https://user-images.githubusercontent.com/43866006/171902999-92480e22-d496-4060-a20e-2bf9112c5204.png)\r\n\r\nThat's all my current progress now. One of my colleague used another ML package called DeepMDkit to train the same dataset, and been able to reduct the force MAEs to the 10^-2 scale. As I have been played with SchNetPack for a while, I hope to get some suggestions from the developer team regarding to making the forces training better. Any idea or suggestions will be appreciate! \r\n\r\nBest regards,\r\nChenghan Sun\r\n","closed_by":{"login":"Stefaanhess","id":23171261,"node_id":"MDQ6VXNlcjIzMTcxMjYx","avatar_url":"https://avatars.githubusercontent.com/u/23171261?v=4","gravatar_id":"","url":"https://api.github.com/users/Stefaanhess","html_url":"https://github.com/Stefaanhess","followers_url":"https://api.github.com/users/Stefaanhess/followers","following_url":"https://api.github.com/users/Stefaanhess/following{/other_user}","gists_url":"https://api.github.com/users/Stefaanhess/gists{/gist_id}","starred_url":"https://api.github.com/users/Stefaanhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Stefaanhess/subscriptions","organizations_url":"https://api.github.com/users/Stefaanhess/orgs","repos_url":"https://api.github.com/users/Stefaanhess/repos","events_url":"https://api.github.com/users/Stefaanhess/events{/privacy}","received_events_url":"https://api.github.com/users/Stefaanhess/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/416/timeline","performed_via_github_app":null,"state_reason":"completed"}