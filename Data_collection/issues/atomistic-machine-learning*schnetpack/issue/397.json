{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/397","repository_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack","labels_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/397/labels{/name}","comments_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/397/comments","events_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/397/events","html_url":"https://github.com/atomistic-machine-learning/schnetpack/issues/397","id":1192469307,"node_id":"I_kwDOCMZ5Ls5HE6M7","number":397,"title":"`neighborlist_md` `cutoff_shell` permits atoms to become closer than cutoff?","user":{"login":"sirmarcel","id":1615910,"node_id":"MDQ6VXNlcjE2MTU5MTA=","avatar_url":"https://avatars.githubusercontent.com/u/1615910?v=4","gravatar_id":"","url":"https://api.github.com/users/sirmarcel","html_url":"https://github.com/sirmarcel","followers_url":"https://api.github.com/users/sirmarcel/followers","following_url":"https://api.github.com/users/sirmarcel/following{/other_user}","gists_url":"https://api.github.com/users/sirmarcel/gists{/gist_id}","starred_url":"https://api.github.com/users/sirmarcel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sirmarcel/subscriptions","organizations_url":"https://api.github.com/users/sirmarcel/orgs","repos_url":"https://api.github.com/users/sirmarcel/repos","events_url":"https://api.github.com/users/sirmarcel/events{/privacy}","received_events_url":"https://api.github.com/users/sirmarcel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-04-05T00:39:56Z","updated_at":"2022-04-05T08:34:31Z","closed_at":"2022-04-05T08:34:31Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hello,\r\n\r\nWhen working on my own related code, I noticed that in your implementation of neighborlist caching, you use [this](https://github.com/atomistic-machine-learning/schnetpack/blob/50877d89e600f17632b3e3ceb8408954f3f1153e/src/schnetpack/md/neighborlist_md.py#L85) check to determine when to recompute: \r\n\r\n```python\r\ntorch.norm(self.previous_positions - positions, dim=1) > self.cutoff_shell\r\n```\r\n\r\nShouldn't this be `0.5*self.cutoff_shell`? If two atoms are directly approaching each other, starting from a distance of `cutoff_full + epsilon = cutoff + cutoff_shell + epsilon`  and each can move as far as `cutoff_shell`, then they can come as close as `cutoff - cutoff_shell + epsilon`, so, if `epsilon` is `<= cutoff_shell`, then they will be not counted as neighbours even though they are closer than the actual cutoff. \r\n\r\nI have the same bug in my own code, and haven't noticed any significant impact from it, but in the interest of correctness, it may be good to look into this. I've attached a small script that moves two atoms closer than the cutoff without triggering a neighborlist recomputation, as example.\r\n\r\nCheers,\r\n\r\nMarcel\r\n\r\n***\r\n\r\n```python\r\nimport torch\r\nfrom ase import Atoms\r\nfrom schnetpack.md import System\r\nfrom schnetpack.md.neighborlist_md import NeighborListMD\r\nfrom schnetpack.transform import ASENeighborList\r\nfrom schnetpack import properties\r\n\r\ncutoff = 5.0\r\nshell = 0.5\r\n\r\natoms = Atoms(positions=[[0, 0, 0], [cutoff + 1.5 * shell, 0, 0]])\r\n\r\nsystem = System()\r\nsystem.load_molecules(atoms, position_unit_input=1.0)  # avoid unit conversion\r\n\r\n# copied from from base_calculator.py\r\n\r\n# Get atom types\r\natom_types = system.atom_types.repeat(1)\r\n\r\n# Get n_atoms\r\nn_atoms = system.n_atoms.repeat(system.n_replicas)\r\n\r\n# Get positions\r\npositions = system.positions.view(-1, 3)\r\n\r\n# Construct index vector for all replicas and molecules\r\nindex_m = (\r\n    system.index_m.repeat(system.n_replicas, 1)\r\n    + system.n_molecules\r\n    * torch.arange(system.n_replicas, device=system.device).long().unsqueeze(-1)\r\n).view(-1)\r\n\r\n# Get cells and PBC\r\ncells = system.cells.view(-1, 3, 3)\r\npbc = system.pbc.repeat(system.n_replicas, 1, 1).view(-1, 3)\r\n\r\ninputs = {\r\n    properties.Z: atom_types,\r\n    properties.n_atoms: n_atoms,\r\n    properties.R: positions,\r\n    properties.idx_m: index_m,\r\n    properties.cell: cells,\r\n    properties.pbc: pbc,\r\n}\r\n\r\nnl = NeighborListMD(cutoff=cutoff, cutoff_shell=shell, base_nbl=ASENeighborList)\r\n\r\nprint(nl.get_neighbors(inputs)[\"_idx_i_local\"])\r\n\r\n# move atoms by max allowed amount\r\ninputs[properties.R][1, 0] -= shell\r\ninputs[properties.R][0, 0] += shell\r\n\r\nprint(\r\n    nl._update_required(positions=positions, cells=cells, idx_m=index_m, n_molecules=1)\r\n)\r\nprint(nl.get_neighbors(inputs)[\"_idx_i_local\"])\r\nprint((inputs[properties.R][0] - inputs[properties.R][1])[0] < cutoff)\r\n\r\n```\r\n\r\nwhich prints\r\n\r\n```\r\ntensor([], dtype=torch.int64)\r\ntensor([False])\r\ntensor([], dtype=torch.int64)\r\ntensor(True)\r\n```\r\n\r\non my machine with the up to date `dev` branch, indicating that the atoms are closer than the cutoff, but not recognised as such.","closed_by":{"login":"mgastegger","id":36198330,"node_id":"MDQ6VXNlcjM2MTk4MzMw","avatar_url":"https://avatars.githubusercontent.com/u/36198330?v=4","gravatar_id":"","url":"https://api.github.com/users/mgastegger","html_url":"https://github.com/mgastegger","followers_url":"https://api.github.com/users/mgastegger/followers","following_url":"https://api.github.com/users/mgastegger/following{/other_user}","gists_url":"https://api.github.com/users/mgastegger/gists{/gist_id}","starred_url":"https://api.github.com/users/mgastegger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgastegger/subscriptions","organizations_url":"https://api.github.com/users/mgastegger/orgs","repos_url":"https://api.github.com/users/mgastegger/repos","events_url":"https://api.github.com/users/mgastegger/events{/privacy}","received_events_url":"https://api.github.com/users/mgastegger/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues/397/timeline","performed_via_github_app":null,"state_reason":"completed"}