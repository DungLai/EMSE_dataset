{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/140","repository_url":"https://api.github.com/repos/qubvel/efficientnet","labels_url":"https://api.github.com/repos/qubvel/efficientnet/issues/140/labels{/name}","comments_url":"https://api.github.com/repos/qubvel/efficientnet/issues/140/comments","events_url":"https://api.github.com/repos/qubvel/efficientnet/issues/140/events","html_url":"https://github.com/qubvel/efficientnet/issues/140","id":784406271,"node_id":"MDU6SXNzdWU3ODQ0MDYyNzE=","number":140,"title":"ValueError: Layer #0 (named \"efficientnetb0\" in the current model) was found to correspond to layer efficientnet-b0 in the save file. However the new layer efficientnetb0 expects 312 weights, but the saved weights have 309 elements.","user":{"login":"Fateh-Aliyev","id":62349936,"node_id":"MDQ6VXNlcjYyMzQ5OTM2","avatar_url":"https://avatars.githubusercontent.com/u/62349936?v=4","gravatar_id":"","url":"https://api.github.com/users/Fateh-Aliyev","html_url":"https://github.com/Fateh-Aliyev","followers_url":"https://api.github.com/users/Fateh-Aliyev/followers","following_url":"https://api.github.com/users/Fateh-Aliyev/following{/other_user}","gists_url":"https://api.github.com/users/Fateh-Aliyev/gists{/gist_id}","starred_url":"https://api.github.com/users/Fateh-Aliyev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fateh-Aliyev/subscriptions","organizations_url":"https://api.github.com/users/Fateh-Aliyev/orgs","repos_url":"https://api.github.com/users/Fateh-Aliyev/repos","events_url":"https://api.github.com/users/Fateh-Aliyev/events{/privacy}","received_events_url":"https://api.github.com/users/Fateh-Aliyev/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-01-12T16:49:39Z","updated_at":"2021-01-24T04:46:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, I am trying to train on a TPU with Kaggle, save the weights, and then predict on a GPU.  The problem is that whenever I save my model's weights and try to load them up again I get an error like this:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-30-44f514f0c1e1> in <module>\r\n      4     test_ids_ds = TEST.map(lambda image, idnum: idnum).unbatch()\r\n      5 \r\n----> 6     models = [get_model(model, EFFICIENTNET_MODELS[model]) for model in EFFICIENTNET_MODELS]\r\n      7     predictions = [model.predict(test_images_ds) for model in models]\r\n      8     results = pd.DataFrame(sum(predictions) / len(predictions))\r\n\r\n<ipython-input-30-44f514f0c1e1> in <listcomp>(.0)\r\n      4     test_ids_ds = TEST.map(lambda image, idnum: idnum).unbatch()\r\n      5 \r\n----> 6     models = [get_model(model, EFFICIENTNET_MODELS[model]) for model in EFFICIENTNET_MODELS]\r\n      7     predictions = [model.predict(test_images_ds) for model in models]\r\n      8     results = pd.DataFrame(sum(predictions) / len(predictions))\r\n\r\n<ipython-input-29-6bdf6c1e54c8> in get_model(model_name, weight_path)\r\n    100                           metrics=[tf.keras.metrics.AUC(name='AUC', multi_label=True)])\r\n    101 \r\n--> 102             model.load_weights(weight_path)\r\n    103 \r\n    104             return model\r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/keras/engine/training.py in load_weights(self, filepath, by_name, skip_mismatch, options)\r\n   2209             f, self.layers, skip_mismatch=skip_mismatch)\r\n   2210       else:\r\n-> 2211         hdf5_format.load_weights_from_hdf5_group(f, self.layers)\r\n   2212 \r\n   2213   def _updated_config(self):\r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py in load_weights_from_hdf5_group(f, layers)\r\n    704                        str(len(symbolic_weights)) +\r\n    705                        ' weights, but the saved weights have ' +\r\n--> 706                        str(len(weight_values)) + ' elements.')\r\n    707     weight_value_tuples += zip(symbolic_weights, weight_values)\r\n    708   K.batch_set_value(weight_value_tuples)\r\n\r\nValueError: Layer #0 (named \"efficientnetb0\" in the current model) was found to correspond to layer efficientnet-b0 in the save file. However the new layer efficientnetb0 expects 312 weights, but the saved weights have 309 elements.\r\n```\r\nI have tried using another EfficientNet model to see if it was just the one set of weights, but I get the same error, with an expected amount of weights being 3 more than provided in the weight file.  Here is the code I use to load my weights:\r\n```\r\nEFFICIENTNET_MODELS = {'b0': '../input/ranzcr-weights/efficientnetb0.h5',\r\n                                                'b1': '../input/ranzcr-weights/efficientnetb1.h5',\r\n                                                'b2': '../input/ranzcr-weights/efficientnetb2.h5',\r\n                                                'b3': '../input/ranzcr-weights/efficientnetb3.h5',\r\n                                                'b4': '../input/ranzcr-weights/efficientnetb4.h5',\r\n                                                'b5': '../input/ranzcr-weights/efficientnetb5.h5'} \r\n\r\ndef get_model(model_name, weight_path):\r\n        with strategy.scope():\r\n            if model_name == 'b0':\r\n                EfficientNet = tf.keras.applications.EfficientNetB0(\r\n                    include_top=False,\r\n                    weights=None,\r\n                    input_shape=(*IMG_SIZE,3)\r\n                )\r\n            if model_name == 'b1':\r\n                EfficientNet = tf.keras.applications.EfficientNetB1(\r\n                    include_top=False,\r\n                    weights=None,\r\n                    input_shape=(*IMG_SIZE,3)\r\n                )\r\n            if model_name == 'b2':\r\n                EfficientNet = tf.keras.applications.EfficientNetB2(\r\n                    include_top=False,\r\n                    weights=None,\r\n                    input_shape=(*IMG_SIZE,3)\r\n                )\r\n            if model_name == 'b3':\r\n                EfficientNet = tf.keras.applications.EfficientNetB3(\r\n                    include_top=False,\r\n                    weights=None,\r\n                    input_shape=(*IMG_SIZE,3)\r\n                )\r\n            if model_name == 'b4':\r\n                EfficientNet = tf.keras.applications.EfficientNetB4(\r\n                    include_top=False,\r\n                    weights=None,\r\n                    input_shape=(*IMG_SIZE,3)\r\n                )\r\n            if model_name == 'b5':\r\n                EfficientNet = tf.keras.applications.EfficientNetB5(\r\n                    include_top=False,\r\n                    weights=None,\r\n                    input_shape=(*IMG_SIZE,3)\r\n                )\r\n\r\n            EfficientNet.trainable = True\r\n\r\n            model = Sequential([EfficientNet,\r\n                                Flatten(),\r\n                                Dense(11, activation='sigmoid')])\r\n\r\n            model.compile(optimizer='adam',\r\n                          loss='binary_crossentropy',\r\n                          metrics=[tf.keras.metrics.AUC(name='AUC', multi_label=True)])\r\n\r\n            model.load_weights(weight_path)\r\n\r\n            return model\r\n\r\nmodels = [get_model(model, EFFICIENTNET_MODELS[model]) for model in EFFICIENTNET_MODELS]\r\n```\r\nFor saving the weights, I simply set up the model in the same way and then train and save the weights.  Is this issue in my code or is it an issue with EfficientNet?  How can I fix this?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/qubvel/efficientnet/issues/140/timeline","performed_via_github_app":null,"state_reason":null}