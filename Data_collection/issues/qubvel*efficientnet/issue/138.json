{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/138","repository_url":"https://api.github.com/repos/qubvel/efficientnet","labels_url":"https://api.github.com/repos/qubvel/efficientnet/issues/138/labels{/name}","comments_url":"https://api.github.com/repos/qubvel/efficientnet/issues/138/comments","events_url":"https://api.github.com/repos/qubvel/efficientnet/issues/138/events","html_url":"https://github.com/qubvel/efficientnet/issues/138","id":781070136,"node_id":"MDU6SXNzdWU3ODEwNzAxMzY=","number":138,"title":"Depthwise separable convolution for _expand_conv","user":{"login":"jangmin-deepx","id":67268979,"node_id":"MDQ6VXNlcjY3MjY4OTc5","avatar_url":"https://avatars.githubusercontent.com/u/67268979?v=4","gravatar_id":"","url":"https://api.github.com/users/jangmin-deepx","html_url":"https://github.com/jangmin-deepx","followers_url":"https://api.github.com/users/jangmin-deepx/followers","following_url":"https://api.github.com/users/jangmin-deepx/following{/other_user}","gists_url":"https://api.github.com/users/jangmin-deepx/gists{/gist_id}","starred_url":"https://api.github.com/users/jangmin-deepx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jangmin-deepx/subscriptions","organizations_url":"https://api.github.com/users/jangmin-deepx/orgs","repos_url":"https://api.github.com/users/jangmin-deepx/repos","events_url":"https://api.github.com/users/jangmin-deepx/events{/privacy}","received_events_url":"https://api.github.com/users/jangmin-deepx/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-01-07T06:35:07Z","updated_at":"2021-01-07T06:46:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi I'm really new to this model\r\n\r\nWhy don't you use Depthwise separable convolution except _depthwise_conv?(`_expand_conv`, `_se_reduce`, `_se_expand`, `_project_conv `)\r\nDoes it matters for higher acc?\r\n\r\nmodel.py\r\n``` python\r\n        # Expansion phase\r\n        inp = self._block_args.input_filters  # number of input channels\r\n        oup = self._block_args.input_filters * self._block_args.expand_ratio  # number of output channels\r\n        if self._block_args.expand_ratio != 1:\r\n            self._expand_conv = Conv2d(in_channels=inp, out_channels=oup, kernel_size=1, bias=False)\r\n            self._bn0 = nn.BatchNorm2d(num_features=oup, momentum=self._bn_mom, eps=self._bn_eps)\r\n\r\n        # Depthwise convolution phase\r\n        k = self._block_args.kernel_size\r\n        s = self._block_args.stride\r\n        self._depthwise_conv = Conv2d(\r\n            in_channels=oup, out_channels=oup, groups=oup,  # groups makes it depthwise\r\n            kernel_size=k, stride=s, bias=False)\r\n        self._bn1 = nn.BatchNorm2d(num_features=oup, momentum=self._bn_mom, eps=self._bn_eps)\r\n\r\n        # Squeeze and Excitation layer, if desired\r\n        if self.has_se:\r\n            num_squeezed_channels = max(1, int(self._block_args.input_filters * self._block_args.se_ratio))\r\n            self._se_reduce = Conv2d(in_channels=oup, out_channels=num_squeezed_channels, kernel_size=1)\r\n            self._se_expand = Conv2d(in_channels=num_squeezed_channels, out_channels=oup, kernel_size=1)\r\n\r\n        # Output phase\r\n        final_oup = self._block_args.output_filters\r\n        self._project_conv = Conv2d(in_channels=oup, out_channels=final_oup, kernel_size=1, bias=False)\r\n        self._bn2 = nn.BatchNorm2d(num_features=final_oup, momentum=self._bn_mom, eps=self._bn_eps)\r\n        self._swish = MemoryEfficientSwish()\r\n```\r\n\r\nAnd Why don't you add Swish(x) at the End of MBConvBlock?\r\n\r\nmodel.py\r\n``` python\r\n...\r\n        x = self._project_conv(x)\r\n        x = self._bn2(x)\r\n...\r\n```\r\n\r\nPlease let me know!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/qubvel/efficientnet/issues/138/timeline","performed_via_github_app":null,"state_reason":null}