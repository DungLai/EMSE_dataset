{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/89","repository_url":"https://api.github.com/repos/qubvel/efficientnet","labels_url":"https://api.github.com/repos/qubvel/efficientnet/issues/89/labels{/name}","comments_url":"https://api.github.com/repos/qubvel/efficientnet/issues/89/comments","events_url":"https://api.github.com/repos/qubvel/efficientnet/issues/89/events","html_url":"https://github.com/qubvel/efficientnet/issues/89","id":540984734,"node_id":"MDU6SXNzdWU1NDA5ODQ3MzQ=","number":89,"title":"Scaling and values for dropout","user":{"login":"moukle","id":4622472,"node_id":"MDQ6VXNlcjQ2MjI0NzI=","avatar_url":"https://avatars.githubusercontent.com/u/4622472?v=4","gravatar_id":"","url":"https://api.github.com/users/moukle","html_url":"https://github.com/moukle","followers_url":"https://api.github.com/users/moukle/followers","following_url":"https://api.github.com/users/moukle/following{/other_user}","gists_url":"https://api.github.com/users/moukle/gists{/gist_id}","starred_url":"https://api.github.com/users/moukle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moukle/subscriptions","organizations_url":"https://api.github.com/users/moukle/orgs","repos_url":"https://api.github.com/users/moukle/repos","events_url":"https://api.github.com/users/moukle/events{/privacy}","received_events_url":"https://api.github.com/users/moukle/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-12-20T13:03:19Z","updated_at":"2019-12-20T13:03:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Wanted to create smaller EFN inspired by #26.\r\nTo first approve my understanding of the scaling, I tried to recreate the parameters used for B1-B7 as follows:\r\n\r\n``` python\r\nalpha = 1.2\r\nbeta = 1.1\r\ngamma = 1.15\r\n\r\nre = {}\r\nfor coeff in range(0,10):\r\n    d = alpha**coeff\r\n    w = beta**coeff\r\n    r = gamma**coeff * 224\r\n    re[coeff] = np.around([w,d,r], decimals=2)\r\n```\r\n\r\nBut the values don't match up. Comparing my values for B7 with the original values, there's a quite a huge gap (especially for d).\r\n```\r\nw, d, res\r\nmy:  [1.95   3.58 595.84]\r\norig: (2.0, 3.1, 600, 0.5)\r\n```\r\n\r\n- **Is my calculation wrong or is there some human fine tuning involved?**\r\n\r\nFull output:\r\n``` python\r\nfor key, value in re.items():\r\n    print(key, value)\r\n    \r\nfor key, value in orig.items():\r\n    print(key, value)\r\n\r\n0 [  1.   1. 224.]\r\n1 [  1.1   1.2 257.6]\r\n2 [  1.21   1.44 296.24]\r\n3 [  1.33   1.73 340.68]\r\n4 [  1.46   2.07 391.78]\r\n5 [  1.61   2.49 450.54]\r\n6 [  1.77   2.99 518.13]\r\n7 [  1.95   3.58 595.84]\r\n\r\nefficientnet-b0 (1.0, 1.0, 224, 0.2)\r\nefficientnet-b1 (1.0, 1.1, 240, 0.2)\r\nefficientnet-b2 (1.1, 1.2, 260, 0.3)\r\nefficientnet-b3 (1.2, 1.4, 300, 0.3)\r\nefficientnet-b4 (1.4, 1.8, 380, 0.4)\r\nefficientnet-b5 (1.6, 2.2, 456, 0.4)\r\nefficientnet-b6 (1.8, 2.6, 528, 0.5)\r\nefficientnet-b7 (2.0, 3.1, 600, 0.5)\r\n```\r\n\r\n---\r\n\r\nDoing the same with negative coeffecients yielded following values:\r\n```\r\n-10 [ 0.39  0.16 55.37]\r\n-9 [ 0.42  0.19 63.67]\r\n-8 [ 0.47  0.23 73.23]\r\n-7 [ 0.51  0.28 84.21]\r\n-6 [ 0.56  0.33 96.84]\r\n-5 [  0.62   0.4  111.37]\r\n-4 [  0.68   0.48 128.07]\r\n-3 [  0.75   0.58 147.28]\r\n-2 [  0.83   0.69 169.38]\r\n-1 [  0.91   0.83 194.78]\r\n```\r\n\r\n- **How would one choose values for the corresponding dropout layer?**","closed_by":null,"reactions":{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/89/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/qubvel/efficientnet/issues/89/timeline","performed_via_github_app":null,"state_reason":null}