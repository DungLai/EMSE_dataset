{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/115","repository_url":"https://api.github.com/repos/qubvel/efficientnet","labels_url":"https://api.github.com/repos/qubvel/efficientnet/issues/115/labels{/name}","comments_url":"https://api.github.com/repos/qubvel/efficientnet/issues/115/comments","events_url":"https://api.github.com/repos/qubvel/efficientnet/issues/115/events","html_url":"https://github.com/qubvel/efficientnet/issues/115","id":622898546,"node_id":"MDU6SXNzdWU2MjI4OTg1NDY=","number":115,"title":"keras transfer learning - retrain EfficientNetB7 Tesla V100 32G out of memory","user":{"login":"yisampi","id":22785527,"node_id":"MDQ6VXNlcjIyNzg1NTI3","avatar_url":"https://avatars.githubusercontent.com/u/22785527?v=4","gravatar_id":"","url":"https://api.github.com/users/yisampi","html_url":"https://github.com/yisampi","followers_url":"https://api.github.com/users/yisampi/followers","following_url":"https://api.github.com/users/yisampi/following{/other_user}","gists_url":"https://api.github.com/users/yisampi/gists{/gist_id}","starred_url":"https://api.github.com/users/yisampi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yisampi/subscriptions","organizations_url":"https://api.github.com/users/yisampi/orgs","repos_url":"https://api.github.com/users/yisampi/repos","events_url":"https://api.github.com/users/yisampi/events{/privacy}","received_events_url":"https://api.github.com/users/yisampi/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-22T02:08:32Z","updated_at":"2020-11-16T11:38:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"2020-05-22 09:51:58.789020: W tensorflow/core/common_runtime/bfc_allocator.cc:271] ****************************************************************************************************\r\n2020-05-22 09:51:58.789068: W tensorflow/core/framework/op_kernel.cc:1401] OP_REQUIRES failed at conv_ops.cc:446 : Resource exhausted: OOM when allocating tensor with shape[32,3840,10,10] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\nOOM when allocating tensor with shape[32,3840,10,10] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[{{node block7c_expand_conv/convolution}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n         [[{{node loss/mul}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 72, in <module>\r\n    train()\r\n  File \"train.py\", line 58, in train\r\n    model.train()\r\n  File \"/data/sam.yi/keras-transfer-learning-testing/models/base_model.py\", line 69, in train\r\n    self._fine_tuning()\r\n  File \"/data/sam.yi/keras-transfer-learning-testing/models/efficientnetb7.py\", line 76, in _fine_tuning\r\n    class_weight=self.class_weight)\r\n  File \"/data/anaconda3/lib/python3.6/site-packages/keras/legacy/interfaces.py\", line 91, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/data/anaconda3/lib/python3.6/site-packages/keras/engine/training.py\", line 1418, in fit_generator\r\n    initial_epoch=initial_epoch)\r\n  File \"/data/anaconda3/lib/python3.6/site-packages/keras/engine/training_generator.py\", line 217, in fit_generator\r\n    class_weight=class_weight)\r\n  File \"/data/anaconda3/lib/python3.6/site-packages/keras/engine/training.py\", line 1217, in train_on_batch\r\n    outputs = self.train_function(ins)\r\n  File \"/data/anaconda3/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 2715, in __call__\r\n    return self._call(inputs)\r\n  File \"/data/anaconda3/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 2675, in _call\r\n    fetched = self._callable_fn(*array_vals)\r\n  File \"/data/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1439, in __call__\r\n    run_metadata_ptr)\r\n  File \"/data/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 528, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[32,3840,10,10] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[{{node block7c_expand_conv/convolution}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n         [[{{node loss/mul}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\nkeras：2.2.4\r\ntensorflow-gpu ：1.13.1\r\nefficientnet: 1.1.0\r\nbatch_size: 1\r\nimage_size: 512x512\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/115/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/qubvel/efficientnet/issues/115/timeline","performed_via_github_app":null,"state_reason":null}