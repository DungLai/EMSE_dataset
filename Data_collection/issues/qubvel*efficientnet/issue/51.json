{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/51","repository_url":"https://api.github.com/repos/qubvel/efficientnet","labels_url":"https://api.github.com/repos/qubvel/efficientnet/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/qubvel/efficientnet/issues/51/comments","events_url":"https://api.github.com/repos/qubvel/efficientnet/issues/51/events","html_url":"https://github.com/qubvel/efficientnet/issues/51","id":476452049,"node_id":"MDU6SXNzdWU0NzY0NTIwNDk=","number":51,"title":"inference errors when loading models due to backend.backend()","user":{"login":"Lauler","id":7157234,"node_id":"MDQ6VXNlcjcxNTcyMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/7157234?v=4","gravatar_id":"","url":"https://api.github.com/users/Lauler","html_url":"https://github.com/Lauler","followers_url":"https://api.github.com/users/Lauler/followers","following_url":"https://api.github.com/users/Lauler/following{/other_user}","gists_url":"https://api.github.com/users/Lauler/gists{/gist_id}","starred_url":"https://api.github.com/users/Lauler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lauler/subscriptions","organizations_url":"https://api.github.com/users/Lauler/orgs","repos_url":"https://api.github.com/users/Lauler/repos","events_url":"https://api.github.com/users/Lauler/events{/privacy}","received_events_url":"https://api.github.com/users/Lauler/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-08-03T13:31:38Z","updated_at":"2019-08-05T16:06:40Z","closed_at":"2019-08-05T16:06:40Z","author_association":"NONE","active_lock_reason":null,"body":"I cannot load models with the v1.0.0b1 version of your package. In `model.py` of your package you are calling `backend.backend()`: https://github.com/qubvel/efficientnet/blob/master/efficientnet/model.py#L246 .\r\n\r\nI cannot see anywhere where this is supposed to be automatically initialized to the user's backend. The same file contains `backend = None`: https://github.com/qubvel/efficientnet/blob/master/efficientnet/model.py#L43\r\n\r\nWhen trying to load a model this leads to the following error message:\r\n\r\n```\r\nFound 3662 validated image filenames.\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-13-3f84b7149375> in <module>\r\n      8                       model_dir = \"../\",\r\n      9                       folds = 1,\r\n---> 10                       batch_size = 16)\r\n     11 (\"\")\r\n\r\n<ipython-input-12-eda66ccb6232> in pred_cv_test(df, model_dir, folds, nr_samples, batch_size)\r\n     31                                     batch_size = batch_size)\r\n     32 \r\n---> 33         model = get_model(model_dir = model_dir, fold_nr = fold)\r\n     34         preds = model.predict_generator(\r\n     35             generator = test_generator,\r\n\r\n<ipython-input-12-eda66ccb6232> in get_model(model_dir, fold_nr)\r\n      9     best_epoch_model = load_model(\r\n     10         model_dir + \"effnet_reg_fold\" + str(fold_nr) + \".h5\",\r\n---> 11         custom_objects = {\"root_mse\": root_mse})\r\n     12     return(best_epoch_model)\r\n     13 \r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\saving\\save.py in load_model(filepath, custom_objects, compile)\r\n    144       h5py is not None and (\r\n    145           isinstance(filepath, h5py.File) or h5py.is_hdf5(filepath))):\r\n--> 146     return hdf5_format.load_model_from_hdf5(filepath, custom_objects, compile)\r\n    147 \r\n    148   if isinstance(filepath, six.string_types):\r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\saving\\hdf5_format.py in load_model_from_hdf5(filepath, custom_objects, compile)\r\n    210     model_config = json.loads(model_config.decode('utf-8'))\r\n    211     model = model_config_lib.model_from_config(model_config,\r\n--> 212                                                custom_objects=custom_objects)\r\n    213 \r\n    214     # set weights\r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\saving\\model_config.py in model_from_config(config, custom_objects)\r\n     53                     '`Sequential.from_config(config)`?')\r\n     54   from tensorflow.python.keras.layers import deserialize  # pylint: disable=g-import-not-at-top\r\n---> 55   return deserialize(config, custom_objects=custom_objects)\r\n     56 \r\n     57 \r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py in deserialize(config, custom_objects)\r\n     87       module_objects=globs,\r\n     88       custom_objects=custom_objects,\r\n---> 89       printable_module_name='layer')\r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)\r\n    190             custom_objects=dict(\r\n    191                 list(_GLOBAL_CUSTOM_OBJECTS.items()) +\r\n--> 192                 list(custom_objects.items())))\r\n    193       with CustomObjectScope(custom_objects):\r\n    194         return cls.from_config(cls_config)\r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py in from_config(cls, config, custom_objects)\r\n   1129         if layer in unprocessed_nodes:\r\n   1130           for node_data in unprocessed_nodes.pop(layer):\r\n-> 1131             process_node(layer, node_data)\r\n   1132 \r\n   1133     name = config.get('name')\r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py in process_node(layer, node_data)\r\n   1085         flat_input_tensors = nest.flatten(input_tensors)\r\n   1086         if len(flat_input_tensors) == 1:\r\n-> 1087           layer(flat_input_tensors[0], **kwargs)\r\n   1088         else:\r\n   1089           layer(input_tensors, **kwargs)\r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py in __call__(self, inputs, *args, **kwargs)\r\n    632                     outputs = base_layer_utils.mark_as_return(outputs, acd)\r\n    633                 else:\r\n--> 634                   outputs = call_fn(inputs, *args, **kwargs)\r\n    635 \r\n    636             except TypeError as e:\r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\core.py in call(self, inputs)\r\n    358 \r\n    359   def call(self, inputs):\r\n--> 360     return self.activation(inputs)\r\n    361 \r\n    362   def compute_output_shape(self, input_shape):\r\n\r\n~\\Anaconda3\\envs\\r-tensorflow\\lib\\site-packages\\efficientnet\\model.py in swish(x)\r\n    134     \"\"\"\r\n    135 \r\n--> 136     if backend.backend() == 'tensorflow':\r\n    137         try:\r\n    138             # The native TF implementation has a more\r\n\r\nAttributeError: 'NoneType' object has no attribute 'backend'\r\n```\r\n\r\nI can get it to work if I hardcode my backend by editing model.py. \r\n\r\nIn your inference notebook you are not loading a saved model from disk. Have you guys tested and successfully loaded in a model from disk with the new version?","closed_by":{"login":"Lauler","id":7157234,"node_id":"MDQ6VXNlcjcxNTcyMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/7157234?v=4","gravatar_id":"","url":"https://api.github.com/users/Lauler","html_url":"https://github.com/Lauler","followers_url":"https://api.github.com/users/Lauler/followers","following_url":"https://api.github.com/users/Lauler/following{/other_user}","gists_url":"https://api.github.com/users/Lauler/gists{/gist_id}","starred_url":"https://api.github.com/users/Lauler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lauler/subscriptions","organizations_url":"https://api.github.com/users/Lauler/orgs","repos_url":"https://api.github.com/users/Lauler/repos","events_url":"https://api.github.com/users/Lauler/events{/privacy}","received_events_url":"https://api.github.com/users/Lauler/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/51/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/qubvel/efficientnet/issues/51/timeline","performed_via_github_app":null,"state_reason":"completed"}