{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/80","repository_url":"https://api.github.com/repos/qubvel/efficientnet","labels_url":"https://api.github.com/repos/qubvel/efficientnet/issues/80/labels{/name}","comments_url":"https://api.github.com/repos/qubvel/efficientnet/issues/80/comments","events_url":"https://api.github.com/repos/qubvel/efficientnet/issues/80/events","html_url":"https://github.com/qubvel/efficientnet/issues/80","id":510347379,"node_id":"MDU6SXNzdWU1MTAzNDczNzk=","number":80,"title":"EfficientNet version 1.0.0 contains lower accuracy than 0.0.4","user":{"login":"jerjhsu","id":35328387,"node_id":"MDQ6VXNlcjM1MzI4Mzg3","avatar_url":"https://avatars.githubusercontent.com/u/35328387?v=4","gravatar_id":"","url":"https://api.github.com/users/jerjhsu","html_url":"https://github.com/jerjhsu","followers_url":"https://api.github.com/users/jerjhsu/followers","following_url":"https://api.github.com/users/jerjhsu/following{/other_user}","gists_url":"https://api.github.com/users/jerjhsu/gists{/gist_id}","starred_url":"https://api.github.com/users/jerjhsu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerjhsu/subscriptions","organizations_url":"https://api.github.com/users/jerjhsu/orgs","repos_url":"https://api.github.com/users/jerjhsu/repos","events_url":"https://api.github.com/users/jerjhsu/events{/privacy}","received_events_url":"https://api.github.com/users/jerjhsu/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-10-21T23:16:54Z","updated_at":"2019-10-21T23:18:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"With the included example/inference_example.ipynb, I am seeing lower prediction with version 1.0.0 as opposed to version 0.0.4. \r\n\r\nUsing the below code for testing both versions (with the exception of import efficientnet vs import efficientnet.keras/tfkeras) produce different prediction results:\r\n\r\n!pip install efficientnet==0.0.4\r\n!wget https://github.com/qubvel/efficientnet/raw/master/misc/panda.jpg\r\nfrom keras.applications.imagenet_utils import decode_predictions\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom efficientnet import EfficientNetB0\r\nfrom efficientnet import center_crop_and_resize, preprocess_input\r\n\r\nmodel = EfficientNetB0(weights='imagenet')\r\nimage = plt.imread('panda.jpg')\r\n\r\nimage_size = model.input_shape[1]\r\nx = center_crop_and_resize(image, image_size=image_size)\r\nx = preprocess_input(x)\r\nx = np.expand_dims(x, 0)\r\n \r\ny = model.predict(x)\r\ndecode_predictions(y)\r\n\r\nOutput from version 0.0.4:\r\n[[('n02510455', 'giant_panda', 0.8347928),\r\n  ('n02134084', 'ice_bear', 0.015602051),\r\n  ('n02509815', 'lesser_panda', 0.0045535257),\r\n  ('n02133161', 'American_black_bear', 0.002471913),\r\n  ('n02132136', 'brown_bear', 0.0020707587)]]\r\n\r\nOutput from version 1.0.0:\r\n[[('n02510455', 'giant_panda', 0.75878686),\r\n  ('n02134084', 'ice_bear', 0.008354747),\r\n  ('n02132136', 'brown_bear', 0.0072072297),\r\n  ('n02509815', 'lesser_panda', 0.0041302275),\r\n  ('n02120079', 'Arctic_fox', 0.0040210797)]]\r\n\r\nAt its current state (version 1.0.0), I am also seeing lower top-1 score training on CIFAR10 on EfficientNet  B0 as opposed to the same on ResNet50, thinking that the issue may be caused by outdated/bad weights as shown above.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/80/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/qubvel/efficientnet/issues/80/timeline","performed_via_github_app":null,"state_reason":null}