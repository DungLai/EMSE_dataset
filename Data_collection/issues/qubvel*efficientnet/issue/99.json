{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/99","repository_url":"https://api.github.com/repos/qubvel/efficientnet","labels_url":"https://api.github.com/repos/qubvel/efficientnet/issues/99/labels{/name}","comments_url":"https://api.github.com/repos/qubvel/efficientnet/issues/99/comments","events_url":"https://api.github.com/repos/qubvel/efficientnet/issues/99/events","html_url":"https://github.com/qubvel/efficientnet/issues/99","id":571615706,"node_id":"MDU6SXNzdWU1NzE2MTU3MDY=","number":99,"title":"Half precision training very slow and returning nan loss","user":{"login":"acmilannesta","id":47703762,"node_id":"MDQ6VXNlcjQ3NzAzNzYy","avatar_url":"https://avatars.githubusercontent.com/u/47703762?v=4","gravatar_id":"","url":"https://api.github.com/users/acmilannesta","html_url":"https://github.com/acmilannesta","followers_url":"https://api.github.com/users/acmilannesta/followers","following_url":"https://api.github.com/users/acmilannesta/following{/other_user}","gists_url":"https://api.github.com/users/acmilannesta/gists{/gist_id}","starred_url":"https://api.github.com/users/acmilannesta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acmilannesta/subscriptions","organizations_url":"https://api.github.com/users/acmilannesta/orgs","repos_url":"https://api.github.com/users/acmilannesta/repos","events_url":"https://api.github.com/users/acmilannesta/events{/privacy}","received_events_url":"https://api.github.com/users/acmilannesta/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-02-26T19:47:38Z","updated_at":"2020-04-13T11:30:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Based on tf doc I used the \"mixed_float16\" policy to train the efficientnet model, but the training become extremely slow almost 10 times slower.\r\n\r\nhttps://www.tensorflow.org/api_docs/python/tf/keras/mixed_precision/experimental/Policy?hl=en\r\n\r\nhere are some of the codes:\r\n```\r\nfrom tensorflow.keras.mixed_precision import experimental as mixed_precision\r\npolicy = mixed_precision.Policy('mixed_float16')\r\nmixed_precision.set_policy(policy)\r\nK.set_epsilon(1e-3)\r\n```\r\n\r\nI used the tfkeras.py to call the efficientnet backbone. Do I need to put the above code in the \"tfkeras.py\" script?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/qubvel/efficientnet/issues/99/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/qubvel/efficientnet/issues/99/timeline","performed_via_github_app":null,"state_reason":null}