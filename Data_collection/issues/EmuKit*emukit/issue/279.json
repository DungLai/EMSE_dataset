{"url":"https://api.github.com/repos/EmuKit/emukit/issues/279","repository_url":"https://api.github.com/repos/EmuKit/emukit","labels_url":"https://api.github.com/repos/EmuKit/emukit/issues/279/labels{/name}","comments_url":"https://api.github.com/repos/EmuKit/emukit/issues/279/comments","events_url":"https://api.github.com/repos/EmuKit/emukit/issues/279/events","html_url":"https://github.com/EmuKit/emukit/issues/279","id":550202015,"node_id":"MDU6SXNzdWU1NTAyMDIwMTU=","number":279,"title":"Gradients for Acquisition are wrong when `normalizer=True`","user":{"login":"ablancha","id":16860305,"node_id":"MDQ6VXNlcjE2ODYwMzA1","avatar_url":"https://avatars.githubusercontent.com/u/16860305?v=4","gravatar_id":"","url":"https://api.github.com/users/ablancha","html_url":"https://github.com/ablancha","followers_url":"https://api.github.com/users/ablancha/followers","following_url":"https://api.github.com/users/ablancha/following{/other_user}","gists_url":"https://api.github.com/users/ablancha/gists{/gist_id}","starred_url":"https://api.github.com/users/ablancha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ablancha/subscriptions","organizations_url":"https://api.github.com/users/ablancha/orgs","repos_url":"https://api.github.com/users/ablancha/repos","events_url":"https://api.github.com/users/ablancha/events{/privacy}","received_events_url":"https://api.github.com/users/ablancha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-01-15T13:57:28Z","updated_at":"2020-03-09T13:53:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nIt appears that the gradients of the acquisition functions are wrong when `normalizer=True` is used in the model definition.  This is because `model.predictive_gradients` in GPy (which is called by `model.get_prediction_gradients` in Emukit) does not account for normalization.  I raised this issue [here](https://github.com/SheffieldML/GPy/issues/802) and made a pull request to fix it.  \r\n\r\nI don't think Emukit enforces or recommends to use `normalizer=False` anywhere.  This is problematic because it is up to the user to define their own model \"upstream\" of the optimization loop.  I suspect that many people are tempted to use `normalizer=True` without knowing that the gradients of their acquisition function will be wrong.  \r\n\r\nIf the pull request I made is accepted, then there is nothing to do except to tell people that they should use the latest (devel?) version of GPy.\r\n\r\nIf I am missing anything, please let me know.\r\n\r\nThanks,\r\nAntoine\r\n\r\n\r\n```python\r\n\r\nimport numpy as np\r\nimport GPy\r\nfrom GPy.models import GradientChecker\r\nfrom emukit.model_wrappers.gpy_model_wrappers import GPyModelWrapper\r\nfrom emukit.bayesian_optimization.acquisitions import ProbabilityOfImprovement\r\n\r\n\r\nM, Q = 15, 3\r\nX = np.random.rand(M,Q)\r\nY = np.random.rand(M,1)\r\nx = np.random.rand(1, Q)\r\nmodel = GPy.models.GPRegression(X=X, Y=Y, normalizer=True)\r\nemukit_model = GPyModelWrapper(model)\r\nacq = ProbabilityOfImprovement(emukit_model)\r\ng = GradientChecker(lambda x: acq.evaluate_with_gradients(x)[0],\r\n                    lambda x: acq.evaluate_with_gradients(x)[1],\r\n                    x, 'x')\r\nassert(g.checkgrad())\r\n\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/EmuKit/emukit/issues/279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/EmuKit/emukit/issues/279/timeline","performed_via_github_app":null,"state_reason":null}