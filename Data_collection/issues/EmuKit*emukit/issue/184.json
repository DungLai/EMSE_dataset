{"url":"https://api.github.com/repos/EmuKit/emukit/issues/184","repository_url":"https://api.github.com/repos/EmuKit/emukit","labels_url":"https://api.github.com/repos/EmuKit/emukit/issues/184/labels{/name}","comments_url":"https://api.github.com/repos/EmuKit/emukit/issues/184/comments","events_url":"https://api.github.com/repos/EmuKit/emukit/issues/184/events","html_url":"https://github.com/EmuKit/emukit/issues/184","id":430954089,"node_id":"MDU6SXNzdWU0MzA5NTQwODk=","number":184,"title":"Parameter: objective and model representation","user":{"login":"dekuenstle","id":734721,"node_id":"MDQ6VXNlcjczNDcyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/734721?v=4","gravatar_id":"","url":"https://api.github.com/users/dekuenstle","html_url":"https://github.com/dekuenstle","followers_url":"https://api.github.com/users/dekuenstle/followers","following_url":"https://api.github.com/users/dekuenstle/following{/other_user}","gists_url":"https://api.github.com/users/dekuenstle/gists{/gist_id}","starred_url":"https://api.github.com/users/dekuenstle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dekuenstle/subscriptions","organizations_url":"https://api.github.com/users/dekuenstle/orgs","repos_url":"https://api.github.com/users/dekuenstle/repos","events_url":"https://api.github.com/users/dekuenstle/events{/privacy}","received_events_url":"https://api.github.com/users/dekuenstle/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-04-09T13:00:27Z","updated_at":"2019-04-12T11:03:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In my understanding, parameter representation in emukit is similar to GPyOpt (whereby the latter states this more explicit): \r\nEach parameter has two representations, 1. domain / objective representation 2. model representation. E.g. a categorical parameter can be represented by ('car', 'bike', 'train') and ([1,0,0], [0,1,0], [0,0,1]). The objective function (called user_function in emukit) should get objective representation as input, the model should get model representation as input.\r\n\r\nI've got several issues with this: \r\n1. Input data format of a objective function. Objective representations of parameters are numbers (e.g. continuous param) or strings (e.g. categorical param). User functions [expect a 2d-array as input](https://github.com/amzn/emukit/blob/master/emukit/core/loop/user_function.py#L41). Mixed typed numpy arrays are only possible as [structured arrays](https://docs.scipy.org/doc/numpy-1.10.1/user/basics.rec.html) afaik. Same applies in GPyOpt\r\n2. We use model representation as objective function input. E.g. [here in sensitivity analysis](https://github.com/amzn/emukit/blob/master/emukit/sensitivity/monte_carlo/monte_carlo_sensitivity.py#L87), the result is quite weird e.g. if you get n sensitivity effects for the one-hot encoded feature dimensions of a categorical parameter. But for e.g. string objective representations this algorithm would also not work the way it is.\r\n3. There is no generic way to transform objective to model representation and back. GPyOpt provides this on the parameter and space level, which is quite handy!\r\n\r\nDo I've got a conceptual misunderstanding or are these real issues? \r\n\r\nThanks in advance. \r\nCheers, David\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/EmuKit/emukit/issues/184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/EmuKit/emukit/issues/184/timeline","performed_via_github_app":null,"state_reason":null}