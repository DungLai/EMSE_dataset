{"url":"https://api.github.com/repos/EmuKit/emukit/issues/321","repository_url":"https://api.github.com/repos/EmuKit/emukit","labels_url":"https://api.github.com/repos/EmuKit/emukit/issues/321/labels{/name}","comments_url":"https://api.github.com/repos/EmuKit/emukit/issues/321/comments","events_url":"https://api.github.com/repos/EmuKit/emukit/issues/321/events","html_url":"https://github.com/EmuKit/emukit/issues/321","id":729948984,"node_id":"MDU6SXNzdWU3Mjk5NDg5ODQ=","number":321,"title":">2 level NonLinearMultiFidelityModel incorrect prediction on levels above 2nd","user":{"login":"rns294","id":73502701,"node_id":"MDQ6VXNlcjczNTAyNzAx","avatar_url":"https://avatars.githubusercontent.com/u/73502701?v=4","gravatar_id":"","url":"https://api.github.com/users/rns294","html_url":"https://github.com/rns294","followers_url":"https://api.github.com/users/rns294/followers","following_url":"https://api.github.com/users/rns294/following{/other_user}","gists_url":"https://api.github.com/users/rns294/gists{/gist_id}","starred_url":"https://api.github.com/users/rns294/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rns294/subscriptions","organizations_url":"https://api.github.com/users/rns294/orgs","repos_url":"https://api.github.com/users/rns294/repos","events_url":"https://api.github.com/users/rns294/events{/privacy}","received_events_url":"https://api.github.com/users/rns294/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-26T22:21:55Z","updated_at":"2020-11-02T13:57:29Z","closed_at":"2020-11-02T13:57:29Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Running a test with `NonLinearMultiFidelityModel` using 3 levels of code. The first two level predictions are accurate but the 3rd level does not interpolate the training points and has a large error/variance. I setup a 3 level model using [similar code from paraklas](https://github.com/paraklas/NARGP/blob/master/branin.py) that the emukit code was based on and was able to predict all 3 levels with high accuracy/low variance. \r\n\r\n> import numpy as np\r\n> \r\n> from emukit.multi_fidelity.convert_lists_to_array  import convert_x_list_to_array, convert_xy_lists_to_arrays\r\n> \r\n> from emukit.multi_fidelity.models.non_linear_multi_fidelity_model  import make_non_linear_kernels, NonLinearMultiFidelityModel\r\n> \r\n> import GPy\r\n> \r\n> from matplotlib import pyplot as plt\r\n> \r\n> np.random.seed(12345)\r\n> \r\n> \r\n> def fh(x):\r\n>     return (6*x-2)**2*np.sin(12*x-4)\r\n> \r\n> \r\n> def fm(x):\r\n>     return 0.4*fh(x)-x-1\r\n> \r\n> \r\n> def fl(x):\r\n>     return 0.5*fh(x)+10*(x-0.5)-(5)\r\n> \r\n> \r\n> Nts = 200\r\n> x_plot = np.linspace(0, 1, Nts)[:, None]\r\n> y_plot_l = fl(x_plot)\r\n> y_plot_m = fm(x_plot)\r\n> y_plot_h = fh(x_plot)\r\n> \r\n> n0, n1, n2 = 6, 15, 40\r\n> Xtrain = np.random.rand(100, 1)\r\n> idx = np.random.permutation(100)\r\n> \r\n> x_train_h = Xtrain[idx[0:n0], :]\r\n> x_train_m = Xtrain[idx[0:n1], :]\r\n> x_train_l = Xtrain[idx[0:n2], :]\r\n> \r\n> y_train_l = fl(x_train_l)\r\n> y_train_m = fm(x_train_m)\r\n> y_train_h = fh(x_train_h)\r\n> \r\n> X_train, Y_train = convert_xy_lists_to_arrays([x_train_l, x_train_m,  x_train_h], [y_train_l, y_train_m, y_train_h])\r\n> \r\n> X_plot = convert_x_list_to_array([x_plot, x_plot, x_plot])\r\n> X_plot_l = X_plot[:len(x_plot)]\r\n> X_plot_m = X_plot[len(x_plot):-len(x_plot)]\r\n> X_plot_h = X_plot[-len(x_plot):]\r\n> \r\n> plt.figure(figsize=(12, 8))\r\n> plt.plot(x_plot, y_plot_l, 'b')\r\n> plt.plot(x_plot, y_plot_m, 'r')\r\n> plt.plot(x_plot, y_plot_h, 'k')\r\n> plt.scatter(x_train_l, y_train_l, color='b', s=40)\r\n> plt.scatter(x_train_m, y_train_m, color='r', s=40)\r\n> plt.scatter(x_train_h, y_train_h, color='k', s=40)\r\n> plt.ylabel('f (x)')\r\n> plt.xlabel('x')\r\n> plt.legend(['Low fidelity', 'Mid fidelity', 'High fidelity'])\r\n> \r\n> base_kernel = GPy.kern.RBF\r\n> kernels = make_non_linear_kernels(base_kernel, 3, X_train.shape[1] - 1)\r\n> nonlin_mf_model = NonLinearMultiFidelityModel(X_train, Y_train, n_fidelities=3, kernels=kernels, verbose=True, optimization_restarts=10)\r\n> for m in nonlin_mf_model.models:\r\n>     m.Gaussian_noise.variance.fix(1e-6)\r\n> \r\n> nonlin_mf_model.optimize()\r\n> \r\n> hf_mean_nonlin_mf_model, hf_var_nonlin_mf_model = nonlin_mf_model.predict(X_plot_h)\r\n> hf_std_nonlin_mf_model = np.sqrt(hf_var_nonlin_mf_model)\r\n> \r\n> mf_mean_nonlin_mf_model, mf_var_nonlin_mf_model = nonlin_mf_model.predict(X_plot_m)\r\n> mf_std_nonlin_mf_model = np.sqrt(mf_var_nonlin_mf_model)\r\n> \r\n> lf_mean_nonlin_mf_model, lf_var_nonlin_mf_model = nonlin_mf_model.predict(X_plot_l)\r\n> lf_std_nonlin_mf_model = np.sqrt(lf_var_nonlin_mf_model)\r\n> \r\n> \r\n> error = np.linalg.norm(y_plot_l - lf_mean_nonlin_mf_model) / np.linalg.norm(y_plot_l)\r\n> print(error)\r\n> \r\n> error = np.linalg.norm(y_plot_m - mf_mean_nonlin_mf_model) / np.linalg.norm(y_plot_m)\r\n> print(error)\r\n> \r\n> error = np.linalg.norm(y_plot_h - hf_mean_nonlin_mf_model) /  np.linalg.norm(y_plot_h)\r\n> print(error)\r\n> \r\n> plt.plot(x_plot, hf_mean_nonlin_mf_model, 'g--', linewidth=3)\r\n> plt.plot(x_plot, mf_mean_nonlin_mf_model, 'm--', linewidth=3)\r\n> plt.plot(x_plot, lf_mean_nonlin_mf_model, 'y--', linewidth=3)","closed_by":{"login":"rns294","id":73502701,"node_id":"MDQ6VXNlcjczNTAyNzAx","avatar_url":"https://avatars.githubusercontent.com/u/73502701?v=4","gravatar_id":"","url":"https://api.github.com/users/rns294","html_url":"https://github.com/rns294","followers_url":"https://api.github.com/users/rns294/followers","following_url":"https://api.github.com/users/rns294/following{/other_user}","gists_url":"https://api.github.com/users/rns294/gists{/gist_id}","starred_url":"https://api.github.com/users/rns294/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rns294/subscriptions","organizations_url":"https://api.github.com/users/rns294/orgs","repos_url":"https://api.github.com/users/rns294/repos","events_url":"https://api.github.com/users/rns294/events{/privacy}","received_events_url":"https://api.github.com/users/rns294/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/EmuKit/emukit/issues/321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/EmuKit/emukit/issues/321/timeline","performed_via_github_app":null,"state_reason":"completed"}