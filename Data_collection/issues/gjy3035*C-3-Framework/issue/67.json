{"url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/67","repository_url":"https://api.github.com/repos/gjy3035/C-3-Framework","labels_url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/67/labels{/name}","comments_url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/67/comments","events_url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/67/events","html_url":"https://github.com/gjy3035/C-3-Framework/issues/67","id":556461363,"node_id":"MDU6SXNzdWU1NTY0NjEzNjM=","number":67,"title":"Counting people","user":{"login":"vml-ds","id":60270656,"node_id":"MDQ6VXNlcjYwMjcwNjU2","avatar_url":"https://avatars.githubusercontent.com/u/60270656?v=4","gravatar_id":"","url":"https://api.github.com/users/vml-ds","html_url":"https://github.com/vml-ds","followers_url":"https://api.github.com/users/vml-ds/followers","following_url":"https://api.github.com/users/vml-ds/following{/other_user}","gists_url":"https://api.github.com/users/vml-ds/gists{/gist_id}","starred_url":"https://api.github.com/users/vml-ds/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vml-ds/subscriptions","organizations_url":"https://api.github.com/users/vml-ds/orgs","repos_url":"https://api.github.com/users/vml-ds/repos","events_url":"https://api.github.com/users/vml-ds/events{/privacy}","received_events_url":"https://api.github.com/users/vml-ds/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-01-28T20:51:29Z","updated_at":"2020-01-29T13:44:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! I am new on this vision computer stuff. I am applying your code, using pre-trained models on Shanghai test dataset part B, and I need the total count people on image. I already read your former answers about this topic, but I still don't find the right way to sum the pixels.\r\n\r\n# here is part of the code\r\npred_map = pred_map.cpu().data.numpy()[0, 0, :, :]\r\n# after this step, I understand that the pixels can be sumed, so...\r\ncount = np.sum(pred_map)\r\nprint(\"count: \", count)\r\npred = np.sum(pred_map)/100.0\r\nprint(\"pred: \", pred)\r\n\r\n\r\nbut I always get very different numbers (compared to GT) as result (the following is the first outcome from the first image):\r\n1.jpg\r\nGT: 22.829575\r\ncount: 80.07278\r\npred: 0.800727767944336\r\n\r\nWould you please, give me your feedback about this?\r\nThe point of all this is finally try this models, on a different dataset (predict).\r\n\r\nThanks in advanced!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/67/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/67/timeline","performed_via_github_app":null,"state_reason":null}