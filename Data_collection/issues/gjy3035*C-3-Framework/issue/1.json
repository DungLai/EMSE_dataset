{"url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/1","repository_url":"https://api.github.com/repos/gjy3035/C-3-Framework","labels_url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/1/comments","events_url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/1/events","html_url":"https://github.com/gjy3035/C-3-Framework/issues/1","id":398509344,"node_id":"MDU6SXNzdWUzOTg1MDkzNDQ=","number":1,"title":"关于SANet的复现问题。","user":{"login":"gjy3035","id":7986462,"node_id":"MDQ6VXNlcjc5ODY0NjI=","avatar_url":"https://avatars.githubusercontent.com/u/7986462?v=4","gravatar_id":"","url":"https://api.github.com/users/gjy3035","html_url":"https://github.com/gjy3035","followers_url":"https://api.github.com/users/gjy3035/followers","following_url":"https://api.github.com/users/gjy3035/following{/other_user}","gists_url":"https://api.github.com/users/gjy3035/gists{/gist_id}","starred_url":"https://api.github.com/users/gjy3035/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gjy3035/subscriptions","organizations_url":"https://api.github.com/users/gjy3035/orgs","repos_url":"https://api.github.com/users/gjy3035/repos","events_url":"https://api.github.com/users/gjy3035/events{/privacy}","received_events_url":"https://api.github.com/users/gjy3035/received_events","type":"User","site_admin":false},"labels":[{"id":1169444005,"node_id":"MDU6TGFiZWwxMTY5NDQ0MDA1","url":"https://api.github.com/repos/gjy3035/C-3-Framework/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-01-12T01:54:53Z","updated_at":"2019-01-19T03:48:26Z","closed_at":"2019-01-19T03:48:26Z","author_association":"OWNER","active_lock_reason":null,"body":"@wwwzxoe303com \r\n该网络目前仅能在pytorch0.4下训练。SANet的复现我已经基本完成。当前达到了mae12，mse19的结果。\r\n现在还遗留一个测试代码的问题。由于作者采用的评估方案，我没有时间实现，不知你是否有时间实现？\r\n\r\n根据作者提供的训练细节，无法训练网络。因此，我重新调整了训练参数。\r\nconfig文件如下：\r\n```import os\r\nfrom easydict import EasyDict as edict\r\nimport time\r\nimport torch\r\n\r\n# init\r\n__C = edict()\r\ncfg = __C\r\n\r\n#------------------------------TRAIN------------------------\r\n__C.SEED = 3035 # random seed,  for reporduction\r\n__C.DATASET = 'SHHB' # dataset selection: GCC, SHHA, SHHB, UCF50, QNRF, WE\r\n\r\nif __C.DATASET == 'UCF50':# only for UCF50\r\n\tfrom datasets.UCF50.setting import cfg_data\r\n\t__C.VAL_INDEX = cfg_data.VAL_INDEX \r\n\r\nif __C.DATASET == 'GCC':# only for GCC\r\n\tfrom datasets.GCC.setting import cfg_data\r\n\t__C.VAL_MODE = cfg_data.VAL_MODE \r\n\r\n\r\n__C.NET = 'SANet' # net selection: MCNN, VGG, VGG_DECODER, Res50, CSRNet, SANet\r\n\r\n__C.PRE_GCC = False # use the pretrained model on GCC dataset\r\n__C.PRE_GCC_MODEL = '' # path to model\r\n\r\n__C.GPU_ID = [0] # sigle gpu: [0], [1] ...; multi gpus: [0,1]\r\n\r\n# learning rate settings\r\n__C.LR = 1e-4 # learning rate\r\n__C.LR_DECAY = 1 # decay rate\r\n__C.LR_DECAY_START = -1 # when training epoch is more than it, the learning rate will be begin to decay\r\n__C.NUM_EPOCH_LR_DECAY = 1 # decay frequency\r\n__C.MAX_EPOCH = 3000\r\n\r\n# multi-task learning weights, no use for single model, such as MCNN, VGG, VGG_DECODER, Res50, CSRNet, and so on\r\n\r\n__C.LAMBDA_1 = 1e-3\r\n\r\n\r\n# print \r\n__C.PRINT_FREQ = 30\r\n\r\nnow = time.strftime(\"%m-%d_%H-%M\", time.localtime())\r\n\r\n__C.EXP_NAME = now \\\r\n\t\t\t + '_' + __C.DATASET \\\r\n             + '_' + __C.NET \\\r\n             + '_' + str(__C.LR)\r\n\r\nif __C.DATASET == 'UCF50':\r\n\t__C.EXP_NAME += '_' + str(__C.VAL_INDEX)\t\r\n\r\nif __C.DATASET == 'GCC':\r\n\t__C.EXP_NAME += '_' + __C.VAL_MODE\t\r\n\r\n__C.EXP_PATH = './exp' # the path of logs, checkpoints, and current codes\r\n\r\n\r\n#------------------------------VAL------------------------\r\n__C.VAL_DENSE_START = 200\r\n__C.VAL_FREQ = 10 # Before __C.VAL_DENSE_START epoches, the freq is set as __C.VAL_FREQ\r\n\r\n#------------------------------VIS------------------------\r\n__C.VISIBLE_NUM_IMGS = 1 #  must be 1 for training images with the different sizes\r\n\r\n\r\n\r\n#================================================================================\r\n#================================================================================\r\n#================================================================================  \r\n\r\n```\r\n\r\n上海B的setting文件如下：\r\n```from easydict import EasyDict as edict\r\n\r\n# init\r\n__C_SHHB = edict()\r\n\r\ncfg_data = __C_SHHB\r\n\r\n__C_SHHB.STD_SIZE = (768,1024)\r\n__C_SHHB.TRAIN_SIZE = (384,512)\r\n__C_SHHB.DATA_PATH = '../ProcessedData/shanghaitech_part_B'               \r\n\r\n__C_SHHB.MEAN_STD = ([0.452016860247, 0.447249650955, 0.431981861591],[0.23242045939, 0.224925786257, 0.221840232611])\r\n\r\n__C_SHHB.LABEL_FACTOR = 1\r\n__C_SHHB.LOG_PARA = 100.\r\n\r\n__C_SHHB.RESUME_MODEL = ''#model path\r\n__C_SHHB.TRAIN_BATCH_SIZE = 6 #imgs\r\n\r\n__C_SHHB.VAL_BATCH_SIZE = 1 # must be 1\r\n\r\n\r\n```","closed_by":{"login":"gjy3035","id":7986462,"node_id":"MDQ6VXNlcjc5ODY0NjI=","avatar_url":"https://avatars.githubusercontent.com/u/7986462?v=4","gravatar_id":"","url":"https://api.github.com/users/gjy3035","html_url":"https://github.com/gjy3035","followers_url":"https://api.github.com/users/gjy3035/followers","following_url":"https://api.github.com/users/gjy3035/following{/other_user}","gists_url":"https://api.github.com/users/gjy3035/gists{/gist_id}","starred_url":"https://api.github.com/users/gjy3035/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gjy3035/subscriptions","organizations_url":"https://api.github.com/users/gjy3035/orgs","repos_url":"https://api.github.com/users/gjy3035/repos","events_url":"https://api.github.com/users/gjy3035/events{/privacy}","received_events_url":"https://api.github.com/users/gjy3035/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/1/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/gjy3035/C-3-Framework/issues/1/timeline","performed_via_github_app":null,"state_reason":"completed"}