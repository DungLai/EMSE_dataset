{"url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/447","repository_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr","labels_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/447/labels{/name}","comments_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/447/comments","events_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/447/events","html_url":"https://github.com/neo-ai/neo-ai-dlr/issues/447","id":1473033110,"node_id":"I_kwDOCaWWGM5XzLOW","number":447,"title":"Planned support for Neuron runtime?","user":{"login":"michaelhagel","id":88730524,"node_id":"MDQ6VXNlcjg4NzMwNTI0","avatar_url":"https://avatars.githubusercontent.com/u/88730524?v=4","gravatar_id":"","url":"https://api.github.com/users/michaelhagel","html_url":"https://github.com/michaelhagel","followers_url":"https://api.github.com/users/michaelhagel/followers","following_url":"https://api.github.com/users/michaelhagel/following{/other_user}","gists_url":"https://api.github.com/users/michaelhagel/gists{/gist_id}","starred_url":"https://api.github.com/users/michaelhagel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michaelhagel/subscriptions","organizations_url":"https://api.github.com/users/michaelhagel/orgs","repos_url":"https://api.github.com/users/michaelhagel/repos","events_url":"https://api.github.com/users/michaelhagel/events{/privacy}","received_events_url":"https://api.github.com/users/michaelhagel/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-12-02T15:18:25Z","updated_at":"2022-12-02T15:18:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Is support planned for NEFF and the respective runtime? Currently writing a Triton DLR backend, and having the option for a unified backend entrypoint to the neuron runtime if INF1 instances are specified would be very nice.\r\n\r\nI know Neuron uses a TVM frontend, so I understand it is possibly best to just make a choice -- either use the raw TVM runtime exposed by DLR or compile your model via Neo, targeted at INF1 using Neuron. However, Neuron's usage of a TVM frontend is somewhat a blackbox, and doesn't allow directly passing TVM .so, etc. directly to `neuron-cc`. This limits use cases, such as classical ML models compiled via HummingbirdML to TVM.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/447/timeline","performed_via_github_app":null,"state_reason":null}