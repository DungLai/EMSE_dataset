{"url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/121","repository_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr","labels_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/121/labels{/name}","comments_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/121/comments","events_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/121/events","html_url":"https://github.com/neo-ai/neo-ai-dlr/issues/121","id":544103441,"node_id":"MDU6SXNzdWU1NDQxMDM0NDE=","number":121,"title":"Should libdlr_static.a contain all needed symbols from TVM and treelite?","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-12-31T06:33:28Z","updated_at":"2019-12-31T06:40:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"I tried to use `libdlr_static.a` instead of `libdlr.so` to compile my program which uses `CreateDLRModel` function.\r\nThe compilation works fine with `libdlr.so` but fails with `libdlr_static.a` because of `undefined reference` to `tvm::runtime::GraphRuntime`, etc.\r\nMakefile which I use to compile my programs:\r\n```\r\nall : run-style-trans-dlr run-style-trans-dlr2\r\n\r\nrun-style-trans-dlr2 : run-style-trans-dlr.o libdlr_static.a\r\n\tg++ -o run-style-trans-dlr2 run-style-trans-dlr.o libdlr_static.a -ldl -lpthread\r\n\r\nrun-style-trans-dlr : run-style-trans-dlr.o libdlr.so\r\n\tg++ -o run-style-trans-dlr run-style-trans-dlr.o -L. -ldlr -ldl -lpthread\r\n\r\nrun-style-trans-dlr.o : run-style-trans-dlr.cpp\r\n\tg++ -o run-style-trans-dlr.o -c -O3 -std=c++11 -march=native -mtune=native -I. run-style-trans-dlr.cpp\r\n\r\nclean :\r\n\trm -rf run-style-trans-dlr run-style-trans-dlr2 run-style-trans-dlr.o\r\n```\r\n\r\nlinking which uses `libdlr.so` works fine\r\n```\r\n$ make run-style-trans-dlr\r\ng++ -o run-style-trans-dlr.o -c -O3 -std=c++11 -march=native -mtune=native -I. run-style-trans-dlr.cpp\r\ng++ -o run-style-trans-dlr run-style-trans-dlr.o -L. -ldlr -ldl -lpthread\r\n```\r\n\r\nlinking which uses `libdlr_static.a` fails\r\n```\r\n$ make run-style-trans-dlr2\r\ng++ -o run-style-trans-dlr2 run-style-trans-dlr.o libdlr_static.a -ldl -lpthread\r\nlibdlr_static.a(dlr.cc.o): In function `RunDLRModel':\r\ndlr.cc:(.text+0x2f8): undefined reference to `TVMAPIHandleException(std::runtime_error const&)'\r\nlibdlr_static.a(dlr.cc.o): In function `GetDLRBackend':\r\ndlr.cc:(.text+0x35e): undefined reference to `TVMAPIHandleException(std::runtime_error const&)'\r\nlibdlr_static.a(dlr.cc.o): In function `GetDLRVersion':\r\ndlr.cc:(.text+0x81b): undefined reference to `TVMAPIHandleException(std::runtime_error const&)'\r\nlibdlr_static.a(dlr.cc.o): In function `SetDLRNumThreads':\r\ndlr.cc:(.text+0xc87): undefined reference to `TVMAPIHandleException(std::runtime_error const&)'\r\nlibdlr_static.a(dlr.cc.o): In function `GetDLRNumWeights':\r\ndlr.cc:(.text+0x117d): undefined reference to `TVMAPIHandleException(std::runtime_error const&)'\r\nlibdlr_static.a(dlr.cc.o):dlr.cc:(.text+0x166d): more undefined references to `TVMAPIHandleException(std::runtime_error const&)' follow\r\nlibdlr_static.a(dlr.cc.o): In function `DLRGetLastError':\r\ndlr.cc:(.text+0x321): undefined reference to `TVMGetLastError'\r\nlibdlr_static.a(dlr_common.cc.o): In function `dlr::ListDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)':\r\ndlr_common.cc:(.text+0x3b4): undefined reference to `dmlc::io::FileSystem::GetInstance(dmlc::io::URI const&)'\r\nlibdlr_static.a(dlr_treelite.cc.o): In function `dlr::TreeliteModel::Run()':\r\ndlr_treelite.cc:(.text+0x2955): undefined reference to `TreelitePredictorPredictBatch'\r\ndlr_treelite.cc:(.text+0x2fb8): undefined reference to `TreeliteGetLastError'\r\nlibdlr_static.a(dlr_treelite.cc.o): In function `dlr::TreeliteModel::SetInput(char const*, long const*, float*, int)':\r\ndlr_treelite.cc:(.text+0x78bc): undefined reference to `TreeliteAssembleSparseBatch'\r\ndlr_treelite.cc:(.text+0x7b87): undefined reference to `TreeliteGetLastError'\r\nlibdlr_static.a(dlr_treelite.cc.o): In function `dlr::TreeliteModel::SetupTreeliteModule(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)':\r\ndlr_treelite.cc:(.text+0x8b4b): undefined reference to `TreelitePredictorLoad'\r\ndlr_treelite.cc:(.text+0x8f80): undefined reference to `TreelitePredictorQueryNumFeature'\r\ndlr_treelite.cc:(.text+0x9609): undefined reference to `TreeliteGetLastError'\r\ndlr_treelite.cc:(.text+0x9b8a): undefined reference to `TreeliteGetLastError'\r\ndlr_treelite.cc:(.text+0x9cfa): undefined reference to `TreelitePredictorQueryNumOutputGroup'\r\ndlr_treelite.cc:(.text+0xa390): undefined reference to `TreeliteGetLastError'\r\ndlr_treelite.cc:(.text+0xa9cb): undefined reference to `TreelitePredictorPredictInst'\r\ndlr_treelite.cc:(.text+0xac8d): undefined reference to `TreeliteGetLastError'\r\nlibdlr_static.a(dlr_tvm.cc.o): In function `dlr::TVMModel::GetWeightNames[abi:cxx11]() const':\r\ndlr_tvm.cc:(.text+0x1ad): undefined reference to `tvm::runtime::GraphRuntime::GetWeightNames[abi:cxx11]() const'\r\nlibdlr_static.a(dlr_tvm.cc.o): In function `dlr::TVMModel::Run()':\r\ndlr_tvm.cc:(.text+0xd8c): undefined reference to `tvm::runtime::ModuleNode::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)'\r\ndlr_tvm.cc:(.text+0xeb6): undefined reference to `tvm::runtime::ExtTypeVTable::Get(int)'\r\nlibdlr_static.a(dlr_tvm.cc.o): In function `dlr::TVMModel::GetOutput(int, float*)':\r\ndlr_tvm.cc:(.text+0x104c): undefined reference to `tvm::runtime::ModuleNode::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)'\r\ndlr_tvm.cc:(.text+0x11ae): undefined reference to `tvm::runtime::ExtTypeVTable::Get(int)'\r\nlibdlr_static.a(dlr_tvm.cc.o): In function `dlr::TVMModel::GetInput(char const*, float*)':\r\ndlr_tvm.cc:(.text+0x154c): undefined reference to `tvm::runtime::GraphRuntime::GetInputIndex(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\ndlr_tvm.cc:(.text+0x156e): undefined reference to `tvm::runtime::GraphRuntime::GetInput(int) const'\r\ndlr_tvm.cc:(.text+0x15c1): undefined reference to `tvm::runtime::NDArray::CopyFromTo(DLTensor*, DLTensor*, void*)'\r\nlibdlr_static.a(dlr_tvm.cc.o): In function `dlr::TVMModel::SetInput(char const*, long const*, float*, int)':\r\ndlr_tvm.cc:(.text+0x31c2): undefined reference to `tvm::runtime::GraphRuntime::GetInputIndex(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\ndlr_tvm.cc:(.text+0x31e5): undefined reference to `tvm::runtime::GraphRuntime::GetInput(int) const'\r\ndlr_tvm.cc:(.text+0x3bf9): undefined reference to `tvm::runtime::ModuleNode::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)'\r\ndlr_tvm.cc:(.text+0x3d66): undefined reference to `tvm::runtime::ExtTypeVTable::Get(int)'\r\nlibdlr_static.a(dlr_tvm.cc.o): In function `dlr::TVMModel::SetupTVMModule(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)':\r\ndlr_tvm.cc:(.text+0x712a): undefined reference to `vtable for tvm::runtime::GraphRuntime'\r\ndlr_tvm.cc:(.text+0x74a1): undefined reference to `tvm::runtime::GraphRuntime::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::Module, std::vector<DLContext, std::allocator<DLContext> > const&)'\r\ndlr_tvm.cc:(.text+0x7642): undefined reference to `tvm::runtime::GraphRuntime::LoadParams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\ndlr_tvm.cc:(.text+0x7702): undefined reference to `tvm::runtime::GraphRuntime::NumInputs() const'\r\ndlr_tvm.cc:(.text+0x7745): undefined reference to `tvm::runtime::GraphRuntime::GetInputName[abi:cxx11](int) const'\r\ndlr_tvm.cc:(.text+0x7807): undefined reference to `tvm::runtime::GraphRuntime::GetWeightNames[abi:cxx11]() const'\r\ndlr_tvm.cc:(.text+0x7ed3): undefined reference to `tvm::runtime::GraphRuntime::NumOutputs() const'\r\ndlr_tvm.cc:(.text+0x7f30): undefined reference to `tvm::runtime::GraphRuntime::GetOutput(int) const'\r\ndlr_tvm.cc:(.text+0x8509): undefined reference to `tvm::runtime::Module::LoadFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibdlr_static.a(dlr_tvm.cc.o): In function `tvm::runtime::TVMRetValue::Clear()':\r\ndlr_tvm.cc:(.text._ZN3tvm7runtime11TVMRetValue5ClearEv[_ZN3tvm7runtime11TVMRetValue5ClearEv]+0x88): undefined reference to `tvm::runtime::ExtTypeVTable::Get(int)'\r\nlibdlr_static.a(dlr_tvm.cc.o): In function `tvm::runtime::GraphRuntime::~GraphRuntime()':\r\ndlr_tvm.cc:(.text._ZN3tvm7runtime12GraphRuntimeD2Ev[_ZN3tvm7runtime12GraphRuntimeD5Ev]+0x11): undefined reference to `vtable for tvm::runtime::GraphRuntime'\r\ndlr_tvm.cc:(.text._ZN3tvm7runtime12GraphRuntimeD2Ev[_ZN3tvm7runtime12GraphRuntimeD5Ev]+0xbbf): undefined reference to `vtable for tvm::runtime::ModuleNode'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:4: recipe for target 'run-style-trans-dlr2' failed\r\nmake: *** [run-style-trans-dlr2] Error 1\r\n```\r\n\r\n`neo-ai-dlr/build/lib` content and file sizes\r\n```\r\n-rwxrwxr-x 1 ubuntu ubuntu 1762400 Dec 31 03:50 libdlr.so\r\n-rw-rw-r-- 1 ubuntu ubuntu 1192284 Dec 31 03:50 libdlr_static.a\r\n-rw-rw-r-- 1 ubuntu ubuntu  259464 Dec 31 03:50 libtreelite_runtime_static.a\r\n```\r\n1. `libdlr_static.a` size is only 67% from `libdlr.so`\r\n2. why we need `libtreelite_runtime_static.a` here? Is it just intermediate archive created during build process which is needed to create libdlr libs?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neo-ai/neo-ai-dlr/issues/121/timeline","performed_via_github_app":null,"state_reason":null}