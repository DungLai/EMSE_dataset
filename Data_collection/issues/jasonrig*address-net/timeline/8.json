[{"url":"https://api.github.com/repos/jasonrig/address-net/issues/comments/532546972","html_url":"https://github.com/jasonrig/address-net/issues/8#issuecomment-532546972","issue_url":"https://api.github.com/repos/jasonrig/address-net/issues/8","id":532546972,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMjU0Njk3Mg==","user":{"login":"jasonrig","id":6635497,"node_id":"MDQ6VXNlcjY2MzU0OTc=","avatar_url":"https://avatars.githubusercontent.com/u/6635497?v=4","gravatar_id":"","url":"https://api.github.com/users/jasonrig","html_url":"https://github.com/jasonrig","followers_url":"https://api.github.com/users/jasonrig/followers","following_url":"https://api.github.com/users/jasonrig/following{/other_user}","gists_url":"https://api.github.com/users/jasonrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jasonrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasonrig/subscriptions","organizations_url":"https://api.github.com/users/jasonrig/orgs","repos_url":"https://api.github.com/users/jasonrig/repos","events_url":"https://api.github.com/users/jasonrig/events{/privacy}","received_events_url":"https://api.github.com/users/jasonrig/received_events","type":"User","site_admin":false},"created_at":"2019-09-18T06:53:47Z","updated_at":"2019-09-18T06:53:47Z","author_association":"OWNER","body":"This one fails mostly because it's not actually a street address, and the training data was exclusively composed of street addresses. Specifically, it assigns a probability to each letter of the address for each component of a street address (there are 22 possible categories that a letter could be assigned to, which are described in the README file). None of these are presently suitable for a GPO Box or any other non-street address, unfortunately. **So to directly answer your question, it would require substantial modifications and additional data.** _Probably_ the data would have to be synthetic for G/PO Boxes as I'm not aware of any freely available datasets for this.\r\n\r\nThe reason you got something strange for the street type (\"BROW\") is that of the collection of characters that the model assigned a class of \"street type\", the closet match to a known street type was BROW (based on the [Jaro-Winkler string similarity measure](https://en.wikipedia.org/wiki/Jaroâ€“Winkler_distance)). I'm going to take a stab and say that \"Box\" was though to to be the street type, which was then matched to BROW. This is the first time I've heard of this street type myself, but [apparently it's a thing](https://meteor.aihw.gov.au/content/index.phtml/itemId/429840).\r\n\r\nI'm going to close this issue as I consider it out of scope, but don't let this discourage you from working on any solutions if you feel so inclined. The reason I consider it out of scope for this project is that the overall objective was to leverage some freely available address data to train a classification model that's easier to handle than some unwieldy regex in view of solving problems like geolocation.\r\n\r\nOne suggestion for anyone (yourself, myself, or others who read this) going forward might be to introduce a new class of \"other\" so that you can at least confidently extract known parts like postcode, suburb, state, without falsely extracting street names, etc., when they aren't present. This might produce an output that looks something like the following for your example:\r\n```json\r\n{\r\n    \"other\": \"GPO Box 500606\",\r\n    \"locality_name\": \"Canberra\",\r\n    \"state\": \"ACT\",\r\n    \"postcode\": \"2004\"\r\n}\r\n```\r\nYou could then use some downstream processing (perhaps even a regex) to test for things like G/PO Boxes, etc.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/jasonrig/address-net/issues/comments/532546972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"jasonrig","id":6635497,"node_id":"MDQ6VXNlcjY2MzU0OTc=","avatar_url":"https://avatars.githubusercontent.com/u/6635497?v=4","gravatar_id":"","url":"https://api.github.com/users/jasonrig","html_url":"https://github.com/jasonrig","followers_url":"https://api.github.com/users/jasonrig/followers","following_url":"https://api.github.com/users/jasonrig/following{/other_user}","gists_url":"https://api.github.com/users/jasonrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jasonrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasonrig/subscriptions","organizations_url":"https://api.github.com/users/jasonrig/orgs","repos_url":"https://api.github.com/users/jasonrig/repos","events_url":"https://api.github.com/users/jasonrig/events{/privacy}","received_events_url":"https://api.github.com/users/jasonrig/received_events","type":"User","site_admin":false}},{"id":2642348693,"node_id":"MDExOkNsb3NlZEV2ZW50MjY0MjM0ODY5Mw==","url":"https://api.github.com/repos/jasonrig/address-net/issues/events/2642348693","actor":{"login":"jasonrig","id":6635497,"node_id":"MDQ6VXNlcjY2MzU0OTc=","avatar_url":"https://avatars.githubusercontent.com/u/6635497?v=4","gravatar_id":"","url":"https://api.github.com/users/jasonrig","html_url":"https://github.com/jasonrig","followers_url":"https://api.github.com/users/jasonrig/followers","following_url":"https://api.github.com/users/jasonrig/following{/other_user}","gists_url":"https://api.github.com/users/jasonrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jasonrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasonrig/subscriptions","organizations_url":"https://api.github.com/users/jasonrig/orgs","repos_url":"https://api.github.com/users/jasonrig/repos","events_url":"https://api.github.com/users/jasonrig/events{/privacy}","received_events_url":"https://api.github.com/users/jasonrig/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2019-09-18T06:53:47Z","state_reason":null,"performed_via_github_app":null},{"url":"https://api.github.com/repos/jasonrig/address-net/issues/comments/532589262","html_url":"https://github.com/jasonrig/address-net/issues/8#issuecomment-532589262","issue_url":"https://api.github.com/repos/jasonrig/address-net/issues/8","id":532589262,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMjU4OTI2Mg==","user":{"login":"NickCEChuah","id":55473576,"node_id":"MDQ6VXNlcjU1NDczNTc2","avatar_url":"https://avatars.githubusercontent.com/u/55473576?v=4","gravatar_id":"","url":"https://api.github.com/users/NickCEChuah","html_url":"https://github.com/NickCEChuah","followers_url":"https://api.github.com/users/NickCEChuah/followers","following_url":"https://api.github.com/users/NickCEChuah/following{/other_user}","gists_url":"https://api.github.com/users/NickCEChuah/gists{/gist_id}","starred_url":"https://api.github.com/users/NickCEChuah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NickCEChuah/subscriptions","organizations_url":"https://api.github.com/users/NickCEChuah/orgs","repos_url":"https://api.github.com/users/NickCEChuah/repos","events_url":"https://api.github.com/users/NickCEChuah/events{/privacy}","received_events_url":"https://api.github.com/users/NickCEChuah/received_events","type":"User","site_admin":false},"created_at":"2019-09-18T08:54:17Z","updated_at":"2019-09-18T08:54:17Z","author_association":"NONE","body":"Thanks. I'm not expecting you to change your program either just trying to\nhighlight potential gotchas.\nThe other type of non Street address is the RMB address (road side mail box\nfor rural properties) that will break your code too.\n\nhttps://en.m.wikipedia.org/wiki/Roadside_Mail_Box\n\nCheers\nNick\n\nOn Wed, 18 Sep 2019 at 4:53 pm, Jason Rigby <notifications@github.com>\nwrote:\n\n> This one fails mostly because it's not actually a street address, and the\n> training data was exclusively composed of street addresses. Specifically,\n> it assigns a probability to each letter of the address for each component\n> of a street address (there are 22 possible categories that a letter could\n> be assigned to, which are described in the README file). None of these are\n> presently suitable for a GPO Box or any other non-street address,\n> unfortunately. *So to directly answer your question, it would require\n> substantial modifications and additional data.* *Probably* the data would\n> have to be synthetic for G/PO Boxes as I'm not aware of any freely\n> available datasets for this.\n>\n> The reason you got something strange for the street type (\"BROW\") is that\n> of the collection of characters that the model assigned a class of \"street\n> type\", the closet match to a known street type was BROW (based on the Jaro-Winkler\n> string similarity measure\n> <https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance>). I'm going\n> to take a stab and say that \"Box\" was though to to be the street type,\n> which was then matched to BROW. This is the first time I've heard of this\n> street type myself, but apparently it's a thing\n> <https://meteor.aihw.gov.au/content/index.phtml/itemId/429840>.\n>\n> I'm going to close this issue as I consider it out of scope, but don't let\n> this discourage you from working on any solutions if you feel so inclined.\n> The reason I consider it out of scope for this project is that the overall\n> objective was to leverage some freely available address data to train a\n> classification model that's easier to handle than some unwieldy regex in\n> view of solving problems like geolocation.\n>\n> One suggestion for anyone (yourself, myself, or others who read this)\n> going forward might be to introduce a new class of \"other\" so that you can\n> at least confidently extract known parts like postcode, suburb, state,\n> without falsely extracting street names, etc., when they aren't present.\n> This might produce an output that looks something like the following for\n> your example:\n>\n> {\n>     \"other\": \"GPO Box 500606\",\n>     \"locality_name\": \"Canberra\",\n>     \"state\": \"ACT\",\n>     \"postcode\": \"2004\"\n> }\n>\n> You could then use some downstream processing (perhaps even a regex) to\n> test for things like G/PO Boxes, etc.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jasonrig/address-net/issues/8?email_source=notifications&email_token=ANHHLKC5Y5KOIPYVWNFX6PTQKHF7ZA5CNFSM4IXYTI52YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD67ALHA#issuecomment-532546972>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ANHHLKF73FXFDSUDF6ZJNILQKHF7ZANCNFSM4IXYTI5Q>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/jasonrig/address-net/issues/comments/532589262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"NickCEChuah","id":55473576,"node_id":"MDQ6VXNlcjU1NDczNTc2","avatar_url":"https://avatars.githubusercontent.com/u/55473576?v=4","gravatar_id":"","url":"https://api.github.com/users/NickCEChuah","html_url":"https://github.com/NickCEChuah","followers_url":"https://api.github.com/users/NickCEChuah/followers","following_url":"https://api.github.com/users/NickCEChuah/following{/other_user}","gists_url":"https://api.github.com/users/NickCEChuah/gists{/gist_id}","starred_url":"https://api.github.com/users/NickCEChuah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NickCEChuah/subscriptions","organizations_url":"https://api.github.com/users/NickCEChuah/orgs","repos_url":"https://api.github.com/users/NickCEChuah/repos","events_url":"https://api.github.com/users/NickCEChuah/events{/privacy}","received_events_url":"https://api.github.com/users/NickCEChuah/received_events","type":"User","site_admin":false}}]