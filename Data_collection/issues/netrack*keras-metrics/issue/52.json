{"url":"https://api.github.com/repos/netrack/keras-metrics/issues/52","repository_url":"https://api.github.com/repos/netrack/keras-metrics","labels_url":"https://api.github.com/repos/netrack/keras-metrics/issues/52/labels{/name}","comments_url":"https://api.github.com/repos/netrack/keras-metrics/issues/52/comments","events_url":"https://api.github.com/repos/netrack/keras-metrics/issues/52/events","html_url":"https://github.com/netrack/keras-metrics/issues/52","id":1358529203,"node_id":"I_kwDOCAYe9M5Q-YKz","number":52,"title":"sparse_categorical metrics do not work for tensorflow 2.7","user":{"login":"henghamao","id":4012446,"node_id":"MDQ6VXNlcjQwMTI0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/4012446?v=4","gravatar_id":"","url":"https://api.github.com/users/henghamao","html_url":"https://github.com/henghamao","followers_url":"https://api.github.com/users/henghamao/followers","following_url":"https://api.github.com/users/henghamao/following{/other_user}","gists_url":"https://api.github.com/users/henghamao/gists{/gist_id}","starred_url":"https://api.github.com/users/henghamao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henghamao/subscriptions","organizations_url":"https://api.github.com/users/henghamao/orgs","repos_url":"https://api.github.com/users/henghamao/repos","events_url":"https://api.github.com/users/henghamao/events{/privacy}","received_events_url":"https://api.github.com/users/henghamao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-09-01T09:22:10Z","updated_at":"2022-09-07T09:34:20Z","closed_at":"2022-09-07T09:34:03Z","author_association":"NONE","active_lock_reason":null,"body":"This is the great work!\r\nThough tf and keras have official recall() and precision() metrics, the metrics only worked for binary classfication.\r\nWe had a problem to classify three categories. And we would like to figure out the recall, precision metrics for the each class. In our model, the last layer is Dense layer with active function 'softmax'. The loss function is 'sparse_categorical_crossentropy', as we used class label for y.\r\n```\r\noutput = Dense(3, activation='softmax')(attention_mul)\r\nmodel.compile(loss=tf.keras.losses.sparse_categorical_crossentropy, optimizer='Adam', metrics=['accuracy'])\r\n```\r\nThe output of the prediction result is a vector of the probability of the each class, e.g. [0.3, 0.5, 0.2].To get the class label, we need to apply np.argmax() for the prediction results. And thus, the official recall and precision metrics do not work!\r\nI found there are sparse_categorical metrics in this project. I tried the following code to get the metric for the class label 1, and passed the metrics to model compile.\r\n```\r\nrecall_1 = km.sparse_categorical_recall(label=1)\r\nprecision_1 = km.sparse_categorical_precision(label=1)\r\nmetrics = ['accuracy', recall_1, precision_1]\r\n```\r\nHere are error messages we got:\r\n```\r\nEpoch 1/2000\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:00.580176 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:00.776434 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\n/usr/local/python3.8/lib/python3.8/site-packages/keras_metrics/metrics.py:26: UserWarning: `layer.updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.\r\n  return object.__getattribute__(self, name)\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:01.025048 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:01.229791 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:03.521585 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:03.548538 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:03.596331 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:03.622677 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:11.411682 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:11.435597 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:11.480696 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:`add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nW0901 17:11:11.506137 139653739816768 base_layer.py:1764] `add_update` `inputs` kwarg has been deprecated. You no longer need to pass a value to `inputs` as it is being automatically inferred.\r\nWARNING:tensorflow:Skipping full serialization of Keras layer <keras_metrics.metrics.recall object at 0x7f02f39d6d30>, because it is not built.\r\nW0901 17:11:14.928323 139653739816768 save_impl.py:71] Skipping full serialization of Keras layer <keras_metrics.metrics.recall object at 0x7f02f39d6d30>, because it is not built.\r\nWARNING:tensorflow:Skipping full serialization of Keras layer <keras_metrics.metrics.precision object at 0x7f02f2d1dac0>, because it is not built.\r\nW0901 17:11:14.929263 139653739816768 save_impl.py:71] Skipping full serialization of Keras layer <keras_metrics.metrics.precision object at 0x7f02f2d1dac0>, because it is not built.\r\nWARNING:tensorflow:Skipping full serialization of Keras layer <keras_metrics.metrics.true_positive object at 0x7f02f3701700>, because it is not built.\r\nW0901 17:11:14.929968 139653739816768 save_impl.py:71] Skipping full serialization of Keras layer <keras_metrics.metrics.true_positive object at 0x7f02f3701700>, because it is not built.\r\nWARNING:tensorflow:Skipping full serialization of Keras layer <keras_metrics.metrics.false_negative object at 0x7f02f36ca8e0>, because it is not built.\r\nW0901 17:11:14.930354 139653739816768 save_impl.py:71] Skipping full serialization of Keras layer <keras_metrics.metrics.false_negative object at 0x7f02f36ca8e0>, because it is not built.\r\nWARNING:tensorflow:Skipping full serialization of Keras layer <keras_metrics.metrics.true_positive object at 0x7f02f2dc4970>, because it is not built.\r\nW0901 17:11:14.930832 139653739816768 save_impl.py:71] Skipping full serialization of Keras layer <keras_metrics.metrics.true_positive object at 0x7f02f2dc4970>, because it is not built.\r\nWARNING:tensorflow:Skipping full serialization of Keras layer <keras_metrics.metrics.false_positive object at 0x7f02f2d24580>, because it is not built.\r\n\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 537, in <module>\r\n    tf.compat.v1.app.run()\r\n  File \"/usr/local/python3.8/lib/python3.8/site-packages/tensorflow/python/platform/app.py\", line 40, in run\r\n    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)\r\n  File \"/usr/local/python3.8/lib/python3.8/site-packages/absl/app.py\", line 303, in run\r\n    _run_main(main, args)\r\n  File \"/usr/local/python3.8/lib/python3.8/site-packages/absl/app.py\", line 251, in _run_main\r\n    sys.exit(main(argv))\r\n  File \"main.py\", line 476, in main\r\n    model.train(stock_data_list, test_ratio)\r\n  File \"/root/work/branch/infinity_stock3/models/model_attention_three_category.py\", line 101, in train\r\n    self.model.fit(train_g, steps_per_epoch=math.ceil(train_len / self.batch_size),\r\n  File \"/usr/local/python3.8/lib/python3.8/site-packages/keras/utils/traceback_utils.py\", line 67, in error_handler\r\n    raise e.with_traceback(filtered_tb) from None\r\n  File \"/usr/local/python3.8/lib/python3.8/site-packages/keras/saving/saved_model/layer_serialization.py\", line 53, in _python_properties_internal\r\n    metadata.update(get_serialized(self.obj))\r\nValueError: dictionary update sequence element #0 has length 1; 2 is required\r\n```","closed_by":{"login":"henghamao","id":4012446,"node_id":"MDQ6VXNlcjQwMTI0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/4012446?v=4","gravatar_id":"","url":"https://api.github.com/users/henghamao","html_url":"https://github.com/henghamao","followers_url":"https://api.github.com/users/henghamao/followers","following_url":"https://api.github.com/users/henghamao/following{/other_user}","gists_url":"https://api.github.com/users/henghamao/gists{/gist_id}","starred_url":"https://api.github.com/users/henghamao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henghamao/subscriptions","organizations_url":"https://api.github.com/users/henghamao/orgs","repos_url":"https://api.github.com/users/henghamao/repos","events_url":"https://api.github.com/users/henghamao/events{/privacy}","received_events_url":"https://api.github.com/users/henghamao/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/netrack/keras-metrics/issues/52/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/netrack/keras-metrics/issues/52/timeline","performed_via_github_app":null,"state_reason":"completed"}