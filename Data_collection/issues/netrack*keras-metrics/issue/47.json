{"url":"https://api.github.com/repos/netrack/keras-metrics/issues/47","repository_url":"https://api.github.com/repos/netrack/keras-metrics","labels_url":"https://api.github.com/repos/netrack/keras-metrics/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/netrack/keras-metrics/issues/47/comments","events_url":"https://api.github.com/repos/netrack/keras-metrics/issues/47/events","html_url":"https://github.com/netrack/keras-metrics/issues/47","id":500445830,"node_id":"MDU6SXNzdWU1MDA0NDU4MzA=","number":47,"title":"Metrics are not pickleable","user":{"login":"chrissype","id":33806291,"node_id":"MDQ6VXNlcjMzODA2Mjkx","avatar_url":"https://avatars.githubusercontent.com/u/33806291?v=4","gravatar_id":"","url":"https://api.github.com/users/chrissype","html_url":"https://github.com/chrissype","followers_url":"https://api.github.com/users/chrissype/followers","following_url":"https://api.github.com/users/chrissype/following{/other_user}","gists_url":"https://api.github.com/users/chrissype/gists{/gist_id}","starred_url":"https://api.github.com/users/chrissype/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrissype/subscriptions","organizations_url":"https://api.github.com/users/chrissype/orgs","repos_url":"https://api.github.com/users/chrissype/repos","events_url":"https://api.github.com/users/chrissype/events{/privacy}","received_events_url":"https://api.github.com/users/chrissype/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-09-30T18:32:15Z","updated_at":"2019-10-03T09:46:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Instantiated metrics are not pickleable, as `__init__` instantiates tf variables, which cannot be pickled.\r\n\r\nThis means that keras models trained with one of the metrics, and then saved, cannot be opened without knowing the dict structure for the 'custom_objects' argument when loading the model. Without using dill, one cannot pickle said dict, which would make delivering a complete model possible. Tools like mlflow are able to track and return complete keras models, however only if the model and custom_objects are both pickleable. \r\n\r\nI've come up with a moderately ugly solution that waits until a metric is called to instantiate any tf variables, let me know if you want to see it.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/netrack/keras-metrics/issues/47/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/netrack/keras-metrics/issues/47/timeline","performed_via_github_app":null,"state_reason":null}