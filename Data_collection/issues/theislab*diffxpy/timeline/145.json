[{"url":"https://api.github.com/repos/theislab/diffxpy/issues/comments/594452799","html_url":"https://github.com/theislab/diffxpy/issues/145#issuecomment-594452799","issue_url":"https://api.github.com/repos/theislab/diffxpy/issues/145","id":594452799,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDQ1Mjc5OQ==","user":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false},"created_at":"2020-03-04T10:53:59Z","updated_at":"2020-03-04T10:53:59Z","author_association":"MEMBER","body":"Resolved in private communication, the issue was a version conflict between numpy and dask.","reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/comments/594452799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false}},{"id":3095967378,"node_id":"MDExOkNsb3NlZEV2ZW50MzA5NTk2NzM3OA==","url":"https://api.github.com/repos/theislab/diffxpy/issues/events/3095967378","actor":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-03-04T10:53:59Z","state_reason":null,"performed_via_github_app":null},{"actor":{"login":"oligomyeggo","id":13051802,"node_id":"MDQ6VXNlcjEzMDUxODAy","avatar_url":"https://avatars.githubusercontent.com/u/13051802?v=4","gravatar_id":"","url":"https://api.github.com/users/oligomyeggo","html_url":"https://github.com/oligomyeggo","followers_url":"https://api.github.com/users/oligomyeggo/followers","following_url":"https://api.github.com/users/oligomyeggo/following{/other_user}","gists_url":"https://api.github.com/users/oligomyeggo/gists{/gist_id}","starred_url":"https://api.github.com/users/oligomyeggo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oligomyeggo/subscriptions","organizations_url":"https://api.github.com/users/oligomyeggo/orgs","repos_url":"https://api.github.com/users/oligomyeggo/repos","events_url":"https://api.github.com/users/oligomyeggo/events{/privacy}","received_events_url":"https://api.github.com/users/oligomyeggo/received_events","type":"User","site_admin":false},"created_at":"2021-04-22T16:16:16Z","updated_at":"2021-04-22T16:16:16Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/194","repository_url":"https://api.github.com/repos/theislab/diffxpy","labels_url":"https://api.github.com/repos/theislab/diffxpy/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/theislab/diffxpy/issues/194/comments","events_url":"https://api.github.com/repos/theislab/diffxpy/issues/194/events","html_url":"https://github.com/theislab/diffxpy/issues/194","id":841153874,"node_id":"MDU6SXNzdWU4NDExNTM4NzQ=","number":194,"title":"All arrays must be instances of SparseArray","user":{"login":"ealsop","id":26933142,"node_id":"MDQ6VXNlcjI2OTMzMTQy","avatar_url":"https://avatars.githubusercontent.com/u/26933142?v=4","gravatar_id":"","url":"https://api.github.com/users/ealsop","html_url":"https://github.com/ealsop","followers_url":"https://api.github.com/users/ealsop/followers","following_url":"https://api.github.com/users/ealsop/following{/other_user}","gists_url":"https://api.github.com/users/ealsop/gists{/gist_id}","starred_url":"https://api.github.com/users/ealsop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ealsop/subscriptions","organizations_url":"https://api.github.com/users/ealsop/orgs","repos_url":"https://api.github.com/users/ealsop/repos","events_url":"https://api.github.com/users/ealsop/events{/privacy}","received_events_url":"https://api.github.com/users/ealsop/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-03-25T17:29:42Z","updated_at":"2021-05-31T13:18:54Z","closed_at":"2021-05-31T13:18:54Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":139462224,"node_id":"MDEwOlJlcG9zaXRvcnkxMzk0NjIyMjQ=","name":"diffxpy","full_name":"theislab/diffxpy","private":false,"owner":{"login":"theislab","id":22319415,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIyMzE5NDE1","avatar_url":"https://avatars.githubusercontent.com/u/22319415?v=4","gravatar_id":"","url":"https://api.github.com/users/theislab","html_url":"https://github.com/theislab","followers_url":"https://api.github.com/users/theislab/followers","following_url":"https://api.github.com/users/theislab/following{/other_user}","gists_url":"https://api.github.com/users/theislab/gists{/gist_id}","starred_url":"https://api.github.com/users/theislab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theislab/subscriptions","organizations_url":"https://api.github.com/users/theislab/orgs","repos_url":"https://api.github.com/users/theislab/repos","events_url":"https://api.github.com/users/theislab/events{/privacy}","received_events_url":"https://api.github.com/users/theislab/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/theislab/diffxpy","description":"Differential expression analysis for single-cell RNA-seq data.","fork":false,"url":"https://api.github.com/repos/theislab/diffxpy","forks_url":"https://api.github.com/repos/theislab/diffxpy/forks","keys_url":"https://api.github.com/repos/theislab/diffxpy/keys{/key_id}","collaborators_url":"https://api.github.com/repos/theislab/diffxpy/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/theislab/diffxpy/teams","hooks_url":"https://api.github.com/repos/theislab/diffxpy/hooks","issue_events_url":"https://api.github.com/repos/theislab/diffxpy/issues/events{/number}","events_url":"https://api.github.com/repos/theislab/diffxpy/events","assignees_url":"https://api.github.com/repos/theislab/diffxpy/assignees{/user}","branches_url":"https://api.github.com/repos/theislab/diffxpy/branches{/branch}","tags_url":"https://api.github.com/repos/theislab/diffxpy/tags","blobs_url":"https://api.github.com/repos/theislab/diffxpy/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/theislab/diffxpy/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/theislab/diffxpy/git/refs{/sha}","trees_url":"https://api.github.com/repos/theislab/diffxpy/git/trees{/sha}","statuses_url":"https://api.github.com/repos/theislab/diffxpy/statuses/{sha}","languages_url":"https://api.github.com/repos/theislab/diffxpy/languages","stargazers_url":"https://api.github.com/repos/theislab/diffxpy/stargazers","contributors_url":"https://api.github.com/repos/theislab/diffxpy/contributors","subscribers_url":"https://api.github.com/repos/theislab/diffxpy/subscribers","subscription_url":"https://api.github.com/repos/theislab/diffxpy/subscription","commits_url":"https://api.github.com/repos/theislab/diffxpy/commits{/sha}","git_commits_url":"https://api.github.com/repos/theislab/diffxpy/git/commits{/sha}","comments_url":"https://api.github.com/repos/theislab/diffxpy/comments{/number}","issue_comment_url":"https://api.github.com/repos/theislab/diffxpy/issues/comments{/number}","contents_url":"https://api.github.com/repos/theislab/diffxpy/contents/{+path}","compare_url":"https://api.github.com/repos/theislab/diffxpy/compare/{base}...{head}","merges_url":"https://api.github.com/repos/theislab/diffxpy/merges","archive_url":"https://api.github.com/repos/theislab/diffxpy/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/theislab/diffxpy/downloads","issues_url":"https://api.github.com/repos/theislab/diffxpy/issues{/number}","pulls_url":"https://api.github.com/repos/theislab/diffxpy/pulls{/number}","milestones_url":"https://api.github.com/repos/theislab/diffxpy/milestones{/number}","notifications_url":"https://api.github.com/repos/theislab/diffxpy/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/theislab/diffxpy/labels{/name}","releases_url":"https://api.github.com/repos/theislab/diffxpy/releases{/id}","deployments_url":"https://api.github.com/repos/theislab/diffxpy/deployments","created_at":"2018-07-02T15:37:56Z","updated_at":"2023-01-13T22:49:58Z","pushed_at":"2022-10-11T02:41:42Z","git_url":"git://github.com/theislab/diffxpy.git","ssh_url":"git@github.com:theislab/diffxpy.git","clone_url":"https://github.com/theislab/diffxpy.git","svn_url":"https://github.com/theislab/diffxpy","homepage":"https://diffxpy.rtfd.io","size":1794,"stargazers_count":143,"watchers_count":143,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":21,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":102,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["bioinformatics","differential-expression","gene-set-enrichment","single-cell-rna-seq","tensorflow","transcriptomics"],"visibility":"public","forks":21,"open_issues":102,"watchers":143,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"Running de.test.wald using an un-normalized adata.X matrix with only 2 samples and ~5000 cells to test differential expression in scanpy. All libraries (numby, scanpy, diffxpy, sparse and dask) are updated the most recent versions.\r\n\r\ntest = de.test.wald(data=adata, formula_loc=\"~ 1 + Group\", factor_loc_totest=\"Group\")\r\n\r\nmake initally make this run at all I needed to include:\r\n\r\n%env SPARSE_AUTO_DENSIFY=1\r\n\r\nOr I would receive the error \"RuntimeError: Cannot convert a sparse array to dense automatically. To manually densify, use the todense method.\" mentioned in other issues.\r\n\r\nWith this solved I am now running through several iterations:\r\n\r\ntraining location model: False\r\ntraining scale model: True\r\niter   0: ll=74052044.544684\r\niter   1: ll=74052044.544684, converged: 0.00% (loc: 100.00%, scale update: False), in 0.00sec\r\niter   2: ll=53700205.003682, converged: 16.18% (loc: 16.18%, scale update: True), in 883.76sec\r\niter   3: ll=53700205.003682, converged: 16.18% (loc: 100.00%, scale update: False), in 0.01sec\r\niter   4: ll=53407203.078969, converged: 84.27% (loc: 84.27%, scale update: True), in 692.52sec\r\niter   5: ll=53407203.078969, converged: 84.27% (loc: 100.00%, scale update: False), in 0.00sec\r\niter   6: ll=53376103.605985, converged: 94.97% (loc: 94.97%, scale update: True), in 178.97sec\r\niter   7: ll=53376103.605985, converged: 94.97% (loc: 100.00%, scale update: False), in 0.00sec\r\nFitting 1842 dispersion models: (progress not available with multiprocessing)\r\n\r\nBut getting this error / trace back:\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-8-b4ac0989633a> in <module>\r\n----> 1 test = de.test.wald(data=adata, formula_loc=\"~ 1 + Group\", factor_loc_totest=\"Group\")\r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/diffxpy/testing/tests.py in wald(data, factor_loc_totest, coef_to_test, formula_loc, formula_scale, as_numeric, init_a, init_b, gene_names, sample_description, dmat_loc, dmat_scale, constraints_loc, constraints_scale, noise_model, size_factors, batch_size, backend, train_args, training_strategy, quick_scale, dtype, **kwargs)\r\n    719 \r\n    720     # Fit model.\r\n--> 721     model = _fit(\r\n    722         noise_model=noise_model,\r\n    723         data=data,\r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/diffxpy/testing/tests.py in _fit(noise_model, data, design_loc, design_scale, design_loc_names, design_scale_names, constraints_loc, constraints_scale, init_model, init_a, init_b, gene_names, size_factors, batch_size, backend, training_strategy, quick_scale, train_args, close_session, dtype)\r\n    242         pass\r\n    243 \r\n--> 244     estim.train_sequence(\r\n    245         training_strategy=training_strategy,\r\n    246         **train_args\r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/batchglm/models/base/estimator.py in train_sequence(self, training_strategy, **kwargs)\r\n    122                         (x, str(d[x]), str(kwargs[x]))\r\n    123                     )\r\n--> 124             self.train(**d, **kwargs)\r\n    125             logger.debug(\"Training sequence #%d complete\", idx + 1)\r\n    126 \r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/batchglm/train/numpy/base_glm/estimator.py in train(self, max_steps, method_b, update_b_freq, ftol_b, lr_b, max_iter_b, nproc, **kwargs)\r\n    115                     self.model.b_var = self.model.b_var + b_step\r\n    116                     # Reverse update by feature if update leads to worse loss:\r\n--> 117                     ll_proposal = - self.model.ll_byfeature_j(j=idx_update).compute()\r\n    118                     idx_bad_step = idx_update[np.where(ll_proposal > ll_current[idx_update])[0]]\r\n    119                     if isinstance(self.model.b_var, dask.array.core.Array):\r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/dask/base.py in compute(self, **kwargs)\r\n    281         dask.base.compute\r\n    282         \"\"\"\r\n--> 283         (result,) = compute(self, traverse=False, **kwargs)\r\n    284         return result\r\n    285 \r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/dask/base.py in compute(*args, **kwargs)\r\n    564 \r\n    565     results = schedule(dsk, keys, **kwargs)\r\n--> 566     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    567 \r\n    568 \r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/dask/base.py in <listcomp>(.0)\r\n    564 \r\n    565     results = schedule(dsk, keys, **kwargs)\r\n--> 566     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    567 \r\n    568 \r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/dask/array/core.py in finalize(results)\r\n   1081     while isinstance(results2, (tuple, list)):\r\n   1082         if len(results2) > 1:\r\n-> 1083             return concatenate3(results)\r\n   1084         else:\r\n   1085             results2 = results2[0]\r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/dask/array/core.py in concatenate3(arrays)\r\n   4747         try:\r\n   4748             x = unpack_singleton(arrays)\r\n-> 4749             return _concatenate2(arrays, axes=tuple(range(x.ndim)))\r\n   4750         except TypeError:\r\n   4751             pass\r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/dask/array/core.py in _concatenate2(arrays, axes)\r\n    348         type(max(arrays, key=lambda x: getattr(x, \"__array_priority__\", 0)))\r\n    349     )\r\n--> 350     return concatenate(arrays, axis=axes[0])\r\n    351 \r\n    352 \r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/sparse/_common.py in concatenate(arrays, axis, compressed_axes)\r\n   1253         from ._coo import concatenate as coo_concat\r\n   1254 \r\n-> 1255         return coo_concat(arrays, axis)\r\n   1256     else:\r\n   1257         from ._compressed import concatenate as gcxs_concat\r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/sparse/_coo/common.py in concatenate(arrays, axis)\r\n    159     from .core import COO\r\n    160 \r\n--> 161     check_consistent_fill_value(arrays)\r\n    162 \r\n    163     arrays = [x if isinstance(x, COO) else COO(x) for x in arrays]\r\n\r\n~/anaconda3/envs/scanpy/lib/python3.8/site-packages/sparse/_utils.py in check_consistent_fill_value(arrays)\r\n    468 \r\n    469     if not all(isinstance(s, SparseArray) for s in arrays):\r\n--> 470         raise ValueError(\"All arrays must be instances of SparseArray.\")\r\n    471     if len(arrays) == 0:\r\n    472         raise ValueError(\"At least one array required.\")\r\n\r\nValueError: All arrays must be instances of SparseArray.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/194/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/theislab/diffxpy/issues/194/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/theislab/diffxpy/issues/comments/1133763552","html_url":"https://github.com/theislab/diffxpy/issues/145#issuecomment-1133763552","issue_url":"https://api.github.com/repos/theislab/diffxpy/issues/145","id":1133763552,"node_id":"IC_kwDOCFAGUM5Dk9vg","user":{"login":"tinakeshav","id":32367302,"node_id":"MDQ6VXNlcjMyMzY3MzAy","avatar_url":"https://avatars.githubusercontent.com/u/32367302?v=4","gravatar_id":"","url":"https://api.github.com/users/tinakeshav","html_url":"https://github.com/tinakeshav","followers_url":"https://api.github.com/users/tinakeshav/followers","following_url":"https://api.github.com/users/tinakeshav/following{/other_user}","gists_url":"https://api.github.com/users/tinakeshav/gists{/gist_id}","starred_url":"https://api.github.com/users/tinakeshav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tinakeshav/subscriptions","organizations_url":"https://api.github.com/users/tinakeshav/orgs","repos_url":"https://api.github.com/users/tinakeshav/repos","events_url":"https://api.github.com/users/tinakeshav/events{/privacy}","received_events_url":"https://api.github.com/users/tinakeshav/received_events","type":"User","site_admin":false},"created_at":"2022-05-21T20:23:52Z","updated_at":"2022-05-21T20:23:52Z","author_association":"NONE","body":"I have the same problem. Could you kindly let me know what the version conflict was? ","reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/comments/1133763552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"tinakeshav","id":32367302,"node_id":"MDQ6VXNlcjMyMzY3MzAy","avatar_url":"https://avatars.githubusercontent.com/u/32367302?v=4","gravatar_id":"","url":"https://api.github.com/users/tinakeshav","html_url":"https://github.com/tinakeshav","followers_url":"https://api.github.com/users/tinakeshav/followers","following_url":"https://api.github.com/users/tinakeshav/following{/other_user}","gists_url":"https://api.github.com/users/tinakeshav/gists{/gist_id}","starred_url":"https://api.github.com/users/tinakeshav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tinakeshav/subscriptions","organizations_url":"https://api.github.com/users/tinakeshav/orgs","repos_url":"https://api.github.com/users/tinakeshav/repos","events_url":"https://api.github.com/users/tinakeshav/events{/privacy}","received_events_url":"https://api.github.com/users/tinakeshav/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/theislab/diffxpy/issues/comments/1135494631","html_url":"https://github.com/theislab/diffxpy/issues/145#issuecomment-1135494631","issue_url":"https://api.github.com/repos/theislab/diffxpy/issues/145","id":1135494631,"node_id":"IC_kwDOCFAGUM5DrkXn","user":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false},"created_at":"2022-05-24T07:10:14Z","updated_at":"2022-05-24T07:10:14Z","author_association":"MEMBER","body":"Did you check the pip installation messages when installing dask? That would be a good starting point.","reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/comments/1135494631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false}}]