{"url":"https://api.github.com/repos/theislab/diffxpy/issues/50","repository_url":"https://api.github.com/repos/theislab/diffxpy","labels_url":"https://api.github.com/repos/theislab/diffxpy/issues/50/labels{/name}","comments_url":"https://api.github.com/repos/theislab/diffxpy/issues/50/comments","events_url":"https://api.github.com/repos/theislab/diffxpy/issues/50/events","html_url":"https://github.com/theislab/diffxpy/issues/50","id":365901699,"node_id":"MDU6SXNzdWUzNjU5MDE2OTk=","number":50,"title":"de.test.design_matrix() not compatible with adata.obs","user":{"login":"LuckyMD","id":13019956,"node_id":"MDQ6VXNlcjEzMDE5OTU2","avatar_url":"https://avatars.githubusercontent.com/u/13019956?v=4","gravatar_id":"","url":"https://api.github.com/users/LuckyMD","html_url":"https://github.com/LuckyMD","followers_url":"https://api.github.com/users/LuckyMD/followers","following_url":"https://api.github.com/users/LuckyMD/following{/other_user}","gists_url":"https://api.github.com/users/LuckyMD/gists{/gist_id}","starred_url":"https://api.github.com/users/LuckyMD/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LuckyMD/subscriptions","organizations_url":"https://api.github.com/users/LuckyMD/orgs","repos_url":"https://api.github.com/users/LuckyMD/repos","events_url":"https://api.github.com/users/LuckyMD/events{/privacy}","received_events_url":"https://api.github.com/users/LuckyMD/received_events","type":"User","site_admin":false},"labels":[{"id":981698115,"node_id":"MDU6TGFiZWw5ODE2OTgxMTU=","url":"https://api.github.com/repos/theislab/diffxpy/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"Hoeze","id":1200058,"node_id":"MDQ6VXNlcjEyMDAwNTg=","avatar_url":"https://avatars.githubusercontent.com/u/1200058?v=4","gravatar_id":"","url":"https://api.github.com/users/Hoeze","html_url":"https://github.com/Hoeze","followers_url":"https://api.github.com/users/Hoeze/followers","following_url":"https://api.github.com/users/Hoeze/following{/other_user}","gists_url":"https://api.github.com/users/Hoeze/gists{/gist_id}","starred_url":"https://api.github.com/users/Hoeze/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hoeze/subscriptions","organizations_url":"https://api.github.com/users/Hoeze/orgs","repos_url":"https://api.github.com/users/Hoeze/repos","events_url":"https://api.github.com/users/Hoeze/events{/privacy}","received_events_url":"https://api.github.com/users/Hoeze/received_events","type":"User","site_admin":false},"assignees":[{"login":"Hoeze","id":1200058,"node_id":"MDQ6VXNlcjEyMDAwNTg=","avatar_url":"https://avatars.githubusercontent.com/u/1200058?v=4","gravatar_id":"","url":"https://api.github.com/users/Hoeze","html_url":"https://github.com/Hoeze","followers_url":"https://api.github.com/users/Hoeze/followers","following_url":"https://api.github.com/users/Hoeze/following{/other_user}","gists_url":"https://api.github.com/users/Hoeze/gists{/gist_id}","starred_url":"https://api.github.com/users/Hoeze/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hoeze/subscriptions","organizations_url":"https://api.github.com/users/Hoeze/orgs","repos_url":"https://api.github.com/users/Hoeze/repos","events_url":"https://api.github.com/users/Hoeze/events{/privacy}","received_events_url":"https://api.github.com/users/Hoeze/received_events","type":"User","site_admin":false},{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/theislab/diffxpy/milestones/4","html_url":"https://github.com/theislab/diffxpy/milestone/4","labels_url":"https://api.github.com/repos/theislab/diffxpy/milestones/4/labels","id":3557864,"node_id":"MDk6TWlsZXN0b25lMzU1Nzg2NA==","number":4,"title":"public_release","description":null,"creator":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":10,"state":"open","created_at":"2018-08-09T09:03:32Z","updated_at":"2019-08-25T19:04:57Z","due_on":null,"closed_at":null},"comments":10,"created_at":"2018-10-02T13:37:54Z","updated_at":"2018-10-16T10:03:30Z","closed_at":"2018-10-16T10:03:30Z","author_association":"NONE","active_lock_reason":null,"body":"function call:\r\n`dmat = de.test.design_matrix(sample_description=adata.obs, formula='~1+condition+sample+chip')`\r\n\r\nError:\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-12-e8604d8e6fbb> in <module>()\r\n----> 1 dmat = de.test.design_matrix(sample_description=adata_counts.obs, formula='~1+condition+sample+chip')\r\n\r\n~/github_packages/diffxpy/diffxpy/testing/base.py in design_matrix(data, sample_description, formula, dmat)\r\n   1349     if dmat is None:\r\n   1350         sample_description = _parse_sample_description(data, sample_description)\r\n-> 1351         dmat = data_utils.design_matrix(sample_description=sample_description, formula=formula)\r\n   1352 \r\n   1353         return dmat\r\n\r\n~/github_packages/batchglm/batchglm/data.py in design_matrix(sample_description, formula, as_categorical, return_type)\r\n    125                 sample_description[col] = sample_description[col].astype(\"category\")\r\n    126 \r\n--> 127     dmat = patsy.highlevel.dmatrix(formula, sample_description)\r\n    128 \r\n    129     if return_type == \"dataframe\":\r\n\r\n~/anaconda3/lib/python3.6/site-packages/patsy/highlevel.py in dmatrix(formula_like, data, eval_env, NA_action, return_type)\r\n    289     eval_env = EvalEnvironment.capture(eval_env, reference=1)\r\n    290     (lhs, rhs) = _do_highlevel_design(formula_like, data, eval_env,\r\n--> 291                                       NA_action, return_type)\r\n    292     if lhs.shape[1] != 0:\r\n    293         raise PatsyError(\"encountered outcome variables for a model \"\r\n\r\n~/anaconda3/lib/python3.6/site-packages/patsy/highlevel.py in _do_highlevel_design(formula_like, data, eval_env, NA_action, return_type)\r\n    163         return iter([data])\r\n    164     design_infos = _try_incr_builders(formula_like, data_iter_maker, eval_env,\r\n--> 165                                       NA_action)\r\n    166     if design_infos is not None:\r\n    167         return build_design_matrices(design_infos, data,\r\n\r\n~/anaconda3/lib/python3.6/site-packages/patsy/highlevel.py in _try_incr_builders(formula_like, data_iter_maker, eval_env, NA_action)\r\n     68                                       data_iter_maker,\r\n     69                                       eval_env,\r\n---> 70                                       NA_action)\r\n     71     else:\r\n     72         return None\r\n\r\n~/anaconda3/lib/python3.6/site-packages/patsy/build.py in design_matrix_builders(termlists, data_iter_maker, eval_env, NA_action)\r\n    694                                                    factor_states,\r\n    695                                                    data_iter_maker,\r\n--> 696                                                    NA_action)\r\n    697     # Now we need the factor infos, which encapsulate the knowledge of\r\n    698     # how to turn any given factor into a chunk of data:\r\n\r\n~/anaconda3/lib/python3.6/site-packages/patsy/build.py in _examine_factor_types(factors, factor_states, data_iter_maker, NA_action)\r\n    446                     cat_sniffers[factor] = CategoricalSniffer(NA_action,\r\n    447                                                               factor.origin)\r\n--> 448                 done = cat_sniffers[factor].sniff(value)\r\n    449                 if done:\r\n    450                     examine_needed.remove(factor)\r\n\r\n~/anaconda3/lib/python3.6/site-packages/patsy/categorical.py in sniff(self, data)\r\n    196         # fastpath to avoid doing an item-by-item iteration over boolean\r\n    197         # arrays, as requested by #44\r\n--> 198         if hasattr(data, \"dtype\") and safe_issubdtype(data.dtype, np.bool_):\r\n    199             self._level_set = set([True, False])\r\n    200             return True\r\n\r\n~/anaconda3/lib/python3.6/site-packages/patsy/util.py in safe_issubdtype(dt1, dt2)\r\n    679     if safe_is_pandas_categorical_dtype(dt1):\r\n    680         return False\r\n--> 681     return np.issubdtype(dt1, dt2)\r\n    682 \r\n    683 def test_safe_issubdtype():\r\n\r\n~/anaconda3/lib/python3.6/site-packages/numpy/core/numerictypes.py in issubdtype(arg1, arg2)\r\n    724     \"\"\"\r\n    725     if not issubclass_(arg1, generic):\r\n--> 726         arg1 = dtype(arg1).type\r\n    727     if not issubclass_(arg2, generic):\r\n    728         arg2_orig = arg2\r\n\r\nTypeError: data type not understood","closed_by":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/50/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/theislab/diffxpy/issues/50/timeline","performed_via_github_app":null,"state_reason":"completed"}