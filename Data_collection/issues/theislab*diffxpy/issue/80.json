{"url":"https://api.github.com/repos/theislab/diffxpy/issues/80","repository_url":"https://api.github.com/repos/theislab/diffxpy","labels_url":"https://api.github.com/repos/theislab/diffxpy/issues/80/labels{/name}","comments_url":"https://api.github.com/repos/theislab/diffxpy/issues/80/comments","events_url":"https://api.github.com/repos/theislab/diffxpy/issues/80/events","html_url":"https://github.com/theislab/diffxpy/issues/80","id":418472699,"node_id":"MDU6SXNzdWU0MTg0NzI2OTk=","number":80,"title":"versus_rest Wald test returns InvalidArgumentError","user":{"login":"peterpdu","id":35579127,"node_id":"MDQ6VXNlcjM1NTc5MTI3","avatar_url":"https://avatars.githubusercontent.com/u/35579127?v=4","gravatar_id":"","url":"https://api.github.com/users/peterpdu","html_url":"https://github.com/peterpdu","followers_url":"https://api.github.com/users/peterpdu/followers","following_url":"https://api.github.com/users/peterpdu/following{/other_user}","gists_url":"https://api.github.com/users/peterpdu/gists{/gist_id}","starred_url":"https://api.github.com/users/peterpdu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peterpdu/subscriptions","organizations_url":"https://api.github.com/users/peterpdu/orgs","repos_url":"https://api.github.com/users/peterpdu/repos","events_url":"https://api.github.com/users/peterpdu/events{/privacy}","received_events_url":"https://api.github.com/users/peterpdu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-07T19:22:02Z","updated_at":"2019-04-02T14:31:17Z","closed_at":"2019-04-02T14:31:17Z","author_association":"NONE","active_lock_reason":null,"body":"I'm running `de.test.versus_rest` using a scanpy anndata object input that has been clustered using the Leiden algorithm. I eventually get an InvalidArgumentError saying \"Input matrix was rank deficient or ill-conditioned.\" Has this error come up in your testing?\r\n\r\nI'm using diffxpy v0.5 and batchglm v0.5. The full traceback is below:\r\n\r\nCommand:\r\n```test = de.test.versus_rest(adata, grouping='leiden', test='wald', noise_model='nb', dtype='float64')```\r\n\r\nTraceback:\r\n```INFO:diffxpy.testing.base:Fitting model...\r\n/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/util/tf_inspect.py:75: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n  return _inspect.getargspec(target)\r\n/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/util/tf_inspect.py:75: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n  return _inspect.getargspec(target)\r\n/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/util/tf_inspect.py:75: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n  return _inspect.getargspec(target)\r\n/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/util/tf_inspect.py:75: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n  return _inspect.getargspec(target)\r\nINFO:tensorflow:Graph was finalized.\r\n2019-03-07 13:45:20.858824: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n2019-03-07 13:45:20.860698: I tensorflow/core/common_runtime/process_util.cc:69] Creating new thread pool with default inter op setting: 8. Tune using inter_op_parallelism_threads for best performance.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1333     try:\r\n-> 1334       return fn(*args)\r\n   1335     except errors.OpError as e:\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/client/session.py in _run_fn(feed_dict, fetch_list, target_list, options, run_metadata)\r\n   1318       return self._call_tf_sessionrun(\r\n-> 1319           options, feed_dict, fetch_list, target_list, run_metadata)\r\n   1320 \r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/client/session.py in _call_tf_sessionrun(self, options, feed_dict, fetch_list, target_list, run_metadata)\r\n   1406         self._session, options, feed_dict, fetch_list, target_list,\r\n-> 1407         run_metadata)\r\n   1408 \r\n\r\nInvalidArgumentError: Input matrix was rank deficient or ill-conditioned. Try setting fast=False or provide a larger l2_regularizer > 0.\r\n\t [[{{node MatrixSolveLs_2}} = MatrixSolveLs[T=DT_DOUBLE, fast=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](GatherV2_56000, ExpandDims_55998, MatrixSolveLs_2/l2_regularizer)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n<ipython-input-89-415beb4e5cb9> in <module>()\r\n----> 1 test = de.test.versus_rest(adata, grouping='leiden', test='wald', noise_model='nb', dtype='float64')\r\n\r\n~/computation/frameworks/diffxpy/diffxpy/testing/base.py in versus_rest(data, grouping, as_numeric, test, gene_names, sample_description, noise_model, pval_correction, size_factors, batch_size, training_strategy, quick_scale, dtype, keep_full_test_objs, **kwargs)\r\n   3651             size_factors=size_factors,\r\n   3652             dtype=dtype,\r\n-> 3653             **kwargs\r\n   3654         )\r\n   3655         pvals[0, i] = de_test_temp.pval\r\n\r\n~/computation/frameworks/diffxpy/diffxpy/testing/base.py in two_sample(data, grouping, as_numeric, test, gene_names, sample_description, noise_model, size_factors, batch_size, training_strategy, quick_scale, dtype, **kwargs)\r\n   3242             quick_scale=quick_scale,\r\n   3243             dtype=dtype,\r\n-> 3244             **kwargs\r\n   3245         )\r\n   3246     elif test.lower() == 'lrt':\r\n\r\n~/computation/frameworks/diffxpy/diffxpy/testing/base.py in wald(data, factor_loc_totest, coef_to_test, formula_loc, formula_scale, as_numeric, init_a, init_b, gene_names, sample_description, dmat_loc, dmat_scale, constraints_loc, constraints_scale, noise_model, size_factors, batch_size, training_strategy, quick_scale, dtype, **kwargs)\r\n   3013         quick_scale=quick_scale,\r\n   3014         dtype=dtype,\r\n-> 3015         **kwargs,\r\n   3016     )\r\n   3017 \r\n\r\n~/computation/frameworks/diffxpy/diffxpy/testing/base.py in _fit(noise_model, data, design_loc, design_scale, constraints_loc, constraints_scale, init_model, init_a, init_b, as_numeric, gene_names, size_factors, batch_size, training_strategy, quick_scale, close_session, dtype)\r\n   2593             training_strategy(estim)\r\n   2594         else:\r\n-> 2595             estim.train_sequence(training_strategy=training_strategy)\r\n   2596 \r\n   2597         if close_session:\r\n\r\n~/computation/frameworks/batchglm/batchglm/train/tf/base_glm_all/estimator.py in train_sequence(self, training_strategy)\r\n    344             self.model.model_vars.converged = False\r\n    345             logger.info(\"Beginning with training sequence #%d\", idx + 1)\r\n--> 346             self.train(**d)\r\n    347             logger.info(\"Training sequence #%d complete\", idx + 1)\r\n    348 \r\n\r\n~/computation/frameworks/batchglm/batchglm/train/tf/base_glm_all/estimator.py in train(self, learning_rate, convergence_criteria, loss_window_size, stopping_criteria, train_mu, train_r, use_batching, optim_algo, *args, **kwargs)\r\n    328                           loss=loss,\r\n    329                           train_op=train_op,\r\n--> 330                           **kwargs)\r\n    331 \r\n    332     def train_sequence(self, training_strategy):\r\n\r\n~/computation/frameworks/batchglm/batchglm/train/tf/base/estimator.py in train(self, use_stop_hooks, *args, **kwargs)\r\n    463                 tf.logging.info(\"Step: %d\\tloss: %f\" % (train_step, loss_res))\r\n    464         else:\r\n--> 465             super().train(*args, **kwargs)\r\n\r\n~/computation/frameworks/batchglm/batchglm/train/tf/base/estimator.py in train(self, learning_rate, feed_dict, convergence_criteria, loss_window_size, stopping_criteria, loss, train_op, *args, **kwargs)\r\n    241                 train_step, global_loss, _ = self.session.run(\r\n    242                     (self.model.global_step, loss, train_op),\r\n--> 243                     feed_dict=feed_dict\r\n    244                 )\r\n    245                 # Evaluate convergence metric:\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    669                           feed_dict=feed_dict,\r\n    670                           options=options,\r\n--> 671                           run_metadata=run_metadata)\r\n    672 \r\n    673   def run_step_fn(self, step_fn):\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n   1154                               feed_dict=feed_dict,\r\n   1155                               options=options,\r\n-> 1156                               run_metadata=run_metadata)\r\n   1157       except _PREEMPTION_ERRORS as e:\r\n   1158         logging.info('An error was raised. This may be due to a preemption in '\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\r\n   1253         raise six.reraise(*original_exc_info)\r\n   1254       else:\r\n-> 1255         raise six.reraise(*original_exc_info)\r\n   1256 \r\n   1257 \r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/six.py in reraise(tp, value, tb)\r\n    691             if value.__traceback__ is not tb:\r\n    692                 raise value.with_traceback(tb)\r\n--> 693             raise value\r\n    694         finally:\r\n    695             value = None\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\r\n   1238   def run(self, *args, **kwargs):\r\n   1239     try:\r\n-> 1240       return self._sess.run(*args, **kwargs)\r\n   1241     except _PREEMPTION_ERRORS:\r\n   1242       raise\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n   1310                                   feed_dict=feed_dict,\r\n   1311                                   options=options,\r\n-> 1312                                   run_metadata=run_metadata)\r\n   1313 \r\n   1314     for hook in self._hooks:\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\r\n   1074 \r\n   1075   def run(self, *args, **kwargs):\r\n-> 1076     return self._sess.run(*args, **kwargs)\r\n   1077 \r\n   1078   def run_step_fn(self, step_fn, raw_session, run_with_hooks):\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    927     try:\r\n    928       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 929                          run_metadata_ptr)\r\n    930       if run_metadata:\r\n    931         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1150     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1151       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1152                              feed_dict_tensor, options, run_metadata)\r\n   1153     else:\r\n   1154       results = []\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1326     if handle is None:\r\n   1327       return self._do_call(_run_fn, feeds, fetches, targets, options,\r\n-> 1328                            run_metadata)\r\n   1329     else:\r\n   1330       return self._do_call(_prun_fn, handle, feeds, fetches)\r\n\r\n~/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1346           pass\r\n   1347       message = error_interpolation.interpolate(message, self._graph)\r\n-> 1348       raise type(e)(node_def, op, message)\r\n   1349 \r\n   1350   def _extend_graph(self):\r\n\r\nInvalidArgumentError: Input matrix was rank deficient or ill-conditioned. Try setting fast=False or provide a larger l2_regularizer > 0.\r\n\t [[node MatrixSolveLs_2 (defined at /Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/base_glm/estimator_graph.py:398)  = MatrixSolveLs[T=DT_DOUBLE, fast=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](GatherV2_56000, ExpandDims_55998, MatrixSolveLs_2/l2_regularizer)]]\r\n\r\nCaused by op 'MatrixSolveLs_2', defined at:\r\n  File \"/Users/pdu/anaconda2/envs/py3/bin/ipython\", line 11, in <module>\r\n    sys.exit(start_ipython())\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/IPython/__init__.py\", line 125, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/IPython/terminal/ipapp.py\", line 356, in start\r\n    self.shell.mainloop()\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/IPython/terminal/interactiveshell.py\", line 485, in mainloop\r\n    self.interact()\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/IPython/terminal/interactiveshell.py\", line 476, in interact\r\n    self.run_cell(code, store_history=True)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2662, in run_cell\r\n    raw_cell, store_history, silent, shell_futures)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2785, in _run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2903, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2963, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-89-415beb4e5cb9>\", line 1, in <module>\r\n    test = de.test.versus_rest(adata, grouping='leiden', test='wald', noise_model='nb', dtype='float64')\r\n  File \"/Users/pdu/computation/frameworks/diffxpy/diffxpy/testing/base.py\", line 3653, in versus_rest\r\n    **kwargs\r\n  File \"/Users/pdu/computation/frameworks/diffxpy/diffxpy/testing/base.py\", line 3244, in two_sample\r\n    **kwargs\r\n  File \"/Users/pdu/computation/frameworks/diffxpy/diffxpy/testing/base.py\", line 3015, in wald\r\n    **kwargs,\r\n  File \"/Users/pdu/computation/frameworks/diffxpy/diffxpy/testing/base.py\", line 2583, in _fit\r\n    **constructor_args\r\n  File \"/Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/glm_nb/estimator.py\", line 53, in __init__\r\n    dtype=dtype\r\n  File \"/Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/base_glm_all/estimator.py\", line 206, in __init__\r\n    dtype=dtype\r\n  File \"/Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/base_glm_all/estimator_graph.py\", line 554, in __init__\r\n    dtype=dtype\r\n  File \"/Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/base_glm/estimator_graph.py\", line 682, in _run_trainer_init\r\n    train_r=train_scale\r\n  File \"/Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/base_glm/estimator_graph.py\", line 269, in __init__\r\n    psd=True  # TODO proove\r\n  File \"/Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/base_glm/estimator_graph.py\", line 321, in build_updates\r\n    psd=psd\r\n  File \"/Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/base_glm/estimator_graph.py\", line 398, in newton_type_update_full_byfeature\r\n    fast=psd and pkg_constants.CHOLESKY_LSTSQS\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/ops/linalg_ops.py\", line 305, in matrix_solve_ls\r\n    matrix, rhs, l2_regularizer, fast=fast, name=name)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/ops/gen_linalg_ops.py\", line 1297, in matrix_solve_ls\r\n    l2_regularizer=l2_regularizer, fast=fast, name=name)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3274, in create_op\r\n    op_def=op_def)\r\n  File \"/Users/pdu/anaconda2/envs/py3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1770, in __init__\r\n    self._traceback = tf_stack.extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): Input matrix was rank deficient or ill-conditioned. Try setting fast=False or provide a larger l2_regularizer > 0.\r\n\t [[node MatrixSolveLs_2 (defined at /Users/pdu/computation/frameworks/batchglm/batchglm/train/tf/base_glm/estimator_graph.py:398)  = MatrixSolveLs[T=DT_DOUBLE, fast=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](GatherV2_56000, ExpandDims_55998, MatrixSolveLs_2/l2_regularizer)]]```\r\n","closed_by":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/80/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/theislab/diffxpy/issues/80/timeline","performed_via_github_app":null,"state_reason":"completed"}