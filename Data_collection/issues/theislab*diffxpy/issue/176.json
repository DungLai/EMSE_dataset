{"url":"https://api.github.com/repos/theislab/diffxpy/issues/176","repository_url":"https://api.github.com/repos/theislab/diffxpy","labels_url":"https://api.github.com/repos/theislab/diffxpy/issues/176/labels{/name}","comments_url":"https://api.github.com/repos/theislab/diffxpy/issues/176/comments","events_url":"https://api.github.com/repos/theislab/diffxpy/issues/176/events","html_url":"https://github.com/theislab/diffxpy/issues/176","id":679083473,"node_id":"MDU6SXNzdWU2NzkwODM0NzM=","number":176,"title":".plot_vs_ttest() throws dask error","user":{"login":"le-ander","id":20015434,"node_id":"MDQ6VXNlcjIwMDE1NDM0","avatar_url":"https://avatars.githubusercontent.com/u/20015434?v=4","gravatar_id":"","url":"https://api.github.com/users/le-ander","html_url":"https://github.com/le-ander","followers_url":"https://api.github.com/users/le-ander/followers","following_url":"https://api.github.com/users/le-ander/following{/other_user}","gists_url":"https://api.github.com/users/le-ander/gists{/gist_id}","starred_url":"https://api.github.com/users/le-ander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/le-ander/subscriptions","organizations_url":"https://api.github.com/users/le-ander/orgs","repos_url":"https://api.github.com/users/le-ander/repos","events_url":"https://api.github.com/users/le-ander/events{/privacy}","received_events_url":"https://api.github.com/users/le-ander/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false},"assignees":[{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-08-14T11:07:06Z","updated_at":"2020-08-14T11:07:06Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"when i run `.plot_vs_ttest()` on my diffxpy object which I got from a wald test, I see the following error.\r\n\r\nI looked into this a bit and the culprit seems to be the `np.asarray()` call on the daskarray here I can run that same line without errors with the np.asarray() removed:\r\nhttps://github.com/theislab/diffxpy/blob/3689ea88fb18ec3fe0a6e7f7f6033859a378167e/diffxpy/testing/det.py#L1583\r\n\r\nthis is the content of my `waldresults.model_estim.x` which is used here:\r\n```\r\ndask.array<array, shape=(6594, 31449), dtype=float64, chunksize=(6594, 512), chunktype=numpy.ndarray>\r\n```\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-20-8161315ef952> in <module>\r\n----> 1 dxps_wald.plot_vs_ttest()\r\n\r\n~/.local/lib/python3.7/site-packages/diffxpy/testing/det.py in plot_vs_ttest(self, log10, show, save, suffix, return_axs)\r\n    888             data=self.model_estim.x / sf,\r\n    889             grouping=grouping,\r\n--> 890             gene_names=self.gene_ids,\r\n    891         )\r\n    892         if log10:\r\n\r\n~/.local/lib/python3.7/site-packages/diffxpy/testing/tests.py in t_test(data, grouping, gene_names, sample_description, is_logged, is_sig_zerovar)\r\n    861         gene_names=gene_names,\r\n    862         is_logged=is_logged,\r\n--> 863         is_sig_zerovar=is_sig_zerovar\r\n    864     )\r\n    865 \r\n\r\n~/.local/lib/python3.7/site-packages/diffxpy/testing/det.py in __init__(self, data, sample_description, grouping, gene_names, is_logged, is_sig_zerovar)\r\n   1581             var_x1 = np.asarray(np.mean(x1.power(2), axis=0)).flatten().astype(dtype=np.float) - np.square(mean_x1)\r\n   1582         else:\r\n-> 1583             var_x0 = np.asarray(np.var(x0, axis=0)).flatten().astype(dtype=np.float)\r\n   1584             var_x1 = np.asarray(np.var(x1, axis=0)).flatten().astype(dtype=np.float)\r\n   1585         self._var_geq_zero = np.logical_or(\r\n\r\n/opt/python/lib/python3.7/site-packages/numpy/core/_asarray.py in asarray(a, dtype, order)\r\n     83 \r\n     84     \"\"\"\r\n---> 85     return array(a, dtype, copy=False, order=order)\r\n     86 \r\n     87 \r\n\r\n/opt/python/lib/python3.7/site-packages/dask/array/core.py in __array__(self, dtype, **kwargs)\r\n   1335 \r\n   1336     def __array__(self, dtype=None, **kwargs):\r\n-> 1337         x = self.compute()\r\n   1338         if dtype and x.dtype != dtype:\r\n   1339             x = x.astype(dtype)\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/base.py in compute(self, **kwargs)\r\n    164         dask.base.compute\r\n    165         \"\"\"\r\n--> 166         (result,) = compute(self, traverse=False, **kwargs)\r\n    167         return result\r\n    168 \r\n\r\n/opt/python/lib/python3.7/site-packages/dask/base.py in compute(*args, **kwargs)\r\n    435     keys = [x.__dask_keys__() for x in collections]\r\n    436     postcomputes = [x.__dask_postcompute__() for x in collections]\r\n--> 437     results = schedule(dsk, keys, **kwargs)\r\n    438     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    439 \r\n\r\n/opt/python/lib/python3.7/site-packages/dask/threaded.py in get(dsk, result, cache, num_workers, pool, **kwargs)\r\n     82         get_id=_thread_get_id,\r\n     83         pack_exception=pack_exception,\r\n---> 84         **kwargs\r\n     85     )\r\n     86 \r\n\r\n/opt/python/lib/python3.7/site-packages/dask/local.py in get_async(apply_async, num_workers, dsk, result, cache, get_id, rerun_exceptions_locally, pack_exception, raise_exception, callbacks, dumps, loads, **kwargs)\r\n    484                         _execute_task(task, data)  # Re-execute locally\r\n    485                     else:\r\n--> 486                         raise_exception(exc, tb)\r\n    487                 res, worker_id = loads(res_info)\r\n    488                 state[\"cache\"][key] = res\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/local.py in reraise(exc, tb)\r\n    314     if exc.__traceback__ is not tb:\r\n    315         raise exc.with_traceback(tb)\r\n--> 316     raise exc\r\n    317 \r\n    318 \r\n\r\n/opt/python/lib/python3.7/site-packages/dask/local.py in execute_task(key, task_info, dumps, loads, get_id, pack_exception)\r\n    220     try:\r\n    221         task, data = loads(task_info)\r\n--> 222         result = _execute_task(task, data)\r\n    223         id = get_id()\r\n    224         result = dumps((result, id))\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/core.py in <genexpr>(.0)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/optimization.py in __call__(self, *args)\r\n    980         if not len(args) == len(self.inkeys):\r\n    981             raise ValueError(\"Expected %d args, got %d\" % (len(self.inkeys), len(args)))\r\n--> 982         return core.get(self.dsk, self.outkey, dict(zip(self.inkeys, args)))\r\n    983 \r\n    984     def __reduce__(self):\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/core.py in get(dsk, out, cache)\r\n    149     for key in toposort(dsk):\r\n    150         task = dsk[key]\r\n--> 151         result = _execute_task(task, cache)\r\n    152         cache[key] = result\r\n    153     result = _execute_task(out, cache)\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/utils.py in apply(func, args, kwargs)\r\n     28 def apply(func, args, kwargs=None):\r\n     29     if kwargs:\r\n---> 30         return func(*args, **kwargs)\r\n     31     else:\r\n     32         return func(*args)\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/array/reductions.py in moment_chunk(A, order, sum, numel, dtype, computing_meta, **kwargs)\r\n    635     with np.errstate(divide=\"ignore\", invalid=\"ignore\"):\r\n    636         u = total / n\r\n--> 637     xs = [sum((A - u) ** i, dtype=dtype, **kwargs) for i in range(2, order + 1)]\r\n    638     M = np.stack(xs, axis=-1)\r\n    639     return {\"total\": total, \"n\": n, \"M\": M}\r\n\r\n/opt/python/lib/python3.7/site-packages/dask/array/reductions.py in <listcomp>(.0)\r\n    635     with np.errstate(divide=\"ignore\", invalid=\"ignore\"):\r\n    636         u = total / n\r\n--> 637     xs = [sum((A - u) ** i, dtype=dtype, **kwargs) for i in range(2, order + 1)]\r\n    638     M = np.stack(xs, axis=-1)\r\n    639     return {\"total\": total, \"n\": n, \"M\": M}\r\n\r\n/opt/python/lib/python3.7/site-packages/numpy/lib/mixins.py in func(self, other)\r\n     23         if _disables_array_ufunc(other):\r\n     24             return NotImplemented\r\n---> 25         return ufunc(self, other)\r\n     26     func.__name__ = '__{}__'.format(name)\r\n     27     return func\r\n\r\n/opt/python/lib/python3.7/site-packages/sparse/_coo/core.py in __array_ufunc__(self, ufunc, method, *inputs, **kwargs)\r\n   1659 \r\n   1660         if method == \"__call__\":\r\n-> 1661             result = elemwise(ufunc, *inputs, **kwargs)\r\n   1662         elif method == \"reduce\":\r\n   1663             result = COO._reduce(ufunc, *inputs, **kwargs)\r\n\r\n/opt/python/lib/python3.7/site-packages/sparse/_coo/umath.py in elemwise(func, *args, **kwargs)\r\n     46     \"\"\"\r\n     47 \r\n---> 48     return _Elemwise(func, *args, **kwargs).get_result()\r\n     49 \r\n     50 \r\n\r\n/opt/python/lib/python3.7/site-packages/sparse/_coo/umath.py in __init__(self, func, *args, **kwargs)\r\n    444 \r\n    445         self._check_broadcast()\r\n--> 446         self._get_fill_value()\r\n    447 \r\n    448     def get_result(self):\r\n\r\n/opt/python/lib/python3.7/site-packages/sparse/_coo/umath.py in _get_fill_value(self)\r\n    538         ):\r\n    539             raise ValueError(\r\n--> 540                 \"Performing a mixed sparse-dense operation that would result in a dense array. \"\r\n    541                 \"Please make sure that func(sparse_fill_values, ndarrays) is a constant array.\"\r\n    542             )\r\n\r\nValueError: Performing a mixed sparse-dense operation that would result in a dense array. Please make sure that func(sparse_fill_values, ndarrays) is a constant array.\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/theislab/diffxpy/issues/176/timeline","performed_via_github_app":null,"state_reason":null}