{"url":"https://api.github.com/repos/theislab/diffxpy/issues/96","repository_url":"https://api.github.com/repos/theislab/diffxpy","labels_url":"https://api.github.com/repos/theislab/diffxpy/issues/96/labels{/name}","comments_url":"https://api.github.com/repos/theislab/diffxpy/issues/96/comments","events_url":"https://api.github.com/repos/theislab/diffxpy/issues/96/events","html_url":"https://github.com/theislab/diffxpy/issues/96","id":479730345,"node_id":"MDU6SXNzdWU0Nzk3MzAzNDU=","number":96,"title":"de.test.wilcoxon fails if dataset contains all-zero genes","user":{"login":"dburkhardt","id":8322751,"node_id":"MDQ6VXNlcjgzMjI3NTE=","avatar_url":"https://avatars.githubusercontent.com/u/8322751?v=4","gravatar_id":"","url":"https://api.github.com/users/dburkhardt","html_url":"https://github.com/dburkhardt","followers_url":"https://api.github.com/users/dburkhardt/followers","following_url":"https://api.github.com/users/dburkhardt/following{/other_user}","gists_url":"https://api.github.com/users/dburkhardt/gists{/gist_id}","starred_url":"https://api.github.com/users/dburkhardt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dburkhardt/subscriptions","organizations_url":"https://api.github.com/users/dburkhardt/orgs","repos_url":"https://api.github.com/users/dburkhardt/repos","events_url":"https://api.github.com/users/dburkhardt/events{/privacy}","received_events_url":"https://api.github.com/users/dburkhardt/received_events","type":"User","site_admin":false},"labels":[{"id":1500434326,"node_id":"MDU6TGFiZWwxNTAwNDM0MzI2","url":"https://api.github.com/repos/theislab/diffxpy/labels/waiting%20to%20close","name":"waiting to close","color":"c5def5","default":false,"description":"Issue is solved, waiting for feedback."}],"state":"open","locked":false,"assignee":{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false},"assignees":[{"login":"davidsebfischer","id":11200205,"node_id":"MDQ6VXNlcjExMjAwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/11200205?v=4","gravatar_id":"","url":"https://api.github.com/users/davidsebfischer","html_url":"https://github.com/davidsebfischer","followers_url":"https://api.github.com/users/davidsebfischer/followers","following_url":"https://api.github.com/users/davidsebfischer/following{/other_user}","gists_url":"https://api.github.com/users/davidsebfischer/gists{/gist_id}","starred_url":"https://api.github.com/users/davidsebfischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidsebfischer/subscriptions","organizations_url":"https://api.github.com/users/davidsebfischer/orgs","repos_url":"https://api.github.com/users/davidsebfischer/repos","events_url":"https://api.github.com/users/davidsebfischer/events{/privacy}","received_events_url":"https://api.github.com/users/davidsebfischer/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2019-08-12T16:09:25Z","updated_at":"2019-08-25T18:23:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Ran into this while using diffxpy checking DE between all clusters in a sample:\r\n\r\nUsage looks like:\r\n```python\r\nfor cluster in np.unique(metadata['clusters']):\r\n    in_cluster = metadata['clusters'] == cluster\r\n    curr_data = data.loc[in_cluster]\r\n    test = de.test.wilcoxon(\r\n               data=curr_data,\r\n               grouping=metadata['condition'].loc[in_cluster],\r\n               gene_names=curr_data.columns)\r\n```\r\n\r\nSolution here was to just remove all empty columns. Only issue is the the error that got raised was:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-115-87abff392829> in <module>\r\n      6                data=curr_data ** 2,\r\n      7                grouping=metadata['condition'].loc[in_cluster],\r\n----> 8                gene_names=curr_data.columns)\r\n      9     results = test.summary()\r\n     10     fn = '../files/differential_expression.{}.csv'.format(cluster)\r\n\r\n~/.local/lib/python3.7/site-packages/diffxpy/testing/base.py in wilcoxon(data, grouping, gene_names, sample_description, dtype)\r\n   2104         data=X.astype(dtype),\r\n   2105         grouping=grouping,\r\n-> 2106         gene_names=gene_names,\r\n   2107     )\r\n   2108 \r\n\r\n~/.local/lib/python3.7/site-packages/diffxpy/testing/base.py in __init__(self, data, grouping, gene_names)\r\n    802 \r\n    803         self._mean = np.mean(data, axis=0)\r\n--> 804         self._pval = stats.wilcoxon_test(x0=x0.data, x1=x1.data)\r\n    805         self._logfc = np.log(np.mean(x1, axis=0)) - np.log(np.mean(x0, axis=0)).data\r\n    806         q = self.qval\r\n\r\n~/.local/lib/python3.7/site-packages/diffxpy/stats/stats.py in wilcoxon_test(x0, x1)\r\n     69             y=x1[:, i].flatten(),\r\n     70             alternative='two-sided'\r\n---> 71         ).pvalue for i in range(x0.shape[1])\r\n     72     ])\r\n     73     return pvals\r\n\r\n~/.local/lib/python3.7/site-packages/diffxpy/stats/stats.py in <listcomp>(.0)\r\n     69             y=x1[:, i].flatten(),\r\n     70             alternative='two-sided'\r\n---> 71         ).pvalue for i in range(x0.shape[1])\r\n     72     ])\r\n     73     return pvals\r\n\r\n~/.local/lib/python3.7/site-packages/scipy/stats/stats.py in mannwhitneyu(x, y, use_continuity, alternative)\r\n   5684     T = tiecorrect(ranked)\r\n   5685     if T == 0:\r\n-> 5686         raise ValueError('All numbers are identical in mannwhitneyu')\r\n   5687     sd = np.sqrt(T * n1 * n2 * (n1+n2+1) / 12.0)\r\n   5688 \r\n\r\nValueError: All numbers are identical in mannwhitneyu\r\n```\r\n\r\nFor inexperienced users, they might not realize that they have an issue with some genes not being expression in some of the clusters. I would either raise a more informative error or throw a warning and handle removing the empty columns.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/96/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/theislab/diffxpy/issues/96/timeline","performed_via_github_app":null,"state_reason":null}