{"url":"https://api.github.com/repos/theislab/diffxpy/issues/213","repository_url":"https://api.github.com/repos/theislab/diffxpy","labels_url":"https://api.github.com/repos/theislab/diffxpy/issues/213/labels{/name}","comments_url":"https://api.github.com/repos/theislab/diffxpy/issues/213/comments","events_url":"https://api.github.com/repos/theislab/diffxpy/issues/213/events","html_url":"https://github.com/theislab/diffxpy/issues/213","id":1076818583,"node_id":"I_kwDOCFAGUM5ALvKX","number":213,"title":"de.test.versus_rest returns the wrong comparison for GLM tests","user":{"login":"eboileau","id":32674263,"node_id":"MDQ6VXNlcjMyNjc0MjYz","avatar_url":"https://avatars.githubusercontent.com/u/32674263?v=4","gravatar_id":"","url":"https://api.github.com/users/eboileau","html_url":"https://github.com/eboileau","followers_url":"https://api.github.com/users/eboileau/followers","following_url":"https://api.github.com/users/eboileau/following{/other_user}","gists_url":"https://api.github.com/users/eboileau/gists{/gist_id}","starred_url":"https://api.github.com/users/eboileau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eboileau/subscriptions","organizations_url":"https://api.github.com/users/eboileau/orgs","repos_url":"https://api.github.com/users/eboileau/repos","events_url":"https://api.github.com/users/eboileau/events{/privacy}","received_events_url":"https://api.github.com/users/eboileau/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-10T12:54:15Z","updated_at":"2022-01-22T14:12:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\n\r\n`de.test.versus_rest()` returns the wrong comparison for GLM tests (I have tested it with `test=wald`).\r\nThis is due to the comparison being made on the wrong coefficient, *i.e.* the test is made using ['Intercept', 'grouping[T.rest]'], resulting in `.summary_group(group=group)` returning the comparison rest *vs.* group, and not group *vs.* rest as expected.\r\n\r\nThe results appear to be correct for other tests, *e.g.* the Wilcoxon rank sum test. \r\nSee below for a detailed description.\r\n\r\n**Expected behavior**\r\nTo get the comparison group *vs.* rest, call `.summary_group(group=group)` on the output of `de.test.versus_rest`.\r\n\r\n**To Reproduce**\r\nI am using *10x_pbmc68k_reduced.h5ad* from `scanpy` datasets.\r\n\r\n```\r\nimport anndata\r\nimport scanpy as sc\r\nimport diffxpy.api as de\r\n\r\nadata = sc.read_h5ad('10x_pbmc68k_reduced.h5ad')\r\n\r\ndata = anndata.AnnData(\r\n    X=adata.raw.to_adata().X.todense(),\r\n    var=adata.var,\r\n    obs=adata.obs\r\n)\r\n\r\ntest_wald = de.test.versus_rest(\r\n    data=data.X,\r\n    grouping=\"bulk_labels\",\r\n    test=\"wald\",\r\n    noise_model=\"nb\",\r\n    gene_names=data.var_names,\r\n    sample_description=data.obs\r\n)\r\n```\r\n\r\nThis results in drastically different results than\r\n\r\n```\r\ntest_rank = de.test.versus_rest(\r\n    data=data.X,\r\n    grouping=\"bulk_labels\",\r\n    test=\"rank\",\r\n    gene_names=data.var_names,\r\n    sample_description=data.obs\r\n)\r\n```\r\n\r\nThe second are consistent with *e.g* https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html\r\n\r\n```\r\n# pick one cell type\r\ntest_rank.summary_group(group='Dendritic').sort_values(by=['qval', 'log2fc'], ascending=[True, False])\r\n\r\n# this compares to\r\nsc.tl.rank_genes_groups(data, 'bulk_labels', method='wilcoxon')\r\nsc.pl.rank_genes_groups(data, groups=['Dendritic'])\r\n```\r\n\r\nI can reproduce these results by doing the calls by hand, *e.g.* use *Dendritic* cells, and do the `de.test.two_sample` for *wald* and *rank* using `test_grouping = np.where(grouping == 'Dendritic', \"group\", \"rest\")`. I can also reproduce the results by actually doing the `de.test.wald` *vs.* `de.test.rank_test`.\r\n\r\nWith `de.test.wald`, we are in fact testing **grouping[T.rest] vs. Intercept**, and NOT something like **grouping[T.group] vs. Intercept/rest**. So when calling *e.g.* `.summary_group(group='Dendritic')`, we are not getting the comparison we expect to have (namely Dendritic *vs.* rest).\r\n\r\nFor `de.test.rank_test`, in `DifferentialExpressionTestRank`, this line\r\n\r\n```\r\nx0, x1 = split_x(data, grouping)\r\n# this returns groups in that order groups = pd.Series(grouping).unique()\r\n```\r\n\r\nreturns groups in the right order, namely *x0=rest*, and *x1=group*.\r\n\r\n\r\n**OS/version:**\r\n    \r\n - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux (ran on JupyterHub numpy backend)\r\n - Python 3.9.5\r\n - diffxpy v0.7.4+21.g12f1286 (install from git)\r\n\r\n - scanpy 1.7.2\r\n - anndata 0.7.8\r\n - numpy 1.20.3\r\n - scipy 1.7.3\r\n \r\n \r\n**Other questions**\r\nWhen I look at the fold changes from `.summary()` of `de.test.wald` and `de.test.rank_test`, they are not the same \r\nas those I get from the `.summary_group()` of `de.test.versus_rest`. This seem to be due to `.log_fold_change()` *vs.* \r\n`.log2_fold_change()`... but I'm not quite sure what's happening here. That would be great if you could clarify this.\r\n\r\n\r\n\r\n\r\n\r\nThanks for looking into this.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/theislab/diffxpy/issues/213/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/theislab/diffxpy/issues/213/timeline","performed_via_github_app":null,"state_reason":null}