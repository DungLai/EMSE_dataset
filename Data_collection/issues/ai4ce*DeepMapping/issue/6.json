{"url":"https://api.github.com/repos/ai4ce/DeepMapping/issues/6","repository_url":"https://api.github.com/repos/ai4ce/DeepMapping","labels_url":"https://api.github.com/repos/ai4ce/DeepMapping/issues/6/labels{/name}","comments_url":"https://api.github.com/repos/ai4ce/DeepMapping/issues/6/comments","events_url":"https://api.github.com/repos/ai4ce/DeepMapping/issues/6/events","html_url":"https://github.com/ai4ce/DeepMapping/issues/6","id":511922608,"node_id":"MDU6SXNzdWU1MTE5MjI2MDg=","number":6,"title":"About generating 3D ground truth for custom trajectory on the AVD dataset ","user":{"login":"WordBearerYI","id":22203484,"node_id":"MDQ6VXNlcjIyMjAzNDg0","avatar_url":"https://avatars.githubusercontent.com/u/22203484?v=4","gravatar_id":"","url":"https://api.github.com/users/WordBearerYI","html_url":"https://github.com/WordBearerYI","followers_url":"https://api.github.com/users/WordBearerYI/followers","following_url":"https://api.github.com/users/WordBearerYI/following{/other_user}","gists_url":"https://api.github.com/users/WordBearerYI/gists{/gist_id}","starred_url":"https://api.github.com/users/WordBearerYI/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WordBearerYI/subscriptions","organizations_url":"https://api.github.com/users/WordBearerYI/orgs","repos_url":"https://api.github.com/users/WordBearerYI/repos","events_url":"https://api.github.com/users/WordBearerYI/events{/privacy}","received_events_url":"https://api.github.com/users/WordBearerYI/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-10-24T12:49:26Z","updated_at":"2019-10-29T23:34:47Z","closed_at":"2019-10-29T23:34:47Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, Thanks for the nice work. I am quite new in this field, I have run into the problem of getting 3D ground truth for custom trajectory. I can use the following function \r\n\r\n      def transform_to_global_AVD(pose, obs_local):  \r\n      - transform obs local coordinate to global corrdinate frame . \r\n      - :param pose: <Bx3> <x,z,theta> y = 0 . \r\n      - :param obs_local: <BxLx3> (unorganized) or <BxHxWx3> (organized) . \r\n      - :return obs_global: <BxLx3> (unorganized) or <BxHxWx3> (organized) .    \r\n\r\non estimated pose (B*3)<x,z,theta> which was obtained by L-NET.  \r\n\r\nHowever, the ground truth pose has the size of (B*6).  So I treated it as <x,y,z,dx,dy,dz> and transform it into <x,z,theta>:\r\n\r\n`\r\n  gt_angle_y \r\n  =np.arctan2(np.sqrt(gt_pose[:,3]*gt_pose[:,3]+gt_pose[:,5]*gt_pose[:,5]),gt_pose[:,4])\r\n  gt_pose_xzth = np.vstack((gt_pose[:,0],gt_pose[:,2],gt_angle_y)).transpose()\r\n` \r\n\r\nHowever, the result is not correct.  I also tried to use a translation matrix and three rotation matrixes along each axis. It also failed. How can I do this? ","closed_by":{"login":"WordBearerYI","id":22203484,"node_id":"MDQ6VXNlcjIyMjAzNDg0","avatar_url":"https://avatars.githubusercontent.com/u/22203484?v=4","gravatar_id":"","url":"https://api.github.com/users/WordBearerYI","html_url":"https://github.com/WordBearerYI","followers_url":"https://api.github.com/users/WordBearerYI/followers","following_url":"https://api.github.com/users/WordBearerYI/following{/other_user}","gists_url":"https://api.github.com/users/WordBearerYI/gists{/gist_id}","starred_url":"https://api.github.com/users/WordBearerYI/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WordBearerYI/subscriptions","organizations_url":"https://api.github.com/users/WordBearerYI/orgs","repos_url":"https://api.github.com/users/WordBearerYI/repos","events_url":"https://api.github.com/users/WordBearerYI/events{/privacy}","received_events_url":"https://api.github.com/users/WordBearerYI/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ai4ce/DeepMapping/issues/6/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ai4ce/DeepMapping/issues/6/timeline","performed_via_github_app":null,"state_reason":"completed"}