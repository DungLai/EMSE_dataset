{"url":"https://api.github.com/repos/logictensornetworks/logictensornetworks/issues/31","repository_url":"https://api.github.com/repos/logictensornetworks/logictensornetworks","labels_url":"https://api.github.com/repos/logictensornetworks/logictensornetworks/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/logictensornetworks/logictensornetworks/issues/31/comments","events_url":"https://api.github.com/repos/logictensornetworks/logictensornetworks/issues/31/events","html_url":"https://github.com/logictensornetworks/logictensornetworks/issues/31","id":1348961593,"node_id":"I_kwDOCFoAF85QZ4U5","number":31,"title":"Add a ltn.Predicate constructor that takes in a logits model","user":{"login":"sbadredd","id":43364643,"node_id":"MDQ6VXNlcjQzMzY0NjQz","avatar_url":"https://avatars.githubusercontent.com/u/43364643?v=4","gravatar_id":"","url":"https://api.github.com/users/sbadredd","html_url":"https://github.com/sbadredd","followers_url":"https://api.github.com/users/sbadredd/followers","following_url":"https://api.github.com/users/sbadredd/following{/other_user}","gists_url":"https://api.github.com/users/sbadredd/gists{/gist_id}","starred_url":"https://api.github.com/users/sbadredd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sbadredd/subscriptions","organizations_url":"https://api.github.com/users/sbadredd/orgs","repos_url":"https://api.github.com/users/sbadredd/repos","events_url":"https://api.github.com/users/sbadredd/events{/privacy}","received_events_url":"https://api.github.com/users/sbadredd/received_events","type":"User","site_admin":false},"labels":[{"id":986963946,"node_id":"MDU6TGFiZWw5ODY5NjM5NDY=","url":"https://api.github.com/repos/logictensornetworks/logictensornetworks/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"sbadredd","id":43364643,"node_id":"MDQ6VXNlcjQzMzY0NjQz","avatar_url":"https://avatars.githubusercontent.com/u/43364643?v=4","gravatar_id":"","url":"https://api.github.com/users/sbadredd","html_url":"https://github.com/sbadredd","followers_url":"https://api.github.com/users/sbadredd/followers","following_url":"https://api.github.com/users/sbadredd/following{/other_user}","gists_url":"https://api.github.com/users/sbadredd/gists{/gist_id}","starred_url":"https://api.github.com/users/sbadredd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sbadredd/subscriptions","organizations_url":"https://api.github.com/users/sbadredd/orgs","repos_url":"https://api.github.com/users/sbadredd/repos","events_url":"https://api.github.com/users/sbadredd/events{/privacy}","received_events_url":"https://api.github.com/users/sbadredd/received_events","type":"User","site_admin":false},"assignees":[{"login":"sbadredd","id":43364643,"node_id":"MDQ6VXNlcjQzMzY0NjQz","avatar_url":"https://avatars.githubusercontent.com/u/43364643?v=4","gravatar_id":"","url":"https://api.github.com/users/sbadredd","html_url":"https://github.com/sbadredd","followers_url":"https://api.github.com/users/sbadredd/followers","following_url":"https://api.github.com/users/sbadredd/following{/other_user}","gists_url":"https://api.github.com/users/sbadredd/gists{/gist_id}","starred_url":"https://api.github.com/users/sbadredd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sbadredd/subscriptions","organizations_url":"https://api.github.com/users/sbadredd/orgs","repos_url":"https://api.github.com/users/sbadredd/repos","events_url":"https://api.github.com/users/sbadredd/events{/privacy}","received_events_url":"https://api.github.com/users/sbadredd/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-08-24T06:58:58Z","updated_at":"2022-08-24T07:33:14Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"## Constructors for `ltn.Predicate`\r\n \r\nThe constructor for `ltn.Predicate` accepts a model that outputs one truth degree in [0,1].\r\n\r\n```python\r\nclass ModelThatOutputsATruthDegree(tf.keras.Model):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.dense1 = tf.keras.layers.Dense(5, activation=tf.nn.relu)\r\n        self.dense2 = tf.keras.layers.Dense(1, activation=tf.nn.sigmoid) # returns one value in [0,1]\r\n\r\n    def call(self, x):\r\n        x = self.dense1(x)\r\n        return self.dense2(x)\r\n\r\nmodel = ModelThatOutputsATruthDegree()\r\nP1 = ltn.Predicate(model)\r\nP1(x) # -> call with a ltn Variable\r\n```\r\n\r\n## Issue\r\nMany models output several values simultaneously. For example, a model for the predicate `P2` classifying images `x` into n classes `type_1`, ..., `type_n` will likely output n logits using the same hidden layers. \r\n\r\nEventually, we would expect to call the corresponding predicate using the syntax `P2(x,type)`. This requires two additional steps:\r\n1. Transforming the logits into values in [0,1],\r\n2. Indexing the class using the term `type`.\r\n\r\nBecause this is a common use-case, we implemented a function `ltn.utils.LogitsToPredicateModel` for convenience. It is used in some of the examples (cf [MNIST digit addition](https://github.com/logictensornetworks/logictensornetworks/blob/master/examples/mnist/single_digits_addition.ipynb)).\r\nThe syntax is:\r\n```python\r\nlogits_model(x) # how to call `logits_model`\r\nP2 = ltn.Predicate(ltn.utils.LogitsToPredicateModel(logits_model), single_label=True)\r\nP2([x,type]) # how to call the predicate\r\n```\r\nIt automatically adds a final argument for class indexing and performs a sigmoid or softmax activation depending on the parameter `single_label`.\r\n\r\n## Proposition\r\n\r\nIt would be more elegant to have the functionality of creating a predicate from a logits model as a class constructor for `ltn.Predicate`.\r\n\r\nA suggested syntax is:\r\n```\r\nP2 = ltn.Predicate.FromLogits(logits_model, activation_function=\"softmax\", with_class_indexing=True)\r\n```\r\n- The functionality comes as a new class constructor,\r\n- The activation function is more explicit than the `single_label` parameter in `ltn.utils.LogitsToPredicateModel`, \r\n- `with_class_indexing=False` still allows creating predicates in the form of `P1(x)`, like abovementioned.\r\n\r\n## Changes to the rest of the API\r\n\r\nThe proposition adds a new constructor but shouldn't change any other method of `ltn.Predicate` or any framework method in general.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/logictensornetworks/logictensornetworks/issues/31/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/logictensornetworks/logictensornetworks/issues/31/timeline","performed_via_github_app":null,"state_reason":null}