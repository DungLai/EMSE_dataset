{"url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/125","repository_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark","labels_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/125/labels{/name}","comments_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/125/comments","events_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/125/events","html_url":"https://github.com/clovaai/deep-text-recognition-benchmark/issues/125","id":539618829,"node_id":"MDU6SXNzdWU1Mzk2MTg4Mjk=","number":125,"title":"Added FLOPs in our paper (Table 8, arXiv v4).","user":{"login":"ku21fan","id":7953971,"node_id":"MDQ6VXNlcjc5NTM5NzE=","avatar_url":"https://avatars.githubusercontent.com/u/7953971?v=4","gravatar_id":"","url":"https://api.github.com/users/ku21fan","html_url":"https://github.com/ku21fan","followers_url":"https://api.github.com/users/ku21fan/followers","following_url":"https://api.github.com/users/ku21fan/following{/other_user}","gists_url":"https://api.github.com/users/ku21fan/gists{/gist_id}","starred_url":"https://api.github.com/users/ku21fan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ku21fan/subscriptions","organizations_url":"https://api.github.com/users/ku21fan/orgs","repos_url":"https://api.github.com/users/ku21fan/repos","events_url":"https://api.github.com/users/ku21fan/events{/privacy}","received_events_url":"https://api.github.com/users/ku21fan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-12-18T11:18:51Z","updated_at":"2022-06-28T11:10:29Z","closed_at":"2019-12-28T06:00:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hello, \r\n\r\nWe received some requests about FLOPs of each model, thus we calculated it and updated [our paper](https://arxiv.org/abs/1904.01906).\r\nIn this issue, we summarize the detail of our FLOPs calculation.\r\n\r\nOur FLOPS calculation is approximate value.\r\nBecause \r\n1. Our calculation is mainly based on [THOP](https://github.com/Lyken17/pytorch-OpCounter), which is not an official PyTorch code. (but popular one)\r\n\r\n2. From [this issue](https://github.com/Lyken17/pytorch-OpCounter/issues/37) and readme of THOP, THOP seems like to calculate MACs instead of FLOPs, thus we just use # MACs * 2 as # FLOPs.\r\n\r\n3. We have some irregular modules, which are not in THOP: GridGenerator and LSTM/LSTMCell.\r\nThus, we calculate FLOPs of GridGenerator module by this code.\r\n```\r\ndef count_GridGenerator(m):\r\n    # size\r\n    num_fiducial_point = 20\r\n    image_width = 32\r\n    image_height = 100\r\n\r\n    # count calculation # https://arxiv.org/pdf/1904.01906.pdf\r\n    # we count euclidian distance (d_ij) as 3 MACs, since euclidian distance (d_ij) is root(square(c_i - c_j))\r\n    R = num_fiducial_point * num_fiducial_point * 3 * 3  # 3600,  20x20 (size of R), 3 = square, *, ln, 3 = d_ij\r\n    # we count matrix inversion as N^3 MACs\r\n    inv_delta_C = (num_fiducial_point + 3) ** 3 # 12167\r\n    T = (num_fiducial_point + 3) * (num_fiducial_point + 3) * 2  # 1058\r\n    P = image_width * image_height * (num_fiducial_point + 3) * 2  # 147200\r\n\r\n    total_ops = R + inv_delta_C + T + P  # 164025, about 0.164M MACs\r\n\r\n    m.total_ops += torch.Tensor([int(total_ops)])\r\n```\r\nand calculate FLOPs of LSTM by this code.\r\n```\r\ndef count_LSTM(m, x, y):\r\n    # size\r\n    input_size = x[0].size(-1)\r\n    hidden_state_size = y[0].size(-1)  # = output_size\r\n    cell_state_size = y[0].size(-1)  # = output_size\r\n\r\n    # count calculation https://pytorch.org/docs/stable/nn.html#torch.nn.LSTM\r\n    # count sigmoid/tanh activation function as 0 MACs\r\n    # 3*hidden_state_size = count addition operation.\r\n    input_gate = input_size * hidden_state_size + hidden_state_size * hidden_state_size \\\r\n        + 3 * hidden_state_size\r\n    forget_gate = input_size * hidden_state_size + hidden_state_size * hidden_state_size \\\r\n        + 3 * hidden_state_size\r\n    cell_gate = input_size * hidden_state_size + hidden_state_size * hidden_state_size \\\r\n        + 3 * hidden_state_size\r\n    output_gate = input_size * hidden_state_size + hidden_state_size * hidden_state_size \\\r\n        + 3 * hidden_state_size\r\n\r\n    update_cell_state = hidden_state_size + hidden_state_size + hidden_state_size\r\n    update_hidden_state = hidden_state_size\r\n\r\n    total_ops = input_gate + forget_gate + cell_gate + output_gate + update_cell_state + update_hidden_state\r\n\r\n    time_step = x[0].size(-2)\r\n\r\n    m.total_ops += torch.Tensor([int(total_ops)]) * time_step\r\n```\r\n\r\nWe attached our modified [profile code](https://github.com/clovaai/deep-text-recognition-benchmark/files/3977907/profile.zip) of THOP and we simply use the below code to calculate FLOPs. \r\n```\r\nimport torch\r\nimport model\r\nfrom thop import profile\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\n\r\ninput = torch.randn(1, 1, 32, 100).to(device)\r\ntext_for_pred = torch.LongTensor(1, opt.batch_max_length + 1).fill_(0).to(device)\r\nmodel_ = model.Model(opt).to(device)\r\nMACs, params = profile(model_, inputs=(input, text_for_pred, ))\r\nflops = 2 * MACs # approximate FLOPs\r\n```\r\nIf you found some issues, please let us know.\r\n\r\nBest.","closed_by":{"login":"ku21fan","id":7953971,"node_id":"MDQ6VXNlcjc5NTM5NzE=","avatar_url":"https://avatars.githubusercontent.com/u/7953971?v=4","gravatar_id":"","url":"https://api.github.com/users/ku21fan","html_url":"https://github.com/ku21fan","followers_url":"https://api.github.com/users/ku21fan/followers","following_url":"https://api.github.com/users/ku21fan/following{/other_user}","gists_url":"https://api.github.com/users/ku21fan/gists{/gist_id}","starred_url":"https://api.github.com/users/ku21fan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ku21fan/subscriptions","organizations_url":"https://api.github.com/users/ku21fan/orgs","repos_url":"https://api.github.com/users/ku21fan/repos","events_url":"https://api.github.com/users/ku21fan/events{/privacy}","received_events_url":"https://api.github.com/users/ku21fan/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/125/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/125/timeline","performed_via_github_app":null,"state_reason":"completed"}