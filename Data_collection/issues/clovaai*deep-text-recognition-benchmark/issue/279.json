{"url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/279","repository_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark","labels_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/279/labels{/name}","comments_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/279/comments","events_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/279/events","html_url":"https://github.com/clovaai/deep-text-recognition-benchmark/issues/279","id":876167518,"node_id":"MDU6SXNzdWU4NzYxNjc1MTg=","number":279,"title":"Teacher Forcing","user":{"login":"CuongNN218","id":26113323,"node_id":"MDQ6VXNlcjI2MTEzMzIz","avatar_url":"https://avatars.githubusercontent.com/u/26113323?v=4","gravatar_id":"","url":"https://api.github.com/users/CuongNN218","html_url":"https://github.com/CuongNN218","followers_url":"https://api.github.com/users/CuongNN218/followers","following_url":"https://api.github.com/users/CuongNN218/following{/other_user}","gists_url":"https://api.github.com/users/CuongNN218/gists{/gist_id}","starred_url":"https://api.github.com/users/CuongNN218/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CuongNN218/subscriptions","organizations_url":"https://api.github.com/users/CuongNN218/orgs","repos_url":"https://api.github.com/users/CuongNN218/repos","events_url":"https://api.github.com/users/CuongNN218/events{/privacy}","received_events_url":"https://api.github.com/users/CuongNN218/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-05T07:51:25Z","updated_at":"2021-05-05T07:53:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, thanks for your great work.\r\nI was confused by teacher forcing technique. In your prediction.py, you claimed that \r\n`        if is_train:\r\n            for i in range(num_steps):\r\n                # one-hot vectors for a i-th char. in a batch\r\n                char_onehots = self._char_to_onehot(text[:, i], onehot_dim=self.num_classes)\r\n                # hidden : decoder's hidden s_{t-1}, batch_H : encoder's hidden H, char_onehots : one-hot(y_{t-1})\r\n                hidden, alpha = self.attention_cell(hidden, batch_H, char_onehots)\r\n                output_hiddens[:, i, :] = hidden[0]  # LSTM hidden index (0: hidden, 1: Cell)\r\n            probs = self.generator(output_hiddens)\r\n`\r\nwhere char_onehots is y t-1 in decoder but as i understand char_onehots is a one-hot vector [https://github.com/clovaai/deep-text-recognition-benchmark/blob/68a80fe97943a111ff1efaf52a63ad8f0f1c0e5d/modules/prediction.py#L40](url) came from text labels not from previous step outputs in decoder. So your code here is quite similar to teacher forcing technique\r\nFeel free to correct me if i was wrong. @ku21fan ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/clovaai/deep-text-recognition-benchmark/issues/279/timeline","performed_via_github_app":null,"state_reason":null}