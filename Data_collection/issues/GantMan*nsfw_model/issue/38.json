{"url":"https://api.github.com/repos/GantMan/nsfw_model/issues/38","repository_url":"https://api.github.com/repos/GantMan/nsfw_model","labels_url":"https://api.github.com/repos/GantMan/nsfw_model/issues/38/labels{/name}","comments_url":"https://api.github.com/repos/GantMan/nsfw_model/issues/38/comments","events_url":"https://api.github.com/repos/GantMan/nsfw_model/issues/38/events","html_url":"https://github.com/GantMan/nsfw_model/issues/38","id":494248056,"node_id":"MDU6SXNzdWU0OTQyNDgwNTY=","number":38,"title":"(question) tensorflow-lite model","user":{"login":"camhart","id":3038809,"node_id":"MDQ6VXNlcjMwMzg4MDk=","avatar_url":"https://avatars.githubusercontent.com/u/3038809?v=4","gravatar_id":"","url":"https://api.github.com/users/camhart","html_url":"https://github.com/camhart","followers_url":"https://api.github.com/users/camhart/followers","following_url":"https://api.github.com/users/camhart/following{/other_user}","gists_url":"https://api.github.com/users/camhart/gists{/gist_id}","starred_url":"https://api.github.com/users/camhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camhart/subscriptions","organizations_url":"https://api.github.com/users/camhart/orgs","repos_url":"https://api.github.com/users/camhart/repos","events_url":"https://api.github.com/users/camhart/events{/privacy}","received_events_url":"https://api.github.com/users/camhart/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-09-16T20:01:57Z","updated_at":"2021-08-30T11:58:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"My goal is have NSFW detection on android.  For the time being, I'm okay with it not being super fast/efficient (though eventually I'd like to go that direction).\r\n\r\nI converted the keras model to a tensorflow lite model using the following:\r\n```\r\ntflite_convert --inference_input_type=FLOAT --inference_type=FLOAT --output_file=nsfw_mobilenet2.224x224.tflite --keras_model_file=nsfw_mobilenet2.224x224.h5\r\n```\r\n\r\nI then followed the tensorflow-lite example provided by Google.  Here's references to what I believe are the two most important files:\r\n\r\n- https://github.com/tensorflow/examples/blob/master/lite/examples/image_classification/android/app/src/main/java/org/tensorflow/lite/examples/classification/tflite/ClassifierFloatMobileNet.java\r\n\r\n- https://github.com/tensorflow/examples/blob/master/lite/examples/image_classification/android/app/src/main/java/org/tensorflow/lite/examples/classification/tflite/Classifier.java\r\n\r\nI wired it up, and everything appears to run.  However I'm not getting as accurate of results.\r\n\r\nA few questions:\r\n1.  Did I miss anything when converting the model?\r\n2.  The `addPixelValue` method (see https://github.com/tensorflow/examples/blob/master/lite/examples/image_classification/android/app/src/main/java/org/tensorflow/lite/examples/classification/tflite/ClassifierFloatMobileNet.java) has the following:\r\n  ```\r\n@Override\r\n  protected void addPixelValue(int pixelValue) {\r\n    imgData.putFloat((((pixelValue >> 16) & 0xFF) - IMAGE_MEAN) / IMAGE_STD);\r\n    imgData.putFloat((((pixelValue >> 8) & 0xFF) - IMAGE_MEAN) / IMAGE_STD);\r\n    imgData.putFloat(((pixelValue & 0xFF) - IMAGE_MEAN) / IMAGE_STD);\r\n  }\r\n```\r\nWhere `IMAGE_MEAN` and `IMAGE_STD` are 127.5.  What value should they be for this model?  I've tried 127.5 and 255--both give less accurate results.\r\n\r\nThanks for your time\r\n\r\nUpdate:  Looking at https://github.com/infinitered/nsfwjs/blob/master/src/index.ts\r\n```\r\n      // Normalize the image from [0, 255] to [0, 1].\r\n      const normalized = img\r\n        .toFloat()\r\n        .div(this.normalizationOffset) as tf.Tensor3D\r\n```\r\nThis makes me believe I'd need to do that instead.  So I believe this would be done with:\r\n```\r\n    private static final float NORMALIZE_PIXELS = 255.f;\r\n\r\n    private static void addPixelValue(ByteBuffer buffer, int pixelValue) {\r\n        buffer.putFloat(((pixelValue >> 16) & 0xFF) / NORMALIZE_PIXELS);\r\n        buffer.putFloat(((pixelValue >> 8) & 0xFF) / NORMALIZE_PIXELS);\r\n        buffer.putFloat((pixelValue & 0xFF) / NORMALIZE_PIXELS);\r\n    }\r\n```\r\nI'm still not getting amazing results though. ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/GantMan/nsfw_model/issues/38/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/GantMan/nsfw_model/issues/38/timeline","performed_via_github_app":null,"state_reason":null}