[{"id":6223659225,"node_id":"CE_lADOCe50yM5FgfA0zwAAAAFy9YDZ","url":"https://api.github.com/repos/GantMan/nsfw_model/issues/events/6223659225","actor":{"login":"seachenjy","id":3112687,"node_id":"MDQ6VXNlcjMxMTI2ODc=","avatar_url":"https://avatars.githubusercontent.com/u/3112687?v=4","gravatar_id":"","url":"https://api.github.com/users/seachenjy","html_url":"https://github.com/seachenjy","followers_url":"https://api.github.com/users/seachenjy/followers","following_url":"https://api.github.com/users/seachenjy/following{/other_user}","gists_url":"https://api.github.com/users/seachenjy/gists{/gist_id}","starred_url":"https://api.github.com/users/seachenjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seachenjy/subscriptions","organizations_url":"https://api.github.com/users/seachenjy/orgs","repos_url":"https://api.github.com/users/seachenjy/repos","events_url":"https://api.github.com/users/seachenjy/events{/privacy}","received_events_url":"https://api.github.com/users/seachenjy/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-03-11T09:50:52Z","state_reason":null,"performed_via_github_app":null},{"url":"https://api.github.com/repos/GantMan/nsfw_model/issues/comments/1064950982","html_url":"https://github.com/GantMan/nsfw_model/issues/101#issuecomment-1064950982","issue_url":"https://api.github.com/repos/GantMan/nsfw_model/issues/101","id":1064950982,"node_id":"IC_kwDOCe50yM4_edzG","user":{"login":"seachenjy","id":3112687,"node_id":"MDQ6VXNlcjMxMTI2ODc=","avatar_url":"https://avatars.githubusercontent.com/u/3112687?v=4","gravatar_id":"","url":"https://api.github.com/users/seachenjy","html_url":"https://github.com/seachenjy","followers_url":"https://api.github.com/users/seachenjy/followers","following_url":"https://api.github.com/users/seachenjy/following{/other_user}","gists_url":"https://api.github.com/users/seachenjy/gists{/gist_id}","starred_url":"https://api.github.com/users/seachenjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seachenjy/subscriptions","organizations_url":"https://api.github.com/users/seachenjy/orgs","repos_url":"https://api.github.com/users/seachenjy/repos","events_url":"https://api.github.com/users/seachenjy/events{/privacy}","received_events_url":"https://api.github.com/users/seachenjy/received_events","type":"User","site_admin":false},"created_at":"2022-03-11T09:51:47Z","updated_at":"2022-03-11T09:51:47Z","author_association":"NONE","body":"i made it ^_^\r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\r\n\ttf \"github.com/galeone/tensorflow/tensorflow/go\"\r\n\t\"github.com/galeone/tensorflow/tensorflow/go/op\"\r\n)\r\n\r\nfunc main() {\r\n\tmodel_path := \"./mobilenet_v2_140_224\"\r\n\tm, err := tf.LoadSavedModel(model_path, []string{\"serve\"}, nil) // 载入模型\r\n\tif err != nil {\r\n\t\t// 模型加载失败\r\n\t\tfmt.Printf(\"err: %v\", err)\r\n\t}\r\n\t// 打印出所有的Operator\r\n\t// for _, op := range m.Graph.Operations() {\r\n\t// \tfmt.Printf(\"Op name: %v \\r\\n\", op.Name())\r\n\t// }\r\n\r\n\ttensor_x, err := makeTensorFromImage(\"./d.png\")\r\n\tif err != nil {\r\n\t\tfmt.Printf(\"err: %s\", err.Error())\r\n\t\treturn\r\n\t}\r\n\r\n\ts := m.Session\r\n\tfeeds := map[tf.Output]*tf.Tensor{\r\n\t\t// operation name 需要根据你的模型入参来写\r\n\t\tm.Graph.Operation(\"serving_default_input\").Output(0): tensor_x,\r\n\t}\r\n\tfetches := []tf.Output{\r\n\t\t// 输出层的name 也要根据你的模型写\r\n\t\tm.Graph.Operation(\"StatefulPartitionedCall\").Output(0),\r\n\t}\r\n\r\n\tresult, err := s.Run(feeds, fetches, nil)\r\n\tif err != nil {\r\n\t\t// 模型预测失败\r\n\t\tfmt.Printf(\"---err: %s  \", err.Error())\r\n\t}\r\n\tfmt.Println(result[0].Value())\r\n}\r\n\r\nfunc makeTensorFromImage(filename string) (*tf.Tensor, error) {\r\n\tbytes, err := ioutil.ReadFile(filename)\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\ttensor, err := tf.NewTensor(string(bytes))\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\tgraph, input, output, err := makeTransformImageGraph(\"jpeg\")\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\tsession, err := tf.NewSession(graph, nil)\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\tdefer session.Close()\r\n\tnormalized, err := session.Run(\r\n\t\tmap[tf.Output]*tf.Tensor{input: tensor},\r\n\t\t[]tf.Output{output},\r\n\t\tnil)\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\treturn normalized[0], nil\r\n}\r\n\r\nfunc makeTransformImageGraph(imageFormat string) (graph *tf.Graph, input, output tf.Output, err error) {\r\n\tconst (\r\n\t\tH, W  = 224, 224\r\n\t\tMean  = float32(117)\r\n\t\tScale = float32(1)\r\n\t)\r\n\ts := op.NewScope()\r\n\tinput = op.Placeholder(s, tf.String)\r\n\t// Decode PNG or JPEG\r\n\tvar decode tf.Output\r\n\tif imageFormat == \"png\" {\r\n\t\tdecode = op.DecodePng(s, input, op.DecodePngChannels(3))\r\n\t} else {\r\n\t\tdecode = op.DecodeJpeg(s, input, op.DecodeJpegChannels(3))\r\n\t}\r\n\t// Div and Sub perform (value-Mean)/Scale for each pixel\r\n\toutput = op.Div(s,\r\n\t\top.Sub(s,\r\n\t\t\t// Resize to 224x224 with bilinear interpolation\r\n\t\t\top.ResizeBilinear(s,\r\n\t\t\t\t// Create a batch containing a single image\r\n\t\t\t\top.ExpandDims(s,\r\n\t\t\t\t\t// Use decoded pixel values\r\n\t\t\t\t\top.Cast(s, decode, tf.Float),\r\n\t\t\t\t\top.Const(s.SubScope(\"make_batch\"), int32(0))),\r\n\t\t\t\top.Const(s.SubScope(\"size\"), []int32{H, W})),\r\n\t\t\top.Const(s.SubScope(\"mean\"), Mean)),\r\n\t\top.Const(s.SubScope(\"scale\"), Scale))\r\n\tgraph, err = s.Finalize()\r\n\treturn graph, input, output, err\r\n}\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/GantMan/nsfw_model/issues/comments/1064950982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"seachenjy","id":3112687,"node_id":"MDQ6VXNlcjMxMTI2ODc=","avatar_url":"https://avatars.githubusercontent.com/u/3112687?v=4","gravatar_id":"","url":"https://api.github.com/users/seachenjy","html_url":"https://github.com/seachenjy","followers_url":"https://api.github.com/users/seachenjy/followers","following_url":"https://api.github.com/users/seachenjy/following{/other_user}","gists_url":"https://api.github.com/users/seachenjy/gists{/gist_id}","starred_url":"https://api.github.com/users/seachenjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seachenjy/subscriptions","organizations_url":"https://api.github.com/users/seachenjy/orgs","repos_url":"https://api.github.com/users/seachenjy/repos","events_url":"https://api.github.com/users/seachenjy/events{/privacy}","received_events_url":"https://api.github.com/users/seachenjy/received_events","type":"User","site_admin":false}}]