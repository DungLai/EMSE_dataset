{"url":"https://api.github.com/repos/comtravo/ctparse/issues/126","repository_url":"https://api.github.com/repos/comtravo/ctparse","labels_url":"https://api.github.com/repos/comtravo/ctparse/issues/126/labels{/name}","comments_url":"https://api.github.com/repos/comtravo/ctparse/issues/126/comments","events_url":"https://api.github.com/repos/comtravo/ctparse/issues/126/events","html_url":"https://github.com/comtravo/ctparse/issues/126","id":1438446770,"node_id":"I_kwDOB4d2CM5VvPSy","number":126,"title":"`latent_time=False` works only half-way","user":{"login":"roskoN","id":8143425,"node_id":"MDQ6VXNlcjgxNDM0MjU=","avatar_url":"https://avatars.githubusercontent.com/u/8143425?v=4","gravatar_id":"","url":"https://api.github.com/users/roskoN","html_url":"https://github.com/roskoN","followers_url":"https://api.github.com/users/roskoN/followers","following_url":"https://api.github.com/users/roskoN/following{/other_user}","gists_url":"https://api.github.com/users/roskoN/gists{/gist_id}","starred_url":"https://api.github.com/users/roskoN/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roskoN/subscriptions","organizations_url":"https://api.github.com/users/roskoN/orgs","repos_url":"https://api.github.com/users/roskoN/repos","events_url":"https://api.github.com/users/roskoN/events{/privacy}","received_events_url":"https://api.github.com/users/roskoN/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-11-07T14:19:37Z","updated_at":"2022-11-08T10:14:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"* ctparse - Parse natural language time expressions in pytho version:\r\n* Python version: 3.9 \r\n* Operating System: Ubuntu 22.04 (WSL2)\r\n\r\n### Description\r\n\r\nSetting `latent_time=False` still uses latent rules (e.g. \"ruleLatentDOY\"), and consequently delivers a DateTime relative to the current one. I would expect that **none** of the latent rules are considered.\r\n\r\n### What I Did\r\n \r\n I run the following command:\r\n ```python\r\n list(ctparse(\"4.Jan 22\", latent_time=False, debug=True))\r\n ```\r\n which delivers the following output:\r\n ```python\r\n[CTParse(2023-01-04 22:00 (X/X), (108, 103, 129, 'ruleHHMM', 'ruleDOM1', 'ruleNamedMonth', 'ruleDOMMonth', 'ruleLatentDOY', 'ruleDateTOD'), 24.70392674175538),\r\n CTParse(2022-12-04 X:X (X/X), (108, 103, 129, 'ruleHHMM', 'ruleDOM1', 'ruleNamedMonth', 'ruleLatentDOM'), -1379.6945574679112),\r\n CTParse(X-01-X X:X (X/X), (108, 103, 129, 'ruleHHMM', 'ruleDOM1', 'ruleNamedMonth', 'ruleLatentDOM'), -974.2294493597469),\r\n CTParse(X-X-X 22:00 (X/X), (108, 103, 129, 'ruleHHMM', 'ruleDOM1', 'ruleNamedMonth', 'ruleLatentDOM'), -1379.6945574679112),\r\n CTParse(2023-01-04 X:X (X/X), (108, 103, 129, 'ruleNamedMonth', 'ruleDOM1', 'ruleDOMMonth', 'ruleLatentDOY'), -464.62600230356384),\r\n CTParse(2022-11-22 X:X (X/X), (124, 108, 'ruleDOM1', 'ruleDDMM', 'ruleLatentDOY', 'ruleLatentDOM'), -1386.2557536714821),\r\n CTParse(X-01-04 X:X (X/X), (124, 108, 'ruleDOM1', 'ruleDDMM', 'ruleLatentDOM'), -471.5873006213257),\r\n CTParse(2023-01-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleNamedMonth', 'ruleMonthDOM', 'ruleLatentDOY', 'ruleDOM1', 'ruleLatentDOM'), -283.055702689241),\r\n CTParse(X-01-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleNamedMonth', 'ruleMonthDOM', 'ruleDOM1', 'ruleLatentDOM'), -285.2758563452916),\r\n CTParse(2022-11-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleNamedMonth', 'ruleDOM1', 'ruleDOMMonth', 'ruleLatentDOY', 'ruleLatentDOM'), -1381.2580980306086),\r\n CTParse(X-01-04 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleNamedMonth', 'ruleDOM1', 'ruleDOMMonth', 'ruleLatentDOM'), -468.07426686688797),\r\n CTParse(X-X-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleNamedMonth', 'ruleDOM1', 'ruleLatentDOM'), -1387.0195868535332),\r\n CTParse(2023-01-04 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleNamedMonth', 'ruleDOMMonth', 'ruleLatentDOY', 'ruleDOM1', 'ruleLatentDOM'), -462.24216151516646),\r\n CTParse(2022-11-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleNamedMonth', 'ruleDOMMonth', 'ruleLatentDOY', 'ruleDOM1', 'ruleLatentDOM'), -1378.5328933893213),\r\n CTParse(X-01-04 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleNamedMonth', 'ruleDOMMonth', 'ruleDOM1', 'ruleLatentDOM'), -465.9835442173078),\r\n CTParse(2023-01-04 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleDOM1', 'ruleNamedMonth', 'ruleDOMMonth', 'ruleLatentDOY', 'ruleLatentDOM'), -457.9653277397515),\r\n CTParse(2022-11-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleDOM1', 'ruleNamedMonth', 'ruleDOMMonth', 'ruleLatentDOY', 'ruleLatentDOM'), -1374.2560596139065),\r\n CTParse(X-01-04 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleDOM1', 'ruleNamedMonth', 'ruleDOMMonth', 'ruleLatentDOM'), -463.7046680492498),\r\n CTParse(2022-12-04 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleDOM1', 'ruleNamedMonth', 'ruleMonthDOM', 'ruleLatentDOY', 'ruleLatentDOM'), -1378.5807416488096),\r\n CTParse(2023-01-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleDOM1', 'ruleNamedMonth', 'ruleMonthDOM', 'ruleLatentDOY', 'ruleLatentDOM'), -279.96845298069996),\r\n CTParse(X-01-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleDOM1', 'ruleNamedMonth', 'ruleMonthDOM', 'ruleLatentDOM'), -283.9414417860744),\r\n CTParse(X-X-22 X:X (X/X), (108, 103, 108, 'ruleDOM1', 'ruleDOM1', 'ruleNamedMonth', 'ruleLatentDOM'), -1385.4914732680768)]\r\n ```\r\n\r\n\r\nP.S. Thank you for your great work!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/comtravo/ctparse/issues/126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/comtravo/ctparse/issues/126/timeline","performed_via_github_app":null,"state_reason":null}