{"url":"https://api.github.com/repos/comtravo/ctparse/issues/105","repository_url":"https://api.github.com/repos/comtravo/ctparse","labels_url":"https://api.github.com/repos/comtravo/ctparse/issues/105/labels{/name}","comments_url":"https://api.github.com/repos/comtravo/ctparse/issues/105/comments","events_url":"https://api.github.com/repos/comtravo/ctparse/issues/105/events","html_url":"https://github.com/comtravo/ctparse/issues/105","id":813848168,"node_id":"MDU6SXNzdWU4MTM4NDgxNjg=","number":105,"title":"parsing time intervals incorrectly","user":{"login":"inferense","id":49389495,"node_id":"MDQ6VXNlcjQ5Mzg5NDk1","avatar_url":"https://avatars.githubusercontent.com/u/49389495?v=4","gravatar_id":"","url":"https://api.github.com/users/inferense","html_url":"https://github.com/inferense","followers_url":"https://api.github.com/users/inferense/followers","following_url":"https://api.github.com/users/inferense/following{/other_user}","gists_url":"https://api.github.com/users/inferense/gists{/gist_id}","starred_url":"https://api.github.com/users/inferense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/inferense/subscriptions","organizations_url":"https://api.github.com/users/inferense/orgs","repos_url":"https://api.github.com/users/inferense/repos","events_url":"https://api.github.com/users/inferense/events{/privacy}","received_events_url":"https://api.github.com/users/inferense/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-22T20:42:54Z","updated_at":"2021-02-25T07:26:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"* ctparse - Parse natural language time expressions in pytho version: 0.3.0\r\n* Python version: 3.8\r\n* Operating System: macOS BigSur\r\n\r\n### Description\r\nTime intervals where first int is larger than the 2nd int like in \"tomorrow 9-5\" are parsed always incorrectly. In such case this should result in a resolution of 9am-5pm (as there's no other feasible case for that parse). Instead, this parses the 2nd int as the next day end_time. Assuming this is due to the 24 hour system the parser uses.\r\n\r\n```\r\nr = ctparse(\"tomorrow 9-5\")\r\nr\r\nOut[8]: CTParse(2021-02-23 09:00 (X/X) - 2021-02-24 05:00 (X/X), (114, 128, 136, 128, 'ruleHHMM', 'ruleHHMM', 'ruleTODTOD', 'ruleTomorrow', 'ruleDateInterval'), 4.300637883728172)\r\n\r\n```\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/comtravo/ctparse/issues/105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/comtravo/ctparse/issues/105/timeline","performed_via_github_app":null,"state_reason":null}