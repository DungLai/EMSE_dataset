{"url":"https://api.github.com/repos/sniklaus/pytorch-pwc/issues/39","repository_url":"https://api.github.com/repos/sniklaus/pytorch-pwc","labels_url":"https://api.github.com/repos/sniklaus/pytorch-pwc/issues/39/labels{/name}","comments_url":"https://api.github.com/repos/sniklaus/pytorch-pwc/issues/39/comments","events_url":"https://api.github.com/repos/sniklaus/pytorch-pwc/issues/39/events","html_url":"https://github.com/sniklaus/pytorch-pwc/issues/39","id":667981143,"node_id":"MDU6SXNzdWU2Njc5ODExNDM=","number":39,"title":"Regarding CPU implementation of correlation function. ","user":{"login":"Somdyuti2","id":34875884,"node_id":"MDQ6VXNlcjM0ODc1ODg0","avatar_url":"https://avatars.githubusercontent.com/u/34875884?v=4","gravatar_id":"","url":"https://api.github.com/users/Somdyuti2","html_url":"https://github.com/Somdyuti2","followers_url":"https://api.github.com/users/Somdyuti2/followers","following_url":"https://api.github.com/users/Somdyuti2/following{/other_user}","gists_url":"https://api.github.com/users/Somdyuti2/gists{/gist_id}","starred_url":"https://api.github.com/users/Somdyuti2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Somdyuti2/subscriptions","organizations_url":"https://api.github.com/users/Somdyuti2/orgs","repos_url":"https://api.github.com/users/Somdyuti2/repos","events_url":"https://api.github.com/users/Somdyuti2/events{/privacy}","received_events_url":"https://api.github.com/users/Somdyuti2/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-29T16:36:26Z","updated_at":"2020-09-15T10:00:44Z","closed_at":"2020-07-29T17:19:16Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, thanks for the implementation. In my use case, I need to perform the inference on CPU.  Inspecting your code in the file `correlation.py`, I kind of get that for that, we need to call the extern C functions ourselves instead of invoking CuPy functions to do it for us. In your code, each C function is called like this:\r\n`cupy_launch('kernel_Correlation_rearrange', cupy_kernel('kernel_Correlation_rearrange', {\r\n\t\t\t\t'input': second,\r\n\t\t\t\t'output': rbot1\r\n\t\t\t}))(\r\n\t\t\t\tgrid=tuple([ int((n + 16 - 1) / 16), second.shape[1], second.shape[0] ]),\r\n\t\t\t\tblock=tuple([ 16, 1, 1 ]),\r\n\t\t\t\targs=[ n, second.data_ptr(), rbot1.data_ptr() ]\r\n\t\t\t)`\r\n\r\nI am not familiar with CuPy code, so it will be helpful if you could explain these function calls a bit and give any clue about how to do the equivalent stuff on CPU. I understand that the args in each call are the arguments passed to the C function,  but I am not sure what `grid` and `block `signify here. Probably, they may not be needed when CuPy is not used.  As I only need to run on CPU at test time, I guess I don't need to care about the `updateGrad` functions.  \r\n\r\nI will appreciate your help/suggestion regarding this. ","closed_by":{"login":"sniklaus","id":1238034,"node_id":"MDQ6VXNlcjEyMzgwMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/1238034?v=4","gravatar_id":"","url":"https://api.github.com/users/sniklaus","html_url":"https://github.com/sniklaus","followers_url":"https://api.github.com/users/sniklaus/followers","following_url":"https://api.github.com/users/sniklaus/following{/other_user}","gists_url":"https://api.github.com/users/sniklaus/gists{/gist_id}","starred_url":"https://api.github.com/users/sniklaus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sniklaus/subscriptions","organizations_url":"https://api.github.com/users/sniklaus/orgs","repos_url":"https://api.github.com/users/sniklaus/repos","events_url":"https://api.github.com/users/sniklaus/events{/privacy}","received_events_url":"https://api.github.com/users/sniklaus/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sniklaus/pytorch-pwc/issues/39/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sniklaus/pytorch-pwc/issues/39/timeline","performed_via_github_app":null,"state_reason":"completed"}