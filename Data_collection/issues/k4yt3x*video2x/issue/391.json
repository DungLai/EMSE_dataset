{"url":"https://api.github.com/repos/k4yt3x/video2x/issues/391","repository_url":"https://api.github.com/repos/k4yt3x/video2x","labels_url":"https://api.github.com/repos/k4yt3x/video2x/issues/391/labels{/name}","comments_url":"https://api.github.com/repos/k4yt3x/video2x/issues/391/comments","events_url":"https://api.github.com/repos/k4yt3x/video2x/issues/391/events","html_url":"https://github.com/k4yt3x/video2x/issues/391","id":727458807,"node_id":"MDU6SXNzdWU3Mjc0NTg4MDc=","number":391,"title":"More Output Format String Options And Help Dialog","user":{"login":"MatteCrystal","id":32424764,"node_id":"MDQ6VXNlcjMyNDI0NzY0","avatar_url":"https://avatars.githubusercontent.com/u/32424764?v=4","gravatar_id":"","url":"https://api.github.com/users/MatteCrystal","html_url":"https://github.com/MatteCrystal","followers_url":"https://api.github.com/users/MatteCrystal/followers","following_url":"https://api.github.com/users/MatteCrystal/following{/other_user}","gists_url":"https://api.github.com/users/MatteCrystal/gists{/gist_id}","starred_url":"https://api.github.com/users/MatteCrystal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MatteCrystal/subscriptions","organizations_url":"https://api.github.com/users/MatteCrystal/orgs","repos_url":"https://api.github.com/users/MatteCrystal/repos","events_url":"https://api.github.com/users/MatteCrystal/events{/privacy}","received_events_url":"https://api.github.com/users/MatteCrystal/received_events","type":"User","site_admin":false},"labels":[{"id":847238630,"node_id":"MDU6TGFiZWw4NDcyMzg2MzA=","url":"https://api.github.com/repos/k4yt3x/video2x/labels/type:Enhancement","name":"type:Enhancement","color":"54aaff","default":false,"description":"New feature or request"},{"id":2037507197,"node_id":"MDU6TGFiZWwyMDM3NTA3MTk3","url":"https://api.github.com/repos/k4yt3x/video2x/labels/component:GUI","name":"component:GUI","color":"ad2f0f","default":false,"description":"GUI related issue"}],"state":"open","locked":false,"assignee":{"login":"k4yt3x","id":21986859,"node_id":"MDQ6VXNlcjIxOTg2ODU5","avatar_url":"https://avatars.githubusercontent.com/u/21986859?v=4","gravatar_id":"","url":"https://api.github.com/users/k4yt3x","html_url":"https://github.com/k4yt3x","followers_url":"https://api.github.com/users/k4yt3x/followers","following_url":"https://api.github.com/users/k4yt3x/following{/other_user}","gists_url":"https://api.github.com/users/k4yt3x/gists{/gist_id}","starred_url":"https://api.github.com/users/k4yt3x/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k4yt3x/subscriptions","organizations_url":"https://api.github.com/users/k4yt3x/orgs","repos_url":"https://api.github.com/users/k4yt3x/repos","events_url":"https://api.github.com/users/k4yt3x/events{/privacy}","received_events_url":"https://api.github.com/users/k4yt3x/received_events","type":"User","site_admin":false},"assignees":[{"login":"k4yt3x","id":21986859,"node_id":"MDQ6VXNlcjIxOTg2ODU5","avatar_url":"https://avatars.githubusercontent.com/u/21986859?v=4","gravatar_id":"","url":"https://api.github.com/users/k4yt3x","html_url":"https://github.com/k4yt3x","followers_url":"https://api.github.com/users/k4yt3x/followers","following_url":"https://api.github.com/users/k4yt3x/following{/other_user}","gists_url":"https://api.github.com/users/k4yt3x/gists{/gist_id}","starred_url":"https://api.github.com/users/k4yt3x/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k4yt3x/subscriptions","organizations_url":"https://api.github.com/users/k4yt3x/orgs","repos_url":"https://api.github.com/users/k4yt3x/repos","events_url":"https://api.github.com/users/k4yt3x/events{/privacy}","received_events_url":"https://api.github.com/users/k4yt3x/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-10-22T14:47:01Z","updated_at":"2020-10-22T16:28:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Description\r\n\r\nCurrently by default the filename is dynamically using the original file name and the output extension to create the output file. However, besides just guessing there's no way to know what the other options are or if there even are any. So First of I recommend adding a small [?] button to the very right of format string textbox. Clicking this should show a window of some sort with info on what each string code is and does.\r\n\r\nExample:\r\nList of string options\r\n{original_file_name}: Adds name of original input file\r\n{extension}: Adds name of output file extension type chosen\r\n\r\nIt doesn't matter how self explanatory the name may seem a description of what it does should be given. \r\n\r\n-----\r\nSecond, (if not already added) Is to add string options for various things like scale ratio, driver, as well as driver specific settings like anime4k passes, push color count, etc. Also adding an option for adding the time it took to convert the video as well as current date time would also be nice to have string options. \r\n\r\n-----\r\nThird, Allow each driver type to have it's own Output File Name Format String. They would all use the same textbox but change to their last edited format depending on what driver is currently selected. This way if you have a specific way you want to format anime4k files and a different way to format waifu2x files you don't need to edit the output format string each time.\r\n\r\n-----\r\nFour, (Stretch goal): There are many times someone may have multiple commonly used format strings they wish to use for the same driver type. In this case it would be really cool to add two more buttons to the right side. A favorite and a load button. The favorite button would use a star Icon and load would use some sort of load icon to keep buttons small. Clicking load would show a list of strings saved as favorites for the currently selected driver. The bottom would have 3 buttons [load selected] and [delete selected] and [close]. Clicking the favorite button would as expected add the current string to the list of favorites strings. However It would be really cool if I dynamically checked if the string already exists every time a character is loaded, the favorite button is clicked, or application is started, so that if it does exist you could do some sort of highlight to the favorite button to indicate the current string is already present in the selected drivers favorites list. If this isn't possible then having a check to not add 2 of the same string to favorites would suffice. \r\n\r\n-----\r\nUltimate end design would look like so:\r\n\r\n> Output File Name Format String [{original_file_name}_my_custom_name_{driver}{extension}_______________________] [L][*][?]\r\n\r\n## Sources\r\n\r\n![image](https://user-images.githubusercontent.com/32424764/96883632-3e466880-1446-11eb-9f7a-24deb8145ce4.png)\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/k4yt3x/video2x/issues/391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/k4yt3x/video2x/issues/391/timeline","performed_via_github_app":null,"state_reason":null}