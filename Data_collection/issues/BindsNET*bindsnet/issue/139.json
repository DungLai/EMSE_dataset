{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/139","repository_url":"https://api.github.com/repos/BindsNET/bindsnet","labels_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/139/labels{/name}","comments_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/139/comments","events_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/139/events","html_url":"https://github.com/BindsNET/bindsnet/issues/139","id":368326914,"node_id":"MDU6SXNzdWUzNjgzMjY5MTQ=","number":139,"title":"Possible use of torch.multiprocessing","user":{"login":"djsaunde","id":1245942,"node_id":"MDQ6VXNlcjEyNDU5NDI=","avatar_url":"https://avatars.githubusercontent.com/u/1245942?v=4","gravatar_id":"","url":"https://api.github.com/users/djsaunde","html_url":"https://github.com/djsaunde","followers_url":"https://api.github.com/users/djsaunde/followers","following_url":"https://api.github.com/users/djsaunde/following{/other_user}","gists_url":"https://api.github.com/users/djsaunde/gists{/gist_id}","starred_url":"https://api.github.com/users/djsaunde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djsaunde/subscriptions","organizations_url":"https://api.github.com/users/djsaunde/orgs","repos_url":"https://api.github.com/users/djsaunde/repos","events_url":"https://api.github.com/users/djsaunde/events{/privacy}","received_events_url":"https://api.github.com/users/djsaunde/received_events","type":"User","site_admin":false},"labels":[{"id":832665087,"node_id":"MDU6TGFiZWw4MzI2NjUwODc=","url":"https://api.github.com/repos/BindsNET/bindsnet/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"djsaunde","id":1245942,"node_id":"MDQ6VXNlcjEyNDU5NDI=","avatar_url":"https://avatars.githubusercontent.com/u/1245942?v=4","gravatar_id":"","url":"https://api.github.com/users/djsaunde","html_url":"https://github.com/djsaunde","followers_url":"https://api.github.com/users/djsaunde/followers","following_url":"https://api.github.com/users/djsaunde/following{/other_user}","gists_url":"https://api.github.com/users/djsaunde/gists{/gist_id}","starred_url":"https://api.github.com/users/djsaunde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djsaunde/subscriptions","organizations_url":"https://api.github.com/users/djsaunde/orgs","repos_url":"https://api.github.com/users/djsaunde/repos","events_url":"https://api.github.com/users/djsaunde/events{/privacy}","received_events_url":"https://api.github.com/users/djsaunde/received_events","type":"User","site_admin":false},"assignees":[{"login":"djsaunde","id":1245942,"node_id":"MDQ6VXNlcjEyNDU5NDI=","avatar_url":"https://avatars.githubusercontent.com/u/1245942?v=4","gravatar_id":"","url":"https://api.github.com/users/djsaunde","html_url":"https://github.com/djsaunde","followers_url":"https://api.github.com/users/djsaunde/followers","following_url":"https://api.github.com/users/djsaunde/following{/other_user}","gists_url":"https://api.github.com/users/djsaunde/gists{/gist_id}","starred_url":"https://api.github.com/users/djsaunde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djsaunde/subscriptions","organizations_url":"https://api.github.com/users/djsaunde/orgs","repos_url":"https://api.github.com/users/djsaunde/repos","events_url":"https://api.github.com/users/djsaunde/events{/privacy}","received_events_url":"https://api.github.com/users/djsaunde/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2018-10-09T17:55:38Z","updated_at":"2019-03-19T14:11:15Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Consider the simulation loop in the `Network.run()` function:\r\n\r\n```\r\n# Simulate network activity for `time` timesteps.\r\n        for t in range(timesteps):\r\n->          for l in self.layers:\r\n                # Update each layer of nodes.\r\n                if isinstance(self.layers[l], AbstractInput):\r\n                    self.layers[l].step(inpts[l][t], self.dt)\r\n                else:\r\n                    self.layers[l].step(inpts[l], self.dt)\r\n\r\n                # Clamp neurons to spike.\r\n                clamp = clamps.get(l, None)\r\n                if clamp is not None:\r\n                    self.layers[l].s[clamp] = 1\r\n\r\n            # Run synapse updates.\r\n->          for c in self.connections:\r\n                self.connections[c].update(\r\n                    reward=reward, mask=masks.get(c, None), learning=self.learning\r\n                )\r\n\r\n            # Get input to all layers.\r\n            inpts.update(self.get_inputs())\r\n\r\n            # Record state variables of interest.\r\n            for m in self.monitors:\r\n                self.monitors[m].record()\r\n        \r\n        # Re-normalize connections.\r\n->      for c in self.connections:\r\n            self.connections[c].normalize()\r\n```\r\n\r\nWhere I've marked a `->`, there might be an opportunity to use `torch.multiprocessing`. Since we do updates at time `t` based on network state at time `t-1`, all `Nodes` / `Connection`s updates can be performed with a separate process (thread?) at once. Letting `k` = no. of layers, `m` = no. of connections, given enough CPU / GPU resources, the loops marked with `->` would have time complexity `O(1)` instead of `O(k)`, `O(m)` in the number of layers and connections, respectively.\r\n\r\nI think it'd be good to keep around two (?) `multiprocessing.Pool` objects around, one for `Nodes` objects and another for `Connection` objects. Instead of statements of the form:\r\n\r\n```\r\nfor l in self.layers:\r\n    self.layers[l].step(...)\r\n```\r\n\r\nWe might rewrite this as something like:\r\n\r\n```\r\nself.nodes_pool.map(Nodes.step, self.layers)\r\n```\r\n\r\nHere, `nodes_pool` is defined as an attribute in the `Network` constructor. This last bit probably won't work straightaway; we'd need to figure out the right syntax (if it exists).\r\n\r\nThis same idea can also be applied in the `Network`'s `reset()` and `get_inputs()` functions.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/139/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/139/timeline","performed_via_github_app":null,"state_reason":null}