{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/362","repository_url":"https://api.github.com/repos/BindsNET/bindsnet","labels_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/362/labels{/name}","comments_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/362/comments","events_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/362/events","html_url":"https://github.com/BindsNET/bindsnet/issues/362","id":610789601,"node_id":"MDU6SXNzdWU2MTA3ODk2MDE=","number":362,"title":"supervised MNIST example accuacy and GPU issues","user":{"login":"Thonner","id":19835481,"node_id":"MDQ6VXNlcjE5ODM1NDgx","avatar_url":"https://avatars.githubusercontent.com/u/19835481?v=4","gravatar_id":"","url":"https://api.github.com/users/Thonner","html_url":"https://github.com/Thonner","followers_url":"https://api.github.com/users/Thonner/followers","following_url":"https://api.github.com/users/Thonner/following{/other_user}","gists_url":"https://api.github.com/users/Thonner/gists{/gist_id}","starred_url":"https://api.github.com/users/Thonner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Thonner/subscriptions","organizations_url":"https://api.github.com/users/Thonner/orgs","repos_url":"https://api.github.com/users/Thonner/repos","events_url":"https://api.github.com/users/Thonner/events{/privacy}","received_events_url":"https://api.github.com/users/Thonner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-01T14:50:05Z","updated_at":"2020-05-05T15:45:03Z","closed_at":"2020-05-05T15:45:03Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi BindsNet\r\nI am doing a master project where I am building a neuromorphic processor. I'm am (trying) to use your platform to train a network using Bindsnet, as this is the most promising SNN simulator that stays purely in the spiking domain. Long story to say that I have been playing around supervised MNIST examples, as I would like to use this to test my hardware implementation. But I'm seeing some issues.\r\n\r\nIf you want to use GPU it crashes in the `poisson` function in `encoding.py`. where it expects `cuda:0` device but gets `cpu`. Not sure but I think its the dataloader that needs to be sent to the right device.\r\n\r\nNext: The accuracy measurements that I provided in the training loop can not be right. I have tested this the following way. First i train a network over 5000 inputs, using the provided training loop. This loop reports 100% accuracy after about 600 inputs. After training, I turn off training in the network. Then i test the accuacy after training with the following loop:\r\n```python\r\npbar = tqdm(enumerate(dataloader))\r\n    for (i, datum) in pbar:\r\n        if i > 1000:\r\n            break\r\n        image = datum[\"encoded_image\"]\r\n        label = datum[\"label\"]\r\n        inputs = {\"X\": image.view(time, 1, 1, 28, 28)}\r\n        network.run(inputs=inputs, time=time)\r\n\r\n        out_spikes = network.monitors[\"Ae_spikes\"].get(\"s\")\r\n        class_spike=torch.zeros(10)\r\n        for i in range(time):\r\n            for j in range(n_neurons):\r\n                if out_spikes[i,0,j]:\r\n                    class_spike[j//10] += 1\r\n        \r\n        aVal, maxInd = class_spike.max(0)\r\n        if maxInd == label[0]:\r\n            hit += 1\r\n\r\n    \r\n    acc = hit/1000\r\n    print(\"\\n accuracy: \" + str(acc) +\"\\n\")\r\n```\r\nThis test returns accuracy around 65% depending on the seed. So what is the accuracy that the training loop is stating? To me, my loop should give the actual accuracy.\r\n\r\nSorry for the long issue! Your platform seems really cool! Therefore it is also a shame that your display piece is not running properly. I hope that you'll take the time to have a look at my complaints\r\n- Anthon","closed_by":{"login":"Hananel-Hazan","id":3954715,"node_id":"MDQ6VXNlcjM5NTQ3MTU=","avatar_url":"https://avatars.githubusercontent.com/u/3954715?v=4","gravatar_id":"","url":"https://api.github.com/users/Hananel-Hazan","html_url":"https://github.com/Hananel-Hazan","followers_url":"https://api.github.com/users/Hananel-Hazan/followers","following_url":"https://api.github.com/users/Hananel-Hazan/following{/other_user}","gists_url":"https://api.github.com/users/Hananel-Hazan/gists{/gist_id}","starred_url":"https://api.github.com/users/Hananel-Hazan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hananel-Hazan/subscriptions","organizations_url":"https://api.github.com/users/Hananel-Hazan/orgs","repos_url":"https://api.github.com/users/Hananel-Hazan/repos","events_url":"https://api.github.com/users/Hananel-Hazan/events{/privacy}","received_events_url":"https://api.github.com/users/Hananel-Hazan/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/362/timeline","performed_via_github_app":null,"state_reason":"completed"}