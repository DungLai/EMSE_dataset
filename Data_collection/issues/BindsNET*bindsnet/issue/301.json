{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/301","repository_url":"https://api.github.com/repos/BindsNET/bindsnet","labels_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/301/labels{/name}","comments_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/301/comments","events_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/301/events","html_url":"https://github.com/BindsNET/bindsnet/issues/301","id":473666023,"node_id":"MDU6SXNzdWU0NzM2NjYwMjM=","number":301,"title":"Memory efficient spike encoding","user":{"login":"djsaunde","id":1245942,"node_id":"MDQ6VXNlcjEyNDU5NDI=","avatar_url":"https://avatars.githubusercontent.com/u/1245942?v=4","gravatar_id":"","url":"https://api.github.com/users/djsaunde","html_url":"https://github.com/djsaunde","followers_url":"https://api.github.com/users/djsaunde/followers","following_url":"https://api.github.com/users/djsaunde/following{/other_user}","gists_url":"https://api.github.com/users/djsaunde/gists{/gist_id}","starred_url":"https://api.github.com/users/djsaunde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djsaunde/subscriptions","organizations_url":"https://api.github.com/users/djsaunde/orgs","repos_url":"https://api.github.com/users/djsaunde/repos","events_url":"https://api.github.com/users/djsaunde/events{/privacy}","received_events_url":"https://api.github.com/users/djsaunde/received_events","type":"User","site_admin":false},"labels":[{"id":832665087,"node_id":"MDU6TGFiZWw4MzI2NjUwODc=","url":"https://api.github.com/repos/BindsNET/bindsnet/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2019-07-27T18:40:46Z","updated_at":"2021-01-26T00:50:25Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"At present, we generate input spikes prior to simulation. This results in tensors of shape `[time, *input_shape]`. When `time` and / or `input_shape` is large, this uses a lot of memory.\r\n\r\nWhat we could do is generate spikes from encodings as-needed during simulation. The most obvious way to implement this, to me, is to create `Nodes` objects which maintain the variables needed to generate spikes according to their encoding function. For example, `PoissonNodes` would maintain rate parameters and generate spikes per timestep according to that rate. This would reduce memory usage down from `[time, *input_shape]` to just `[*input_shape]`, which would be a big win especially for long simulations.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/301/timeline","performed_via_github_app":null,"state_reason":null}