{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/242","repository_url":"https://api.github.com/repos/BindsNET/bindsnet","labels_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/242/labels{/name}","comments_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/242/comments","events_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/242/events","html_url":"https://github.com/BindsNET/bindsnet/issues/242","id":440462776,"node_id":"MDU6SXNzdWU0NDA0NjI3NzY=","number":242,"title":"Shape of tensors during convolutions","user":{"login":"k-chaney","id":3302546,"node_id":"MDQ6VXNlcjMzMDI1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3302546?v=4","gravatar_id":"","url":"https://api.github.com/users/k-chaney","html_url":"https://github.com/k-chaney","followers_url":"https://api.github.com/users/k-chaney/followers","following_url":"https://api.github.com/users/k-chaney/following{/other_user}","gists_url":"https://api.github.com/users/k-chaney/gists{/gist_id}","starred_url":"https://api.github.com/users/k-chaney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k-chaney/subscriptions","organizations_url":"https://api.github.com/users/k-chaney/orgs","repos_url":"https://api.github.com/users/k-chaney/repos","events_url":"https://api.github.com/users/k-chaney/events{/privacy}","received_events_url":"https://api.github.com/users/k-chaney/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-05-05T16:22:51Z","updated_at":"2019-05-22T15:25:25Z","closed_at":"2019-05-22T15:25:25Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"For Conv2dConnection, since it utilizes pytorch's conv2d operator it is inherently constrained by the same input expectations, which is BxCxHxW.\r\n\r\nInside of examples/mnist/conv_mnist.py the shape of the tensors go as follows\r\nLine 120 - images has shape - torch.Size([60000, 28, 28])\r\nLine 125 - images is fed to poisson_loader which effectively turns it into - torch.Size([60000, 50, 28, 28])\r\nLine 147 - a single spike stream is pulled out with shape - torch.Size([50, 28, 28])\r\n               - this is then formatted through two unsqueezes which becomes shape -  torch.Size([50, 1, 1, 28, 28])\r\nWhich plays nicely with the sampling in bindsnet/network/__init__.py (line 286) which turns it into torch.Size([1,1,28,28]) and in turn is the shape that conv2d expects.\r\n\r\nHowever this exact formula breaks down with the CIFAR10 dataset which constructs a tensor of shape - torch.Size([50000, 32, 32, 3]) - and thus transpositions must be done.\r\n\r\nThis complexity isn't mirrored in a non-convolutional network (such as the one defined in examples/cifar10/supervised_cifar10.py).\r\n\r\nMy proposal would be to standardize the output from the supported datasets to work with both setups.\r\n\r\nMy suggestion would be to follow in pytorch's footsteps and leverage their data loading pipeline and after the DataLoader produce TxBxCxHxW. Ultimately for larger datasets (such as MVSEC, DDD17, and others) this paradigm will be significantly more flexible.\r\n\r\nOne concern would be breaking some of the backwards compatibility in other portions of the code (this can be helped a bit through keeping the primary access functions around and just deprecate them for removal later).\r\n\r\nI'm more than happy to work on this and can probably have something for review by Tuesday or Wednesday depending on my exact schedule.","closed_by":{"login":"Hananel-Hazan","id":3954715,"node_id":"MDQ6VXNlcjM5NTQ3MTU=","avatar_url":"https://avatars.githubusercontent.com/u/3954715?v=4","gravatar_id":"","url":"https://api.github.com/users/Hananel-Hazan","html_url":"https://github.com/Hananel-Hazan","followers_url":"https://api.github.com/users/Hananel-Hazan/followers","following_url":"https://api.github.com/users/Hananel-Hazan/following{/other_user}","gists_url":"https://api.github.com/users/Hananel-Hazan/gists{/gist_id}","starred_url":"https://api.github.com/users/Hananel-Hazan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hananel-Hazan/subscriptions","organizations_url":"https://api.github.com/users/Hananel-Hazan/orgs","repos_url":"https://api.github.com/users/Hananel-Hazan/repos","events_url":"https://api.github.com/users/Hananel-Hazan/events{/privacy}","received_events_url":"https://api.github.com/users/Hananel-Hazan/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/242/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/242/timeline","performed_via_github_app":null,"state_reason":"completed"}