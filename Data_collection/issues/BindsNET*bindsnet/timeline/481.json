[{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/829263013","html_url":"https://github.com/BindsNET/bindsnet/issues/481#issuecomment-829263013","issue_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/481","id":829263013,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTI2MzAxMw==","user":{"login":"SimonInParis","id":45327416,"node_id":"MDQ6VXNlcjQ1MzI3NDE2","avatar_url":"https://avatars.githubusercontent.com/u/45327416?v=4","gravatar_id":"","url":"https://api.github.com/users/SimonInParis","html_url":"https://github.com/SimonInParis","followers_url":"https://api.github.com/users/SimonInParis/followers","following_url":"https://api.github.com/users/SimonInParis/following{/other_user}","gists_url":"https://api.github.com/users/SimonInParis/gists{/gist_id}","starred_url":"https://api.github.com/users/SimonInParis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimonInParis/subscriptions","organizations_url":"https://api.github.com/users/SimonInParis/orgs","repos_url":"https://api.github.com/users/SimonInParis/repos","events_url":"https://api.github.com/users/SimonInParis/events{/privacy}","received_events_url":"https://api.github.com/users/SimonInParis/received_events","type":"User","site_admin":false},"created_at":"2021-04-29T14:00:50Z","updated_at":"2021-04-29T14:00:50Z","author_association":"COLLABORATOR","body":"Hi.\r\nAre we talking about LIF neurons that fire internally and provide their membrane potential instead of their actual spike state to the subsequent layers?","reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/829263013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"SimonInParis","id":45327416,"node_id":"MDQ6VXNlcjQ1MzI3NDE2","avatar_url":"https://avatars.githubusercontent.com/u/45327416?v=4","gravatar_id":"","url":"https://api.github.com/users/SimonInParis","html_url":"https://github.com/SimonInParis","followers_url":"https://api.github.com/users/SimonInParis/followers","following_url":"https://api.github.com/users/SimonInParis/following{/other_user}","gists_url":"https://api.github.com/users/SimonInParis/gists{/gist_id}","starred_url":"https://api.github.com/users/SimonInParis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimonInParis/subscriptions","organizations_url":"https://api.github.com/users/SimonInParis/orgs","repos_url":"https://api.github.com/users/SimonInParis/repos","events_url":"https://api.github.com/users/SimonInParis/events{/privacy}","received_events_url":"https://api.github.com/users/SimonInParis/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/829272612","html_url":"https://github.com/BindsNET/bindsnet/issues/481#issuecomment-829272612","issue_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/481","id":829272612,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTI3MjYxMg==","user":{"login":"AptX395","id":44229751,"node_id":"MDQ6VXNlcjQ0MjI5NzUx","avatar_url":"https://avatars.githubusercontent.com/u/44229751?v=4","gravatar_id":"","url":"https://api.github.com/users/AptX395","html_url":"https://github.com/AptX395","followers_url":"https://api.github.com/users/AptX395/followers","following_url":"https://api.github.com/users/AptX395/following{/other_user}","gists_url":"https://api.github.com/users/AptX395/gists{/gist_id}","starred_url":"https://api.github.com/users/AptX395/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AptX395/subscriptions","organizations_url":"https://api.github.com/users/AptX395/orgs","repos_url":"https://api.github.com/users/AptX395/repos","events_url":"https://api.github.com/users/AptX395/events{/privacy}","received_events_url":"https://api.github.com/users/AptX395/received_events","type":"User","site_admin":false},"created_at":"2021-04-29T14:12:49Z","updated_at":"2021-04-29T14:12:49Z","author_association":"NONE","body":"> Hi.\r\n> Are we talking about LIF neurons that fire internally and provide their membrane potential instead of their actual spike state to the subsequent layers?\r\n\r\nYes, that's right. Do you know how to do that?","reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/829272612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"AptX395","id":44229751,"node_id":"MDQ6VXNlcjQ0MjI5NzUx","avatar_url":"https://avatars.githubusercontent.com/u/44229751?v=4","gravatar_id":"","url":"https://api.github.com/users/AptX395","html_url":"https://github.com/AptX395","followers_url":"https://api.github.com/users/AptX395/followers","following_url":"https://api.github.com/users/AptX395/following{/other_user}","gists_url":"https://api.github.com/users/AptX395/gists{/gist_id}","starred_url":"https://api.github.com/users/AptX395/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AptX395/subscriptions","organizations_url":"https://api.github.com/users/AptX395/orgs","repos_url":"https://api.github.com/users/AptX395/repos","events_url":"https://api.github.com/users/AptX395/events{/privacy}","received_events_url":"https://api.github.com/users/AptX395/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/829537306","html_url":"https://github.com/BindsNET/bindsnet/issues/481#issuecomment-829537306","issue_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/481","id":829537306,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTUzNzMwNg==","user":{"login":"SimonInParis","id":45327416,"node_id":"MDQ6VXNlcjQ1MzI3NDE2","avatar_url":"https://avatars.githubusercontent.com/u/45327416?v=4","gravatar_id":"","url":"https://api.github.com/users/SimonInParis","html_url":"https://github.com/SimonInParis","followers_url":"https://api.github.com/users/SimonInParis/followers","following_url":"https://api.github.com/users/SimonInParis/following{/other_user}","gists_url":"https://api.github.com/users/SimonInParis/gists{/gist_id}","starred_url":"https://api.github.com/users/SimonInParis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimonInParis/subscriptions","organizations_url":"https://api.github.com/users/SimonInParis/orgs","repos_url":"https://api.github.com/users/SimonInParis/repos","events_url":"https://api.github.com/users/SimonInParis/events{/privacy}","received_events_url":"https://api.github.com/users/SimonInParis/received_events","type":"User","site_admin":false},"created_at":"2021-04-29T19:44:16Z","updated_at":"2021-04-29T19:44:16Z","author_association":"COLLABORATOR","body":"It seems we can do the same here in BindsNet. You can overload the forward, and add **self.s = self.v** to it at the end, if it is what you need, so the network will pass it to the next layer.\r\n\r\n`class NonSpikingNeuron(LIFNodes):\r\n    def forward(self, x: torch.Tensor) -> None:\r\n\r\n        # Decay voltages.\r\n        self.v = self.decay * (self.v - self.rest) + self.rest\r\n\r\n        # Integrate inputs.\r\n        x.masked_fill_(self.refrac_count > 0, 0.0)\r\n\r\n        # Decrement refractory counters.\r\n        self.refrac_count -= self.dt\r\n\r\n        self.v += x  # interlaced\r\n\r\n        # Check for spiking neurons.\r\n        self.s = self.v >= self.thresh\r\n\r\n        # Refractoriness and voltage reset.\r\n        self.refrac_count.masked_fill_(self.s, self.refrac)\r\n        self.v.masked_fill_(self.s, self.reset)\r\n\r\n        # Voltage clipping to lower bound.\r\n        if self.lbound is not None:\r\n            self.v.masked_fill_(self.v < self.lbound, self.lbound)\r\n\r\n        super().forward(x)\r\n\r\n        self.s = self.v`","reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/829537306/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"SimonInParis","id":45327416,"node_id":"MDQ6VXNlcjQ1MzI3NDE2","avatar_url":"https://avatars.githubusercontent.com/u/45327416?v=4","gravatar_id":"","url":"https://api.github.com/users/SimonInParis","html_url":"https://github.com/SimonInParis","followers_url":"https://api.github.com/users/SimonInParis/followers","following_url":"https://api.github.com/users/SimonInParis/following{/other_user}","gists_url":"https://api.github.com/users/SimonInParis/gists{/gist_id}","starred_url":"https://api.github.com/users/SimonInParis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimonInParis/subscriptions","organizations_url":"https://api.github.com/users/SimonInParis/orgs","repos_url":"https://api.github.com/users/SimonInParis/repos","events_url":"https://api.github.com/users/SimonInParis/events{/privacy}","received_events_url":"https://api.github.com/users/SimonInParis/received_events","type":"User","site_admin":false}},{"id":4665645322,"node_id":"MDExOkNsb3NlZEV2ZW50NDY2NTY0NTMyMg==","url":"https://api.github.com/repos/BindsNET/bindsnet/issues/events/4665645322","actor":{"login":"Hananel-Hazan","id":3954715,"node_id":"MDQ6VXNlcjM5NTQ3MTU=","avatar_url":"https://avatars.githubusercontent.com/u/3954715?v=4","gravatar_id":"","url":"https://api.github.com/users/Hananel-Hazan","html_url":"https://github.com/Hananel-Hazan","followers_url":"https://api.github.com/users/Hananel-Hazan/followers","following_url":"https://api.github.com/users/Hananel-Hazan/following{/other_user}","gists_url":"https://api.github.com/users/Hananel-Hazan/gists{/gist_id}","starred_url":"https://api.github.com/users/Hananel-Hazan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hananel-Hazan/subscriptions","organizations_url":"https://api.github.com/users/Hananel-Hazan/orgs","repos_url":"https://api.github.com/users/Hananel-Hazan/repos","events_url":"https://api.github.com/users/Hananel-Hazan/events{/privacy}","received_events_url":"https://api.github.com/users/Hananel-Hazan/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2021-04-29T22:46:04Z","state_reason":null,"performed_via_github_app":null},{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/829755626","html_url":"https://github.com/BindsNET/bindsnet/issues/481#issuecomment-829755626","issue_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/481","id":829755626,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTc1NTYyNg==","user":{"login":"AptX395","id":44229751,"node_id":"MDQ6VXNlcjQ0MjI5NzUx","avatar_url":"https://avatars.githubusercontent.com/u/44229751?v=4","gravatar_id":"","url":"https://api.github.com/users/AptX395","html_url":"https://github.com/AptX395","followers_url":"https://api.github.com/users/AptX395/followers","following_url":"https://api.github.com/users/AptX395/following{/other_user}","gists_url":"https://api.github.com/users/AptX395/gists{/gist_id}","starred_url":"https://api.github.com/users/AptX395/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AptX395/subscriptions","organizations_url":"https://api.github.com/users/AptX395/orgs","repos_url":"https://api.github.com/users/AptX395/repos","events_url":"https://api.github.com/users/AptX395/events{/privacy}","received_events_url":"https://api.github.com/users/AptX395/received_events","type":"User","site_admin":false},"created_at":"2021-04-30T02:37:10Z","updated_at":"2021-04-30T02:37:10Z","author_association":"NONE","body":"> It seems we can do the same here in BindsNet. You can overload the forward, and add **self.s = self.v** to it at the end, if it is what you need, so the network will pass it to the next layer.\r\n> \r\n> `class NonSpikingNeuron(LIFNodes):\r\n> def forward(self, x: torch.Tensor) -> None:\r\n> \r\n> ```\r\n>     # Decay voltages.\r\n>     self.v = self.decay * (self.v - self.rest) + self.rest\r\n> \r\n>     # Integrate inputs.\r\n>     x.masked_fill_(self.refrac_count > 0, 0.0)\r\n> \r\n>     # Decrement refractory counters.\r\n>     self.refrac_count -= self.dt\r\n> \r\n>     self.v += x  # interlaced\r\n> \r\n>     # Check for spiking neurons.\r\n>     self.s = self.v >= self.thresh\r\n> \r\n>     # Refractoriness and voltage reset.\r\n>     self.refrac_count.masked_fill_(self.s, self.refrac)\r\n>     self.v.masked_fill_(self.s, self.reset)\r\n> \r\n>     # Voltage clipping to lower bound.\r\n>     if self.lbound is not None:\r\n>         self.v.masked_fill_(self.v < self.lbound, self.lbound)\r\n> \r\n>     super().forward(x)\r\n> \r\n>     self.s = self.v`\r\n> ```\r\n\r\nThanks for your help!","reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/829755626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"AptX395","id":44229751,"node_id":"MDQ6VXNlcjQ0MjI5NzUx","avatar_url":"https://avatars.githubusercontent.com/u/44229751?v=4","gravatar_id":"","url":"https://api.github.com/users/AptX395","html_url":"https://github.com/AptX395","followers_url":"https://api.github.com/users/AptX395/followers","following_url":"https://api.github.com/users/AptX395/following{/other_user}","gists_url":"https://api.github.com/users/AptX395/gists{/gist_id}","starred_url":"https://api.github.com/users/AptX395/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AptX395/subscriptions","organizations_url":"https://api.github.com/users/AptX395/orgs","repos_url":"https://api.github.com/users/AptX395/repos","events_url":"https://api.github.com/users/AptX395/events{/privacy}","received_events_url":"https://api.github.com/users/AptX395/received_events","type":"User","site_admin":false}}]