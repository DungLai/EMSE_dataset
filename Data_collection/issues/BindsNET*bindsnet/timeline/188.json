[{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/462706241","html_url":"https://github.com/BindsNET/bindsnet/issues/188#issuecomment-462706241","issue_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/188","id":462706241,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjcwNjI0MQ==","user":{"login":"lehahoang","id":37591808,"node_id":"MDQ6VXNlcjM3NTkxODA4","avatar_url":"https://avatars.githubusercontent.com/u/37591808?v=4","gravatar_id":"","url":"https://api.github.com/users/lehahoang","html_url":"https://github.com/lehahoang","followers_url":"https://api.github.com/users/lehahoang/followers","following_url":"https://api.github.com/users/lehahoang/following{/other_user}","gists_url":"https://api.github.com/users/lehahoang/gists{/gist_id}","starred_url":"https://api.github.com/users/lehahoang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lehahoang/subscriptions","organizations_url":"https://api.github.com/users/lehahoang/orgs","repos_url":"https://api.github.com/users/lehahoang/repos","events_url":"https://api.github.com/users/lehahoang/events{/privacy}","received_events_url":"https://api.github.com/users/lehahoang/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T10:32:49Z","updated_at":"2019-02-12T10:33:11Z","author_association":"NONE","body":"Hi,\r\nI have looked into my code. I guess that after the first iteration of the outer loop, the pointer of the \"next(data_loader)\" pointed to the last dataset (60000th). Hence, there was no dataset to be loaded for the second training process. I assume that we have to call \"data_loader = poisson_loader(data=images, time=time, dt=dt)\" syntax again to get the \"new\" training set.\r\nThat's why now my code looks absolutely crazy:\r\n##........\r\nif not train:\r\n    update_interval = n_test\r\nfor j in range(epoch):\r\n    n_sqrt = int(np.ceil(np.sqrt(n_neurons)))\r\n    start_intensity = intensity\r\n\r\n    # Build network.\r\n    network = DiehlAndCook2015(n_inpt=784, n_neurons=n_neurons, exc=exc, inh=inh, dt=dt, norm=78.4, theta_plus=1)\r\n\r\n    # Voltage recording for excitatory and inhibitory layers.\r\n    exc_voltage_monitor = Monitor(network.layers['Ae'], ['v'], time=time)\r\n    inh_voltage_monitor = Monitor(network.layers['Ai'], ['v'], time=time)\r\n    network.add_monitor(exc_voltage_monitor, name='exc_voltage')\r\n    network.add_monitor(inh_voltage_monitor, name='inh_voltage')\r\n\r\n    # Load MNIST data.\r\n    images, labels = MNIST(path=os.path.join('..', '..', 'data', 'MNIST'), download=True).get_train()\r\n    images = images.view(-1, 784)\r\n    images *= intensity\r\n\r\n    # Lazily encode data as Poisson spike trains.\r\n    data_loader = poisson_loader(data=images, time=time, dt=dt)\r\n\r\n    # Record spikes during the simulation.\r\n    spike_record = torch.zeros(update_interval, time, n_neurons)\r\n\r\n    # Neuron assignments and spike proportions.\r\n    assignments = -torch.ones_like(torch.Tensor(n_neurons))\r\n    proportions = torch.zeros_like(torch.Tensor(n_neurons, 10))\r\n    rates = torch.zeros_like(torch.Tensor(n_neurons, 10))\r\n\r\n    # Sequence of accuracy estimates.\r\n    accuracy = {'all': [], 'proportion': []}\r\n\r\n    spikes = {}\r\n    for layer in set(network.layers) - {'X'}:\r\n        spikes[layer] = Monitor(network.layers[layer], state_vars=['s'], time=time)\r\n        network.add_monitor(spikes[layer], name='%s_spikes' % layer)\r\n\r\n    # Train the network.\r\n    print('\\nBegin training.\\n')\r\n    start_time = t()\r\n    start = t()\r\n    print('This is the ', j+1, 'th epoch')\r\n    for i in range(n_train):\r\n        if i % progress_interval == 0:\r\n            print('Progress: %d / %d (%.4f seconds)' % (i, n_train, t() - start))\r\n            start = t()\r\n\r\n        if i % update_interval == 0 and i > 0:\r\n            # Get network predictions.\r\n            all_activity_pred = all_activity(spike_record, assignments, 10)\r\n            proportion_pred = proportion_weighting(spike_record, assignments, proportions, 10)\r\n\r\n            # Compute network accuracy according to available classification strategies.\r\n            accuracy['all'].append(100 * torch.sum(labels[i - update_interval:i].long() \\\r\n                                                   == all_activity_pred) / update_interval)\r\n            accuracy['proportion'].append(100 * torch.sum(labels[i - update_interval:i].long() \\\r\n                                                          == proportion_pred) / update_interval)\r\n\r\n            print('\\nAll activity accuracy: %.2f (last), %.2f (average), %.2f (best)' \\\r\n                  % (accuracy['all'][-1], np.mean(accuracy['all']), np.max(accuracy['all'])))\r\n            print('Proportion weighting accuracy: %.2f (last), %.2f (average), %.2f (best)\\n' \\\r\n                  % (accuracy['proportion'][-1], np.mean(accuracy['proportion']),\r\n                     np.max(accuracy['proportion'])))\r\n\r\n            # Assign labels to excitatory layer neurons.\r\n            assignments, proportions, rates = assign_labels(spike_record, labels[i - update_interval:i], 10, rates)\r\n\r\n        # Get next input sample.\r\n        sample = next(data_loader)\r\n        inpts = {'X': sample}\r\n\r\n        # Run the network on the input.\r\n        network.run(inpts=inpts, time=time)\r\n\r\n        # Get voltage recording.\r\n        exc_voltages = exc_voltage_monitor.get('v')\r\n        inh_voltages = inh_voltage_monitor.get('v')\r\n\r\n        # Add to spikes recording.\r\n        spike_record[i % update_interval] = spikes['Ae'].get('s').t()\r\n\r\n        # Optionally plot various simulation information.\r\n        if plot:\r\n            inpt = inpts['X'].view(time, 784).sum(0).view(28, 28)\r\n            input_exc_weights = network.connections[('X', 'Ae')].w\r\n            square_weights = get_square_weights(input_exc_weights.view(784, n_neurons), n_sqrt, 28)\r\n            square_assignments = get_square_assignments(assignments, n_sqrt)\r\n            voltages = {'Ae': exc_voltages, 'Ai': inh_voltages}\r\n\r\n            if i == 0:\r\n                #inpt_axes, inpt_ims = plot_input(images[i].view(28, 28), inpt, label=labels[i])\r\n                #spike_ims, spike_axes = plot_spikes({layer: spikes[layer].get('s') for layer in spikes})\r\n                weights_im = plot_weights(square_weights)\r\n                assigns_im = plot_assignments(square_assignments)\r\n                perf_ax = plot_performance(accuracy)\r\n                #voltage_ims, voltage_axes = plot_voltages(voltages)\r\n\r\n            else:\r\n                #inpt_axes, inpt_ims = plot_input(images[i].view(28, 28), inpt, label=labels[i], axes=inpt_axes,\r\n                #                                 ims=inpt_ims)\r\n                #spike_ims, spike_axes = plot_spikes({layer: spikes[layer].get('s') for layer in spikes},\r\n                #                                    ims=spike_ims, axes=spike_axes)\r\n                weights_im = plot_weights(square_weights, im=weights_im)\r\n                assigns_im = plot_assignments(square_assignments, im=assigns_im)\r\n                perf_ax = plot_performance(accuracy, ax=perf_ax)\r\n                #voltage_ims, voltage_axes = plot_voltages(voltages, ims=voltage_ims, axes=voltage_axes)\r\n            plt.pause(1e-8)\r\n        if i==n_train-1:\r\n            network.save('./trained_eth_network_2.pt')\r\n            print('network saved')\r\n            network.reset_()  # Reset state variables.\r\n        else:\r\n            network.reset_()  # Reset state variables.\r\n    print('Finish the ', j+1, 'th epoch')\r\n\r\nprint('Progress: %d / %d (%.4f seconds)\\n' % (n_train, n_train, t() - start))\r\nprint('Training complete.\\n')\r\ntime_execution = (t() - start_time)/3600\r\nprint('Total time for training is {:f} hours\\n'.format(time_execution))\r\n","reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/462706241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lehahoang","id":37591808,"node_id":"MDQ6VXNlcjM3NTkxODA4","avatar_url":"https://avatars.githubusercontent.com/u/37591808?v=4","gravatar_id":"","url":"https://api.github.com/users/lehahoang","html_url":"https://github.com/lehahoang","followers_url":"https://api.github.com/users/lehahoang/followers","following_url":"https://api.github.com/users/lehahoang/following{/other_user}","gists_url":"https://api.github.com/users/lehahoang/gists{/gist_id}","starred_url":"https://api.github.com/users/lehahoang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lehahoang/subscriptions","organizations_url":"https://api.github.com/users/lehahoang/orgs","repos_url":"https://api.github.com/users/lehahoang/repos","events_url":"https://api.github.com/users/lehahoang/events{/privacy}","received_events_url":"https://api.github.com/users/lehahoang/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/462854429","html_url":"https://github.com/BindsNET/bindsnet/issues/188#issuecomment-462854429","issue_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/188","id":462854429,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg1NDQyOQ==","user":{"login":"dee0512","id":7398932,"node_id":"MDQ6VXNlcjczOTg5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/7398932?v=4","gravatar_id":"","url":"https://api.github.com/users/dee0512","html_url":"https://github.com/dee0512","followers_url":"https://api.github.com/users/dee0512/followers","following_url":"https://api.github.com/users/dee0512/following{/other_user}","gists_url":"https://api.github.com/users/dee0512/gists{/gist_id}","starred_url":"https://api.github.com/users/dee0512/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dee0512/subscriptions","organizations_url":"https://api.github.com/users/dee0512/orgs","repos_url":"https://api.github.com/users/dee0512/repos","events_url":"https://api.github.com/users/dee0512/events{/privacy}","received_events_url":"https://api.github.com/users/dee0512/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T17:30:17Z","updated_at":"2019-02-12T17:30:17Z","author_association":"COLLABORATOR","body":"Hi @lehahoang,\r\n\r\nThis example was meant to run only one epoch. However, it should be easy to modify the code for more than one epochs as follows:\r\n```\r\nfor j in range(epochs):\r\n     for datum in data_loader:\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/462854429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dee0512","id":7398932,"node_id":"MDQ6VXNlcjczOTg5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/7398932?v=4","gravatar_id":"","url":"https://api.github.com/users/dee0512","html_url":"https://github.com/dee0512","followers_url":"https://api.github.com/users/dee0512/followers","following_url":"https://api.github.com/users/dee0512/following{/other_user}","gists_url":"https://api.github.com/users/dee0512/gists{/gist_id}","starred_url":"https://api.github.com/users/dee0512/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dee0512/subscriptions","organizations_url":"https://api.github.com/users/dee0512/orgs","repos_url":"https://api.github.com/users/dee0512/repos","events_url":"https://api.github.com/users/dee0512/events{/privacy}","received_events_url":"https://api.github.com/users/dee0512/received_events","type":"User","site_admin":false}},{"id":2134416856,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjEzNDQxNjg1Ng==","url":"https://api.github.com/repos/BindsNET/bindsnet/issues/events/2134416856","actor":{"login":"lehahoang","id":37591808,"node_id":"MDQ6VXNlcjM3NTkxODA4","avatar_url":"https://avatars.githubusercontent.com/u/37591808?v=4","gravatar_id":"","url":"https://api.github.com/users/lehahoang","html_url":"https://github.com/lehahoang","followers_url":"https://api.github.com/users/lehahoang/followers","following_url":"https://api.github.com/users/lehahoang/following{/other_user}","gists_url":"https://api.github.com/users/lehahoang/gists{/gist_id}","starred_url":"https://api.github.com/users/lehahoang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lehahoang/subscriptions","organizations_url":"https://api.github.com/users/lehahoang/orgs","repos_url":"https://api.github.com/users/lehahoang/repos","events_url":"https://api.github.com/users/lehahoang/events{/privacy}","received_events_url":"https://api.github.com/users/lehahoang/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-02-12T17:30:17Z","performed_via_github_app":null},{"id":2134416858,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDIxMzQ0MTY4NTg=","url":"https://api.github.com/repos/BindsNET/bindsnet/issues/events/2134416858","actor":{"login":"lehahoang","id":37591808,"node_id":"MDQ6VXNlcjM3NTkxODA4","avatar_url":"https://avatars.githubusercontent.com/u/37591808?v=4","gravatar_id":"","url":"https://api.github.com/users/lehahoang","html_url":"https://github.com/lehahoang","followers_url":"https://api.github.com/users/lehahoang/followers","following_url":"https://api.github.com/users/lehahoang/following{/other_user}","gists_url":"https://api.github.com/users/lehahoang/gists{/gist_id}","starred_url":"https://api.github.com/users/lehahoang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lehahoang/subscriptions","organizations_url":"https://api.github.com/users/lehahoang/orgs","repos_url":"https://api.github.com/users/lehahoang/repos","events_url":"https://api.github.com/users/lehahoang/events{/privacy}","received_events_url":"https://api.github.com/users/lehahoang/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-02-12T17:30:17Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/462858684","html_url":"https://github.com/BindsNET/bindsnet/issues/188#issuecomment-462858684","issue_url":"https://api.github.com/repos/BindsNET/bindsnet/issues/188","id":462858684,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg1ODY4NA==","user":{"login":"lehahoang","id":37591808,"node_id":"MDQ6VXNlcjM3NTkxODA4","avatar_url":"https://avatars.githubusercontent.com/u/37591808?v=4","gravatar_id":"","url":"https://api.github.com/users/lehahoang","html_url":"https://github.com/lehahoang","followers_url":"https://api.github.com/users/lehahoang/followers","following_url":"https://api.github.com/users/lehahoang/following{/other_user}","gists_url":"https://api.github.com/users/lehahoang/gists{/gist_id}","starred_url":"https://api.github.com/users/lehahoang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lehahoang/subscriptions","organizations_url":"https://api.github.com/users/lehahoang/orgs","repos_url":"https://api.github.com/users/lehahoang/repos","events_url":"https://api.github.com/users/lehahoang/events{/privacy}","received_events_url":"https://api.github.com/users/lehahoang/received_events","type":"User","site_admin":false},"created_at":"2019-02-12T17:41:08Z","updated_at":"2019-02-12T17:41:08Z","author_association":"NONE","body":"Hi @dee0512 ,\r\nThank you for your suggestion. I will try it.","reactions":{"url":"https://api.github.com/repos/BindsNET/bindsnet/issues/comments/462858684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lehahoang","id":37591808,"node_id":"MDQ6VXNlcjM3NTkxODA4","avatar_url":"https://avatars.githubusercontent.com/u/37591808?v=4","gravatar_id":"","url":"https://api.github.com/users/lehahoang","html_url":"https://github.com/lehahoang","followers_url":"https://api.github.com/users/lehahoang/followers","following_url":"https://api.github.com/users/lehahoang/following{/other_user}","gists_url":"https://api.github.com/users/lehahoang/gists{/gist_id}","starred_url":"https://api.github.com/users/lehahoang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lehahoang/subscriptions","organizations_url":"https://api.github.com/users/lehahoang/orgs","repos_url":"https://api.github.com/users/lehahoang/repos","events_url":"https://api.github.com/users/lehahoang/events{/privacy}","received_events_url":"https://api.github.com/users/lehahoang/received_events","type":"User","site_admin":false}},{"id":2134446100,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjEzNDQ0NjEwMA==","url":"https://api.github.com/repos/BindsNET/bindsnet/issues/events/2134446100","actor":{"login":"dee0512","id":7398932,"node_id":"MDQ6VXNlcjczOTg5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/7398932?v=4","gravatar_id":"","url":"https://api.github.com/users/dee0512","html_url":"https://github.com/dee0512","followers_url":"https://api.github.com/users/dee0512/followers","following_url":"https://api.github.com/users/dee0512/following{/other_user}","gists_url":"https://api.github.com/users/dee0512/gists{/gist_id}","starred_url":"https://api.github.com/users/dee0512/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dee0512/subscriptions","organizations_url":"https://api.github.com/users/dee0512/orgs","repos_url":"https://api.github.com/users/dee0512/repos","events_url":"https://api.github.com/users/dee0512/events{/privacy}","received_events_url":"https://api.github.com/users/dee0512/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-02-12T17:41:09Z","performed_via_github_app":null},{"id":2134446101,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDIxMzQ0NDYxMDE=","url":"https://api.github.com/repos/BindsNET/bindsnet/issues/events/2134446101","actor":{"login":"dee0512","id":7398932,"node_id":"MDQ6VXNlcjczOTg5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/7398932?v=4","gravatar_id":"","url":"https://api.github.com/users/dee0512","html_url":"https://github.com/dee0512","followers_url":"https://api.github.com/users/dee0512/followers","following_url":"https://api.github.com/users/dee0512/following{/other_user}","gists_url":"https://api.github.com/users/dee0512/gists{/gist_id}","starred_url":"https://api.github.com/users/dee0512/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dee0512/subscriptions","organizations_url":"https://api.github.com/users/dee0512/orgs","repos_url":"https://api.github.com/users/dee0512/repos","events_url":"https://api.github.com/users/dee0512/events{/privacy}","received_events_url":"https://api.github.com/users/dee0512/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-02-12T17:41:09Z","performed_via_github_app":null},{"id":2136371987,"node_id":"MDExOkNsb3NlZEV2ZW50MjEzNjM3MTk4Nw==","url":"https://api.github.com/repos/BindsNET/bindsnet/issues/events/2136371987","actor":{"login":"lehahoang","id":37591808,"node_id":"MDQ6VXNlcjM3NTkxODA4","avatar_url":"https://avatars.githubusercontent.com/u/37591808?v=4","gravatar_id":"","url":"https://api.github.com/users/lehahoang","html_url":"https://github.com/lehahoang","followers_url":"https://api.github.com/users/lehahoang/followers","following_url":"https://api.github.com/users/lehahoang/following{/other_user}","gists_url":"https://api.github.com/users/lehahoang/gists{/gist_id}","starred_url":"https://api.github.com/users/lehahoang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lehahoang/subscriptions","organizations_url":"https://api.github.com/users/lehahoang/orgs","repos_url":"https://api.github.com/users/lehahoang/repos","events_url":"https://api.github.com/users/lehahoang/events{/privacy}","received_events_url":"https://api.github.com/users/lehahoang/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2019-02-13T11:01:43Z","state_reason":null,"performed_via_github_app":null}]