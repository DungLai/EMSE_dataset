{"url":"https://api.github.com/repos/stefanonardo/pytorch-esn/issues/7","repository_url":"https://api.github.com/repos/stefanonardo/pytorch-esn","labels_url":"https://api.github.com/repos/stefanonardo/pytorch-esn/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/stefanonardo/pytorch-esn/issues/7/comments","events_url":"https://api.github.com/repos/stefanonardo/pytorch-esn/issues/7/events","html_url":"https://github.com/stefanonardo/pytorch-esn/issues/7","id":423214851,"node_id":"MDU6SXNzdWU0MjMyMTQ4NTE=","number":7,"title":"how to efficiently predict chaotic serialized data , like lorenz ?","user":{"login":"JingliangGao","id":32430057,"node_id":"MDQ6VXNlcjMyNDMwMDU3","avatar_url":"https://avatars.githubusercontent.com/u/32430057?v=4","gravatar_id":"","url":"https://api.github.com/users/JingliangGao","html_url":"https://github.com/JingliangGao","followers_url":"https://api.github.com/users/JingliangGao/followers","following_url":"https://api.github.com/users/JingliangGao/following{/other_user}","gists_url":"https://api.github.com/users/JingliangGao/gists{/gist_id}","starred_url":"https://api.github.com/users/JingliangGao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JingliangGao/subscriptions","organizations_url":"https://api.github.com/users/JingliangGao/orgs","repos_url":"https://api.github.com/users/JingliangGao/repos","events_url":"https://api.github.com/users/JingliangGao/events{/privacy}","received_events_url":"https://api.github.com/users/JingliangGao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-03-20T12:03:06Z","updated_at":"2019-05-01T16:51:23Z","closed_at":"2019-05-01T16:51:23Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n    Referring to the examples you provide, I have  successsfully write the code to predict Lorenz serialized data, though the result is terrible. Um ... I still don't understand some details as follows.\r\n************************************************************************************************\r\n1. Why we set '**washout** ' this variable ? For example, when we set **washout** be 10 and try to use **trx** (length 30) to predict **trY**, we may get an output  with length 20 (30-10= 20). BTW, I have read your comments in echo_state_network.py, but still don't understand the reason.\r\n\r\n2. How we recogize '**Deep**' this concept ? I have had a glance at the paper of Deep-ESN, and it seems that muti-reserviors have been connected to make this structure be deeper. I have read your code ,  but can not see this idea.\r\n************************************************************************************************\r\n\r\nI am looking for your reply. :)  @stefanonardo \r\n                                                                                                                      \r\n\r\n\r\n","closed_by":{"login":"stefanonardo","id":11474759,"node_id":"MDQ6VXNlcjExNDc0NzU5","avatar_url":"https://avatars.githubusercontent.com/u/11474759?v=4","gravatar_id":"","url":"https://api.github.com/users/stefanonardo","html_url":"https://github.com/stefanonardo","followers_url":"https://api.github.com/users/stefanonardo/followers","following_url":"https://api.github.com/users/stefanonardo/following{/other_user}","gists_url":"https://api.github.com/users/stefanonardo/gists{/gist_id}","starred_url":"https://api.github.com/users/stefanonardo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stefanonardo/subscriptions","organizations_url":"https://api.github.com/users/stefanonardo/orgs","repos_url":"https://api.github.com/users/stefanonardo/repos","events_url":"https://api.github.com/users/stefanonardo/events{/privacy}","received_events_url":"https://api.github.com/users/stefanonardo/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/stefanonardo/pytorch-esn/issues/7/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/stefanonardo/pytorch-esn/issues/7/timeline","performed_via_github_app":null,"state_reason":"completed"}