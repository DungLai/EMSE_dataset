{"url":"https://api.github.com/repos/bryanlimy/tf2-transformer-chatbot/issues/14","repository_url":"https://api.github.com/repos/bryanlimy/tf2-transformer-chatbot","labels_url":"https://api.github.com/repos/bryanlimy/tf2-transformer-chatbot/issues/14/labels{/name}","comments_url":"https://api.github.com/repos/bryanlimy/tf2-transformer-chatbot/issues/14/comments","events_url":"https://api.github.com/repos/bryanlimy/tf2-transformer-chatbot/issues/14/events","html_url":"https://github.com/bryanlimy/tf2-transformer-chatbot/issues/14","id":646896400,"node_id":"MDU6SXNzdWU2NDY4OTY0MDA=","number":14,"title":"Possible bug in the padding mask handling","user":{"login":"bjourne","id":142475,"node_id":"MDQ6VXNlcjE0MjQ3NQ==","avatar_url":"https://avatars.githubusercontent.com/u/142475?v=4","gravatar_id":"","url":"https://api.github.com/users/bjourne","html_url":"https://github.com/bjourne","followers_url":"https://api.github.com/users/bjourne/followers","following_url":"https://api.github.com/users/bjourne/following{/other_user}","gists_url":"https://api.github.com/users/bjourne/gists{/gist_id}","starred_url":"https://api.github.com/users/bjourne/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bjourne/subscriptions","organizations_url":"https://api.github.com/users/bjourne/orgs","repos_url":"https://api.github.com/users/bjourne/repos","events_url":"https://api.github.com/users/bjourne/events{/privacy}","received_events_url":"https://api.github.com/users/bjourne/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-06-28T11:12:46Z","updated_at":"2020-06-28T15:34:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I've stared at these lines in your excellent tutorial for a while now:\r\n ```python\r\n  enc_padding_mask = tf.keras.layers.Lambda(\r\n      create_padding_mask, output_shape=(1, 1, None),\r\n      name='enc_padding_mask')(inputs)\r\n  # mask the future tokens for decoder inputs at the 1st attention block\r\n  look_ahead_mask = tf.keras.layers.Lambda(\r\n      create_look_ahead_mask,\r\n      output_shape=(1, None, None),\r\n      name='look_ahead_mask')(dec_inputs)\r\n  # mask the encoder outputs for the 2nd attention block\r\n  dec_padding_mask = tf.keras.layers.Lambda(\r\n      create_padding_mask, output_shape=(1, 1, None),\r\n      name='dec_padding_mask')(inputs)\r\n```\r\n\r\n`enc_padding_mask` and `dec_padding_mask` will always be equal. Is this intentional? It seems weird to create two different padding masks that are the same. \r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/bryanlimy/tf2-transformer-chatbot/issues/14/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/bryanlimy/tf2-transformer-chatbot/issues/14/timeline","performed_via_github_app":null,"state_reason":null}