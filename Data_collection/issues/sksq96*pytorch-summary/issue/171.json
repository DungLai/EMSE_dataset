{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/171","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/171/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/171/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/171/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/171","id":892485538,"node_id":"MDU6SXNzdWU4OTI0ODU1Mzg=","number":171,"title":"Block if using pytorch-summary","user":{"login":"navi2000","id":12449155,"node_id":"MDQ6VXNlcjEyNDQ5MTU1","avatar_url":"https://avatars.githubusercontent.com/u/12449155?v=4","gravatar_id":"","url":"https://api.github.com/users/navi2000","html_url":"https://github.com/navi2000","followers_url":"https://api.github.com/users/navi2000/followers","following_url":"https://api.github.com/users/navi2000/following{/other_user}","gists_url":"https://api.github.com/users/navi2000/gists{/gist_id}","starred_url":"https://api.github.com/users/navi2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/navi2000/subscriptions","organizations_url":"https://api.github.com/users/navi2000/orgs","repos_url":"https://api.github.com/users/navi2000/repos","events_url":"https://api.github.com/users/navi2000/events{/privacy}","received_events_url":"https://api.github.com/users/navi2000/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-15T16:19:28Z","updated_at":"2021-05-15T16:19:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have been having some blocking issues. I isolated the problem in this 30 lines code:\r\n\r\n```\r\nimport numpy as np\r\nimport torch\r\nfrom torchsummary import summary\r\nimport torch.multiprocessing as mp\r\nfrom torch.nn import functional as F\r\n\r\nclass MyModel(torch.nn.Module):\r\n    def __init__(self):\r\n        super(MyModel, self).__init__()\r\n        self.l1 = torch.nn.Linear(64, 100)\r\n        self.last = torch.nn.Linear(100, 4)\r\n    def forward(self,x):\r\n        y = F.relu(self.l1(x))\r\n        result = F.log_softmax(self.last(y),dim=0)\r\n        return result\r\n\r\n\r\ndef worker(t, worker_model):\r\n    state = torch.from_numpy(np.random.rand(1, 64)).float()\r\n    value = worker_model(state)\r\n    print (\"Never arrive here\")\r\n\r\n\r\nmodel = MyModel()\r\nmodel.share_memory()\r\n#summary(model, (1,64))\r\n\r\np = mp.Process(target=worker, args=(0, model))\r\np.start() \r\np.join()\r\n```\r\n\r\nIf you uncomment the 'summary' line, the worker function will be blocked in the call to `worker_model(state)`. ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/171/timeline","performed_via_github_app":null,"state_reason":null}