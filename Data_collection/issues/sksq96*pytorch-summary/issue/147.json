{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/147","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/147/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/147/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/147/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/147","id":685481755,"node_id":"MDU6SXNzdWU2ODU0ODE3NTU=","number":147,"title":"Maybe a flag to Omit custom nn.Modules","user":{"login":"dsantiago","id":3484029,"node_id":"MDQ6VXNlcjM0ODQwMjk=","avatar_url":"https://avatars.githubusercontent.com/u/3484029?v=4","gravatar_id":"","url":"https://api.github.com/users/dsantiago","html_url":"https://github.com/dsantiago","followers_url":"https://api.github.com/users/dsantiago/followers","following_url":"https://api.github.com/users/dsantiago/following{/other_user}","gists_url":"https://api.github.com/users/dsantiago/gists{/gist_id}","starred_url":"https://api.github.com/users/dsantiago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsantiago/subscriptions","organizations_url":"https://api.github.com/users/dsantiago/orgs","repos_url":"https://api.github.com/users/dsantiago/repos","events_url":"https://api.github.com/users/dsantiago/events{/privacy}","received_events_url":"https://api.github.com/users/dsantiago/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-25T13:21:39Z","updated_at":"2020-08-25T13:21:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, sometimes showing the Custom Module is confusing, an example:\r\n\r\n```python\r\nclass Convolutional(nn.Module):\r\n    def __init__(self, in, out:\r\n        super(Convolutional, self).__init__()\r\n\r\n        self.layer = nn.Sequential(\r\n            nn.Conv2d(in, out),\r\n            nn.BatchNorm2d(out),\r\n            nn.LeakyReLU(0.1, inplace=True)\r\n        )\r\n        \r\n    def forward(self, x):\r\n        return self.layer(x)\r\n```\r\n\r\nResults in:\r\n    Convolutional-1           [-1, 32, 416, 416]                   0\r\n    Conv2d-2                    [-1, 64, 208, 208]         18,432\r\n    BatchNorm2d-3         [-1, 64, 208, 208]              128\r\n    LeakyReLU-4              [-1, 64, 208, 208]                 0\r\n\r\n\r\nThat \"Convolutional\" Module/Layer confuses the end result, worst yet when the net gets bigger. I would expect a way to just get the Conv -> Batch -> LeakyRelu  Modules/Layers.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/147/timeline","performed_via_github_app":null,"state_reason":null}