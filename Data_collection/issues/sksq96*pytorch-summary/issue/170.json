{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/170","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/170/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/170/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/170/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/170","id":861016439,"node_id":"MDU6SXNzdWU4NjEwMTY0Mzk=","number":170,"title":"RuntimeError: size mismatch, m1: [2 x 256], m2: [64 x 7] at C:/w/b/windows/pytorch/aten/src\\THC/generic/THCTensorMathBlas.cu:283","user":{"login":"DataXujing","id":24708267,"node_id":"MDQ6VXNlcjI0NzA4MjY3","avatar_url":"https://avatars.githubusercontent.com/u/24708267?v=4","gravatar_id":"","url":"https://api.github.com/users/DataXujing","html_url":"https://github.com/DataXujing","followers_url":"https://api.github.com/users/DataXujing/followers","following_url":"https://api.github.com/users/DataXujing/following{/other_user}","gists_url":"https://api.github.com/users/DataXujing/gists{/gist_id}","starred_url":"https://api.github.com/users/DataXujing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DataXujing/subscriptions","organizations_url":"https://api.github.com/users/DataXujing/orgs","repos_url":"https://api.github.com/users/DataXujing/repos","events_url":"https://api.github.com/users/DataXujing/events{/privacy}","received_events_url":"https://api.github.com/users/DataXujing/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-04-19T07:53:00Z","updated_at":"2021-04-19T07:53:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"summary resnet\r\n```\r\n    def forward(self, x):\r\n        out = self.conv(x)\r\n        out = self.bn(out)\r\n        out = self.relu(out)\r\n        out = self.layer1(out)\r\n        out = self.layer2(out)\r\n        out = self.layer3(out)\r\n        out = self.avg_pool(out)\r\n        out = out.view(out.size(0), -1)\r\n        out = self.fc(out)  # <-------------------error\r\n        return out\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"F:\\soft_xj\\python\\lib\\site-packages\\torchsummary\\torchsummary.py\", line 140, in summary\r\n    _ = model.to(device)(*x, *args, **kwargs)  # type: ignore[misc]\r\n  File \"F:\\soft_xj\\python\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"C:\\Users\\xj\\Desktop\\AI_teach2\\ResNet50\\model.py\", line 69, in forward\r\n    out = self.fc(out)\r\n  File \"F:\\soft_xj\\python\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"F:\\soft_xj\\python\\lib\\site-packages\\torch\\nn\\modules\\linear.py\", line 87, in forward\r\n    return F.linear(input, self.weight, self.bias)\r\n  File \"F:\\soft_xj\\python\\lib\\site-packages\\torch\\nn\\functional.py\", line 1610, in linear\r\n    ret = torch.addmm(bias, input, weight.t())\r\nRuntimeError: size mismatch, m1: [2 x 256], m2: [64 x 7] at C:/w/b/windows/pytorch/aten/src\\THC/generic/THCTensorMathBlas.cu:283\r\n```\r\n\r\n\r\nI can print the model\r\n```\r\nResNet(\r\n  (conv): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n  (bn): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n  (relu): ReLU(inplace=True)\r\n  (layer1): Sequential(\r\n    (0): ResidualBlock(\r\n      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      (relu): ReLU(inplace=True)\r\n      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n    )\r\n    (1): ResidualBlock(\r\n      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      (relu): ReLU(inplace=True)\r\n      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n    )\r\n  )\r\n  (layer2): Sequential(\r\n    (0): ResidualBlock(\r\n      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\r\n      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      (relu): ReLU(inplace=True)\r\n      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      (downsample): Sequential(\r\n        (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\r\n        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (1): ResidualBlock(\r\n      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      (relu): ReLU(inplace=True)\r\n      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n    )\r\n  )\r\n  (layer3): Sequential(\r\n    (0): ResidualBlock(\r\n      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\r\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      (relu): ReLU(inplace=True)\r\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      (downsample): Sequential(\r\n        (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\r\n        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (1): ResidualBlock(\r\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      (relu): ReLU(inplace=True)\r\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n    )\r\n  )\r\n  (avg_pool): AvgPool2d(kernel_size=8, stride=8, padding=0)\r\n  (fc): Linear(in_features=64, out_features=7, bias=True)\r\n)\r\n[Finished in 2.9s]\r\n```\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/170/timeline","performed_via_github_app":null,"state_reason":null}