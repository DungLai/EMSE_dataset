{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/155","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/155/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/155/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/155/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/155","id":747754633,"node_id":"MDU6SXNzdWU3NDc3NTQ2MzM=","number":155,"title":"autoencoder cannot be used","user":{"login":"raqueldias","id":1730732,"node_id":"MDQ6VXNlcjE3MzA3MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1730732?v=4","gravatar_id":"","url":"https://api.github.com/users/raqueldias","html_url":"https://github.com/raqueldias","followers_url":"https://api.github.com/users/raqueldias/followers","following_url":"https://api.github.com/users/raqueldias/following{/other_user}","gists_url":"https://api.github.com/users/raqueldias/gists{/gist_id}","starred_url":"https://api.github.com/users/raqueldias/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raqueldias/subscriptions","organizations_url":"https://api.github.com/users/raqueldias/orgs","repos_url":"https://api.github.com/users/raqueldias/repos","events_url":"https://api.github.com/users/raqueldias/events{/privacy}","received_events_url":"https://api.github.com/users/raqueldias/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-20T19:52:52Z","updated_at":"2021-02-28T05:30:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When I try to run the summary for a non-convolutional autoencoder architecture:\r\n```\r\nimport torch.nn as nn\r\nimport torch\r\nfrom torch.autograd import Variable\r\nimport sys\r\nfrom torchsummary import summary\r\n\r\nclass Autoencoder(nn.Module):\r\n    def __init__(self,input_dim, output_dim, n_layers=4, size_ratio=0.5, activation='relu'):\r\n        super(Autoencoder, self).__init__()\r\n\r\n        def get_activation(activation):\r\n\r\n            if(activation=='relu'):\r\n                return nn.ReLU(True)\r\n            elif(activation=='tanh'):\r\n                return nn.Tanh()\r\n            elif(activation=='sigmoid'):\r\n                return nn.Sigmoid()\r\n            elif(activation=='leakyrelu'):\r\n                return torch.nn.LeakyReLU()\r\n\r\n        encoder_layers = []\r\n\r\n        in_size_list = [input_dim]\r\n        out_size_list = [output_dim]\r\n\r\n        for i in range(int(n_layers/2)):\r\n            out_size_list += [int(out_size_list[i]*size_ratio)]\r\n            encoder_layers += [nn.Linear(in_size_list[i], out_size_list[i+1])]\r\n            encoder_layers += [get_activation(activation)]\r\n            in_size_list += [out_size_list[i+1]]\r\n\r\n        decoder_layers = []\r\n        out_size_list.reverse()\r\n\r\n        for i in range(int(n_layers/2)-1):\r\n            decoder_layers += [nn.Linear(out_size_list[i], out_size_list[i+1])]\r\n            decoder_layers += [get_activation(activation)]\r\n\r\n            decoder_layers += [nn.Linear(out_size_list[-2], output_dim)]\r\n            decoder_layers += [get_activation('sigmoid')]\r\n\r\n            self.encoder = nn.Sequential(*encoder_layers)\r\n            self.decoder = nn.Sequential(*decoder_layers)\r\n\r\n    def forward(self, x):\r\n        x = self.encoder(x)\r\n        x = self.decoder(x)\r\n        return x\r\n\r\nautoencoder = Autoencoder(input_dim=4396, output_dim=4396, n_layers=4, size_ratio=0.5, activation='sigmoid').cuda()\r\nsummary(autoencoder, (4396))\r\n```\r\n\r\nI get the error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 54, in <module>\r\n    summary(autoencoder, (4396))\r\n  File \"/home/raqueld/.local/lib/python3.6/site-packages/torchsummary/torchsummary.py\", line 60, in summary\r\n    x = [torch.rand(2, *in_size).type(dtype) for in_size in input_size]\r\nTypeError: 'int' object is not iterable\r\n```\r\n\r\nDoes this package support only CNNs and RNNs? what about feedforward neural networks and autoencoders?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/155/timeline","performed_via_github_app":null,"state_reason":null}