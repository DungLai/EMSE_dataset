{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/148","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/148/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/148/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/148/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/148","id":692034595,"node_id":"MDU6SXNzdWU2OTIwMzQ1OTU=","number":148,"title":"the package does not count \"torch.nn.parameter\"","user":{"login":"londumas","id":3166436,"node_id":"MDQ6VXNlcjMxNjY0MzY=","avatar_url":"https://avatars.githubusercontent.com/u/3166436?v=4","gravatar_id":"","url":"https://api.github.com/users/londumas","html_url":"https://github.com/londumas","followers_url":"https://api.github.com/users/londumas/followers","following_url":"https://api.github.com/users/londumas/following{/other_user}","gists_url":"https://api.github.com/users/londumas/gists{/gist_id}","starred_url":"https://api.github.com/users/londumas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/londumas/subscriptions","organizations_url":"https://api.github.com/users/londumas/orgs","repos_url":"https://api.github.com/users/londumas/repos","events_url":"https://api.github.com/users/londumas/events{/privacy}","received_events_url":"https://api.github.com/users/londumas/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-03T14:44:09Z","updated_at":"2021-02-28T06:01:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Here is a simple code giving a different number of parameters between pytorch and torchsummay.\r\nIt seems that torchsummay does not count `torch.nn.parameter` layers.\r\n\r\n```\r\nimport torch\r\nimport torchsummary\r\n\r\nclass Net(torch.nn.Module):\r\n    def __init__(self):\r\n        super(Net,self).__init__()\r\n\r\n        self.p = torch.nn.Parameter(torch.zeros(1))\r\n        self.conv1 = torch.nn.Conv1d(1,2,kernel_size=3)\r\n\r\n    def forward(self, x):\r\n\r\n        x *= self.p\r\n        x = self.conv1(x)\r\n\r\n        return x\r\ndef get_n_params(model):\r\n    pp=0\r\n    for p in list(model.parameters()):\r\n        nn=1\r\n        for s in list(p.size()):\r\n            nn = nn*s\r\n        pp += nn\r\n    return pp\r\n\r\nnet = Net()\r\nx = torch.rand([64,1,10])\r\n\r\nprint(\"number of parameters = \", get_n_params(net))\r\ntorchsummary.summary(net, input_size=[[1,10]])\r\n```\r\n\r\nReturns 9 vs. 8:\r\n```\r\nnumber of parameters =  9\r\n----------------------------------------------------------------\r\n        Layer (type)               Output Shape         Param #\r\n================================================================\r\n            Conv1d-1                 [-1, 2, 8]               8\r\n================================================================\r\nTotal params: 8\r\nTrainable params: 8\r\nNon-trainable params: 0\r\n----------------------------------------------------------------\r\nInput size (MB): 0.00\r\nForward/backward pass size (MB): 0.00\r\nParams size (MB): 0.00\r\nEstimated Total Size (MB): 0.00\r\n----------------------------------------------------------------\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/148/timeline","performed_via_github_app":null,"state_reason":null}