{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/91","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/91/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/91/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/91/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/91","id":485535432,"node_id":"MDU6SXNzdWU0ODU1MzU0MzI=","number":91,"title":"Dimension problem with LSTM-seq2seq","user":{"login":"givemealung","id":40375837,"node_id":"MDQ6VXNlcjQwMzc1ODM3","avatar_url":"https://avatars.githubusercontent.com/u/40375837?v=4","gravatar_id":"","url":"https://api.github.com/users/givemealung","html_url":"https://github.com/givemealung","followers_url":"https://api.github.com/users/givemealung/followers","following_url":"https://api.github.com/users/givemealung/following{/other_user}","gists_url":"https://api.github.com/users/givemealung/gists{/gist_id}","starred_url":"https://api.github.com/users/givemealung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/givemealung/subscriptions","organizations_url":"https://api.github.com/users/givemealung/orgs","repos_url":"https://api.github.com/users/givemealung/repos","events_url":"https://api.github.com/users/givemealung/events{/privacy}","received_events_url":"https://api.github.com/users/givemealung/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-08-27T01:42:32Z","updated_at":"2019-11-30T21:25:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I define my own seq2seq structure with LSTMs for both encoder and decoder.\r\nEverything's just fine when I pass toy data or train the model like this:\r\n```\r\nenc = Encoder(1, 50, num_layers=2)\r\ndec = Decoder(1, 200, 50, num_layers=2)\r\nseq2seq = Seq2Seq(enc, dec)\r\n\r\ntoy_x = np.random.randn(64, 100, 1)\r\ntoy_x = torch.from_numpy((toy_x)).float()\r\nseq2seq(toy_x)\r\n```\r\n\r\nBut it goes wrong if i I define the same input size with summary function:\r\n```\r\nsummary(seq2seq, (64, 100, 1))\r\n```\r\ngot exception:\r\n**RuntimeError: input must have 3 dimensions, got 4**","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/91/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/91/timeline","performed_via_github_app":null,"state_reason":null}