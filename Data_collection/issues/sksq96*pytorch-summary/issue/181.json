{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/181","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/181/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/181/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/181","id":1146251373,"node_id":"I_kwDOB8pl4c5EUmht","number":181,"title":"RuntimeError: Input type (torch.cuda.FloatTensor) and weight type (torch.FloatTensor) should be the same","user":{"login":"rohan-paul","id":12703975,"node_id":"MDQ6VXNlcjEyNzAzOTc1","avatar_url":"https://avatars.githubusercontent.com/u/12703975?v=4","gravatar_id":"","url":"https://api.github.com/users/rohan-paul","html_url":"https://github.com/rohan-paul","followers_url":"https://api.github.com/users/rohan-paul/followers","following_url":"https://api.github.com/users/rohan-paul/following{/other_user}","gists_url":"https://api.github.com/users/rohan-paul/gists{/gist_id}","starred_url":"https://api.github.com/users/rohan-paul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rohan-paul/subscriptions","organizations_url":"https://api.github.com/users/rohan-paul/orgs","repos_url":"https://api.github.com/users/rohan-paul/repos","events_url":"https://api.github.com/users/rohan-paul/events{/privacy}","received_events_url":"https://api.github.com/users/rohan-paul/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-02-21T21:46:24Z","updated_at":"2022-02-24T13:55:11Z","closed_at":"2022-02-24T13:55:10Z","author_association":"NONE","active_lock_reason":null,"body":"After running the example code from the doc \r\n\r\n```py\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\nfrom torchsummary import summary\r\n\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        self.conv1 = nn.Conv2d(1, 10, kernel_size=5)\r\n        self.conv2 = nn.Conv2d(10, 20, kernel_size=5)\r\n        self.conv2_drop = nn.Dropout2d()\r\n        self.fc1 = nn.Linear(320, 50)\r\n        self.fc2 = nn.Linear(50, 10)\r\n\r\n    def forward(self, x):\r\n        x = F.relu(F.max_pool2d(self.conv1(x), 2))\r\n        x = F.relu(F.max_pool2d(self.conv2_drop(self.conv2(x)), 2))\r\n        x = x.view(-1, 320)\r\n        x = F.relu(self.fc1(x))\r\n        x = F.dropout(x, training=self.training)\r\n        x = self.fc2(x)\r\n        return F.log_softmax(x, dim=1)\r\n\r\n# device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\") # PyTorch v0.4.0\r\ndevice = \"cpu\"\r\nmodel = Net().to(device)\r\n\r\nsummary(model, (1, 28, 28))\r\n```\r\n\r\nGetting \r\n\r\n```\r\nRuntimeError                              Traceback (most recent call last)\r\n/tmp/ipykernel_108660/4081865440.py in <module>\r\n     26 model = Net().to(device)\r\n     27 \r\n---> 28 summary(model, (1, 28, 28))\r\n\r\n~/.local/lib/python3.9/site-packages/torchsummary/torchsummary.py in summary(model, input_size, batch_size, device)\r\n     70     # make a forward pass\r\n     71     # print(x.shape)\r\n---> 72     model(*x)\r\n     73 \r\n     74     # remove these hooks\r\n\r\n~/.local/lib/python3.9/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)\r\n   1100         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks\r\n   1101                 or _global_forward_hooks or _global_forward_pre_hooks):\r\n-> 1102             return forward_call(*input, **kwargs)\r\n   1103         # Do not call functions when jit is used\r\n   1104         full_backward_hooks, non_full_backward_hooks = [], []\r\n\r\n/tmp/ipykernel_108660/4081865440.py in forward(self, x)\r\n     14 \r\n     15     def forward(self, x):\r\n---> 16         x = F.relu(F.max_pool2d(self.conv1(x), 2))\r\n     17         x = F.relu(F.max_pool2d(self.conv2_drop(self.conv2(x)), 2))\r\n     18         x = x.view(-1, 320)\r\n\r\n~/.local/lib/python3.9/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)\r\n   1118             input = bw_hook.setup_input_hook(input)\r\n   1119 \r\n-> 1120         result = forward_call(*input, **kwargs)\r\n   1121         if _global_forward_hooks or self._forward_hooks:\r\n   1122             for hook in (*_global_forward_hooks.values(), *self._forward_hooks.values()):\r\n\r\n~/.local/lib/python3.9/site-packages/torch/nn/modules/conv.py in forward(self, input)\r\n    444 \r\n    445     def forward(self, input: Tensor) -> Tensor:\r\n--> 446         return self._conv_forward(input, self.weight, self.bias)\r\n    447 \r\n    448 class Conv3d(_ConvNd):\r\n\r\n~/.local/lib/python3.9/site-packages/torch/nn/modules/conv.py in _conv_forward(self, input, weight, bias)\r\n    440                             weight, bias, self.stride,\r\n    441                             _pair(0), self.dilation, self.groups)\r\n--> 442         return F.conv2d(input, weight, bias, self.stride,\r\n    443                         self.padding, self.dilation, self.groups)\r\n    444 \r\n\r\nRuntimeError: Input type (torch.cuda.FloatTensor) and weight type (torch.FloatTensor) should be the same\r\n```","closed_by":{"login":"rohan-paul","id":12703975,"node_id":"MDQ6VXNlcjEyNzAzOTc1","avatar_url":"https://avatars.githubusercontent.com/u/12703975?v=4","gravatar_id":"","url":"https://api.github.com/users/rohan-paul","html_url":"https://github.com/rohan-paul","followers_url":"https://api.github.com/users/rohan-paul/followers","following_url":"https://api.github.com/users/rohan-paul/following{/other_user}","gists_url":"https://api.github.com/users/rohan-paul/gists{/gist_id}","starred_url":"https://api.github.com/users/rohan-paul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rohan-paul/subscriptions","organizations_url":"https://api.github.com/users/rohan-paul/orgs","repos_url":"https://api.github.com/users/rohan-paul/repos","events_url":"https://api.github.com/users/rohan-paul/events{/privacy}","received_events_url":"https://api.github.com/users/rohan-paul/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/181/timeline","performed_via_github_app":null,"state_reason":"completed"}