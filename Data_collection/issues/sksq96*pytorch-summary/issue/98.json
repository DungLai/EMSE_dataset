{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/98","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/98/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/98/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/98/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/98","id":516413736,"node_id":"MDU6SXNzdWU1MTY0MTM3MzY=","number":98,"title":"Prints twice all layers ","user":{"login":"mangotree3","id":44597764,"node_id":"MDQ6VXNlcjQ0NTk3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/44597764?v=4","gravatar_id":"","url":"https://api.github.com/users/mangotree3","html_url":"https://github.com/mangotree3","followers_url":"https://api.github.com/users/mangotree3/followers","following_url":"https://api.github.com/users/mangotree3/following{/other_user}","gists_url":"https://api.github.com/users/mangotree3/gists{/gist_id}","starred_url":"https://api.github.com/users/mangotree3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mangotree3/subscriptions","organizations_url":"https://api.github.com/users/mangotree3/orgs","repos_url":"https://api.github.com/users/mangotree3/repos","events_url":"https://api.github.com/users/mangotree3/events{/privacy}","received_events_url":"https://api.github.com/users/mangotree3/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-11-02T00:23:23Z","updated_at":"2020-06-11T16:39:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\n\r\nThe `summary` module seems to behave weirdly on my model. The function outputs all my layers twice in duplicate fashion. \r\n\r\nThe code is the following: \r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torchsummary import summary\r\n\r\n\r\nclass Model(nn.Module):\r\n\r\n    def __init__(self):\r\n\r\n        super(Model,self).__init__()\r\n\r\n        K = 69\r\n        L = 1000\r\n\r\n        self.group1 = nn.Sequential(\r\n            nn.Conv3d(3, K, kernel_size=3,padding=(1,1,1)),\r\n            nn.LeakyReLU()\r\n        )\r\n\r\n        self.group2 = nn.Sequential(\r\n            nn.Conv3d(K, L, kernel_size=4, padding=(1,1,1)),\r\n            nn.MaxPool3d(2, stride=2,ceil_mode=True),\r\n            nn.ReLU()\r\n        )\r\n\r\n        self._features = nn.Sequential(\r\n            self.group1,\r\n            self.group2\r\n        )\r\n\r\n    def forward(self,x):\r\n        out = self._features(x)\r\n        return out\r\n\r\nif '__main__' == __name__:\r\n\r\n    model = Model()\r\n    inp = (3, 30, 30, 30)\r\n\r\n    summary(model, inp, device='cpu')\r\n```\r\nThe output is the following:\r\n```\r\n----------------------------------------------------------------\r\n        Layer (type)               Output Shape         Param #\r\n================================================================\r\n            Conv3d-1       [-1, 69, 30, 30, 30]           5,658\r\n            Conv3d-2       [-1, 69, 30, 30, 30]           5,658\r\n         LeakyReLU-3       [-1, 69, 30, 30, 30]               0\r\n         LeakyReLU-4       [-1, 69, 30, 30, 30]               0\r\n            Conv3d-5     [-1, 1000, 29, 29, 29]       4,417,000\r\n            Conv3d-6     [-1, 1000, 29, 29, 29]       4,417,000\r\n         MaxPool3d-7     [-1, 1000, 15, 15, 15]               0\r\n         MaxPool3d-8     [-1, 1000, 15, 15, 15]               0\r\n              ReLU-9     [-1, 1000, 15, 15, 15]               0\r\n             ReLU-10     [-1, 1000, 15, 15, 15]               0\r\n================================================================\r\nTotal params: 8,845,316\r\nTrainable params: 8,845,316\r\nNon-trainable params: 0\r\n----------------------------------------------------------------\r\nInput size (MB): 0.31\r\nForward/backward pass size (MB): 532.00\r\nParams size (MB): 33.74\r\nEstimated Total Size (MB): 566.05\r\n----------------------------------------------------------------\r\n```\r\nAs you can see in the `self.group1()` I have one `nn.Conv3d()`. However, in the output I get `Conv3d-1` and `Conv3d-2` for that layer. \r\n\r\nWhen `model.apply(register_hook)` runs it seems to already append twice the number of `module.register_forward_hook(hook)` expected in the `hooks` list. \r\n\r\nAny clues about what is happening?\r\n\r\nThanks,\r\nMatthias\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/98/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/98/timeline","performed_via_github_app":null,"state_reason":null}