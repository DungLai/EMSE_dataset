{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/96","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/96/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/96/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/96/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/96","id":509177233,"node_id":"MDU6SXNzdWU1MDkxNzcyMzM=","number":96,"title":"handling lists of outputs","user":{"login":"brookisme","id":281390,"node_id":"MDQ6VXNlcjI4MTM5MA==","avatar_url":"https://avatars.githubusercontent.com/u/281390?v=4","gravatar_id":"","url":"https://api.github.com/users/brookisme","html_url":"https://github.com/brookisme","followers_url":"https://api.github.com/users/brookisme/followers","following_url":"https://api.github.com/users/brookisme/following{/other_user}","gists_url":"https://api.github.com/users/brookisme/gists{/gist_id}","starred_url":"https://api.github.com/users/brookisme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brookisme/subscriptions","organizations_url":"https://api.github.com/users/brookisme/orgs","repos_url":"https://api.github.com/users/brookisme/repos","events_url":"https://api.github.com/users/brookisme/events{/privacy}","received_events_url":"https://api.github.com/users/brookisme/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-10-18T16:15:41Z","updated_at":"2019-10-18T16:15:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"##### ISSUE\r\n\r\nOften I have and encoder that returns its output, along with a list of skip connections that can be used in a decoder.  Although torchsummary currently supports a flat list of outputs it doesn't support an output and a list of outputs.\r\n\r\n##### A HACK\r\n\r\nI'm not creating pull request because this is a bit of hack and should probably be handled in a different way.  That said this is the solution I'm currently using in my code base:\r\n\r\nhttps://github.com/brookisme/pytorch-summary/commit/5f8a166cf58183098a2e41a5b6881ef0dbe903da\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/96/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/96/timeline","performed_via_github_app":null,"state_reason":null}