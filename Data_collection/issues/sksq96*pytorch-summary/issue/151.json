{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/151","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/151/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/151/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/151/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/151","id":704454112,"node_id":"MDU6SXNzdWU3MDQ0NTQxMTI=","number":151,"title":"summary batch_size parameter","user":{"login":"AntoineDuff","id":35943113,"node_id":"MDQ6VXNlcjM1OTQzMTEz","avatar_url":"https://avatars.githubusercontent.com/u/35943113?v=4","gravatar_id":"","url":"https://api.github.com/users/AntoineDuff","html_url":"https://github.com/AntoineDuff","followers_url":"https://api.github.com/users/AntoineDuff/followers","following_url":"https://api.github.com/users/AntoineDuff/following{/other_user}","gists_url":"https://api.github.com/users/AntoineDuff/gists{/gist_id}","starred_url":"https://api.github.com/users/AntoineDuff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AntoineDuff/subscriptions","organizations_url":"https://api.github.com/users/AntoineDuff/orgs","repos_url":"https://api.github.com/users/AntoineDuff/repos","events_url":"https://api.github.com/users/AntoineDuff/events{/privacy}","received_events_url":"https://api.github.com/users/AntoineDuff/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-18T15:07:54Z","updated_at":"2020-09-18T15:10:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It seems like the batch size is hardcoded as 2 here -> [this line](https://github.com/sksq96/pytorch-summary/blob/011b2bd0ec7153d5842c1b37d1944fc6a7bf5feb/torchsummary/torchsummary.py#L59) should't this be `    x = [torch.rand(batch_size, *in_size).type(dtype).to(device=device) for in_size, dtype in zip(input_size, dtypes)]` (see the batch_size variable in torch.rand instead of the hardcoded 2) and deal with the case where the batch_size=-1 as a predefined batch of 2.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/151/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/151/timeline","performed_via_github_app":null,"state_reason":null}