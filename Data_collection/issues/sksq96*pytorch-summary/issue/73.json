{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/73","repository_url":"https://api.github.com/repos/sksq96/pytorch-summary","labels_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/73/labels{/name}","comments_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/73/comments","events_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/73/events","html_url":"https://github.com/sksq96/pytorch-summary/issues/73","id":455171042,"node_id":"MDU6SXNzdWU0NTUxNzEwNDI=","number":73,"title":"This repo support Object Detection model like SSD?","user":{"login":"hahanigehaha233","id":22057398,"node_id":"MDQ6VXNlcjIyMDU3Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/22057398?v=4","gravatar_id":"","url":"https://api.github.com/users/hahanigehaha233","html_url":"https://github.com/hahanigehaha233","followers_url":"https://api.github.com/users/hahanigehaha233/followers","following_url":"https://api.github.com/users/hahanigehaha233/following{/other_user}","gists_url":"https://api.github.com/users/hahanigehaha233/gists{/gist_id}","starred_url":"https://api.github.com/users/hahanigehaha233/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hahanigehaha233/subscriptions","organizations_url":"https://api.github.com/users/hahanigehaha233/orgs","repos_url":"https://api.github.com/users/hahanigehaha233/repos","events_url":"https://api.github.com/users/hahanigehaha233/events{/privacy}","received_events_url":"https://api.github.com/users/hahanigehaha233/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-06-12T11:57:25Z","updated_at":"2019-06-12T11:57:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have a try for SSD but it didn't work.\r\nI think the reason is about bbox params which torchsummary doesn't cover\r\n```\r\n/ssd.pytorch/layers/functions/detection.py in forward(self, loc_data, conf_data, prior_data)\r\n     52                 boxes = decoded_boxes[l_mask].view(-1, 4)\r\n     53                 # idx of highest scoring and non-overlapping boxes per class\r\n---> 54                 ids, count = nms(boxes, scores, self.nms_thresh, self.top_k)\r\n     55                 output[i, cl, :count] = \\\r\n     56                     torch.cat((scores[ids[:count]].unsqueeze(1),\r\n\r\nValueError: not enough values to unpack (expected 2, got 0)\r\n\r\n```\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/73/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/sksq96/pytorch-summary/issues/73/timeline","performed_via_github_app":null,"state_reason":null}