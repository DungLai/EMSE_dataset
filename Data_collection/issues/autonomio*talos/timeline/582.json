[{"id":6433639668,"node_id":"AE_lADOB-ECn85HyT_wzwAAAAF_eYz0","url":"https://api.github.com/repos/autonomio/talos/issues/events/6433639668","actor":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"event":"assigned","commit_id":null,"commit_url":null,"created_at":"2022-04-14T10:46:10Z","assignee":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"performed_via_github_app":null},{"id":6433640083,"node_id":"LE_lADOB-ECn85HyT_wzwAAAAF_eY6T","url":"https://api.github.com/repos/autonomio/talos/issues/events/6433640083","actor":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-04-14T10:46:14Z","label":{"name":"priority: HIGH","color":"b60205"},"performed_via_github_app":null},{"actor":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"created_at":"2022-04-16T13:20:57Z","updated_at":"2022-04-16T13:20:57Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/autonomio/talos/issues/552","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/552/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/552/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/552/events","html_url":"https://github.com/autonomio/talos/issues/552","id":924973421,"node_id":"MDU6SXNzdWU5MjQ5NzM0MjE=","number":552,"title":"Using `Evaluate` with multiple inputs","user":{"login":"cynthia166","id":73049364,"node_id":"MDQ6VXNlcjczMDQ5MzY0","avatar_url":"https://avatars.githubusercontent.com/u/73049364?v=4","gravatar_id":"","url":"https://api.github.com/users/cynthia166","html_url":"https://github.com/cynthia166","followers_url":"https://api.github.com/users/cynthia166/followers","following_url":"https://api.github.com/users/cynthia166/following{/other_user}","gists_url":"https://api.github.com/users/cynthia166/gists{/gist_id}","starred_url":"https://api.github.com/users/cynthia166/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cynthia166/subscriptions","organizations_url":"https://api.github.com/users/cynthia166/orgs","repos_url":"https://api.github.com/users/cynthia166/repos","events_url":"https://api.github.com/users/cynthia166/events{/privacy}","received_events_url":"https://api.github.com/users/cynthia166/received_events","type":"User","site_admin":false},"labels":[{"id":1040763409,"node_id":"MDU6TGFiZWwxMDQwNzYzNDA5","url":"https://api.github.com/repos/autonomio/talos/labels/user%20support","name":"user support","color":"59db8b","default":false,"description":"nothing is wrong with Talos"}],"state":"closed","locked":false,"assignee":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"assignees":[{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2021-06-18T14:43:53Z","updated_at":"2022-04-16T13:20:57Z","closed_at":"2022-04-16T13:20:57Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":132186783,"node_id":"MDEwOlJlcG9zaXRvcnkxMzIxODY3ODM=","name":"talos","full_name":"autonomio/talos","private":false,"owner":{"login":"autonomio","id":28189776,"node_id":"MDEyOk9yZ2FuaXphdGlvbjI4MTg5Nzc2","avatar_url":"https://avatars.githubusercontent.com/u/28189776?v=4","gravatar_id":"","url":"https://api.github.com/users/autonomio","html_url":"https://github.com/autonomio","followers_url":"https://api.github.com/users/autonomio/followers","following_url":"https://api.github.com/users/autonomio/following{/other_user}","gists_url":"https://api.github.com/users/autonomio/gists{/gist_id}","starred_url":"https://api.github.com/users/autonomio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/autonomio/subscriptions","organizations_url":"https://api.github.com/users/autonomio/orgs","repos_url":"https://api.github.com/users/autonomio/repos","events_url":"https://api.github.com/users/autonomio/events{/privacy}","received_events_url":"https://api.github.com/users/autonomio/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/autonomio/talos","description":"Hyperparameter Optimization for TensorFlow, Keras and PyTorch","fork":false,"url":"https://api.github.com/repos/autonomio/talos","forks_url":"https://api.github.com/repos/autonomio/talos/forks","keys_url":"https://api.github.com/repos/autonomio/talos/keys{/key_id}","collaborators_url":"https://api.github.com/repos/autonomio/talos/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/autonomio/talos/teams","hooks_url":"https://api.github.com/repos/autonomio/talos/hooks","issue_events_url":"https://api.github.com/repos/autonomio/talos/issues/events{/number}","events_url":"https://api.github.com/repos/autonomio/talos/events","assignees_url":"https://api.github.com/repos/autonomio/talos/assignees{/user}","branches_url":"https://api.github.com/repos/autonomio/talos/branches{/branch}","tags_url":"https://api.github.com/repos/autonomio/talos/tags","blobs_url":"https://api.github.com/repos/autonomio/talos/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/autonomio/talos/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/autonomio/talos/git/refs{/sha}","trees_url":"https://api.github.com/repos/autonomio/talos/git/trees{/sha}","statuses_url":"https://api.github.com/repos/autonomio/talos/statuses/{sha}","languages_url":"https://api.github.com/repos/autonomio/talos/languages","stargazers_url":"https://api.github.com/repos/autonomio/talos/stargazers","contributors_url":"https://api.github.com/repos/autonomio/talos/contributors","subscribers_url":"https://api.github.com/repos/autonomio/talos/subscribers","subscription_url":"https://api.github.com/repos/autonomio/talos/subscription","commits_url":"https://api.github.com/repos/autonomio/talos/commits{/sha}","git_commits_url":"https://api.github.com/repos/autonomio/talos/git/commits{/sha}","comments_url":"https://api.github.com/repos/autonomio/talos/comments{/number}","issue_comment_url":"https://api.github.com/repos/autonomio/talos/issues/comments{/number}","contents_url":"https://api.github.com/repos/autonomio/talos/contents/{+path}","compare_url":"https://api.github.com/repos/autonomio/talos/compare/{base}...{head}","merges_url":"https://api.github.com/repos/autonomio/talos/merges","archive_url":"https://api.github.com/repos/autonomio/talos/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/autonomio/talos/downloads","issues_url":"https://api.github.com/repos/autonomio/talos/issues{/number}","pulls_url":"https://api.github.com/repos/autonomio/talos/pulls{/number}","milestones_url":"https://api.github.com/repos/autonomio/talos/milestones{/number}","notifications_url":"https://api.github.com/repos/autonomio/talos/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/autonomio/talos/labels{/name}","releases_url":"https://api.github.com/repos/autonomio/talos/releases{/id}","deployments_url":"https://api.github.com/repos/autonomio/talos/deployments","created_at":"2018-05-04T20:36:41Z","updated_at":"2023-01-15T20:06:58Z","pushed_at":"2022-09-18T16:01:21Z","git_url":"git://github.com/autonomio/talos.git","ssh_url":"git@github.com:autonomio/talos.git","clone_url":"https://github.com/autonomio/talos.git","svn_url":"https://github.com/autonomio/talos","homepage":"https://autonom.io","size":1273,"stargazers_count":1575,"watchers_count":1575,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":264,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":8,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["artificial-intelligence","deep-learning","hyperparameter-optimization","keras","keras-tensorflow","tensorflow"],"visibility":"public","forks":264,"open_issues":8,"watchers":1575,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"Hello, I was wondering if you could please help me, \r\n\r\n Confirm the below\r\n I have looked for an answer in the Docs. Yes, I have done it\r\n My Python version is 3.5 or higher: Python 3.8.5 and TensorFlow 2.4.1\r\n I have searched through the issues Issues for a duplicate. \r\n I've tested that my Keras model works as a stand-alone. : Yes, I have been running the keras.\r\n\r\nMy python is 3.8 and .I am trying to hypertune a deep autoencoder, in my function I need too pass thE X value, I have get the following error:\r\nValueError: Layer model_4 expects 2 input(s), but it received 1 input tensors. Inputs received: [<tf.Tensor 'IteratorGetNext:0' shape=(None, 470) dtype=float32>]\r\nHere ir my code:\r\ndef autoEncoder(X_train, y_train, x_val, y_val,params):\r\n'''\r\nAutoencoder for Collaborative Filter Model\r\n'''\r\n#model = Sequential()\r\nusers_items_matrix, content_info = X\r\n#content_info = X[:,420:X.shape[1]]\r\n#users_items_matrix = X[:,0:420]\r\n# Input\r\ninput_layer   = Input(shape=(users_items_matrix.shape[1],), name='UserScore')\r\ninput_content = Input(shape=(content_info.shape[1],), name='Itemcontent')\r\n# Encoder\r\n# -----------------------------\r\nenc = Dense(512, activation=params[\"activation\"], name='EncLayer1')(input_layer)\r\n# Content Information\r\n#embbeding Turns positive integers (indexes) into dense vectors of fixed size.\r\nx_content = Embedding(100, 256, input_length=content_info.shape[1])(input_content)\r\nx_content = Flatten()(x_content)\r\nx_content = Dense(256, activation=params[\"activation\"], \r\n                            name='ItemLatentSpace')(x_content)\r\n# Latent Space\r\n# -----------------------------\r\n# Dropout layer randomly sets input units to 0 with a frequency of rate at each step during training time, which helps prevent overfitting. Inputs not set to 0 are scaled up by 1/(1 - rate) such that the sum over all inputs is unchanged.\r\nlat_space = Dense(256, activation=params[\"activation\"], name='UserLatentSpace')(enc)\r\nlat_space= add([lat_space, x_content], name='LatentSpace')\r\nlat_space = Dropout(params[\"dropout\"], name='Dropout')(lat_space) # Dropout\r\n# Decoder\r\n# -----------------------------\r\ndec = Dense(512, activation=params[\"activation\"], name='DecLayer1')(lat_space)\r\n# Output\r\noutput_layer = Dense(users_items_matrix.shape[1], activation='linear', name='UserScorePred')(dec)\r\n# this model maps an input to its reconstruction\r\nmodel = Model([input_layer, input_content], output_layer)    \r\n#model.compile(optimizer = SGD(lr=0.0001), loss='mse')\r\nmodel.compile(\r\noptimizer=params'optimizer',\r\nloss='mean_squared_error',)\r\nmodel.summary()\r\nhistory = model.fit(X,y ,\r\nvalidation_data=(X_test, y_test),\r\nbatch_size=params['batch_size'],\r\nepochs=params['epochs'],\r\nverbose=0)\r\nreturn history,model\r\np = {'lr': (0.5, 5, 10),\r\n'hidden_layers':[0, 1, 2],\r\n'batch_size': (20, 30, 50),\r\n'epochs': [50],\r\n #'times':[216,300,600],\r\n #'neurons':[416,600,1200],\r\n 'dropout': (0, 0.5, 5),\r\n 'weight_regulizer':[None],\r\n 'emb_output_dims': [None],\r\n 'optimizer': [Adam, \"Nadam\", \"RMSprop\"],\r\n 'activation':[\"relu\", \"selu\"],\r\n }\r\nt = ta.Scan(x=X,\r\ny=y,\r\n        model=autoEncoder,\r\n        #grid_downsample=1, \r\n        params=p,\r\n        val_split = 0,\r\n        experiment_name='im' )\r\nThan you very much\r\n","reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/552/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"actor":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"created_at":"2022-04-16T13:21:54Z","updated_at":"2022-04-16T13:21:54Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/autonomio/talos/issues/580","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/580/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/580/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/580/events","html_url":"https://github.com/autonomio/talos/issues/580","id":1201876529,"node_id":"I_kwDOB-ECn85Hoy4x","number":580,"title":"Getting errors when handling custom object","user":{"login":"cedarsnow","id":68506439,"node_id":"MDQ6VXNlcjY4NTA2NDM5","avatar_url":"https://avatars.githubusercontent.com/u/68506439?v=4","gravatar_id":"","url":"https://api.github.com/users/cedarsnow","html_url":"https://github.com/cedarsnow","followers_url":"https://api.github.com/users/cedarsnow/followers","following_url":"https://api.github.com/users/cedarsnow/following{/other_user}","gists_url":"https://api.github.com/users/cedarsnow/gists{/gist_id}","starred_url":"https://api.github.com/users/cedarsnow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cedarsnow/subscriptions","organizations_url":"https://api.github.com/users/cedarsnow/orgs","repos_url":"https://api.github.com/users/cedarsnow/repos","events_url":"https://api.github.com/users/cedarsnow/events{/privacy}","received_events_url":"https://api.github.com/users/cedarsnow/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-04-12T13:45:02Z","updated_at":"2022-04-16T13:21:54Z","closed_at":"2022-04-16T13:21:54Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":132186783,"node_id":"MDEwOlJlcG9zaXRvcnkxMzIxODY3ODM=","name":"talos","full_name":"autonomio/talos","private":false,"owner":{"login":"autonomio","id":28189776,"node_id":"MDEyOk9yZ2FuaXphdGlvbjI4MTg5Nzc2","avatar_url":"https://avatars.githubusercontent.com/u/28189776?v=4","gravatar_id":"","url":"https://api.github.com/users/autonomio","html_url":"https://github.com/autonomio","followers_url":"https://api.github.com/users/autonomio/followers","following_url":"https://api.github.com/users/autonomio/following{/other_user}","gists_url":"https://api.github.com/users/autonomio/gists{/gist_id}","starred_url":"https://api.github.com/users/autonomio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/autonomio/subscriptions","organizations_url":"https://api.github.com/users/autonomio/orgs","repos_url":"https://api.github.com/users/autonomio/repos","events_url":"https://api.github.com/users/autonomio/events{/privacy}","received_events_url":"https://api.github.com/users/autonomio/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/autonomio/talos","description":"Hyperparameter Optimization for TensorFlow, Keras and PyTorch","fork":false,"url":"https://api.github.com/repos/autonomio/talos","forks_url":"https://api.github.com/repos/autonomio/talos/forks","keys_url":"https://api.github.com/repos/autonomio/talos/keys{/key_id}","collaborators_url":"https://api.github.com/repos/autonomio/talos/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/autonomio/talos/teams","hooks_url":"https://api.github.com/repos/autonomio/talos/hooks","issue_events_url":"https://api.github.com/repos/autonomio/talos/issues/events{/number}","events_url":"https://api.github.com/repos/autonomio/talos/events","assignees_url":"https://api.github.com/repos/autonomio/talos/assignees{/user}","branches_url":"https://api.github.com/repos/autonomio/talos/branches{/branch}","tags_url":"https://api.github.com/repos/autonomio/talos/tags","blobs_url":"https://api.github.com/repos/autonomio/talos/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/autonomio/talos/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/autonomio/talos/git/refs{/sha}","trees_url":"https://api.github.com/repos/autonomio/talos/git/trees{/sha}","statuses_url":"https://api.github.com/repos/autonomio/talos/statuses/{sha}","languages_url":"https://api.github.com/repos/autonomio/talos/languages","stargazers_url":"https://api.github.com/repos/autonomio/talos/stargazers","contributors_url":"https://api.github.com/repos/autonomio/talos/contributors","subscribers_url":"https://api.github.com/repos/autonomio/talos/subscribers","subscription_url":"https://api.github.com/repos/autonomio/talos/subscription","commits_url":"https://api.github.com/repos/autonomio/talos/commits{/sha}","git_commits_url":"https://api.github.com/repos/autonomio/talos/git/commits{/sha}","comments_url":"https://api.github.com/repos/autonomio/talos/comments{/number}","issue_comment_url":"https://api.github.com/repos/autonomio/talos/issues/comments{/number}","contents_url":"https://api.github.com/repos/autonomio/talos/contents/{+path}","compare_url":"https://api.github.com/repos/autonomio/talos/compare/{base}...{head}","merges_url":"https://api.github.com/repos/autonomio/talos/merges","archive_url":"https://api.github.com/repos/autonomio/talos/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/autonomio/talos/downloads","issues_url":"https://api.github.com/repos/autonomio/talos/issues{/number}","pulls_url":"https://api.github.com/repos/autonomio/talos/pulls{/number}","milestones_url":"https://api.github.com/repos/autonomio/talos/milestones{/number}","notifications_url":"https://api.github.com/repos/autonomio/talos/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/autonomio/talos/labels{/name}","releases_url":"https://api.github.com/repos/autonomio/talos/releases{/id}","deployments_url":"https://api.github.com/repos/autonomio/talos/deployments","created_at":"2018-05-04T20:36:41Z","updated_at":"2023-01-15T20:06:58Z","pushed_at":"2022-09-18T16:01:21Z","git_url":"git://github.com/autonomio/talos.git","ssh_url":"git@github.com:autonomio/talos.git","clone_url":"https://github.com/autonomio/talos.git","svn_url":"https://github.com/autonomio/talos","homepage":"https://autonom.io","size":1273,"stargazers_count":1575,"watchers_count":1575,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":264,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":8,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["artificial-intelligence","deep-learning","hyperparameter-optimization","keras","keras-tensorflow","tensorflow"],"visibility":"public","forks":264,"open_issues":8,"watchers":1575,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"Thank you very much for reporting a bug on Talos. Before you do, please go through the below checklist carefully and make sure to prepare your bug report in a way that facilitates effective handling of the matter.\r\n\r\n#### 1) Confirm the below\r\n\r\n- [* ] My Python version is 3.5 or higher\r\n- [* ] I have searched through the issues [Issues](https://github.com/autonomio/talos/issues) for a duplicate\r\n- [* ] I've tested that my Keras model works as a stand-alone\r\n\r\n#### 2) Include the output of:\r\n\r\n`talos.__version__\r\n1.0.2`\r\n\r\n\r\n#### 3) Explain clearly what you expect to happen\r\nI'm trying to use the model from https://github.com/GregMurray30/MultiTouchAttribution with Talos.\r\n\r\nI expect talos.Scan() to work with my model and talos.Predict() can return me the prediction using Colab.\r\n\r\nThe  model I'm using needs a custom object, here is how it is defined:\r\n\r\n          class MyAttention(tf.keras.Model):\r\n                def __init__(self, units,**kwargs):\r\n                    super(MyAttention, self).__init__(**kwargs)\r\n                    self.units=units\r\n                    self.w=self.add_weight(name='w',shape=[lstm_size, self.units], initializer='normal')\r\n                    self.b=self.add_weight(name='b',shape=[3, self.units], initializer='zeros')\r\n            \r\n                def call(self, x, return_sequences=True):\r\n            \r\n                    e1 = K.relu(K.dot(x,self.w)+self.b)\r\n                    \r\n                    #print(e1)\r\n                    #e2 = K.relu(K.dot(e1,self.w2)+self.b2)\r\n                    #print(e2)\r\n                    a = K.softmax(e1, axis=1)\r\n                    \r\n                    #a = tf.keras.activations.softmax(e1, axis=1)\r\n            \r\n                    output = a*x\r\n                    return e1, K.sum(output, axis=1)\r\n            \r\n                def get_config(self):\r\n            \r\n                    return {\r\n                        'units':self.units,\r\n                        'w':self.w.numpy(),\r\n                        'b':self.b.numpy(),\r\n                    }\r\n            \r\n            \r\n                @classmethod\r\n                def from_config(cls, config):\r\n                    return cls(**config)\r\n\r\n\r\nThen I re-built the model following Talos' guide:\r\n\r\n        def dnamta(x_train,y_train, x_val, y_val, params):\r\n        \r\n        \r\n            inp_cat_data = Input(shape=[num_time_steps, 1]) #input for categorical data\r\n            inp_num_data = Input(shape=[num_time_steps, num_feats]) #input for numerical data\r\n        \r\n            emb = Embedding(cardinality, params['embedding_size'], input_length=(num_time_steps))(inp_cat_data) #Embedding layer for categorical data (channels)\r\n        \r\n            resh1 = Reshape((num_time_steps, params['embedding_size']))(emb) #reshape to squash the 4D tensor back into 3D, not sure why emb layer does this\r\n        \r\n            conc = Concatenate()([resh1, inp_num_data]) #combine numerical data with channel embedding tensor before inputting into LSTM\r\n        \r\n            resh2 = Reshape((num_time_steps, params['embedding_size']+num_feats))(conc) #reshape to fit LSTM needs just in case\r\n            # LSTM with channel embeddings and control features, returns hidden state sequences for the attention layer to use\r\n            lstm_layer1 = LSTM(params['lstm_size'], dropout=params['dropout'], recurrent_dropout=params['recurrent_dropout'],return_sequences=True)(resh2)\r\n            lstm_layer2 = LSTM(params['lstm_size'], dropout=params['dropout'], recurrent_dropout=params['recurrent_dropout'],return_sequences=True)(lstm_layer1)\r\n            lstm_layer3 = LSTM(params['lstm_size'], dropout=params['dropout'], recurrent_dropout=params['recurrent_dropout'],return_sequences=True)(lstm_layer2)\r\n            lstm_layer4 = LSTM(params['lstm_size'], dropout=params['dropout'], recurrent_dropout=params['recurrent_dropout'],return_sequences=True)(lstm_layer3)\r\n            lstm_layer5 = LSTM(params['lstm_size'], dropout=params['dropout'], recurrent_dropout=params['recurrent_dropout'],return_sequences=True)(lstm_layer4)\r\n            lstm_layer6 = LSTM(params['lstm_size'], dropout=params['dropout'], recurrent_dropout=params['recurrent_dropout'],return_sequences=True)(lstm_layer5)\r\n            #lstm_layer7 = LSTM(lstm_size, dropout=.01, recurrent_dropout=.01,return_sequences=True)(lstm_layer6)\r\n        \r\n            #lstm_layer = Bidirectional(LSTM(128, dropout=.01, recurrent_dropout=.01,return_sequences=True))(resh2)\r\n        \r\n        \r\n            #Attention layer: multi-layer perceptron with 1 neuron, returns unscaled attention weight vector and attention weighted sum\r\n            a_unsc, attention_layer = MyAttention(1)(lstm_layer6)\r\n            #a_unsc, attention_layer = Attention(lstm_size=params['lstm_size'],units=1,initializer=params['initializer'])(lstm_layer6)\r\n        \r\n        \r\n            #Output layer dense, binary outcome\r\n            out = Dense(1, activation='sigmoid')(attention_layer)\r\n        \r\n            #output the prediction and the unscaled attention to retrieve after training \r\n            model = tf.keras.Model(inputs=[inp_cat_data, inp_num_data], outputs=out )\r\n        \r\n            #output the prediction only - attention to retrieve after training with intermediate layer extraction\r\n            #model = keras.Model(inputs=[inp_cat_data, inp_num_data], outputs=out )\r\n        \r\n        \r\n            #model = keras.Model(inputs=[inp_cat_data, inp_num_data], outputs=out )\r\n        \r\n            model.compile(optimizer=params['optimizer'],\r\n                          loss=params['loss'],\r\n                          metrics=['acc'])\r\n        \r\n            output=model.fit(x=x_train, y=y_train, validation_data=[x_val, y_val], epochs=params['epochs'], batch_size=params['batch_size'],callbacks=[talos.utils.ExperimentLogCallback('dnamta', params)])\r\n        \r\n            return output,model\r\n\r\nAfter this, I defined the param dictionary and called Scan() and Predict().\r\n\r\n\r\n#### 4) Explain what actually happened\r\n\r\nWith the code above, talos.Predict() returned me an error:\r\n        ---------------------------------------------------------------------------\r\n        \r\n        ValueError                                Traceback (most recent call last)\r\n        \r\n        [<ipython-input-35-53d0e1518611>](https://localhost:8080/#) in <module>()\r\n              1 p = talos.Predict(scan_object)\r\n        ----> 2 p.predict_classes(x=[X_test_cat2, X_test_num2],metric='acc',asc=False)\r\n        \r\n        10 frames\r\n        \r\n        [/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py](https://localhost:8080/#) in class_and_config_for_serialized_keras_object(config, module_objects, custom_objects, printable_module_name)\r\n            561   if cls is None:\r\n            562     raise ValueError(\r\n        --> 563         f'Unknown {printable_module_name}: {class_name}. Please ensure this '\r\n            564         'object is passed to the `custom_objects` argument. See '\r\n            565         'https://www.tensorflow.org/guide/keras/save_and_serialize'\r\n        \r\n        ValueError: Unknown layer: MyAttention. Please ensure this object is passed to the `custom_objects` argument. See https://www.tensorflow.org/guide/keras/save_and_serialize#registering_the_custom_object for details.\r\n\r\n\r\nI've tried to use register the custom object and use\r\n\r\n   'with tf.keras.utils.custom_object_scope(custom_objects)'\r\n\r\nbut got another error:\r\n\r\n\r\n            TypeError                                 Traceback (most recent call last)\r\n            \r\n            [<ipython-input-34-30812c504abf>](https://localhost:8080/#) in <module>()\r\n                  3 with tf.keras.utils.custom_object_scope(custom_objects):\r\n                  4     p = talos.Predict(scan_object)\r\n            ----> 5     p.predict_classes(x=[X_test_cat2, X_test_num2],metric='acc',asc=False)\r\n                  6     print(p)\r\n            \r\n            14 frames\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py](https://localhost:8080/#) in validate_kwargs(kwargs, allowed_kwargs, error_message)\r\n               1172   for kwarg in kwargs:\r\n               1173     if kwarg not in allowed_kwargs:\r\n            -> 1174       raise TypeError(error_message, kwarg)\r\n               1175 \r\n               1176 \r\n            \r\n            TypeError: ('Keyword argument not understood:', 'w')\r\n\r\nAnother error related: if I define the get_config() method in another way in MyAttention:\r\n\r\n                  def get_config(self):\r\n                        config=super().get_config()\r\n                        config.update({\r\n                            'units':self.units,\r\n                            'w':self.w.numpy(),\r\n                            'b':self.b.numpy(),\r\n                        })\r\n                \r\n                        return config\r\n\r\nTalos.Scan() cannot complete the scaning prcess and shows:\r\n\r\n            NotImplementedError                       Traceback (most recent call last)\r\n            \r\n            [<ipython-input-76-e32780f89adc>](https://localhost:8080/#) in <module>()\r\n                  2                          params=params,\r\n                  3                          model=dnamta,\r\n            ----> 4                          experiment_name='dnamta')\r\n            \r\n            10 frames\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/talos/scan/Scan.py](https://localhost:8080/#) in __init__(self, x, y, params, model, experiment_name, x_val, y_val, val_split, random_method, seed, performance_target, fraction_limit, round_limit, time_limit, boolean_limit, reduction_method, reduction_interval, reduction_window, reduction_threshold, reduction_metric, minimize_loss, disable_progress_bar, print_params, clear_session, save_weights)\r\n                194         # start runtime\r\n                195         from .scan_run import scan_run\r\n            --> 196         scan_run(self)\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/talos/scan/scan_run.py](https://localhost:8080/#) in scan_run(self)\r\n                 24         # otherwise proceed with next permutation\r\n                 25         from .scan_round import scan_round\r\n            ---> 26         self = scan_round(self)\r\n                 27         self.pbar.update(1)\r\n                 28 \r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/talos/scan/scan_round.py](https://localhost:8080/#) in scan_round(self)\r\n                 30     try:\r\n                 31         # save model and weights\r\n            ---> 32         self.saved_models.append(self.round_model.to_json())\r\n                 33 \r\n                 34         if self.save_weights:\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/keras/engine/training.py](https://localhost:8080/#) in to_json(self, **kwargs)\r\n               2660         A JSON string.\r\n               2661     \"\"\"\r\n            -> 2662     model_config = self._updated_config()\r\n               2663     return json.dumps(\r\n               2664         model_config, default=json_utils.get_json_type, **kwargs)\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/keras/engine/training.py](https://localhost:8080/#) in _updated_config(self)\r\n               2618     from keras import __version__ as keras_version  # pylint: disable=g-import-not-at-top\r\n               2619 \r\n            -> 2620     config = self.get_config()\r\n               2621     model_config = {\r\n               2622         'class_name': self.__class__.__name__,\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/keras/engine/functional.py](https://localhost:8080/#) in get_config(self)\r\n                683 \r\n                684   def get_config(self):\r\n            --> 685     return copy.deepcopy(get_network_config(self))\r\n                686 \r\n                687   @classmethod\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/keras/engine/functional.py](https://localhost:8080/#) in get_network_config(network, serialize_layer_fn)\r\n               1408           filtered_inbound_nodes.append(node_data)\r\n               1409 \r\n            -> 1410       layer_config = serialize_layer_fn(layer)\r\n               1411       layer_config['name'] = layer.name\r\n               1412       layer_config['inbound_nodes'] = filtered_inbound_nodes\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py](https://localhost:8080/#) in serialize_keras_object(instance)\r\n                509         return serialize_keras_class_and_config(\r\n                510             name, {_LAYER_UNDEFINED_CONFIG_KEY: True})\r\n            --> 511       raise e\r\n                512     serialization_config = {}\r\n                513     for key, item in config.items():\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py](https://localhost:8080/#) in serialize_keras_object(instance)\r\n                504     name = get_registered_name(instance.__class__)\r\n                505     try:\r\n            --> 506       config = instance.get_config()\r\n                507     except NotImplementedError as e:\r\n                508       if _SKIP_FAILED_SERIALIZATION:\r\n            \r\n            [<ipython-input-74-91cfecb2d906>](https://localhost:8080/#) in get_config(self)\r\n                 24 \r\n                 25     def get_config(self):\r\n            ---> 26         config=super().get_config()\r\n                 27         config.update({\r\n                 28             'units':self.units,\r\n            \r\n            [/usr/local/lib/python3.7/dist-packages/keras/engine/training.py](https://localhost:8080/#) in get_config(self)\r\n               2628 \r\n               2629   def get_config(self):\r\n            -> 2630     raise NotImplementedError\r\n               2631 \r\n               2632   @classmethod\r\n            \r\n            NotImplementedError:\r\n\r\n\r\nIf you want to run the code, you have the notebook here.\r\nhttps://colab.research.google.com/drive/13J0aLZwQ6cbT9ObwqMNa5Q4cb8OBGifP?usp=sharing\r\n\r\n---\r\n","reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/580/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"id":7318550319,"node_id":"CE_lADOB-ECn85HyT_wzwAAAAG0ODcv","url":"https://api.github.com/repos/autonomio/talos/issues/events/7318550319","actor":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-09-04T14:36:45Z","state_reason":null,"performed_via_github_app":null}]