[{"url":"https://api.github.com/repos/autonomio/talos/issues/comments/435022779","html_url":"https://github.com/autonomio/talos/issues/121#issuecomment-435022779","issue_url":"https://api.github.com/repos/autonomio/talos/issues/121","id":435022779,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTAyMjc3OQ==","user":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T12:15:49Z","updated_at":"2018-11-01T12:15:49Z","author_association":"CONTRIBUTOR","body":"Did you check the user guide in the [corresponding part](https://autonomio.github.io/docs_talos/#predict)? I think the example there will help solve your problem. Also check out the corresponding docstrings for the functions for more. \r\n\r\nFor the case where for some reason you want to get access to all the models, that is also available through the Scan() object (but I'm guessing that's not what you're looking for now). ","reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/comments/435022779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/autonomio/talos/issues/comments/435033039","html_url":"https://github.com/autonomio/talos/issues/121#issuecomment-435033039","issue_url":"https://api.github.com/repos/autonomio/talos/issues/121","id":435033039,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTAzMzAzOQ==","user":{"login":"dambuck","id":43039871,"node_id":"MDQ6VXNlcjQzMDM5ODcx","avatar_url":"https://avatars.githubusercontent.com/u/43039871?v=4","gravatar_id":"","url":"https://api.github.com/users/dambuck","html_url":"https://github.com/dambuck","followers_url":"https://api.github.com/users/dambuck/followers","following_url":"https://api.github.com/users/dambuck/following{/other_user}","gists_url":"https://api.github.com/users/dambuck/gists{/gist_id}","starred_url":"https://api.github.com/users/dambuck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dambuck/subscriptions","organizations_url":"https://api.github.com/users/dambuck/orgs","repos_url":"https://api.github.com/users/dambuck/repos","events_url":"https://api.github.com/users/dambuck/events{/privacy}","received_events_url":"https://api.github.com/users/dambuck/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T12:59:04Z","updated_at":"2018-11-01T12:59:04Z","author_association":"NONE","body":"Thanks for the fast answer. \r\n\r\nI already checked it, and I found it weird that predict is listed as part of the Predict command but the manual shows it's use as part of the Reporting command.  Might be an error?\r\n\r\nI might be just too stupid but I cant manage  to get the predict command to work, because of the exp activation function... How do I declare this custom object here?\r\n\r\n    p = ta.Predict(Gru)\r\n    p.predict(ofc_binned,0)\r\n\r\n    ValueError                                Traceback (most recent call last)\r\n    <ipython-input-30-fadcb4245a59> in <module>()\r\n          1 custom_objects=settings_dict\r\n          2 p = ta.Predict(Gru)\r\n    ----> 3 p.predict(ofc_binned,0)\r\n          4 # p.load_model()\r\n\r\n    ~/.local/lib/python3.5/site-packages/talos/commands/predict.py in predict(self, x, model_id, metric, asc)\r\n         27             model_id = best_model(self.scan_object, metric, asc)\r\n         28 \r\n    ---> 29         model = activate_model(self.scan_object, model_id)\r\n         30 \r\n         31         return model.predict(x)\r\n\r\n    ~/.local/lib/python3.5/site-packages/talos/utils/best_model.py in activate_model(self, model_id)\r\n         18     '''Loads the model from the json that is stored in the Scan object'''\r\n         19 \r\n    ---> 20     model = model_from_json(self.saved_models[model_id])\r\n         21     model.set_weights(self.saved_weights[model_id])\r\n         22 \r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/engine/saving.py in model_from_json(json_string, custom_objects)\r\n        366     config = json.loads(json_string)\r\n        367     from ..layers import deserialize\r\n    --> 368     return deserialize(config, custom_objects=custom_objects)\r\n        369 \r\n        370 \r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/layers/__init__.py in deserialize(config, custom_objects)\r\n         53                                     module_objects=globs,\r\n         54                                     custom_objects=custom_objects,\r\n    ---> 55                                     printable_module_name='layer')\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/utils/generic_utils.py in deserialize_keras_object(identifier,    module_objects, custom_objects, printable_module_name)\r\n        143                     config['config'],\r\n        144                     custom_objects=dict(list(_GLOBAL_CUSTOM_OBJECTS.items()) +\r\n    --> 145                                         list(custom_objects.items())))\r\n        146             with CustomObjectScope(custom_objects):\r\n        147                 return cls.from_config(config['config'])\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/engine/network.py in from_config(cls, config, custom_objects)\r\n       1015         # First, we create all layers and enqueue nodes to be processed\r\n       1016         for layer_data in config['layers']:\r\n    -> 1017             process_layer(layer_data)\r\n       1018         # Then we process nodes in order of layer depth.\r\n       1019         # Nodes that cannot yet be processed (if the inbound node\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/engine/network.py in process_layer(layer_data)\r\n       1001 \r\n       1002             layer = deserialize_layer(layer_data,\r\n    -> 1003                                       custom_objects=custom_objects)\r\n       1004             created_layers[layer_name] = layer\r\n       1005 \r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/layers/__init__.py in deserialize(config, custom_objects)\r\n         53                                     module_objects=globs,\r\n         54                                     custom_objects=custom_objects,\r\n    ---> 55                                     printable_module_name='layer')\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/utils/generic_utils.py in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)\r\n        143                     config['config'],\r\n        144                     custom_objects=dict(list(_GLOBAL_CUSTOM_OBJECTS.items()) +\r\n    --> 145                                         list(custom_objects.items())))\r\n        146             with CustomObjectScope(custom_objects):\r\n        147                 return cls.from_config(config['config'])\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/layers/wrappers.py in from_config(cls, config, custom_objects)\r\n        108         from . import deserialize as deserialize_layer\r\n        109         layer = deserialize_layer(config.pop('layer'),\r\n    --> 110                                   custom_objects=custom_objects)\r\n        111         return cls(layer, **config)\r\n        112 \r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/layers/__init__.py in deserialize(config, custom_objects)\r\n         53                                     module_objects=globs,\r\n         54                                     custom_objects=custom_objects,\r\n    ---> 55                                     printable_module_name='layer')\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/utils/generic_utils.py in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)\r\n        145                                         list(custom_objects.items())))\r\n        146             with CustomObjectScope(custom_objects):\r\n    --> 147                 return cls.from_config(config['config'])\r\n        148         else:\r\n        149             # Then `cls` may be a function returning a class.\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/engine/base_layer.py in from_config(cls, config)\r\n       1107             A layer instance.\r\n       1108         \"\"\"\r\n    -> 1109         return cls(**config)\r\n       1110 \r\n       1111     def count_params(self):\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/legacy/interfaces.py in wrapper(*args, **kwargs)\r\n         89                 warnings.warn('Update your `' + object_name +\r\n        90                               '` call to the Keras 2 API: ' + signature, stacklevel=2)\r\n    ---> 91             return func(*args, **kwargs)\r\n         92         wrapper._original_function = func\r\n         93         return wrapper\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/layers/core.py in __init__(self, units, activation, use_bias,         kernel_initializer, bias_initializer, kernel_regularizer, bias_regularizer, activity_regularizer, kernel_constraint, bias_constraint, **kwargs)\r\n       839         super(Dense, self).__init__(**kwargs)\r\n        840         self.units = units\r\n    --> 841         self.activation = activations.get(activation)\r\n        842         self.use_bias = use_bias\r\n        843         self.kernel_initializer = initializers.get(kernel_initializer)\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/activations.py in get(identifier)\r\n        187     if isinstance(identifier, six.string_types):\r\n        188         identifier = str(identifier)\r\n    --> 189         return deserialize(identifier)\r\n       190     elif callable(identifier):\r\n        191         if isinstance(identifier, Layer):\r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/activations.py in deserialize(name, custom_objects)\r\n       168         module_objects=globals(),\r\n        169         custom_objects=custom_objects,\r\n    --> 170         printable_module_name='activation function')\r\n       171 \r\n        172 \r\n\r\n    ~/.local/lib/python3.5/site-packages/keras/utils/generic_utils.py in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)\r\n        163             if fn is None:\r\n        164                 raise ValueError('Unknown ' + printable_module_name +\r\n    --> 165                                  ':' + function_name)\r\n        166         return fn\r\n        167     else:\r\n\r\n    ValueError: Unknown activation function:exp","reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/comments/435033039/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dambuck","id":43039871,"node_id":"MDQ6VXNlcjQzMDM5ODcx","avatar_url":"https://avatars.githubusercontent.com/u/43039871?v=4","gravatar_id":"","url":"https://api.github.com/users/dambuck","html_url":"https://github.com/dambuck","followers_url":"https://api.github.com/users/dambuck/followers","following_url":"https://api.github.com/users/dambuck/following{/other_user}","gists_url":"https://api.github.com/users/dambuck/gists{/gist_id}","starred_url":"https://api.github.com/users/dambuck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dambuck/subscriptions","organizations_url":"https://api.github.com/users/dambuck/orgs","repos_url":"https://api.github.com/users/dambuck/repos","events_url":"https://api.github.com/users/dambuck/events{/privacy}","received_events_url":"https://api.github.com/users/dambuck/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/autonomio/talos/issues/comments/435044810","html_url":"https://github.com/autonomio/talos/issues/121#issuecomment-435044810","issue_url":"https://api.github.com/repos/autonomio/talos/issues/121","id":435044810,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTA0NDgxMA==","user":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T13:43:23Z","updated_at":"2018-11-01T13:43:23Z","author_association":"CONTRIBUTOR","body":"How about the example [here](https://nbviewer.jupyter.org/github/autonomio/talos/blob/master/examples/Hyperparameter%20Optimization%20with%20Keras%20for%20the%20Iris%20Prediction.ipynb#7.-Evaluating-Models-with-Evaluate()-), would that help you to get your head around it? \r\n\r\nThere might be some inconsistency with the information, so I will check into that. Sorry for inconvenience. \r\n\r\nGenerally speaking the idea is that in order to actually use the models, there are several different ways in which we can do that within Talos, but the idea is to avoid entirely handling the save / load outside of Talos. The most seamless of these is the Deploy() and then working out of the deploy package (there is a readme included in the deploy package that explains how).  \r\n\r\nIf the above does not help, I can create an example notebook which is just focused on making predictions with models.\r\n","reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/comments/435044810/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false}},{"id":1980168036,"node_id":"MDExOkNsb3NlZEV2ZW50MTk4MDE2ODAzNg==","url":"https://api.github.com/repos/autonomio/talos/issues/events/1980168036","actor":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2018-11-21T14:17:03Z","state_reason":null,"performed_via_github_app":null}]