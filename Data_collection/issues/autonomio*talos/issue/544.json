{"url":"https://api.github.com/repos/autonomio/talos/issues/544","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/544/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/544/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/544/events","html_url":"https://github.com/autonomio/talos/issues/544","id":811827075,"node_id":"MDU6SXNzdWU4MTE4MjcwNzU=","number":544,"title":"talos execution fails of very first example:","user":{"login":"moshiour","id":8085905,"node_id":"MDQ6VXNlcjgwODU5MDU=","avatar_url":"https://avatars.githubusercontent.com/u/8085905?v=4","gravatar_id":"","url":"https://api.github.com/users/moshiour","html_url":"https://github.com/moshiour","followers_url":"https://api.github.com/users/moshiour/followers","following_url":"https://api.github.com/users/moshiour/following{/other_user}","gists_url":"https://api.github.com/users/moshiour/gists{/gist_id}","starred_url":"https://api.github.com/users/moshiour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moshiour/subscriptions","organizations_url":"https://api.github.com/users/moshiour/orgs","repos_url":"https://api.github.com/users/moshiour/repos","events_url":"https://api.github.com/users/moshiour/events{/privacy}","received_events_url":"https://api.github.com/users/moshiour/received_events","type":"User","site_admin":false},"labels":[{"id":1040763409,"node_id":"MDU6TGFiZWwxMDQwNzYzNDA5","url":"https://api.github.com/repos/autonomio/talos/labels/user%20support","name":"user support","color":"59db8b","default":false,"description":"nothing is wrong with Talos"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-19T08:47:16Z","updated_at":"2021-03-13T15:24:38Z","closed_at":"2021-03-13T15:24:07Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n#### 1) Confirm the below\r\n\r\n- [ ] I have looked for an answer in the [Docs](https://autonomio.github.io/talos). Yes, I have done it\r\n- [ ] My Python version is 3.5 or higher:  Python 3.8.5 and TensorFlow 2.4.1\r\n- [ ] I have searched through the issues [Issues](https://github.com/autonomio/talos/issues) for a duplicate. I didn't find any of this except colab/Kaggle issue\r\n- [ ] I've tested that my Keras model works as a stand-alone. : Yes, I have been running the keras. \r\n\r\n#### 2) Include the output of:\r\n\r\n`talos.__version__`\r\n\r\nTalos 1.0.0\r\n\r\n\r\n#### 3) Explain clearly what you are trying to achieve\r\n\r\nI want to get model optimization using talos with LSTM-RNN.\r\n\r\n#### 4) Explain what you have already tried\r\n\r\nI was testing the the first example talos from Github. \r\n\r\n#### 5) Provide a code-complete reference\r\n\r\n\r\n- [ ] My support question includes a `Scan()` command : A Very Short Introduction to Hyperparam eter Optimization of Keras Models with Talos.ipynb\r\n\r\nReports:\r\n\r\n0%|          | 0/18 [00:00<?, ?it/s]\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-6-8950d7bfff6a> in <module>\r\n----> 1 t = talos.Scan(x=x, y=y, params=p, model=diabetes, experiment_name='diabetes')\r\n\r\n~/anaconda3/lib/python3.8/site-packages/talos/scan/Scan.py in __init__(self, x, y, params, model, experiment_name, x_val, y_val, val_split, random_method, seed, performance_target, fraction_limit, round_limit, time_limit, boolean_limit, reduction_method, reduction_interval, reduction_window, reduction_threshold, reduction_metric, minimize_loss, disable_progress_bar, print_params, clear_session, save_weights)\r\n    194         # start runtime\r\n    195         from .scan_run import scan_run\r\n--> 196         scan_run(self)\r\n\r\n~/anaconda3/lib/python3.8/site-packages/talos/scan/scan_run.py in scan_run(self)\r\n     24         # otherwise proceed with next permutation\r\n     25         from .scan_round import scan_round\r\n---> 26         self = scan_round(self)\r\n     27         self.pbar.update(1)\r\n     28 \r\n\r\n~/anaconda3/lib/python3.8/site-packages/talos/scan/scan_round.py in scan_round(self)\r\n     17     # fit the model\r\n     18     from ..model.ingest_model import ingest_model\r\n---> 19     self.model_history, self.round_model = ingest_model(self)\r\n     20     self.round_history.append(self.model_history.history)\r\n     21 \r\n\r\n~/anaconda3/lib/python3.8/site-packages/talos/model/ingest_model.py in ingest_model(self)\r\n      4     through Scan() model paramater.'''\r\n      5 \r\n----> 6     return self.model(self.x_train,\r\n      7                       self.y_train,\r\n      8                       self.x_val,\r\n\r\n<ipython-input-4-bb09bea7c996> in diabetes(x_train, y_train, x_val, y_val, params)\r\n     10 \r\n     11     # make sure history object is returned by model.fit()\r\n---> 12     out = model.fit(x=x, \r\n     13                     y=y,\r\n     14                     validation_data=[x_val, y_val],\r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\r\n   1129                 model=self,\r\n   1130                 steps_per_execution=self._steps_per_execution)\r\n-> 1131           val_logs = self.evaluate(\r\n   1132               x=val_x,\r\n   1133               y=val_y,\r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py in evaluate(self, x, y, batch_size, verbose, sample_weight, steps, callbacks, max_queue_size, workers, use_multiprocessing, return_dict)\r\n   1387             with trace.Trace('test', step_num=step, _r=1):\r\n   1388               callbacks.on_test_batch_begin(step)\r\n-> 1389               tmp_logs = self.test_function(iterator)\r\n   1390               if data_handler.should_sync:\r\n   1391                 context.async_wait()\r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py in __call__(self, *args, **kwds)\r\n    826     tracing_count = self.experimental_get_tracing_count()\r\n    827     with trace.Trace(self._name) as tm:\r\n--> 828       result = self._call(*args, **kwds)\r\n    829       compiler = \"xla\" if self._experimental_compile else \"nonXla\"\r\n    830       new_tracing_count = self.experimental_get_tracing_count()\r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py in _call(self, *args, **kwds)\r\n    869       # This is the first call of __call__, so we have to initialize.\r\n    870       initializers = []\r\n--> 871       self._initialize(args, kwds, add_initializers_to=initializers)\r\n    872     finally:\r\n    873       # At this point we know that the initialization is complete (or less\r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py in _initialize(self, args, kwds, add_initializers_to)\r\n    723     self._graph_deleter = FunctionDeleter(self._lifted_initializer_graph)\r\n    724     self._concrete_stateful_fn = (\r\n--> 725         self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access\r\n    726             *args, **kwds))\r\n    727 \r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/eager/function.py in _get_concrete_function_internal_garbage_collected(self, *args, **kwargs)\r\n   2967       args, kwargs = None, None\r\n   2968     with self._lock:\r\n-> 2969       graph_function, _ = self._maybe_define_function(args, kwargs)\r\n   2970     return graph_function\r\n   2971 \r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/eager/function.py in _maybe_define_function(self, args, kwargs)\r\n   3359 \r\n   3360           self._function_cache.missed.add(call_context_key)\r\n-> 3361           graph_function = self._create_graph_function(args, kwargs)\r\n   3362           self._function_cache.primary[cache_key] = graph_function\r\n   3363 \r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/eager/function.py in _create_graph_function(self, args, kwargs, override_flat_arg_shapes)\r\n   3194     arg_names = base_arg_names + missing_arg_names\r\n   3195     graph_function = ConcreteFunction(\r\n-> 3196         func_graph_module.func_graph_from_py_func(\r\n   3197             self._name,\r\n   3198             self._python_function,\r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/framework/func_graph.py in func_graph_from_py_func(name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes)\r\n    988         _, original_func = tf_decorator.unwrap(python_func)\r\n    989 \r\n--> 990       func_outputs = python_func(*func_args, **func_kwargs)\r\n    991 \r\n    992       # invariant: `func_outputs` contains only Tensors, CompositeTensors,\r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py in wrapped_fn(*args, **kwds)\r\n    632             xla_context.Exit()\r\n    633         else:\r\n--> 634           out = weak_wrapped_fn().__wrapped__(*args, **kwds)\r\n    635         return out\r\n    636 \r\n\r\n~/anaconda3/lib/python3.8/site-packages/tensorflow/python/framework/func_graph.py in wrapper(*args, **kwargs)\r\n    975           except Exception as e:  # pylint:disable=broad-except\r\n    976             if hasattr(e, \"ag_error_metadata\"):\r\n--> 977               raise e.ag_error_metadata.to_exception(e)\r\n    978             else:\r\n    979               raise\r\n\r\nValueError: in user code:\r\n\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py:1233 test_function  *\r\n        return step_function(self, iterator)\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py:1224 step_function  **\r\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/distribute/distribute_lib.py:1259 run\r\n        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/distribute/distribute_lib.py:2730 call_for_each_replica\r\n        return self._call_for_each_replica(fn, args, kwargs)\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/distribute/distribute_lib.py:3417 _call_for_each_replica\r\n        return fn(*args, **kwargs)\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py:1217 run_step  **\r\n        outputs = model.test_step(data)\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py:1183 test_step\r\n        y_pred = self(x, training=False)\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py:998 __call__\r\n        input_spec.assert_input_compatibility(self.input_spec, inputs, self.name)\r\n    /home/moshiour/anaconda3/lib/python3.8/site-packages/tensorflow/python/keras/engine/input_spec.py:204 assert_input_compatibility\r\n        raise ValueError('Layer ' + layer_name + ' expects ' +\r\n\r\n    ValueError: Layer sequential expects 1 input(s), but it received 2 input tensors. Inputs received: [<tf.Tensor 'IteratorGetNext:0' shape=(None, 8) dtype=float32>, <tf.Tensor 'ExpandDims:0' shape=(None, 1) dtype=float32>]\r\n---\r\n","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/544/timeline","performed_via_github_app":null,"state_reason":"completed"}