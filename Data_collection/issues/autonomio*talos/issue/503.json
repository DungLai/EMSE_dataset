{"url":"https://api.github.com/repos/autonomio/talos/issues/503","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/503/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/503/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/503/events","html_url":"https://github.com/autonomio/talos/issues/503","id":694647610,"node_id":"MDU6SXNzdWU2OTQ2NDc2MTA=","number":503,"title":"KeyError: metrics in talos.scan","user":{"login":"william-yuan","id":22817460,"node_id":"MDQ6VXNlcjIyODE3NDYw","avatar_url":"https://avatars.githubusercontent.com/u/22817460?v=4","gravatar_id":"","url":"https://api.github.com/users/william-yuan","html_url":"https://github.com/william-yuan","followers_url":"https://api.github.com/users/william-yuan/followers","following_url":"https://api.github.com/users/william-yuan/following{/other_user}","gists_url":"https://api.github.com/users/william-yuan/gists{/gist_id}","starred_url":"https://api.github.com/users/william-yuan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/william-yuan/subscriptions","organizations_url":"https://api.github.com/users/william-yuan/orgs","repos_url":"https://api.github.com/users/william-yuan/repos","events_url":"https://api.github.com/users/william-yuan/events{/privacy}","received_events_url":"https://api.github.com/users/william-yuan/received_events","type":"User","site_admin":false},"labels":[{"id":1504516015,"node_id":"MDU6TGFiZWwxNTA0NTE2MDE1","url":"https://api.github.com/repos/autonomio/talos/labels/topic:%20examples","name":"topic: examples","color":"ffffff","default":false,"description":"related with need for new examples (or fixing old)"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-09-07T02:53:26Z","updated_at":"2022-02-12T18:35:34Z","closed_at":"2020-11-09T16:59:30Z","author_association":"NONE","active_lock_reason":null,"body":"talos.__version__ = 1.0.0\r\ntf.__version__ = 2.2.0\r\n\r\nThe [concise demo ](https://nbviewer.jupyter.org/github/autonomio/talos/blob/master/examples/Hyperparameter%20Optimization%20on%20Keras%20with%20Breast%20Cancer%20Data.ipynb) fails with 'KeyError: 'metrics.'\r\nThe following code:\r\n \r\n\r\n    from keras.models import Sequential\r\n    from keras.layers import Dropout, Dense\r\n\r\n\r\n    import sys\r\n    import talos\r\n    x, y = talos.templates.datasets.breast_cancer()\r\n\r\n    x = talos.utils.rescale_meanzero(x)\r\n    def breast_cancer_model(x_train, y_train, x_val, y_val, params):\r\n\r\n        model = Sequential()\r\n        model.add(Dense(params['first_neuron'], input_dim=x_train.shape[1],\r\n                        activation=params['activation'],\r\n                        kernel_initializer=params['kernel_initializer']))\r\n\r\n        model.add(Dropout(params['dropout']))\r\n\r\n        model.add(Dense(1, activation=params['last_activation'],\r\n                        kernel_initializer=params['kernel_initializer']))\r\n\r\n        model.compile(loss=params['losses'],\r\n                      optimizer=params['optimizer'],\r\n                      metrics=['acc', talos.utils.metrics.f1score])\r\n\r\n        history = model.fit(x_train, y_train, \r\n                            validation_data=[x_val, y_val],\r\n                            batch_size=params['batch_size'],\r\n                            callbacks=[talos.utils.live()],\r\n                            epochs=params['epochs'],\r\n                            verbose=0)\r\n\r\n        return history, model\r\n\r\n    p = {'first_neuron':[9,10,11],\r\n         'hidden_layers':[0, 1, 2],\r\n         'batch_size': [30],\r\n         'epochs': [100],\r\n         'dropout': [0],\r\n         'kernel_initializer': ['uniform','normal'],\r\n         'optimizer': ['Nadam', 'Adam'],\r\n         'losses': ['binary_crossentropy'],\r\n         'activation':['relu', 'elu'],\r\n         'last_activation': ['sigmoid']}\r\n    t = talos.Scan(x=x,\r\n                   y=y,\r\n                   model=breast_cancer_model,\r\n                   params=p,\r\n                   experiment_name='breast_cancer',\r\n                   round_limit=10)\r\n\r\n...results in the following: \r\n\r\n    ---------------------------------------------------------------------------\r\n    KeyError                                  Traceback (most recent call last)\r\n    <ipython-input-1-7a8ddf94f1cb> in <module>\r\n         47      'last_activation': ['sigmoid']}\r\n         48 # and run the experiment\r\n    ---> 49 t = talos.Scan(x=x,\r\n         50                y=y,\r\n         51                model=breast_cancer_model,\r\n\r\n    /home/anaconda/anaconda3/envs/tf-gpu2/lib/python3.8/site-packages/talos/scan/Scan.py in __init__(self, x, y, params, model, experiment_name, x_val, y_val, val_split, random_method, seed, performance_target, fraction_limit, round_limit, time_limit, boolean_limit, reduction_method, reduction_interval, reduction_window, reduction_threshold, reduction_metric, minimize_loss, disable_progress_bar, print_params, clear_session, save_weights)\r\n        194         # start runtime\r\n        195         from .scan_run import scan_run\r\n    --> 196         scan_run(self)\r\n\r\n    /home/anaconda/anaconda3/envs/tf-gpu2/lib/python3.8/site-packages/talos/scan/scan_run.py in scan_run(self)\r\n         24         # otherwise proceed with next permutation\r\n         25         from .scan_round import scan_round\r\n    ---> 26         self = scan_round(self)\r\n         27         self.pbar.update(1)\r\n         28 \r\n\r\n    /home/anaconda/anaconda3/envs/tf-gpu2/lib/python3.8/site-packages/talos/scan/scan_round.py in scan_round(self)\r\n         17     # fit the model\r\n         18     from ..model.ingest_model import ingest_model\r\n    ---> 19     self.model_history, self.round_model = ingest_model(self)\r\n         20     self.round_history.append(self.model_history.history)\r\n         21 \r\n\r\n    /home/anaconda/anaconda3/envs/tf-gpu2/lib/python3.8/site-packages/talos/model/ingest_model.py in ingest_model(self)\r\n          4     through Scan() model paramater.'''\r\n          5 \r\n    ----> 6     return self.model(self.x_train,\r\n          7                       self.y_train,\r\n          8                       self.x_val,\r\n\r\n    <ipython-input-1-7a8ddf94f1cb> in breast_cancer_model(x_train, y_train, x_val, y_val, params)\r\n         27                   metrics=['acc', talos.utils.metrics.f1score])\r\n         28 \r\n    ---> 29     history = model.fit(x_train, y_train, \r\n         30                         validation_data=[x_val, y_val],\r\n         31                         batch_size=params['batch_size'],\r\n\r\n    /home/anaconda/anaconda3/envs/tf-gpu2/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py in _method_wrapper(self, *args, **kwargs)\r\n         64   def _method_wrapper(self, *args, **kwargs):\r\n         65     if not self._in_multi_worker_mode():  # pylint: disable=protected-access\r\n    ---> 66       return method(self, *args, **kwargs)\r\n         67 \r\n         68     # Running inside `run_distribute_coordinator` already.\r\n\r\n    /home/anaconda/anaconda3/envs/tf-gpu2/lib/python3.8/site-packages/tensorflow/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\r\n        828       self.stop_training = False\r\n        829       train_function = self.make_train_function()\r\n    --> 830       callbacks.on_train_begin()\r\n        831       # Handle fault-tolerance for multi-worker.\r\n        832       # TODO(omalleyt): Fix the ordering issues that mean this has to\r\n\r\n    /home/anaconda/anaconda3/envs/tf-gpu2/lib/python3.8/site-packages/tensorflow/python/keras/callbacks.py in on_train_begin(self, logs)\r\n        445     logs = self._process_logs(logs)\r\n        446     for callback in self.callbacks:\r\n    --> 447       callback.on_train_begin(logs)\r\n        448 \r\n        449   def on_train_end(self, logs=None):\r\n\r\n    /home/anaconda/anaconda3/envs/tf-gpu2/lib/python3.8/site-packages/kerasplotlib/traininglog.py in on_train_begin(self, logs)\r\n         31 \r\n         32     def on_train_begin(self, logs={}):\r\n    ---> 33         self.base_metrics = [metric for metric in self.params['metrics'] if not metric.startswith('val_')]\r\n         34         if self.figsize is None:\r\n         35             self.figsize = (\r\n\r\n    KeyError: 'metrics'","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/503/timeline","performed_via_github_app":null,"state_reason":"completed"}