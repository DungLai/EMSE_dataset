{"url":"https://api.github.com/repos/autonomio/talos/issues/113","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/113/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/113/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/113/events","html_url":"https://github.com/autonomio/talos/issues/113","id":369881287,"node_id":"MDU6SXNzdWUzNjk4ODEyODc=","number":113,"title":"\"Quantum\" random?","user":{"login":"giuliohome","id":3272563,"node_id":"MDQ6VXNlcjMyNzI1NjM=","avatar_url":"https://avatars.githubusercontent.com/u/3272563?v=4","gravatar_id":"","url":"https://api.github.com/users/giuliohome","html_url":"https://github.com/giuliohome","followers_url":"https://api.github.com/users/giuliohome/followers","following_url":"https://api.github.com/users/giuliohome/following{/other_user}","gists_url":"https://api.github.com/users/giuliohome/gists{/gist_id}","starred_url":"https://api.github.com/users/giuliohome/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giuliohome/subscriptions","organizations_url":"https://api.github.com/users/giuliohome/orgs","repos_url":"https://api.github.com/users/giuliohome/repos","events_url":"https://api.github.com/users/giuliohome/events{/privacy}","received_events_url":"https://api.github.com/users/giuliohome/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-10-14T08:45:39Z","updated_at":"2018-10-14T10:45:26Z","closed_at":"2018-10-14T10:45:26Z","author_association":"NONE","active_lock_reason":null,"body":"How do you implement a quantum random generator? Being quantum is a physical characteristic of the process and it is hard to achieve in practice but anyway it makes sense only when speaking about physics and typically at either experimental or fundamental level.\r\nYou can not achieve a true quantum outcome only by means of a classical software code.\r\nIs it really _quantum_ what you _call_ **quantum** ? Or what's it indeed?  \n\nwhat about this line of code in your [reducer](https://github.com/autonomio/talos/blob/e97f4b782068993afb77ace350f68bc008c20ccc/talos/reducers/sample_reducer.py#L52): how is it supposed to be implemented?  \n\nNotice that you write in the readme:\n\n> The currently implemented methods are:\n\nQuantum randomness (vacuum based)","closed_by":{"login":"giuliohome","id":3272563,"node_id":"MDQ6VXNlcjMyNzI1NjM=","avatar_url":"https://avatars.githubusercontent.com/u/3272563?v=4","gravatar_id":"","url":"https://api.github.com/users/giuliohome","html_url":"https://github.com/giuliohome","followers_url":"https://api.github.com/users/giuliohome/followers","following_url":"https://api.github.com/users/giuliohome/following{/other_user}","gists_url":"https://api.github.com/users/giuliohome/gists{/gist_id}","starred_url":"https://api.github.com/users/giuliohome/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giuliohome/subscriptions","organizations_url":"https://api.github.com/users/giuliohome/orgs","repos_url":"https://api.github.com/users/giuliohome/repos","events_url":"https://api.github.com/users/giuliohome/events{/privacy}","received_events_url":"https://api.github.com/users/giuliohome/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/113/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/113/timeline","performed_via_github_app":null,"state_reason":"completed"}