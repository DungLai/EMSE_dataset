{"url":"https://api.github.com/repos/autonomio/talos/issues/386","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/386/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/386/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/386/events","html_url":"https://github.com/autonomio/talos/issues/386","id":482297654,"node_id":"MDU6SXNzdWU0ODIyOTc2NTQ=","number":386,"title":"Need Support for Data Shapes","user":{"login":"denizkenankilic","id":20106869,"node_id":"MDQ6VXNlcjIwMTA2ODY5","avatar_url":"https://avatars.githubusercontent.com/u/20106869?v=4","gravatar_id":"","url":"https://api.github.com/users/denizkenankilic","html_url":"https://github.com/denizkenankilic","followers_url":"https://api.github.com/users/denizkenankilic/followers","following_url":"https://api.github.com/users/denizkenankilic/following{/other_user}","gists_url":"https://api.github.com/users/denizkenankilic/gists{/gist_id}","starred_url":"https://api.github.com/users/denizkenankilic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/denizkenankilic/subscriptions","organizations_url":"https://api.github.com/users/denizkenankilic/orgs","repos_url":"https://api.github.com/users/denizkenankilic/repos","events_url":"https://api.github.com/users/denizkenankilic/events{/privacy}","received_events_url":"https://api.github.com/users/denizkenankilic/received_events","type":"User","site_admin":false},"labels":[{"id":1040763409,"node_id":"MDU6TGFiZWwxMDQwNzYzNDA5","url":"https://api.github.com/repos/autonomio/talos/labels/user%20support","name":"user support","color":"59db8b","default":false,"description":"nothing is wrong with Talos"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-08-19T12:58:56Z","updated_at":"2019-08-20T13:59:47Z","closed_at":"2019-08-19T19:50:39Z","author_association":"NONE","active_lock_reason":null,"body":"Hi again, I hope everything is well.\r\n\r\nActually I am new to Talos and as I stated before I am trying to model financial data by using LSTM model. My talos version is 0.5.0\r\n\r\nI have  2 columns data with 9830 observations (c1 and c2, daily closing prices data for DAX and NASDAQ respectively) and I am trying to use LSTM model. I want to use both DAX and NASDAQ data in order to forecast DAX data. I want to use Talos to get best hyperparameters.\r\n\r\nI divided dataset into training and test as (6860,2) and (2970,2) respectively. Afterwards, I prepared trainX (6850,10,2), trainY (6850,) and testX (2960,10,2), testY (2960,) datasets where time step is 10 in order to create datasets for LSTM type. trainX includes both DAX and NASDAQ, trainY includes NASDAQ (same for test data). I normalized each data between 0 and 1. Size of each data:\r\ntrainX --> (6850, 10 ,2)\r\ntrainY --> (6850, )\r\ntestX -->(2960, 10 ,2)\r\ntestY --> (2960, )\r\n\r\nAfter I have defined parameters and created a sequential model, I used Scan function. However for each round accuracy and val_acc are almost zero, they are not raising. I am sharing my codes and results. Is it about data shapes or data parts? If is it the case could you please help me about how to use data shapes to get a right accuracy results?\r\n\r\n- [ ] My support question includes an input model\r\n```\r\ndef create_model(trainX, trainY, testX, testY, params):\r\n\r\n    lstm_model = Sequential()\r\n    lstm_model.add(LSTM(params['first_neuron'], activation=params['activation'],\r\n                        input_shape=(10,2),\r\n                        #input_shape=(trainX.shape[1], trainX.shape[2]),\r\n                        #batch_input_shape=(10,10,2),\r\n                        #batch_input_shape=(params['batch_size'], TIME_STEPS, trainX.shape[2]), \r\n                        dropout=params['dropout'], recurrent_dropout=params['recurrent_dropout'],\r\n                        kernel_initializer=params['kernel_initializer'],\r\n                        return_sequences=False))\r\n    lstm_model.add(Dropout(params['dropout']))\r\n    \r\n    lstm_model.add(Dense(params['second_neuron'],activation='relu'))\r\n    \r\n    lstm_model.add(Dense(1, activation=params['last_activation']))\r\n    \r\n    lstm_model.compile(loss=params['losses'],\r\n                  optimizer=params['optimizer'],\r\n                  metrics=['acc'])\r\n    \r\n    model_out = lstm_model.fit(trainX, trainY, \r\n                        validation_data=[testX, testY],\r\n                        batch_size=params['batch_size'],\r\n                        #callbacks=[history],\r\n                        callbacks=[live()],\r\n                        epochs=params['epochs'],\r\n                        verbose=0)\r\n\r\n    return model_out, lstm_model \r\n```\r\n- [ ] My support question includes a parameter dictionary\r\n```\r\np = {'first_neuron':[4],\r\n     'second_neuron':[2, 4],\r\n     #'hidden_layers':[0, 1, 2],\r\n     'batch_size': [4, 16],\r\n     'epochs': [10, 20, 30],\r\n     'dropout': [0, 0.2],\r\n     'recurrent_dropout': [0.4],\r\n     'kernel_initializer': ['uniform','normal'],\r\n     'optimizer': ['Adam'],\r\n     #'optimizer': ['Nadam', 'Adam', 'sgd'],\r\n     #binary_crossentropy is for classification\r\n     #'losses': ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error'],\r\n     'losses': ['mean_squared_error', 'mean_absolute_error'],\r\n     #relu is enough\r\n     #'activation':['relu', 'elu'],\r\n     #'middle_activation':['tanh', 'sigmoid', 'relu'],\r\n     #'last_activation': ['softmax', 'sigmoid', 'relu']}\r\n     'activation':['relu'],\r\n     'middle_activation':['relu'],\r\n     'last_activation': ['relu']}\r\n- [ ] My support question includes a `Scan()` command\r\nscan_object = ta.Scan(x=trainX, y=trainY,\r\n                      x_val=testX, y_val=testY,\r\n                      model=create_model, \r\n                      params=p, \r\n                      dataset_name='finance',\r\n                      experiment_no='1',\r\n                      #print_params=True,\r\n                      grid_downsample=0.1)\r\n```\r\n- [ ] How I prepare data for LSTM\r\n```\r\nTIME_STEPS = 10;\r\n\r\ndef build_timeseries(mat, y_col_index):\r\n    \"\"\"\r\n    Converts ndarray into timeseries format and supervised data format. Takes first TIME_STEPS\r\n    number of rows as input and sets the TIME_STEPS+1th data as corresponding output and so on.\r\n    :param mat: ndarray which holds the dataset\r\n    :param y_col_index: index of column which acts as output (here close prices)\r\n    :return: returns two ndarrays-- input and output in format suitable to feed\r\n    to LSTM.\r\n    \"\"\"\r\n    # total number of time-series samples would be len(mat) - TIME_STEPS\r\n    dim_0 = mat.shape[0] - TIME_STEPS\r\n    dim_1 = mat.shape[1]\r\n    x = np.zeros((dim_0, TIME_STEPS, dim_1))\r\n    y = np.zeros((dim_0,))\r\n    print(\"dim_0\",dim_0)\r\n    for i in tqdm_notebook(range(dim_0)):\r\n        x[i] = mat[i:TIME_STEPS+i]\r\n        y[i] = mat[TIME_STEPS+i, y_col_index]\r\n    print(\"length of time-series i/o\",x.shape,y.shape)\r\n    return x, y\r\n```\r\n\r\nround_epochs | val_loss | val_acc | loss | acc | first_neuron...\r\n-- | -- | -- | -- | -- | --\r\n30 | 0.003848529 | 0.000337838 | 0.001812422 | 0.000145985 | 4...\r\n20 | 8.42E-05 | 0.000337838 | 2.08E-05 | 0.000145985 | 4...\r\n20 | 0.072720715 | 0.000337838 | 0.032609288 | 0.000145985 | 4...\r\n20 | 0.569160606 | 0 | 0.189147563 | 0.000145985 | 4...\r\n20 | 0.00072527 | 0.000337838 | 1.73E-05 | 0.000145985 | 4...\r\n30 | 0.431146202 | 0 | 0.134227209 | 0.000145985 | 4...\r\n20 | 0.569160608 | 0 | 0.189147563 | 0.000145985 | 4...\r\n10 | 0.099647979 | 0.000337838 | 0.025362976 | 0.000145985 | 4...\r\n20 | 0.098018228 | 0.000337838 | 0.019166352 | 0.000145985 | 4...\r\n\r\nThank yo so much.\r\n\r\n\r\n\r\n\r\n\r\n","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/386/timeline","performed_via_github_app":null,"state_reason":"completed"}