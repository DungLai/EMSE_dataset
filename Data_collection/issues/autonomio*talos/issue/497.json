{"url":"https://api.github.com/repos/autonomio/talos/issues/497","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/497/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/497/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/497/events","html_url":"https://github.com/autonomio/talos/issues/497","id":655301062,"node_id":"MDU6SXNzdWU2NTUzMDEwNjI=","number":497,"title":"Getting totally different MSE from actual run and talos hyperparameter optimization","user":{"login":"zonexo","id":24207999,"node_id":"MDQ6VXNlcjI0MjA3OTk5","avatar_url":"https://avatars.githubusercontent.com/u/24207999?v=4","gravatar_id":"","url":"https://api.github.com/users/zonexo","html_url":"https://github.com/zonexo","followers_url":"https://api.github.com/users/zonexo/followers","following_url":"https://api.github.com/users/zonexo/following{/other_user}","gists_url":"https://api.github.com/users/zonexo/gists{/gist_id}","starred_url":"https://api.github.com/users/zonexo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zonexo/subscriptions","organizations_url":"https://api.github.com/users/zonexo/orgs","repos_url":"https://api.github.com/users/zonexo/repos","events_url":"https://api.github.com/users/zonexo/events{/privacy}","received_events_url":"https://api.github.com/users/zonexo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-12T00:02:23Z","updated_at":"2020-07-17T07:16:53Z","closed_at":"2020-07-17T07:16:53Z","author_association":"NONE","active_lock_reason":null,"body":"I'm getting totally different MSE from actual run and talos 1.0 hyperparameter optimization. I'm using tensorflow 2.1.0\r\n\r\nInitially I used talos to get the best hyperparameters. From the csv, I got MSE ~ 1e-4 which is good, as shown:\r\n\r\nloss mean_squared_error val_loss val_mean_squared_error neurons \r\n\r\n0.000106636 0.000106636 0.001984425 0.001984425 400\r\n\r\nactivation batch_size dropout epochs hidden_layers kernel_initializer lr\r\n\r\nLeakyReLU 50 0 400 16 he_uniform 0.01\r\n\r\noptimizer \r\n\r\n<class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>\r\n\r\nI then use this parameters in my orginal code w/o talos. But the ans I got was NAN. Why is this so? How do I debug?\r\n\r\nPart of my code is as follows:\r\n\r\n```\r\n...\r\ndef talos_model(x_train, y_train, x_val, y_val, params):\r\n    #Start defining the input tensor:\r\n    input_data = layers.Input(shape=(airfoil_parameters_no))\r\n    \r\n    #create the layers and pass them the input tensor to get the output tensor:\r\n       \r\n    hiddenOut = Dense(params['neurons'],\r\n                      kernel_initializer=params['kernel_initializer'])(input_data)\r\n    \r\n    if params['activation'] == 'LeakyReLU':\r\n         hiddenOut = LeakyReLU(alpha = 0.3)(input_data)\r\n        \r\n    else:\r\n         hiddenOut = Activation(params['activation'])(input_data)\r\n        \r\n    for i in range(params['hidden_layers']):\r\n        print (\"adding layer\", i+1)\r\n        \r\n        hiddenOut = Dense(params['neurons'],\r\n                          kernel_initializer=params['kernel_initializer'])(hiddenOut)\r\n        \r\n        if params['activation'] == 'LeakyReLU':\r\n             hiddenOut = LeakyReLU(alpha = 0.3)(hiddenOut)\r\n        else:\r\n             hiddenOut = Activation(params['activation'])(hiddenOut)\r\n\r\n    c_end_out = Dense(1, activation='linear', name='c_end')(hiddenOut)\r\n\r\n    #define the model's start and end points\r\n    model = Model(input_data,outputs = [c_end_out])\r\n        \r\n    # Compile model\r\n    model.compile(loss='mean_squared_error',\r\n                  #optimizer=params['optimizer'],\r\n                  optimizer=params['optimizer'](lr=lr_normalizer(params['lr'],params['optimizer'])),\r\n                  metrics=['mean_squared_error'])\r\n    \r\n    # Fit the model\r\n    history = model.fit(input_var_train, output_var_train, \\\r\n                               validation_data=(input_var_test,output_var_test), \\\r\n                               batch_size=params['batch_size'],\r\n                               epochs=params['epochs'])\r\n        \r\n    return history, model\r\n...\r\n# run the experiment\r\nt = talos.Scan(x = input_var_train,\r\n               y = output_var_train,\r\n               x_val = input_var_test,\r\n               y_val = output_var_test,\r\n               model = talos_model,\r\n               params=p,\r\n               #fraction_limit=0.1,\r\n               #round_limit=round_limit,\r\n               time_limit=time_to_stop,\r\n               experiment_name='c_end',\r\n               #random_method=quantum,\r\n               seed=seed_value,\r\n               minimize_loss=True)\r\n\r\ntalos_details = t.details\r\n\r\nanalyze_object = talos.Analyze(t)\r\n\r\n#talos_best_model = t.best_model(metric='mean_squared_error', asc=True)\r\n\r\ntalos_rounds = analyze_object.rounds()\r\n\r\n# get the highest result for any metric\r\ntalos_high = analyze_object.high('mean_squared_error')\r\n\r\n# get the round with the best result\r\ntalos_rounds2high = analyze_object.rounds2high('mean_squared_error')\r\n\r\n# get the best paramaters\r\ntalos_best_params = analyze_object.best_params('mean_squared_error', ['acc', 'loss', 'val_loss'])\r\n#talos_best_params = analyze_object.best_params('loss', ['loss'])\r\n\r\n# get correlation for hyperparameters against a metric\r\ntalos_correlate = analyze_object.correlate('mean_squared_error', ['acc', 'loss', 'val_loss'])\r\n\r\n```\r\n\r\nThanks.","closed_by":{"login":"zonexo","id":24207999,"node_id":"MDQ6VXNlcjI0MjA3OTk5","avatar_url":"https://avatars.githubusercontent.com/u/24207999?v=4","gravatar_id":"","url":"https://api.github.com/users/zonexo","html_url":"https://github.com/zonexo","followers_url":"https://api.github.com/users/zonexo/followers","following_url":"https://api.github.com/users/zonexo/following{/other_user}","gists_url":"https://api.github.com/users/zonexo/gists{/gist_id}","starred_url":"https://api.github.com/users/zonexo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zonexo/subscriptions","organizations_url":"https://api.github.com/users/zonexo/orgs","repos_url":"https://api.github.com/users/zonexo/repos","events_url":"https://api.github.com/users/zonexo/events{/privacy}","received_events_url":"https://api.github.com/users/zonexo/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/497/timeline","performed_via_github_app":null,"state_reason":"completed"}