{"url":"https://api.github.com/repos/autonomio/talos/issues/429","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/429/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/429/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/429/events","html_url":"https://github.com/autonomio/talos/issues/429","id":515325514,"node_id":"MDU6SXNzdWU1MTUzMjU1MTQ=","number":429,"title":"ValueError: setting an array element with a sequence","user":{"login":"DavideRutigliano","id":37795483,"node_id":"MDQ6VXNlcjM3Nzk1NDgz","avatar_url":"https://avatars.githubusercontent.com/u/37795483?v=4","gravatar_id":"","url":"https://api.github.com/users/DavideRutigliano","html_url":"https://github.com/DavideRutigliano","followers_url":"https://api.github.com/users/DavideRutigliano/followers","following_url":"https://api.github.com/users/DavideRutigliano/following{/other_user}","gists_url":"https://api.github.com/users/DavideRutigliano/gists{/gist_id}","starred_url":"https://api.github.com/users/DavideRutigliano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DavideRutigliano/subscriptions","organizations_url":"https://api.github.com/users/DavideRutigliano/orgs","repos_url":"https://api.github.com/users/DavideRutigliano/repos","events_url":"https://api.github.com/users/DavideRutigliano/events{/privacy}","received_events_url":"https://api.github.com/users/DavideRutigliano/received_events","type":"User","site_admin":false},"labels":[{"id":1040763409,"node_id":"MDU6TGFiZWwxMDQwNzYzNDA5","url":"https://api.github.com/repos/autonomio/talos/labels/user%20support","name":"user support","color":"59db8b","default":false,"description":"nothing is wrong with Talos"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-10-31T10:35:57Z","updated_at":"2020-01-25T20:09:11Z","closed_at":"2020-01-25T20:09:11Z","author_association":"NONE","active_lock_reason":null,"body":"Hi All,\r\n\r\nI'm using talos for hyperparameter optimization and everything was working fine. Now i get an error (probably regarding the model or the history). Here the full output:\r\n\r\n`  0%|          | 0/16 [00:00<?, ?it/s]{'weights': [2.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'dropout_ratio': 0.25, 'batch_size': 5, 'optimizer': 'adam', 'init_p': 0.01, 'ratio': 1, 'dense_layer_size': 32, 'input_shape': (3, 224, 224), 'lr': 0.0001, 'epochs': 3, 'base_model': 'resnet50', 'gamma': 0.5, 'alpha': 3}\r\nEpoch 1/3\r\nEpoch 1/3\r\n\r\nEpoch 00001: val_f1_score improved from -inf to 0.68685, saving model to model_2_weights.h5\r\n1/1 [==============================] - 4s 4s/step - loss: 0.0427 - log_loss: 0.0088 - accuracy: 0.2000 - f1_score: 0.9582 - val_loss: 1.4823 - val_log_loss: 0.3988 - val_accuracy: 0.0000e+00 - val_f1_score: 0.6869\r\nEpoch 2/3\r\n\r\nEpoch 00002: val_f1_score improved from 0.68685 to 0.68702, saving model to model_2_weights.h5\r\n1/1 [==============================] - 2s 2s/step - loss: 0.0386 - log_loss: 0.0079 - accuracy: 0.0000e+00 - f1_score: 0.9621 - val_loss: 1.4839 - val_log_loss: 0.3993 - val_accuracy: 0.0000e+00 - val_f1_score: 0.6870\r\nEpoch 3/3\r\n\r\nEpoch 00003: val_f1_score improved from 0.68702 to 0.68718, saving model to model_2_weights.h5\r\n1/1 [==============================] - 2s 2s/step - loss: 0.0424 - log_loss: 0.0087 - accuracy: 0.0000e+00 - f1_score: 0.9586 - val_loss: 1.4838 - val_log_loss: 0.3993 - val_accuracy: 0.0000e+00 - val_f1_score: 0.6872\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-11-18a46baf50fe> in <module>\r\n     34                   reduction_metric='val_f1_score',\r\n     35                   experiment_name=\"rsna\",\r\n---> 36                   print_params=True)\r\n\r\n~/.local/lib/python3.5/site-packages/talos/scan/Scan.py in __init__(self, x, y, params, model, experiment_name, x_val, y_val, val_split, random_method, seed, performance_target, fraction_limit, round_limit, time_limit, boolean_limit, reduction_method, reduction_interval, reduction_window, reduction_threshold, reduction_metric, minimize_loss, disable_progress_bar, print_params, clear_session, save_weights)\r\n    194         # start runtime\r\n    195         from .scan_run import scan_run\r\n--> 196         scan_run(self)\r\n\r\n~/.local/lib/python3.5/site-packages/talos/scan/scan_run.py in scan_run(self)\r\n     24         # otherwise proceed with next permutation\r\n     25         from .scan_round import scan_round\r\n---> 26         self = scan_round(self)\r\n     27         self.pbar.update(1)\r\n     28 \r\n\r\n~/.local/lib/python3.5/site-packages/talos/scan/scan_round.py in scan_round(self)\r\n     22     # handle logging of results\r\n     23     from ..logging.logging_run import logging_run\r\n---> 24     self = logging_run(self, round_start, start, self.model_history)\r\n     25 \r\n     26     # apply reductions\r\n\r\n~/.local/lib/python3.5/site-packages/talos/logging/logging_run.py in logging_run(self, round_start, start, model_history)\r\n     40 \r\n     41     from .results import save_result\r\n---> 42     save_result(self)\r\n     43 \r\n     44     # return the Scan() self\r\n\r\n~/.local/lib/python3.5/site-packages/talos/logging/results.py in save_result(self)\r\n     34                self.result,\r\n     35                fmt='%s',\r\n---> 36                delimiter=',')\r\n     37 \r\n     38 \r\n\r\n1 frames\r\n/usr/local/lib/python3.5/site-packages/numpy/lib/npyio.py in savetxt(fname, X, fmt, delimiter, newline, header, footer, comments, encoding)\r\n   1328 \r\n   1329     try:\r\n-> 1330         X = np.asarray(X)\r\n   1331 \r\n   1332         # Handle 1-dimensional arrays\r\n\r\n/usr/local/lib/python3.5/site-packages/numpy/core/numeric.py in asarray(a, dtype, order)\r\n    499 \r\n    500     \"\"\"\r\n--> 501     return array(a, dtype, copy=False, order=order)\r\n    502 \r\n    503 \r\n\r\n**ValueError: setting an array element with a sequence**`\r\n\r\nHere i don't understand which is the \"sequence\" that should be an array. Here i post also the code for building and training the model:\r\n\r\n`def build_model(X,\r\n                y,\r\n                X_val,\r\n                y_val,\r\n                params):\r\n\r\n    global train_dir\r\n    global classes\r\n    \r\n    input_shape = params['input_shape']\r\n    weights = params['weights']\r\n    num_classes = len(classes)\r\n    \r\n    train_data = pd.DataFrame(y,\r\n                              index=X,\r\n                              columns=classes)\r\n    \r\n    validation_data = pd.DataFrame(y_val,\r\n                                   index=X_val,\r\n                                   columns=classes)\r\n\r\n    ratio = params['ratio']\r\n    epochs = params['epochs']\r\n    batch_size = params['batch_size']\r\n    lr = params['lr']\r\n    dense_layer_size = params['dense_layer_size']\r\n    dropout_ratio = params['dropout_ratio']\r\n    alpha = params['alpha']\r\n    gamma = params['gamma']\r\n    init_p = params['init_p']\r\n\r\n    if params['base_model'] == 'resnet50':\r\n        base_model = ResNet50(weights='imagenet',\r\n                              include_top=False,\r\n                              input_shape=input_shape)\r\n        \r\n    elif params['base_model'] == 'efficientnet-b0':\r\n        base_model = EfficientNetB0(weights='imagenet',\r\n                                    include_top=False,\r\n                                    input_shape=input_shape)\r\n    else:\r\n        return None\r\n      \r\n    for layer in base_model.layers:\r\n        layer.trainable = False\r\n\r\n        if layer.name.startswith('bn'):\r\n          layer.call(layer.input, training=False)\r\n        \r\n    input = Input(shape=input_shape)\r\n\r\n    out = base_model(input)\r\n    \r\n    out = GlobalAveragePooling2D()(out)\r\n    \r\n    out = Dense(dense_layer_size)(out)\r\n    out = Activation(\"relu\")(out)\r\n    out = Dropout(dropout_ratio)(out)\r\n    \r\n    out = Dense(num_classes,\r\n               use_bias=True,\r\n               bias_initializer=bias_init(init_p))(out)\r\n    out = Activation(\"sigmoid\")(out)\r\n\r\n    model = Model(inputs=input, outputs=out)\r\n\r\n    if params['optimizer'] == 'adam':\r\n        optimizer = Adam(lr=lr)\r\n        \r\n    elif params['optimizer'] == 'sgd':\r\n        optimizer = SGD(lr=lr)\r\n        \r\n    else:\r\n        return None\r\n\r\n    optimizer = tf.train.experimental.\\\r\n              enable_mixed_precision_graph_rewrite(optimizer)\r\n   \r\n    model.compile(optimizer=optimizer,\r\n                  loss=weighted_focal_loss(weights=weights,\r\n                                           alpha=alpha,\r\n                                           gamma=gamma),\r\n                  metrics=[weighted_log_loss(weights=weights),\r\n                           'accuracy',\r\n                           weighted_f1_score(weights=weights)])\r\n    \r\n    #model.summary()\r\n\r\n    train_generator = DataGenerator(train_dir,\r\n                                    ids=X,\r\n                                    labels=y,\r\n                                    #train_data.copy(),\r\n                                    num_classes=num_classes,\r\n                                    batch_size=batch_size,\r\n                                    input_shape=input_shape,\r\n                                    resample=True, ratio=ratio)\r\n\r\n    train_steps = train_generator.n\r\n\r\n    validation_generator = DataGenerator(train_dir,\r\n                                         ids=X_val,\r\n                                         labels=y_val,\r\n                                         #validation_data.copy(),\r\n                                         num_classes=num_classes,\r\n                                         batch_size=batch_size,\r\n                                         input_shape=input_shape,\r\n                                         resample=True, ratio=ratio)\r\n\r\n    validation_steps = validation_generator.n\r\n\r\n    #calculate_scores = CalculateScores(validation_generator, weights=weights)\r\n\r\n    early_stop = EarlyStopping(monitor='val_f1_score',\r\n                               mode='max', \r\n                               patience=2,\r\n                               verbose=1)\r\n\r\n    checkpoint = ModelCheckpoint(model.name + '_weights.h5',\r\n                                 monitor='val_f1_score',\r\n                                 mode='max',\r\n                                 save_best_only=True,\r\n                                 verbose=1)\r\n\r\n    reduce_lr = ReduceLROnPlateau(monitor='val_f1_score',\r\n                                  mode=\"max\",\r\n                                  min_lr=1e-15,\r\n                                  factor=0.5,\r\n                                  patience=1,\r\n                                  verbose=1)\r\n\r\n    terminate = TerminateOnNaN()\r\n\r\n    callbacks = [terminate,\r\n                 early_stop,\r\n                 checkpoint,\r\n                 reduce_lr]#,\r\n                 #calculate_scores]\r\n\r\n    score = model.fit_generator(train_generator,\r\n                                steps_per_epoch=train_steps,\r\n                                epochs=epochs,\r\n                                validation_data=validation_generator,\r\n                                validation_steps=validation_steps,\r\n                                callbacks=callbacks,\r\n                                use_multiprocessing=True,\r\n                                max_queue_size=90,\r\n                                workers=mp.cpu_count())\r\n    \r\n    return score, model`\r\n\r\nAnd this is the code to use talos:\r\n\r\n`params = {\r\n    'base_model' : ['resnet50', 'efficientnet-b0'],\r\n    'lr' : [1e-4, 1e-6],\r\n    'optimizer' : ['adam', 'sgd'],\r\n    \r\n    'gamma' : [.5, 2],\r\n    \r\n    'epochs': [3],\r\n    'batch_size' : [5],\r\n    'input_shape' : [(3, 224, 224)],\r\n    \r\n    'ratio' : [1],\r\n    \r\n    'dense_layer_size' : [32],\r\n    'dropout_ratio': [.25],\r\n    \r\n    'alpha' : [3],\r\n    'init_p' : [0.01],\r\n    'weights' : [[2., 1., 1., 1., 1., 1.]],\r\n}\r\n\r\nX = train_data.index.tolist()\r\ny = train_data.values.tolist()\r\n\r\nX_val = validation_data.index.tolist()\r\ny_val = validation_data.values.tolist()\r\n\r\nscan = talos.Scan(x=X[:5],\r\n                  y=y[:5],\r\n                  x_val=X_val[:5],\r\n                  y_val=y_val[:5],\r\n                  params=params,\r\n                  model=build_model,\r\n                  reduction_metric='val_f1_score',\r\n                  experiment_name=\"rsna\",\r\n                  print_params=True)`\r\n\r\nI checked talos source code that uses \"score\" and \"model\" variables and mine looks fine (i.e. as they should), thus i don't know even which is causing the problem.\r\n\r\nDoes anyone have idea of what's going on and how to fix it?\r\n\r\nThanks in advance.\r\n","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/429/timeline","performed_via_github_app":null,"state_reason":"completed"}