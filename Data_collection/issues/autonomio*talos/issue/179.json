{"url":"https://api.github.com/repos/autonomio/talos/issues/179","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/179/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/179/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/179/events","html_url":"https://github.com/autonomio/talos/issues/179","id":401127455,"node_id":"MDU6SXNzdWU0MDExMjc0NTU=","number":179,"title":"ValueError in the middle of an experiment with custom metric","user":{"login":"aclyde11","id":17033421,"node_id":"MDQ6VXNlcjE3MDMzNDIx","avatar_url":"https://avatars.githubusercontent.com/u/17033421?v=4","gravatar_id":"","url":"https://api.github.com/users/aclyde11","html_url":"https://github.com/aclyde11","followers_url":"https://api.github.com/users/aclyde11/followers","following_url":"https://api.github.com/users/aclyde11/following{/other_user}","gists_url":"https://api.github.com/users/aclyde11/gists{/gist_id}","starred_url":"https://api.github.com/users/aclyde11/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aclyde11/subscriptions","organizations_url":"https://api.github.com/users/aclyde11/orgs","repos_url":"https://api.github.com/users/aclyde11/repos","events_url":"https://api.github.com/users/aclyde11/events{/privacy}","received_events_url":"https://api.github.com/users/aclyde11/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-01-20T18:52:58Z","updated_at":"2019-09-16T16:40:39Z","closed_at":"2019-09-16T16:40:38Z","author_association":"NONE","active_lock_reason":null,"body":"\r\nAfter completing 16 runs of ~500, I get this strange value error. I have defined an r2 metric function which works with any of my Keras models. I cannot figure out this strange error. If I checked the log csv, all prior runs have been logged correct and have seemingly correct numbers.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"RNAseqToSnp.py\", line 342, in <module>\r\n    snp_snp_gridsearch(args)\r\n  File \"/raid/aclyde11/Benchmarks/Pilot1/RNAseqToSnp/RnaToSnpGridSearch.py\", line 181, in snp_snp_gridsearch\r\n    experiment_no='1', debug=True, print_params=True)\r\n  File \"/home/aclyde11/scratch-area/Benchmarks/venv/local/lib/python2.7/site-packages/talos/scan/Scan.py\", line 163, in __init__\r\n    self._null = self.runtime()\r\n  File \"/home/aclyde11/scratch-area/Benchmarks/venv/local/lib/python2.7/site-packages/talos/scan/Scan.py\", line 168, in runtime\r\n    self = scan_run(self)\r\n  File \"/home/aclyde11/scratch-area/Benchmarks/venv/local/lib/python2.7/site-packages/talos/scan/scan_run.py\", line 20, in scan_run\r\n    self = scan_round(self)\r\n  File \"/home/aclyde11/scratch-area/Benchmarks/venv/local/lib/python2.7/site-packages/talos/scan/scan_round.py\", line 64, in scan_round\r\n    self = reduce_run(self)\r\n  File \"/home/aclyde11/scratch-area/Benchmarks/venv/local/lib/python2.7/site-packages/talos/reducers/reduce_run.py\", line 16, in reduce_run\r\n    self = reduce_prepare(self)\r\n  File \"/home/aclyde11/scratch-area/Benchmarks/venv/local/lib/python2.7/site-packages/talos/reducers/reduce_prepare.py\", line 22, in reduce_prepare\r\n    self.param_table.insert(0, self.reduction_metric, self.data[self.reduction_metric])\r\n  File \"/home/aclyde11/scratch-area/Benchmarks/venv/local/lib/python2.7/site-packages/pandas/core/frame.py\", line 3222, in insert\r\n    allow_duplicates=allow_duplicates)\r\n  File \"/home/aclyde11/scratch-area/Benchmarks/venv/local/lib/python2.7/site-packages/pandas/core/internals.py\", line 4338, in insert\r\n    raise ValueError('cannot insert {}, already exists'.format(item))\r\nValueError: cannot insert val_r2, already exists\r\n\r\n```\r\n\r\n\r\n```\r\ndef snp_snp_gridsearch_model(x_train, y_train, x_val, y_val, params):\r\n    x_input = Input(shape=(x_train.shape[1],))\r\n    x = Dense(params['first_neuron'], activation=params['activation'], kernel_initializer=params['kernel_initializer'])(\r\n        x_input)\r\n    layer = Dropout(params['dropout'])(x)\r\n    encoded = Dense(params['encoded_dim'], activation=params['activation'],\r\n                    kernel_initializer=params['kernel_initializer'])(x)\r\n\r\n    x = Dense(params['first_neuron'], activation=params['activation'], kernel_initializer=params['kernel_initializer'])(\r\n        encoded)\r\n    decoded = Dense(x_train.shape[1], activation=params['last_activation'],\r\n                    kernel_initializer=params['kernel_initializer'])(x)\r\n\r\n    model_auto = Model(inputs=x_input, outputs=decoded)\r\n    print(gpu_nums)\r\n    if gpu_nums > 1:\r\n        model_auto = multi_gpu_model(model_auto, gpus=gpu_nums)\r\n    model_auto.compile(loss=params['auto_losses'], optimizer=params['optimizer'](lr=params['lr']), metrics=['acc', r2])\r\n\r\n    history = model_auto.fit(x_train, y_train, validation_data=[x_val, y_val], epochs=params['epochs'],\r\n                             batch_size=params['batch_size'], verbose=0)\r\n\r\n    return history, model_auto\r\n\r\n\r\ndef snp_snp_gridsearch_params():\r\n    params = {'first_neuron': (1500, 2000, 2),\r\n              'batch_size': (100, 400, 3),\r\n              'epochs': (10, 50, 3),\r\n              'dropout': (0, 0.3, 3),\r\n              'kernel_initializer': ['uniform', 'normal'],\r\n              'encoded_dim': [500, 1000, 1500],\r\n              'auto_losses': ['mse', 'kullback_leibler_divergence', 'categorical_crossentropy'],\r\n              'optimizer': [keras.optimizers.adam, keras.optimizers.SGD],\r\n              'lr': [0.001, 0.01, 0.1],\r\n              'activation': ['sigmoid', 'relu'],\r\n              'last_activation': ['sigmoid', 'relu']}\r\n    return params\r\n\r\n\r\ndef snp_snp_gridsearch(args):\r\n    global gpu_nums\r\n    gpu_nums = args.num_gpus\r\n    loader = DataLoader(args.data_path, args)\r\n    y, _ = loader.load_aligned_snps_rnaseq(use_reduced=True, align_by=args.reduce_snps)\r\n\r\n    print(y.tail())\r\n    print(y.describe())\r\n    y = np.array(y, dtype=np.float32)\r\n    if args.y_scale == 'max1':\r\n        y = np.minimum(y, np.ones(y.shape))\r\n    elif args.y_scale == 'scale':\r\n        print(\"roubust scaling\")\r\n        scaler = preprocessing.MinMaxScaler()\r\n        shape = y.shape\r\n        y = scaler.fit_transform(y)\r\n    print(\"Procressed y:\")\r\n\r\n    x = np.array(y, dtype=np.float32)\r\n    y = np.array(y, dtype=np.float32)\r\n\r\n    x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=0.2)\r\n\r\n    t = ta.Scan(x_train, y_train, x_val=x_val, y_val=y_val,\r\n                params=snp_snp_gridsearch_params(),\r\n                model=snp_snp_gridsearch_model,\r\n                grid_downsample=0.01,\r\n                reduction_metric='val_r2',\r\n                reduction_method='correlation',\r\n                dataset_name=\"SNP_Autoencoder\",\r\n                experiment_no='1', debug=True, print_params=True)\r\n    r = ta.Reporting(\"snp_autoencoder.csv\")\r\n```","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/179/timeline","performed_via_github_app":null,"state_reason":"completed"}