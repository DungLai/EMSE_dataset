{"url":"https://api.github.com/repos/autonomio/talos/issues/144","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/144/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/144/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/144/events","html_url":"https://github.com/autonomio/talos/issues/144","id":384262176,"node_id":"MDU6SXNzdWUzODQyNjIxNzY=","number":144,"title":"Few (minor) potential improvements","user":{"login":"FlorianBury","id":30235130,"node_id":"MDQ6VXNlcjMwMjM1MTMw","avatar_url":"https://avatars.githubusercontent.com/u/30235130?v=4","gravatar_id":"","url":"https://api.github.com/users/FlorianBury","html_url":"https://github.com/FlorianBury","followers_url":"https://api.github.com/users/FlorianBury/followers","following_url":"https://api.github.com/users/FlorianBury/following{/other_user}","gists_url":"https://api.github.com/users/FlorianBury/gists{/gist_id}","starred_url":"https://api.github.com/users/FlorianBury/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FlorianBury/subscriptions","organizations_url":"https://api.github.com/users/FlorianBury/orgs","repos_url":"https://api.github.com/users/FlorianBury/repos","events_url":"https://api.github.com/users/FlorianBury/events{/privacy}","received_events_url":"https://api.github.com/users/FlorianBury/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"assignees":[{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2018-11-26T10:20:45Z","updated_at":"2018-12-20T10:00:45Z","closed_at":"2018-12-20T10:00:13Z","author_association":"NONE","active_lock_reason":null,"body":"Hi all, \r\n\r\nI started using Talos several weeks ago and really appreciate how easy and helpful it is. However, I came across few ideas that might be interesting (and easy) to implement\r\n\r\n1) As far as I know, the best model would be the one that generalizes best. Meaning the one that has the lowest error from the Evaluate() class, rather than the one with the lowest val_loss. I noticed that the Deploy() package can only save the one from the second case, so i added a model id as input to rather use the best model from Evaluate() if available (if not, take the one from best_model). Now I'm not an expert on machine learning and I'd gladly follow your advice on that.\r\n\r\n2) I had a problem using the hidden_layers function from model/layer.py with the functional API of keras at first because it was not intended this way. A simple fix that I did was to do something like this : \r\n     \r\n\r\n```\r\nfor i in range(self.hidden_layers):                                                                                                                                                                 \r\n            layer = Dense(self.layer_neurons[i],                                                                                                                                                            \r\n                            activation=self.activation,                                                                                                                                                     \r\n                            use_bias=self.use_bias,                                                                                                                                                         \r\n                            kernel_initializer=self.kernel_initializer,                                                                                                                                     \r\n                            kernel_regularizer=self.kernel_regularizer,                                                                                                                                     \r\n                            bias_initializer=self.bias_initializer,                                                                                                                                         \r\n                            bias_regularizer=self.bias_regularizer,                                                                                                                                         \r\n                            activity_regularizer=self.activity_regularizer,                                                                                                                                 \r\n                            kernel_constraint=self.kernel_constraint,                                                                                                                                       \r\n                            bias_constraint=self.bias_constraint)(layer)                                                                                                                                    \r\n                                                                                                                                                                                                            \r\nlayer = Dropout(self.dropout)(layer)                                                                                                                                                            \r\n                                                                                                                                                                                                            return layer  \r\n```\r\n\r\nSince all the parameters are the same between the sequential and functional API models, I ended up with a class for hidden_layers and two functions for both cases. I don't know if this actually something that came up in a later release but it's an easy fix.\r\n\r\n3) Related to #97. Maybe it would be easier to have a recoverable mode that compares the parameters grid from the parameters that were already tested in the .csv file. This feature would be nice especially when running on a cluster and the job exceeds the running time. It might also be used to launch several instances of the same experiment on different nodes, by checking whether the current configuration has already been computed or not (probably not optimal though, given the reduction techniques in the scan).\r\n\r\n4) Maybe some verbosity about the reduction techniques in the scan (few prints saying that x parameter configurations have been removed). I might not be using it correctly but I never know if it has actually been used or not ...\r\n\r\nI hope I am not wasting your time on this, but Talos is something I really look forward to use extensively in the future and I would be happy to bring in some improvements.","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/144/timeline","performed_via_github_app":null,"state_reason":"completed"}