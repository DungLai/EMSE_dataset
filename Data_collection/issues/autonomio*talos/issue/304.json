{"url":"https://api.github.com/repos/autonomio/talos/issues/304","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/304/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/304/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/304/events","html_url":"https://github.com/autonomio/talos/issues/304","id":443439851,"node_id":"MDU6SXNzdWU0NDM0Mzk4NTE=","number":304,"title":"TypeError: unsupported operand type(s) for +: 'EarlyStopping' and 'list'","user":{"login":"kenfus","id":47979198,"node_id":"MDQ6VXNlcjQ3OTc5MTk4","avatar_url":"https://avatars.githubusercontent.com/u/47979198?v=4","gravatar_id":"","url":"https://api.github.com/users/kenfus","html_url":"https://github.com/kenfus","followers_url":"https://api.github.com/users/kenfus/followers","following_url":"https://api.github.com/users/kenfus/following{/other_user}","gists_url":"https://api.github.com/users/kenfus/gists{/gist_id}","starred_url":"https://api.github.com/users/kenfus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenfus/subscriptions","organizations_url":"https://api.github.com/users/kenfus/orgs","repos_url":"https://api.github.com/users/kenfus/repos","events_url":"https://api.github.com/users/kenfus/events{/privacy}","received_events_url":"https://api.github.com/users/kenfus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-05-13T14:44:50Z","updated_at":"2020-07-10T16:32:22Z","closed_at":"2019-05-16T05:32:32Z","author_association":"NONE","active_lock_reason":null,"body":"Thanks so much for coming here to raise an issue. Please take a moment to 'check' the below boxes:\r\n\r\n- [x] I'm up-to-date with the latest release:\r\n    \r\n      pip install -U talos\r\n\r\n- [x] I've confirmed that my Keras model works outside of Talos.\r\n\r\nIf you still have an error, please submit **complete trace** and a code with: \r\n\r\n- output of shape for x and y e.g. (212,12)\r\n- Talos params dictionary\r\n- The Keras model wired for Talos\r\n- Description of extra variables in the model\r\n\r\nYou can provide the code in pastebin / gist or any other format you like. \r\nThis is the whole code. It works when I remove the early_stopping but I'd like to use it!\r\n\r\nThanks so much.\r\n-------------------------------------------------------------------------\r\n\r\n# https://towardsdatascience.com/hyperparameter-optimization-with-keras-b82e6364ca53\r\n# Function to create model, required for KerasClassifier\r\ndef get_model(x_train, y_train, x_val, y_val, params):\r\n# create model\r\n\r\n    #parameters defined\r\n    lr = params['lr']\r\n    epochs= params['epochs']\r\n    neurons = params['neurons']\r\n    optimizer = params['optimizer']\r\n    loss= params['loss']\r\n    decay = params['decay']\r\n    momentum=params['momentum']\r\n    batch_size = params['batch_size']\r\n    dropout_rate = params['dropout']\r\n    \r\n    input_shape = X_train.shape[1]\r\n    \r\n    \r\n    model = Sequential()\r\n    model.add(Dense(neurons, input_shape = (input_shape,))),\r\n    model.add(LeakyReLU(alpha=0.01)),\r\n    model.add(BatchNormalization()),\r\n    \r\n    model.add(Dropout(dropout_rate, seed=42)),\r\n    model.add(Dense(neurons)),\r\n    model.add(LeakyReLU(alpha=0.01)),\r\n    model.add(BatchNormalization()),\r\n    \r\n    model.add(Dropout(dropout_rate, seed=42)),\r\n    model.add(Dense(neurons)),\r\n    model.add(LeakyReLU(alpha=0.01)),\r\n    model.add(BatchNormalization()),\r\n    \r\n    model.add(Dropout(dropout_rate, seed=42)),\r\n    model.add(Dense(neurons)),\r\n    model.add(LeakyReLU(alpha=0.01)),\r\n    model.add(BatchNormalization()),\r\n    \r\n    model.add(Dropout(dropout_rate, seed=42)),\r\n    model.add(Dense(neurons)),\r\n    model.add(LeakyReLU(alpha=0.01)),\r\n    model.add(BatchNormalization()),\r\n    \r\n    model.add(Dropout(dropout_rate, seed=42)),\r\n    model.add(Dense(5, activation='softmax'))\r\n    # Compile model\r\n    \r\n    # https://stackoverflow.com/questions/54377668/talosreturnerror-talos-make-sure-that-input-model-returns-out-model-model-f\r\n\r\n    if optimizer==\"Adam\":\r\n            opt=keras.optimizers.Adam(lr=lr, beta_1=0.9, beta_2=0.999)\r\n    if optimizer==\"Adagrad\":\r\n            opt=keras.optimizers.Adagrad(lr=lr, epsilon=None, decay=decay)\r\n    if optimizer==\"sgd\":\r\n            opt=keras.optimizers.SGD(lr=lr, momentum=momentum, decay=decay, nesterov=False)\r\n    \r\n    model.compile(loss=loss,optimizer=opt,\r\n                 metrics=['accuracy'])\r\n    \r\n    history = model.fit(x = x_train, y= y_train, validation_data=[x_val, y_val], \r\n                        epochs=params['epochs'], batch_size = batch_size,verbose=1,callbacks=early_stopper(params['epochs']))\r\n    \r\n    return history, model\r\n\r\n\r\n\r\n\r\np = {'lr': [0.0001],\r\n      'neurons':[1200,1500],\r\n      'decay':[0],\r\n      'optimizer': [\"Adam\"],\r\n      'hidden_layers':[3],\r\n      'momentum': [0.0],\r\n      'batch_size': [128],\r\n      'loss': [\"sparse_categorical_crossentropy\"],\r\n      'epochs': [250],\r\n      'dropout': [0.2,0.3]}\r\n\r\n\r\nt = ta.Scan(x=X_train, y=y_train, params = p, model=get_model)\r\n\r\n---------------------------------------------------------------------------\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n\r\n<ipython-input-5-1bfa1775c6ec> in <module>()\r\n     77 \r\n     78 \r\n---> 79 t = ta.Scan(x=X_train, y=y_train, params = p, model=get_model)\r\n\r\n7 frames\r\n\r\n/usr/local/lib/python3.6/dist-packages/talos/scan/Scan.py in __init__(self, x, y, params, model, experiment_name, x_val, y_val, val_split, random_method, performance_target, fraction_limit, round_limit, time_limit, boolean_limit, reduction_method, reduction_interval, reduction_window, reduction_threshold, reduction_metric, minimize_loss, seed, clear_session, disable_progress_bar, print_params, debug)\r\n    170         # input parameters section ends\r\n    171 \r\n--> 172         self.runtime()\r\n    173 \r\n    174     def runtime(self):\r\n\r\n/usr/local/lib/python3.6/dist-packages/talos/scan/Scan.py in runtime(self)\r\n    175 \r\n    176         from .scan_run import scan_run\r\n--> 177         self = scan_run(self)\r\n\r\n/usr/local/lib/python3.6/dist-packages/talos/scan/scan_run.py in scan_run(self)\r\n     24         # otherwise proceed with next permutation\r\n     25         from .scan_round import scan_round\r\n---> 26         self = scan_round(self)\r\n     27         self.pbar.update(1)\r\n     28 \r\n\r\n/usr/local/lib/python3.6/dist-packages/talos/scan/scan_round.py in scan_round(self)\r\n     17     # fit the model\r\n     18     from ..model.ingest_model import ingest_model\r\n---> 19     self.model_history, self.keras_model = ingest_model(self)\r\n     20     self.round_history.append(self.model_history.history)\r\n     21 \r\n\r\n/usr/local/lib/python3.6/dist-packages/talos/model/ingest_model.py in ingest_model(self)\r\n      8                       self.x_val,\r\n      9                       self.y_val,\r\n---> 10                       self.round_params)\r\n\r\n<ipython-input-5-1bfa1775c6ec> in get_model(x_train, y_train, x_val, y_val, params)\r\n     58 \r\n     59     history = model.fit(x = x_train, y= y_train, validation_data=[x_val, y_val], \r\n---> 60                         epochs=params['epochs'], batch_size = batch_size,verbose=1,callbacks=early_stopper(params['epochs']))\r\n     61 \r\n     62     return history, model\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, **kwargs)\r\n   1037                                         initial_epoch=initial_epoch,\r\n   1038                                         steps_per_epoch=steps_per_epoch,\r\n-> 1039                                         validation_steps=validation_steps)\r\n   1040 \r\n   1041     def evaluate(self, x=None, y=None,\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/engine/training_arrays.py in fit_loop(model, f, ins, out_labels, batch_size, epochs, verbose, callbacks, val_f, val_ins, shuffle, callback_metrics, initial_epoch, steps_per_epoch, validation_steps)\r\n    104                 count_mode,\r\n    105                 stateful_metrics=model.stateful_metric_names))\r\n--> 106     _callbacks += (callbacks or []) + [model.history]\r\n    107     callbacks = cbks.CallbackList(_callbacks)\r\n    108     out_labels = out_labels or []\r\n\r\nTypeError: unsupported operand type(s) for +: 'EarlyStopping' and 'list'","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/304/timeline","performed_via_github_app":null,"state_reason":"completed"}