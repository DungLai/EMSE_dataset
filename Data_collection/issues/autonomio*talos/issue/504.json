{"url":"https://api.github.com/repos/autonomio/talos/issues/504","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/504/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/504/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/504/events","html_url":"https://github.com/autonomio/talos/issues/504","id":695140069,"node_id":"MDU6SXNzdWU2OTUxNDAwNjk=","number":504,"title":"Siamese network with multiple inputs unable to make it work","user":{"login":"prateeksaurabh","id":59728988,"node_id":"MDQ6VXNlcjU5NzI4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/59728988?v=4","gravatar_id":"","url":"https://api.github.com/users/prateeksaurabh","html_url":"https://github.com/prateeksaurabh","followers_url":"https://api.github.com/users/prateeksaurabh/followers","following_url":"https://api.github.com/users/prateeksaurabh/following{/other_user}","gists_url":"https://api.github.com/users/prateeksaurabh/gists{/gist_id}","starred_url":"https://api.github.com/users/prateeksaurabh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prateeksaurabh/subscriptions","organizations_url":"https://api.github.com/users/prateeksaurabh/orgs","repos_url":"https://api.github.com/users/prateeksaurabh/repos","events_url":"https://api.github.com/users/prateeksaurabh/events{/privacy}","received_events_url":"https://api.github.com/users/prateeksaurabh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-09-07T14:09:07Z","updated_at":"2020-10-19T02:59:35Z","closed_at":"2020-10-19T02:59:34Z","author_association":"NONE","active_lock_reason":null,"body":"First off, make sure to check your [support options](https://github.com/autonomio/talos#-how-to-get-support).\r\n\r\nThe preferred way to resolve usage related matters is through the [docs](https://autonomio.github.io/talos/#/) which are maintained up-to-date with the latest version of Talos.\r\n\r\nIf you do end up asking for support in a new issue, make sure to follow the below steps carefully.\r\n\r\n#### 1) Confirm the below\r\n\r\n- [ ] I have looked for an answer in the [Docs](https://autonomio.github.io/talos)\r\n**Yes**\r\n- [x] My Python version is 3.5 or higher\r\n**3.8.3**\r\n\r\n- [x] I have searched through the issues [Issues](https://github.com/autonomio/talos/issues) for a duplicate\r\n**Yes i found one issue #419 which might be similar but i am unable to figure out what was the exact issue**\r\n\r\n- [x] I've tested that my Keras model works as a stand-alone\r\n**Yes, my code works as stand alone that much part i hope i have tested positively**\r\n#### 2) Include the output of:\r\n\r\n`talos.__version__`\r\n**0.6.4**\r\n\r\n#### 3) Explain clearly what you are trying to achieve\r\n\r\n*A description of your specific use-case and what you hope to achieve with it*\r\n**I am trying to build a siamese network which inputs two inputs. However when performing talos scan i am getting error as missing 2 required positional arguments: 'y_val' and 'params'. To me this seems more of a python problem rather than talos problem but i am not so sure how to fix or troubleshoot it. I am new with python and machine learning**\r\n\r\n#### 4) Explain what you have already tried\r\n**My keras model without talos is working**\r\n*An outline of the steps that you have already taken so far*\r\n\r\n#### 5) Provide a code-complete reference\r\n**However when i try to use talos i am unable to make it work. My code is**\r\n```\r\n# params = {\r\n#               'filter1':[1,2,4,6,8,12,16,24],\r\n#     'kernel_size1':[2,4,6,8,12],\r\n#     'filter3' :  ['same','valid'],\r\n#     'kernel_size3' :  [2, 32,64,128],\r\n#     'decay' :[.1,0.01,.001,.0001,.00001,.000001],\r\n#     'droprate1' :[.1, .2,.3],\r\n#     'filter2':[1,2,4,6,8,12,16,24],\r\n#     'kernel_size2':[2,4,6,8,12],\r\n#     'droprate4' :  ['same','valid'],\r\n#     'strides2' :  [2, 32,64,128],\r\n#     'l2_decay_2' :[.1,0.01,.001,.0001,.00001,.000001],\r\n#     'droprate2' :[.1, .2,.3],\r\n#     'units1': [256,128,64,512,1024],\r\n#     'droprate3': [.1, .2,.3],\r\n#     'lr' :[.1,0.01,.001,.0001,.00001,.000001]   \r\n    \r\n#              }\r\n\r\n\r\np = {\r\n    'filter1':[6],\r\n    'kernel_size1':[4],\r\n    'filter3' :  [1],\r\n    'kernel_size3' :  [2],\r\n    'decay' :[.1],\r\n    'droprate1' :[.1],\r\n    'filter2':[4],\r\n    'kernel_size2':[3],\r\n    'droprate4' :  [.1],\r\n    'droprate2' :[.1],\r\n    'units1': [64],\r\n    'droprate3': [.1, .2],\r\n    'lr' :[.1]   \r\n    \r\n             }\r\n```\r\n```\r\ndef siamese(train_first_input,train_second_input,y_train,val_first_input,val_second_input,y_val,params):\r\n    W_init = tf.keras.initializers.he_normal(seed=100)\r\n    b_init = tf.keras.initializers.he_normal(seed=50)\r\n\r\n    input_shape = (24,939)\r\n    left_input = Input(input_shape)\r\n    right_input = Input(input_shape)\r\n\r\n    encoder = Sequential()\r\n    encoder.add(Conv1D(filters=params['filter1'],kernel_size=params['kernel_size1'], padding='same', activation='relu',input_shape=input_shape,kernel_initializer=W_init, bias_initializer=b_init))\r\n    encoder.add(BatchNormalization())\r\n    encoder.add(Dropout(params[\"droprate1\"]))\r\n    encoder.add(MaxPool1D())\r\n    encoder.add(Conv1D(filters=params[\"filter2\"],kernel_size=params['kernel_size2'], padding='same', activation='relu'))\r\n    encoder.add(BatchNormalization())\r\n    encoder.add(Dropout(params[\"droprate2\"]))\r\n    encoder.add(MaxPool1D())\r\n    encoder.add(Conv1D(filters=params['filter3'],kernel_size=params['kernel_size3'], padding='same', activation='relu'))\r\n    encoder.add(BatchNormalization())\r\n    encoder.add(Dropout(params['droprate3']))\r\n    encoder.add(MaxPool1D())\r\n    encoder.add(Flatten())\r\n    encoder.add(Dense(params['unit1'],activation='relu'))\r\n    encoder.add(Dropout(params['droprate4']))\r\n\r\n    encoded_l = encoder(left_input)\r\n    encoded_r = encoder(right_input)\r\n    distance = Lambda(euclidean_distance, output_shape=eucl_dist_output_shape)([encoded_l, encoded_r])\r\n    adam = optimizers.Adam(lr=params['lr'], beta_1=0.1, beta_2=0.999,decay=params['decay'], amsgrad=False)\r\n    earlyStopping = EarlyStopping(monitor='loss',min_delta=0,patience=3,verbose=1,restore_best_weights=False)\r\n    callback_early_stop_reduceLROnPlateau=[earlyStopping]\r\n    model = Model([left_input, right_input], distance)\r\n    model.compile(loss=contrastive_loss, optimizer=adam,metrics=[accuracy])\r\n    model.summary()\r\n    #history = model.fit([(xtrain_np_img1).astype(np.float32),(xtrain_np_img1).astype(np.float32)],y_train_numpy,batch_size=128,verbose=1,epochs=4,validation_split=0.15,callbacks=callback_early_stop_reduceLROnPlateau)\r\n    history = model.fit([(train_first_input).astype(np.float32),(train_second_input).astype(np.float32)],y_train,validation_data=([(val_first_input).astype(np.float32),(val_second_input).astype(np.float32)],y_val),batch_size=128,verbose=1,epochs=4,callbacks=callback_early_stop_reduceLROnPlateau)\r\n    return model,history\r\n```\r\n```\r\nt = ta.Scan(x=[xtrain_np_img1,xtrain_np_img2],y=y_train_numpy,x_val=[xtest_np_img1,xtest_np_img2],y_val=y_test_numpy,model=siamese,params=p,experiment_name='exp_1')\r\n```\r\n**Error::::;\r\nTypeError: siamese() missing 2 required positional arguments: 'y_val' and 'params'**\r\n\r\n\r\n- [x] My support question includes an input model\r\n- [x] My support question includes a parameter dictionary\r\n- [x] My support question includes a `Scan()` command\r\n- [x] My support question includes a link to a sample of the data\r\n\r\nNOTE: If the data is sensitive and can't be shared, [create dummy data](https://scikit-learn.org/stable/modules/classes.html#samples-generator) that mimics it.\r\n\r\n**A self-contained Jupyter Notebook, Google Colab, or similar is highly preferred and will speed up helping you with your issue.**\r\n\r\n---\r\n","closed_by":{"login":"prateeksaurabh","id":59728988,"node_id":"MDQ6VXNlcjU5NzI4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/59728988?v=4","gravatar_id":"","url":"https://api.github.com/users/prateeksaurabh","html_url":"https://github.com/prateeksaurabh","followers_url":"https://api.github.com/users/prateeksaurabh/followers","following_url":"https://api.github.com/users/prateeksaurabh/following{/other_user}","gists_url":"https://api.github.com/users/prateeksaurabh/gists{/gist_id}","starred_url":"https://api.github.com/users/prateeksaurabh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prateeksaurabh/subscriptions","organizations_url":"https://api.github.com/users/prateeksaurabh/orgs","repos_url":"https://api.github.com/users/prateeksaurabh/repos","events_url":"https://api.github.com/users/prateeksaurabh/events{/privacy}","received_events_url":"https://api.github.com/users/prateeksaurabh/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/504/timeline","performed_via_github_app":null,"state_reason":"completed"}