{"url":"https://api.github.com/repos/autonomio/talos/issues/175","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/175/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/175/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/175/events","html_url":"https://github.com/autonomio/talos/issues/175","id":400987501,"node_id":"MDU6SXNzdWU0MDA5ODc1MDE=","number":175,"title":"reproducible results","user":{"login":"davide1993","id":19341977,"node_id":"MDQ6VXNlcjE5MzQxOTc3","avatar_url":"https://avatars.githubusercontent.com/u/19341977?v=4","gravatar_id":"","url":"https://api.github.com/users/davide1993","html_url":"https://github.com/davide1993","followers_url":"https://api.github.com/users/davide1993/followers","following_url":"https://api.github.com/users/davide1993/following{/other_user}","gists_url":"https://api.github.com/users/davide1993/gists{/gist_id}","starred_url":"https://api.github.com/users/davide1993/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davide1993/subscriptions","organizations_url":"https://api.github.com/users/davide1993/orgs","repos_url":"https://api.github.com/users/davide1993/repos","events_url":"https://api.github.com/users/davide1993/events{/privacy}","received_events_url":"https://api.github.com/users/davide1993/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-01-19T11:34:03Z","updated_at":"2019-01-19T17:48:59Z","closed_at":"2019-01-19T17:48:59Z","author_association":"NONE","active_lock_reason":null,"body":"I don't know how to get reproducible results with talos. I run a scan whit some params and If run the test with the same params I get the same file results.csv and that's ok. Now if I want to get the best model from the results file.csv I pick up the params from csv file and run the scan agasin  (only 1 permutation in this case) but the results are different from before. Moreover,  when I try to restore a model,  Restore.results variable contains only the first two lines of the csv file and not all the others. Tell me please how to save models of a massive test and later rerun the best model I choose.\r\nThank you.\r\n\r\n-------------------------------------------------------------------------\r\nSCAN TEST:\r\n\r\n```\r\nscan = ta.Scan(X_train, y_train,\r\n            params=params,\r\n            dataset_name=\"../test/\"+dataset.name,\r\n            x_val=X_test,\r\n            y_val=y_test,\r\n            experiment_no=date,\r\n            model=dataset.getCNNModel,\r\n            grid_downsample=1)\r\n```\r\n\r\nPARAMS:\r\n```\r\n        params = {'lr': (2, 10, 5),\r\n            'first_neuron':[8,16,32,64],\r\n            'hidden_layers': [1,2, 3, 4,5,6],\r\n            'batch_size': [16,32,64,128],\r\n            'epochs': [100,200,300],\r\n            'dropout': (0, 0.40, 10),\r\n            'weight_regulizer': [None],\r\n            'emb_output_dims': [None],\r\n            'optimizer': ['Adam', 'Nadam', 'RMSprop'],\r\n            'losses': [binary_crossentropy],\r\n            'activation': [relu,elu],\r\n            'last_activation': [sigmoid]}\r\n\r\n```\r\n\r\n\r\n\r\n ```\r\ndef getCNNModel(self, x_train, y_train, x_val, y_val, params):\r\n        \r\n        model = Sequential()\r\n        model.add(Dense(params['first_neuron'],\r\n                        input_dim=x_train.shape[1],\r\n                        activation=params['activation']))\r\n        #model.add(Dropout(params['dropout']))\r\n        model.add(Dense(64, activation='relu'))\r\n        model.add(Dense(8, activation='relu'))\r\n        model.add(Dense(1, activation=params['last_activation']))\r\n    \r\n        model.compile(optimizer=params['optimizer'],#(lr_normalizer(params['lr'], params['optimizer'])),\r\n                      loss=params['losses'],\r\n                      metrics=['acc',fmeasure_acc,precision_acc, recall_acc])\r\n    \r\n        history = model.fit(x_train, y_train,\r\n                        batch_size=params['batch_size'],\r\n                        epochs=params['epochs'],\r\n                        verbose=0,\r\n                        validation_data=[x_val, y_val])\r\n                        #callbacks=[live()])  da aggiungere se si vuole vedere il plotting durante le epoche ma molto leto\r\n    \r\n        return history, model\r\n  \r\n```","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/175/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/175/timeline","performed_via_github_app":null,"state_reason":"completed"}