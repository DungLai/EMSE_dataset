{"url":"https://api.github.com/repos/autonomio/talos/issues/313","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/313/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/313/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/313/events","html_url":"https://github.com/autonomio/talos/issues/313","id":447012593,"node_id":"MDU6SXNzdWU0NDcwMTI1OTM=","number":313,"title":"Talos fails when 'early_stopper' or 'EarlyStopping' is added","user":{"login":"bjtho08","id":885853,"node_id":"MDQ6VXNlcjg4NTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/885853?v=4","gravatar_id":"","url":"https://api.github.com/users/bjtho08","html_url":"https://github.com/bjtho08","followers_url":"https://api.github.com/users/bjtho08/followers","following_url":"https://api.github.com/users/bjtho08/following{/other_user}","gists_url":"https://api.github.com/users/bjtho08/gists{/gist_id}","starred_url":"https://api.github.com/users/bjtho08/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bjtho08/subscriptions","organizations_url":"https://api.github.com/users/bjtho08/orgs","repos_url":"https://api.github.com/users/bjtho08/repos","events_url":"https://api.github.com/users/bjtho08/events{/privacy}","received_events_url":"https://api.github.com/users/bjtho08/received_events","type":"User","site_admin":false},"labels":[{"id":994489876,"node_id":"MDU6TGFiZWw5OTQ0ODk4NzY=","url":"https://api.github.com/repos/autonomio/talos/labels/investigation","name":"investigation","color":"d3d3d3","default":false,"description":"gathering information"}],"state":"closed","locked":false,"assignee":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"assignees":[{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2019-05-22T08:55:00Z","updated_at":"2019-05-24T11:11:55Z","closed_at":"2019-05-24T11:11:55Z","author_association":"NONE","active_lock_reason":null,"body":"I've attempted to run a talos-wired keras model where I test for different dropout rates and decay rates. When adding an early stopping callback, the talos Scan fails after the entire scan is complete. I'm running talos 0.5.0, tensorflow-gpu 1.10.0 using python 3.6. Below is the relevant code and error traceback \r\n\r\n- [.] I'm up-to-date with the latest release:\r\n- [.] I've confirmed that my Keras model works outside of Talos.\r\n\r\n```\r\nfrom talos.model.early_stopper import early_stopper\r\nimg_rows, img_cols, img_channels = (None, None, 3)\r\n```\r\n# architecture params\r\n```\r\nnb_filters_0 = 64\r\nsigma_noise = 0.01\r\ndrop = 0\r\nbatchnorm = True\r\nnb_filters_0 = 64\r\nsigma_noise = 0.01\r\npretrain=2\r\nshape = (img_rows, img_cols, img_channels)\r\nbatch_size = 16\r\nnb_epoch = 200\r\nverbose = 0\r\n```\r\n##  Loss function\r\n```\r\nopt_name = \"adam\"  # choices:adadelta; sgd, rmsprop, adagrad, adam\r\nloss_func = categorical_crossentropy  # mse, mae, binary_crossentropy, jaccard2_loss, categorical_crossentropy, tversky_loss\r\nif opt_name == \"sgd\":\r\n    opt = SGD(lr=0.1)\r\nelif opt_name == \"rmsprop\":\r\n    opt = RMSprop()\r\nelif opt_name == \"adagrad\":\r\n    opt = Adagrad()\r\nelif opt_name == \"adadelta\":\r\n    opt = Adadelta()\r\nelif opt_name == \"adam\":\r\n    opt = Adam(lr=1e-4, decay=0.1)\r\nelif opt_name == \"amsgrad\":\r\n    opt = Adam(lr=1e-4, amsgrad=True)\r\nelif opt_name == \"adamax\":\r\n    opt = Adamax()\r\nelif opt_name == \"nadam\":\r\n    opt = Nadam()\r\nelse:\r\n    raise NameError(\"Wrong optimizer name\")\r\n```\r\n#  deep learning model\r\n```\r\ndef talos_model(x, y, val_x, val_y, params):\r\n    model = u_net((None, None, 3),\r\n                  params['nb_filters_0'],\r\n                  sigma_noise=params['sigma_noise'],\r\n                  depth=4,\r\n                  dropout=params['dropout'],\r\n                  output_channels=params['num_cls'],\r\n                  batchnorm=params['batchnorm'],\r\n                  pretrain=params['pretrain'],\r\n                 )\r\n    model.compile(loss=params['loss_func'], optimizer=Adam(lr=1e-4, decay=params['decay']), metrics=[\"categorical_accuracy\"])\r\n\r\n    train_tiles = [\r\n        osp.splitext(osp.basename(i))[0]\r\n        for i in glob(osp.join(params['data_path'], params['train_path'], \"*.tif\"))\r\n    ]\r\n    val_tiles = [\r\n        osp.splitext(osp.basename(i))[0]\r\n        for i in glob(osp.join(params['data_path'], params['val_path'], \"*.tif\"))\r\n    ]\r\n    train_generator = DataGenerator(\r\n        osp.join(params['data_path'], params['train_path']),\r\n        params['colorvec'],\r\n        params['train_m'],\r\n        params['train_s'],\r\n        train_tiles,\r\n        batch_size=params['batch_size'],\r\n        dim=(208, 208),\r\n        n_channels=3,\r\n        n_classes=params['num_cls'],\r\n        shuffle=True,\r\n        augmenter=True,\r\n    )\r\n    val_generator = DataGenerator(\r\n        osp.join(params['data_path'], params['val_path']),\r\n        params['colorvec'],\r\n        params['train_m'],\r\n        params['train_s'],\r\n        val_tiles,\r\n        batch_size=params['batch_size'],\r\n        dim=(208, 208),\r\n        n_channels=3,\r\n        n_classes=params['num_cls'],\r\n        shuffle=True,\r\n        augmenter=True,\r\n    )\r\n    \r\n    if not os.path.exists(osp.join(params['weight_path'], params['today_str'])):\r\n        os.mkdir(osp.join(params['weight_path'], params['today_str']))\r\n\r\n    modelpath = osp.join(\r\n            weight_path, today_str, \"talos_bn_U-net_model-{}epochs_batchsize_{}.loss_func_{}-weights.pickle\".format(\r\n                str(params['nb_epoch']),\r\n                str(params['batch_size']),\r\n                \"categorical_crossentropy\"\r\n            )\r\n        )\r\n    history = model.fit_generator(generator=train_generator,\r\n                                  epochs=params['nb_epoch'],\r\n                                  validation_data=val_generator,\r\n                                  use_multiprocessing=True,\r\n                                  workers=30,\r\n                                  verbose=params['verbose'],\r\n                                  callbacks=[\r\n                                      TensorBoard(\r\n                                          log_dir='./logs/decay_{}-drop_{}/'.format(\r\n                                              params['decay'], params['dropout']\r\n                                          ),\r\n                                          histogram_freq=0,\r\n                                          batch_size=params['batch_size'],\r\n                                          write_graph=True,\r\n                                          write_grads=False,\r\n                                          write_images=True,\r\n                                          embeddings_freq=0,\r\n                                          update_freq=160),\r\n                                      #EarlyStopping(monitor=\"loss\", patience=10, verbose=1),\r\n                                      early_stopper(params['nb_epoch'], mode=[0.0001, 5]),\r\n                                      ReduceLROnPlateau(\r\n                                          monitor=\"loss\",\r\n                                          factor=0.1,\r\n                                          patience=3,\r\n                                          min_lr=5e-7,\r\n                                          verbose=1,\r\n                                      ),\r\n                                      ModelCheckpointLight(\r\n                                          modelpath,\r\n                                          verbose=1,\r\n                                          monitor=\"loss\",\r\n                                          save_best_only=True,\r\n                                      ),\r\n                                  ]\r\n                                 )\r\n    return history, model\r\n```\r\n# talos fit params\r\n```\r\ntoday_str = str(datetime.date.today())\r\np = {'dropout': [0.0, 0.05, 0.1, 0.2],\r\n     'decay': [0.0, 0.1, 0.2, 0.3, 0.4, 0.5],\r\n     'loss_func' : [categorical_crossentropy],\r\n     'nb_filters_0' : [64],\r\n     'sigma_noise' : [0.01],\r\n     'num_cls' : [num_cls], # num_cls = 7\r\n     'batchnorm' : [True], # use batch normalization\r\n     'pretrain' : [2],\r\n     'nb_epoch' : [200],\r\n     'verbose' : [1],\r\n     'batch_size' : [16],\r\n     'data_path' : [data_path], # path string\r\n     'train_path' : [train_path], # path string\r\n     'val_path' : [val_path], # path string\r\n     'colorvec' : [colorvec], # list of list of ints\r\n     'train_m' : [train_m], # list of floats for normalization\r\n     'train_s' : [train_s], # list of floats for normalization\r\n     'weight_path' : [\"./weights/\"],\r\n     'today_str' : [today_str],\r\n    }\r\n\r\nweight_path = \"./weights/\"\r\ndummy_x = np.empty((1, batch_size, 208, 208))\r\ndummy_y = np.empty((1, batch_size))\r\n\r\nt = ta.Scan(x=dummy_x,\r\n            y=dummy_y,\r\n            model=talos_model,\r\n            #functional_model=True,\r\n            #grid_downsample=0.1, \r\n            params=p)\r\n```\r\n-------------------------------------------------------------------------\r\n# Traceback\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-7-3b0ec144b1ad> in <module>()\r\n    164             #functional_model=True,\r\n    165             #grid_downsample=0.1,\r\n--> 166             params=p)\r\n    167 \r\n    168 print(model.summary(line_length=124))\r\n\r\n~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/talos/scan/Scan.py in __init__(self, x, y, params, model, dataset_name, experiment_no, experiment_name, x_val, y_val, val_split, shuffle, round_limit, time_limit, grid_downsample, random_method, seed, search_method, permutation_filter, reduction_method, reduction_interval, reduction_window, reduction_threshold, reduction_metric, reduce_loss, last_epoch_value, clear_tf_session, disable_progress_bar, print_params, debug)\r\n    183         # input parameters section ends\r\n    184 \r\n--> 185         self._null = self.runtime()\r\n    186 \r\n    187     def runtime(self):\r\n\r\n~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/talos/scan/Scan.py in runtime(self)\r\n    188 \r\n    189         self = scan_prepare(self)\r\n--> 190         self = scan_run(self)\r\n\r\n~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/talos/scan/scan_run.py in scan_run(self)\r\n     30     self.peak_epochs_df = peak_epochs_todf(self)\r\n     31 \r\n---> 32     self = scan_finish(self)\r\n\r\n~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/talos/scan/scan_finish.py in scan_finish(self)\r\n     28     # clean the results into a dataframe\r\n     29     self.data = self.result[self.result.columns[0]].str.split(',', expand=True)\r\n---> 30     self.data.columns = self.result.columns[0].split(',')\r\n     31 \r\n     32     # remove redundant columns\r\n\r\n~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/pandas/core/generic.py in __setattr__(self, name, value)\r\n   4387         try:\r\n   4388             object.__getattribute__(self, name)\r\n-> 4389             return object.__setattr__(self, name, value)\r\n   4390         except AttributeError:\r\n   4391             pass\r\n\r\npandas/_libs/properties.pyx in pandas._libs.properties.AxisProperty.__set__()\r\n\r\n~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/pandas/core/generic.py in _set_axis(self, axis, labels)\r\n    644 \r\n    645     def _set_axis(self, axis, labels):\r\n--> 646         self._data.set_axis(axis, labels)\r\n    647         self._clear_item_cache()\r\n    648 \r\n\r\n~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/pandas/core/internals.py in set_axis(self, axis, new_labels)\r\n   3321             raise ValueError(\r\n   3322                 'Length mismatch: Expected axis has {old} elements, new '\r\n-> 3323                 'values have {new} elements'.format(old=old_len, new=new_len))\r\n   3324 \r\n   3325         self.axes[axis] = new_labels\r\n\r\nValueError: Length mismatch: Expected axis has 29 elements, new values have 25 elements\r\n```","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/313/timeline","performed_via_github_app":null,"state_reason":"completed"}