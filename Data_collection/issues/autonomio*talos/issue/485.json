{"url":"https://api.github.com/repos/autonomio/talos/issues/485","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/485/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/485/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/485/events","html_url":"https://github.com/autonomio/talos/issues/485","id":604736579,"node_id":"MDU6SXNzdWU2MDQ3MzY1Nzk=","number":485,"title":"Evaluate() does not work - unexpected keyword argument 'ragged'","user":{"login":"TryNeffi","id":44022188,"node_id":"MDQ6VXNlcjQ0MDIyMTg4","avatar_url":"https://avatars.githubusercontent.com/u/44022188?v=4","gravatar_id":"","url":"https://api.github.com/users/TryNeffi","html_url":"https://github.com/TryNeffi","followers_url":"https://api.github.com/users/TryNeffi/followers","following_url":"https://api.github.com/users/TryNeffi/following{/other_user}","gists_url":"https://api.github.com/users/TryNeffi/gists{/gist_id}","starred_url":"https://api.github.com/users/TryNeffi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TryNeffi/subscriptions","organizations_url":"https://api.github.com/users/TryNeffi/orgs","repos_url":"https://api.github.com/users/TryNeffi/repos","events_url":"https://api.github.com/users/TryNeffi/events{/privacy}","received_events_url":"https://api.github.com/users/TryNeffi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-04-22T12:57:38Z","updated_at":"2020-04-27T08:28:58Z","closed_at":"2020-04-23T10:45:39Z","author_association":"NONE","active_lock_reason":null,"body":"#### 1) Confirm the below\r\n\r\n- [x] I have looked for an answer in the [Docs](https://autonomio.github.io/talos)\r\n- [x] My Python version is 3.5 or higher\r\n- [x] I have searched through the issues [Issues](https://github.com/autonomio/talos/issues) for a duplicate\r\n- [x] I've tested that my Keras model works as a stand-alone\r\n\r\n#### 2) Include the output of:\r\n\r\n`talos.__version__ == 0.6.4`\r\n`tf.__version__ == 2.1.0 `\r\n`tf.keras.__version__ == 2.2.4-tf`\r\n\r\n#### 3) Explain clearly what you are trying to achieve\r\n\r\nI am in my third round of hyperparameter tuning and I wanted to check the best model on my test set. Unfortunately it did not work out. Moreover, a lot of function such as the \"lr_normalizer\", \"multiple_gpu\", \"recover_best_model\" or \"Deploy\" does not work either.\r\nFirst I though I have this problem (https://stackoverflow.com/questions/58878421/unexpected-keyword-argument-ragged-in-keras), but even after taking care that I only import tensorflow.keras packages neither of the above mentioned functions worked.\r\n\r\n#### 4) My Code:\r\n\r\n- Imports: \r\n```\r\nimport tensorflow as tf \r\nimport tensorflow.keras as keras\r\n```\r\n#### 5) Error: \r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-78-c9fcd4826407> in <module>\r\n      4                         metric='val_loss',\r\n      5                         asc=True,\r\n----> 6                         task=\"continuous\")\r\n\r\n/opt/conda/lib/python3.7/site-packages/talos/commands/evaluate.py in evaluate(self, x, y, task, metric, model_id, folds, shuffle, asc, print_out)\r\n     63 \r\n     64         from ..utils.best_model import activate_model\r\n---> 65         model = activate_model(self.scan_object, model_id)\r\n     66 \r\n     67         from ..utils.validation_split import kfold\r\n\r\n/opt/conda/lib/python3.7/site-packages/talos/utils/best_model.py in activate_model(self, model_id)\r\n     18     '''Loads the model from the json that is stored in the Scan object'''\r\n     19 \r\n---> 20     model = model_from_json(self.saved_models[model_id])\r\n     21     model.set_weights(self.saved_weights[model_id])\r\n     22 \r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/engine/saving.py in model_from_json(json_string, custom_objects)\r\n    659     config = json.loads(json_string)\r\n    660     from ..layers import deserialize\r\n--> 661     return deserialize(config, custom_objects=custom_objects)\r\n    662 \r\n    663 \r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/layers/__init__.py in deserialize(config, custom_objects)\r\n    166                                     module_objects=globs,\r\n    167                                     custom_objects=custom_objects,\r\n--> 168                                     printable_module_name='layer')\r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/utils/generic_utils.py in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)\r\n    145                     config['config'],\r\n    146                     custom_objects=dict(list(_GLOBAL_CUSTOM_OBJECTS.items()) +\r\n--> 147                                         list(custom_objects.items())))\r\n    148             with CustomObjectScope(custom_objects):\r\n    149                 return cls.from_config(config['config'])\r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/engine/network.py in from_config(cls, config, custom_objects)\r\n   1054         # First, we create all layers and enqueue nodes to be processed\r\n   1055         for layer_data in config['layers']:\r\n-> 1056             process_layer(layer_data)\r\n   1057 \r\n   1058         # Then we process nodes in order of layer depth.\r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/engine/network.py in process_layer(layer_data)\r\n   1040 \r\n   1041             layer = deserialize_layer(layer_data,\r\n-> 1042                                       custom_objects=custom_objects)\r\n   1043             created_layers[layer_name] = layer\r\n   1044 \r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/layers/__init__.py in deserialize(config, custom_objects)\r\n    166                                     module_objects=globs,\r\n    167                                     custom_objects=custom_objects,\r\n--> 168                                     printable_module_name='layer')\r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/utils/generic_utils.py in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)\r\n    147                                         list(custom_objects.items())))\r\n    148             with CustomObjectScope(custom_objects):\r\n--> 149                 return cls.from_config(config['config'])\r\n    150         else:\r\n    151             # Then `cls` may be a function returning a class.\r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/engine/base_layer.py in from_config(cls, config)\r\n   1177             A layer instance.\r\n   1178         \"\"\"\r\n-> 1179         return cls(**config)\r\n   1180 \r\n   1181     def count_params(self):\r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/legacy/interfaces.py in wrapper(*args, **kwargs)\r\n     89                 warnings.warn('Update your `' + object_name + '` call to the ' +\r\n     90                               'Keras 2 API: ' + signature, stacklevel=2)\r\n---> 91             return func(*args, **kwargs)\r\n     92         wrapper._original_function = func\r\n     93         return wrapper\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'ragged'\r\n```","closed_by":{"login":"TryNeffi","id":44022188,"node_id":"MDQ6VXNlcjQ0MDIyMTg4","avatar_url":"https://avatars.githubusercontent.com/u/44022188?v=4","gravatar_id":"","url":"https://api.github.com/users/TryNeffi","html_url":"https://github.com/TryNeffi","followers_url":"https://api.github.com/users/TryNeffi/followers","following_url":"https://api.github.com/users/TryNeffi/following{/other_user}","gists_url":"https://api.github.com/users/TryNeffi/gists{/gist_id}","starred_url":"https://api.github.com/users/TryNeffi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TryNeffi/subscriptions","organizations_url":"https://api.github.com/users/TryNeffi/orgs","repos_url":"https://api.github.com/users/TryNeffi/repos","events_url":"https://api.github.com/users/TryNeffi/events{/privacy}","received_events_url":"https://api.github.com/users/TryNeffi/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/485/timeline","performed_via_github_app":null,"state_reason":"completed"}