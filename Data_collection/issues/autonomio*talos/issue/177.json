{"url":"https://api.github.com/repos/autonomio/talos/issues/177","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/177/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/177/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/177/events","html_url":"https://github.com/autonomio/talos/issues/177","id":401025863,"node_id":"MDU6SXNzdWU0MDEwMjU4NjM=","number":177,"title":"reproducibleResults","user":{"login":"davide1993","id":19341977,"node_id":"MDQ6VXNlcjE5MzQxOTc3","avatar_url":"https://avatars.githubusercontent.com/u/19341977?v=4","gravatar_id":"","url":"https://api.github.com/users/davide1993","html_url":"https://github.com/davide1993","followers_url":"https://api.github.com/users/davide1993/followers","following_url":"https://api.github.com/users/davide1993/following{/other_user}","gists_url":"https://api.github.com/users/davide1993/gists{/gist_id}","starred_url":"https://api.github.com/users/davide1993/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davide1993/subscriptions","organizations_url":"https://api.github.com/users/davide1993/orgs","repos_url":"https://api.github.com/users/davide1993/repos","events_url":"https://api.github.com/users/davide1993/events{/privacy}","received_events_url":"https://api.github.com/users/davide1993/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-01-19T19:15:28Z","updated_at":"2019-01-21T19:11:30Z","closed_at":"2019-01-21T19:11:30Z","author_association":"NONE","active_lock_reason":null,"body":"I use these instructions reported in keras documentation to get reproducible results:\r\nhttps://keras.io/getting-started/faq/#how-can-i-obtain-reproducible-results-using-keras-during-development\r\n\r\nAs you can see multithread have to be disable but this slow down the training too much. My goal is to run a long test with talos and save different models: the best model for each metric. I think with Deploy class reproducibility is not a problem because I can use Deploy(scan object, metric) in order to save my best model for a given metric. So what I did is:\r\n`   ta.Deploy(scan,exp_acc_filename,metric= val_acc)\r\n    ta.Deploy(scan,exp_prec_filename,metric=val_precision_acc )\r\n    ta.Deploy(scan,exp_rec_filename,metric= val_recall_acc)\r\n    ta.Deploy(scan,exp_loss_filename,metric= val_loss, asc=True) \r\n    ta.Deploy(scan,exp_f1_filename,metric=val_fmeasure_acc )`\r\n\r\nthen I restore the model from the zip archive with \r\n`r=Restore('zipfile')`\r\nr variable contains the weights, layers... so  I think there's no need to use single thread in my project because the zip file contains everything I need to reproduce the same results, am I wrong?\r\nthank you\r\n\r\n\r\n","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/177/timeline","performed_via_github_app":null,"state_reason":"completed"}