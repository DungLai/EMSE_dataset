{"url":"https://api.github.com/repos/autonomio/talos/issues/64","repository_url":"https://api.github.com/repos/autonomio/talos","labels_url":"https://api.github.com/repos/autonomio/talos/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/autonomio/talos/issues/64/comments","events_url":"https://api.github.com/repos/autonomio/talos/issues/64/events","html_url":"https://github.com/autonomio/talos/issues/64","id":352073743,"node_id":"MDU6SXNzdWUzNTIwNzM3NDM=","number":64,"title":"predict_classes in score_model.py results in AttributeError ","user":{"login":"bml1g12","id":2605767,"node_id":"MDQ6VXNlcjI2MDU3Njc=","avatar_url":"https://avatars.githubusercontent.com/u/2605767?v=4","gravatar_id":"","url":"https://api.github.com/users/bml1g12","html_url":"https://github.com/bml1g12","followers_url":"https://api.github.com/users/bml1g12/followers","following_url":"https://api.github.com/users/bml1g12/following{/other_user}","gists_url":"https://api.github.com/users/bml1g12/gists{/gist_id}","starred_url":"https://api.github.com/users/bml1g12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bml1g12/subscriptions","organizations_url":"https://api.github.com/users/bml1g12/orgs","repos_url":"https://api.github.com/users/bml1g12/repos","events_url":"https://api.github.com/users/bml1g12/events{/privacy}","received_events_url":"https://api.github.com/users/bml1g12/received_events","type":"User","site_admin":false},"labels":[{"id":923120513,"node_id":"MDU6TGFiZWw5MjMxMjA1MTM=","url":"https://api.github.com/repos/autonomio/talos/labels/priority:%20MEDIUM","name":"priority: MEDIUM","color":"FFA500","default":false,"description":"medium priority"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-08-20T10:24:20Z","updated_at":"2018-08-22T10:49:54Z","closed_at":"2018-08-22T10:49:54Z","author_association":"NONE","active_lock_reason":null,"body":"- [ x] I'm up-to-date with the latest release:\r\n    \r\n      pip install --upgrade --user git+https://github.com/autonomio/talos.git@daily-dev\r\n\r\n- [x ] I've confirmed that my Keras model works outside of Talos.\r\n\r\n-------------------------------------------------------------------------\r\n\r\nWhen I run \r\n\r\n`h = ta.Scan(X_train, Y_train, params=p, dataset_name=\"debug\", experiment_no=\"1\", \r\n            model=keras_nn_model_talos, grid_downsample=0.002, talos_log_name=\"talos.log\", reduction_method=\"spear\", reduction_metric=\"val_fbeta_score_acc\")`\r\n\r\nI get the following error: \r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-9-b4cbea7ca6f1> in <module>()\r\n      8      'second_GRU_layer':[True, False]}\r\n      9 h = ta.Scan(X_train, Y_train, x_val=X_dev, y_val=Y_dev, params=p, dataset_name=\"debug\", experiment_no=\"1\", \r\n---> 10             model=keras_nn_model_talos, grid_downsample=0.002, talos_log_name=\"talos.log\", reduction_method=\"spear\", reduction_metric=\"fbeta_score\")\r\n     11 \r\n     12 ## I had to edit a line of ~/anaconda3/envs/tfgpu-keras/lib/python3.6/site-packages/talos/metrics/score_model.py\r\n\r\n~/anaconda3/envs/tfgpu-keras/lib/python3.6/site-packages/talos/scan/Scan.py in __init__(self, x, y, params, dataset_name, experiment_no, model, x_val, y_val, val_split, shuffle, search_method, reduction_method, reduction_interval, reduction_window, grid_downsample, reduction_threshold, reduction_metric, round_limit, talos_log_name, debug, seed, clear_tf_session, disable_progress_bar)\r\n    140         # input parameters section ends\r\n    141 \r\n--> 142         self._null = self.runtime()\r\n    143 \r\n    144     def runtime(self):\r\n\r\n~/anaconda3/envs/tfgpu-keras/lib/python3.6/site-packages/talos/scan/Scan.py in runtime(self)\r\n    145 \r\n    146         self = scan_prepare(self)\r\n--> 147         self = scan_run(self)\r\n\r\n~/anaconda3/envs/tfgpu-keras/lib/python3.6/site-packages/talos/scan/scan_run.py in scan_run(self)\r\n     27                      disable=self.disable_progress_bar)\r\n     28     while len(self.param_log) != 0:\r\n---> 29         self = rounds_run(self)\r\n     30         self.pbar.update(1)\r\n     31     self.pbar.close()\r\n\r\n~/anaconda3/envs/tfgpu-keras/lib/python3.6/site-packages/talos/scan/scan_run.py in rounds_run(self)\r\n     59 \r\n     60     _hr_out = run_round_results(self, _hr_out)\r\n---> 61     self._val_score = get_score(self)\r\n     62     write_log(self)\r\n     63     self.result.append(_hr_out)\r\n\r\n~/anaconda3/envs/tfgpu-keras/lib/python3.6/site-packages/talos/metrics/score_model.py in get_score(self)\r\n     15 \r\n     16     try:\r\n---> 17         y_pred = self.keras_model.predict_classes(self.x_val)\r\n     18        # y_pred = self.keras_model.predict(self.x_val)\r\n     19         return Performance(y_pred, self.y_val, self.shape, self.y_max).result\r\n\r\nAttributeError: 'Model' object has no attribute 'predict_classes'\r\n```\r\n\r\nWhich can seemingly be fixed simply by changing \r\ntalos/metrics/score_model.py line 17\r\nfrom `y_pred = self.keras_model.predict_classes(self.x_val)`\r\nto `y_pred = self.keras_model.predict(self.x_val)`\r\n\r\nMy params dictionary and model:\r\n```\r\np = {'adam_learning_rate': [0.01, 0.001, 0.0001],\r\n     'num_filters': [12, 32, 64, 196],\r\n     'gru_hidden_units':[32, 64, 128, 196],\r\n     'dropout_rate':[0.2,0.5,0.8],\r\n     'batch_size': [64, 128, 256],\r\n     'epochs': [3],\r\n     'second_GRU_layer':[True, False]}\r\n\r\ndef keras_nn_model_talos(x_train, y_train, x_val, y_val, params):\r\n        \r\n\r\n    \r\n    #https://stackoverflow.com/questions/43547402/how-to-calculate-f1-macro-in-keras\r\n    def my_recall_acc(y_true, y_pred):\r\n        \"\"\"Recall metric.\r\n    \r\n        Only computes a batch-wise average of recall.\r\n    \r\n        Computes the recall, a metric for multi-label classification of\r\n        how many relevant items are selected.\r\n        \"\"\"\r\n        true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\r\n        possible_positives = K.sum(K.round(K.clip(y_true, 0, 1)))\r\n        recall = true_positives / (possible_positives + K.epsilon())\r\n        return recall\r\n    \r\n    def my_precision_acc(y_true, y_pred):\r\n        \"\"\"Precision metric.\r\n    \r\n        Only computes a batch-wise average of precision.\r\n    \r\n        Computes the precision, a metric for multi-label classification of\r\n        how many selected items are relevant.\r\n        \"\"\"\r\n        true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\r\n        predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1)))\r\n        precision = true_positives / (predicted_positives + K.epsilon())\r\n        return precision\r\n    \r\n    def f1_acc(y_true, y_pred):\r\n        precision = my_precision_acc(y_true, y_pred)\r\n        recall = my_recall_acc(y_true, y_pred)\r\n        return 2*((precision*recall)/(precision+recall+K.epsilon()))\r\n        \r\n    X_input = Input(shape = x_train.shape[1:])\r\n\r\n    # Step 1: CONV layer \r\n    X = Conv1D(filters=int(params[\"num_filters\"]), kernel_size=15,strides=4)(X_input)  # CONV1D\r\n    X = BatchNormalization()(X)                               # Batch normalization\r\n    X = Activation('relu')(X)                                 # ReLu activation\r\n    X = Dropout(rate=params[\"dropout_rate\"])(X)                                 # dropout (use 0.8)\r\n\r\n    # Step 2: First GRU Layer\r\n    X = GRU(units = int(params[\"gru_hidden_units\"]), return_sequences = True)(X)         # GRU (use 128 units and return the sequences)\r\n    X = Dropout(rate=params[\"dropout_rate\"])(X)                                  # dropout (use 0.8)\r\n    X = BatchNormalization()(X)                                 # Batch normalization\r\n    \r\n    if params[\"second_GRU_layer\"]:\r\n        # Step 3: Second GRU Layer \r\n        X = GRU(units = int(params[\"gru_hidden_units\"]), return_sequences = True)(X)                                 # GRU (use 128 units and return the sequences)\r\n        X = Dropout(rate=params[\"dropout_rate\"])(X)                                 # dropout (use 0.8)\r\n        X = BatchNormalization()(X)                                 # Batch normalization\r\n        X = Dropout(rate=params[\"dropout_rate\"])(X)                                   # dropout (use 0.8)\r\n    \r\n    # Step 4: Time-distributed dense layer \r\n    X = TimeDistributed(Dense(1, activation = \"sigmoid\"))(X) # time distributed  (sigmoid)\r\n\r\n\r\n    model = Model(inputs = X_input, outputs = X)\r\n    \r\n    opt = Adam(lr=params[\"adam_learning_rate\"], beta_1=0.9, beta_2=0.999, decay=0.01)\r\n    model.compile(loss='binary_crossentropy', optimizer=opt, metrics=[\"acc\", my_recall_acc, my_precision_acc, f1_acc])\r\n    \r\n    \r\n    history = model.fit(x_train, y_train, batch_size = int(params[\"batch_size\"]), \r\n          validation_data=(x_val, y_val),\r\n          epochs=int(params[\"epochs\"])) \r\n    \r\n    return history, model  \r\n```\r\n\r\nX_train.shape, Y_train.shape, X_dev.shape, Y_dev.shape\r\n((1800, 201, 41), (1800, 47, 1), (400, 201, 41), (400, 47, 1))\r\n","closed_by":{"login":"mikkokotila","id":7943188,"node_id":"MDQ6VXNlcjc5NDMxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7943188?v=4","gravatar_id":"","url":"https://api.github.com/users/mikkokotila","html_url":"https://github.com/mikkokotila","followers_url":"https://api.github.com/users/mikkokotila/followers","following_url":"https://api.github.com/users/mikkokotila/following{/other_user}","gists_url":"https://api.github.com/users/mikkokotila/gists{/gist_id}","starred_url":"https://api.github.com/users/mikkokotila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikkokotila/subscriptions","organizations_url":"https://api.github.com/users/mikkokotila/orgs","repos_url":"https://api.github.com/users/mikkokotila/repos","events_url":"https://api.github.com/users/mikkokotila/events{/privacy}","received_events_url":"https://api.github.com/users/mikkokotila/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/autonomio/talos/issues/64/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/autonomio/talos/issues/64/timeline","performed_via_github_app":null,"state_reason":"completed"}