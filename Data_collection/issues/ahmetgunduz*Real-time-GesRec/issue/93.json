{"url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/93","repository_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec","labels_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/93/comments","events_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/93/events","html_url":"https://github.com/ahmetgunduz/Real-time-GesRec/issues/93","id":753566918,"node_id":"MDU6SXNzdWU3NTM1NjY5MTg=","number":93,"title":"Running a test locally with webcam","user":{"login":"AmitHaritan2525","id":74916859,"node_id":"MDQ6VXNlcjc0OTE2ODU5","avatar_url":"https://avatars.githubusercontent.com/u/74916859?v=4","gravatar_id":"","url":"https://api.github.com/users/AmitHaritan2525","html_url":"https://github.com/AmitHaritan2525","followers_url":"https://api.github.com/users/AmitHaritan2525/followers","following_url":"https://api.github.com/users/AmitHaritan2525/following{/other_user}","gists_url":"https://api.github.com/users/AmitHaritan2525/gists{/gist_id}","starred_url":"https://api.github.com/users/AmitHaritan2525/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AmitHaritan2525/subscriptions","organizations_url":"https://api.github.com/users/AmitHaritan2525/orgs","repos_url":"https://api.github.com/users/AmitHaritan2525/repos","events_url":"https://api.github.com/users/AmitHaritan2525/events{/privacy}","received_events_url":"https://api.github.com/users/AmitHaritan2525/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-30T15:20:33Z","updated_at":"2020-11-30T15:20:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\ni didn't understand what i need to do in order to run a simulation locally using my own webcam. \r\nI tried running the online_test.py with the predefined models in the wiki but i got this output:\r\n`|Total number of trainable parameters:  33409104\r\n[INFO]: RGB model is used for init model\r\nModel 1 \r\n DataParallel(\r\n  (module): ResNet(\r\n    (conv1): Conv3d(3, 64, kernel_size=(3, 7, 7), stride=(1, 2, 2), padding=(1, 3, 3), bias=False)\r\n    (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n    (relu): ReLU(inplace=True)\r\n    (maxpool): MaxPool3d(kernel_size=(3, 3, 3), stride=2, padding=1, dilation=1, ceil_mode=False)\r\n    (layer1): Sequential(\r\n      (0): BasicBlock(\r\n        (conv1): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n      (1): BasicBlock(\r\n        (conv1): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (layer2): Sequential(\r\n      (0): BasicBlock(\r\n        (conv1): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (downsample): Sequential(\r\n          (0): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)\r\n          (1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        )\r\n      )\r\n      (1): BasicBlock(\r\n        (conv1): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (layer3): Sequential(\r\n      (0): BasicBlock(\r\n        (conv1): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (downsample): Sequential(\r\n          (0): Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)\r\n          (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        )\r\n      )\r\n      (1): BasicBlock(\r\n        (conv1): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (layer4): Sequential(\r\n      (0): BasicBlock(\r\n        (conv1): Conv3d(256, 512, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (downsample): Sequential(\r\n          (0): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)\r\n          (1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        )\r\n      )\r\n      (1): BasicBlock(\r\n        (conv1): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (avgpool): AvgPool3d(kernel_size=(1, 4, 4), stride=1, padding=0)\r\n    (fc): Linear(in_features=512, out_features=400, bias=True)\r\n  )\r\n)\r\nTotal number of trainable parameters:  33371472\r\nNamespace(annotation_path='/home1/haritan.amit@ef.technion.ac.il/YuvalAmit/PycharmProjects/HandGesture/kinetics.json', arch='resnet', batch_size=128, begin_epoch=1, checkpoint=10, clf_queue_size=1, clf_strategy='raw', clf_threshold_final=1, clf_threshold_pre=1, crop_position_in_test='c', dampening=0.9, dataset='egogesture', det_counter=1, det_queue_size=1, det_strategy='raw', downsample=1, ft_begin_index=0, ft_portion='complete', groups=3, initial_scale=1.0, learning_rate=0.1, lr_patience=10, lr_steps=[10, 20, 30, 40, 100], manual_seed=1, mean=[114.7748, 107.7354, 99.475], mean_dataset='activitynet', modality='RGB', modality_clf='RGB', modality_det='RGB', model='resnet', model_clf='resnet', model_depth=18, model_depth_clf=18, model_depth_det=18, model_det='resnet', momentum=0.9, n_classes=400, n_classes_clf=400, n_classes_det=400, n_epochs=200, n_finetune_classes=400, n_finetune_classes_clf=400, n_finetune_classes_det=400, n_scales=5, n_threads=4, n_val_samples=3, nesterov=False, no_cuda=False, no_hflip=False, no_mean_norm=False, no_softmax_in_test=False, no_train=False, no_val=False, norm_value=1, optimizer='sgd', pretrain_path='', pretrain_path_clf='', pretrain_path_det='', resnet_shortcut='B', resnet_shortcut_clf='B', resnet_shortcut_det='B', resnext_cardinality=32, resnext_cardinality_clf=32, resnext_cardinality_det=32, result_path='/home1/haritan.amit@ef.technion.ac.il/YuvalAmit/PycharmProjects/HandGesture/results', resume_path='', resume_path_clf='', resume_path_det='', root_path='/home1/haritan.amit@ef.technion.ac.il/YuvalAmit/PycharmProjects/HandGesture', sample_duration=16, sample_duration_clf=16, sample_duration_det=16, sample_size=112, scale_in_test=1.0, scale_step=0.84089641525, scales=[1.0, 0.84089641525, 0.7071067811803005, 0.5946035574934808, 0.4999999999911653], std=[38.7568578, 37.88248729, 40.02898126], std_norm=False, store_name='model', stride_len=1, test=True, test_subset='val', train_crop='corner', video='data2/EgoGesture/videos/Subject02/Scene1/Color/rgb1.avi', video_path='/home1/haritan.amit@ef.technion.ac.il/YuvalAmit/PycharmProjects/HandGesture/video_kinetics_jpg', weight_decay=0.001, whole_path='video_kinetics_jpg', wide_resnet_k=2, wide_resnet_k_clf=2, wide_resnet_k_det=2, width_mult=1.0, width_mult_clf=1.0, width_mult_det=1.0)\r\nTotal number of trainable parameters:  33409104\r\n[INFO]: RGB model is used for init model\r\nModel 2 \r\n DataParallel(\r\n  (module): ResNet(\r\n    (conv1): Conv3d(3, 64, kernel_size=(3, 7, 7), stride=(1, 2, 2), padding=(1, 3, 3), bias=False)\r\n    (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n    (relu): ReLU(inplace=True)\r\n    (maxpool): MaxPool3d(kernel_size=(3, 3, 3), stride=2, padding=1, dilation=1, ceil_mode=False)\r\n    (layer1): Sequential(\r\n      (0): BasicBlock(\r\n        (conv1): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n      (1): BasicBlock(\r\n        (conv1): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (layer2): Sequential(\r\n      (0): BasicBlock(\r\n        (conv1): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (downsample): Sequential(\r\n          (0): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)\r\n          (1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        )\r\n      )\r\n      (1): BasicBlock(\r\n        (conv1): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (layer3): Sequential(\r\n      (0): BasicBlock(\r\n        (conv1): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (downsample): Sequential(\r\n          (0): Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)\r\n          (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        )\r\n      )\r\n      (1): BasicBlock(\r\n        (conv1): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (layer4): Sequential(\r\n      (0): BasicBlock(\r\n        (conv1): Conv3d(256, 512, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (downsample): Sequential(\r\n          (0): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)\r\n          (1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        )\r\n      )\r\n      (1): BasicBlock(\r\n        (conv1): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n        (conv2): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\r\n        (bn2): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n      )\r\n    )\r\n    (avgpool): AvgPool3d(kernel_size=(1, 4, 4), stride=1, padding=0)\r\n    (fc): Linear(in_features=512, out_features=400, bias=True)\r\n  )\r\n)\r\nTotal number of trainable parameters:  33371472\r\nStart Evaluation\r\nAverage Levenshtein Accuracy= 0\r\n-----Evaluation is finished------`\r\ni am not sure this is the correct output.\r\nCan you please specify the steps and scripts i need to run? or what i did wrong?\r\nThanks,\r\nAmit","closed_by":null,"reactions":{"url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/93/timeline","performed_via_github_app":null,"state_reason":null}