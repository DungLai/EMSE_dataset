{"url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/97","repository_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec","labels_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/97/labels{/name}","comments_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/97/comments","events_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/97/events","html_url":"https://github.com/ahmetgunduz/Real-time-GesRec/issues/97","id":799254047,"node_id":"MDU6SXNzdWU3OTkyNTQwNDc=","number":97,"title":"confusion matrix","user":{"login":"caofangzhou","id":45531565,"node_id":"MDQ6VXNlcjQ1NTMxNTY1","avatar_url":"https://avatars.githubusercontent.com/u/45531565?v=4","gravatar_id":"","url":"https://api.github.com/users/caofangzhou","html_url":"https://github.com/caofangzhou","followers_url":"https://api.github.com/users/caofangzhou/followers","following_url":"https://api.github.com/users/caofangzhou/following{/other_user}","gists_url":"https://api.github.com/users/caofangzhou/gists{/gist_id}","starred_url":"https://api.github.com/users/caofangzhou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/caofangzhou/subscriptions","organizations_url":"https://api.github.com/users/caofangzhou/orgs","repos_url":"https://api.github.com/users/caofangzhou/repos","events_url":"https://api.github.com/users/caofangzhou/events{/privacy}","received_events_url":"https://api.github.com/users/caofangzhou/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-02T12:52:43Z","updated_at":"2021-02-02T12:52:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for your outstanding work, which is worth learning from me.\r\nI have a question for you about confusion matrices.\r\nCan you tell me how to call the function of confusion matrices and output the picture\r\nThank you very much!\r\n\r\noffline_test:\r\ndef plot_cm(cm, classes, normalize = True):\r\n    import seaborn as sns\r\n    if normalize:\r\n        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\r\n        print(\"Normalized confusion matrix\")\r\n    else:\r\n        print('Confusion matrix, without normalization')\r\n\r\n    ax= plt.subplot()\r\n    sns.heatmap(cm, annot=False, ax = ax); #annot=True to annotate cells\r\n\r\n    # labels, title and ticks\r\n    ax.set_xlabel('Predicted labels');ax.set_ylabel('True labels'); \r\n    plt.xticks(rotation='vertical')\r\n    plt.yticks(rotation='horizontal')\r\nThank you very much!\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/97/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ahmetgunduz/Real-time-GesRec/issues/97/timeline","performed_via_github_app":null,"state_reason":null}