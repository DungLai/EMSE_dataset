{"url":"https://api.github.com/repos/microsoft/graspologic/issues/977","repository_url":"https://api.github.com/repos/microsoft/graspologic","labels_url":"https://api.github.com/repos/microsoft/graspologic/issues/977/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/graspologic/issues/977/comments","events_url":"https://api.github.com/repos/microsoft/graspologic/issues/977/events","html_url":"https://github.com/microsoft/graspologic/issues/977","id":1313655565,"node_id":"I_kwDOCM7Erc5OTMsN","number":977,"title":"[BUG] Does SSG handle ties appropriately?","user":{"login":"ebridge2","id":8883547,"node_id":"MDQ6VXNlcjg4ODM1NDc=","avatar_url":"https://avatars.githubusercontent.com/u/8883547?v=4","gravatar_id":"","url":"https://api.github.com/users/ebridge2","html_url":"https://github.com/ebridge2","followers_url":"https://api.github.com/users/ebridge2/followers","following_url":"https://api.github.com/users/ebridge2/following{/other_user}","gists_url":"https://api.github.com/users/ebridge2/gists{/gist_id}","starred_url":"https://api.github.com/users/ebridge2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebridge2/subscriptions","organizations_url":"https://api.github.com/users/ebridge2/orgs","repos_url":"https://api.github.com/users/ebridge2/repos","events_url":"https://api.github.com/users/ebridge2/events{/privacy}","received_events_url":"https://api.github.com/users/ebridge2/received_events","type":"User","site_admin":false},"labels":[{"id":1048646805,"node_id":"MDU6TGFiZWwxMDQ4NjQ2ODA1","url":"https://api.github.com/repos/microsoft/graspologic/labels/bug","name":"bug","color":"cded2d","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-21T18:40:11Z","updated_at":"2022-07-21T18:41:44Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"## Expected Behavior\r\n\r\nwhen computing a subgraph, ties are randomly broken.\r\n\r\n## Actual Behavior\r\n\r\nThe code is fairly opaque to me relative the \"traditional\" algorithms for solving signal subgraph, I'm sure they are great/way faster than how I would have implemented, but I can't *totally* follow exactly what's going on so I can't pinpoint specific lines. However, when ties are experienced in rankings, they should be *randomly* broken, not broken according to the metric that numpy uses (usually, lowest according to the datatype being ranked, to my knowledge). As far as I can tell, every sory/argsort/minimum/maximum called in the code uses the bare-bones numpy defaults for breaking ties, which is incorrect. \r\n\r\nSuggested (potential) fix: write an implementation that uses scipy stats rankdata instead, use method to break ties as the average, and then use the number of tied entries for a particular duplicated value to obtain the \"value range\" that the tied entries would encompass. Then, just use numpy random choice to select from that value range without replacement and at random to reassign \"randomly broken\" ties. Alternatively, for every sort called, instead start by randomly reassigning positions, then do the sort/minimum/maximum/etc. (which will break ties in order of appearance, which is now random), and then find the mapping from initial appearance to randomly resorted appearance and then sort the initial array using the double mapping.\r\n\r\n## Any other information?\r\n\r\nThe procedures employed are not statistically principled. ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/microsoft/graspologic/issues/977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/graspologic/issues/977/timeline","performed_via_github_app":null,"state_reason":null}