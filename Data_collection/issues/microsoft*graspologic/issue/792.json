{"url":"https://api.github.com/repos/microsoft/graspologic/issues/792","repository_url":"https://api.github.com/repos/microsoft/graspologic","labels_url":"https://api.github.com/repos/microsoft/graspologic/issues/792/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/graspologic/issues/792/comments","events_url":"https://api.github.com/repos/microsoft/graspologic/issues/792/events","html_url":"https://github.com/microsoft/graspologic/issues/792","id":899063268,"node_id":"MDU6SXNzdWU4OTkwNjMyNjg=","number":792,"title":"Graph matching code structure discussion","user":{"login":"bdpedigo","id":25714207,"node_id":"MDQ6VXNlcjI1NzE0MjA3","avatar_url":"https://avatars.githubusercontent.com/u/25714207?v=4","gravatar_id":"","url":"https://api.github.com/users/bdpedigo","html_url":"https://github.com/bdpedigo","followers_url":"https://api.github.com/users/bdpedigo/followers","following_url":"https://api.github.com/users/bdpedigo/following{/other_user}","gists_url":"https://api.github.com/users/bdpedigo/gists{/gist_id}","starred_url":"https://api.github.com/users/bdpedigo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdpedigo/subscriptions","organizations_url":"https://api.github.com/users/bdpedigo/orgs","repos_url":"https://api.github.com/users/bdpedigo/repos","events_url":"https://api.github.com/users/bdpedigo/events{/privacy}","received_events_url":"https://api.github.com/users/bdpedigo/received_events","type":"User","site_admin":false},"labels":[{"id":1048646807,"node_id":"MDU6TGFiZWwxMDQ4NjQ2ODA3","url":"https://api.github.com/repos/microsoft/graspologic/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2056288592,"node_id":"MDU6TGFiZWwyMDU2Mjg4NTky","url":"https://api.github.com/repos/microsoft/graspologic/labels/graph%20matching","name":"graph matching","color":"9458d3","default":false,"description":""},{"id":2449973732,"node_id":"MDU6TGFiZWwyNDQ5OTczNzMy","url":"https://api.github.com/repos/microsoft/graspologic/labels/discussion","name":"discussion","color":"4267b7","default":false,"description":"graspologic team discussion"}],"state":"closed","locked":false,"assignee":{"login":"bdpedigo","id":25714207,"node_id":"MDQ6VXNlcjI1NzE0MjA3","avatar_url":"https://avatars.githubusercontent.com/u/25714207?v=4","gravatar_id":"","url":"https://api.github.com/users/bdpedigo","html_url":"https://github.com/bdpedigo","followers_url":"https://api.github.com/users/bdpedigo/followers","following_url":"https://api.github.com/users/bdpedigo/following{/other_user}","gists_url":"https://api.github.com/users/bdpedigo/gists{/gist_id}","starred_url":"https://api.github.com/users/bdpedigo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdpedigo/subscriptions","organizations_url":"https://api.github.com/users/bdpedigo/orgs","repos_url":"https://api.github.com/users/bdpedigo/repos","events_url":"https://api.github.com/users/bdpedigo/events{/privacy}","received_events_url":"https://api.github.com/users/bdpedigo/received_events","type":"User","site_admin":false},"assignees":[{"login":"bdpedigo","id":25714207,"node_id":"MDQ6VXNlcjI1NzE0MjA3","avatar_url":"https://avatars.githubusercontent.com/u/25714207?v=4","gravatar_id":"","url":"https://api.github.com/users/bdpedigo","html_url":"https://github.com/bdpedigo","followers_url":"https://api.github.com/users/bdpedigo/followers","following_url":"https://api.github.com/users/bdpedigo/following{/other_user}","gists_url":"https://api.github.com/users/bdpedigo/gists{/gist_id}","starred_url":"https://api.github.com/users/bdpedigo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdpedigo/subscriptions","organizations_url":"https://api.github.com/users/bdpedigo/orgs","repos_url":"https://api.github.com/users/bdpedigo/repos","events_url":"https://api.github.com/users/bdpedigo/events{/privacy}","received_events_url":"https://api.github.com/users/bdpedigo/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-05-23T17:00:11Z","updated_at":"2022-08-30T17:59:24Z","closed_at":"2022-08-30T17:59:24Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"## Is your feature request related to a problem? Please describe.\r\n- Graph matching code is great as is if just following FAQ/SGM exactly\r\n- I'd like to generalize the code to a few very similar but distinct use cases, for example: \r\n   - Be able to handle multigraphs\r\n   - Bilateral graph matching (use connections between the two subgraphs in addition to the subgraphs themselves)\r\n   - Hard grouped graph matching (restrict matching to only permute nodes within a pre-defined labeled group)\r\n   - Soft grouped graph matching (initialize GM based on the \"groupycenter\" defined by some known labels, and/or use a label-defined similarity matrix)\r\n      - This one requires the least modification to the current code but I thought I'd include while we're talking about use cases\r\n   - GOAT\r\n   - I'm sure we will come up with more in the future...\r\n\r\n## Describe the solution you'd like\r\nI think the code could be more readable and easier to modify for these special cases if we did the following. \r\n\r\n1. Rewrite the main Franke-Wolfe algorithm loop to operate on a private object (defined below)\r\n2. Write an class for each type of graph matching as appropriate. These classes should likely stay private, but I think they'd help organize the code. An example of the kinds of methods `_BaseFAQSolver` would have: \r\n   - `.initialize()`\r\n   - `.compute_gradient()`\r\n   - `.compute_step_size()`\r\n   - `.check_if_converged()`\r\n   - `.project_to_feasible()`\r\n\r\nI think there are several advantages to doing things this way. The main one is that for many algorithms, most things will be identical, but there will be slight changes that you want to drop in. As an example, if you want to implement GOAT, all you'd have to do is write a new class that inherits from an old one, and just modify the `compute_gradient()` function. If you want to implement bilateral, you just need to change `.compute_gradient()` and `compute_step_size()`. For soft grouped matching, just change `initialize()`. Hard grouped matching would probably just be a for loop around one of the existing methods. \r\n\r\nNote that these are all internal implementation decisions the user never needs to see/care about \r\n\r\n## Additional context\r\nVery related to #762, again, to implement that you could mostly modify the `compute_gradient` and `compute_step_size` in the base class.\r\n\r\n\r\n@asaadeldin11 thoughts? ","closed_by":{"login":"bdpedigo","id":25714207,"node_id":"MDQ6VXNlcjI1NzE0MjA3","avatar_url":"https://avatars.githubusercontent.com/u/25714207?v=4","gravatar_id":"","url":"https://api.github.com/users/bdpedigo","html_url":"https://github.com/bdpedigo","followers_url":"https://api.github.com/users/bdpedigo/followers","following_url":"https://api.github.com/users/bdpedigo/following{/other_user}","gists_url":"https://api.github.com/users/bdpedigo/gists{/gist_id}","starred_url":"https://api.github.com/users/bdpedigo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdpedigo/subscriptions","organizations_url":"https://api.github.com/users/bdpedigo/orgs","repos_url":"https://api.github.com/users/bdpedigo/repos","events_url":"https://api.github.com/users/bdpedigo/events{/privacy}","received_events_url":"https://api.github.com/users/bdpedigo/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/microsoft/graspologic/issues/792/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/graspologic/issues/792/timeline","performed_via_github_app":null,"state_reason":"completed"}