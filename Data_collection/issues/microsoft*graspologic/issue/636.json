{"url":"https://api.github.com/repos/microsoft/graspologic/issues/636","repository_url":"https://api.github.com/repos/microsoft/graspologic","labels_url":"https://api.github.com/repos/microsoft/graspologic/issues/636/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/graspologic/issues/636/comments","events_url":"https://api.github.com/repos/microsoft/graspologic/issues/636/events","html_url":"https://github.com/microsoft/graspologic/issues/636","id":790249306,"node_id":"MDU6SXNzdWU3OTAyNDkzMDY=","number":636,"title":"Add functionality for hierarchy/flow/ranking","user":{"login":"bdpedigo","id":25714207,"node_id":"MDQ6VXNlcjI1NzE0MjA3","avatar_url":"https://avatars.githubusercontent.com/u/25714207?v=4","gravatar_id":"","url":"https://api.github.com/users/bdpedigo","html_url":"https://github.com/bdpedigo","followers_url":"https://api.github.com/users/bdpedigo/followers","following_url":"https://api.github.com/users/bdpedigo/following{/other_user}","gists_url":"https://api.github.com/users/bdpedigo/gists{/gist_id}","starred_url":"https://api.github.com/users/bdpedigo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdpedigo/subscriptions","organizations_url":"https://api.github.com/users/bdpedigo/orgs","repos_url":"https://api.github.com/users/bdpedigo/repos","events_url":"https://api.github.com/users/bdpedigo/events{/privacy}","received_events_url":"https://api.github.com/users/bdpedigo/received_events","type":"User","site_admin":false},"labels":[{"id":1048646807,"node_id":"MDU6TGFiZWwxMDQ4NjQ2ODA3","url":"https://api.github.com/repos/microsoft/graspologic/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-01-20T19:22:25Z","updated_at":"2022-01-28T15:20:07Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Algorithms have been proposed for finding a latent ordering/hierarchy/flow through a network, which I have used in my research. A few that I don't think have implementations in standard python libraries which i have found useful:\r\n- Signal flow algorithm, here is my blog post with [notes, code, and references](https://bdpedigo.github.io/posts/2019/12/signal-flow/)\r\n   - would be good for someone to verify my implementation, as always\r\n- SpringRank algorithm, here is [code](https://github.com/LarremoreLab/SpringRank)\r\n   - does not look maintained enough for a dependency on that repo. we would probably want to ask if we can use/port their code, though it is already MIT licensed\r\n- SpringRank model estimation. Relies on the above, but with some extra steps to fit an explicit independent edge probability model much like what we have in `.models`. I have prototype code to do this, and could share if anyone is interested (but only makes sense after the above is done). \r\n- Upset minimization as described in https://bdpedigo.github.io/networks-course/ranking.html (also has more info about some of the others)\r\n\r\nIf someone is taking this on, would be good to double check that signal flow etc. is not in networkx. I am pretty sure they aren't, but still.\r\n\r\nI think it would make sense for this functionality to be a new module called `hierarchy` or `rank` or `flow`, I'm not really sure. ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/microsoft/graspologic/issues/636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/graspologic/issues/636/timeline","performed_via_github_app":null,"state_reason":null}