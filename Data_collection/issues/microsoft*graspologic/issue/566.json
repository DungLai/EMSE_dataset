{"url":"https://api.github.com/repos/microsoft/graspologic/issues/566","repository_url":"https://api.github.com/repos/microsoft/graspologic","labels_url":"https://api.github.com/repos/microsoft/graspologic/issues/566/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/graspologic/issues/566/comments","events_url":"https://api.github.com/repos/microsoft/graspologic/issues/566/events","html_url":"https://github.com/microsoft/graspologic/issues/566","id":730774333,"node_id":"MDU6SXNzdWU3MzA3NzQzMzM=","number":566,"title":"Node2Vec Enhancements","user":{"login":"daxpryce","id":899411,"node_id":"MDQ6VXNlcjg5OTQxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/899411?v=4","gravatar_id":"","url":"https://api.github.com/users/daxpryce","html_url":"https://github.com/daxpryce","followers_url":"https://api.github.com/users/daxpryce/followers","following_url":"https://api.github.com/users/daxpryce/following{/other_user}","gists_url":"https://api.github.com/users/daxpryce/gists{/gist_id}","starred_url":"https://api.github.com/users/daxpryce/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daxpryce/subscriptions","organizations_url":"https://api.github.com/users/daxpryce/orgs","repos_url":"https://api.github.com/users/daxpryce/repos","events_url":"https://api.github.com/users/daxpryce/events{/privacy}","received_events_url":"https://api.github.com/users/daxpryce/received_events","type":"User","site_admin":false},"labels":[{"id":1048646807,"node_id":"MDU6TGFiZWwxMDQ4NjQ2ODA3","url":"https://api.github.com/repos/microsoft/graspologic/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-27T20:03:45Z","updated_at":"2022-06-13T14:52:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Is your feature request related to a problem? Please describe.\r\nn2v currently behaves very differently from the rest of the embed module\r\n\r\n## Describe the solution you'd like\r\nWhile it is true that discrete `fit` and `transform` methods don't really make much sense for node2vec, it can at least implement `fit_transform` and warn or throw an error if `fit` or `transform` are called separately.\r\n\r\nIt also requires a networkx Graph, whereas we should be able to handle adjacency matrices in numpy and scipy sparse csr formats as well.\r\n\r\nLastly, none of the other embed \"functions\" (fit_transform results) return the labels array. It is going to be a requirement that our labels and our graphs match up at all times in all scenarios, up to and including nodes without any edges - that way we can rely on the natural ordering of graph to provide this label lookup vs. an explicitly returned tuple.  The alternative makes for an even worse API from the adjacency matrix perspective, so this route is being chosen instead.\r\n\r\n## Additional context\r\nThe rest of the embed module is going to have corresponding functions that encapsulate the `create AdjacencySpectralEmbed object with appropriate parameters, then call fit_transform on this graph` steps into a single function, which will be more similar to the current `node2vec_embed` function we have.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/microsoft/graspologic/issues/566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/graspologic/issues/566/timeline","performed_via_github_app":null,"state_reason":null}