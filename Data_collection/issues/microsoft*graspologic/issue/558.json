{"url":"https://api.github.com/repos/microsoft/graspologic/issues/558","repository_url":"https://api.github.com/repos/microsoft/graspologic","labels_url":"https://api.github.com/repos/microsoft/graspologic/issues/558/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/graspologic/issues/558/comments","events_url":"https://api.github.com/repos/microsoft/graspologic/issues/558/events","html_url":"https://github.com/microsoft/graspologic/issues/558","id":728442905,"node_id":"MDU6SXNzdWU3Mjg0NDI5MDU=","number":558,"title":"Create an assertions or preconditions utility module","user":{"login":"daxpryce","id":899411,"node_id":"MDQ6VXNlcjg5OTQxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/899411?v=4","gravatar_id":"","url":"https://api.github.com/users/daxpryce","html_url":"https://github.com/daxpryce","followers_url":"https://api.github.com/users/daxpryce/followers","following_url":"https://api.github.com/users/daxpryce/following{/other_user}","gists_url":"https://api.github.com/users/daxpryce/gists{/gist_id}","starred_url":"https://api.github.com/users/daxpryce/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daxpryce/subscriptions","organizations_url":"https://api.github.com/users/daxpryce/orgs","repos_url":"https://api.github.com/users/daxpryce/repos","events_url":"https://api.github.com/users/daxpryce/events{/privacy}","received_events_url":"https://api.github.com/users/daxpryce/received_events","type":"User","site_admin":false},"labels":[{"id":1048646807,"node_id":"MDU6TGFiZWwxMDQ4NjQ2ODA3","url":"https://api.github.com/repos/microsoft/graspologic/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2020-10-23T18:43:28Z","updated_at":"2021-10-19T16:50:39Z","closed_at":"2021-10-19T16:50:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Describe the solution you'd like\r\nWe do a lot of the same checks on our arguments; are you an int, are you a float, are you within a given range, etc.\r\n\r\nIt makes sense to write a function that will check this once and call it rather than write\r\n```python\r\nif not isinstance(foo, int):\r\n  raise TypeError(\"Mr. T: Where's my int, foo\")\r\nif foo is not in range(low, high):\r\n  raise ValueError(\"This is outside of the range we expect\")\r\n```\r\n\r\n## Describe alternatives you've considered\r\nContinue writing all of the same code we always have.\r\n","closed_by":{"login":"daxpryce","id":899411,"node_id":"MDQ6VXNlcjg5OTQxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/899411?v=4","gravatar_id":"","url":"https://api.github.com/users/daxpryce","html_url":"https://github.com/daxpryce","followers_url":"https://api.github.com/users/daxpryce/followers","following_url":"https://api.github.com/users/daxpryce/following{/other_user}","gists_url":"https://api.github.com/users/daxpryce/gists{/gist_id}","starred_url":"https://api.github.com/users/daxpryce/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daxpryce/subscriptions","organizations_url":"https://api.github.com/users/daxpryce/orgs","repos_url":"https://api.github.com/users/daxpryce/repos","events_url":"https://api.github.com/users/daxpryce/events{/privacy}","received_events_url":"https://api.github.com/users/daxpryce/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/microsoft/graspologic/issues/558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/graspologic/issues/558/timeline","performed_via_github_app":null,"state_reason":"completed"}