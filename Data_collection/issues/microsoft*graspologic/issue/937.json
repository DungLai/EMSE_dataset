{"url":"https://api.github.com/repos/microsoft/graspologic/issues/937","repository_url":"https://api.github.com/repos/microsoft/graspologic","labels_url":"https://api.github.com/repos/microsoft/graspologic/issues/937/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/graspologic/issues/937/comments","events_url":"https://api.github.com/repos/microsoft/graspologic/issues/937/events","html_url":"https://github.com/microsoft/graspologic/issues/937","id":1177595626,"node_id":"I_kwDOCM7Erc5GMK7q","number":937,"title":"[BUG] VNviaSGM doesn't seem to work with the paper example","user":{"login":"ebridge2","id":8883547,"node_id":"MDQ6VXNlcjg4ODM1NDc=","avatar_url":"https://avatars.githubusercontent.com/u/8883547?v=4","gravatar_id":"","url":"https://api.github.com/users/ebridge2","html_url":"https://github.com/ebridge2","followers_url":"https://api.github.com/users/ebridge2/followers","following_url":"https://api.github.com/users/ebridge2/following{/other_user}","gists_url":"https://api.github.com/users/ebridge2/gists{/gist_id}","starred_url":"https://api.github.com/users/ebridge2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebridge2/subscriptions","organizations_url":"https://api.github.com/users/ebridge2/orgs","repos_url":"https://api.github.com/users/ebridge2/repos","events_url":"https://api.github.com/users/ebridge2/events{/privacy}","received_events_url":"https://api.github.com/users/ebridge2/received_events","type":"User","site_admin":false},"labels":[{"id":1048646805,"node_id":"MDU6TGFiZWwxMDQ4NjQ2ODA1","url":"https://api.github.com/repos/microsoft/graspologic/labels/bug","name":"bug","color":"cded2d","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-03-23T04:54:46Z","updated_at":"2022-03-23T04:55:59Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"## Expected Behavior\r\n\r\nThe example in the paper involves finding nominees for a node in G1 amongst nodes in G2, where n1 > n2. When I construct an example that does approximately this:\r\n\r\n```\r\nfrom graspologic.simulations import er_np\r\n\r\nnsoc = 50\r\np = 0.5\r\nAsoc = er_np(nsoc, p)\r\n\r\nimport numpy as np\r\n# pick 40 students at random from the original network\r\n# as your seeds\r\nnsurvey = 40\r\n# choose the nodes that you have survey data for\r\nnodes_matched = np.sort(np.random.choice(nsoc, size=nsurvey, replace=False))\r\n# copy over the corresponding subnetwork induced by nodes_matched\r\nAsoc_ss = Asoc[nodes_matched,:][:,nodes_matched]\r\n\r\n# remove 50% of the edges at random\r\n# create a mask for upper triangle\r\nutri_mask = np.zeros((nsurvey, nsurvey), dtype=bool)\r\nutri_mask[np.triu_indices(nsurvey, k=1)] = True\r\n# compute nnz edges\r\nAsoc_ss[~utri_mask] = 0\r\nnnz = Asoc_ss.sum()\r\n# choose the 50% of edges to remain\r\nnz_edges = np.nonzero(Asoc_ss)\r\nretain_edges = np.random.choice(nz_edges[1].shape[0], size=int(np.floor(0.5*nnz)),\r\n                                replace=False)\r\n\r\nAsurvey = np.zeros((nsurvey, nsurvey))\r\nAsurvey[nz_edges[0][retain_edges], nz_edges[1][retain_edges]] = 1\r\n# symmetrize\r\nAsurvey = Asurvey + Asurvey.T\r\n\r\nnvois = 1\r\nnp.random.seed(1234)\r\n# pick a voi randomly from the nodes which have a matching pair in the survey\r\n# and exclude the seed nodes\r\nsoc_nodes_nonseeds = nodes_matched[~np.in1d(nodes_matched, seeds_soc)]\r\nvoi = np.random.choice(soc_nodes_nonseeds, size=nvois, replace=False)[0]\r\n\r\nfrom graspologic.nominate import VNviaSGM\r\n\r\nvn_sgm = VNviaSGM(graph_match_kws = {'padding': 'adopted'})\r\n\r\nnominees = vn_sgm.fit_predict(Asoc, Asurvey, int(voi), [seeds_soc, seeds_survey])\r\n```\r\n\r\nI get an error:\r\n\r\n```---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-78-49460625578b> in <module>\r\n      3 vn_sgm = VNviaSGM(graph_match_kws = {'padding': 'adopted'})\r\n      4 \r\n----> 5 nominees = vn_sgm.fit_predict(Asoc, Asurvey, int(voi), [seeds_soc, seeds_survey])\r\n\r\n~/.virtualenvs/graph-book/lib/python3.8/site-packages/graspologic/nominate/VNviaSGM.py in fit_predict(self, A, B, voi, seeds)\r\n    350             The nomination list.\r\n    351         \"\"\"\r\n--> 352         self.fit(A, B, voi, seeds)\r\n    353 \r\n    354         return self.nomination_list_\r\n\r\n~/.virtualenvs/graph-book/lib/python3.8/site-packages/graspologic/nominate/VNviaSGM.py in fit(self, A, B, voi, seeds)\r\n    310         # include the seeds, so we must remove them from b_inds. Return a list\r\n    311         # sorted so it returns the vertex with the highest probability first.\r\n--> 312         nomination_list_ = np.dstack((b_inds[self.n_seeds_ :], prob_vector))[0]\r\n    313         nomination_list_ = nomination_list_[nomination_list_[:, 1].argsort()][::-1]\r\n    314 \r\n\r\n<__array_function__ internals> in dstack(*args, **kwargs)\r\n\r\n~/.virtualenvs/graph-book/lib/python3.8/site-packages/numpy/lib/shape_base.py in dstack(tup)\r\n    721     if not isinstance(arrs, list):\r\n    722         arrs = [arrs]\r\n--> 723     return _nx.concatenate(arrs, 2)\r\n    724 \r\n    725 \r\n\r\n<__array_function__ internals> in concatenate(*args, **kwargs)\r\n\r\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 23 and the array at index 1 has size 42\r\n```\r\n\r\nWhen I flip the networks around, this error goes away, so my guess is there is some bug with respect to how padded nodes are handled.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/microsoft/graspologic/issues/937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/graspologic/issues/937/timeline","performed_via_github_app":null,"state_reason":null}