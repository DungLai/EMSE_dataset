{"url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/229","repository_url":"https://api.github.com/repos/iperov/DeepFaceLab","labels_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/229/labels{/name}","comments_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/229/comments","events_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/229/events","html_url":"https://github.com/iperov/DeepFaceLab/issues/229","id":431520655,"node_id":"MDU6SXNzdWU0MzE1MjA2NTU=","number":229,"title":"Separating expression from pose","user":{"login":"spiegelball","id":25506242,"node_id":"MDQ6VXNlcjI1NTA2MjQy","avatar_url":"https://avatars.githubusercontent.com/u/25506242?v=4","gravatar_id":"","url":"https://api.github.com/users/spiegelball","html_url":"https://github.com/spiegelball","followers_url":"https://api.github.com/users/spiegelball/followers","following_url":"https://api.github.com/users/spiegelball/following{/other_user}","gists_url":"https://api.github.com/users/spiegelball/gists{/gist_id}","starred_url":"https://api.github.com/users/spiegelball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spiegelball/subscriptions","organizations_url":"https://api.github.com/users/spiegelball/orgs","repos_url":"https://api.github.com/users/spiegelball/repos","events_url":"https://api.github.com/users/spiegelball/events{/privacy}","received_events_url":"https://api.github.com/users/spiegelball/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-04-10T13:59:42Z","updated_at":"2019-04-10T18:58:07Z","closed_at":"2019-04-10T18:58:07Z","author_association":"NONE","active_lock_reason":null,"body":"Hey.\r\nI don't know much about ML but I got an idea on how to train model for avatar mode.\r\n\r\nLet SRC be an image from source dataset and DST be an image from destination dataset. ROT(IMAGE) is a vector (pitch, yaw) with the rotational information of the image (can be computed via facial landmarks). We also have an encoder FEATURE = ENC(IMAGE, ROT) which brings an image and pose of face into feature space. The decoders DEC_SRC(FEATURE) and DEC_DST go from feature space to (IMAGE_PRED, ROT_PRED) by first reconstructing the image with a CNN cascade and computing ROT_PRED = ROT(IMAGE_PRED).\r\n\r\nThe dense layers in the encoder are fed with the result of the convolution cascade AND the ROT vector.\r\n\r\nDuring training we minimize the error of:\r\n- DEC_SRC(ENC(SRC, ROT(SRC))) compared with SRC for SRC images in batch\r\n- DEC_DST(ENC(DST, ROT(DST))) compared with DST for DST images in batch\r\n- ROT(DEC_DST(ENC(SRC, ROT(DST)))) compared with ROT(DST) for SRC AND DST from batch. This step can only done after a few thousand epochs when predicted face is clear enough for landmark detector to calculate rotation values.\r\n\r\nIdea is, not only to train SRC and DST autoencoders, but also to learn to change pitch and yaw of predicted faces. This way during converting we can feed model with SRC image and ROT(DST) to produce an DST image with correct pitch and yaw values.","closed_by":{"login":"iperov","id":8076202,"node_id":"MDQ6VXNlcjgwNzYyMDI=","avatar_url":"https://avatars.githubusercontent.com/u/8076202?v=4","gravatar_id":"","url":"https://api.github.com/users/iperov","html_url":"https://github.com/iperov","followers_url":"https://api.github.com/users/iperov/followers","following_url":"https://api.github.com/users/iperov/following{/other_user}","gists_url":"https://api.github.com/users/iperov/gists{/gist_id}","starred_url":"https://api.github.com/users/iperov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iperov/subscriptions","organizations_url":"https://api.github.com/users/iperov/orgs","repos_url":"https://api.github.com/users/iperov/repos","events_url":"https://api.github.com/users/iperov/events{/privacy}","received_events_url":"https://api.github.com/users/iperov/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/229/timeline","performed_via_github_app":null,"state_reason":"completed"}