{"url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5397","repository_url":"https://api.github.com/repos/iperov/DeepFaceLab","labels_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5397/labels{/name}","comments_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5397/comments","events_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5397/events","html_url":"https://github.com/iperov/DeepFaceLab/issues/5397","id":1002419234,"node_id":"I_kwDOCBuapc47v7Qi","number":5397,"title":"Extraction workflow, script data_src util add landmarks debug images and manual_output_debug_fix","user":{"login":"berniejeromski","id":91125924,"node_id":"MDQ6VXNlcjkxMTI1OTI0","avatar_url":"https://avatars.githubusercontent.com/u/91125924?v=4","gravatar_id":"","url":"https://api.github.com/users/berniejeromski","html_url":"https://github.com/berniejeromski","followers_url":"https://api.github.com/users/berniejeromski/followers","following_url":"https://api.github.com/users/berniejeromski/following{/other_user}","gists_url":"https://api.github.com/users/berniejeromski/gists{/gist_id}","starred_url":"https://api.github.com/users/berniejeromski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/berniejeromski/subscriptions","organizations_url":"https://api.github.com/users/berniejeromski/orgs","repos_url":"https://api.github.com/users/berniejeromski/repos","events_url":"https://api.github.com/users/berniejeromski/events{/privacy}","received_events_url":"https://api.github.com/users/berniejeromski/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-09-21T12:50:52Z","updated_at":"2022-02-24T01:49:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Expected behavior\r\nI expect that I could generate debug images in a way that it will be useful for manual_output_debug_fix.\r\nIt is not clear to me why normal extraction creates debug folder while creating debug images is not using same approach.\r\n\r\n## Actual behavior\r\n_4) data_src faceset extract.bat_ creates debug directory on the same level as aligned directory\r\n_4.2) data_src util add landmarks debug images.bat_ creates images in aligned folder with a debug prefix, which seems to be not usable with manual_output_debug_fix\r\n\r\n## Steps to reproduce\r\nrun _4.2) data_src util add landmarks debug images.bat_\r\nuse modified _5) data_dst faceset MANUAL RE-EXTRACT DELETED ALIGNED_DEBUG.bat_ for src data\r\n\r\n## Other relevant information\r\nWindows\r\nDeepFaceLab_NVIDIA_RTX3000_series_build_09_06_2021\r\n\r\n## Additional note\r\nRegarding extraction in general, readme says faceswap stayed in the past. Well there are a few things which were nice:\r\nI recall some GUI tool, probably related to faceswap, which was used for easy extracted alignments management. It is similar to manual extraction editor, though it had nice options to jump to next missing alignment or find alignments with multiple faces and so on (without sorting)\r\n\r\nI am not an expert, but I think it would be convenient to have single folder with frames which I could simply reuse to generate alignments whenever necessary (only for the new frames):\r\n\r\n- extract alignment from frames, only for the ones missing in alignments\r\n- delete weird, wrongly extracted alignments\r\n- extract manually missing alignments (as clearly they failed for the first time hence alignment removal)\r\n\r\nif the result is fine:\r\n- do faces processing, remove aligned which are not useful\r\n- remove frames or somehow mark them as not useful to avoid extracting again useless data\r\n\r\nLooks like now:\r\n- I need to generate debug folder, while I think it is probably possible to do it on flight in GUI (probably faceswap did this), if I clearly see that alignment is wrong right away I dont need to fiddle with debug, but for current use I would have to delete debug anyway\r\n- if I didnt create debugs and I would like to create them, the existing script will create files in aligned directory which are not used for manual extraction fix\r\n- I cannot automatically generate alignments for missing files. Continue seems to continue from n-th index (-128 actually, not sure why, -1 would work also it seems), instead of looking for missing files. Right now when new frames are added to source, it is messy. For small data sets, it simply wants to create alignments again.\r\n\r\nI am not sure whether it is a part of design, but coulndt we change this in Extractor.py:\r\n\r\ninput_image_paths = input_image_paths[ [ Path(x).stem for x in input_image_paths ].index ( Path(output_images_paths[**-128**]).stem.split('_')[0] ) : ]\r\n\r\nto\r\ninput_image_paths = input_image_paths[ [ Path(x).stem for x in input_image_paths ].index ( Path(output_images_paths[**-1**]).stem.split('_')[0] ) : ]\r\n\r\nor actually use:\r\nDeletedFilesSearcherSubprocessor\r\nto only re-extract missing faces automatically in case you added some source files\r\n\r\nI think that would simplify growing data sets and having multiple source files\r\n\r\nThen user could do, possibly under option:\r\n- add new files to frames, and generate only the new alignments automatically, regardless of frames count\r\n- remove alignments which seem to be wrong, and do manual fix only for the missing alignments (not even debug, as preview of alignments could be created on flight in editor)\r\n\r\nUpdate for the last part: seems like MVE addresses some of the issues mentioned above, so if MVE + DFL is expected to be the future then this topic might be less important\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5397/timeline","performed_via_github_app":null,"state_reason":null}