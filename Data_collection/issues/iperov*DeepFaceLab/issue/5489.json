{"url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5489","repository_url":"https://api.github.com/repos/iperov/DeepFaceLab","labels_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5489/labels{/name}","comments_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5489/comments","events_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5489/events","html_url":"https://github.com/iperov/DeepFaceLab/issues/5489","id":1159485590,"node_id":"I_kwDOCBuapc5FHFiW","number":5489,"title":"Error when trying to utilise existing models/pre-trained models","user":{"login":"Loz13","id":46567610,"node_id":"MDQ6VXNlcjQ2NTY3NjEw","avatar_url":"https://avatars.githubusercontent.com/u/46567610?v=4","gravatar_id":"","url":"https://api.github.com/users/Loz13","html_url":"https://github.com/Loz13","followers_url":"https://api.github.com/users/Loz13/followers","following_url":"https://api.github.com/users/Loz13/following{/other_user}","gists_url":"https://api.github.com/users/Loz13/gists{/gist_id}","starred_url":"https://api.github.com/users/Loz13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Loz13/subscriptions","organizations_url":"https://api.github.com/users/Loz13/orgs","repos_url":"https://api.github.com/users/Loz13/repos","events_url":"https://api.github.com/users/Loz13/events{/privacy}","received_events_url":"https://api.github.com/users/Loz13/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-03-04T10:24:15Z","updated_at":"2022-03-25T11:14:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I've searched through the forums and numerous fixes for at least 6 hours without luck.... here's the issue\r\n\r\nI can successfully train a new SAEHD model, however, whenever I try to use existing models or pre-trained models, it says 2 root errors found. I have tried the following fixes but issue still pertains:\r\n\r\n- Used a range of other pre-trained or trained models including:\r\n         ->https://github.com/iperov/DeepFaceLab/releases/tag/DF.wf.288res.384.92.72.22\r\n         ->https://mrdeepfakes.com/forums/thread-sharing-dfl-2-0-saehd-models\r\n- Downloading fresh version of the 20.11.2021 RTX3000 series, I have a RTX3070 Ti\r\n- Turned on \"hardware-accelerated GPU scheduling\" in windows\r\n- made a change to line in \"$HOME/DeepFaceLab_Linux/DeepFaceLab/core/imagelib/warp.py\"\r\n   Original line:\r\n      random_transform_mat = cv2.getRotationMatrix2D((w // 2, w // 2), rotation, scale)\r\n   Updated line that now allows me to train via SAEHD without issue:\r\n      random_transform_mat = cv2.getRotationMatrix2D((int(w // 2), int(w // 2)), rotation, scale)\r\n\r\nGreat thanks in advance and let me know if I missed any details....\r\n\r\n==================== Model Summary ====================\r\n==                                                   ==\r\n==            Model name: DF-UD448_SAEHD             ==\r\n==                                                   ==\r\n==     Current iteration: 248471                     ==\r\n==                                                   ==\r\n==------------------ Model Options ------------------==\r\n==                                                   ==\r\n==            resolution: 448                        ==\r\n==             face_type: wf                         ==\r\n==     models_opt_on_gpu: True                       ==\r\n==                 archi: df-ud                      ==\r\n==               ae_dims: 256                        ==\r\n==                e_dims: 64                         ==\r\n==                d_dims: 64                         ==\r\n==           d_mask_dims: 22                         ==\r\n==       masked_training: True                       ==\r\n==           uniform_yaw: True                       ==\r\n==            lr_dropout: n                          ==\r\n==           random_warp: True                       ==\r\n==             gan_power: 0.0                        ==\r\n==       true_face_power: 0.0                        ==\r\n==      face_style_power: 0.0                        ==\r\n==        bg_style_power: 0.0                        ==\r\n==               ct_mode: none                       ==\r\n==              clipgrad: False                      ==\r\n==              pretrain: False                      ==\r\n==       autobackup_hour: 0                          ==\r\n== write_preview_history: False                      ==\r\n==           target_iter: 0                          ==\r\n==           random_flip: False                      ==\r\n==            batch_size: 8                          ==\r\n==       eyes_mouth_prio: False                      ==\r\n==         blur_out_mask: False                      ==\r\n==             adabelief: True                       ==\r\n==      random_hsv_power: 0.0                        ==\r\n==       random_src_flip: False                      ==\r\n==       random_dst_flip: True                       ==\r\n==        gan_patch_size: 56                         ==\r\n==              gan_dims: 16                         ==\r\n==                                                   ==\r\n==------------------- Running On --------------------==\r\n==                                                   ==\r\n==          Device index: 0                          ==\r\n==                  Name: NVIDIA GeForce RTX 3070 Ti ==\r\n==                  VRAM: 5.34GB                     ==\r\n==                                                   ==\r\n=======================================================\r\n\r\n\r\nStarting. Press \"Enter\" to stop training and save model.\r\nError: 2 root error(s) found.\r\n  (0) Resource exhausted: OOM when allocating tensor with shape[1024,116,116] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[node Pad_7 (defined at C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\layers\\Conv2D.py:87) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n         [[concat_5/concat/_465]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n  (1) Resource exhausted: OOM when allocating tensor with shape[1024,116,116] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[node Pad_7 (defined at C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\layers\\Conv2D.py:87) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n0 successful operations.\r\n0 derived errors ignored.\r\n\r\nErrors may have originated from an input operation.\r\nInput Source operations connected to node Pad_7:\r\n LeakyRelu_6 (defined at C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py:29)\r\n\r\nInput Source operations connected to node Pad_7:\r\n LeakyRelu_6 (defined at C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py:29)\r\n\r\nOriginal stack trace for 'Pad_7':\r\n  File \"threading.py\", line 884, in _bootstrap\r\n  File \"threading.py\", line 916, in _bootstrap_inner\r\n  File \"threading.py\", line 864, in run\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\mainscripts\\Trainer.py\", line 58, in trainerThread\r\n    debug=debug)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\models\\ModelBase.py\", line 193, in __init__\r\n    self.on_initialize()\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py\", line 408, in on_initialize\r\n    gpu_dst_code     = self.inter(self.encoder(gpu_warped_dst))\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 119, in forward\r\n    x = self.down1(x)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 63, in forward\r\n    x = down(x)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 43, in forward\r\n    x = self.conv1(x)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\layers\\LayerBase.py\", line 14, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\layers\\Conv2D.py\", line 87, in forward\r\n    x = tf.pad (x, padding, mode='CONSTANT')\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\util\\dispatch.py\", line 206, in wrapper\r\n    return target(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 3528, in pad\r\n    result = gen_array_ops.pad(tensor, paddings, name=name)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 6487, in pad\r\n    \"Pad\", input=input, paddings=paddings, name=name)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 750, in _apply_op_helper\r\n    attrs=attr_protos, op_def=op_def)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3569, in _create_op_internal\r\n    op_def=op_def)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2045, in __init__\r\n    self._traceback = tf_stack.extract_stack_for_node(self._c_op)\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1375, in _do_call\r\n    return fn(*args)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1360, in _run_fn\r\n    target_list, run_metadata)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1453, in _call_tf_sessionrun\r\n    run_metadata)\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: 2 root error(s) found.\r\n  (0) Resource exhausted: OOM when allocating tensor with shape[1024,116,116] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[{{node Pad_7}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n         [[concat_5/concat/_465]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n  (1) Resource exhausted: OOM when allocating tensor with shape[1024,116,116] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[{{node Pad_7}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n0 successful operations.\r\n0 derived errors ignored.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\mainscripts\\Trainer.py\", line 129, in trainerThread\r\n    iter, iter_time = model.train_one_iter()\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\models\\ModelBase.py\", line 474, in train_one_iter\r\n    losses = self.onTrainOneIter()\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py\", line 774, in onTrainOneIter\r\n    src_loss, dst_loss = self.src_dst_train (warped_src, target_src, target_srcm, target_srcm_em, warped_dst, target_dst, target_dstm, target_dstm_em)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py\", line 584, in src_dst_train\r\n    self.target_dstm_em:target_dstm_em,\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 968, in run\r\n    run_metadata_ptr)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1191, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1369, in _do_run\r\n    run_metadata)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1394, in _do_call\r\n    raise type(e)(node_def, op, message)  # pylint: disable=no-value-for-parameter\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: 2 root error(s) found.\r\n  (0) Resource exhausted: OOM when allocating tensor with shape[1024,116,116] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[node Pad_7 (defined at C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\layers\\Conv2D.py:87) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n         [[concat_5/concat/_465]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n  (1) Resource exhausted: OOM when allocating tensor with shape[1024,116,116] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[node Pad_7 (defined at C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\layers\\Conv2D.py:87) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\r\n\r\n0 successful operations.\r\n0 derived errors ignored.\r\n\r\nErrors may have originated from an input operation.\r\nInput Source operations connected to node Pad_7:\r\n LeakyRelu_6 (defined at C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py:29)\r\n\r\nInput Source operations connected to node Pad_7:\r\n LeakyRelu_6 (defined at C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py:29)\r\n\r\nOriginal stack trace for 'Pad_7':\r\n  File \"threading.py\", line 884, in _bootstrap\r\n  File \"threading.py\", line 916, in _bootstrap_inner\r\n  File \"threading.py\", line 864, in run\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\mainscripts\\Trainer.py\", line 58, in trainerThread\r\n    debug=debug)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\models\\ModelBase.py\", line 193, in __init__\r\n    self.on_initialize()\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py\", line 408, in on_initialize\r\n    gpu_dst_code     = self.inter(self.encoder(gpu_warped_dst))\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 119, in forward\r\n    x = self.down1(x)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 63, in forward\r\n    x = down(x)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 43, in forward\r\n    x = self.conv1(x)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\layers\\LayerBase.py\", line 14, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\DeepFaceLab\\core\\leras\\layers\\Conv2D.py\", line 87, in forward\r\n    x = tf.pad (x, padding, mode='CONSTANT')\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\util\\dispatch.py\", line 206, in wrapper\r\n    return target(*args, **kwargs)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 3528, in pad\r\n    result = gen_array_ops.pad(tensor, paddings, name=name)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 6487, in pad\r\n    \"Pad\", input=input, paddings=paddings, name=name)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 750, in _apply_op_helper\r\n    attrs=attr_protos, op_def=op_def)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3569, in _create_op_internal\r\n    op_def=op_def)\r\n  File \"C:\\Users\\Frank\\Desktop\\DeepFaceLab_NVIDIA_RTX3000_series\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2045, in __init__\r\n    self._traceback = tf_stack.extract_stack_for_node(self._c_op)`\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/5489/timeline","performed_via_github_app":null,"state_reason":null}