{"url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/950","repository_url":"https://api.github.com/repos/iperov/DeepFaceLab","labels_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/950/labels{/name}","comments_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/950/comments","events_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/950/events","html_url":"https://github.com/iperov/DeepFaceLab/issues/950","id":743912105,"node_id":"MDU6SXNzdWU3NDM5MTIxMDU=","number":950,"title":"Problem with SAEHD Windows GTX 1060","user":{"login":"danielhama","id":72997192,"node_id":"MDQ6VXNlcjcyOTk3MTky","avatar_url":"https://avatars.githubusercontent.com/u/72997192?v=4","gravatar_id":"","url":"https://api.github.com/users/danielhama","html_url":"https://github.com/danielhama","followers_url":"https://api.github.com/users/danielhama/followers","following_url":"https://api.github.com/users/danielhama/following{/other_user}","gists_url":"https://api.github.com/users/danielhama/gists{/gist_id}","starred_url":"https://api.github.com/users/danielhama/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielhama/subscriptions","organizations_url":"https://api.github.com/users/danielhama/orgs","repos_url":"https://api.github.com/users/danielhama/repos","events_url":"https://api.github.com/users/danielhama/events{/privacy}","received_events_url":"https://api.github.com/users/danielhama/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-16T15:07:23Z","updated_at":"2022-02-24T01:59:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Running trainer.\r\n\r\nChoose one of saved models, or enter a name to create a new model.\r\n[r] : rename\r\n[d] : delete\r\n\r\n[0] : new - latest\r\n : danielhf\r\ndanielhf\r\n\r\nModel first run.\r\n\r\nChoose one or several GPU idxs (separated by comma).\r\n\r\n[CPU] : CPU\r\n  [0] : GeForce GTX 1060 6GB\r\n\r\n[0] Which GPU indexes to choose? :\r\n0\r\n\r\n[0] Autobackup every N hour ( 0..24 ?:help ) :\r\n0\r\n[n] Write preview history ( y/n ?:help ) :\r\nn\r\n[0] Target iteration :\r\n0\r\n[y] Flip faces randomly ( y/n ?:help ) :\r\ny\r\n[4] Batch_size ( ?:help ) :\r\n4\r\n[288] Resolution ( 64-640 ?:help ) :\r\n288\r\n[head] Face type ( h/mf/f/wf/head ?:help ) :\r\nhead\r\n[df] AE architecture ( ?:help ) :\r\ndf\r\n[384] AutoEncoder dimensions ( 32-1024 ?:help ) :\r\n384\r\n[92] Encoder dimensions ( 16-256 ?:help ) :\r\n92\r\n[72] Decoder dimensions ( 16-256 ?:help ) :\r\n72\r\n[22] Decoder mask dimensions ( 16-256 ?:help ) :\r\n22\r\n[y] Masked training ( y/n ?:help ) :\r\ny\r\n[n] Eyes priority ( y/n ?:help ) :\r\nn\r\n[n] Uniform yaw distribution of samples ( y/n ?:help ) :\r\nn\r\n[y] Place models and optimizer on GPU ( y/n ?:help ) :\r\ny\r\n[n] Use learning rate dropout ( n/y/cpu ?:help ) :\r\nn\r\n[y] Enable random warp of samples ( y/n ?:help ) :\r\ny\r\n[0.0] GAN power ( 0.0 .. 10.0 ?:help ) :\r\n0.0\r\n[0.0] 'True face' power. ( 0.0000 .. 1.0 ?:help ) :\r\n0.0\r\n[0.0] Face style power ( 0.0..100.0 ?:help ) :\r\n0.0\r\n[0.0] Background style power ( 0.0..100.0 ?:help ) :\r\n0.0\r\n[none] Color transfer for src faceset ( none/rct/lct/mkl/idt/sot ?:help ) :\r\nnone\r\n[n] Enable gradient clipping ( y/n ?:help ) :\r\nn\r\n[n] Enable pretraining mode ( y/n ?:help ) :\r\nn\r\nInitializing models: 100%|###############################################################| 5/5 [00:43<00:00,  8.63s/it]\r\nLoading samples: 100%|###############################################################| 832/832 [00:22<00:00, 37.08it/s]\r\nLoading samples: 100%|##############################################################| 338/338 [00:02<00:00, 120.58it/s]\r\n================= Model Summary =================\r\n==                                             ==\r\n==            Model name: danielhf_SAEHD       ==\r\n==                                             ==\r\n==     Current iteration: 0                    ==\r\n==                                             ==\r\n==--------------- Model Options ---------------==\r\n==                                             ==\r\n==            resolution: 288                  ==\r\n==             face_type: head                 ==\r\n==     models_opt_on_gpu: True                 ==\r\n==                 archi: df                   ==\r\n==               ae_dims: 384                  ==\r\n==                e_dims: 92                   ==\r\n==                d_dims: 72                   ==\r\n==           d_mask_dims: 22                   ==\r\n==       masked_training: True                 ==\r\n==             eyes_prio: False                ==\r\n==           uniform_yaw: False                ==\r\n==            lr_dropout: n                    ==\r\n==           random_warp: True                 ==\r\n==             gan_power: 0.0                  ==\r\n==       true_face_power: 0.0                  ==\r\n==      face_style_power: 0.0                  ==\r\n==        bg_style_power: 0.0                  ==\r\n==               ct_mode: none                 ==\r\n==              clipgrad: False                ==\r\n==              pretrain: False                ==\r\n==       autobackup_hour: 0                    ==\r\n== write_preview_history: False                ==\r\n==           target_iter: 0                    ==\r\n==           random_flip: True                 ==\r\n==            batch_size: 4                    ==\r\n==                                             ==\r\n==---------------- Running On -----------------==\r\n==                                             ==\r\n==          Device index: 0                    ==\r\n==                  Name: GeForce GTX 1060 6GB ==\r\n==                  VRAM: 6.00GB               ==\r\n==                                             ==\r\n=================================================\r\nStarting. Press \"Enter\" to stop training and save model.\r\n\r\nTrying to do the first iteration. If an error occurs, reduce the model parameters.\r\n\r\nYou are training the model from scratch. It is strongly recommended to use a pretrained model to speed up the training and improve the quality.\r\n\r\nError: OOM when allocating tensor with shape[4,288,144,144] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[node DepthToSpace_4 (defined at E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\ops\\__init__.py:336) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n         [[node concat_1 (defined at E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py:484) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\nCaused by op 'DepthToSpace_4', defined at:\r\n  File \"threading.py\", line 884, in _bootstrap\r\n  File \"threading.py\", line 916, in _bootstrap_inner\r\n  File \"threading.py\", line 864, in run\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\mainscripts\\Trainer.py\", line 57, in trainerThread\r\n    debug=debug,\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\ModelBase.py\", line 189, in __init__\r\n    self.on_initialize()\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py\", line 337, in on_initialize\r\n    gpu_pred_src_src, gpu_pred_src_srcm = self.decoder_src(gpu_src_code)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 145, in forward\r\n    x = self.upscale1(x)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 59, in forward\r\n    x = nn.depth_to_space(x, 2)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\ops\\__init__.py\", line 336, in depth_to_space\r\n    return tf.depth_to_space(x, size, data_format=nn.data_format)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 2703, in depth_to_space\r\n    return gen_array_ops.depth_to_space(input, block_size, data_format, name=name)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 1593, in depth_to_space\r\n    data_format=data_format, name=name)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 788, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\util\\deprecation.py\", line 507, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3300, in create_op\r\n    op_def=op_def)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1801, in __init__\r\n    self._traceback = tf_stack.extract_stack()\r\n\r\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[4,288,144,144] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[node DepthToSpace_4 (defined at E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\ops\\__init__.py:336) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n         [[node concat_1 (defined at E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py:484) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1334, in _do_call\r\n    return fn(*args)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1319, in _run_fn\r\n    options, feed_dict, fetch_list, target_list, run_metadata)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1407, in _call_tf_sessionrun\r\n    run_metadata)\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[4,288,144,144] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[{{node DepthToSpace_4}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n         [[{{node concat_1}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\mainscripts\\Trainer.py\", line 123, in trainerThread\r\n    iter, iter_time = model.train_one_iter()\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\ModelBase.py\", line 462, in train_one_iter\r\n    losses = self.onTrainOneIter()\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py\", line 636, in onTrainOneIter\r\n    src_loss, dst_loss = self.src_dst_train (warped_src, target_src, target_srcm_all, warped_dst, target_dst, target_dstm_all)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py\", line 503, in src_dst_train\r\n    self.target_dstm_all:target_dstm_all,\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 929, in run\r\n    run_metadata_ptr)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1152, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1328, in _do_run\r\n    run_metadata)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1348, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[4,288,144,144] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[node DepthToSpace_4 (defined at E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\ops\\__init__.py:336) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n         [[node concat_1 (defined at E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py:484) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\nCaused by op 'DepthToSpace_4', defined at:\r\n  File \"threading.py\", line 884, in _bootstrap\r\n  File \"threading.py\", line 916, in _bootstrap_inner\r\n  File \"threading.py\", line 864, in run\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\mainscripts\\Trainer.py\", line 57, in trainerThread\r\n    debug=debug,\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\ModelBase.py\", line 189, in __init__\r\n    self.on_initialize()\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py\", line 337, in on_initialize\r\n    gpu_pred_src_src, gpu_pred_src_srcm = self.decoder_src(gpu_src_code)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 145, in forward\r\n    x = self.upscale1(x)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\models\\ModelBase.py\", line 117, in __call__\r\n    return self.forward(*args, **kwargs)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\archis\\DeepFakeArchi.py\", line 59, in forward\r\n    x = nn.depth_to_space(x, 2)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\ops\\__init__.py\", line 336, in depth_to_space\r\n    return tf.depth_to_space(x, size, data_format=nn.data_format)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 2703, in depth_to_space\r\n    return gen_array_ops.depth_to_space(input, block_size, data_format, name=name)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 1593, in depth_to_space\r\n    data_format=data_format, name=name)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 788, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\util\\deprecation.py\", line 507, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3300, in create_op\r\n    op_def=op_def)\r\n  File \"E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\python-3.6.8\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1801, in __init__\r\n    self._traceback = tf_stack.extract_stack()\r\n\r\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[4,288,144,144] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[node DepthToSpace_4 (defined at E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\core\\leras\\ops\\__init__.py:336) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n         [[node concat_1 (defined at E:\\Downloads\\DeepFaceLab\\DeepFaceLab_NVIDIA\\_internal\\DeepFaceLab\\models\\Model_SAEHD\\Model.py:484) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/iperov/DeepFaceLab/issues/950/timeline","performed_via_github_app":null,"state_reason":null}