{"url":"https://api.github.com/repos/regel/loudml/issues/299","repository_url":"https://api.github.com/repos/regel/loudml","labels_url":"https://api.github.com/repos/regel/loudml/issues/299/labels{/name}","comments_url":"https://api.github.com/repos/regel/loudml/issues/299/comments","events_url":"https://api.github.com/repos/regel/loudml/issues/299/events","html_url":"https://github.com/regel/loudml/issues/299","id":612022182,"node_id":"MDU6SXNzdWU2MTIwMjIxODI=","number":299,"title":"Running Donut generator on a hardware accelerator via onnx","user":{"login":"circleme","id":1572261,"node_id":"MDQ6VXNlcjE1NzIyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1572261?v=4","gravatar_id":"","url":"https://api.github.com/users/circleme","html_url":"https://github.com/circleme","followers_url":"https://api.github.com/users/circleme/followers","following_url":"https://api.github.com/users/circleme/following{/other_user}","gists_url":"https://api.github.com/users/circleme/gists{/gist_id}","starred_url":"https://api.github.com/users/circleme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/circleme/subscriptions","organizations_url":"https://api.github.com/users/circleme/orgs","repos_url":"https://api.github.com/users/circleme/repos","events_url":"https://api.github.com/users/circleme/events{/privacy}","received_events_url":"https://api.github.com/users/circleme/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-05-04T16:55:25Z","updated_at":"2020-05-04T16:55:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"My client wants me to demonstrate LoudML running on their existing TPA hardware for fast time-series predictions/anomaly detection.   In general, rather than running the generator in TF on a CPU, my pull request would entail an optional conversion of the generator to Onnx.  Then  proprietary code would load that onnx file to the hardware and shuffle buckets to keep up with it. I assume you would not want HW specific code cluttering up the repo - let me know if I'm mistaken.   In perfect solution, if the anomaly _rate_ reaches a threshold, a new training would commence and generate a new onnyx file which I'd automatically load on the TPA.  I have to implement the demo by the end of May .  Your inputs would be invaluable to me as I'm new to VAEs and LoudML.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/regel/loudml/issues/299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/regel/loudml/issues/299/timeline","performed_via_github_app":null,"state_reason":null}