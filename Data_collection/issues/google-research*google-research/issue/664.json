{"url":"https://api.github.com/repos/google-research/google-research/issues/664","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/664/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/664/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/664/events","html_url":"https://github.com/google-research/google-research/issues/664","id":849312147,"node_id":"MDU6SXNzdWU4NDkzMTIxNDc=","number":664,"title":"why does scann limits the number of codewords of dimension d/M?","user":{"login":"YJYJLee","id":28900943,"node_id":"MDQ6VXNlcjI4OTAwOTQz","avatar_url":"https://avatars.githubusercontent.com/u/28900943?v=4","gravatar_id":"","url":"https://api.github.com/users/YJYJLee","html_url":"https://github.com/YJYJLee","followers_url":"https://api.github.com/users/YJYJLee/followers","following_url":"https://api.github.com/users/YJYJLee/following{/other_user}","gists_url":"https://api.github.com/users/YJYJLee/gists{/gist_id}","starred_url":"https://api.github.com/users/YJYJLee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YJYJLee/subscriptions","organizations_url":"https://api.github.com/users/YJYJLee/orgs","repos_url":"https://api.github.com/users/YJYJLee/repos","events_url":"https://api.github.com/users/YJYJLee/events{/privacy}","received_events_url":"https://api.github.com/users/YJYJLee/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-02T16:15:03Z","updated_at":"2021-04-02T16:15:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Referring to the paper, it says \"With product quantization we encode each datapoint into an M dimensional codeword, each with k possible states\".\r\nHere, k directly relates to the compression rate of the dataset so I wanted to know how ScaNN's behavior differs as k varies. However, I could not find a parameter to set k and it seems like k is fixed to 16 in the code.\r\n\r\nIs there any reason why ScaNN only supports k=16? If it is, is it because to maximize the benefit of SIMD instruction?\r\nOr is there other way to adjust k?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/664/timeline","performed_via_github_app":null,"state_reason":null}