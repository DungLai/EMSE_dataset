{"url":"https://api.github.com/repos/google-research/google-research/issues/833","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/833/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/833/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/833/events","html_url":"https://github.com/google-research/google-research/issues/833","id":1007854752,"node_id":"I_kwDOCQmIhc48EqSg","number":833,"title":"representation similarity (CKA) on neural networks","user":{"login":"HarisIqbal88","id":17570785,"node_id":"MDQ6VXNlcjE3NTcwNzg1","avatar_url":"https://avatars.githubusercontent.com/u/17570785?v=4","gravatar_id":"","url":"https://api.github.com/users/HarisIqbal88","html_url":"https://github.com/HarisIqbal88","followers_url":"https://api.github.com/users/HarisIqbal88/followers","following_url":"https://api.github.com/users/HarisIqbal88/following{/other_user}","gists_url":"https://api.github.com/users/HarisIqbal88/gists{/gist_id}","starred_url":"https://api.github.com/users/HarisIqbal88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HarisIqbal88/subscriptions","organizations_url":"https://api.github.com/users/HarisIqbal88/orgs","repos_url":"https://api.github.com/users/HarisIqbal88/repos","events_url":"https://api.github.com/users/HarisIqbal88/events{/privacy}","received_events_url":"https://api.github.com/users/HarisIqbal88/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-09-27T08:28:27Z","updated_at":"2021-09-27T08:28:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\nThe CKA described [here](https://github.com/google-research/google-research/blob/master/representation_similarity/Demo.ipynb) works on n x f matrices. I am not sure how to calculate it for neural network layers. For example, if we take all elements of activation tensors as features, then the dimension would be N x (C*H*W) which is huge for working matrices to fit into memory. Other ways can be to take spatial mean(N x C) or channel mean(N x H*W). Does someone know what preprocessing is done to calculate CKA on neural network like resnets","closed_by":null,"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/833/timeline","performed_via_github_app":null,"state_reason":null}