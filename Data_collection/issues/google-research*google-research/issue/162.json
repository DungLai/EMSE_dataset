{"url":"https://api.github.com/repos/google-research/google-research/issues/162","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/162/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/162/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/162/events","html_url":"https://github.com/google-research/google-research/issues/162","id":531838076,"node_id":"MDU6SXNzdWU1MzE4MzgwNzY=","number":162,"title":"Depth from Video in the Wild fails with NaN due to CUDA bug","user":{"login":"fxtentacle","id":417520,"node_id":"MDQ6VXNlcjQxNzUyMA==","avatar_url":"https://avatars.githubusercontent.com/u/417520?v=4","gravatar_id":"","url":"https://api.github.com/users/fxtentacle","html_url":"https://github.com/fxtentacle","followers_url":"https://api.github.com/users/fxtentacle/followers","following_url":"https://api.github.com/users/fxtentacle/following{/other_user}","gists_url":"https://api.github.com/users/fxtentacle/gists{/gist_id}","starred_url":"https://api.github.com/users/fxtentacle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fxtentacle/subscriptions","organizations_url":"https://api.github.com/users/fxtentacle/orgs","repos_url":"https://api.github.com/users/fxtentacle/repos","events_url":"https://api.github.com/users/fxtentacle/events{/privacy}","received_events_url":"https://api.github.com/users/fxtentacle/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2019-12-03T09:18:46Z","updated_at":"2020-12-28T13:52:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It appears that \r\nhttps://github.com/google-research/google-research/blob/b13a2d98f590495331e27b86268b000413ecb50d/depth_from_video_in_the_wild/transform_utils.py#L111\r\ncan produce arbitrarily wrong gradients on trans_vec1 which then back-propagate to corrupt the depth estimation network with NaN weights. \r\n\r\nThe issue is caused by a `CUDA 10.0` bug https://github.com/tensorflow/tensorflow/issues/31166 which is fixed in `TF 2 nightly` by upgrading to `CUDA 10.1`, however this network requires `TF 1.x`. One workaround would be to recompile `TF 1.15` with `CUDA 10.1` or to use CPU for all calculations.\r\n\r\nBut in any case, the network as-is won't train on GPU for more than a few steps before going NaN with any released TF version. So I'm writing this issue mainly to document that for others.\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/162/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/162/timeline","performed_via_github_app":null,"state_reason":null}