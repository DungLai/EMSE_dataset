{"url":"https://api.github.com/repos/google-research/google-research/issues/23","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/23/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/23/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/23/events","html_url":"https://github.com/google-research/google-research/issues/23","id":441594935,"node_id":"MDU6SXNzdWU0NDE1OTQ5MzU=","number":23,"title":"In enas_lm model","user":{"login":"techjjun","id":37102770,"node_id":"MDQ6VXNlcjM3MTAyNzcw","avatar_url":"https://avatars.githubusercontent.com/u/37102770?v=4","gravatar_id":"","url":"https://api.github.com/users/techjjun","html_url":"https://github.com/techjjun","followers_url":"https://api.github.com/users/techjjun/followers","following_url":"https://api.github.com/users/techjjun/following{/other_user}","gists_url":"https://api.github.com/users/techjjun/gists{/gist_id}","starred_url":"https://api.github.com/users/techjjun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/techjjun/subscriptions","organizations_url":"https://api.github.com/users/techjjun/orgs","repos_url":"https://api.github.com/users/techjjun/repos","events_url":"https://api.github.com/users/techjjun/events{/privacy}","received_events_url":"https://api.github.com/users/techjjun/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-05-08T07:39:19Z","updated_at":"2020-01-29T09:24:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In the paper, they said \r\n\"For the output, we simply average all the loose ends, i.e. the nodes that are not selected as inputs to any other nodes\"\r\n\r\nhowever in the code below \r\n\r\n```\r\nnext_s = tf.add_n(layers[1:]) / tf.cast(num_layers, dtype=tf.float32)\r\nall_s = all_s.write(step, next_s)\r\n```\r\nit seems like averaging all the outputs of the nodes..\r\nIs this the right implementation?\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/23/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/23/timeline","performed_via_github_app":null,"state_reason":null}