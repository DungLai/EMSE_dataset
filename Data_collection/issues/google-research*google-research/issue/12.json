{"url":"https://api.github.com/repos/google-research/google-research/issues/12","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/12/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/12/events","html_url":"https://github.com/google-research/google-research/issues/12","id":401044705,"node_id":"MDU6SXNzdWU0MDEwNDQ3MDU=","number":12,"title":"Rouge - Handling empty last line of prediction file","user":{"login":"vidhishanair","id":3955897,"node_id":"MDQ6VXNlcjM5NTU4OTc=","avatar_url":"https://avatars.githubusercontent.com/u/3955897?v=4","gravatar_id":"","url":"https://api.github.com/users/vidhishanair","html_url":"https://github.com/vidhishanair","followers_url":"https://api.github.com/users/vidhishanair/followers","following_url":"https://api.github.com/users/vidhishanair/following{/other_user}","gists_url":"https://api.github.com/users/vidhishanair/gists{/gist_id}","starred_url":"https://api.github.com/users/vidhishanair/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vidhishanair/subscriptions","organizations_url":"https://api.github.com/users/vidhishanair/orgs","repos_url":"https://api.github.com/users/vidhishanair/repos","events_url":"https://api.github.com/users/vidhishanair/events{/privacy}","received_events_url":"https://api.github.com/users/vidhishanair/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-01-19T23:19:29Z","updated_at":"2019-05-22T23:18:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi,\r\nWhat's the best way to handle mismatched lines in source and target. Currently, the code fails on line 111:\r\n\r\n    # Check whether num_targets < num_predictions\r\n    if next(pred_gen, None) is not None or next(pred_gen, None) is not None:\r\n      raise ValueError(\"Must have equal number of lines across target and \"\r\n                       \"prediction files. Mismatch between files: %s, %s.\" %\r\n                       (target_filename, prediction_filename))\r\n\r\nMy predictions files have more sentences than the target and the pyrouge package which is built on the PERL rouge handles this without breaking. Should I be pre-processing my target files to have same no: of lines as the prediction? \r\n\r\nCan this be handled the rouge package level instead similar to the perl one?\r\nCommenting out this check leads to 10 points lower in all metrics as compares to the pyrouge outputs. \r\n\r\nLet me know if any additional code/output files are required to better understand this issue.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/12/timeline","performed_via_github_app":null,"state_reason":null}