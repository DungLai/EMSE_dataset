{"url":"https://api.github.com/repos/google-research/google-research/issues/967","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/967/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/967/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/967/events","html_url":"https://github.com/google-research/google-research/issues/967","id":1123416696,"node_id":"I_kwDOCQmIhc5C9fp4","number":967,"title":"Customize kws_streaming for single wake word detection","user":{"login":"braveheartwithlove","id":17091333,"node_id":"MDQ6VXNlcjE3MDkxMzMz","avatar_url":"https://avatars.githubusercontent.com/u/17091333?v=4","gravatar_id":"","url":"https://api.github.com/users/braveheartwithlove","html_url":"https://github.com/braveheartwithlove","followers_url":"https://api.github.com/users/braveheartwithlove/followers","following_url":"https://api.github.com/users/braveheartwithlove/following{/other_user}","gists_url":"https://api.github.com/users/braveheartwithlove/gists{/gist_id}","starred_url":"https://api.github.com/users/braveheartwithlove/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/braveheartwithlove/subscriptions","organizations_url":"https://api.github.com/users/braveheartwithlove/orgs","repos_url":"https://api.github.com/users/braveheartwithlove/repos","events_url":"https://api.github.com/users/braveheartwithlove/events{/privacy}","received_events_url":"https://api.github.com/users/braveheartwithlove/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-02-03T18:25:18Z","updated_at":"2022-02-03T20:12:02Z","closed_at":"2022-02-03T20:12:02Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, @rybakov, I am trying to do some modifications on your colab examples to test on a single wake word detection. \r\nI changed flags.wanted_words='stop' as an example, but it fails while training. Do you know what else should I change to customize it for a single wake word? Thanks!\r\n==================================================================================================\r\nTotal params: 70,139\r\nTrainable params: 68,603\r\nNon-trainable params: 1,536\r\n__________________________________________________________________________________________________\r\nINFO:absl:Training from step: 1 \r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n~\\AppData\\Local\\Temp/ipykernel_35504/211339909.py in <module>\r\n      1 # Model training\r\n----> 2 train.train(flags)\r\n\r\n~\\Desktop\\google-research\\kws_streaming\\train\\train.py in train(flags)\r\n    163 \r\n    164     tf.keras.backend.set_value(model.optimizer.lr, learning_rate_value)\r\n--> 165     result = model.train_on_batch(train_fingerprints, train_ground_truth)\r\n    166 \r\n    167     summary = tf.Summary(value=[\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training_v1.py in train_on_batch(self, x, y, sample_weight, class_weight, reset_metrics)\r\n   1074       self._update_sample_weight_modes(sample_weights=sample_weights)\r\n   1075       self._make_train_function()\r\n-> 1076       outputs = self.train_function(ins)  # pylint: disable=not-callable\r\n   1077 \r\n   1078     if reset_metrics:\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend.py in __call__(self, inputs)\r\n   4184       self._make_callable(feed_arrays, feed_symbols, symbol_vals, session)\r\n   4185 \r\n-> 4186     fetched = self._callable_fn(*array_vals,\r\n   4187                                 run_metadata=self.run_metadata)\r\n   4188     self._call_fetch_callbacks(fetched[-len(self._fetches):])\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in __call__(self, *args, **kwargs)\r\n   1481       try:\r\n   1482         run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None\r\n-> 1483         ret = tf_session.TF_SessionRunCallable(self._session._session,\r\n   1484                                                self._handle, args,\r\n   1485                                                run_metadata_ptr)\r\n\r\nInvalidArgumentError: var and m do not have the same shape[12] [3]\r\n\t [[{{node training/Adam/Adam/update_dense/bias/ResourceApplyAdam}}]]\r\n","closed_by":{"login":"braveheartwithlove","id":17091333,"node_id":"MDQ6VXNlcjE3MDkxMzMz","avatar_url":"https://avatars.githubusercontent.com/u/17091333?v=4","gravatar_id":"","url":"https://api.github.com/users/braveheartwithlove","html_url":"https://github.com/braveheartwithlove","followers_url":"https://api.github.com/users/braveheartwithlove/followers","following_url":"https://api.github.com/users/braveheartwithlove/following{/other_user}","gists_url":"https://api.github.com/users/braveheartwithlove/gists{/gist_id}","starred_url":"https://api.github.com/users/braveheartwithlove/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/braveheartwithlove/subscriptions","organizations_url":"https://api.github.com/users/braveheartwithlove/orgs","repos_url":"https://api.github.com/users/braveheartwithlove/repos","events_url":"https://api.github.com/users/braveheartwithlove/events{/privacy}","received_events_url":"https://api.github.com/users/braveheartwithlove/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/967/timeline","performed_via_github_app":null,"state_reason":"completed"}