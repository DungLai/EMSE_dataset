{"url":"https://api.github.com/repos/google-research/google-research/issues/947","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/947/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/947/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/947/events","html_url":"https://github.com/google-research/google-research/issues/947","id":1106136417,"node_id":"I_kwDOCQmIhc5B7k1h","number":947,"title":"tensorflow.keras.layers TextVectorization: adapt() with output_mode=\"tf_idf\" (GPU only) throws InvalidArgumentError: INVALID_ARGUMENT:  During Variant Host->Device Copy: non-DMA-copy attempted of tensor type: string ","user":{"login":"jmbo1190","id":62448990,"node_id":"MDQ6VXNlcjYyNDQ4OTkw","avatar_url":"https://avatars.githubusercontent.com/u/62448990?v=4","gravatar_id":"","url":"https://api.github.com/users/jmbo1190","html_url":"https://github.com/jmbo1190","followers_url":"https://api.github.com/users/jmbo1190/followers","following_url":"https://api.github.com/users/jmbo1190/following{/other_user}","gists_url":"https://api.github.com/users/jmbo1190/gists{/gist_id}","starred_url":"https://api.github.com/users/jmbo1190/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmbo1190/subscriptions","organizations_url":"https://api.github.com/users/jmbo1190/orgs","repos_url":"https://api.github.com/users/jmbo1190/repos","events_url":"https://api.github.com/users/jmbo1190/events{/privacy}","received_events_url":"https://api.github.com/users/jmbo1190/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-01-17T18:04:57Z","updated_at":"2022-05-03T14:28:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Behaviour observed with**:\r\n* Python 3.7 Tensorflow 2.6, Py 3.7 TF 2.7, Py 3.8 TF 2.7, Py 3.9.9 TF 2.7.0, \r\n* GPUs: \r\n    * GeForce GTX 1660 SUPER, compute capability: 7.5, 5944MiB, CUDA 11.2\r\n    * Tesla M60, compute capability: 5.2, 8129MiB, CUDA 11.5\r\n\r\n**Error Message**:\r\n```\r\nInvalidArgumentError: 2 root error(s) found.\r\n  (0) INVALID_ARGUMENT:  During Variant Host->Device Copy: non-DMA-copy attempted of tensor type: string\r\n\t [[{{node map/TensorArrayUnstack/TensorListFromTensor/_42}}]]\r\n\t [[map/while/loop_body_control/_21/_51]]\r\n  (1) INVALID_ARGUMENT:  During Variant Host->Device Copy: non-DMA-copy attempted of tensor type: string\r\n\t [[{{node map/TensorArrayUnstack/TensorListFromTensor/_42}}]]\r\n0 successful operations.\r\n0 derived errors ignored. [Op:__inference_adapt_step_1288]\r\n\r\nFunction call stack:\r\nadapt_step -> adapt_step\r\n```\r\n**ReprEx**:\r\n```\r\nimport os, pathlib\r\nimport tensorflow as tf\r\nfrom tensorflow import keras\r\n\r\nbase_dir = pathlib.Path(\"RepRex\")\r\nos.makedirs(base_dir / \"neg\", exist_ok = True)\r\nos.makedirs(base_dir / \"pos\", exist_ok = True)\r\n\r\nwith open(base_dir / \"pos\" / \"sample1.txt\", \"w\") as f:\r\n    f.write(\"The food was excellent.\\n\")\r\n\r\nwith open(base_dir / \"neg\" / \"sample1.txt\", \"w\") as f:\r\n    f.write(\"The wine was awful, we will never go to that place again.\\n\")\r\n\r\n\r\nbatch_size = 2\r\nds = keras.utils.text_dataset_from_directory(\"RepRex\", batch_size=batch_size)\r\ntext_only_ds = ds.map(lambda x, y: x)   # Prepare a dataset that only yields raw text inputs (no labels).\r\n\r\ntext_vectorization = keras.layers.TextVectorization(max_tokens=20000, output_mode=\"tf_idf\")\r\nprint(\"Running adapt() with 'tf_idf' on CPU\") # ok\r\nwith tf.device('/cpu:0'):\r\n    text_vectorization.adapt(text_only_ds)  \r\n    \r\ntext_vectorization2 = keras.layers.TextVectorization(max_tokens=20000, output_mode=\"count\")\r\nprint(\"Running adapt() with 'count' on GPU\") # ok\r\nwith tf.device('/gpu:0'):\r\n    text_vectorization2.adapt(text_only_ds)  \r\n\r\ntext_vectorization3 = keras.layers.TextVectorization(max_tokens=20000, output_mode= \"multi_hot\")\r\nprint(\"Running adapt() with 'multi_hot' on GPU\") # ok\r\nwith tf.device('/gpu:0'):\r\n    text_vectorization3.adapt(text_only_ds)  \r\n\r\ntext_vectorization4 = keras.layers.TextVectorization(max_tokens=20000, output_mode=\"tf_idf\")\r\nprint(\"Running adapt() with 'tf_idf' on GPU\") # error\r\nwith tf.device('/gpu:0'):\r\n    text_vectorization4.adapt(text_only_ds)  \r\n \r\n```\r\n\r\n** ReprEx output**:\r\n```\r\nFound 2 files belonging to 2 classes.\r\nRunning adapt() with 'tf_idf' on CPU\r\nRunning adapt() with 'count' on GPU\r\nWARNING:tensorflow:5 out of the last 5 calls to <function PreprocessingLayer.make_adapt_function.<locals>.adapt_step at 0x7fe5d80cec10> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\r\nRunning adapt() with 'multi_hot' on GPU\r\nWARNING:tensorflow:6 out of the last 6 calls to <function PreprocessingLayer.make_adapt_function.<locals>.adapt_step at 0x7fe5d80ceaf0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\r\nRunning adapt() with 'tf_idf' on GPU\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n/tmp/ipykernel_610484/3457753437.py in <module>\r\n     37 print(\"Running adapt() with 'tf_idf' on GPU\")\r\n     38 with tf.device('/gpu:0'):\r\n---> 39     text_vectorization4.adapt(text_only_ds)\r\n     40 \r\n\r\n~/.local/share/virtualenvs/jbodart_argen-x.com-ve3sV5aU/lib/python3.9/site-packages/keras/engine/base_preprocessing_layer.py in adapt(self, data, batch_size, steps)\r\n    242       with data_handler.catch_stop_iteration():\r\n    243         for _ in data_handler.steps():\r\n--> 244           self._adapt_function(iterator)\r\n    245           if data_handler.should_sync:\r\n    246             context.async_wait()\r\n\r\n~/.local/share/virtualenvs/jbodart_argen-x.com-ve3sV5aU/lib/python3.9/site-packages/tensorflow/python/util/traceback_utils.py in error_handler(*args, **kwargs)\r\n    151     except Exception as e:\r\n    152       filtered_tb = _process_traceback_frames(e.__traceback__)\r\n--> 153       raise e.with_traceback(filtered_tb) from None\r\n    154     finally:\r\n    155       del filtered_tb\r\n\r\n~/.local/share/virtualenvs/jbodart_argen-x.com-ve3sV5aU/lib/python3.9/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)\r\n     56   try:\r\n     57     ctx.ensure_initialized()\r\n---> 58     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\r\n     59                                         inputs, attrs, num_outputs)\r\n     60   except core._NotOkStatusException as e:\r\n\r\nInvalidArgumentError: 2 root error(s) found.\r\n  (0) INVALID_ARGUMENT:  During Variant Host->Device Copy: non-DMA-copy attempted of tensor type: string\r\n\t [[{{node map/TensorArrayUnstack/TensorListFromTensor/_42}}]]\r\n\t [[map/while/loop_body_control/_21/_51]]\r\n  (1) INVALID_ARGUMENT:  During Variant Host->Device Copy: non-DMA-copy attempted of tensor type: string\r\n\t [[{{node map/TensorArrayUnstack/TensorListFromTensor/_42}}]]\r\n0 successful operations.\r\n0 derived errors ignored. [Op:__inference_adapt_step_1288]\r\n\r\nFunction call stack:\r\nadapt_step -> adapt_step\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/947/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/947/timeline","performed_via_github_app":null,"state_reason":null}