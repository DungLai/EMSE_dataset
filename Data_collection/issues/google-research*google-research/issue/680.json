{"url":"https://api.github.com/repos/google-research/google-research/issues/680","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/680/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/680/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/680/events","html_url":"https://github.com/google-research/google-research/issues/680","id":865825477,"node_id":"MDU6SXNzdWU4NjU4MjU0Nzc=","number":680,"title":"[depth_from_video_in_the_wild] Convolution kernel regularization","user":{"login":"xerxesr","id":826149,"node_id":"MDQ6VXNlcjgyNjE0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/826149?v=4","gravatar_id":"","url":"https://api.github.com/users/xerxesr","html_url":"https://github.com/xerxesr","followers_url":"https://api.github.com/users/xerxesr/followers","following_url":"https://api.github.com/users/xerxesr/following{/other_user}","gists_url":"https://api.github.com/users/xerxesr/gists{/gist_id}","starred_url":"https://api.github.com/users/xerxesr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xerxesr/subscriptions","organizations_url":"https://api.github.com/users/xerxesr/orgs","repos_url":"https://api.github.com/users/xerxesr/repos","events_url":"https://api.github.com/users/xerxesr/events{/privacy}","received_events_url":"https://api.github.com/users/xerxesr/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-23T07:20:56Z","updated_at":"2021-04-23T07:20:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi @gariel-google,\r\nfirst of all thanks for your great work, also with [depth_and_motion_learning]. Upon porting this model to tf2, I've stumbled upon the following issue and it would be very kind if you could help me with that.\r\n\r\nIn [train.py line 64](https://github.com/google-research/google-research/blob/b12b5753dc0870af2e3c30a0ac1d0adfb3da0754/depth_from_video_in_the_wild/train.py#L64) the default weight regularization is set to 1e-2, so it seems to be active by default. Also in the CVF [paper](https://openaccess.thecvf.com/content_ICCV_2019/papers/Gordon_Depth_From_Videos_in_the_Wild_Unsupervised_Monocular_Depth_Learning_ICCV_2019_paper.pdf) it is stated\r\n![image](https://user-images.githubusercontent.com/826149/115832258-fc0cdc80-a412-11eb-9aa9-1e131fb2a20e.png)\r\nthat a l2 regularization term is used. Digging deeper in the code, special care is taken where the l2-weights are applied:\r\n- In the Resnet encoder, the parameter is ignored.\r\n- For the depth decoder, it is applied to each Conv2D and Conv2DTranspose layer.\r\n- For the motion network, we apply it in the enocder, decoder, and refinements in the v2-variants, but only to the encoder in the v1-variants.\r\n\r\nIf I load the [Cityscapes + KITTI checkpoint](https://www.googleapis.com/download/storage/v1/b/gresearch/o/depth_from_video_in_the_wild%2Fcheckpoints%2Fcityscapes_kitti_learned_intrinsics.zip?generation=1566493762028542&alt=media) in my new implementation and train with the same l2-weight, I get a quite high l2-loss. Additionally, in your reference training code I didn't find a call to `tf.GraphKeys.REGULARIZATION_LOSSES`, so I'm now wondering if this l2-regularization is really active.\r\n\r\nThank you already in advance\r\nxerxesr","closed_by":null,"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/680/timeline","performed_via_github_app":null,"state_reason":null}