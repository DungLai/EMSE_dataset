{"url":"https://api.github.com/repos/google-research/google-research/issues/332","repository_url":"https://api.github.com/repos/google-research/google-research","labels_url":"https://api.github.com/repos/google-research/google-research/issues/332/labels{/name}","comments_url":"https://api.github.com/repos/google-research/google-research/issues/332/comments","events_url":"https://api.github.com/repos/google-research/google-research/issues/332/events","html_url":"https://github.com/google-research/google-research/issues/332","id":666117931,"node_id":"MDU6SXNzdWU2NjYxMTc5MzE=","number":332,"title":"Bug in tft_model","user":{"login":"henghamao","id":4012446,"node_id":"MDQ6VXNlcjQwMTI0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/4012446?v=4","gravatar_id":"","url":"https://api.github.com/users/henghamao","html_url":"https://github.com/henghamao","followers_url":"https://api.github.com/users/henghamao/followers","following_url":"https://api.github.com/users/henghamao/following{/other_user}","gists_url":"https://api.github.com/users/henghamao/gists{/gist_id}","starred_url":"https://api.github.com/users/henghamao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henghamao/subscriptions","organizations_url":"https://api.github.com/users/henghamao/orgs","repos_url":"https://api.github.com/users/henghamao/repos","events_url":"https://api.github.com/users/henghamao/events{/privacy}","received_events_url":"https://api.github.com/users/henghamao/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-07-27T09:05:58Z","updated_at":"2020-07-27T09:05:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In the file model_tft.py, function get_tft_embeddings(), the following piece of the code seems incorrect:\r\n\r\n# Observed (a prioir unknown) inputs\r\n    wired_embeddings = []\r\n    for i in range(num_categorical_variables):\r\n      if i not in self._known_categorical_input_idx \\\r\n        and i not in self._input_obs_loc:\r\n        e = embeddings[i](categorical_inputs[:, :, i])\r\n        wired_embeddings.append(e)\r\n\r\nself._known_categorical_input_idx starts from the first categorical input of all_input, while self._input_obs_loc starts from 0 of all inputs. The condition here is incorrect.\r\n\r\ne.g.\r\n_column_definition = [\r\n      ('Symbol', DataTypes.CATEGORICAL, InputTypes.ID),\r\n      ('date', DataTypes.DATE, InputTypes.TIME),\r\n      ('log_vol', DataTypes.REAL_VALUED, InputTypes.TARGET),\r\n      ('open_to_close', DataTypes.REAL_VALUED, InputTypes.OBSERVED_INPUT),\r\n      ('days_from_start', DataTypes.REAL_VALUED, InputTypes.KNOWN_INPUT),\r\n      ('day_of_week', DataTypes.CATEGORICAL, InputTypes.OBSERVED_INPUT),\r\n      ('day_of_month', DataTypes.CATEGORICAL, InputTypes.KNOWN_INPUT),\r\n      ('week_of_year', DataTypes.CATEGORICAL, InputTypes.KNOWN_INPUT),\r\n      ('month', DataTypes.CATEGORICAL, InputTypes.KNOWN_INPUT),\r\n      ('Region', DataTypes.CATEGORICAL, InputTypes.STATIC_INPUT),\r\n  ]\r\n\r\nlog_vol is the target, and self._input_obs_loc = [0]\r\n5 categorical inputs: day_of week, day_of_month, week_of_year, moth, region, and self._know_categorical_input_idx = [1, 2, 3, 4]. We made up the first categorical input 'day_of_week' to 'OBSERVED_INPUT' (unknown input).\r\nWe expected to append observed categorical input 'day_of_week' to wired_embeddings, however as the index conflict with self._input_obs_loc,  the code did not work.\r\n\r\nProposed fix:\r\n# Observed (a prioir unknown) inputs\r\n    wired_embeddings = []\r\n    for i in range(num_categorical_variables):\r\n      if i not in self._known_categorical_input_idx \\\r\n        and i + num_regular_variables not in self._input_obs_loc:\r\n        e = embeddings[i](categorical_inputs[:, :, i])\r\n        wired_embeddings.append(e)\r\n\r\nchanged 'i' to 'i + num_regular_variables'","closed_by":null,"reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/google-research/google-research/issues/332/timeline","performed_via_github_app":null,"state_reason":null}