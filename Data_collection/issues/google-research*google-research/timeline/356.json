[{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/673885755","html_url":"https://github.com/google-research/google-research/issues/356#issuecomment-673885755","issue_url":"https://api.github.com/repos/google-research/google-research/issues/356","id":673885755,"node_id":"MDEyOklzc3VlQ29tbWVudDY3Mzg4NTc1NQ==","user":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false},"created_at":"2020-08-14T05:06:23Z","updated_at":"2020-08-14T05:06:23Z","author_association":"CONTRIBUTOR","body":"Batch normalization is applied on feature domain, so it is streamable by default. We apply streaming conversion only on layers, which do data processing in time domain (such as conv, rnn,...). For example during conversion of conv layer to streaming mode we insert time buffer before conv layer, so it can run convolution incrementally on new input samples. All other layers which do processing in feature domain only are kept as it is.\r\n\r\nIf you do not need to do folding of conv layer with batch normalization then it should work out of the box. But if you need to fold conv layer with batch norm, then there will be several steps: 1) convert non streaming model to streaming one, 2) fold conv and batch norm layers of streaming model. For second step I would suggest to use keras tool: [model_transformer](https://github.com/tensorflow/model-optimization/blob/master/tensorflow_model_optimization/python/core/quantization/keras/graph_transformations/model_transformer_test.py). Please let me know if you have more questions, feel free to create an example, so it will be clear what kind of problem you have with kws_streaming lib.","reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/673885755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/674050522","html_url":"https://github.com/google-research/google-research/issues/356#issuecomment-674050522","issue_url":"https://api.github.com/repos/google-research/google-research/issues/356","id":674050522,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDA1MDUyMg==","user":{"login":"tu1258","id":59950011,"node_id":"MDQ6VXNlcjU5OTUwMDEx","avatar_url":"https://avatars.githubusercontent.com/u/59950011?v=4","gravatar_id":"","url":"https://api.github.com/users/tu1258","html_url":"https://github.com/tu1258","followers_url":"https://api.github.com/users/tu1258/followers","following_url":"https://api.github.com/users/tu1258/following{/other_user}","gists_url":"https://api.github.com/users/tu1258/gists{/gist_id}","starred_url":"https://api.github.com/users/tu1258/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tu1258/subscriptions","organizations_url":"https://api.github.com/users/tu1258/orgs","repos_url":"https://api.github.com/users/tu1258/repos","events_url":"https://api.github.com/users/tu1258/events{/privacy}","received_events_url":"https://api.github.com/users/tu1258/received_events","type":"User","site_admin":false},"created_at":"2020-08-14T12:28:55Z","updated_at":"2020-08-14T18:02:49Z","author_association":"NONE","body":"Hi, @rybakov  Thanks for your reply! I am trying to understand it theoretically so the usage issue may not be my concernðŸ˜„.  From my point of view, what you are saying is batch normalization only affects the latest column of feature map.(the gray area in the [paper](https://arxiv.org/pdf/2005.06720.pdf)) It is applied on feature domain so it updates the feature map column by column. However, batch normalization is computed by moving average when inference thus I am confused now. Would you mind giving an example based on this below pic? \r\n\r\nlet's say blue is column0 and gray is column6 which is the latest input frame, and the model is\r\n\r\n> input\r\n> conv2D\r\n> BN\r\n> ---------------------below will compute entire feature map regardlessly\r\n> Flatten\r\n> Dense\r\n> Softmax\r\n\r\nFrom what I know, Conv2D only computes column4,5,6 and the new feature map before BN is column1 ~ column6 now. Then which column and row will be changed by BN and how does that BN compute average and variance.\r\n![image](https://user-images.githubusercontent.com/59950011/90251697-c6b9f300-de70-11ea-8ec3-9edb0ccd6538.png)\r\n","reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/674050522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"tu1258","id":59950011,"node_id":"MDQ6VXNlcjU5OTUwMDEx","avatar_url":"https://avatars.githubusercontent.com/u/59950011?v=4","gravatar_id":"","url":"https://api.github.com/users/tu1258","html_url":"https://github.com/tu1258","followers_url":"https://api.github.com/users/tu1258/followers","following_url":"https://api.github.com/users/tu1258/following{/other_user}","gists_url":"https://api.github.com/users/tu1258/gists{/gist_id}","starred_url":"https://api.github.com/users/tu1258/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tu1258/subscriptions","organizations_url":"https://api.github.com/users/tu1258/orgs","repos_url":"https://api.github.com/users/tu1258/repos","events_url":"https://api.github.com/users/tu1258/events{/privacy}","received_events_url":"https://api.github.com/users/tu1258/received_events","type":"User","site_admin":false}},{"id":3656039541,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MzY1NjAzOTU0MQ==","url":"https://api.github.com/repos/google-research/google-research/issues/events/3656039541","actor":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-08-14T12:28:55Z","performed_via_github_app":null},{"id":3656039544,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDM2NTYwMzk1NDQ=","url":"https://api.github.com/repos/google-research/google-research/issues/events/3656039544","actor":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-08-14T12:28:55Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/674268334","html_url":"https://github.com/google-research/google-research/issues/356#issuecomment-674268334","issue_url":"https://api.github.com/repos/google-research/google-research/issues/356","id":674268334,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDI2ODMzNA==","user":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false},"created_at":"2020-08-14T20:54:43Z","updated_at":"2020-08-14T20:54:43Z","author_association":"CONTRIBUTOR","body":"You are saying that: \"_However, batch normalization is computed by moving average when inference thus I am confused now._\"\r\nIt looks like you a mixing batch normalization behavior during training and inference. \r\n\r\nYes, batch normalization computes moving average of the input features, but only during training.\r\nBut in the inference mode all weights of batch normalization layer are frozen. So, during inference batch normalization can be represented as a simple 1x1 convolution as described in [link](https://tehnokv.com/posts/fusing-batchnorm-and-conv/), 1x1 convolution in this case is just elementwise multiplication with addition of bias and it is streamable by default, also can be folded/fused with predecessing conv layer.\r\n\r\nPlease find attached example colab with conv and batch norm streaming (it is an implementation of the model on your drawing): \r\n[conv_batch_norm.zip](https://github.com/google-research/google-research/files/5077058/conv_batch_norm.zip)\r\n. It demonstrates how to train a model a non streaming model, run inference in non streaming mode with TF/TFLite and run inference in streaming mode with TF/TFLite (data sets in this example are artificially generated and used only to validate model correctness).\r\nIn this colab you will see that during training conv layer is producing output with dim: [16/_batch_, 47/_time_, 18/_feature1_, 5/_feature2_] and batch norm layer is processing  [16/_batch_, 47/_time_, 18/_feature1_, 5/_feature2_] (it applies exponential averaging only during training).\r\nDuring streaming inference _batch_ and and _time_ dims are equal to one, so conv layer produces output [1/_batch_, 1/_time_, 18/_feature1_, 5/_feature2_] and batch norm layer is processing  [1/_batch_, 1/_time_, 18/_feature1_, 5/_feature2_]. The weights of batch norm layer are frozen during inference and applied only on feature dimensions (so there is no exponential averaging during inference).\r\n\r\nThank you for looking into kws_streaming lib! and let me know if you have more questions.\r\n/Oleg.","reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/674268334/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/684141697","html_url":"https://github.com/google-research/google-research/issues/356#issuecomment-684141697","issue_url":"https://api.github.com/repos/google-research/google-research/issues/356","id":684141697,"node_id":"MDEyOklzc3VlQ29tbWVudDY4NDE0MTY5Nw==","user":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false},"created_at":"2020-09-01T01:45:27Z","updated_at":"2020-09-01T01:45:27Z","author_association":"CONTRIBUTOR","body":"Added couple of examples:\r\n\r\nExample of folding/fusing convolution layer with batch normalization [conv_batch_norm_folding](https://github.com/google-research/google-research/blob/master/kws_streaming/colab/conv_batch_norm_folding.ipynb)\r\n\r\nHere is end to end test of running convolution with batch normalization with TF and TFLite [conv_batch_norm_on_generated_data](https://github.com/google-research/google-research/blob/master/kws_streaming/colab/conv_batch_norm_on_generated_data.ipynb)\r\n","reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/684141697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false}},{"id":3760262770,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50Mzc2MDI2Mjc3MA==","url":"https://api.github.com/repos/google-research/google-research/issues/events/3760262770","actor":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-09-13T09:22:14Z","performed_via_github_app":null},{"id":3760262771,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDM3NjAyNjI3NzE=","url":"https://api.github.com/repos/google-research/google-research/issues/events/3760262771","actor":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-09-13T09:22:14Z","performed_via_github_app":null},{"id":3861607311,"node_id":"MDExOkNsb3NlZEV2ZW50Mzg2MTYwNzMxMQ==","url":"https://api.github.com/repos/google-research/google-research/issues/events/3861607311","actor":{"login":"tu1258","id":59950011,"node_id":"MDQ6VXNlcjU5OTUwMDEx","avatar_url":"https://avatars.githubusercontent.com/u/59950011?v=4","gravatar_id":"","url":"https://api.github.com/users/tu1258","html_url":"https://github.com/tu1258","followers_url":"https://api.github.com/users/tu1258/followers","following_url":"https://api.github.com/users/tu1258/following{/other_user}","gists_url":"https://api.github.com/users/tu1258/gists{/gist_id}","starred_url":"https://api.github.com/users/tu1258/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tu1258/subscriptions","organizations_url":"https://api.github.com/users/tu1258/orgs","repos_url":"https://api.github.com/users/tu1258/repos","events_url":"https://api.github.com/users/tu1258/events{/privacy}","received_events_url":"https://api.github.com/users/tu1258/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-10-09T19:56:35Z","state_reason":null,"performed_via_github_app":null},{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/707509593","html_url":"https://github.com/google-research/google-research/issues/356#issuecomment-707509593","issue_url":"https://api.github.com/repos/google-research/google-research/issues/356","id":707509593,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNzUwOTU5Mw==","user":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false},"created_at":"2020-10-13T06:02:29Z","updated_at":"2020-10-13T06:02:29Z","author_association":"CONTRIBUTOR","body":"Summary: there is no any streaming during training: we train a model as it is. \r\nBatch normalization during training compuets moving average of features in time and is updated at every mini batch.\r\n\r\nDuring inference of batch normalization layer, we use moving average value, which was pre-computedd during training (but now it is frozen - it is not updated any more, as shown in keras [normalization.py](https://github.com/tensorflow/tensorflow/blob/v2.3.0/tensorflow/python/keras/layers/normalization.py#L765)). It is applied on features and there is no averaging in time becasue we are in inference mode now. So this layer is streamable in inference mode by default.\r\n","reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/707509593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"rybakov","id":6813603,"node_id":"MDQ6VXNlcjY4MTM2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/6813603?v=4","gravatar_id":"","url":"https://api.github.com/users/rybakov","html_url":"https://github.com/rybakov","followers_url":"https://api.github.com/users/rybakov/followers","following_url":"https://api.github.com/users/rybakov/following{/other_user}","gists_url":"https://api.github.com/users/rybakov/gists{/gist_id}","starred_url":"https://api.github.com/users/rybakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rybakov/subscriptions","organizations_url":"https://api.github.com/users/rybakov/orgs","repos_url":"https://api.github.com/users/rybakov/repos","events_url":"https://api.github.com/users/rybakov/events{/privacy}","received_events_url":"https://api.github.com/users/rybakov/received_events","type":"User","site_admin":false}}]