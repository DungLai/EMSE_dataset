[{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/598130535","html_url":"https://github.com/google-research/google-research/issues/219#issuecomment-598130535","issue_url":"https://api.github.com/repos/google-research/google-research/issues/219","id":598130535,"node_id":"MDEyOklzc3VlQ29tbWVudDU5ODEzMDUzNQ==","user":{"login":"kingsj0405","id":13496612,"node_id":"MDQ6VXNlcjEzNDk2NjEy","avatar_url":"https://avatars.githubusercontent.com/u/13496612?v=4","gravatar_id":"","url":"https://api.github.com/users/kingsj0405","html_url":"https://github.com/kingsj0405","followers_url":"https://api.github.com/users/kingsj0405/followers","following_url":"https://api.github.com/users/kingsj0405/following{/other_user}","gists_url":"https://api.github.com/users/kingsj0405/gists{/gist_id}","starred_url":"https://api.github.com/users/kingsj0405/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kingsj0405/subscriptions","organizations_url":"https://api.github.com/users/kingsj0405/orgs","repos_url":"https://api.github.com/users/kingsj0405/repos","events_url":"https://api.github.com/users/kingsj0405/events{/privacy}","received_events_url":"https://api.github.com/users/kingsj0405/received_events","type":"User","site_admin":false},"created_at":"2020-03-12T11:10:35Z","updated_at":"2020-03-12T11:10:35Z","author_association":"NONE","body":"This is resolved with updating my docker container to latest.\r\n\r\n```\r\nroot@7700d0b7e682:/app/sejong/AutoML/google-research/automl_zero# g++ --version\r\ng++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\nCopyright (C) 2017 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\nroot@7700d0b7e682:/app/sejong/AutoML/google-research/automl_zero# bazel --version\r\nbazel 2.2.0\r\n```\r\n\r\nOutput is like this:\r\n\r\n```\r\n# ./run_demo.sh \r\nExtracting Bazel installation...\r\nStarting local Bazel server and connecting to it...\r\nINFO: SHA256 (https://github.com/bazelbuild/rules_cc/archive/master.zip) = 07d957496cc77efa14c995e491ca78a7819c6c75fa285fa39616fd25136a1b3c\r\nDEBUG: Rule 'rules_cc' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"07d957496cc77efa14c995e491ca78a7819c6c75fa285fa396\r\n16fd25136a1b3c\"\r\nDEBUG: Call stack for the definition of repository 'rules_cc' which is a http_archive (rule definition at /root/.cache/bazel/_bazel_root/c7435eb598c0e52a3e7d09039ce632\r\na1/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\r\n - <builtin>\r\n - /app/sejong/AutoML/google-research/automl_zero/WORKSPACE:26:1\r\nINFO: SHA256 (https://github.com/abseil/abseil-cpp/archive/master.zip) = 1dcf8d59a1baeb683bc98339de375c69a581f6d7ab00bb47f13144dbe3c9f190\r\nDEBUG: Rule 'com_google_absl' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"1dcf8d59a1baeb683bc98339de375c69a581f6d7ab0\r\n0bb47f13144dbe3c9f190\"\r\nDEBUG: Call stack for the definition of repository 'com_google_absl' which is a http_archive (rule definition at /root/.cache/bazel/_bazel_root/c7435eb598c0e52a3e7d090\r\n39ce632a1/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\r\n - <builtin>\r\n - /app/sejong/AutoML/google-research/automl_zero/WORKSPACE:14:1\r\nINFO: SHA256 (https://github.com/google/googletest/archive/master.zip) = 51048d8977c45dc5eff96355f186ae0ce9c281cc50f9dbfaff2f4d3bdc0eed6c\r\nINFO: SHA256 (https://github.com/google/glog/archive/master.zip) = 43550f5e8140f819a889a3cd32fcf13888faaa6a441c179cd1163d96bdb82eb3\r\nDEBUG: Rule 'com_google_googletest' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"51048d8977c45dc5eff96355f186ae0ce9c28\r\n1cc50f9dbfaff2f4d3bdc0eed6c\"\r\nDEBUG: Call stack for the definition of repository 'com_google_googletest' which is a http_archive (rule definition at /root/.cache/bazel/_bazel_root/c7435eb598c0e52a3\r\ne7d09039ce632a1/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\r\n - <builtin>\r\n - /app/sejong/AutoML/google-research/automl_zero/WORKSPACE:20:1\r\nDEBUG: Rule 'com_google_glog' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"43550f5e8140f819a889a3cd32fcf13888faaa6a441\r\nc179cd1163d96bdb82eb3\"\r\nDEBUG: Call stack for the definition of repository 'com_google_glog' which is a http_archive (rule definition at /root/.cache/bazel/_bazel_root/c7435eb598c0e52a3e7d090\r\n39ce632a1/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\r\n - <builtin>\r\n - /app/sejong/AutoML/google-research/automl_zero/WORKSPACE:78:1\r\nINFO: SHA256 (https://github.com/gflags/gflags/archive/master.zip) = 5a95d2354322ffd4b7b25b634ee1b23ce8167faa32a9c8fa06df0ef42ec9a174\r\nDEBUG: Rule 'com_github_gflags_gflags' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"5a95d2354322ffd4b7b25b634ee1b23ce8\r\n167faa32a9c8fa06df0ef42ec9a174\"\r\nDEBUG: Call stack for the definition of repository 'com_github_gflags_gflags' which is a http_archive (rule definition at /root/.cache/bazel/_bazel_root/c7435eb598c0e5\r\n2a3e7d09039ce632a1/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\r\n - <builtin>\r\n - /app/sejong/AutoML/google-research/automl_zero/WORKSPACE:3:1\r\nINFO: Analyzed target //:run_search_experiment (38 packages loaded, 1474 targets configured).\r\nINFO: Found 1 target...\r\nINFO: From Compiling compute_cost.cc:\r\ncompute_cost.cc: In function 'double automl_zero::ComputeCost(const automl_zero::Instruction&)':\r\ncompute_cost.cc:173:1: warning: control reaches end of non-void function [-Wreturn-type]\r\n }\r\n ^\r\nINFO: From Compiling algorithm.cc:\r\nalgorithm.cc: In member function 'const std::vector<std::shared_ptr<const automl_zero::Instruction> >& automl_zero::Algorithm::ComponentFunction(automl_zero::Component\r\nFunctionT) const':\r\nalgorithm.cc:172:1: warning: control reaches end of non-void function [-Wreturn-type]\r\n }\r\n ^\r\nalgorithm.cc: In member function 'std::vector<std::shared_ptr<const automl_zero::Instruction> >* automl_zero::Algorithm::MutableComponentFunction(automl_zero::Componen\r\ntFunctionT)':\r\nalgorithm.cc:184:1: warning: control reaches end of non-void function [-Wreturn-type]\r\n }\r\n ^\r\nINFO: From Compiling fec_hashing.cc:\r\nIn file included from fec_hashing.h:21:0,\r\n                 from fec_hashing.cc:15:\r\nexecutor.h:803:10: warning: variable templates only available with -std=c++14 or -std=gnu++14\r\n     128> kOpIndexToExecuteFunction = {\r\n          ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nINFO: From Compiling fec_cache.cc:\r\nIn file included from fec_cache.h:24:0,\r\n                 from fec_cache.cc:15:\r\nexecutor.h:803:10: warning: variable templates only available with -std=c++14 or -std=gnu++14\r\n     128> kOpIndexToExecuteFunction = {\r\n          ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nfec_cache.cc: In member function 'void automl_zero::LRUCache::MaybeResize()':\r\nfec_cache.cc:92:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n   while (list_.size() > max_size_) {\r\n          ~~~~~~~~~~~~~^~~~~~~~~~~\r\nINFO: From Compiling mutator.cc:\r\nmutator.cc: In member function 'void automl_zero::Mutator::InsertInstruction(automl_zero::Algorithm*)':\r\nmutator.cc:253:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n       if (algorithm->setup_.size() >= setup_size_max_ - 1) return;\r\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\r\nmutator.cc:259:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n       if (algorithm->predict_.size() >= predict_size_max_ - 1) return;\r\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nmutator.cc:265:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n       if (algorithm->learn_.size() >= learn_size_max_ - 1) return;\r\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from definitions.h:34:0,\r\n                 from instruction.h:24,\r\n                 from algorithm.h:24,\r\n                 from mutator.h:21,\r\n                 from mutator.cc:15:\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':\r\nmutator.cc:343:3:   required from here\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n DEFINE_CHECK_OP_IMPL(Check_GT, > )\r\n                                ^\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'\r\n #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))\r\n                                                     ^\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'\r\n DEFINE_CHECK_OP_IMPL(Check_GT, > )\r\n ^~~~~~~~~~~~~~~~~~~~\r\nmutator.cc:271:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n   InsertInstructionUnconditionally(op, component_function);\r\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nmutator.cc:271:35: warning: 'op' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\nmutator.cc: In member function 'void automl_zero::Mutator::RemoveInstruction(automl_zero::Algorithm*)':\r\nmutator.cc:293:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n   RemoveInstructionUnconditionally(component_function);\r\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\r\nmutator.cc: In member function 'void automl_zero::Mutator::TradeInstruction(automl_zero::Algorithm*)':\r\nmutator.cc:317:35: warning: 'component_function' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n   RemoveInstructionUnconditionally(component_function);\r\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\r\nmutator.cc:316:35: warning: 'op' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n   InsertInstructionUnconditionally(op, component_function);\r\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nINFO: From Compiling regularized_evolution.cc:\r\nIn file included from fec_cache.h:24:0,\r\n                 from evaluator.h:28,\r\n                 from regularized_evolution.h:26,\r\n                 from regularized_evolution.cc:15:\r\nexecutor.h:803:10: warning: variable templates only available with -std=c++14 or -std=gnu++14\r\n     128> kOpIndexToExecuteFunction = {\r\n          ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nINFO: From Compiling run_search_experiment.cc:\r\nIn file included from task_util.h:25:0,\r\n                 from run_search_experiment.cc:25:\r\nexecutor.h:803:10: warning: variable templates only available with -std=c++14 or -std=gnu++14\r\n     128> kOpIndexToExecuteFunction = {\r\n          ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nINFO: From Compiling task_util.cc:\r\nIn file included from task_util.h:25:0,\r\n                 from task_util.cc:15:\r\nexecutor.h:803:10: warning: variable templates only available with -std=c++14 or -std=gnu++14\r\n     128> kOpIndexToExecuteFunction = {\r\n          ^~~~~~~~~~~~~~~~~~~~~~~~~\r\ntask_util.cc: In function 'void automl_zero::FillTasksFromTaskSpec(const automl_zero::TaskSpec&, std::vector<std::unique_ptr<automl_zero::TaskInterface> >*)':\r\ntask_util.cc:93:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n         i < first_param_seeds.size() ? first_param_seeds[i] : param_seed + 1;\r\n         ~~^~~~~~~~~~~~~~~~~~~~~~~~~~\r\ntask_util.cc:95:11: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n         i < first_data_seeds.size() ? first_data_seeds[i] : data_seed + 1;\r\n         ~~^~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from definitions.h:34:0,\r\n                 from task.h:27,\r\n                 from task_util.h:22,\r\n                 from task_util.cc:15:\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':\r\ntask_util.h:393:3:   required from 'std::unique_ptr<automl_zero::Task<F> > automl_zero::CreateTask(automl_zero::IntegerT, automl_zero::RandomSeedT, automl_zero::RandomSeedT, const automl_zero::TaskSpec&) [with int F = 2; automl_zero::IntegerT = long int; automl_zero::RandomSeedT = unsigned int]'\r\ntask_util.cc:101:73:   required from here\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:727:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?\r\n                                ^\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'\r\n #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))\r\n                                                     ^\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:727:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'\r\n DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?\r\n ^~~~~~~~~~~~~~~~~~~~\r\ntask_util.cc:95:37: warning: 'data_seed' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n         i < first_data_seeds.size() ? first_data_seeds[i] : data_seed + 1;\r\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ntask_util.cc:93:38: warning: 'param_seed' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n         i < first_param_seeds.size() ? first_param_seeds[i] : param_seed + 1;\r\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nINFO: From Compiling evaluator.cc:\r\nIn file included from fec_cache.h:24:0,\r\n                 from evaluator.h:28,\r\n                 from evaluator.cc:15:\r\nexecutor.h:803:10: warning: variable templates only available with -std=c++14 or -std=gnu++14\r\n     128> kOpIndexToExecuteFunction = {\r\n          ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nevaluator.cc: In member function 'double automl_zero::Evaluator::Evaluate(const automl_zero::Algorithm&)':\r\nevaluator.cc:89:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n   for (IntegerT i = 0; i < tasks_.size(); ++i) {\r\n                        ~~^~~~~~~~~~~~~~~\r\nIn file included from definitions.h:34:0,\r\n                 from instruction.h:24,\r\n                 from algorithm.h:24,\r\n                 from evaluator.h:23,\r\n                 from evaluator.cc:15:\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>]':\r\nevaluator.cc:78:3:   required from here\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n DEFINE_CHECK_OP_IMPL(Check_GT, > )\r\n                                ^\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'\r\n #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))\r\n                                                     ^\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:732:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'\r\n DEFINE_CHECK_OP_IMPL(Check_GT, > )\r\n ^~~~~~~~~~~~~~~~~~~~\r\nIn file included from evaluator.h:24:0,\r\n                 from evaluator.cc:15:\r\ntask.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 2]':\r\nexecutor.h:1300:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'\r\nevaluator.cc:118:75:   required from here\r\ntask.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if (current_example_ >= features_->size()) {\r\ntask.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 2]':\r\nexecutor.h:1301:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'\r\nevaluator.cc:118:75:   required from here\r\ntask.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     return current_epoch_ >= epochs_->size();\r\n            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\ntask.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 4]':\r\nexecutor.h:1300:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 4]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 4; automl_zero::IntegerT = long int]'\r\nevaluator.cc:122:75:   required from here\r\ntask.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if (current_example_ >= features_->size()) {\r\ntask.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 4]':\r\nexecutor.h:1301:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 4]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 4; automl_zero::IntegerT = long int]'\r\nevaluator.cc:122:75:   required from here\r\ntask.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     return current_epoch_ >= epochs_->size();\r\n            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\ntask.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 8]':\r\nexecutor.h:1300:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 8]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 8; automl_zero::IntegerT = long int]'\r\nevaluator.cc:126:75:   required from here\r\ntask.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if (current_example_ >= features_->size()) {\r\ntask.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 8]':\r\nexecutor.h:1301:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 8]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 8; automl_zero::IntegerT = long int]'\r\nevaluator.cc:126:75:   required from here\r\ntask.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     return current_epoch_ >= epochs_->size();\r\n            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\ntask.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 16]':\r\nexecutor.h:1300:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 16]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 16; automl_zero::IntegerT = long int]'\r\nevaluator.cc:130:76:   required from here\r\ntask.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if (current_example_ >= features_->size()) {\r\ntask.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 16]':\r\nexecutor.h:1301:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 16]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 16; automl_zero::IntegerT = long int]'\r\nevaluator.cc:130:76:   required from here\r\ntask.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     return current_epoch_ >= epochs_->size();\r\n            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\ntask.h: In instantiation of 'void automl_zero::TaskIterator<F>::Next() [with int F = 32]':\r\nexecutor.h:1300:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 32]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 32; automl_zero::IntegerT = long int]'\r\nevaluator.cc:134:76:   required from here\r\ntask.h:317:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if (current_example_ >= features_->size()) {\r\ntask.h: In instantiation of 'bool automl_zero::TaskIterator<F>::Done() const [with int F = 32]':\r\nexecutor.h:1301:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 32]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 32; automl_zero::IntegerT = long int]'\r\nevaluator.cc:134:76:   required from here\r\ntask.h:311:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     return current_epoch_ >= epochs_->size();\r\n            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\nIn file included from definitions.h:34:0,\r\n                 from instruction.h:24,\r\n                 from algorithm.h:24,\r\n                 from evaluator.h:23,\r\n                 from evaluator.cc:15:\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h: In instantiation of 'std::__cxx11::string* google::Check_LEImpl(const T1&, const T2&, const char*) [with T1 = long int; T2 = long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]':\r\ntask.h:315:5:   required from 'void automl_zero::TaskIterator<F>::Next() [with int F = 2]'\r\nexecutor.h:1300:5:   required from 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]'\r\nexecutor.h:1027:44:   required from 'double automl_zero::Executor<F>::Execute(std::vector<double>*, std::vector<double>*) [with int F = 2]'\r\nevaluator.cc:159:5:   required from 'double automl_zero::Evaluator::ExecuteImpl(const automl_zero::Task<F>&, automl_zero::IntegerT, const automl_zero::Algorithm&) [with int F = 2; automl_zero::IntegerT = long int]'\r\nevaluator.cc:118:75:   required from here\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:729:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n DEFINE_CHECK_OP_IMPL(Check_LE, <=)\r\n                                ^\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:148:53: note: in definition of macro 'GOOGLE_PREDICT_TRUE'\r\n #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))\r\n                                                     ^\r\nbazel-out/k8-opt/bin/external/com_google_glog/_virtual_includes/default_glog_headers/glog/logging.h:729:1: note: in expansion of macro 'DEFINE_CHECK_OP_IMPL'\r\n DEFINE_CHECK_OP_IMPL(Check_LE, <=)\r\n ^~~~~~~~~~~~~~~~~~~~\r\nIn file included from fec_cache.h:24:0,\r\n                 from evaluator.h:28,\r\n                 from evaluator.cc:15:\r\nexecutor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 2]':\r\nexecutor.h:1307:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n   double fitness;\r\n          ^~~~~~~\r\nexecutor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 4]':\r\nexecutor.h:1307:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\nexecutor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 32]':\r\nexecutor.h:1307:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\nexecutor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 16]':\r\nexecutor.h:1307:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\nexecutor.h: In member function 'double automl_zero::Executor<F>::Validate(std::vector<double>*) [with int F = 8]':\r\nexecutor.h:1307:10: warning: 'fitness' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\nTarget //:run_search_experiment up-to-date:\r\n  bazel-bin/run_search_experiment\r\nINFO: Elapsed time: 48.343s, Critical Path: 30.05s\r\nINFO: 410 processes: 410 processwrapper-sandbox.\r\nINFO: Build completed successfully, 426 total actions\r\nINFO: Running command line: bazel-bin/run_search_experiment '--search_experiment_spec=     search_tasks { \r\n      tasks {         scalar_linear_regression_task {}         features_size: 4         num_train_examples: 100         num_valid_examples: 100         num_tasks: 10         eval_type: RMS_ERROR       }     }     setup_ops: [SCALAR_CONST_SET_OP, VECTOR_INNER_PRODUCT_OP, SCALAR_DIFF_OP, SCALAR_PRODUCT_OP, SCALAR_VECTOR_PRODUCT_OP, VECTOR_SUM_OP]     predict_ops: [SCALAR_CONST_SET_OP, VECTOR_INNER_PRODUCT_OP, SCALAR_DIFF_OP, SCALAR_PRODUCT_OP, SCALAR_VECTOR_PRODUCT_OP, VECTOR_SUM_OP]     learn_ops: [SCALAR_CONST_SET_OP, VECTOR_INNER_PRODUCT_OP, SCALAR_DIFF_OP, SCALAR_PRODUCT_OP, SCALAR_VECTOR_PRODUCT_OP, VECTOR_SUM_OP]     learn_size_init: 8     setup_size_init: 10     predict_size_init: 2     fec {num_train_examples: 10 num_valid_examples: 10}     fitness_combination_mode: MEAN_FITNESS_COMBINATION     population_size: 1000     tournament_size: 10     initial_population: RANDOM_ALGORITHM     max_train_steps: 200000000     allowed_mutation_types {\r\n      mutation_types: [ALTER_PARAM_MUTATION_TYPE, RANDOMIZE_INSTRUCTION_MUTATION_TYPE, RANDOMIZE_COMPONENT_FUNCTION_MUTATION_TYPE]     }     mutate_prob: 0.9     progress_every: 10000     ' '--final_tasks=     tasks {       scalar_linear_regression_task {}       features_size: 4       num_train_examples: 1000       num_valid_examples: 100       num_tasks: 100       eval_type: RMS_ERROR       data_seeds: [1000000]       param_seeds: [2000000]     }     ' '--max_experiments=0' --randomize_task_seeds '--select_tasks=     tasks {       scalar_linear_regression_task {}       features_size: 4       num_train_examples: 1000       num_valid_examples: 100       num_tasINFO: Build completed successfully, 426 total actions\r\nRandom seed = 2273927841\r\nRunning evolution experiment (on the T_search tasks)...\r\nindivs=1000, elapsed_secs=0, mean=0.257662, stdev=0.098007, best fit=0.310922,\r\nindivs=11000, elapsed_secs=1, mean=0.296089, stdev=0.071710, best fit=0.327938,\r\nindivs=21000, elapsed_secs=1, mean=0.338708, stdev=0.151846, best fit=0.504255,\r\nindivs=31000, elapsed_secs=2, mean=0.371073, stdev=0.160415, best fit=0.526472,\r\nindivs=41000, elapsed_secs=2, mean=0.378918, stdev=0.182983, best fit=0.586537,\r\nindivs=51000, elapsed_secs=3, mean=0.370984, stdev=0.194690, best fit=0.586740,\r\nindivs=61000, elapsed_secs=3, mean=0.371626, stdev=0.205506, best fit=0.586801,\r\nindivs=71000, elapsed_secs=3, mean=0.375018, stdev=0.194975, best fit=0.590414,\r\nindivs=81000, elapsed_secs=4, mean=0.409807, stdev=0.192511, best fit=0.606084,\r\nindivs=91000, elapsed_secs=5, mean=0.397361, stdev=0.196334, best fit=0.617153,\r\nindivs=101000, elapsed_secs=5, mean=0.413907, stdev=0.270555, best fit=0.760055,\r\nindivs=111000, elapsed_secs=6, mean=0.416433, stdev=0.267181, best fit=0.760055,\r\nindivs=121000, elapsed_secs=6, mean=0.419480, stdev=0.263440, best fit=0.760055,\r\nindivs=131000, elapsed_secs=7, mean=0.408816, stdev=0.265666, best fit=0.760055,\r\nindivs=141000, elapsed_secs=7, mean=0.658768, stdev=0.389252, best fit=0.999924,\r\nindivs=151000, elapsed_secs=8, mean=0.652780, stdev=0.407509, best fit=0.999924,\r\nindivs=161000, elapsed_secs=8, mean=0.601341, stdev=0.426214, best fit=0.999924,\r\nindivs=171000, elapsed_secs=8, mean=0.602564, stdev=0.419431, best fit=0.999924,\r\nindivs=181000, elapsed_secs=9, mean=0.616774, stdev=0.408933, best fit=0.999924,\r\nindivs=191000, elapsed_secs=9, mean=0.655147, stdev=0.411179, best fit=0.999924,\r\nindivs=201000, elapsed_secs=10, mean=0.605780, stdev=0.431867, best fit=0.999924,\r\nindivs=211000, elapsed_secs=10, mean=0.635949, stdev=0.428022, best fit=0.999924,\r\nindivs=221000, elapsed_secs=11, mean=0.625224, stdev=0.421139, best fit=0.999924,\r\nindivs=231000, elapsed_secs=11, mean=0.607377, stdev=0.429841, best fit=0.999924,\r\nindivs=241000, elapsed_secs=11, mean=0.626994, stdev=0.419501, best fit=0.999924,\r\nindivs=251000, elapsed_secs=12, mean=0.625516, stdev=0.424169, best fit=0.999924,\r\nindivs=261000, elapsed_secs=12, mean=0.629389, stdev=0.416612, best fit=0.999924,\r\nindivs=271000, elapsed_secs=13, mean=0.641109, stdev=0.397963, best fit=0.999924,\r\nindivs=281000, elapsed_secs=13, mean=0.631153, stdev=0.410096, best fit=0.999924,\r\nindivs=291000, elapsed_secs=14, mean=0.622386, stdev=0.407571, best fit=0.999924,\r\nindivs=301000, elapsed_secs=14, mean=0.633474, stdev=0.416199, best fit=0.999924,\r\nindivs=311000, elapsed_secs=14, mean=0.630881, stdev=0.409512, best fit=0.999924,\r\nindivs=321000, elapsed_secs=15, mean=0.588123, stdev=0.423522, best fit=0.999924,\r\nindivs=331000, elapsed_secs=15, mean=0.610386, stdev=0.418939, best fit=0.999924,\r\nindivs=341000, elapsed_secs=16, mean=0.614032, stdev=0.417746, best fit=0.999924,\r\nindivs=351000, elapsed_secs=16, mean=0.597986, stdev=0.433914, best fit=0.999924,\r\nindivs=361000, elapsed_secs=17, mean=0.606158, stdev=0.425257, best fit=0.999924,\r\nindivs=371000, elapsed_secs=17, mean=0.643484, stdev=0.415669, best fit=0.999924,\r\nindivs=381000, elapsed_secs=18, mean=0.621760, stdev=0.423698, best fit=0.999924,\r\nindivs=391000, elapsed_secs=18, mean=0.611664, stdev=0.418208, best fit=0.999924,\r\nindivs=401000, elapsed_secs=18, mean=0.617776, stdev=0.414705, best fit=0.999924,\r\nindivs=411000, elapsed_secs=19, mean=0.599760, stdev=0.419455, best fit=0.999924,\r\nindivs=421000, elapsed_secs=19, mean=0.635844, stdev=0.415546, best fit=0.999924,\r\nindivs=431000, elapsed_secs=20, mean=0.617242, stdev=0.418901, best fit=0.999924,\r\nindivs=441000, elapsed_secs=20, mean=0.605797, stdev=0.420787, best fit=0.999924,\r\nindivs=451000, elapsed_secs=21, mean=0.658004, stdev=0.413875, best fit=0.999924,\r\nindivs=461000, elapsed_secs=21, mean=0.632975, stdev=0.416101, best fit=0.999924,\r\nindivs=471000, elapsed_secs=21, mean=0.630914, stdev=0.409561, best fit=0.999924,\r\nindivs=481000, elapsed_secs=22, mean=0.656346, stdev=0.406625, best fit=0.999924,\r\nindivs=491000, elapsed_secs=22, mean=0.618857, stdev=0.420721, best fit=0.999924,\r\nindivs=501000, elapsed_secs=23, mean=0.607742, stdev=0.427038, best fit=0.999924,\r\nindivs=511000, elapsed_secs=23, mean=0.631585, stdev=0.409466, best fit=0.999924,\r\nindivs=521000, elapsed_secs=24, mean=0.637856, stdev=0.407921, best fit=0.999924,\r\nindivs=531000, elapsed_secs=24, mean=0.628126, stdev=0.412077, best fit=0.999924,\r\nindivs=541000, elapsed_secs=25, mean=0.636830, stdev=0.414297, best fit=0.999924,\r\nindivs=551000, elapsed_secs=25, mean=0.632956, stdev=0.406085, best fit=0.999924,\r\nindivs=561000, elapsed_secs=26, mean=0.627347, stdev=0.411754, best fit=0.999924,\r\nindivs=571000, elapsed_secs=26, mean=0.642939, stdev=0.414434, best fit=0.999924,\r\nindivs=581000, elapsed_secs=26, mean=0.623814, stdev=0.417970, best fit=0.999924,\r\nindivs=591000, elapsed_secs=27, mean=0.642933, stdev=0.414460, best fit=0.999924,\r\nindivs=601000, elapsed_secs=27, mean=0.615805, stdev=0.414817, best fit=0.999924,\r\nindivs=611000, elapsed_secs=28, mean=0.621599, stdev=0.419061, best fit=0.999924,\r\nindivs=621000, elapsed_secs=28, mean=0.634927, stdev=0.419389, best fit=0.999924,\r\nindivs=631000, elapsed_secs=29, mean=0.630413, stdev=0.412933, best fit=0.999924,\r\nindivs=641000, elapsed_secs=29, mean=0.617456, stdev=0.421756, best fit=0.999924,\r\nindivs=651000, elapsed_secs=30, mean=0.616297, stdev=0.422633, best fit=0.999924,\r\nindivs=661000, elapsed_secs=30, mean=0.623868, stdev=0.424319, best fit=0.999924,\r\nindivs=671000, elapsed_secs=30, mean=0.586118, stdev=0.426872, best fit=0.999925,\r\nindivs=681000, elapsed_secs=31, mean=0.553973, stdev=0.445875, best fit=0.999925,\r\nindivs=691000, elapsed_secs=31, mean=0.610995, stdev=0.427036, best fit=0.999925,\r\nindivs=701000, elapsed_secs=32, mean=0.589184, stdev=0.432101, best fit=0.999925,\r\nindivs=711000, elapsed_secs=32, mean=0.615177, stdev=0.415815, best fit=0.999925,\r\nindivs=721000, elapsed_secs=33, mean=0.606812, stdev=0.426325, best fit=0.999925,\r\nindivs=731000, elapsed_secs=33, mean=0.599124, stdev=0.430342, best fit=0.999925,\r\nindivs=741000, elapsed_secs=34, mean=0.570718, stdev=0.436637, best fit=0.999925,\r\nindivs=751000, elapsed_secs=34, mean=0.608367, stdev=0.435638, best fit=0.999925,\r\nindivs=761000, elapsed_secs=34, mean=0.598017, stdev=0.430631, best fit=0.999925,\r\nindivs=771000, elapsed_secs=35, mean=0.605815, stdev=0.425129, best fit=0.999925,\r\nindivs=781000, elapsed_secs=35, mean=0.606116, stdev=0.423532, best fit=0.999925,\r\nindivs=791000, elapsed_secs=36, mean=0.584681, stdev=0.427701, best fit=0.999925,\r\nindivs=801000, elapsed_secs=36, mean=0.567159, stdev=0.430966, best fit=0.999925,\r\nindivs=811000, elapsed_secs=37, mean=0.602772, stdev=0.430653, best fit=0.999925,\r\nindivs=821000, elapsed_secs=37, mean=0.586737, stdev=0.431570, best fit=0.999925,\r\nindivs=831000, elapsed_secs=38, mean=0.575602, stdev=0.431212, best fit=0.999925,\r\nindivs=841000, elapsed_secs=38, mean=0.613113, stdev=0.432275, best fit=0.999925,\r\nindivs=851000, elapsed_secs=39, mean=0.567290, stdev=0.436873, best fit=0.999925,\r\nindivs=861000, elapsed_secs=39, mean=0.606541, stdev=0.432605, best fit=0.999925,\r\nindivs=871000, elapsed_secs=39, mean=0.573645, stdev=0.432728, best fit=0.999925,\r\nindivs=881000, elapsed_secs=40, mean=0.607933, stdev=0.427361, best fit=0.999925,\r\nindivs=891000, elapsed_secs=40, mean=0.584814, stdev=0.431185, best fit=0.999925,\r\nindivs=901000, elapsed_secs=41, mean=0.616949, stdev=0.426699, best fit=0.999925,\r\nindivs=911000, elapsed_secs=41, mean=0.577200, stdev=0.440839, best fit=0.999925,\r\nindivs=921000, elapsed_secs=42, mean=0.599291, stdev=0.433413, best fit=0.999925,\r\nindivs=931000, elapsed_secs=42, mean=0.568398, stdev=0.435464, best fit=0.999925,\r\nindivs=941000, elapsed_secs=43, mean=0.595542, stdev=0.436714, best fit=0.999925,\r\nindivs=951000, elapsed_secs=43, mean=0.578625, stdev=0.437732, best fit=0.999925,\r\nindivs=961000, elapsed_secs=44, mean=0.590917, stdev=0.433129, best fit=0.999925,\r\nExperiment done. Retrieving candidate algorithm.\r\nSearch fitness for candidate algorithm = 0.999925\r\nEvaluating candidate algorithm from experiment (on T_select tasks)... \r\nSelect fitness for candidate algorithm = 1.000000\r\nSelect fitness is the best so far. \r\n\r\nFinal evaluation of best algorithm (on unseen tasks)...\r\nFinal evaluation fitness (on unseen data) = 1.000000\r\nAlgorithm found: \r\ndef Setup():\r\n  s2 = s1 - s3\r\n  s2 = s1 - s3\r\n  s1 = s1 * s0\r\n  v1 = v2 + v2\r\n  v1 = v0 + v1\r\n  s2 = -0.0723455\r\n  v1 = s3 * v2\r\n  v1 = s1 * v1\r\n  s3 = s1 - s1\r\n  v2 = v1 + v1\r\ndef Predict():\r\n  s3 = 0.145016\r\n  s1 = dot(v1, v0)\r\ndef Learn():\r\n  s1 = s0 - s1\r\n  v1 = s1 * v0\r\n  s3 = s0 - s3\r\n  v2 = v2 + v1\r\n  v1 = s2 * v2\r\n  s1 = s3 * s1\r\n  s1 = s3 * s0\r\n  s2 = s0 - s3\r\n```","reactions":{"url":"https://api.github.com/repos/google-research/google-research/issues/comments/598130535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"kingsj0405","id":13496612,"node_id":"MDQ6VXNlcjEzNDk2NjEy","avatar_url":"https://avatars.githubusercontent.com/u/13496612?v=4","gravatar_id":"","url":"https://api.github.com/users/kingsj0405","html_url":"https://github.com/kingsj0405","followers_url":"https://api.github.com/users/kingsj0405/followers","following_url":"https://api.github.com/users/kingsj0405/following{/other_user}","gists_url":"https://api.github.com/users/kingsj0405/gists{/gist_id}","starred_url":"https://api.github.com/users/kingsj0405/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kingsj0405/subscriptions","organizations_url":"https://api.github.com/users/kingsj0405/orgs","repos_url":"https://api.github.com/users/kingsj0405/repos","events_url":"https://api.github.com/users/kingsj0405/events{/privacy}","received_events_url":"https://api.github.com/users/kingsj0405/received_events","type":"User","site_admin":false}},{"id":3122390303,"node_id":"MDExOkNsb3NlZEV2ZW50MzEyMjM5MDMwMw==","url":"https://api.github.com/repos/google-research/google-research/issues/events/3122390303","actor":{"login":"kingsj0405","id":13496612,"node_id":"MDQ6VXNlcjEzNDk2NjEy","avatar_url":"https://avatars.githubusercontent.com/u/13496612?v=4","gravatar_id":"","url":"https://api.github.com/users/kingsj0405","html_url":"https://github.com/kingsj0405","followers_url":"https://api.github.com/users/kingsj0405/followers","following_url":"https://api.github.com/users/kingsj0405/following{/other_user}","gists_url":"https://api.github.com/users/kingsj0405/gists{/gist_id}","starred_url":"https://api.github.com/users/kingsj0405/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kingsj0405/subscriptions","organizations_url":"https://api.github.com/users/kingsj0405/orgs","repos_url":"https://api.github.com/users/kingsj0405/repos","events_url":"https://api.github.com/users/kingsj0405/events{/privacy}","received_events_url":"https://api.github.com/users/kingsj0405/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-03-12T11:11:18Z","state_reason":null,"performed_via_github_app":null}]