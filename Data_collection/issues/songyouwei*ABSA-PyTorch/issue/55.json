{"url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch/issues/55","repository_url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch","labels_url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch/issues/55/labels{/name}","comments_url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch/issues/55/comments","events_url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch/issues/55/events","html_url":"https://github.com/songyouwei/ABSA-PyTorch/issues/55","id":447705608,"node_id":"MDU6SXNzdWU0NDc3MDU2MDg=","number":55,"title":"Error while running infer_example.py for bert_spc","user":{"login":"SaratM34","id":1553258,"node_id":"MDQ6VXNlcjE1NTMyNTg=","avatar_url":"https://avatars.githubusercontent.com/u/1553258?v=4","gravatar_id":"","url":"https://api.github.com/users/SaratM34","html_url":"https://github.com/SaratM34","followers_url":"https://api.github.com/users/SaratM34/followers","following_url":"https://api.github.com/users/SaratM34/following{/other_user}","gists_url":"https://api.github.com/users/SaratM34/gists{/gist_id}","starred_url":"https://api.github.com/users/SaratM34/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SaratM34/subscriptions","organizations_url":"https://api.github.com/users/SaratM34/orgs","repos_url":"https://api.github.com/users/SaratM34/repos","events_url":"https://api.github.com/users/SaratM34/events{/privacy}","received_events_url":"https://api.github.com/users/SaratM34/received_events","type":"User","site_admin":false},"labels":[{"id":927827845,"node_id":"MDU6TGFiZWw5Mjc4Mjc4NDU=","url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":927827846,"node_id":"MDU6TGFiZWw5Mjc4Mjc4NDY=","url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-05-23T14:44:30Z","updated_at":"2019-11-07T14:27:53Z","closed_at":"2019-11-07T14:27:53Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI am getting below error when running infer_example.py for bert_spc. Can someone help me solve it?\r\n\r\n![image](https://user-images.githubusercontent.com/1553258/58262107-36f5c980-7d3f-11e9-9374-4cb475c5d710.png)\r\n\r\nBelow is the code for infer_example.py that I am using.\r\n\r\n```python\r\nimport torch\r\nimport torch.nn.functional as F\r\nimport torch.nn as nn\r\nimport argparse\r\n\r\nfrom data_utils import build_tokenizer, build_embedding_matrix\r\nfrom models import IAN, MemNet, ATAE_LSTM, AOA\r\nfrom models.bert_spc import BERT_SPC\r\n\r\n\r\nclass Inferer:\r\n    \"\"\"A simple inference example\"\"\"\r\n\r\n    def __init__(self, opt):\r\n        self.opt = opt\r\n        self.tokenizer = build_tokenizer(\r\n            fnames=[opt.dataset_file['train'], opt.dataset_file['test']],\r\n            max_seq_len=opt.max_seq_len,\r\n            dat_fname='{0}_tokenizer.dat'.format(opt.dataset))\r\n        embedding_matrix = build_embedding_matrix(\r\n            word2idx=self.tokenizer.word2idx,\r\n            embed_dim=opt.embed_dim,\r\n            dat_fname='{0}_{1}_embedding_matrix.dat'.format(str(opt.embed_dim), opt.dataset))\r\n        self.model = opt.model_class(embedding_matrix, opt)\r\n        print('loading model {0} ...'.format(opt.model_name))\r\n        self.model.load_state_dict(torch.load(opt.state_dict_path))\r\n        self.model = self.model.to(opt.device)\r\n        # switch model to evaluation mode\r\n        self.model.eval()\r\n        torch.autograd.set_grad_enabled(False)\r\n\r\n    def evaluate(self, raw_texts):\r\n        context_seqs = [self.tokenizer.text_to_sequence(raw_text.lower().strip()) for raw_text in raw_texts]\r\n        aspect_seqs = [self.tokenizer.text_to_sequence('null')] * len(raw_texts)\r\n        context_indices = torch.tensor(context_seqs, dtype=torch.int64).to(self.opt.device)\r\n        aspect_indices = torch.tensor(aspect_seqs, dtype=torch.int64).to(self.opt.device)\r\n\r\n        t_inputs = [context_indices, aspect_indices]\r\n        t_outputs = self.model(t_inputs)\r\n\r\n        t_probs = F.softmax(t_outputs, dim=-1).cpu().numpy()\r\n        return t_probs\r\n\r\n\r\nif __name__ == '__main__':\r\n    model_classes = {\r\n        'atae_lstm': ATAE_LSTM,\r\n        'ian': IAN,\r\n        'memnet': MemNet,\r\n        'aoa': AOA,\r\n        'bert_spc': BERT_SPC,\r\n    }\r\n    # set your trained models here\r\n    model_state_dict_paths = {\r\n        'atae_lstm': 'state_dict/atae_lstm_restaurant_acc0.7786',\r\n        'ian': 'state_dict/ian_restaurant_acc0.7911',\r\n        'memnet': 'state_dict/memnet_restaurant_acc0.7911',\r\n        'aoa': 'state_dict/aoa_restaurant_acc0.8063',\r\n        'bert_spc': 'state_dict/bert_spc_restaurant_val_acc0.8196',\r\n    }\r\n\r\n    class Option(object):\r\n        pass\r\n    opt = Option()\r\n    opt.model_name = 'bert_spc'\r\n    opt.model_class = model_classes[opt.model_name]\r\n    opt.dataset = 'restaurant'\r\n    opt.dataset_file = {\r\n        'train': './datasets/semeval14/Restaurants_Train.xml.seg',\r\n        'test': './datasets/semeval14/Restaurants_Test_Gold.xml.seg'\r\n    }\r\n    opt.state_dict_path = model_state_dict_paths[opt.model_name]\r\n    opt.embed_dim = 300\r\n    opt.hidden_dim = 300\r\n    opt.max_seq_len = 80\r\n    opt.polarities_dim = 3\r\n    opt.dropout = 0.1\r\n    opt.bert_dim = 768\r\n    opt.hops = 3\r\n    opt.device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\n\r\n    inf = Inferer(opt)\r\n    t_probs = inf.evaluate(['happy memory', 'the service is terrible', 'just normal food'])\r\n    print(t_probs.argmax(axis=-1) - 1)\r\n\r\n```\r\n\r\nThanks\r\n","closed_by":{"login":"songyouwei","id":2573291,"node_id":"MDQ6VXNlcjI1NzMyOTE=","avatar_url":"https://avatars.githubusercontent.com/u/2573291?v=4","gravatar_id":"","url":"https://api.github.com/users/songyouwei","html_url":"https://github.com/songyouwei","followers_url":"https://api.github.com/users/songyouwei/followers","following_url":"https://api.github.com/users/songyouwei/following{/other_user}","gists_url":"https://api.github.com/users/songyouwei/gists{/gist_id}","starred_url":"https://api.github.com/users/songyouwei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songyouwei/subscriptions","organizations_url":"https://api.github.com/users/songyouwei/orgs","repos_url":"https://api.github.com/users/songyouwei/repos","events_url":"https://api.github.com/users/songyouwei/events{/privacy}","received_events_url":"https://api.github.com/users/songyouwei/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch/issues/55/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/songyouwei/ABSA-PyTorch/issues/55/timeline","performed_via_github_app":null,"state_reason":"completed"}