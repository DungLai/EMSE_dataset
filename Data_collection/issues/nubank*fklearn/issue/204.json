{"url":"https://api.github.com/repos/nubank/fklearn/issues/204","repository_url":"https://api.github.com/repos/nubank/fklearn","labels_url":"https://api.github.com/repos/nubank/fklearn/issues/204/labels{/name}","comments_url":"https://api.github.com/repos/nubank/fklearn/issues/204/comments","events_url":"https://api.github.com/repos/nubank/fklearn/issues/204/events","html_url":"https://github.com/nubank/fklearn/issues/204","id":1317444027,"node_id":"I_kwDOCk64ls5Ohpm7","number":204,"title":"Add an option to order by ascending/descending prediction in cumulative effect curves","user":{"login":"HectorLira","id":32204890,"node_id":"MDQ6VXNlcjMyMjA0ODkw","avatar_url":"https://avatars.githubusercontent.com/u/32204890?v=4","gravatar_id":"","url":"https://api.github.com/users/HectorLira","html_url":"https://github.com/HectorLira","followers_url":"https://api.github.com/users/HectorLira/followers","following_url":"https://api.github.com/users/HectorLira/following{/other_user}","gists_url":"https://api.github.com/users/HectorLira/gists{/gist_id}","starred_url":"https://api.github.com/users/HectorLira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HectorLira/subscriptions","organizations_url":"https://api.github.com/users/HectorLira/orgs","repos_url":"https://api.github.com/users/HectorLira/repos","events_url":"https://api.github.com/users/HectorLira/events{/privacy}","received_events_url":"https://api.github.com/users/HectorLira/received_events","type":"User","site_admin":false},"labels":[{"id":1251232930,"node_id":"MDU6TGFiZWwxMjUxMjMyOTMw","url":"https://api.github.com/repos/nubank/fklearn/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-25T22:23:13Z","updated_at":"2022-07-25T22:30:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Describe the feature and the current state.\r\nIn the causal validation module and the [curves file](https://github.com/nubank/fklearn/blob/master/src/fklearn/causal/validation/curves.py), it would be useful to add an `ascending` parameter for the cumulative effect and cumulative gain curves.\r\n\r\nThe current state is to [order predictions descending](https://github.com/nubank/fklearn/blob/ac4a3ee958392a9de7c6f941cb75997559432c94/src/fklearn/causal/validation/curves.py#L98):\r\n```python\r\nordered_df = df.sort_values(prediction, ascending=False).reset_index(drop=True)\r\n```\r\n\r\nIf we add an `ascending: bool = False` argument to the `cumulative_effect_curve`, `cumulative_gain_curve`, `relative_cumulative_gain_curve`, and `effect_curves`, a user could modify how these effects are computed, whether to do them ascending or descending by the prediction column.\r\n\r\n### Will this change a current behavior? How?\r\nNot if the user does not explicitly change the argument to `ascending=True`. If they do, the cumulative effect or cumulative gain curves will be computed using an ascending ordering in the prediction column.\r\n\r\nA model could output a prediction that is not necessarily positively related to the effect to be computed, so adding an option to order this relationship differently will allow for effects and gains with negatively related predictions and outcomes to be computed adequately.\r\n\r\nOne current workaround is to do this:\r\n```python\r\ndf[\"prediction\"] = -df[\"prediction\"]\r\n```\r\n\r\nand then the computation will be made adequately. But this seems like a hack and maybe something we want to solve more cleanly.\r\n\r\n### Additional Information\r\n\r\nThe new definition of `cumulative_effect_curve` would look like this:\r\n\r\n```python\r\n@curry\r\ndef cumulative_effect_curve(df: pd.DataFrame,\r\n                            treatment: str,\r\n                            outcome: str,\r\n                            prediction: str,\r\n                            min_rows: int = 30,\r\n                            steps: int = 100,\r\n                            effect_fn: EffectFnType = linear_effect,\r\n                            ascending: bool = False) -> np.ndarray:\r\n    \"\"\"\r\n    Orders the dataset by prediction and computes the cumulative effect curve according to that ordering\r\n\r\n    Parameters\r\n    ----------\r\n    df : Pandas' DataFrame\r\n        A Pandas' DataFrame with target and prediction scores.\r\n\r\n    treatment : Strings\r\n        The name of the treatment column in `df`.\r\n\r\n    outcome : Strings\r\n        The name of the outcome column in `df`.\r\n\r\n    prediction : Strings\r\n        The name of the prediction column in `df`.\r\n\r\n    min_rows : Integer\r\n        Minimum number of observations needed to have a valid result.\r\n\r\n    steps : Integer\r\n        The number of cumulative steps to iterate when accumulating the effect\r\n\r\n    effect_fn : function (df: pandas.DataFrame, treatment: str, outcome: str) -> int or Array of int\r\n        A function that computes the treatment effect given a dataframe, the name of the treatment column and the name\r\n        of the outcome column.\r\n\r\n    ascending : bool\r\n        Whether the prediction column should be ordered ascending or not. Default is False.\r\n\r\n\r\n    Returns\r\n    ----------\r\n    cumulative effect curve: Numpy's Array\r\n        The cumulative treatment effect according to the predictions ordering.\r\n    \"\"\"\r\n\r\n    size = df.shape[0]\r\n    ordered_df = df.sort_values(prediction, ascending=ascending).reset_index(drop=True)\r\n    n_rows = list(range(min_rows, size, size // steps)) + [size]\r\n    return np.array([effect_fn(ordered_df.head(rows), treatment, outcome) for rows in n_rows])\r\n```\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/nubank/fklearn/issues/204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/nubank/fklearn/issues/204/timeline","performed_via_github_app":null,"state_reason":null}