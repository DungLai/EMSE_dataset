{"url":"https://api.github.com/repos/roclark/sportsipy/issues/459","repository_url":"https://api.github.com/repos/roclark/sportsipy","labels_url":"https://api.github.com/repos/roclark/sportsipy/issues/459/labels{/name}","comments_url":"https://api.github.com/repos/roclark/sportsipy/issues/459/comments","events_url":"https://api.github.com/repos/roclark/sportsipy/issues/459/events","html_url":"https://github.com/roclark/sportsipy/issues/459","id":688658388,"node_id":"MDU6SXNzdWU2ODg2NTgzODg=","number":459,"title":"Scoring and Penalty table pulls for NHL games","user":{"login":"jmcneal84","id":61204638,"node_id":"MDQ6VXNlcjYxMjA0NjM4","avatar_url":"https://avatars.githubusercontent.com/u/61204638?v=4","gravatar_id":"","url":"https://api.github.com/users/jmcneal84","html_url":"https://github.com/jmcneal84","followers_url":"https://api.github.com/users/jmcneal84/followers","following_url":"https://api.github.com/users/jmcneal84/following{/other_user}","gists_url":"https://api.github.com/users/jmcneal84/gists{/gist_id}","starred_url":"https://api.github.com/users/jmcneal84/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmcneal84/subscriptions","organizations_url":"https://api.github.com/users/jmcneal84/orgs","repos_url":"https://api.github.com/users/jmcneal84/repos","events_url":"https://api.github.com/users/jmcneal84/events{/privacy}","received_events_url":"https://api.github.com/users/jmcneal84/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-30T05:37:02Z","updated_at":"2020-08-30T05:42:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I was wanting to pull the data in the scoring and Penalty tables for a specific game into a Pandas DataFrame. Since this wasn't available with the other parts of the package, I created it for myself. I was able to get it to work for my needs, and so I wanted to give it so others can use it. It will need some work to make it formalized to fit better into the rest of the package, but at least this is a start. \r\n\r\nThe 'page' required in each function is a html file, so this would need to be altered in order to call any url.\r\n\r\n\r\n~~~~{.python}\r\nimport pandas as pd\r\nfrom pyquery import PyQuery as pq\r\ndef Scoring(page):\r\n    path=pq(str(page).replace('<!--', '').replace('-->', ''))\r\n    scoring=path('div[id=\"all_scoring\"]')\r\n    table=scoring('tbody')\r\n    scores=table('tr[data-row]')\r\n    period=1\r\n    periods,time,team,goal_type,scorer,goal_number,first_assist,second_assist=([] for i in range(8))\r\n    for i in scores.items():\r\n        if len(i('td'))==0:\r\n            period=period+1\r\n            if period>3:\r\n                period=i('th').text()     \r\n        else:\r\n            if period=='Shootout':\r\n                periods.append(period)\r\n                time.append(i('td').text().split(' ')[0])\r\n                team.append(i('td').text().split(' ')[1])\r\n                goal_type.append(i('td').text().split(' ')[4])\r\n                scorer.append(i('td').text().split(' ')[2]+ ' '+ i('td').text().split(' ')[3])\r\n                goal_number.append('')\r\n                first_assist.append('')\r\n                second_assist.append('')\r\n            else:\r\n                periods.append(period)\r\n                time.append(i('td').text().split(' ')[0])\r\n                team.append(i('td').text().split(' ')[1])\r\n                goal_type.append(i('td').text().split(' ')[2])\r\n                scorer.append(i('td').text().split(' ')[3]+ ' '+ i('td').text().split(' ')[4])\r\n                goal_number.append(i('td').text().split(' ')[5])\r\n                if len(i('td').text().split(' '))>7:\r\n                        first_assist.append(i('td').text().split(' ')[6]+ ' '+ i('td').text().split(' ')[7][:-1])\r\n                        if len(i('td').text().split(' '))>8:\r\n                            second_assist.append(i('td').text().split(' ')[8] + ' '+i('td').text().split(' ')[9])\r\n                        else:\r\n                            second_assist.append('')\r\n                else:\r\n                    first_assist.append('')\r\n                    second_assist.append('')\r\n    df=pd.DataFrame(list(zip(periods,time,team,goal_type,scorer,goal_number,first_assist,second_assist)), \r\n                   columns =['period', 'time','team','goal_type','scorer','goal_number','first_assist','second_assist'])\r\n    return df\r\n\r\ndef Penalty(page):\r\n    path=pq(str(page).replace('<!--', '').replace('-->', ''))\r\n    penalty=path('div[id=\"all_penalty\"]')\r\n    table=penalty('tbody')\r\n    pen=table('tr[data-row]')\r\n    period=1\r\n    periods,time,team,player,penalty_type,penalty_length=([] for i in range(6))\r\n    for i in pen.items():\r\n        if len(i('td'))==0:\r\n            period=period+1\r\n            if period>3:\r\n                period=i('th').text()\r\n        else:\r\n            periods.append(period)\r\n            time.append(i('td').text().split(' ')[0])\r\n            team.append(i('td').text().split(' ')[1])\r\n            player.append(i('td').text().split(' ')[2]+ ' '+ i('td').text().split(' ')[3])\r\n            penalty_name=i('td').text().split(' ')[4]\r\n            for j in range(5,len(i('td').text().split(' '))-2):\r\n                penalty_name=penalty_name+' '+i('td').text().split(' ')[j]\r\n            penalty_type.append(penalty_name)\r\n            penalty_length.append(i('td').text().split(' ')[len(i('td').text().split(' '))-2])\r\n  \r\n    df=pd.DataFrame(list(zip( periods,time,team,player,penalty_type,penalty_length)), \r\n                   columns =['period', 'time','team','player','penalty_type','penalty_length(min)'])\r\n    return df\r\n~~~~\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/roclark/sportsipy/issues/459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/roclark/sportsipy/issues/459/timeline","performed_via_github_app":null,"state_reason":null}