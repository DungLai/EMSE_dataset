{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/31","repository_url":"https://api.github.com/repos/voxelmorph/voxelmorph","labels_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/31/comments","events_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/31/events","html_url":"https://github.com/voxelmorph/voxelmorph/issues/31","id":426785867,"node_id":"MDU6SXNzdWU0MjY3ODU4Njc=","number":31,"title":"an approximate solution to compute mutual information","user":{"login":"argman","id":15120999,"node_id":"MDQ6VXNlcjE1MTIwOTk5","avatar_url":"https://avatars.githubusercontent.com/u/15120999?v=4","gravatar_id":"","url":"https://api.github.com/users/argman","html_url":"https://github.com/argman","followers_url":"https://api.github.com/users/argman/followers","following_url":"https://api.github.com/users/argman/following{/other_user}","gists_url":"https://api.github.com/users/argman/gists{/gist_id}","starred_url":"https://api.github.com/users/argman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/argman/subscriptions","organizations_url":"https://api.github.com/users/argman/orgs","repos_url":"https://api.github.com/users/argman/repos","events_url":"https://api.github.com/users/argman/events{/privacy}","received_events_url":"https://api.github.com/users/argman/received_events","type":"User","site_admin":false},"labels":[{"id":1347467145,"node_id":"MDU6TGFiZWwxMzQ3NDY3MTQ1","url":"https://api.github.com/repos/voxelmorph/voxelmorph/labels/voxelmorph","name":"voxelmorph","color":"1d76db","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":24,"created_at":"2019-03-29T02:21:58Z","updated_at":"2021-03-05T13:08:55Z","closed_at":"2019-11-26T01:55:50Z","author_association":"NONE","active_lock_reason":null,"body":"@adalca @balakg \r\nHiï¼ŒI find an approximate solution to compute mutual information in tensorflow, but I cannot test its rightness as I donot have enough data to train the model, can anyone help ? code is here:\r\n```\r\ndef nmi_gaussian(R, T, win=20, eps=1e-5):\r\n    '''\r\n        Parzen window approximation of mutual information\r\n    Params:\r\n        R : Reference(Fixed) Image, shape should be N * H * W * Z * 1\r\n        T: Test (Moving) Image, shape should be the same as R\r\n        win: number of bins used in histogram counting\r\n    '''\r\n    N, H, W, Z, C = R.shape\r\n    assert C == 1, 'image should be only one channel'\r\n    im_size = N.value * H.value * W.value * Z.value\r\n\r\n    R_min = tf.reduce_min(R, keep_dims=False)\r\n    R_max = tf.reduce_max(R, keep_dims=False)\r\n    T_min = tf.reduce_min(T, keep_dims=False)\r\n    T_max = tf.reduce_max(T, keep_dims=False)\r\n\r\n    R_bin_size = (R_max - R_min) / win\r\n    T_bin_size = (T_max - T_min) / win\r\n\r\n    # compute bins\r\n    R_bin_window = tf.range(R_min + 0.5 * R_bin_size, R_min + 0.5 * R_bin_size + R_bin_size * win - eps, delta=R_bin_size)\r\n    T_bin_window = tf.range(T_min + 0.5 * T_bin_size, T_min + 0.5 * T_bin_size + T_bin_size * win - eps, delta=T_bin_size)\r\n\r\n    R_mesh = tf.tile(tf.reshape(R_bin_window, (-1, 1)), multiples=[1, win])\r\n    T_mesh = tf.tile(tf.reshape(T_bin_window, (1, -1)), multiples=[win, 1])\r\n    R_T_mesh = tf.concat([tf.reshape(R_mesh, (-1, 1)), tf.reshape(T_mesh, (-1, 1))], axis=-1)\r\n    R_T_mesh = R_T_mesh[tf.newaxis, tf.newaxis, tf.newaxis, :, :]\r\n\r\n    p_l_k = 1/(np.sqrt(2 * np.pi)) * tf.exp(-0.5 * (tf.square((R - R_T_mesh[..., 0])/R_bin_size) + tf.square((T - R_T_mesh[..., 1])/T_bin_size)))\r\n    \r\n    p_l_k = tf.reduce_sum(p_l_k, axis=(0, 1, 2, 3)) / im_size\r\n    p_l_k = p_l_k / tf.reduce_sum(p_l_k)\r\n    p_l_k = tf.reshape(p_l_k, (win, win))\r\n    p_l = tf.reduce_sum(p_l_k, axis=0)\r\n    p_k = tf.reduce_sum(p_l_k, axis=1)\r\n\r\n    pl_pk = p_l[:, tf.newaxis] * p_k[tf.newaxis, :]\r\n\r\n    mi = p_l_k * tf.log(p_l_k / pl_pk)\r\n\r\n    mi = tf.where(tf.is_finite(mi), mi, tf.zeros_like(mi))\r\n    mi = -tf.reduce_sum(mi)\r\n    return mi\r\n```\r\n\r\nthe idea is using Parzen Window estimation of MutualInformation, as of which used in MattesMutualInformation of ITK, but replace the B-Spline window function with a Gaussian window function\r\n\r\n_Originally posted by @argman in https://github.com/voxelmorph/voxelmorph/issues/25#issuecomment-477512229_","closed_by":{"login":"adalca","id":3219675,"node_id":"MDQ6VXNlcjMyMTk2NzU=","avatar_url":"https://avatars.githubusercontent.com/u/3219675?v=4","gravatar_id":"","url":"https://api.github.com/users/adalca","html_url":"https://github.com/adalca","followers_url":"https://api.github.com/users/adalca/followers","following_url":"https://api.github.com/users/adalca/following{/other_user}","gists_url":"https://api.github.com/users/adalca/gists{/gist_id}","starred_url":"https://api.github.com/users/adalca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adalca/subscriptions","organizations_url":"https://api.github.com/users/adalca/orgs","repos_url":"https://api.github.com/users/adalca/repos","events_url":"https://api.github.com/users/adalca/events{/privacy}","received_events_url":"https://api.github.com/users/adalca/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/31/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/31/timeline","performed_via_github_app":null,"state_reason":"completed"}