{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/301","repository_url":"https://api.github.com/repos/voxelmorph/voxelmorph","labels_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/301/labels{/name}","comments_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/301/comments","events_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/301/events","html_url":"https://github.com/voxelmorph/voxelmorph/issues/301","id":864674244,"node_id":"MDU6SXNzdWU4NjQ2NzQyNDQ=","number":301,"title":"some questions about the data_loss","user":{"login":"hanlu-zju","id":62321357,"node_id":"MDQ6VXNlcjYyMzIxMzU3","avatar_url":"https://avatars.githubusercontent.com/u/62321357?v=4","gravatar_id":"","url":"https://api.github.com/users/hanlu-zju","html_url":"https://github.com/hanlu-zju","followers_url":"https://api.github.com/users/hanlu-zju/followers","following_url":"https://api.github.com/users/hanlu-zju/following{/other_user}","gists_url":"https://api.github.com/users/hanlu-zju/gists{/gist_id}","starred_url":"https://api.github.com/users/hanlu-zju/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanlu-zju/subscriptions","organizations_url":"https://api.github.com/users/hanlu-zju/orgs","repos_url":"https://api.github.com/users/hanlu-zju/repos","events_url":"https://api.github.com/users/hanlu-zju/events{/privacy}","received_events_url":"https://api.github.com/users/hanlu-zju/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-04-22T08:15:31Z","updated_at":"2021-04-23T15:42:20Z","closed_at":"2021-04-23T05:52:10Z","author_association":"NONE","active_lock_reason":null,"body":"Dear author, \r\nRecently, I have trained my model to register CT lung images using legacy branch.\r\nIt works well when the data_loss is ‘mse’， but spatial_transformer_1_loss is strange(**eg.  -25284398.000**) in the case of ‘ncc’.\r\n\r\n**Details of experiments**\r\nData's pixel value ranges from -1000 to 1000\r\nThe data is not normalized\r\n\r\n**What have I tried**\r\nI have tried to train a model with only one moving data(mov_vol) and only one fixed data(atlas_vol), and save the output of 'spatial_transformer_1' as spatial_transformer_output. Another call of NCC().loss with input[atlas_vol, spatial_transformer_1] will give a value whose **range is [-1, 0]**\r\n\r\n**My question**\r\n1. In  legacy branch，I can find losses.NCC().loss，but I can't find where 'mse' is defined. \r\n2. Since I have checked that the calculation of NCC().loss is correct(**range [-1, 0]**), I'm wondering  what are passed to NCC().loss result in strange spatial_transformer_1_loss (**eg.  -25284398.000**)  during keras training. Is there any other relationship between 'spatial_transformer_1_loss' and 'NCC().loss'? How can I find which variable is y_true and which variable is y_predict?\r\n3. Must the data be normalized to [0,1]? After the data is normalized, spatial_transformer_1_loss will give a value whose **range is [-1, 0]** during keras training.\r\n    \r\n```\r\n        # compile\r\n        mg_model.compile(optimizer=Adam(lr=lr), \r\n                         loss=[data_loss, losses.Grad('l2').loss],\r\n                         loss_weights=[1.0, reg_param])\r\n            \r\n        # fit\r\n        mg_model.fit_generator(cvpr2018_gen, \r\n                               initial_epoch=initial_epoch,\r\n                               epochs=nb_epochs,\r\n                               callbacks=[save_callback, TensorBoard(log_dir='./log')],\r\n                               steps_per_epoch=steps_per_epoch,\r\n                               verbose=1)\r\n        #  my code to save the output of 'spatial_transformer_1' \r\n        moved_layer_model = Model(inputs=mg_model.input, outputs=mg_model.get_layer('spatial_transformer_1').output)\r\n        mov_vol = np.fromfile(train_vol_names[0], dtype=np.float32)\r\n        mov_vol = mov_vol.reshape(128, 128, 128)[np.newaxis, ..., np.newaxis]\r\n        np.save('mov_vol.npy', mov_vol)\r\n        np.save('atlas_vol.npy', atlas_vol)\r\n        spatial_transformer_output = moved_layer_model.predict([mov_vol, atlas_vol])\r\n        np.save('spatial_transformer_output.npy', spatial_transformer_output)\r\n```\r\n\r\n```\r\nfix = np.load('atlas_vol.npy')\r\nmoved = np.load('spatial_transformer_output.npy')\r\nfix_tensor = tf.convert_to_tensor(fix, dtype=tf.float32)\r\nmoved_tensor = tf.convert_to_tensor(moved, dtype=tf.float32)\r\nloss_ncc = NCC().loss(fix_tensor, moved_tensor)\r\n\r\nwith tf.Session() as sess1:\r\n    print(sess1.run(NCC().loss(fix_tensor, moved_tensor)))\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","closed_by":{"login":"hanlu-zju","id":62321357,"node_id":"MDQ6VXNlcjYyMzIxMzU3","avatar_url":"https://avatars.githubusercontent.com/u/62321357?v=4","gravatar_id":"","url":"https://api.github.com/users/hanlu-zju","html_url":"https://github.com/hanlu-zju","followers_url":"https://api.github.com/users/hanlu-zju/followers","following_url":"https://api.github.com/users/hanlu-zju/following{/other_user}","gists_url":"https://api.github.com/users/hanlu-zju/gists{/gist_id}","starred_url":"https://api.github.com/users/hanlu-zju/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanlu-zju/subscriptions","organizations_url":"https://api.github.com/users/hanlu-zju/orgs","repos_url":"https://api.github.com/users/hanlu-zju/repos","events_url":"https://api.github.com/users/hanlu-zju/events{/privacy}","received_events_url":"https://api.github.com/users/hanlu-zju/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/301/timeline","performed_via_github_app":null,"state_reason":"completed"}