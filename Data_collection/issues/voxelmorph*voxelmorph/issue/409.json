{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/409","repository_url":"https://api.github.com/repos/voxelmorph/voxelmorph","labels_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/409/labels{/name}","comments_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/409/comments","events_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/409/events","html_url":"https://github.com/voxelmorph/voxelmorph/issues/409","id":1182397764,"node_id":"I_kwDOB_Nd285GefVE","number":409,"title":"WARNING:tensorflow:Model was constructed with incompatible shape","user":{"login":"Ehsan-data","id":61958093,"node_id":"MDQ6VXNlcjYxOTU4MDkz","avatar_url":"https://avatars.githubusercontent.com/u/61958093?v=4","gravatar_id":"","url":"https://api.github.com/users/Ehsan-data","html_url":"https://github.com/Ehsan-data","followers_url":"https://api.github.com/users/Ehsan-data/followers","following_url":"https://api.github.com/users/Ehsan-data/following{/other_user}","gists_url":"https://api.github.com/users/Ehsan-data/gists{/gist_id}","starred_url":"https://api.github.com/users/Ehsan-data/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ehsan-data/subscriptions","organizations_url":"https://api.github.com/users/Ehsan-data/orgs","repos_url":"https://api.github.com/users/Ehsan-data/repos","events_url":"https://api.github.com/users/Ehsan-data/events{/privacy}","received_events_url":"https://api.github.com/users/Ehsan-data/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-03-27T07:03:45Z","updated_at":"2022-03-31T02:40:27Z","closed_at":"2022-03-31T02:40:27Z","author_association":"NONE","active_lock_reason":null,"body":"**Task** (what are you trying to do/register?)\r\n\r\n[](https://stackoverflow.com/posts/71634277/timeline)0\r\n\r\n\r\nI'm trying to use a pre-trained model with my own MRI 3D data to register brain MRI images\r\n**What have you tried**\r\n\r\nI loaded my 3D data using nilearn\r\n**Details of experiments**\r\n\r\nf_img_1= nib.load('/Users/training/013/time01.nii.gz')\r\nf_img_2= nib.load('/Users/training/013/time02.nii.gz')\r\n\r\nimg_data_1 = f_img_1.get_fdata()\r\nimg_data_2 = f_img_2.get_fdata()\r\n\r\nPlease carefully specify details about your experiments. If you are training, when what is the setup? What loss are you using? What does the convergence look like? If you are registering, please show example inputs and outputs. etc.\r\n\r\nI came across the below error:\r\n\r\nfirst Part of the error:\r\n\r\nWARNING:tensorflow:Model was constructed with shape (None, 160, 192, 224, 1) for input Tensor(\"source_input_3:0\", shape=(None, 160, 192, 224, 1), dtype=float32), but it was called on an input with incompatible shape (None, 365, 256, 256, 1). WARNING:tensorflow:Model was constructed with shape (None, 160, 192, 224, 1) for input Tensor(\"target_input_3:0\", shape=(None, 160, 192, 224, 1), dtype=float32), but it was called on an input with incompatible shape (None, 365, 256, 256, 1).\r\n\r\nfinal Part of the error:\r\n\r\nValueError: Dimension 1 in both shapes must be equal, but are 44 and 45. Shapes are [?,44,32,32] and [?,45,32,32]. for '{{node vxm_dense/unet_dec_upsample_3_concat/concat}} = ConcatV2[N=2, T=DT_FLOAT, Tidx=DT_INT32](vxm_dense/unet_dec_upsample_3/concat_2, vxm_dense/unet_enc_conv_3_0_activation/LeakyRelu, vxm_dense/unet_dec_upsample_3_concat/concat/axis)' with input shapes: [?,44,32,32,32], [?,45,32,32,32], [] and with computed input tensors: input[2] = <4>.\r\n CODE I am using:\r\n\r\n   f_img_1= nib.load(time01.nii.gz')\r\n   f_img_2= nib.load(time02.nii.gz')\r\n\r\n   img_data_1 = f_img_1.get_fdata()\r\n   img_data_2 = f_img_2.get_fdata()\r\n\r\n   #vol_shape: (365, 256, 256)\r\n\r\n# my data is with the above shape, but the pre-trained model throws many errors with shapes rather than 160 x 192 x 224\r\n\r\n   vol_shape = (160, 192, 224)\r\n\r\n   nb_features = [\r\n       [16, 32, 32, 32],\r\n       [32, 32, 32, 32, 32, 16, 16]\r\n    ]\r\n\r\n    vxm_model = vxm.networks.VxmDense(vol_shape, nb_features, int_steps=0);\r\n\r\n    val_input = [\r\n        img_data_1[np.newaxis, ..., np.newaxis],\r\n        img_data_2[np.newaxis, ..., np.newaxis]\r\n    ]\r\n\r\n    vxm_model.load_weights('/brain_3d.h5')\r\n\r\n    val_pred = vxm_model.predict(val_input);\r\n","closed_by":{"login":"adalca","id":3219675,"node_id":"MDQ6VXNlcjMyMTk2NzU=","avatar_url":"https://avatars.githubusercontent.com/u/3219675?v=4","gravatar_id":"","url":"https://api.github.com/users/adalca","html_url":"https://github.com/adalca","followers_url":"https://api.github.com/users/adalca/followers","following_url":"https://api.github.com/users/adalca/following{/other_user}","gists_url":"https://api.github.com/users/adalca/gists{/gist_id}","starred_url":"https://api.github.com/users/adalca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adalca/subscriptions","organizations_url":"https://api.github.com/users/adalca/orgs","repos_url":"https://api.github.com/users/adalca/repos","events_url":"https://api.github.com/users/adalca/events{/privacy}","received_events_url":"https://api.github.com/users/adalca/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/409/timeline","performed_via_github_app":null,"state_reason":"completed"}