{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/404","repository_url":"https://api.github.com/repos/voxelmorph/voxelmorph","labels_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/404/labels{/name}","comments_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/404/comments","events_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/404/events","html_url":"https://github.com/voxelmorph/voxelmorph/issues/404","id":1167328981,"node_id":"I_kwDOB_Nd285FlAbV","number":404,"title":"Help to improve slow validation code","user":{"login":"iamsharmatul","id":52601678,"node_id":"MDQ6VXNlcjUyNjAxNjc4","avatar_url":"https://avatars.githubusercontent.com/u/52601678?v=4","gravatar_id":"","url":"https://api.github.com/users/iamsharmatul","html_url":"https://github.com/iamsharmatul","followers_url":"https://api.github.com/users/iamsharmatul/followers","following_url":"https://api.github.com/users/iamsharmatul/following{/other_user}","gists_url":"https://api.github.com/users/iamsharmatul/gists{/gist_id}","starred_url":"https://api.github.com/users/iamsharmatul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iamsharmatul/subscriptions","organizations_url":"https://api.github.com/users/iamsharmatul/orgs","repos_url":"https://api.github.com/users/iamsharmatul/repos","events_url":"https://api.github.com/users/iamsharmatul/events{/privacy}","received_events_url":"https://api.github.com/users/iamsharmatul/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-03-12T16:11:43Z","updated_at":"2022-03-25T22:01:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Task** (I am trying to perform a scan to scan registration (interpatient))\r\n\r\n[I am currently trying to register ]\r\n\r\n**Details of experiments**\r\n- I am trying to reproduce the result obtained in [Voxelmorph](https://arxiv.org/abs/1802.02604) for VoxelMorph-2.\r\n- All hyperparameters are set to Default.\r\n- I have modified the` generators.py` code so that I can load custom pairs.\r\n- I have added the validation code to check the dice score and mutual information. But it is slow compared to the training.\r\n- I need help to optimize the validation code so that the computation time for validation reduces.\r\n\r\n**Code**:\r\n\r\n```\r\nclass MetricCallback(tf.keras.callbacks.Callback):\r\n    def __init__(self, val_generator, val_steps=10):\r\n        super(tf.keras.callbacks.Callback, self).__init__()\r\n\r\n        self.validation_gen = val_generator\r\n        self.validation_steps = val_steps\r\n\r\n    def on_train_batch_end(self, batch, logs=None):\r\n        if (batch % args.checkpoint == 0):\r\n            model_name = os.path.join(model_dir, '{batch:04d}.h5')\r\n            model.save(model_name.format(batch=batch))\r\n\r\n    def on_epoch_end(self, epoch, logs={}):\r\n        eval_df = pd.DataFrame()\r\n        for val_step, [inputs, outputs] in enumerate(self.validation_gen):\r\n            if (self.validation_steps == val_step):\r\n                break\r\n\r\n            # tensorflow device handling\r\n            # device, nb_devices = vxm.tf.utils.setup_device(0)\r\n            # with tf.device(device):\r\n            moving_img = inputs[0]\r\n            fixed_img = inputs[1]\r\n            moving_seg = inputs[2]\r\n            fixed_seg = outputs[2]\r\n\r\n            warp = self.model.register(moving_img, fixed_img)\r\n\r\n            # apply transform\r\n            warped_seg = transform_nearest.predict([moving_seg, warp]).squeeze()\r\n            warpped_moving_image = transform_model.predict([moving_img, warp]).squeeze()\r\n\r\n            overlap_results_df, surface_distance_results_df = evaluate(fixed_img.squeeze(), warpped_moving_image,\r\n                                    sitk.GetImageFromArray(fixed_seg.squeeze().transpose(1,0)),\r\n                                    sitk.GetImageFromArray(warped_seg.transpose(1,0)))\r\n\r\n            result = pd.concat([overlap_results_df, surface_distance_results_df], axis=1)\r\n            eval_df = eval_df.append(result, ignore_index=True)\r\n            sys.stdout.write(\"\\r\" + 'Validation Pair \"{0}\"/\"{1}\"'.format(val_step, self.validation_steps))\r\n            sys.stdout.flush()\r\n\r\n        tf.summary.scalar(\"Validation Avg Dice/step \", np.mean(eval_df['dice']), epoch)   # dice/validation epoch\r\n        tf.summary.scalar(\"Validation Avg Mi/step \", np.mean(eval_df['mutual_information']), epoch)       # Mutual Information/validation epoch\r\n        tf.summary.scalar(\"Validation Avg volume_similarity/step \", np.mean(eval_df['volume_similarity']), epoch)       # Volume Similarity/validation epoch\r\n\r\n\r\n# Training time\r\nstart_t = datetime.datetime.now()\r\n\r\n# Train model\r\nhistory = model.fit(train_generator,\r\n            initial_epoch=args.initial_epoch,\r\n            epochs=args.epochs,\r\n            steps_per_epoch = args.steps_per_epoch - 2, # Generator starts from 0 and one sample is already taken on line 127\r\n            callbacks=[save_callback, MetricCallback(val_generator, args.val_steps)],\r\n            verbose=1\r\n            )\r\n```\r\n\r\n\r\n[Code.zip](https://github.com/voxelmorph/voxelmorph/files/8237911/train_tf.zip)\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/404/timeline","performed_via_github_app":null,"state_reason":null}