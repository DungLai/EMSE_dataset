{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/57","repository_url":"https://api.github.com/repos/voxelmorph/voxelmorph","labels_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/57/labels{/name}","comments_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/57/comments","events_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/57/events","html_url":"https://github.com/voxelmorph/voxelmorph/issues/57","id":451653356,"node_id":"MDU6SXNzdWU0NTE2NTMzNTY=","number":57,"title":"The Velocity Integration Implementation","user":{"login":"Barnonewdm","id":22175925,"node_id":"MDQ6VXNlcjIyMTc1OTI1","avatar_url":"https://avatars.githubusercontent.com/u/22175925?v=4","gravatar_id":"","url":"https://api.github.com/users/Barnonewdm","html_url":"https://github.com/Barnonewdm","followers_url":"https://api.github.com/users/Barnonewdm/followers","following_url":"https://api.github.com/users/Barnonewdm/following{/other_user}","gists_url":"https://api.github.com/users/Barnonewdm/gists{/gist_id}","starred_url":"https://api.github.com/users/Barnonewdm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Barnonewdm/subscriptions","organizations_url":"https://api.github.com/users/Barnonewdm/orgs","repos_url":"https://api.github.com/users/Barnonewdm/repos","events_url":"https://api.github.com/users/Barnonewdm/events{/privacy}","received_events_url":"https://api.github.com/users/Barnonewdm/received_events","type":"User","site_admin":false},"labels":[{"id":1347467145,"node_id":"MDU6TGFiZWwxMzQ3NDY3MTQ1","url":"https://api.github.com/repos/voxelmorph/voxelmorph/labels/voxelmorph","name":"voxelmorph","color":"1d76db","default":false,"description":""},{"id":2292332428,"node_id":"MDU6TGFiZWwyMjkyMzMyNDI4","url":"https://api.github.com/repos/voxelmorph/voxelmorph/labels/explanation","name":"explanation","color":"c11769","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-06-03T19:36:00Z","updated_at":"2020-08-21T21:31:31Z","closed_at":"2019-06-04T00:10:26Z","author_association":"NONE","active_lock_reason":null,"body":"The implementation of velocity integration is a little confusing. Could help about this issue?\r\n\r\nIn network.py file, there are two different implementation ways. One is:\r\n```\r\nif use_miccai_int:\r\n        # for the miccai2018 submission, the squaring layer\r\n        # scaling was essentially built in by the network\r\n        # was manually composed of a Transform and and Add Layer.\r\n        v = flow\r\n        for _ in range(int_steps):\r\n            v1 = nrn_layers.SpatialTransformer(interp_method='linear', indexing=indexing)([v, v])\r\n            v = keras.layers.add([v, v1])\r\n        flow = v\r\n```\r\nthe other one is:\r\n```\r\n    else:\r\n        # new implementation in neuron is cleaner.\r\n        z_sample = flow\r\n        flow = nrn_layers.VecInt(method='ss', name='flow-int', int_steps=int_steps)(z_sample)\r\n        if bidir:\r\n            rev_z_sample = Negate()(z_sample)\r\n            neg_flow = nrn_layers.VecInt(method='ss', name='neg_flow-int', int_steps=int_steps)(rev_z_sample)\r\n```\r\n\r\nThe new implementation in /ext/neuron/neuron/utils.py is:\r\n```\r\nif method in ['ss', 'scaling_and_squaring']:\r\n        nb_steps = kwargs['nb_steps']\r\n        assert nb_steps >= 0, 'nb_steps should be >= 0, found: %d' % nb_steps\r\n\r\n        if time_dep:\r\n            svec = K.permute_dimensions(vec, [-1, *range(0, vec.shape[-1] - 1)])\r\n            assert 2**nb_steps == svec.shape[0], \"2**nb_steps and vector shape don't match\"\r\n\r\n            svec = svec/(2**nb_steps)\r\n            for _ in range(nb_steps):\r\n                svec = svec[0::2] + tf.map_fn(transform, svec[1::2,:], svec[0::2,:])\r\n\r\n            disp = svec[0, :]\r\n\r\n        else:\r\n            vec = vec/(2**nb_steps)\r\n            for _ in range(nb_steps):\r\n                vec += transform(vec, vec)\r\n            disp = vec \r\n```\r\nThese **two implementations are quite different**, after checking the code in /ext/neuron/neuron/utils.py.  The former MICCAI version is taking the network output (flow) as the time-point velocity. The new implementation is dividing the output (flow) by (2\\**nb_steps) firstly. If the nb_steps equals to the default value (7). **The output (flow) is actually divided by 2\\**7=128.** Then do the same processing of the divided flow, which can be interpreted as the integration of the divided flow.\r\n\r\n**Why the new implementation is quite different from the former? Or why should divide the network output (flow) by 128?** After this processing, I think the divided flow will be near zero or the network output flow will be large enough.\r\n","closed_by":{"login":"adalca","id":3219675,"node_id":"MDQ6VXNlcjMyMTk2NzU=","avatar_url":"https://avatars.githubusercontent.com/u/3219675?v=4","gravatar_id":"","url":"https://api.github.com/users/adalca","html_url":"https://github.com/adalca","followers_url":"https://api.github.com/users/adalca/followers","following_url":"https://api.github.com/users/adalca/following{/other_user}","gists_url":"https://api.github.com/users/adalca/gists{/gist_id}","starred_url":"https://api.github.com/users/adalca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adalca/subscriptions","organizations_url":"https://api.github.com/users/adalca/orgs","repos_url":"https://api.github.com/users/adalca/repos","events_url":"https://api.github.com/users/adalca/events{/privacy}","received_events_url":"https://api.github.com/users/adalca/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/57/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/57/timeline","performed_via_github_app":null,"state_reason":"completed"}