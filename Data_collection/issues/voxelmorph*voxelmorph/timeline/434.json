[{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/comments/1133118714","html_url":"https://github.com/voxelmorph/voxelmorph/issues/434#issuecomment-1133118714","issue_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/434","id":1133118714,"node_id":"IC_kwDOB_Nd285DigT6","user":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"created_at":"2022-05-20T16:51:22Z","updated_at":"2022-05-20T17:47:38Z","author_association":"NONE","body":"> The registration results using the TF or PyTorch model are the same, however I observed that more computational resources were required for registration when using a PyTorch model, on CPUs. This can be quite limiting for registration of large 3D images.\r\n\r\nTo illustrate this point, @EvanBeal and I have created a reproducible example. \r\n\r\n1. Download `cascaded-registration-example.zip` and `cascaded_models_pytorch.zip` from [this link](https://github.com/ivadomed/multimodal-registration/releases/tag/r20220512).\r\n2. Extract `cascaded-registration-example.zip`.\r\n3. Extract `cascaded_models_pytorch.zip` and copy the model files into the `model/` folder from step 2.\r\n4. Run the following commands:\r\n\r\n```bash\r\ncd cascaded-registration-example\r\n\r\npython -m venv venv\r\nsource venv/bin/activate\r\npip install -r requirements.txt\r\n\r\npython cascaded-registration.py\r\n```\r\n\r\nAt time of writing, this will result in the following logs:\r\n\r\n \r\n\r\n<details>\r\n<summary><code>pip install -r requirements.txt</code></summary>\r\n\r\n```console\r\n(venv) joshua@tadpole:~/Desktop/cascaded-registration-example$ pip install -r requirements.txt\r\nLooking in indexes: https://pypi.org/simple, https://download.pytorch.org/whl/cpu\r\nCollecting torch\r\n  Using cached https://download.pytorch.org/whl/cpu/torch-1.11.0%2Bcpu-cp37-cp37m-linux_x86_64.whl (169.1 MB)\r\nCollecting nilearn\r\n  Using cached nilearn-0.9.1-py3-none-any.whl (9.6 MB)\r\nCollecting voxelmorph@ git+https://github.com/voxelmorph/voxelmorph@579a995492bddfe9ce38161e58cf260fc155c4fd\r\n  Cloning https://github.com/voxelmorph/voxelmorph (to revision 579a995492bddfe9ce38161e58cf260fc155c4fd) to /tmp/pip-install-iign6x5s/voxelmorph\r\n  Running command git clone -q https://github.com/voxelmorph/voxelmorph /tmp/pip-install-iign6x5s/voxelmorph\r\n  Running command git checkout -q 579a995492bddfe9ce38161e58cf260fc155c4fd\r\nCollecting typing-extensions\r\n  Using cached typing_extensions-4.2.0-py3-none-any.whl (24 kB)\r\nCollecting numpy>=1.18\r\n  Using cached numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\r\nCollecting requests>=2\r\n  Using cached requests-2.27.1-py2.py3-none-any.whl (63 kB)\r\nCollecting lxml\r\n  Using cached lxml-4.8.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.4 MB)\r\nCollecting scipy>=1.5\r\n  Using cached scipy-1.7.3-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (38.1 MB)\r\nCollecting pandas>=1.0\r\n  Using cached pandas-1.3.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.3 MB)\r\nCollecting nibabel>=3.0.0\r\n  Using cached nibabel-3.2.2-py3-none-any.whl (3.3 MB)\r\nCollecting scikit-learn>=0.22\r\n  Using cached scikit_learn-1.0.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (24.8 MB)\r\nCollecting joblib>=0.15\r\n  Using cached joblib-1.1.0-py2.py3-none-any.whl (306 kB)\r\nCollecting scikit-image\r\n  Using cached scikit_image-0.19.2-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (13.5 MB)\r\nCollecting h5py\r\n  Using cached h5py-3.6.0-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (4.1 MB)\r\nCollecting neurite\r\n  Using cached neurite-0.1-py3-none-any.whl (86 kB)\r\nCollecting urllib3<1.27,>=1.21.1\r\n  Using cached urllib3-1.26.9-py2.py3-none-any.whl (138 kB)\r\nCollecting idna<4,>=2.5; python_version >= \"3\"\r\n  Using cached idna-3.3-py3-none-any.whl (61 kB)\r\nCollecting certifi>=2017.4.17\r\n  Using cached certifi-2022.5.18.1-py3-none-any.whl (155 kB)\r\nCollecting charset-normalizer~=2.0.0; python_version >= \"3\"\r\n  Using cached charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\r\nCollecting pytz>=2017.3\r\n  Using cached pytz-2022.1-py2.py3-none-any.whl (503 kB)\r\nCollecting python-dateutil>=2.7.3\r\n  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\r\nRequirement already satisfied: setuptools in ./venv/lib/python3.7/site-packages (from nibabel>=3.0.0->nilearn->-r requirements.txt (line 4)) (47.1.0)\r\nCollecting packaging>=14.3\r\n  Using cached packaging-21.3-py3-none-any.whl (40 kB)\r\nCollecting threadpoolctl>=2.0.0\r\n  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)\r\nCollecting networkx>=2.2\r\n  Using cached networkx-2.6.3-py3-none-any.whl (1.9 MB)\r\nCollecting imageio>=2.4.1\r\n  Using cached imageio-2.19.2-py3-none-any.whl (3.4 MB)\r\nCollecting pillow!=7.1.0,!=7.1.1,!=8.3.0,>=6.1.0\r\n  Using cached Pillow-9.1.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\r\nCollecting PyWavelets>=1.1.1\r\n  Using cached PyWavelets-1.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (6.4 MB)\r\nCollecting tifffile>=2019.7.26\r\n  Using cached tifffile-2021.11.2-py3-none-any.whl (178 kB)\r\nCollecting cached-property; python_version < \"3.8\"\r\n  Using cached cached_property-1.5.2-py2.py3-none-any.whl (7.6 kB)\r\nCollecting tqdm\r\n  Using cached tqdm-4.64.0-py2.py3-none-any.whl (78 kB)\r\nCollecting matplotlib\r\n  Using cached matplotlib-3.5.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (11.2 MB)\r\nCollecting pystrum\r\n  Using cached pystrum-0.1-py3-none-any.whl (18 kB)\r\nCollecting six\r\n  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)\r\nCollecting pyparsing!=3.0.5,>=2.0.2\r\n  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)\r\nCollecting kiwisolver>=1.0.1\r\n  Using cached kiwisolver-1.4.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.1 MB)\r\nCollecting fonttools>=4.22.0\r\n  Using cached fonttools-4.33.3-py3-none-any.whl (930 kB)\r\nCollecting cycler>=0.10\r\n  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)\r\nUsing legacy setup.py install for voxelmorph, since package 'wheel' is not installed.\r\nInstalling collected packages: typing-extensions, torch, numpy, urllib3, idna, certifi, charset-normalizer, requests, lxml, scipy, pytz, six, python-dateutil, pandas, pyparsing, packaging, nibabel, joblib, threadpoolctl, scikit-learn, nilearn, networkx, pillow, imageio, PyWavelets, tifffile, scikit-image, cached-property, h5py, tqdm, kiwisolver, fonttools, cycler, matplotlib, pystrum, neurite, voxelmorph\r\n    Running setup.py install for voxelmorph ... done\r\nSuccessfully installed PyWavelets-1.3.0 cached-property-1.5.2 certifi-2022.5.18.1 charset-normalizer-2.0.12 cycler-0.11.0 fonttools-4.33.3 h5py-3.6.0 idna-3.3 imageio-2.19.2 joblib-1.1.0 kiwisolver-1.4.2 lxml-4.8.0 matplotlib-3.5.2 networkx-2.6.3 neurite-0.1 nibabel-3.2.2 nilearn-0.9.1 numpy-1.21.6 packaging-21.3 pandas-1.3.5 pillow-9.1.1 pyparsing-3.0.9 pystrum-0.1 python-dateutil-2.8.2 pytz-2022.1 requests-2.27.1 scikit-image-0.19.2 scikit-learn-1.0.2 scipy-1.7.3 six-1.16.0 threadpoolctl-3.1.0 tifffile-2021.11.2 torch-1.11.0+cpu tqdm-4.64.0 typing-extensions-4.2.0 urllib3-1.26.9 voxelmorph-0.1\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary><code>python cascaded-registration.py</code></summary>\r\n\r\n```console\r\n(venv) joshua@tadpole:~/Desktop/cascaded-registration-example$ python cascaded-registration.py \r\n\r\n### Loading data files...\r\n\r\n### Input shape for fixed image: (192, 256, 320)\r\n### Input shape for moving image: (192, 256, 320)\r\n\r\n### Padding data files...\r\n\r\n### Creating data tensors...\r\n\r\n### Input shape for fixed tensor: torch.Size([1, 1, 192, 256, 320])\r\n### Input shape for moving tensor: torch.Size([1, 1, 192, 256, 320])\r\n\r\n### Creating VxmDense models with arguments:\r\n{'inshape': [192, 256, 320], 'int_steps': 5, 'int_downsize': 2, 'unet_half_res': True, 'nb_unet_features': ([256, 256, 256, 256], [256, 256, 256, 256, 256, 256])}\r\n\r\n### Loading first VxmDense model...\r\n/home/joshua/Desktop/cascaded-registration-example/venv/lib/python3.7/site-packages/torch/functional.py:568: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2228.)\r\n  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]\r\n\r\n### Predicting using first VxmDense model...\r\nKilled\r\n```\r\n\r\n</details>\r\n\r\nRunning [`dmesg`](https://stackoverflow.com/a/65352421) afterwards shows:\r\n\r\n```\r\n[13431.495233] Out of memory: Killed process 21402 (python) total-vm:18226108kB, anon-rss:11113872kB, file-rss:0kB, shmem-rss:0kB, UID:1000 pgtables:22864kB oom_score_adj:0\r\n[13432.031921] oom_reaper: reaped process 21402 (python), now anon-rss:0kB, file-rss:0kB, shmem-rss:0kB\r\n```","reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/comments/1133118714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false}},{"id":6652212880,"node_id":"MEE_lADOB_Nd285J5JH6zwAAAAGMgLaQ","url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/events/6652212880","actor":{"login":"EvanBeal","id":32447627,"node_id":"MDQ6VXNlcjMyNDQ3NjI3","avatar_url":"https://avatars.githubusercontent.com/u/32447627?v=4","gravatar_id":"","url":"https://api.github.com/users/EvanBeal","html_url":"https://github.com/EvanBeal","followers_url":"https://api.github.com/users/EvanBeal/followers","following_url":"https://api.github.com/users/EvanBeal/following{/other_user}","gists_url":"https://api.github.com/users/EvanBeal/gists{/gist_id}","starred_url":"https://api.github.com/users/EvanBeal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EvanBeal/subscriptions","organizations_url":"https://api.github.com/users/EvanBeal/orgs","repos_url":"https://api.github.com/users/EvanBeal/repos","events_url":"https://api.github.com/users/EvanBeal/events{/privacy}","received_events_url":"https://api.github.com/users/EvanBeal/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-05-20T16:51:23Z","performed_via_github_app":null},{"id":6652212883,"node_id":"SE_lADOB_Nd285J5JH6zwAAAAGMgLaT","url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/events/6652212883","actor":{"login":"EvanBeal","id":32447627,"node_id":"MDQ6VXNlcjMyNDQ3NjI3","avatar_url":"https://avatars.githubusercontent.com/u/32447627?v=4","gravatar_id":"","url":"https://api.github.com/users/EvanBeal","html_url":"https://github.com/EvanBeal","followers_url":"https://api.github.com/users/EvanBeal/followers","following_url":"https://api.github.com/users/EvanBeal/following{/other_user}","gists_url":"https://api.github.com/users/EvanBeal/gists{/gist_id}","starred_url":"https://api.github.com/users/EvanBeal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EvanBeal/subscriptions","organizations_url":"https://api.github.com/users/EvanBeal/orgs","repos_url":"https://api.github.com/users/EvanBeal/repos","events_url":"https://api.github.com/users/EvanBeal/events{/privacy}","received_events_url":"https://api.github.com/users/EvanBeal/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-05-20T16:51:23Z","performed_via_github_app":null},{"actor":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"created_at":"2022-05-20T16:55:19Z","updated_at":"2022-05-20T16:55:19Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3760","repository_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox","labels_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3760/labels{/name}","comments_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3760/comments","events_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3760/events","html_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox/issues/3760","id":1202038820,"node_id":"I_kwDOATayAc5Hpagk","number":3760,"title":"Integrate EvanBeal's contrast agnostic registration model into SCT's registration scripts","user":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"labels":[{"id":115059044,"node_id":"MDU6TGFiZWwxMTUwNTkwNDQ=","url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels/sct_register_to_template","name":"sct_register_to_template","color":"d4c5f9","default":false,"description":"context:"},{"id":115242575,"node_id":"MDU6TGFiZWwxMTUyNDI1NzU=","url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels/sct_register_multimodal","name":"sct_register_multimodal","color":"d4c5f9","default":false,"description":"context:"},{"id":137139873,"node_id":"MDU6TGFiZWwxMzcxMzk4NzM=","url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels/feature","name":"feature","color":"5319e7","default":false,"description":"category: new functionality"},{"id":2374776463,"node_id":"MDU6TGFiZWwyMzc0Nzc2NDYz","url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels/API:%20registration","name":"API: registration","color":"d4c5f9","default":false,"description":"context:"}],"state":"closed","locked":false,"assignee":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"assignees":[{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},{"login":"EvanBeal","id":32447627,"node_id":"MDQ6VXNlcjMyNDQ3NjI3","avatar_url":"https://avatars.githubusercontent.com/u/32447627?v=4","gravatar_id":"","url":"https://api.github.com/users/EvanBeal","html_url":"https://github.com/EvanBeal","followers_url":"https://api.github.com/users/EvanBeal/followers","following_url":"https://api.github.com/users/EvanBeal/following{/other_user}","gists_url":"https://api.github.com/users/EvanBeal/gists{/gist_id}","starred_url":"https://api.github.com/users/EvanBeal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EvanBeal/subscriptions","organizations_url":"https://api.github.com/users/EvanBeal/orgs","repos_url":"https://api.github.com/users/EvanBeal/repos","events_url":"https://api.github.com/users/EvanBeal/events{/privacy}","received_events_url":"https://api.github.com/users/EvanBeal/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/milestones/50","html_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox/milestone/50","labels_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/milestones/50/labels","id":7737833,"node_id":"MI_kwDOATayAc4AdhHp","number":50,"title":"5.7","description":"","creator":{"login":"mguaypaq","id":928742,"node_id":"MDQ6VXNlcjkyODc0Mg==","avatar_url":"https://avatars.githubusercontent.com/u/928742?v=4","gravatar_id":"","url":"https://api.github.com/users/mguaypaq","html_url":"https://github.com/mguaypaq","followers_url":"https://api.github.com/users/mguaypaq/followers","following_url":"https://api.github.com/users/mguaypaq/following{/other_user}","gists_url":"https://api.github.com/users/mguaypaq/gists{/gist_id}","starred_url":"https://api.github.com/users/mguaypaq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mguaypaq/subscriptions","organizations_url":"https://api.github.com/users/mguaypaq/orgs","repos_url":"https://api.github.com/users/mguaypaq/repos","events_url":"https://api.github.com/users/mguaypaq/events{/privacy}","received_events_url":"https://api.github.com/users/mguaypaq/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":51,"state":"closed","created_at":"2022-03-04T21:53:15Z","updated_at":"2022-08-02T20:46:13Z","due_on":"2022-07-29T07:00:00Z","closed_at":"2022-08-02T20:46:13Z"},"comments":24,"created_at":"2022-04-12T15:45:42Z","updated_at":"2022-07-04T19:10:56Z","closed_at":"2022-07-04T19:10:56Z","author_association":"MEMBER","active_lock_reason":null,"repository":{"id":20361729,"node_id":"MDEwOlJlcG9zaXRvcnkyMDM2MTcyOQ==","name":"spinalcordtoolbox","full_name":"spinalcordtoolbox/spinalcordtoolbox","private":false,"owner":{"login":"spinalcordtoolbox","id":65422525,"node_id":"MDEyOk9yZ2FuaXphdGlvbjY1NDIyNTI1","avatar_url":"https://avatars.githubusercontent.com/u/65422525?v=4","gravatar_id":"","url":"https://api.github.com/users/spinalcordtoolbox","html_url":"https://github.com/spinalcordtoolbox","followers_url":"https://api.github.com/users/spinalcordtoolbox/followers","following_url":"https://api.github.com/users/spinalcordtoolbox/following{/other_user}","gists_url":"https://api.github.com/users/spinalcordtoolbox/gists{/gist_id}","starred_url":"https://api.github.com/users/spinalcordtoolbox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinalcordtoolbox/subscriptions","organizations_url":"https://api.github.com/users/spinalcordtoolbox/orgs","repos_url":"https://api.github.com/users/spinalcordtoolbox/repos","events_url":"https://api.github.com/users/spinalcordtoolbox/events{/privacy}","received_events_url":"https://api.github.com/users/spinalcordtoolbox/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox","description":"Comprehensive and open-source library of analysis tools for MRI of the spinal cord.","fork":false,"url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox","forks_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/forks","keys_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/keys{/key_id}","collaborators_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/teams","hooks_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/hooks","issue_events_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/events{/number}","events_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/events","assignees_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/assignees{/user}","branches_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/branches{/branch}","tags_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/tags","blobs_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/refs{/sha}","trees_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/trees{/sha}","statuses_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/statuses/{sha}","languages_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/languages","stargazers_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/stargazers","contributors_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/contributors","subscribers_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/subscribers","subscription_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/subscription","commits_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/commits{/sha}","git_commits_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/commits{/sha}","comments_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/comments{/number}","issue_comment_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/comments{/number}","contents_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/contents/{+path}","compare_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/compare/{base}...{head}","merges_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/merges","archive_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/downloads","issues_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues{/number}","pulls_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/pulls{/number}","milestones_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/milestones{/number}","notifications_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels{/name}","releases_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/releases{/id}","deployments_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/deployments","created_at":"2014-05-31T18:01:05Z","updated_at":"2023-01-15T00:37:20Z","pushed_at":"2023-01-17T20:50:07Z","git_url":"git://github.com/spinalcordtoolbox/spinalcordtoolbox.git","ssh_url":"git@github.com:spinalcordtoolbox/spinalcordtoolbox.git","clone_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox.git","svn_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox","homepage":"https://spinalcordtoolbox.com","size":138915,"stargazers_count":155,"watchers_count":155,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":92,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":290,"license":{"key":"lgpl-3.0","name":"GNU Lesser General Public License v3.0","spdx_id":"LGPL-3.0","url":"https://api.github.com/licenses/lgpl-3.0","node_id":"MDc6TGljZW5zZTEy"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["mri","neuroimage","python","spinalcord"],"visibility":"public","forks":92,"open_issues":290,"watchers":155,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"This issue is for planning the integration of @EvanBeal's [contrast agnostic registration model project](https://github.com/ivadomed/multimodal-registration) into SCT's registration scripts.\r\n\r\n### Proposed changes (copied from 2022-04-05 meeting minutes)\r\n\r\n- Include preprocessing steps\r\n- Load the models weights and build the architecture (using [VoxelMorph](https://github.com/voxelmorph/voxelmorph) functions)\r\n- Use the models to produce the warping field\r\n- Transform the warping field so it can be used with sct_apply_transfo\r\n- Call this function from the [register function](https://github.com/spinalcordtoolbox/spinalcordtoolbox/blob/master/spinalcordtoolbox/scripts/sct_register_to_template.py#L1189) of `sct_register_to_template` \r\n    - And/or `sct_register_multimodal`? (TODO: Needs clarification)\r\n\r\n### Remaining work\r\n\r\n- [ ] Investigate if model can be converted to ONNX, or if we need to depend on VoxelMorph directly\r\n   - NB: If it can't be converted, then SCT will have to depend on Tensorflow once more, which conflicts with the vision for #3735.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3760/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/comments/1142392972","html_url":"https://github.com/voxelmorph/voxelmorph/issues/434#issuecomment-1142392972","issue_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/434","id":1142392972,"node_id":"IC_kwDOB_Nd285EF4iM","user":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"created_at":"2022-05-31T17:04:41Z","updated_at":"2022-05-31T19:21:44Z","author_association":"NONE","body":"To debug this issue, I started out by switching to a smaller versions of the input images. That way, I could run inference using the [PyTorch Profiler](https://pytorch.org/tutorials/recipes/recipes/profiler_recipe.html) without the process being killed.\r\n\r\n\r\n<details> \r\n<summary>Generating the smaller input images</summary>\r\n\r\n```bash\r\ncd cascaded-registration-example/data\r\n\r\n# Cropping around the spinal cord (T1w)\r\nsct_deepseg_sc -i T1w.nii.gz -c t1 -centerline cnn\r\nsct_create_mask -i T1w.nii.gz -p centerline,T1w_seg.nii.gz -size 35mm -f cylinder -o mask_T1w.nii.gz\r\nsct_crop_image -i T1w.nii.gz -m mask_T1w.nii.gz\r\n\r\n# Cropping around the spinal cord (T2w)\r\nsct_deepseg_sc -i T2w.nii.gz -c t2 -centerline cnn\r\nsct_create_mask -i T2w.nii.gz -p centerline,T2w_seg.nii.gz -size 35mm -f cylinder -o mask_T2w.nii.gz\r\nsct_crop_image -i T2w.nii.gz -m mask_T2w.nii.gz\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>Profiling code</summary>\r\n\r\n```python\r\nprint(\"\\n### Predicting using first VxmDense model...\")\r\nfrom torch.profiler import profile, record_function, ProfilerActivity\r\nwith profile(activities=[ProfilerActivity.CPU], record_shapes=True, profile_memory=True) as prof:\r\n    with record_function(\"model_inference\"):\r\n        try: \r\n            moved, warp_tensor = pt_first_model(input_moving, input_fixed, registration=True)\r\n            warp_data_first = warp_tensor[0].permute(1, 2, 3, 0).detach().numpy()\r\n        except Exception as e:\r\n            print(f\"Caught exception:\\n{e}\")\r\n\r\nprint(\"\\n### Displaying model profiling...\")\r\nprint(prof.key_averages(group_by_input_shape=True).table(sort_by=\"self_cpu_memory_usage\", row_limit=10))\r\n```\r\n\r\n</details>\r\n\r\nI then varied the size of the input images using padding to see how the memory usage for the `VXMDense` model changes.\r\n\r\n<details> \r\n<summary> <code> torch.Size([1, 1, 32, 80, 160]) </code> </summary>\r\n\r\n```bash\r\n### Loading data files...\r\n### Input shape for fixed image: (42, 95, 172)\r\n### Input shape for moving image: (39, 101, 169)\r\n### Padding data files... (scale=1.0)\r\n### Creating data tensors...\r\n### Input shape for fixed tensor: torch.Size([1, 1, 32, 80, 160])\r\n### Input shape for moving tensor: torch.Size([1, 1, 32, 80, 160])\r\n### Creating VxmDense models with arguments:\r\n{'inshape': [32, 80, 160], 'int_steps': 5, 'int_downsize': 2, 'unet_half_res': True, 'nb_unet_features': ([256, 256, 256, 256], [256, 256, 256, 256, 256, 256])}\r\n### Loading first VxmDense model...\r\nC:\\Users\\Joshua\\repos\\spinalcordtoolbox\\venv_sct\\lib\\site-packages\\torch\\functional.py:568: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  C:\\actions-runner\\_work\\pytorch\\pytorch\\builder\\windows\\pytorch\\aten\\src\\ATen\\native\\TensorShape.cpp:2228.)\r\n  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]\r\n### Predicting using first VxmDense model...\r\n### Displaying model profiling...\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\n                             Name    Self CPU %      Self CPU   CPU total %     CPU total  CPU time avg       CPU Mem  Self CPU Mem    # of Calls                                                                      Input Shapes  \r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\n                    aten::resize_         0.01%     593.000us         0.01%     593.000us      37.062us     690.23 Mb     690.23 Mb            16                                                                     [[0], [], []]  \r\n                 aten::leaky_relu         3.01%     247.546ms         3.01%     247.546ms     247.546ms     400.00 Mb     400.00 Mb             1                                                       [[1, 256, 32, 80, 160], []]  \r\n                      aten::empty         0.02%       1.541ms         0.02%       1.541ms      20.013us     375.50 Mb     375.50 Mb            77                                                          [[], [], [], [], [], []]  \r\n                 aten::leaky_relu         1.88%     154.606ms         1.88%     154.606ms      38.651ms     200.00 Mb     200.00 Mb             4                                                        [[1, 256, 16, 40, 80], []]  \r\n         aten::upsample_nearest3d         0.23%      18.924ms         0.23%      19.047ms      19.047ms      50.00 Mb      50.00 Mb             1                                                     [[1, 256, 8, 20, 40], [], []]  \r\n                 aten::leaky_relu         0.29%      23.879ms         0.29%      23.879ms      11.940ms      12.50 Mb      12.50 Mb             2                                                         [[1, 256, 8, 20, 40], []]  \r\n         aten::upsample_nearest3d         0.03%       2.377ms         0.03%       2.562ms       2.562ms       6.25 Mb       6.25 Mb             1                                                     [[1, 256, 4, 10, 20], [], []]  \r\n                        aten::add         0.03%       2.718ms         0.03%       2.718ms     271.800us       5.86 Mb       5.86 Mb            10                                      [[1, 3, 16, 40, 80], [1, 3, 16, 40, 80], []]  \r\n                        aten::add         0.02%       1.379ms         0.02%       1.379ms       1.379ms       4.69 Mb       4.69 Mb             1                                    [[1, 3, 32, 80, 160], [1, 3, 32, 80, 160], []]  \r\n                        aten::div         0.01%       1.217ms         0.02%       1.292ms     430.667us       4.69 Mb       4.69 Mb             3                                                            [[1, 32, 80, 160], []]  \r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\nSelf CPU time total: 8.221s\r\n```\r\n\r\n</details>\r\n\r\n<details> \r\n<summary> <code> torch.Size([1, 1, 48, 128, 256]) </code> </summary>\r\n\r\n```bash\r\n### Padding data files... (scale=1.5)\r\n### Creating data tensors...\r\n### Input shape for fixed tensor: torch.Size([1, 1, 48, 128, 256])\r\n### Input shape for moving tensor: torch.Size([1, 1, 48, 128, 256])\r\n### Creating VxmDense models with arguments:\r\n{'inshape': [48, 128, 256], 'int_steps': 5, 'int_downsize': 2, 'unet_half_res': True, 'nb_unet_features': ([256, 256, 256, 256], [256, 256, 256, 256, 256, 256])}\r\n### Loading first VxmDense model...\r\n### Predicting using first VxmDense model...\r\n[W C:\\actions-runner\\_work\\pytorch\\pytorch\\builder\\windows\\pytorch\\c10\\core\\CPUAllocator.cpp:219] Memory block of unknown size was allocated before the profiling started, profiler results will not include the deallocation event\r\n### Displaying model profiling...\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\n                             Name    Self CPU %      Self CPU   CPU total %     CPU total  CPU time avg       CPU Mem  Self CPU Mem    # of Calls                                                                      Input Shapes  \r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\n                    aten::resize_         0.00%     676.000us         0.00%     676.000us      48.286us       2.58 Gb       2.58 Gb            14                                                                     [[0], [], []]  \r\n                 aten::leaky_relu         3.54%     833.097ms         3.54%     833.097ms     833.097ms       1.50 Gb       1.50 Gb             1                                                      [[1, 256, 48, 128, 256], []]  \r\n                      aten::empty         0.01%       1.229ms         0.01%       1.229ms      16.387us       1.18 Gb       1.18 Gb            75                                                          [[], [], [], [], [], []]  \r\n                 aten::leaky_relu         1.47%     344.682ms         1.47%     344.682ms      86.171ms     768.00 Mb     768.00 Mb             4                                                       [[1, 256, 24, 64, 128], []]  \r\n         aten::upsample_nearest3d         0.23%      54.896ms         0.23%      55.152ms      55.152ms     192.00 Mb     192.00 Mb             1                                                    [[1, 256, 12, 32, 64], [], []]  \r\n                 aten::leaky_relu         0.10%      24.044ms         0.10%      24.044ms      12.022ms      48.00 Mb      48.00 Mb             2                                                        [[1, 256, 12, 32, 64], []]  \r\n         aten::upsample_nearest3d         0.04%       8.719ms         0.04%       8.808ms       8.808ms      24.00 Mb      24.00 Mb             1                                                     [[1, 256, 6, 16, 32], [], []]  \r\n                        aten::add         0.02%       5.416ms         0.02%       5.416ms     541.600us      22.50 Mb      22.50 Mb            10                                    [[1, 3, 24, 64, 128], [1, 3, 24, 64, 128], []]  \r\n                        aten::add         0.02%       3.601ms         0.02%       3.601ms       3.601ms      18.00 Mb      18.00 Mb             1                                  [[1, 3, 48, 128, 256], [1, 3, 48, 128, 256], []]  \r\n                        aten::div         0.01%       2.720ms         0.01%       2.804ms     934.667us      18.00 Mb      18.00 Mb             3                                                           [[1, 48, 128, 256], []]  \r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\nSelf CPU time total: 23.511s\r\n```\r\n\r\n</details>\r\n\r\n<details> \r\n<summary> <code> torch.Size([1, 1, 80, 176, 336]) </code> </summary>\r\n\r\n```bash\r\n### Padding data files... (scale=2.0)\r\n### Creating data tensors...\r\n### Input shape for fixed tensor: torch.Size([1, 1, 80, 176, 336])\r\n### Input shape for moving tensor: torch.Size([1, 1, 80, 176, 336])\r\n### Creating VxmDense models with arguments:\r\n{'inshape': [80, 176, 336], 'int_steps': 5, 'int_downsize': 2, 'unet_half_res': True, 'nb_unet_features': ([256, 256, 256, 256], [256, 256, 256, 256, 256, 256])}\r\n### Loading first VxmDense model...\r\n### Predicting using first VxmDense model...\r\n### Displaying model profiling...\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\n                             Name    Self CPU %      Self CPU   CPU total %     CPU total  CPU time avg       CPU Mem  Self CPU Mem    # of Calls                                                                      Input Shapes  \r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\n                      aten::empty         0.01%      16.675ms         0.01%      16.675ms     225.338us       7.10 Gb       7.10 Gb            74                                                          [[], [], [], [], [], []]  \r\n                 aten::leaky_relu         1.77%        3.277s         1.77%        3.277s        3.277s       4.51 Gb       4.51 Gb             1                                                      [[1, 256, 80, 176, 336], []]  \r\n                    aten::resize_         0.00%       5.439ms         0.00%       5.439ms     418.385us       3.26 Gb       3.26 Gb            13                                                                     [[0], [], []]  \r\n                 aten::leaky_relu         0.68%        1.251s         0.68%        1.251s     312.791ms       2.26 Gb       2.26 Gb             4                                                       [[1, 256, 40, 88, 168], []]  \r\n         aten::upsample_nearest3d         0.33%     601.633ms         0.33%     605.453ms     605.453ms     577.50 Mb     577.50 Mb             1                                                    [[1, 256, 20, 44, 84], [], []]  \r\n                 aten::leaky_relu         0.08%     150.162ms         0.08%     150.162ms      75.081ms     144.38 Mb     144.38 Mb             2                                                        [[1, 256, 20, 44, 84], []]  \r\n         aten::upsample_nearest3d         0.03%      56.432ms         0.03%      57.331ms      57.331ms      72.19 Mb      72.19 Mb             1                                                    [[1, 256, 10, 22, 42], [], []]  \r\n                        aten::add         0.01%      20.539ms         0.01%      20.539ms       2.054ms      67.68 Mb      67.68 Mb            10                                    [[1, 3, 40, 88, 168], [1, 3, 40, 88, 168], []]  \r\n                        aten::add         0.02%      32.434ms         0.02%      32.434ms      32.434ms      54.14 Mb      54.14 Mb             1                                  [[1, 3, 80, 176, 336], [1, 3, 80, 176, 336], []]  \r\n                        aten::div         0.00%       9.147ms         0.00%       9.226ms       3.075ms      54.14 Mb      54.14 Mb             3                                                           [[1, 80, 176, 336], []]  \r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------  \r\nSelf CPU time total: 184.869s\r\n```\r\n\r\n</details>\r\n\r\n((Going any larger started to run into memory issues, as I only have 16GB of RAM on my computer.))","reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/comments/1142392972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/comments/1142393272","html_url":"https://github.com/voxelmorph/voxelmorph/issues/434#issuecomment-1142393272","issue_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/434","id":1142393272,"node_id":"IC_kwDOB_Nd285EF4m4","user":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"created_at":"2022-05-31T17:04:59Z","updated_at":"2022-05-31T17:26:35Z","author_association":"NONE","body":"One thing I found was setting `inplace=True` for the `LeakyReLU` activation here:\r\n\r\nhttps://github.com/voxelmorph/voxelmorph/blob/2a55d73e517507f0ca8ffc4dd91a7fcbc3cc9949/voxelmorph/torch/networks.py#L300\r\n\r\nSince this [seems to be okay for inference](https://discuss.pytorch.org/t/whats-the-difference-between-nn-relu-and-nn-relu-inplace-true/948).\r\n\r\n<details> \r\n<summary> inplace=False vs inplace=True </summary>\r\n\r\n```bash\r\n# Before (inplace=False)\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------\r\n                             Name    Self CPU %      Self CPU   CPU total %     CPU total  CPU time avg       CPU Mem  Self CPU Mem    # of Calls                                                                      Input Shapes\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------\r\n                      aten::empty         0.01%       6.840ms         0.01%       6.840ms      95.000us       7.10 Gb       7.10 Gb            72                                                          [[], [], [], [], [], []]\r\n                 aten::leaky_relu         2.06%        1.693s         2.06%        1.693s        1.693s       4.51 Gb       4.51 Gb             1                                                      [[1, 256, 80, 176, 336], []]\r\n                    aten::resize_         0.00%     621.000us         0.00%     621.000us      47.769us       3.26 Gb       3.26 Gb            13                                                                     [[0], [], []]\r\n                 aten::leaky_relu         0.95%     782.395ms         0.95%     782.395ms     195.599ms       2.26 Gb       2.26 Gb             4                                                       [[1, 256, 40, 88, 168], []]\r\n         aten::upsample_nearest3d         0.20%     161.730ms         0.20%     162.394ms     162.394ms     577.50 Mb     577.50 Mb             1                                                    [[1, 256, 20, 44, 84], [], []]\r\n                 aten::leaky_relu         0.10%      85.524ms         0.10%      85.524ms      42.762ms     144.38 Mb     144.38 Mb             2                                                        [[1, 256, 20, 44, 84], []]\r\n         aten::upsample_nearest3d         0.02%      19.909ms         0.02%      19.987ms      19.987ms      72.19 Mb      72.19 Mb             1                                                    [[1, 256, 10, 22, 42], [], []]\r\n                        aten::add         0.04%      29.780ms         0.04%      29.780ms       2.978ms      67.68 Mb      67.68 Mb            10                                    [[1, 3, 40, 88, 168], [1, 3, 40, 88, 168], []]\r\n                        aten::add         0.12%      96.687ms         0.12%      96.687ms      96.687ms      54.14 Mb      54.14 Mb             1                                  [[1, 3, 80, 176, 336], [1, 3, 80, 176, 336], []]\r\n                        aten::div         0.02%      18.319ms         0.02%      18.465ms       6.155ms      54.14 Mb      54.14 Mb             3                                                           [[1, 80, 176, 336], []]\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------\r\nSelf CPU time total: 82.204s\r\n```\r\n\r\n```bash\r\n# After (inplace=True)\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------\r\n                             Name    Self CPU %      Self CPU   CPU total %     CPU total  CPU time avg       CPU Mem  Self CPU Mem    # of Calls                                                                      Input Shapes\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------\r\n                      aten::empty         0.00%       2.334ms         0.00%       2.334ms      32.417us       7.10 Gb       7.10 Gb            72                                                          [[], [], [], [], [], []]\r\n                    aten::resize_         0.00%     475.000us         0.00%     475.000us      36.538us       3.26 Gb       3.26 Gb            13                                                                     [[0], [], []]\r\n         aten::upsample_nearest3d         0.33%     284.014ms         0.33%     284.181ms     284.181ms     577.50 Mb     577.50 Mb             1                                                    [[1, 256, 20, 44, 84], [], []]\r\n         aten::upsample_nearest3d         0.03%      21.693ms         0.03%      21.888ms      21.888ms      72.19 Mb      72.19 Mb             1                                                    [[1, 256, 10, 22, 42], [], []]\r\n                        aten::add         0.03%      26.587ms         0.03%      26.587ms       2.659ms      67.68 Mb      67.68 Mb            10                                    [[1, 3, 40, 88, 168], [1, 3, 40, 88, 168], []]\r\n                        aten::add         0.05%      46.416ms         0.05%      46.416ms      46.416ms      54.14 Mb      54.14 Mb             1                                  [[1, 3, 80, 176, 336], [1, 3, 80, 176, 336], []]\r\n                        aten::div         0.03%      25.394ms         0.03%      25.522ms       8.507ms      54.14 Mb      54.14 Mb             3                                                           [[1, 80, 176, 336], []]\r\n                        aten::sub         0.01%      11.161ms         0.01%      11.318ms       3.773ms      54.14 Mb      54.14 Mb             3                                                       [[1, 80, 176, 336], [], []]\r\n                        aten::mul         0.01%       9.967ms         0.01%      10.121ms       3.374ms      54.14 Mb      54.14 Mb             3                                                           [[1, 80, 176, 336], []]\r\n       aten::upsample_trilinear3d         0.18%     151.571ms         0.18%     152.065ms     152.065ms      54.14 Mb      54.13 Mb             1                                                 [[1, 3, 40, 88, 168], [], [], []]\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  --------------------------------------------------------------------------------\r\nSelf CPU time total: 85.741s\r\n```\r\n\r\n</details>\r\n\r\nThis does have a big effect, but... it still doesn't address the largest source of memory usage.","reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/comments/1142393272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/comments/1142419265","html_url":"https://github.com/voxelmorph/voxelmorph/issues/434#issuecomment-1142419265","issue_url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/434","id":1142419265,"node_id":"IC_kwDOB_Nd285EF-9B","user":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"created_at":"2022-05-31T17:32:51Z","updated_at":"2022-05-31T18:09:26Z","author_association":"NONE","body":"Using `group_by_stack_n`, we can see that the most expensive `empty` calls are happening in the `ConvBlock` module within the `Unet` forward pass:\r\n\r\n<details>\r\n<summary> group_by_stack_n </summary>\r\n\r\n```bash\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ---------------------------------------------------------------------------\r\n                             Name    Self CPU %      Self CPU   CPU total %     CPU total  CPU time avg       CPU Mem  Self CPU Mem    # of Calls  Source Location\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ---------------------------------------------------------------------------\r\n                      aten::empty         0.00%     709.000us         0.00%     709.000us      64.455us       6.96 Gb       6.96 Gb            11  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: Unet\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(123): forward\r\n                                                                                                                                                   nn.Module: ConvBlock\r\n\r\n                    aten::resize_         0.00%     264.000us         0.00%     264.000us      33.000us       1.93 Gb       1.93 Gb             8  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: Unet\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(123): forward\r\n                                                                                                                                                   nn.Module: MaxPool3d\r\n\r\n                    aten::resize_         0.00%      91.000us         0.00%      91.000us      30.333us       1.29 Gb       1.29 Gb             3  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: Unet\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(123): forward\r\n                                                                                                                                                   <built-in method cat of type object at 0x00007FFA919CE700>\r\n\r\n         aten::upsample_nearest3d         0.23%     164.532ms         0.23%     165.392ms      55.131ms     658.71 Mb     658.71 Mb             3  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: Unet\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(123): forward\r\n                                                                                                                                                   nn.Module: Upsample\r\n\r\n                      aten::empty         0.00%     310.000us         0.00%     310.000us      20.667us      67.68 Mb      67.68 Mb            15  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: VecInt\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\layers.py(64): forward\r\n                                                                                                                                                   nn.Module: SpatialTransformer\r\n\r\n                      aten::empty         0.00%      48.000us         0.00%      48.000us      24.000us      54.14 Mb      54.14 Mb             2  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: SpatialTransformer\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\layers.py(30): forward\r\n\r\n                        aten::add         0.04%      30.484ms         0.04%      30.484ms      30.484ms      54.14 Mb      54.14 Mb             1  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: SpatialTransformer\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\layers.py(30): forward\r\n\r\n                        aten::div         0.02%      10.832ms         0.02%      10.936ms       3.645ms      54.14 Mb      54.14 Mb             3  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: SpatialTransformer\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\layers.py(30): forward\r\n\r\n                        aten::sub         0.02%      11.130ms         0.02%      11.239ms       3.746ms      54.14 Mb      54.14 Mb             3  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: SpatialTransformer\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\layers.py(30): forward\r\n\r\n                        aten::mul         0.01%      10.450ms         0.01%      10.559ms       3.520ms      54.14 Mb      54.14 Mb             3  nn.Module: VxmDense\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\networks.py(244): forward\r\n                                                                                                                                                   nn.Module: SpatialTransformer\r\n                                                                                                                                                   lib\\site-packages\\voxelmorph\\torch\\layers.py(30): forward\r\n\r\n---------------------------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ---------------------------------------------------------------------------\r\nSelf CPU time total: 71.878s\r\n```\r\n\r\n</details>\r\n\r\nAt this point, I'm wondering if this is just inherent to Pytorch, given that we're performing [large convolutions on CPU](https://discuss.pytorch.org/t/pytorch-high-memory-demand/2798/2).\r\n\r\n> This is specific to CPU – the CPU convolution code is not very optimized (for memory usage) and uses a lot of memory. The CUDA convolution implementation (via cuDNN) is much faster and uses less memory.","reactions":{"url":"https://api.github.com/repos/voxelmorph/voxelmorph/issues/comments/1142419265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false}},{"actor":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"created_at":"2022-08-31T13:16:45Z","updated_at":"2022-08-31T13:16:45Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3867","repository_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox","labels_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3867/labels{/name}","comments_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3867/comments","events_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3867/events","html_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox/issues/3867","id":1357241238,"node_id":"I_kwDOATayAc5Q5duW","number":3867,"title":"`algo=dl` abruptly stops with no error message when used on images that are too large","user":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"labels":[{"id":103610285,"node_id":"MDU6TGFiZWwxMDM2MTAyODU=","url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels/bug","name":"bug","color":"5319e7","default":true,"description":"category: fixes an error in the code"},{"id":114296696,"node_id":"MDU6TGFiZWwxMTQyOTY2OTY=","url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels/priority:MEDIUM","name":"priority:MEDIUM","color":"fbca04","default":false,"description":""},{"id":115242575,"node_id":"MDU6TGFiZWwxMTUyNDI1NzU=","url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels/sct_register_multimodal","name":"sct_register_multimodal","color":"d4c5f9","default":false,"description":"context:"}],"state":"closed","locked":false,"assignee":{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false},"assignees":[{"login":"joshuacwnewton","id":16181459,"node_id":"MDQ6VXNlcjE2MTgxNDU5","avatar_url":"https://avatars.githubusercontent.com/u/16181459?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuacwnewton","html_url":"https://github.com/joshuacwnewton","followers_url":"https://api.github.com/users/joshuacwnewton/followers","following_url":"https://api.github.com/users/joshuacwnewton/following{/other_user}","gists_url":"https://api.github.com/users/joshuacwnewton/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuacwnewton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuacwnewton/subscriptions","organizations_url":"https://api.github.com/users/joshuacwnewton/orgs","repos_url":"https://api.github.com/users/joshuacwnewton/repos","events_url":"https://api.github.com/users/joshuacwnewton/events{/privacy}","received_events_url":"https://api.github.com/users/joshuacwnewton/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/milestones/51","html_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox/milestone/51","labels_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/milestones/51/labels","id":8263133,"node_id":"MI_kwDOATayAc4AfhXd","number":51,"title":"5.8","description":"","creator":{"login":"mguaypaq","id":928742,"node_id":"MDQ6VXNlcjkyODc0Mg==","avatar_url":"https://avatars.githubusercontent.com/u/928742?v=4","gravatar_id":"","url":"https://api.github.com/users/mguaypaq","html_url":"https://github.com/mguaypaq","followers_url":"https://api.github.com/users/mguaypaq/followers","following_url":"https://api.github.com/users/mguaypaq/following{/other_user}","gists_url":"https://api.github.com/users/mguaypaq/gists{/gist_id}","starred_url":"https://api.github.com/users/mguaypaq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mguaypaq/subscriptions","organizations_url":"https://api.github.com/users/mguaypaq/orgs","repos_url":"https://api.github.com/users/mguaypaq/repos","events_url":"https://api.github.com/users/mguaypaq/events{/privacy}","received_events_url":"https://api.github.com/users/mguaypaq/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":72,"state":"closed","created_at":"2022-08-02T20:46:26Z","updated_at":"2022-12-08T19:26:34Z","due_on":"2022-12-02T08:00:00Z","closed_at":"2022-12-01T18:50:33Z"},"comments":5,"created_at":"2022-08-31T12:07:47Z","updated_at":"2022-11-24T18:53:55Z","closed_at":"2022-11-24T18:53:54Z","author_association":"MEMBER","active_lock_reason":null,"repository":{"id":20361729,"node_id":"MDEwOlJlcG9zaXRvcnkyMDM2MTcyOQ==","name":"spinalcordtoolbox","full_name":"spinalcordtoolbox/spinalcordtoolbox","private":false,"owner":{"login":"spinalcordtoolbox","id":65422525,"node_id":"MDEyOk9yZ2FuaXphdGlvbjY1NDIyNTI1","avatar_url":"https://avatars.githubusercontent.com/u/65422525?v=4","gravatar_id":"","url":"https://api.github.com/users/spinalcordtoolbox","html_url":"https://github.com/spinalcordtoolbox","followers_url":"https://api.github.com/users/spinalcordtoolbox/followers","following_url":"https://api.github.com/users/spinalcordtoolbox/following{/other_user}","gists_url":"https://api.github.com/users/spinalcordtoolbox/gists{/gist_id}","starred_url":"https://api.github.com/users/spinalcordtoolbox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinalcordtoolbox/subscriptions","organizations_url":"https://api.github.com/users/spinalcordtoolbox/orgs","repos_url":"https://api.github.com/users/spinalcordtoolbox/repos","events_url":"https://api.github.com/users/spinalcordtoolbox/events{/privacy}","received_events_url":"https://api.github.com/users/spinalcordtoolbox/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox","description":"Comprehensive and open-source library of analysis tools for MRI of the spinal cord.","fork":false,"url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox","forks_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/forks","keys_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/keys{/key_id}","collaborators_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/teams","hooks_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/hooks","issue_events_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/events{/number}","events_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/events","assignees_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/assignees{/user}","branches_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/branches{/branch}","tags_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/tags","blobs_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/refs{/sha}","trees_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/trees{/sha}","statuses_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/statuses/{sha}","languages_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/languages","stargazers_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/stargazers","contributors_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/contributors","subscribers_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/subscribers","subscription_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/subscription","commits_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/commits{/sha}","git_commits_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/git/commits{/sha}","comments_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/comments{/number}","issue_comment_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/comments{/number}","contents_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/contents/{+path}","compare_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/compare/{base}...{head}","merges_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/merges","archive_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/downloads","issues_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues{/number}","pulls_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/pulls{/number}","milestones_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/milestones{/number}","notifications_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/labels{/name}","releases_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/releases{/id}","deployments_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/deployments","created_at":"2014-05-31T18:01:05Z","updated_at":"2023-01-15T00:37:20Z","pushed_at":"2023-01-17T20:50:07Z","git_url":"git://github.com/spinalcordtoolbox/spinalcordtoolbox.git","ssh_url":"git@github.com:spinalcordtoolbox/spinalcordtoolbox.git","clone_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox.git","svn_url":"https://github.com/spinalcordtoolbox/spinalcordtoolbox","homepage":"https://spinalcordtoolbox.com","size":138915,"stargazers_count":155,"watchers_count":155,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":92,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":290,"license":{"key":"lgpl-3.0","name":"GNU Lesser General Public License v3.0","spdx_id":"LGPL-3.0","url":"https://api.github.com/licenses/lgpl-3.0","node_id":"MDc6TGljZW5zZTEy"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["mri","neuroimage","python","spinalcord"],"visibility":"public","forks":92,"open_issues":290,"watchers":155,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"As discovered in https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3865#issuecomment-1232161658, when the following command is run:\r\n\r\n```\r\nsct_register_multimodal -i _VISTA_Lspine_SENSE_20210922113031_2001.nii -d _VISTA_Tspine_SENSE_20210922113031_1901.nii -param step=1,type=im,algo=dl\r\n```\r\n\r\nThe output of `sct_register_multimodal` abruptly stops when trying to predict using the second VxmDense model:\r\n\r\n```\r\nLoad data to register...\r\n\r\n Creating data tensors...\r\n\r\n Input shape for fixed tensor: torch.Size([1, 1, 64, 304, 304])\r\n\r\n Input shape for moving tensor: torch.Size([1, 1, 64, 304, 304])\r\n\r\n Creating VxmDense models with arguments:\r\n\r\n{'inshape': [64, 304, 304], 'int_steps': 5, 'int_downsize': 2, 'unet_half_res': True, 'nb_unet_features': ([256, 256, 256, 256], [256, 256, 256, 256, 256, 256])}\r\n\r\n Loading first VxmDense model...\r\n\r\n Loading second VxmDense model...\r\n\r\n Predicting using first VxmDense model...\r\n```\r\n\r\nThere is no indication of what went wrong, so some investigation is needed.\r\n\r\n> **NB:** This dataset is internal/private, and can be found on `duke` in `projects/template_dog_virginiatech`","reactions":{"url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/spinalcordtoolbox/spinalcordtoolbox/issues/3867/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"}]