{"url":"https://api.github.com/repos/dbiir/UER-py/issues/199","repository_url":"https://api.github.com/repos/dbiir/UER-py","labels_url":"https://api.github.com/repos/dbiir/UER-py/issues/199/labels{/name}","comments_url":"https://api.github.com/repos/dbiir/UER-py/issues/199/comments","events_url":"https://api.github.com/repos/dbiir/UER-py/issues/199/events","html_url":"https://github.com/dbiir/UER-py/issues/199","id":976404070,"node_id":"MDU6SXNzdWU5NzY0MDQwNzA=","number":199,"title":"请教关于MLM预训练问题","user":{"login":"2021ckck","id":89349733,"node_id":"MDQ6VXNlcjg5MzQ5NzMz","avatar_url":"https://avatars.githubusercontent.com/u/89349733?v=4","gravatar_id":"","url":"https://api.github.com/users/2021ckck","html_url":"https://github.com/2021ckck","followers_url":"https://api.github.com/users/2021ckck/followers","following_url":"https://api.github.com/users/2021ckck/following{/other_user}","gists_url":"https://api.github.com/users/2021ckck/gists{/gist_id}","starred_url":"https://api.github.com/users/2021ckck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/2021ckck/subscriptions","organizations_url":"https://api.github.com/users/2021ckck/orgs","repos_url":"https://api.github.com/users/2021ckck/repos","events_url":"https://api.github.com/users/2021ckck/events{/privacy}","received_events_url":"https://api.github.com/users/2021ckck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-22T15:31:30Z","updated_at":"2021-09-04T17:27:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**您好！请问以下几个问题，非常感谢：**\r\n\r\n**（1）请问我以BERT为基础，进行MLM的预训练，同时采用静态Span masking，请问是正确的操作吗？不知道为何，我实际训练出的模型效果反倒不如原生BERT。**\r\n预训练脚本如下：\r\npython3 preprocess.py --corpus_path corpus/corpus.txt \\\r\n                      --vocab_path models/google_zh_vocab.txt \\\r\n                      --dataset_path mlm_base_dataset.pt \\\r\n                      --processes_num 1 --span_masking --span_geo_prob 0.3 --span_max_length 5  --target mlm\t\t\t\t\t\t  \r\n\r\n\r\npython3 pretrain.py --dataset_path mlm_base_dataset.pt --vocab_path models/google_zh_vocab.txt \\\r\n                    --pretrained_model_path models/google_zh_model.bin \\\r\n                    --output_model_path models/output_model.bin \\\r\n                    --config_path models/bert/base_config.json \\\r\n                    --world_size 1 --gpu_ranks 0 --learning_rate 2e-5  \\\r\n\t\t\t\t\t--total_steps 50000 --save_checkpoint_steps 10000    --report_steps 1000  --batch_size 8\\\r\n\t\t\t\t\t--embedding word_pos_seg --encoder transformer --mask fully_visible --target mlm\t\r\n\r\n\r\n**（2）请问以上述方式训练出来的UER模型，convert转化为huggingface模型的过程中，我采用了script文件夹中提供的convert_bert_from_uer_to_huggingface.py，其中choice选择默认的BERT还是MLM呢？ 我选择了默认的BERT，但是报错：**\r\n\r\nTraceback (most recent call last):\r\n  File \"convert_bert_from_uer_to_huggingface_cloze_long.py\", line 66, in <module>\r\n    main()\r\n  File \"convert_bert_from_uer_to_huggingface_cloze_long.py\", line 51, in main\r\n    output_model[\"bert.pooler.dense.weight\"] = input_model[\"target.nsp_linear_1.weight\"]\r\nKeyError: 'target.nsp_linear_1.weight'\r\nTraceback (most recent call last):\r\n  File \"convert_bert_from_uer_to_huggingface_cloze_short.py\", line 66, in <module>\r\n    main()\r\n  File \"convert_bert_from_uer_to_huggingface_cloze_short.py\", line 51, in main\r\n    output_model[\"bert.pooler.dense.weight\"] = input_model[\"target.nsp_linear_1.weight\"]\r\nKeyError: 'target.nsp_linear_1.weight'\r\n\r\n\r\n**（3）然后我选择了MLM，就没报错了，那么，请问下，采用上述训练方式（在原生BERT模型上继续预训练MLM）后，训练出的模型还属不属于和原生BERT结构相同的模型呢？还是说只剩下了MLM的权重？NSP的权重被自动删除了？如果需要训练出的模型和原生BERT结构一样，是否target 只能采用bert呢？同时语料库corpus也需要准备NSP的那种语料库？**\r\n\r\n**（4）最后，请问下，如果MLM训练后，结构和BERT不一样了，会影响模型的正常使用吗？目前我测试了一下，在一些数据集上仍然可以和BERT一样用。**\r\n\r\n感谢！\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/dbiir/UER-py/issues/199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dbiir/UER-py/issues/199/timeline","performed_via_github_app":null,"state_reason":null}