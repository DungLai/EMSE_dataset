{"url":"https://api.github.com/repos/Farama-Foundation/Miniworld/issues/18","repository_url":"https://api.github.com/repos/Farama-Foundation/Miniworld","labels_url":"https://api.github.com/repos/Farama-Foundation/Miniworld/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/Farama-Foundation/Miniworld/issues/18/comments","events_url":"https://api.github.com/repos/Farama-Foundation/Miniworld/issues/18/events","html_url":"https://github.com/Farama-Foundation/Miniworld/issues/18","id":509172798,"node_id":"MDU6SXNzdWU1MDkxNzI3OTg=","number":18,"title":"Occlusion queries, ability to get list of visible objects","user":{"login":"maximecb","id":713766,"node_id":"MDQ6VXNlcjcxMzc2Ng==","avatar_url":"https://avatars.githubusercontent.com/u/713766?v=4","gravatar_id":"","url":"https://api.github.com/users/maximecb","html_url":"https://github.com/maximecb","followers_url":"https://api.github.com/users/maximecb/followers","following_url":"https://api.github.com/users/maximecb/following{/other_user}","gists_url":"https://api.github.com/users/maximecb/gists{/gist_id}","starred_url":"https://api.github.com/users/maximecb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maximecb/subscriptions","organizations_url":"https://api.github.com/users/maximecb/orgs","repos_url":"https://api.github.com/users/maximecb/repos","events_url":"https://api.github.com/users/maximecb/events{/privacy}","received_events_url":"https://api.github.com/users/maximecb/received_events","type":"User","site_admin":false},"labels":[{"id":1037461126,"node_id":"MDU6TGFiZWwxMDM3NDYxMTI2","url":"https://api.github.com/repos/Farama-Foundation/Miniworld/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-10-18T16:06:43Z","updated_at":"2020-01-24T20:50:27Z","closed_at":"2020-01-24T20:50:27Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"@mweiss17 has requested this feature for his navigation research project, and there are many other legitimate use cases, so it's time to take a deeper look.\r\n\r\nProposed API:\r\n```\r\ndef get_visible_entities(self):\r\n    raise NotImplemented\r\n    return list of visible entities\r\n```\r\n\r\nDoing this will necessarily involve performing an extra rendering pass so that we can check if pixels from any object end up being drawn on the screen.\r\n\r\nThere is a standard OpenGL way of doing this using occlusion queries:\r\nhttps://vertostudio.com/gamedev/?p=177\r\n\r\nOne technique to speed this up is to use results from the previous frame (previous camera and object position) which are slightly out of date:\r\nhttps://www.reddit.com/r/opengl/comments/1pv8qe/how_do_occlusion_queries_work/\r\nhttp://www.visualizationlibrary.org/documentation/pag_guide_occlusion_culling.html\r\n\r\nThe rendering pass for occlusion queries should be done with texturing disabled. It should also ideally use some kind of a bounding volume for objects. Right now the bounding volume in MiniWorld is a bounding cylinder. The downside is that this is any bounding volume is an approximation. In some cases, it will report objects as visible when they are not. Note that even without this definition, the OpenGL definition of an object being visible is if any single pixel is visible.\r\n\r\n@mweiss17 It could be a problem for navigation if one single pixel being drawn makes an object \"visible\". One way we might be able to get around it is by having bounding volumes that are slightly too small, or to check if objects are visible in N successive frames. That is, don't expect the follower to have seen the object unless we are \"really extra sure\" that this object has been visible for a little while and from multiple camera positions while the agent was moving. In other words, MiniWorld will use the OpenGL definition of visible, but you can do some post-processing to be more conservative as for that it means for your agent to consider something visible. You can also use other heuristics such as distance between the agent and the object, and approximate size of the object on screen (based on distance + height, trigonometry).\r\n\r\nStep 1 for me in implementing this is probably to refactor MiniWorld a bit so that we have a better architecture for doing multiple rendering passes. Otherwise, we can do occlusion queries based on the rendering of the last frame, and using more conservative heuristics, this may work fairly well.\r\n","closed_by":{"login":"maximecb","id":713766,"node_id":"MDQ6VXNlcjcxMzc2Ng==","avatar_url":"https://avatars.githubusercontent.com/u/713766?v=4","gravatar_id":"","url":"https://api.github.com/users/maximecb","html_url":"https://github.com/maximecb","followers_url":"https://api.github.com/users/maximecb/followers","following_url":"https://api.github.com/users/maximecb/following{/other_user}","gists_url":"https://api.github.com/users/maximecb/gists{/gist_id}","starred_url":"https://api.github.com/users/maximecb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maximecb/subscriptions","organizations_url":"https://api.github.com/users/maximecb/orgs","repos_url":"https://api.github.com/users/maximecb/repos","events_url":"https://api.github.com/users/maximecb/events{/privacy}","received_events_url":"https://api.github.com/users/maximecb/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/Farama-Foundation/Miniworld/issues/18/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Farama-Foundation/Miniworld/issues/18/timeline","performed_via_github_app":null,"state_reason":"completed"}