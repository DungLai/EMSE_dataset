{"url":"https://api.github.com/repos/mozilla/TTS/issues/287","repository_url":"https://api.github.com/repos/mozilla/TTS","labels_url":"https://api.github.com/repos/mozilla/TTS/issues/287/labels{/name}","comments_url":"https://api.github.com/repos/mozilla/TTS/issues/287/comments","events_url":"https://api.github.com/repos/mozilla/TTS/issues/287/events","html_url":"https://github.com/mozilla/TTS/issues/287","id":497006301,"node_id":"MDU6SXNzdWU0OTcwMDYzMDE=","number":287,"title":" The expanded size of the tensor (90) must match the existing size (126) at non-singleton dimension 1.  ","user":{"login":"vcjob","id":51916323,"node_id":"MDQ6VXNlcjUxOTE2MzIz","avatar_url":"https://avatars.githubusercontent.com/u/51916323?v=4","gravatar_id":"","url":"https://api.github.com/users/vcjob","html_url":"https://github.com/vcjob","followers_url":"https://api.github.com/users/vcjob/followers","following_url":"https://api.github.com/users/vcjob/following{/other_user}","gists_url":"https://api.github.com/users/vcjob/gists{/gist_id}","starred_url":"https://api.github.com/users/vcjob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vcjob/subscriptions","organizations_url":"https://api.github.com/users/vcjob/orgs","repos_url":"https://api.github.com/users/vcjob/repos","events_url":"https://api.github.com/users/vcjob/events{/privacy}","received_events_url":"https://api.github.com/users/vcjob/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-09-23T10:08:05Z","updated_at":"2019-09-25T10:39:50Z","closed_at":"2019-09-24T14:26:21Z","author_association":"NONE","active_lock_reason":null,"body":"Hello everyone. \r\n\r\nI updated today TTS (master branch) and faced with multiple issues.\r\nThe first one, I had to add \r\n_\"gradual_training\": [[0, 7, 32], [10000, 5, 32], [50000, 3, 32], [130000, 2, 16], [290000, 1, 8]],\r\n_ to the config_tacotron_gst.json, since it wasn't presented there, but train.py requires it (Tacotron_GST).  \r\nThe second one, which I've got stuck on, I keep facing the error: \r\n_RuntimeError: The expanded size of the tensor (90) must match the existing size (126) at non-singleton dimension 1.  Target sizes: [32, 90, 80].  Tensor sizes: [32, 126, 1]\r\n_\r\nIt happens right after the first batch is fed.  Depending on data (different ds, use or no trim_silence) values differ (e.g.  _The expanded size of the tensor (100) must match the existing size (140) at non-singleton dimension 1.  Target sizes: [32, 100, 80].  Tensor sizes: [32, 140, 1]_ )\r\nIf I change model type to Tacotron2, I get the following: _AttributeError: 'Decoder' object has no attribute 'set_r'_ .\r\n**it works with Tacotron model! (config.json)**\r\nThe full config I use is attached below. \r\nsome specs: \r\nUbuntu 18.04 \r\nrtx2080 ti\r\n\r\nPlease, help me to make it work! Thank you!\r\n-----------\r\n{\r\n        \"run_name\": \"mozilla-tacotron-gst\",\r\n        \"run_description\": \"GST with single speaker\",\r\n\r\n        \"audio\":{\r\n            // Audio processing parameters\r\n            \"num_mels\": 80,         // size of the mel spec frame.\r\n            \"num_freq\": 1025,       // number of stft frequency levels. Size of the linear spectogram frame.\r\n            \"sample_rate\": 22050,   // DATASET-RELATED: wav sample-rate. If different than the original data, it is resampled.\r\n            \"frame_length_ms\": 50,  // stft window length in ms.\r\n            \"frame_shift_ms\": 12.5, // stft window hop-lengh in ms.\r\n            \"preemphasis\": 0.98,    // pre-emphasis to reduce spec noise and make it more structured. If 0.0, no -pre-emphasis.\r\n            \"min_level_db\": -100,   // normalization range\r\n            \"ref_level_db\": 20,     // reference level db, theoretically 20db is the sound of air.\r\n            \"power\": 1.5,           // value to sharpen wav signals after GL algorithm.\r\n            \"griffin_lim_iters\": 60,// #griffin-lim iterations. 30-60 is a good range. Larger the value, slower the generation.\r\n            // Normalization parameters\r\n            \"signal_norm\": true,    // normalize the spec values in range [0, 1]\r\n            \"symmetric_norm\": false, // move normalization to range [-1, 1]\r\n            \"max_norm\": 1,          // scale normalization to range [-max_norm, max_norm] or [0, max_norm]\r\n            \"clip_norm\": true,      // clip normalized values into the range.\r\n            \"mel_fmin\": 0.0,         // minimum freq level for mel-spec. ~50 for male and ~95 for female voices. Tune for dataset!!\r\n            \"mel_fmax\": 10000.0,        // maximum freq level for mel-spec. Tune for dataset!!\r\n            \"do_trim_silence\": false  // enable trimming of slience of audio as you load it. LJspeech (false), TWEB (false), Nancy (true)\r\n        },\r\n\r\n        \"distributed\":{\r\n            \"backend\": \"nccl\",\r\n            \"url\": \"tcp:\\/\\/localhost:54321\"\r\n        },\r\n\r\n        \"reinit_layers\": [],\r\n\r\n        \"model\": \"TacotronGST\",          // one of the model in models/\r\n        \"grad_clip\": 1,                // upper limit for gradients for clipping.\r\n        \"epochs\": 10000,                // total number of epochs to train.\r\n        \"lr\": 0.0001,                  // Initial learning rate. If Noam decay is active, maximum learning rate.\r\n        \"lr_decay\": false,             // if true, Noam learning rate decaying is applied through training.\r\n        \"warmup_steps\": 4000,          // Noam decay steps to increase the learning rate from 0 to \"lr\"\r\n        \"windowing\": false,            // Enables attention windowing. Used only in eval mode.\r\n        \"memory_size\": 5,              // ONLY TACOTRON - memory queue size used to queue network predictions to feed autoregressive connection. Useful if r < 5.\r\n        \"attention_norm\": \"sigmoid\",   // softmax or sigmoid. Suggested to use softmax for Tacotron2 and sigmoid for Tacotron.\r\n        \"prenet_type\": \"original\",           // \"original\" or \"bn\".\r\n        \"prenet_dropout\": true,        // enable/disable dropout at prenet.\r\n        \"use_forward_attn\": true,      // enable/disable forward attention. In general, it aligns faster.\r\n        \"forward_attn_mask\": false,    // Apply forward attention mask at inference to prevent bad modes. Try it if your model does not align well.\r\n        \"transition_agent\": false,     // enable/disable transition agent of forward attention.\r\n        \"location_attn\": false,        // enable_disable location sensitive attention. It is enabled for TACOTRON by default.\r\n        \"loss_masking\": true,         // enable / disable loss masking against the sequence padding.\r\n        \"enable_eos_bos_chars\": false, // enable/disable beginning of sentence and end of sentence chars.\r\n        \"stopnet\": true,               // Train stopnet predicting the end of synthesis.\r\n        \"separate_stopnet\": true,     // Train stopnet seperately if 'stopnet==true'. It prevents stopnet loss to influence the rest of the model. It causes a better model, but it trains SLOWER.\r\n        \"tb_model_param_stats\": false,     // true, plots param stats per layer on tensorboard. Might be memory consuming, but good for debugging.\r\n\r\n        \"batch_size\": 32,       // Batch size for training. Lower values than 32 might cause hard to learn attention.\r\n        \"eval_batch_size\":16,\r\n        \"r\": 5,                 // Number of frames to predict for step.\r\n        \"gradual_training\": [[0, 7, 32], [10000, 5, 32], [50000, 3, 32], [130000, 2, 16], [290000, 1, 8]],\r\n        \"wd\": 0.000001,         // Weight decay weight.\r\n        \"checkpoint\": true,     // If true, it saves checkpoints per \"save_step\"\r\n        \"save_step\": 1000,      // Number of training steps expected to save traning stats and checkpoints.\r\n        \"print_step\": 10,       // Number of steps to log traning on console.\r\n        \"batch_group_size\": 0,  //Number of batches to shuffle after bucketing.\r\n\r\n        \"run_eval\": true,\r\n        \"test_delay_epochs\": 5,  //Until attention is aligned, testing only wastes computation time.\r\n        \"test_sentences_file\": null,\r\n        \"data_path\": \"/ssd/y/\", // DATASET-RELATED: can overwritten from command argument\r\n        \"meta_file_train\": \"/ssd/y/train.csv\",      // DATASET-RELATED: metafile for training dataloader.\r\n        \"meta_file_val\": \"/ssd/y/val.csv\",    // DATASET-RELATED: metafile for evaluation dataloader.\r\n        \"dataset\": \"ljspeech\",      // DATASET-RELATED: one of TTS.dataset.preprocessors depending on your target dataset. Use \"tts_cache\" for pre-computed dataset by extract_features.py\r\n        \"min_seq_len\": 1,       // DATASET-RELATED: minimum text length to use in training\r\n        \"max_seq_len\": 314,     // DATASET-RELATED: maximum text length\r\n        \"output_path\": \"/ssd/y/outputs/\",      // DATASET-RELATED: output path for all training outputs.\r\n        \"num_loader_workers\": 4,        // number of training data loader processes. Don't set it too big. 4-8 are good values.\r\n        \"num_val_loader_workers\": 4,    // number of evaluation data loader processes.\r\n        \"phoneme_cache_path\": \"new_phonems\",  // phoneme computation is slow, therefore, it caches results in the given folder.\r\n        \"use_phonemes\": true,           // use phonemes instead of raw characters. It is suggested for better pronounciation.\r\n        \"phoneme_language\": \"ru\",     // depending on your target language, pick one from  https://github.com/bootphon/phonemizer#languages\r\n        \"text_cleaner\": \"r_cleaner\",\r\n        \"use_speaker_embedding\": false, // whether to use additional embeddings for separate speakers\r\n        \"style_wav_for_test\": null // path to wav for styling the inference tests when using GST\r\n    }\r\n\r\n","closed_by":{"login":"erogol","id":1402048,"node_id":"MDQ6VXNlcjE0MDIwNDg=","avatar_url":"https://avatars.githubusercontent.com/u/1402048?v=4","gravatar_id":"","url":"https://api.github.com/users/erogol","html_url":"https://github.com/erogol","followers_url":"https://api.github.com/users/erogol/followers","following_url":"https://api.github.com/users/erogol/following{/other_user}","gists_url":"https://api.github.com/users/erogol/gists{/gist_id}","starred_url":"https://api.github.com/users/erogol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erogol/subscriptions","organizations_url":"https://api.github.com/users/erogol/orgs","repos_url":"https://api.github.com/users/erogol/repos","events_url":"https://api.github.com/users/erogol/events{/privacy}","received_events_url":"https://api.github.com/users/erogol/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mozilla/TTS/issues/287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mozilla/TTS/issues/287/timeline","performed_via_github_app":null,"state_reason":"completed"}