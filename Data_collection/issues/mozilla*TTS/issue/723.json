{"url":"https://api.github.com/repos/mozilla/TTS/issues/723","repository_url":"https://api.github.com/repos/mozilla/TTS","labels_url":"https://api.github.com/repos/mozilla/TTS/issues/723/labels{/name}","comments_url":"https://api.github.com/repos/mozilla/TTS/issues/723/comments","events_url":"https://api.github.com/repos/mozilla/TTS/issues/723/events","html_url":"https://github.com/mozilla/TTS/issues/723","id":971128017,"node_id":"MDU6SXNzdWU5NzExMjgwMTc=","number":723,"title":"Evlaution Stats are going up while the Training Stats decreasing","user":{"login":"HeminQadir","id":29688389,"node_id":"MDQ6VXNlcjI5Njg4Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/29688389?v=4","gravatar_id":"","url":"https://api.github.com/users/HeminQadir","html_url":"https://github.com/HeminQadir","followers_url":"https://api.github.com/users/HeminQadir/followers","following_url":"https://api.github.com/users/HeminQadir/following{/other_user}","gists_url":"https://api.github.com/users/HeminQadir/gists{/gist_id}","starred_url":"https://api.github.com/users/HeminQadir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeminQadir/subscriptions","organizations_url":"https://api.github.com/users/HeminQadir/orgs","repos_url":"https://api.github.com/users/HeminQadir/repos","events_url":"https://api.github.com/users/HeminQadir/events{/privacy}","received_events_url":"https://api.github.com/users/HeminQadir/received_events","type":"User","site_admin":false},"labels":[{"id":813922298,"node_id":"MDU6TGFiZWw4MTM5MjIyOTg=","url":"https://api.github.com/repos/mozilla/TTS/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-15T12:56:02Z","updated_at":"2022-01-09T06:35:13Z","closed_at":"2022-01-09T06:35:13Z","author_association":"NONE","active_lock_reason":null,"body":"I am fine-tuning tacotron 2 for Kurdish language. \r\n\r\nThe training stats are all decreasing but the Evaluation stats are increasing. \r\n\r\nCan anyone tell me what is wrong, is there any solution for that? \r\n\r\n**Note:** I computed my **'compute_statistics.py**' from my training set. \r\n\r\nMy config.json file is down below. I have used original parameters of the trained model. \r\n\r\n![Eval](https://user-images.githubusercontent.com/29688389/129479397-4104e9e3-6b6c-42c5-8733-0d439d3aa59d.png)\r\n![Train](https://user-images.githubusercontent.com/29688389/129479400-3199cc6b-b8ee-4660-8ddf-2c97e3583f0e.png)\r\n![Train2](https://user-images.githubusercontent.com/29688389/129479402-b9b4c41d-ac87-4606-bf9d-2667b0ab4fdb.png)\r\n\r\n\r\n\r\n**Here is my Config.json file** \r\n\r\n{\r\n\"github_branch\":\"* master\",\r\n\"restore_path\":\"/home/jacobo/TTS/data/tts_model.pth.tar\",\r\n    \"model\": \"Tacotron2\",\r\n    \"run_name\": \"ljspeech-tac2\",\r\n    \"run_description\": \"tacotron2 mean-scale normalization with gradual training\",\r\n\r\n    // AUDIO PARAMETERS\r\n    \"audio\":{\r\n        // stft parameters\r\n        \"fft_size\": 1024,         // number of stft frequency levels. Size of the linear spectogram frame.\r\n        \"win_length\": 1024,      // stft window length in ms.\r\n        \"hop_length\": 256,       // stft window hop-lengh in ms.\r\n        \"frame_length_ms\": null, // stft window length in ms.If null, 'win_length' is used.\r\n        \"frame_shift_ms\": null,  // stft window hop-lengh in ms. If null, 'hop_length' is used.\r\n\r\n        // Audio processing parameters\r\n        \"sample_rate\": 22050,   // DATASET-RELATED: wav sample-rate. If different than the original data, it is resampled.\r\n        \"preemphasis\": 0.0,     // pre-emphasis to reduce spec noise and make it more structured. If 0.0, no -pre-emphasis.\r\n        \"ref_level_db\": 0,     // reference level db, theoretically 20db is the sound of air.\r\n\r\n        // Silence trimming\r\n        \"do_trim_silence\": false, // enable trimming of slience of audio as you load it. LJspeech (false), TWEB (false), Nancy (true)\r\n        \"trim_db\": 60,            // threshold for timming silence. Set this according to your dataset.\r\n\r\n        // Griffin-Lim\r\n        \"power\": 1.5,           // value to sharpen wav signals after GL algorithm.\r\n        \"griffin_lim_iters\": 60,// #griffin-lim iterations. 30-60 is a good range. Larger the value, slower the generation.\r\n\r\n        // MelSpectrogram parameters\r\n        \"num_mels\": 80,         // size of the mel spec frame.\r\n        \"mel_fmin\": 50.0,        // minimum freq level for mel-spec. ~50 for male and ~95 for female voices. Tune for dataset!!\r\n        \"mel_fmax\": 7600.0,     // maximum freq level for mel-spec. Tune for dataset!!\r\n        \"spec_gain\": 1.0,         // scaler value appplied after log transform of spectrogram.\r\n\r\n        // Normalization parameters\r\n        \"signal_norm\": true,    // normalize spec values. Mean-Var normalization if 'stats_path' is defined otherwise range normalization defined by the other params.\r\n        \"min_level_db\": -100,   // lower bound for normalization\r\n        \"symmetric_norm\": true, // move normalization to range [-1, 1]\r\n        \"max_norm\": 4.0,        // scale normalization to range [-max_norm, max_norm] or [0, max_norm]\r\n        \"clip_norm\": true,      // clip normalized values into the range.\r\n        \"stats_path\": \"/home/l337/TTS/Models/Kurdish_all_data/scale_stats.npy\"    // DO NOT USE WITH MULTI_SPEAKER MODEL. scaler stats file computed by 'compute_statistics.py'. If it is defined, mean-std based notmalization is used and other normalization params are ignored\r\n    },\r\n\r\n    // DISTRIBUTED TRAINING\r\n    \"distributed\":{\r\n        \"backend\": \"nccl\",\r\n        \"url\": \"tcp:\\/\\/localhost:54321\"\r\n    },\r\n\r\n    \"reinit_layers\": [],    // give a list of layer names to restore from the given checkpoint. If not defined, it reloads all heuristically matching layers.\r\n\r\n    // TRAINING\r\n    \"batch_size\": 32,       // Batch size for training. Lower values than 32 might cause hard to learn attention. It is overwritten by 'gradual_training'.\r\n    \"eval_batch_size\":16,\r\n    \"r\": 7,                 // Number of decoder frames to predict per iteration. Set the initial values if gradual training is enabled.\r\n    \"gradual_training\": [[0, 7, 64], [1, 5, 64], [50000, 3, 32], [130000, 2, 32], [290000, 1, 32]],  //set gradual training steps [first_step, r, batch_size]. If it is null, gradual training is disabled. For Tacotron, you might need to reduce the 'batch_size' as you proceeed.\r\n    \"loss_masking\": true,         // enable / disable loss masking against the sequence padding.\r\n    \"ga_alpha\": 1.0,        // weight for guided attention loss. If > 0, guided attention is enabled.\r\n    \"mixed_precision\": true,     // level of optimization with NVIDIA's apex feature for automatic mixed FP16/FP32 precision (AMP), NOTE: currently only O1 is supported, and use \"O1\" to activate.\r\n\r\n    // LOSS SETTINGS\r\n    \"loss_masking\": true,       // enable / disable loss masking against the sequence padding.\r\n    \"decoder_loss_alpha\": 0.5,  // original decoder loss weight. If > 0, it is enabled\r\n    \"postnet_loss_alpha\": 0.25, // original postnet loss weight. If > 0, it is enabled\r\n    \"postnet_diff_spec_alpha\": 0.25,     // differential spectral loss weight. If > 0, it is enabled\r\n    \"decoder_diff_spec_alpha\": 0.25,     // differential spectral loss weight. If > 0, it is enabled\r\n    \"decoder_ssim_alpha\": 0.5,     // decoder ssim loss weight. If > 0, it is enabled\r\n    \"postnet_ssim_alpha\": 0.25,     // postnet ssim loss weight. If > 0, it is enabled\r\n    \"ga_alpha\": 5.0,           // weight for guided attention loss. If > 0, guided attention is enabled.\r\n    \"stopnet_pos_weight\": 15.0, // pos class weight for stopnet loss since there are way more negative samples than positive samples.\r\n\r\n\r\n    // VALIDATION\r\n    \"run_eval\": true,\r\n    \"test_delay_epochs\": 10,  //Until attention is aligned, testing only wastes computation time.\r\n    \"test_sentences_file\": null,  // set a file to load sentences to be used for testing. If it is null then we use default english sentences.\r\n\r\n    // OPTIMIZER\r\n    \"noam_schedule\": false,        // use noam warmup and lr schedule.\r\n    \"grad_clip\": 1.0,              // upper limit for gradients for clipping.\r\n    \"epochs\": 1000,                // total number of epochs to train.\r\n    \"lr\": 0.0003,                  // Initial learning rate. If Noam decay is active, maximum learning rate.\r\n    \"wd\": 0.000001,                // Weight decay weight.\r\n    \"warmup_steps\": 4000,          // Noam decay steps to increase the learning rate from 0 to \"lr\"\r\n    \"seq_len_norm\": false,         // Normalize eash sample loss with its length to alleviate imbalanced datasets. Use it if your dataset is small or has skewed distribution of sequence lengths.\r\n\r\n    // TACOTRON PRENET\r\n    \"memory_size\": -1,             // ONLY TACOTRON - size of the memory queue used fro storing last decoder predictions for auto-regression. If < 0, memory queue is disabled and decoder only uses the last prediction frame.\r\n    \"prenet_type\": \"original\",     // \"original\" or \"bn\".\r\n    \"prenet_dropout\": true,        // enable/disable dropout at prenet.\r\n\r\n    // ATTENTION\r\n    \"attention_type\": \"original\",  // 'original' or 'graves'\r\n    \"attention_heads\": 4,          // number of attention heads (only for 'graves')\r\n    \"attention_norm\": \"sigmoid\",   // softmax or sigmoid. Suggested to use softmax for Tacotron2 and sigmoid for Tacotron.\r\n    \"windowing\": false,            // Enables attention windowing. Used only in eval mode.\r\n    \"use_forward_attn\": true,     // if it uses forward attention. In general, it aligns faster.\r\n    \"forward_attn_mask\": false,    // Additional masking forcing monotonicity only in eval mode.\r\n    \"transition_agent\": false,     // enable/disable transition agent of forward attention.\r\n    \"location_attn\": true,         // enable_disable location sensitive attention. It is enabled for TACOTRON by default.\r\n    \"bidirectional_decoder\": false,  // use https://arxiv.org/abs/1907.09006. Use it, if attention does not work well with your dataset.\r\n    \"double_decoder_consistency\": false,  // use DDC explained here https://erogol.com/solving-attention-problems-of-tts-models-with-double-decoder-consistency-draft/\r\n    \"ddc_r\": 1,                           // reduction rate for coarse decoder.\r\n\r\n    // STOPNET\r\n    \"stopnet\": true,               // Train stopnet predicting the end of synthesis.\r\n    \"separate_stopnet\": true,      // Train stopnet seperately if 'stopnet==true'. It prevents stopnet loss to influence the rest of the model. It causes a better model, but it trains SLOWER.\r\n\r\n    // TENSORBOARD and LOGGING\r\n    \"print_step\": 25,       // Number of steps to log training on console.\r\n    \"tb_plot_step\": 100,    // Number of steps to plot TB training figures.\r\n    \"print_eval\": false,     // If True, it prints intermediate loss values in evalulation.\r\n    \"save_step\": 1000,      // Number of training steps expected to save traninpg stats and checkpoints.\r\n    \"checkpoint\": true,     // If true, it saves checkpoints per \"save_step\"\r\n    \"tb_model_param_stats\": false,     // true, plots param stats per layer on tensorboard. Might be memory consuming, but good for debugging.\r\n\r\n    // DATA LOADING\r\n    \"text_cleaner\": \"phoneme_cleaners\",\r\n    \"enable_eos_bos_chars\": false, // enable/disable beginning of sentence and end of sentence chars.\r\n    \"num_loader_workers\": 4,        // number of training data loader processes. Don't set it too big. 4-8 are good values.\r\n    \"num_val_loader_workers\": 4,    // number of evaluation data loader processes.\r\n    \"batch_group_size\": 4,  //Number of batches to shuffle after bucketing.\r\n    \"min_seq_len\": 6,       // DATASET-RELATED: minimum text length to use in training\r\n    \"max_seq_len\": 412,     // DATASET-RELATED: maximum text length\r\n    \"compute_input_seq_cache\": false,  // if true, text sequences are computed before starting training. If phonemes are enabled, they are also computed at this stage.\r\n    \"use_noise_augment\": true,\r\n\r\n    // PATHS\r\n    \"output_path\": \"/home/jacobo/TTS/Models/Kurdish/\",\r\n\r\n    // PHONEMES\r\n    \"phoneme_cache_path\": \"/home/jacobo/TTS/Models/phonemes_kurdish\",  // phoneme computation is slow, therefore, it caches results in the given folder.\r\n    \"use_phonemes\": true,           // use phonemes instead of raw characters. It is suggested for better pronounciation.\r\n    \"phoneme_language\": \"ku\",     // depending on your target language, pick one from  https://github.com/bootphon/phonemizer#languages\r\n\r\n     // MULTI-SPEAKER and GST\r\n    \"use_speaker_embedding\": false,      // use speaker embedding to enable multi-speaker learning.\r\n    \"use_gst\": false,                       // use global style tokens\r\n    \"use_external_speaker_embedding_file\": false, // if true, forces the model to use external embedding per sample instead of nn.embeddings, that is, it supports external embeddings such as those used at: https://arxiv.org/abs /1806.04558\r\n    \"external_speaker_embedding_file\": \"../../speakers-vctk-en.json\", // if not null and use_external_speaker_embedding_file is true, it is used to load a specific embedding file and thus uses these embeddings instead of nn.embeddings, that is, it supports external embeddings such as those used at: https://arxiv.org/abs /1806.04558\r\n    \"gst\":  {                           // gst parameter if gst is enabled\r\n        \"gst_style_input\": null,        // Condition the style input either on a\r\n                                        // -> wave file [path to wave] or\r\n                                        // -> dictionary using the style tokens {'token1': 'value', 'token2': 'value'} example {\"0\": 0.15, \"1\": 0.15, \"5\": -0.15}\r\n                                        // with the dictionary being len(dict) <= len(gst_style_tokens).\r\n        \"gst_embedding_dim\": 512,\r\n        \"gst_num_heads\": 4,\r\n        \"gst_style_tokens\": 10,\r\n        \"gst_use_speaker_embedding\": false\r\n    },\r\n\r\n    // DATASETS\r\n    \"datasets\":   // List of datasets. They all merged and they get different speaker_ids.\r\n        [\r\n            {\r\n                \"name\": \"ljspeech\",\r\n                \"path\": \"/home/jacobo/TTS/ourset/\",\r\n                \"meta_file_train\": \"metadata_train.csv\",\r\n                \"meta_file_val\": \"metadata_val.csv\"\r\n            }\r\n        ]\r\n\r\n}\r\n","closed_by":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mozilla/TTS/issues/723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mozilla/TTS/issues/723/timeline","performed_via_github_app":null,"state_reason":"completed"}