{"url":"https://api.github.com/repos/mozilla/TTS/issues/377","repository_url":"https://api.github.com/repos/mozilla/TTS","labels_url":"https://api.github.com/repos/mozilla/TTS/issues/377/labels{/name}","comments_url":"https://api.github.com/repos/mozilla/TTS/issues/377/comments","events_url":"https://api.github.com/repos/mozilla/TTS/issues/377/events","html_url":"https://github.com/mozilla/TTS/issues/377","id":577977633,"node_id":"MDU6SXNzdWU1Nzc5Nzc2MzM=","number":377,"title":"Does anyone have any reasonable intutition about the right way to normalize spectrograms in TTS training?","user":{"login":"erogol","id":1402048,"node_id":"MDQ6VXNlcjE0MDIwNDg=","avatar_url":"https://avatars.githubusercontent.com/u/1402048?v=4","gravatar_id":"","url":"https://api.github.com/users/erogol","html_url":"https://github.com/erogol","followers_url":"https://api.github.com/users/erogol/followers","following_url":"https://api.github.com/users/erogol/following{/other_user}","gists_url":"https://api.github.com/users/erogol/gists{/gist_id}","starred_url":"https://api.github.com/users/erogol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erogol/subscriptions","organizations_url":"https://api.github.com/users/erogol/orgs","repos_url":"https://api.github.com/users/erogol/repos","events_url":"https://api.github.com/users/erogol/events{/privacy}","received_events_url":"https://api.github.com/users/erogol/received_events","type":"User","site_admin":false},"labels":[{"id":813922290,"node_id":"MDU6TGFiZWw4MTM5MjIyOTA=","url":"https://api.github.com/repos/mozilla/TTS/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-09T15:08:30Z","updated_at":"2020-05-07T10:10:30Z","closed_at":"2020-05-07T10:10:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"So there are different TTS libraries out there and I see they all use different normalization methods for spectrogram normalization in model training. \r\n\r\nRight now in Mozilla TTS what we do is the following;\r\n\r\n- apply preemphasis to wav\r\n- compute the spectrogram by stft\r\n- ```audio.amp_to_db()``` -  convert amplitude to decibel with ```20 * np.log10(np.maximum(min_level, x))```\r\n- ```audio._normalize()```  - normalize the spectrogram into the range [-4,4] assuming minimum db is -100\r\n\r\nhttps://github.com/mozilla/TTS/blob/master/utils/audio.py#L151\r\n\r\nFirst of all, does anyone see any problem here?\r\n\r\nThe only obvious thing above is that preemphasis operation is hard to recover if you do batch inference. There is no straight forward implementation of it in CUDA since de-preemphasis operation has a temporal dependency in itself.  Y\r\nou can approximate it by using RNN layers but it is slow. Hence, I guess it makes sense to drop preemphasis. This also makes our model incompatible with the latest vocoder models.\r\n\r\nI see NVIDIA Tacotron implementation does not use any normalization except the amp_to_db operation\r\n\r\nhttps://github.com/NVIDIA/tacotron2/blob/master/audio_processing.py#L78\r\n\r\nESPNet, on the other hand, uses Standardization with mean and variance. It is good to compute normalization parameters from the target dataset (as in image recognition) to make the normalization flexible among different datasets. However, the downside is that each frequency level attains the same level of consideration by the model. I don't think it is the right thing to do since for speech different frequency levels signify different aspects of the speech. Another downside is that in a multi-speaker model we need to compute mean-var stats separately per speaker. Which is a viable but an additional headache.\r\n\r\nAlso, I saw that using Standardization enables better vocoder models, especially with the new GAN based models.\r\n\r\nI also started to experiment with Standardization and saw that the training seems more stable but the GL based results sound worse.\r\n\r\nSo I guess the better option is to use Standardization with a trained vocoder and our current normalization flow for GL.\r\n\r\nThese are all I know and I am kind of confused here. Please let me know if you have any take in this issue.","closed_by":{"login":"erogol","id":1402048,"node_id":"MDQ6VXNlcjE0MDIwNDg=","avatar_url":"https://avatars.githubusercontent.com/u/1402048?v=4","gravatar_id":"","url":"https://api.github.com/users/erogol","html_url":"https://github.com/erogol","followers_url":"https://api.github.com/users/erogol/followers","following_url":"https://api.github.com/users/erogol/following{/other_user}","gists_url":"https://api.github.com/users/erogol/gists{/gist_id}","starred_url":"https://api.github.com/users/erogol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erogol/subscriptions","organizations_url":"https://api.github.com/users/erogol/orgs","repos_url":"https://api.github.com/users/erogol/repos","events_url":"https://api.github.com/users/erogol/events{/privacy}","received_events_url":"https://api.github.com/users/erogol/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mozilla/TTS/issues/377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mozilla/TTS/issues/377/timeline","performed_via_github_app":null,"state_reason":"completed"}