{"url":"https://api.github.com/repos/mozilla/TTS/issues/218","repository_url":"https://api.github.com/repos/mozilla/TTS","labels_url":"https://api.github.com/repos/mozilla/TTS/issues/218/labels{/name}","comments_url":"https://api.github.com/repos/mozilla/TTS/issues/218/comments","events_url":"https://api.github.com/repos/mozilla/TTS/issues/218/events","html_url":"https://github.com/mozilla/TTS/issues/218","id":456941911,"node_id":"MDU6SXNzdWU0NTY5NDE5MTE=","number":218,"title":"Strange EvalAudios and TrainAudios as well as test results","user":{"login":"vcjob","id":51916323,"node_id":"MDQ6VXNlcjUxOTE2MzIz","avatar_url":"https://avatars.githubusercontent.com/u/51916323?v=4","gravatar_id":"","url":"https://api.github.com/users/vcjob","html_url":"https://github.com/vcjob","followers_url":"https://api.github.com/users/vcjob/followers","following_url":"https://api.github.com/users/vcjob/following{/other_user}","gists_url":"https://api.github.com/users/vcjob/gists{/gist_id}","starred_url":"https://api.github.com/users/vcjob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vcjob/subscriptions","organizations_url":"https://api.github.com/users/vcjob/orgs","repos_url":"https://api.github.com/users/vcjob/repos","events_url":"https://api.github.com/users/vcjob/events{/privacy}","received_events_url":"https://api.github.com/users/vcjob/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-06-17T13:41:45Z","updated_at":"2019-06-18T07:24:11Z","closed_at":"2019-06-18T07:24:11Z","author_association":"NONE","active_lock_reason":null,"body":"Hello to everybody. \r\nReally enjoying the simplicity in use of the TTS and promising results with other languages. \r\nI am doing now training on 11 hours 1 speaker Russian dataset and the training has already reached 40000 global steps. \r\nIt was expected (by me) that by that stage the TTS will be able to produce somewhat speech-like or at least something from what could be said - it is training well. \r\nBut what I have instead is some strange noise while testing, which changes with different text provided, but seems like changes randomly.\r\nWhat is more interesting, checking on the Tensorboard on-fly samples makes me confused. \r\nEvalAudios sometimes are ok, but sometimes have some non-speech noises, a lot of them. If check the trainAudios - they are usually ends with a terrible screamer-like loud noises which take about half durations. It seems like on their spot must be a silence. If the TTS is learning on those files, obviously, it can hardly learn. \r\nThe dataset has various samples with duration from 0.5 to 38.5 second with the majority on around 5 secs.\r\nHere are some pics, one of the trianAudios wavs and config.json.\r\nAny suggestions are really appreciated.\r\n\r\np.s. During the training and inference on the cmd \"Decoder stopped with 'max_decoder_steps\" is outputted\r\n-----\r\n{\r\n    \"run_name\": \"mozilla-no-loc-fattn-stopnet-sigmoid-loss_masking\",\r\n    \"run_description\": \"using forward attention, with original prenet, loss masking,separate stopnet, sigmoid. Compare this with 4817. Pytorch DPP\",\r\n  \"audio\":{\r\n        // Audio processing parameters\r\n        \"num_mels\": 80,         // size of the mel spec frame.\r\n        \"num_freq\": 1025,       // number of stft frequency levels. Size of the linear spectogram frame.\r\n        \"sample_rate\": 22050,   // DATASET-RELATED: wav sample-rate. If different than the original data, it is resampled.\r\n        \"frame_length_ms\": 50,  // stft window length in ms.\r\n        \"frame_shift_ms\": 12.5, // stft window hop-lengh in ms.\r\n        \"preemphasis\": 0.97,    // pre-emphasis to reduce spec noise and make it more structured. If 0.0, no -pre-emphasis.\r\n        \"min_level_db\": -100,   // normalization range\r\n        \"ref_level_db\": 20,     // reference level db, theoretically 20db is the sound of air.\r\n        \"power\": 1.1,           // value to sharpen wav signals after GL algorithm.\r\n        \"griffin_lim_iters\": 60,// #griffin-lim iterations. 30-60 is a good range. Larger the value, slower the generation.\r\n        // Normalization parameters\r\n        \"signal_norm\": true,    // normalize the spec values in range [0, 1]\r\n        \"symmetric_norm\": false, // move normalization to range [-1, 1]\r\n        \"max_norm\": 1,          // scale normalization to range [-max_norm, max_norm] or [0, max_norm]\r\n        \"clip_norm\": true,      // clip normalized values into the range.\r\n        \"mel_fmin\": 0.0,         // minimum freq level for mel-spec. ~50 for male and ~95 for female voices. Tune for dataset!!\r\n        \"mel_fmax\": 8000.0,        // maximum freq level for mel-spec. Tune for dataset!!\r\n        \"do_trim_silence\": true  // enable trimming of slience of audio as you load it. LJspeech (false), TWEB (false), Nancy (true)\r\n    },\r\n\r\n    \"distributed\":{\r\n        \"backend\": \"nccl\",\r\n        \"url\": \"tcp:\\/\\/localhost:54321\"\r\n    },\r\n    \"reinit_layers\": [],\r\n\r\n    \"model\": \"Tacotron2\",          // one of the model in models/\r\n    \"grad_clip\": 1,                // upper limit for gradients for clipping.\r\n    \"epochs\": 1000,                // total number of epochs to train.\r\n    \"lr\": 0.0001,                  // Initial learning rate. If Noam decay is active, maximum learning rate.\r\n    \"lr_decay\": false,             // if true, Noam learning rate decaying is applied through training.\r\n    \"warmup_steps\": 4000,          // Noam decay steps to increase the learning rate from 0 to \"lr\"\r\n    \"windowing\": false,            // Enables attention windowing. Used only in eval mode.\r\n    \"memory_size\": 5,              // ONLY TACOTRON - memory queue size used to queue network predictions to feed autoregressive connection. Useful if r < 5.\r\n    \"attention_norm\": \"softmax\",   // softmax or sigmoid. Suggested to use softmax for Tacotron2 and sigmoid for Tacotron.\r\n    \"prenet_type\": \"original\",     // ONLY TACOTRON2 - \"original\" or \"bn\".\r\n    \"prenet_dropout\": true,        // ONLY TACOTRON2 - enable/disable dropout at prenet.\r\n    \"use_forward_attn\": true,      // ONLY TACOTRON2 - if it uses forward attention. In general, it aligns faster.\r\n    \"transition_agent\": false,     // ONLY TACOTRON2 - enable/disable transition agent of forward attention.\r\n    \"location_attn\": false,        // ONLY TACOTRON2 - enable_disable location sensitive attention. It is enabled for TACOTRON by default.\r\n    \"loss_masking\": true,         // enable / disable loss masking against the sequence padding.\r\n    \"enable_eos_bos_chars\": false, // enable/disable beginning of sentence and end of sentence chars.\r\n    \"stopnet\": true,               // Train stopnet predicting the end of synthesis.\r\n    \"separate_stopnet\": true,     // Train stopnet seperately if 'stopnet==true'. It prevents stopnet loss to influence the rest of the model. It causes a better model, but it trains SLOWER.\r\n    \"tb_model_param_stats\": false,     // true, plots param stats per layer on tensorboard. Might be memory consuming, but good for debugging.\r\n\r\n    \"batch_size\": 32,       // Batch size for training. Lower values than 32 might cause hard to learn attention.\r\n    \"eval_batch_size\":32,\r\n    \"r\": 1,                 // Number of frames to predict for step.\r\n    \"wd\": 0.000001,         // Weight decay weight.\r\n    \"checkpoint\": true,     // If true, it saves checkpoints per \"save_step\"\r\n \"save_step\": 1000,      // Number of training steps expected to save traning stats and checkpoints.\r\n    \"print_step\": 10,       // Number of steps to log traning on console.\r\n    \"batch_group_size\": 0,  //Number of batches to shuffle after bucketing.\r\n    \"run_eval\": true,\r\n    \"test_delay_epochs\": 5,  //Until attention is aligned, testing only wastes computation time.\r\n    \"test_sentences_file\": null,  // set a file to load sentences to be used for testing. If it is null then we use default english sentences.\r\n    \"data_path\": \"/ssd/tts_ds/\",  // DATASET-RELATED: can overwritten from command argument\r\n    \"meta_file_train\": \"tts_train.txt\",      // DATASET-RELATED: metafile for training dataloader.\r\n    \"meta_file_val\": \"tts_test.txt\",    // DATASET-RELATED: metafile for evaluation dataloader.\r\n    \"dataset\": \"ljspeech\",      // DATASET-RELATED: one of TTS.dataset.preprocessors depending on your target dataset. Use \"tts_cache\" for pre-computed dataset by extract_features.py\r\n    \"min_seq_len\": 0,       // DATASET-RELATED: minimum text length to use in training\r\n    \"max_seq_len\": 150,     // DATASET-RELATED: maximum text length\r\n    \"output_path\": \"../keep/\",      // DATASET-RELATED: output path for all training outputs.\r\n    \"num_loader_workers\": 8,        // number of training data loader processes. Don't set it too big. 4-8 are good values.\r\n    \"num_val_loader_workers\": 8,    // number of evaluation data loader processes.\r\n    \"phoneme_cache_path\": \"ru_phonemes\",  // phoneme computation is slow, therefore, it caches results in the given folder.\r\n    \"use_phonemes\": true,           // use phonemes instead of raw characters. It is suggested for better pronounciation.\r\n    \"phoneme_language\": \"ru\",     // depending on your target language, pick one from  https://github.com/bootphon/phonemizer#languages\r\n    \"text_cleaner\": \"phoneme_cleaners\"\r\n\r\n\r\n![Снимок](https://user-images.githubusercontent.com/51916323/59608245-9f0cb500-911d-11e9-957b-f60776431a6d.PNG)\r\n\r\n[TrainAudios.zip](https://github.com/mozilla/TTS/files/3297175/TrainAudios.zip)\r\n\r\n![Снимок2](https://user-images.githubusercontent.com/51916323/59609694-88b42880-9120-11e9-8ba4-d449cd9ce78d.PNG)\r\n","closed_by":{"login":"erogol","id":1402048,"node_id":"MDQ6VXNlcjE0MDIwNDg=","avatar_url":"https://avatars.githubusercontent.com/u/1402048?v=4","gravatar_id":"","url":"https://api.github.com/users/erogol","html_url":"https://github.com/erogol","followers_url":"https://api.github.com/users/erogol/followers","following_url":"https://api.github.com/users/erogol/following{/other_user}","gists_url":"https://api.github.com/users/erogol/gists{/gist_id}","starred_url":"https://api.github.com/users/erogol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erogol/subscriptions","organizations_url":"https://api.github.com/users/erogol/orgs","repos_url":"https://api.github.com/users/erogol/repos","events_url":"https://api.github.com/users/erogol/events{/privacy}","received_events_url":"https://api.github.com/users/erogol/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mozilla/TTS/issues/218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mozilla/TTS/issues/218/timeline","performed_via_github_app":null,"state_reason":"completed"}