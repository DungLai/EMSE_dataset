{"url":"https://api.github.com/repos/xavierpuigf/virtualhome/issues/83","repository_url":"https://api.github.com/repos/xavierpuigf/virtualhome","labels_url":"https://api.github.com/repos/xavierpuigf/virtualhome/issues/83/labels{/name}","comments_url":"https://api.github.com/repos/xavierpuigf/virtualhome/issues/83/comments","events_url":"https://api.github.com/repos/xavierpuigf/virtualhome/issues/83/events","html_url":"https://github.com/xavierpuigf/virtualhome/issues/83","id":1516054299,"node_id":"I_kwDOCpYwC85aXScb","number":83,"title":"Problems executing VirtualHome-Env dataset with two simulators","user":{"login":"Choi-JaeWoo","id":71639870,"node_id":"MDQ6VXNlcjcxNjM5ODcw","avatar_url":"https://avatars.githubusercontent.com/u/71639870?v=4","gravatar_id":"","url":"https://api.github.com/users/Choi-JaeWoo","html_url":"https://github.com/Choi-JaeWoo","followers_url":"https://api.github.com/users/Choi-JaeWoo/followers","following_url":"https://api.github.com/users/Choi-JaeWoo/following{/other_user}","gists_url":"https://api.github.com/users/Choi-JaeWoo/gists{/gist_id}","starred_url":"https://api.github.com/users/Choi-JaeWoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Choi-JaeWoo/subscriptions","organizations_url":"https://api.github.com/users/Choi-JaeWoo/orgs","repos_url":"https://api.github.com/users/Choi-JaeWoo/repos","events_url":"https://api.github.com/users/Choi-JaeWoo/events{/privacy}","received_events_url":"https://api.github.com/users/Choi-JaeWoo/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-01-02T05:53:56Z","updated_at":"2023-01-02T05:53:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, @xavierpuigf, \r\nI tried to load the data (programs, precondition, and initial graph) of the VirtualHome-Env dataset and execute them with two simulators (Evolving Graph and Unity simulators) but met some problems.\r\nIs there an example code to load the VirtualHome-Env dataset and execute them with two simulators?\r\n\r\nSpecifically I have trouble with the following issues:\r\n### 1. Download links\r\nI downloaded the Python API, Unity Simulator, and VirtualHome-Env dataset from the following links:\r\n**Python API:**\r\nhttps://github.com/xavierpuigf/virtualhome/archive/refs/tags/v1.0.0.zip\r\n**Unity Simulator:**\r\nhttps://github.com/xavierpuigf/virtualhome/releases/download/v1.0.0/linux_sim.zip\r\n**VirtualHome-Env dataset:** \r\nhttp://virtual-home.org/release/programs/programs_processed_precond_nograb_morepreconds.zip\r\n\r\n### 2. Execution failure cases in Evolving Graph Simulator\r\nI run the test code in the demo directory by referring to the Dataset README (https://github.com/xavierpuigf/virtualhome/blob/master/src/virtualhome/dataset/README.md) and demo/generate_snapshots.py.\r\n\r\n**Failure case 2-1. \r\nscript loaded from ‘executable_programs’ + preconditions loaded from ‘initstate’ + environment graph loaded from ‘init_and_final_graphs’:**\r\n\r\nFirst, I loaded scripts, preconditions, and environment graphs from ‘executable_programs’, ‘initstate’, and ‘init_and_final_graphs’ directories, respectively.\r\nThe loaded programs were executed with the Evolving Graph Simulator. \r\nHowever, 688 data of 6,201 data could not be executed.\r\nHere are the example codes:\r\n```\r\nimport sys\r\nimport json\r\n\r\nsys.path.append('../simulation')\r\nsys.path.append('../dataset_utils/')\r\nimport augmentation_utils\r\nimport evolving_graph.check_programs as check_programs\r\n\r\n\r\ndef read_exprog_script(exprog_file):\r\n    exprog_script = open(exprog_file, \"r\").readlines()\r\n    exprog_script = exprog_script[4:]\r\n    for i, step in enumerate(exprog_script):\r\n        exprog_script[i] = step.replace('\\n','')\r\n    new_script = []\r\n    for step in exprog_script:\r\n        x = augmentation_utils.parseStrBlock(step)\r\n        if len(x[1]) == 0:\r\n            new_step = f\"[{x[0]}]\"\r\n        elif len(x[1]) == 1:\r\n            new_step = f\"[{x[0]}] <{x[1][0]}> ({int(float(x[2][0]))})\"\r\n        elif len(x[1]) == 2:\r\n            new_step = f\"[{x[0]}] <{x[1][0]}> ({int(float(x[2][0]))}) <{x[1][1]}> ({int(float(x[2][1]))})\"\r\n        new_script.append(new_step)\r\n    return new_script\r\n\r\n                          \r\nexprog_file = '../dataset/programs_processed_precond_nograb_morepreconds/executable_programs/TrimmedTestScene7_graph/results_intentions_march-13-18/file959_1.txt'\r\ninitstate_file = '../dataset/programs_processed_precond_nograb_morepreconds/initstate/results_intentions_march-13-18/file959_1.json'\r\ngraph_file = '../dataset/programs_processed_precond_nograb_morepreconds/init_and_final_graphs/TrimmedTestScene7_graph/results_intentions_march-13-18/file959_1.json'\r\n\r\nexprog_script = read_exprog_script(exprog_file)\r\n\r\nwith open(initstate_file, 'r') as f:\r\n    preconds = json.load(f)\r\n\r\nwith open(graph_file, 'r') as f:\r\n    init_and_final_graphs = json.load(f)\r\nfirst_graph = init_and_final_graphs['init_graph']\r\n\r\ninfo = check_programs.check_script(exprog_script, preconds, graph_path=None, inp_graph_dict=first_graph)\r\nmessage, final_state, graph_state_list, graph_dict, id_mapping, info, helper, modif_script = info\r\n\r\nprint(exprog_script)\r\nprint(message)\r\n```\r\nHere are the results:\r\n```\r\n['[WALK] <home_office> (1)', '[WALK] <couch> (1)', '[FIND] <couch> (1)', '[SIT] <couch> (1)', '[FIND] <remote_control> (1)', '[GRAB] <remote_control> (1)', '[FIND] <button> (1)', '[PUSH] <button> (1)', '[FIND] <television> (1)', '[TURNTO] <television> (1)', '[WATCH] <television> (1)']\r\n\r\nScript is not executable, since Too many things on <sofa> (1001) when executing \"[SIT] <sofa> (1001) [4]\"\r\n```\r\n\r\n**Failure case 2-2. \r\nscript loaded from ‘withoutconds’ + preconditions extracted using dataset_utils/add_preconds.py + environment graph loaded from ‘init_and_final_graphs’:**\r\n\r\nAlso, I loaded the scripts and environment graphs from ‘withoutconds’ and ‘init_and_final_graphs’ directories, respectively, and extracted the preconditions by using dataset_utils/add_preconds.py.\r\nThe loaded programs were executed with the Evolving Graph Simulator.\r\nHowever, 742 data of 6,201 data could not be executed.\r\nHere are the example codes:\r\n```\r\nimport sys\r\nimport json\r\n\r\nsys.path.append('../simulation')\r\nsys.path.append('../dataset_utils/')\r\nimport add_preconds\r\nimport evolving_graph.check_programs as check_programs\r\n\r\n\r\nwocon_file = '../dataset/programs_processed_precond_nograb_morepreconds/withoutconds/results_intentions_march-13-18/file959_1.txt'\r\ngraph_file = '../dataset/programs_processed_precond_nograb_morepreconds/init_and_final_graphs/TrimmedTestScene7_graph/results_intentions_march-13-18/file959_1.json'\r\n\r\nwocon_script = open(wocon_file, \"r\").readlines()\r\nwocon_script = wocon_script[4:]\r\nfor i, step in enumerate(wocon_script):\r\n    wocon_script[i] = step.replace('\\n','')\r\n\r\npreconds = add_preconds.get_preconds_script(wocon_script).printCondsJSON()\r\n\r\nwith open(graph_file, 'r') as f:\r\n    init_and_final_graphs = json.load(f)\r\nfirst_graph = init_and_final_graphs['init_graph']\r\n\r\ninfo = check_programs.check_script(wocon_script, preconds, graph_path=None, inp_graph_dict=first_graph)\r\nmessage, final_state, graph_state_list, graph_dict, id_mapping, info, helper, modif_script = info\r\nprint(wocon_script)\r\nprint(message)\r\n```\r\nHere are the results:\r\n```\r\n['[Walk] <living_room> (1)', '[Walk] <sofa> (1)', '[Find] <sofa> (1)', '[Sit] <sofa> (1)', '[Find] <remote_control> (1)', '[Grab] <remote_control> (1)', '[Find] <button> (1)', '[Push] <button> (1)', '[Find] <television> (1)', '[TurnTo] <television> (1)', '[Watch] <television> (1)']\r\n\r\nScript is not executable, since Too many things on <sofa> (1001) when executing \"[SIT] <sofa> (1001) [4]\"\r\n```\r\n\r\n### 3. Execution failure cases in Unity Simulator\r\nI run the test code in the demo directory by referring to the Dataset README (https://github.com/xavierpuigf/virtualhome/blob/master/src/virtualhome/dataset/README.md).\r\n\r\n**Failure case 3. Most data fails to execute expand_scene:**\r\n\r\nOnly 7 data of 6,201 data could be success to execute expand_scene.\r\nHere are the example codes:\r\n```\r\nimport sys\r\nimport json\r\n\r\nsys.path.append('../simulation')\r\nfrom unity_simulator.comm_unity import UnityCommunication\r\n\r\n\r\ncomm = UnityCommunication()\r\n\r\nexprog_files = ['../dataset/programs_processed_precond_nograb_morepreconds/executable_programs/TrimmedTestScene7_graph/results_intentions_march-13-18/file1028_2.txt', \r\n                '../dataset/programs_processed_precond_nograb_morepreconds/executable_programs/TrimmedTestScene7_graph/results_intentions_march-13-18/file458_1.txt',\r\n                '../dataset/programs_processed_precond_nograb_morepreconds/executable_programs/TrimmedTestScene7_graph/results_intentions_march-13-18/file1019_2.txt',\r\n                '../dataset/programs_processed_precond_nograb_morepreconds/executable_programs/TrimmedTestScene7_graph/results_intentions_march-13-18/file433_1.txt',\r\n                '../dataset/programs_processed_precond_nograb_morepreconds/executable_programs/TrimmedTestScene7_graph/results_intentions_march-13-18/file609_2.txt']\r\nfor exprog_file in exprog_files:\r\n    graph_path = exprog_file.replace('executable_programs', 'init_and_final_graphs').replace('.txt','.json')\r\n    scene = graph_path.split('/')[-3]\r\n    scene_id = int(scene.replace('TrimmedTestScene', '').replace('_graph', ''))\r\n    \r\n    comm.reset(scene_id - 1)\r\n\r\n    with open(graph_path, 'r') as f:\r\n        init_and_final_graphs = json.load(f)\r\n        first_graph = init_and_final_graphs['init_graph']\r\n    success, message = comm.expand_scene(first_graph)\r\n    \r\n    print(message)\r\n```\r\nHere are the results:\r\n```\r\n{'missing_prefabs': ['foodsteak', 'laserpointer', 'teabag', 'clothesjacket', 'tablecloth', 'dishrack', 'mop', 'clothesgloves', 'fooddonut', 'coffee', 'laptop', 'dog', 'pajamas', 'keys', 'foodbacon', 'foodjam', 'coin', 'rag', 'foodorange', 'stamp', 'iron', 'bag', 'blowdryer', 'razor', 'foundation', 'form', 'foodrice', 'homework'], 'unplaced': ['foodsteak', 'laserpointer', 'teabag', 'clothesjacket', 'tablecloth', 'dishrack', 'mop', 'clothesgloves', 'fooddonut', 'coffee', 'laptop', 'dog', 'pajamas', 'keys', 'foodbacon', 'foodjam', 'coin', 'rag', 'foodorange', 'stamp', 'iron', 'bag', 'blowdryer', 'razor', 'foundation', 'foodrice', 'keyboard', 'form', 'homework'], 'missing_destinations': ['bag', 'tablecloth']}\r\n\r\n{'missing_prefabs': ['thread', 'shoe-shinekit', 'blender', 'blowdryer', 'cd', 'foodcake', 'comb', 'foodrice', 'clothessocks', 'colander', 'clothesskirt', 'clothesgloves', 'laundrydetergent', 'shavingcream', 'hairdryer', 'deckofcards', 'foodonion', 'razor', 'bills', 'vacuumcleaner', 'electricshaver', 'sheets', 'pajamas', 'glue'], 'unplaced': ['thread', 'shoe-shinekit', 'blender', 'blowdryer', 'cd', 'foodcake', 'comb', 'foodrice', 'clothessocks', 'colander', 'clothesskirt', 'clothesgloves', 'laundrydetergent', 'shavingcream', 'hairdryer', 'deckofcards', 'foodonion', 'razor', 'bills', 'vacuumcleaner', 'electricshaver', 'sheets', 'pajamas', 'glue']}\r\n\r\n{'missing_prefabs': ['tea', 'toothbrushholder', 'dirt', 'bag', 'clothesunderwear', 'foundation', 'jelly', 'bills', 'shavingcream', 'clothessocks', 'woodenspoon', 'dvdplayer', 'coffeefilter', 'clothesskirt', 'clotheshat', 'razor', 'foodonion', 'foodorange', 'ice', 'foodkiwi', 'thread', 'needle', 'foodegg', 'picture', 'stamp', 'hairbrush', 'drypasta', 'creditcard', 'laserpointer', 'clothesgloves', 'scissors'], 'unplaced': ['tea', 'toothbrushholder', 'dirt', 'bag', 'clothesunderwear', 'foundation', 'jelly', 'bills', 'shavingcream', 'clothessocks', 'woodenspoon', 'dvdplayer', 'coffeefilter', 'clothesskirt', 'clotheshat', 'razor', 'foodonion', 'foodorange', 'ice', 'foodkiwi', 'thread', 'needle', 'foodegg', 'picture', 'chair', 'stamp', 'hairbrush', 'drypasta', 'creditcard', 'laserpointer', 'clothesgloves', 'scissors'], 'missing_destinations': ['bag']}\r\n\r\n{'missing_prefabs': ['picture', 'clothesgloves', 'toothbrushholder', 'foodicecream', 'stamp', 'brush', 'foodcake', 'iron', 'hair', 'foodorange', 'pianobench', 'foodcheese', 'dirt', 'lighter', 'clothesdress', 'clothesjacket', 'teabag', 'foodbutter', 'needle', 'creditcard', 'purse', 'tea', 'comb', 'sheets', 'headset', 'pajamas', 'pasta', 'blender', 'bills', 'clothessocks', 'rag', 'coffee', 'scrabble', 'dog', 'vacuumcleaner'], 'unplaced': ['picture', 'clothesgloves', 'toothbrushholder', 'foodicecream', 'stamp', 'brush', 'foodcake', 'iron', 'hair', 'foodorange', 'pianobench', 'foodcheese', 'dirt', 'lighter', 'mopbucket', 'clothesdress', 'clothesjacket', 'teabag', 'foodbutter', 'needle', 'creditcard', 'purse', 'tea', 'comb', 'sheets', 'headset', 'pajamas', 'pasta', 'blender', 'bills', 'clothessocks', 'rag', 'coffee', 'stereo', 'scrabble', 'dog', 'vacuumcleaner']}\r\n\r\n{'missing_prefabs': ['clothesgloves', 'lighter', 'rag', 'sheets', 'hair', 'teeth', 'envelope', 'blender', 'instrumentguitar', 'laptop', 'foodorange', 'button', 'tablecloth', 'form', 'tape', 'mouthwash', 'thread', 'foodegg', 'jelly', 'nailpolish', 'band-aids', 'comb', 'headset', 'dough', 'groundcoffee', 'clothessocks', 'videogamecontroller', 'microphone', 'pajamas', 'dishrack'], 'unplaced': ['clothesgloves', 'lighter', 'rag', 'keyboard', 'sheets', 'hair', 'teeth', 'envelope', 'blender', 'instrumentguitar', 'laptop', 'foodorange', 'button', 'tablecloth', 'form', 'tape', 'mouthwash', 'thread', 'foodegg', 'jelly', 'nailpolish', 'band-aids', 'foodpeanutbutter', 'comb', 'headset', 'dough', 'groundcoffee', 'clothessocks', 'videogamecontroller', 'microphone', 'pajamas', 'dishrack', 'detergent'], 'missing_destinations': ['tablecloth']}\r\n```\r\nCould you please help with this?\r\nThanks a lot.\r\nBest, JaeWoo Choi","closed_by":null,"reactions":{"url":"https://api.github.com/repos/xavierpuigf/virtualhome/issues/83/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/xavierpuigf/virtualhome/issues/83/timeline","performed_via_github_app":null,"state_reason":null}