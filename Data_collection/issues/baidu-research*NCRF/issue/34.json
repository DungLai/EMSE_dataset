{"url":"https://api.github.com/repos/baidu-research/NCRF/issues/34","repository_url":"https://api.github.com/repos/baidu-research/NCRF","labels_url":"https://api.github.com/repos/baidu-research/NCRF/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/baidu-research/NCRF/issues/34/comments","events_url":"https://api.github.com/repos/baidu-research/NCRF/issues/34/events","html_url":"https://github.com/baidu-research/NCRF/issues/34","id":436866145,"node_id":"MDU6SXNzdWU0MzY4NjYxNDU=","number":34,"title":"CRF implementation in Keras is not  not giving  good results","user":{"login":"OpenCv30","id":13656983,"node_id":"MDQ6VXNlcjEzNjU2OTgz","avatar_url":"https://avatars.githubusercontent.com/u/13656983?v=4","gravatar_id":"","url":"https://api.github.com/users/OpenCv30","html_url":"https://github.com/OpenCv30","followers_url":"https://api.github.com/users/OpenCv30/followers","following_url":"https://api.github.com/users/OpenCv30/following{/other_user}","gists_url":"https://api.github.com/users/OpenCv30/gists{/gist_id}","starred_url":"https://api.github.com/users/OpenCv30/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OpenCv30/subscriptions","organizations_url":"https://api.github.com/users/OpenCv30/orgs","repos_url":"https://api.github.com/users/OpenCv30/repos","events_url":"https://api.github.com/users/OpenCv30/events{/privacy}","received_events_url":"https://api.github.com/users/OpenCv30/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-04-24T19:23:18Z","updated_at":"2019-06-24T00:42:26Z","closed_at":"2019-06-24T00:42:26Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nI am a student and working on Camelyon’16 as my Master’s project. \r\nI was going through your very impressive paper - **Yi Li and Wei Ping. Cancer Metastasis Detection With Neural Conditional Random Field. Medical Imaging with Deep Learning (MIDL), 2018.**\r\nAnd, found that you have implemented CRF in your code on top of Resnet 18. So far I am using Resnet50 but my FROC score is not going up from 0.55.\r\n\r\nSo, I have decided to use your approach and re-implemented your code in Keras (backend-Tensorflow). But the performance of the trained model is not even close to your results. Best **FROC of Resnet18+CRF trained model-0.55**. Lot of FPs are coming. My Resnet18 is taken from https://github.com/raghakot/keras-resnet\r\n\r\nMy queries-\r\n\r\n- **My training loss- BCE- started from 1.16 and finally settled to 0.8639 and validation loss 0.8528**. It is right or loss should go further down. I have run for  30+ epochs, but the loss remains the same(plateau). Don’t know why? (please refer attached image below)\r\n\r\n- Weight plot doesn’t look closer to what you have shown in your paper. In your, case all the positional patch weights W[0,0,0,0] <0,W[0,1,0,1] <0..W[2,2,2,2] <0 but I am not seeing that. As per equation, these will not affect the final predictions. (please refer attached image below)\r\n\r\nCan you help me in understanding why loss is not going further down? It gets plateau after a certain number of epochs and after that no effect even with Cyclic Learning rate [ 1e-4,1e-5,1e-7]. This behavior is common across many models – rennet50/101/18 + Inception V3.\r\nPlease help me to solve these problems. I shall be thankful to you.\r\n\r\n**Training Configration** \r\n![config](https://user-images.githubusercontent.com/13656983/56684919-5670e680-66ee-11e9-954e-396742676d5a.PNG)\r\n\r\n**TensorBoard ACC/LOSS plot**\r\n![image002](https://user-images.githubusercontent.com/13656983/56684692-ebbfab00-66ed-11e9-9d68-5c4e4c59dc68.jpg)\r\n\r\n![image006](https://user-images.githubusercontent.com/13656983/56684734-fe39e480-66ed-11e9-91cb-7d57b1c25f25.jpg)\r\n\r\n**Just Validation loss and training loss ( after 16 epochs )  -- Orange is val-loss, Blue is Training  BCE loss**\r\n![val_train_loss](https://user-images.githubusercontent.com/13656983/56685948-af417e80-66f0-11e9-84c7-6ddf8ee0f79a.PNG)\r\n\r\n**Weight plots-**\r\n**plot across epochs-**\r\n\r\n![weight_epochs](https://user-images.githubusercontent.com/13656983/56687604-570c7b80-66f4-11e9-80f2-a2b560e0c863.PNG)\r\n\r\n**Just one of the epoch(16)  weight map from which heatmap is generated**\r\n![image009](https://user-images.githubusercontent.com/13656983/56684808-21fd2a80-66ee-11e9-9077-85c1f29a5e96.jpg)\r\n\r\n**Heatmaps**\r\nTest_001.tiff ( cam'16 test data set)\r\n**Results from my trained model- at level 8**\r\n\r\n\r\n![001](https://user-images.githubusercontent.com/13656983/56685356-65a46400-66ef-11e9-836a-b7e9b4be3d88.PNG)\r\n\r\n\r\n**Results for your model-at level 6**\r\n![test_001_crfbaidu](https://user-images.githubusercontent.com/13656983/56685139-dbf49680-66ee-11e9-8c58-344ce3e5845b.png)\r\n\r\nClearly, your model performs far better than my trained model.\r\n\r\nI have matched my CRF implementation in kears with yours in pyTorch. For the same input in both the model, I am getting the same output.\r\n\r\nPlease help me to reproduce your results in Kears+ TF.\r\n\r\n\r\n \r\n","closed_by":{"login":"yil8","id":1263739,"node_id":"MDQ6VXNlcjEyNjM3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1263739?v=4","gravatar_id":"","url":"https://api.github.com/users/yil8","html_url":"https://github.com/yil8","followers_url":"https://api.github.com/users/yil8/followers","following_url":"https://api.github.com/users/yil8/following{/other_user}","gists_url":"https://api.github.com/users/yil8/gists{/gist_id}","starred_url":"https://api.github.com/users/yil8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yil8/subscriptions","organizations_url":"https://api.github.com/users/yil8/orgs","repos_url":"https://api.github.com/users/yil8/repos","events_url":"https://api.github.com/users/yil8/events{/privacy}","received_events_url":"https://api.github.com/users/yil8/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/baidu-research/NCRF/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/baidu-research/NCRF/issues/34/timeline","performed_via_github_app":null,"state_reason":"completed"}