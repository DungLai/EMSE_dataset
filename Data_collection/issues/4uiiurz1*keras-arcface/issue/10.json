{"url":"https://api.github.com/repos/4uiiurz1/keras-arcface/issues/10","repository_url":"https://api.github.com/repos/4uiiurz1/keras-arcface","labels_url":"https://api.github.com/repos/4uiiurz1/keras-arcface/issues/10/labels{/name}","comments_url":"https://api.github.com/repos/4uiiurz1/keras-arcface/issues/10/comments","events_url":"https://api.github.com/repos/4uiiurz1/keras-arcface/issues/10/events","html_url":"https://github.com/4uiiurz1/keras-arcface/issues/10","id":496637158,"node_id":"MDU6SXNzdWU0OTY2MzcxNTg=","number":10,"title":"Training is so slow, what's wrong?","user":{"login":"asjiangh","id":19367854,"node_id":"MDQ6VXNlcjE5MzY3ODU0","avatar_url":"https://avatars.githubusercontent.com/u/19367854?v=4","gravatar_id":"","url":"https://api.github.com/users/asjiangh","html_url":"https://github.com/asjiangh","followers_url":"https://api.github.com/users/asjiangh/followers","following_url":"https://api.github.com/users/asjiangh/following{/other_user}","gists_url":"https://api.github.com/users/asjiangh/gists{/gist_id}","starred_url":"https://api.github.com/users/asjiangh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asjiangh/subscriptions","organizations_url":"https://api.github.com/users/asjiangh/orgs","repos_url":"https://api.github.com/users/asjiangh/repos","events_url":"https://api.github.com/users/asjiangh/events{/privacy}","received_events_url":"https://api.github.com/users/asjiangh/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-09-21T09:42:13Z","updated_at":"2020-10-16T07:04:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, I'm doing a 4 classes classification mission.\r\nI use pre-trained VGG19 as the base model, and add ArcFace after it.\r\nI trained the model for a while, but the training speed becomes slower, and the accuracy of training set doesn't grow at all. I can't figure out the reason. Please help.(I have trained it with softmax before, everything is well.)\r\n(Trained on GTX 1080 Ti) \r\nThis is a part of my training process:\r\n![image](https://user-images.githubusercontent.com/19367854/65371429-224a2380-dc96-11e9-9c4d-4ab5a71cbe01.png)\r\nThis is the key part of my code:\r\n```\r\nnum_classes = 4\r\ninput_shape = (400,300,3)\r\nbatch_size=32\r\nbase_model = VGG19(include_top=False, weights='imagenet', input_shape=input_shape)\r\nx = base_model.output\r\ny = Input(shape=(num_classes, ))\r\n\r\nx = BatchNormalization()(x)\r\nx = Dropout(0.5)(x)\r\nx = Flatten()(x)\r\nx = Dense(128, kernel_initializer='he_normal',\r\n                kernel_regularizer=regularizers.l2(1e-4))(x)\r\n#x = Dense(128, activation='relu')(x)\r\n#predictions = Dense(num_classes, activation='softmax')(x)\r\npredictions = ArcFace(num_classes,regularizer=keras.regularizers.l2(1e-4))([x, y])\r\n\r\nmodel = Model(inputs=[base_model.input, y], outputs=predictions)\r\n\r\nfor layer in base_model.layers:\r\n    layer.trainable = True\r\n\r\nmodel.summary()\r\nopt = SGD(lr=0.1, momentum=0.9, decay=5e-4, nesterov=True)\r\n\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer=opt,\r\n              metrics=['accuracy'])\r\n\r\n# generate data\r\nclass train_Generator_xandy(object):\r\n    def __init__(self):\r\n        datagen = ImageDataGenerator(rescale=1.0 / 255.)\r\n        train_generator = datagen.flow_from_directory(\r\n            train_data_dir,\r\n            target_size=(image_height, image_width),\r\n            batch_size=batch_size,\r\n            class_mode='categorical',\r\n            shuffle=True)\r\n\r\n        self.gene = train_generator\r\n\r\n    def __iter__(self):\r\n        return self\r\n\r\n    def __next__(self):\r\n        X, Y = self.gene.next()\r\n        return [X, Y], Y\r\n\r\nclass val_Generator_xandy(object):\r\n    def __init__(self):\r\n        validation_datagen = ImageDataGenerator(rescale=1.0 / 255.)\r\n\r\n        validation_generator = validation_datagen.flow_from_directory(\r\n            validation_data_dir,\r\n            target_size=(image_height, image_width),\r\n            batch_size=batch_size,\r\n            class_mode='categorical',\r\n            shuffle=False,\r\n        )\r\n\r\n        self.gene = validation_generator\r\n\r\n    def __iter__(self):\r\n        return self\r\n\r\n    def __next__(self):\r\n        X, Y = self.gene.next()\r\n        return [X, Y], Y\r\n\r\nclass test_Generator_xandy(object):\r\n    def __init__(self):\r\n        test_datagen = ImageDataGenerator(rescale=1.0 / 255.)\r\n\r\n        test_generator = test_datagen.flow_from_directory(\r\n            test_data_dir,\r\n            target_size=(image_height, image_width),\r\n            batch_size=batch_size,\r\n            class_mode='categorical',\r\n            shuffle=False,\r\n        )\r\n\r\n        self.gene = test_generator\r\n        self.classes = test_generator.classes\r\n\r\n    def __iter__(self):\r\n        return self\r\n\r\n    def __next__(self):\r\n        X, Y = self.gene.next()\r\n        return [X, Y], Y\r\n\r\ntrain_generator = train_Generator_xandy()\r\nvalidation_generator = val_Generator_xandy()\r\ntest_generator = test_Generator_xandy()\r\n\r\n# Fit model\r\nhistory = model.fit_generator(train_generator,\r\n                    steps_per_epoch=(nb_train_samples // batch_size),\r\n                    epochs=nb_epoch,\r\n                    validation_data=validation_generator,\r\n                    callbacks=[history, draw_pic],\r\n                    validation_steps=(nb_validation_samples // batch_size)\r\n                   )\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/4uiiurz1/keras-arcface/issues/10/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/4uiiurz1/keras-arcface/issues/10/timeline","performed_via_github_app":null,"state_reason":null}