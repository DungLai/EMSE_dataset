{"url":"https://api.github.com/repos/aws-samples/deep-learning-models/issues/1","repository_url":"https://api.github.com/repos/aws-samples/deep-learning-models","labels_url":"https://api.github.com/repos/aws-samples/deep-learning-models/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/aws-samples/deep-learning-models/issues/1/comments","events_url":"https://api.github.com/repos/aws-samples/deep-learning-models/issues/1/events","html_url":"https://github.com/aws-samples/deep-learning-models/issues/1","id":360100786,"node_id":"MDU6SXNzdWUzNjAxMDA3ODY=","number":1,"title":"Fixes to use this example on an Ubuntu DL AMI (Version 13)","user":{"login":"markmp","id":5297137,"node_id":"MDQ6VXNlcjUyOTcxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/5297137?v=4","gravatar_id":"","url":"https://api.github.com/users/markmp","html_url":"https://github.com/markmp","followers_url":"https://api.github.com/users/markmp/followers","following_url":"https://api.github.com/users/markmp/following{/other_user}","gists_url":"https://api.github.com/users/markmp/gists{/gist_id}","starred_url":"https://api.github.com/users/markmp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markmp/subscriptions","organizations_url":"https://api.github.com/users/markmp/orgs","repos_url":"https://api.github.com/users/markmp/repos","events_url":"https://api.github.com/users/markmp/events{/privacy}","received_events_url":"https://api.github.com/users/markmp/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-09-13T23:19:56Z","updated_at":"2019-01-04T22:04:23Z","closed_at":"2019-01-04T22:03:49Z","author_association":"NONE","active_lock_reason":null,"body":"Hi - I spent some time getting this Tensorflow example (train_resnet50_imagenet.sh) running in the current deep-learning AMI (version 13, ubuntu/conda) using p3.16xlarge instances. There were quite a few changes needed to get this to actually run (and even more for multi-node). I did not use the CloudFormation script.\r\n\r\n1) Modify default .bashrc to move the PATH stuff to the top of the file, above the interactive shell check. Otherwise, remote ssh commands would not be able to activate the conda environment\r\n2) write a small bash wrapper script to call \"source activate tensorflow_p36\" to activate the environment before calling the training script with python. I pass this wrapper script to MPI. This is my full MPI command:\r\nmpirun -np 64 --hostfile hosts -mca plm_rsh_no_tree_spawn 1 --bind-to socket --map-by slot -x NCCL_DEBUG=INFO -x NCCL_MIN_NRINGS=4 -x LD_LIBRARY_PATH -x PATH -x NCCL_SOCKET_IFNAME=ens3 -mca orte_base_help_aggregate 0 -mca pml ob1 -mca btl_tcp_if_exclude lo,docker0 -mca btl ^openib /home/ubuntu/examples/horovod/cnn/wrapenv.sh python aws_tf_hvd_cnn.py --batch_size=256 --num_epochs=90 --fp16 --data_dir /home/ubuntu/imagenet/train-resized --model resnet50 --log_dir results --display_every 100 --save_interval=3600\r\n\r\n3) Add the magic parameters \"-x NCCL_SOCKET_IFNAME=ens3\" and  \"-mca btl_tcp_if_exclude lo,docker0\" (ens3 was the interface if I ran 'ifconfig').  Without these parameters, the mpirun command would fail. Specifically, it would hang with this error: \r\n[btl_tcp_endpoint.c:626:mca_btl_tcp_endpoint_recv_connect_ack] received unexpected process identifier [[45621,1],10] \r\n\r\nDigging around the Horovod Git - it seems this might be related to Docker/Virtualization. I wasn't using anything beyond just running the DLAMI Ubuntu/Conda V13 in EC2. When I added these parameters, everything starting working. \r\n\r\n4) Copy all the validation example shards into the same data directory as the training data. Unlike the Horovod example that's baked into the DL AMI - all data (training + val) needs to be in same place, even when just doing \"--eval\". \r\n\r\nTo go multi-node, I needed to do these additional steps:\r\n1) make sure remote SSH commands work node-to-node (e.g. authorized keys + known_hosts setup right)\r\n2) Put instances in placement group\r\n3) Add IAM role so each instance can access buckets, etc.\r\n4) Set security group to allow TCP traffic on any port from machines only in security group\r\n5) Set /etc/hosts and MPI hostfile appropriately  (and put in VPC so internal IPs don't change).\r\n\r\nHopefully this can help others spin up their own parallel cluster. \r\n","closed_by":{"login":"rahul003","id":3457240,"node_id":"MDQ6VXNlcjM0NTcyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/3457240?v=4","gravatar_id":"","url":"https://api.github.com/users/rahul003","html_url":"https://github.com/rahul003","followers_url":"https://api.github.com/users/rahul003/followers","following_url":"https://api.github.com/users/rahul003/following{/other_user}","gists_url":"https://api.github.com/users/rahul003/gists{/gist_id}","starred_url":"https://api.github.com/users/rahul003/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahul003/subscriptions","organizations_url":"https://api.github.com/users/rahul003/orgs","repos_url":"https://api.github.com/users/rahul003/repos","events_url":"https://api.github.com/users/rahul003/events{/privacy}","received_events_url":"https://api.github.com/users/rahul003/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/aws-samples/deep-learning-models/issues/1/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/aws-samples/deep-learning-models/issues/1/timeline","performed_via_github_app":null,"state_reason":"completed"}