[{"url":"https://api.github.com/repos/budzianowski/multiwoz/issues/comments/442430032","html_url":"https://github.com/budzianowski/multiwoz/issues/2#issuecomment-442430032","issue_url":"https://api.github.com/repos/budzianowski/multiwoz/issues/2","id":442430032,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MjQzMDAzMg==","user":{"login":"budzianowski","id":17451096,"node_id":"MDQ6VXNlcjE3NDUxMDk2","avatar_url":"https://avatars.githubusercontent.com/u/17451096?v=4","gravatar_id":"","url":"https://api.github.com/users/budzianowski","html_url":"https://github.com/budzianowski","followers_url":"https://api.github.com/users/budzianowski/followers","following_url":"https://api.github.com/users/budzianowski/following{/other_user}","gists_url":"https://api.github.com/users/budzianowski/gists{/gist_id}","starred_url":"https://api.github.com/users/budzianowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/budzianowski/subscriptions","organizations_url":"https://api.github.com/users/budzianowski/orgs","repos_url":"https://api.github.com/users/budzianowski/repos","events_url":"https://api.github.com/users/budzianowski/events{/privacy}","received_events_url":"https://api.github.com/users/budzianowski/received_events","type":"User","site_admin":false},"created_at":"2018-11-28T12:28:55Z","updated_at":"2018-11-28T12:28:55Z","author_association":"OWNER","body":"Hi! \r\n\r\nthanks for raising this. Indeed the scores will be slightly different (up to 0.5% in my experience).\r\nThe randomness models the real life problem where often the system can choose among many entities that can be offered to the user. Thanks to it we can also differentiate between the ones that adapt to the changing goal of the user.","reactions":{"url":"https://api.github.com/repos/budzianowski/multiwoz/issues/comments/442430032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"budzianowski","id":17451096,"node_id":"MDQ6VXNlcjE3NDUxMDk2","avatar_url":"https://avatars.githubusercontent.com/u/17451096?v=4","gravatar_id":"","url":"https://api.github.com/users/budzianowski","html_url":"https://github.com/budzianowski","followers_url":"https://api.github.com/users/budzianowski/followers","following_url":"https://api.github.com/users/budzianowski/following{/other_user}","gists_url":"https://api.github.com/users/budzianowski/gists{/gist_id}","starred_url":"https://api.github.com/users/budzianowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/budzianowski/subscriptions","organizations_url":"https://api.github.com/users/budzianowski/orgs","repos_url":"https://api.github.com/users/budzianowski/repos","events_url":"https://api.github.com/users/budzianowski/events{/privacy}","received_events_url":"https://api.github.com/users/budzianowski/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/budzianowski/multiwoz/issues/comments/689071719","html_url":"https://github.com/budzianowski/multiwoz/issues/2#issuecomment-689071719","issue_url":"https://api.github.com/repos/budzianowski/multiwoz/issues/2","id":689071719,"node_id":"MDEyOklzc3VlQ29tbWVudDY4OTA3MTcxOQ==","user":{"login":"skiingpacman","id":37202747,"node_id":"MDQ6VXNlcjM3MjAyNzQ3","avatar_url":"https://avatars.githubusercontent.com/u/37202747?v=4","gravatar_id":"","url":"https://api.github.com/users/skiingpacman","html_url":"https://github.com/skiingpacman","followers_url":"https://api.github.com/users/skiingpacman/followers","following_url":"https://api.github.com/users/skiingpacman/following{/other_user}","gists_url":"https://api.github.com/users/skiingpacman/gists{/gist_id}","starred_url":"https://api.github.com/users/skiingpacman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skiingpacman/subscriptions","organizations_url":"https://api.github.com/users/skiingpacman/orgs","repos_url":"https://api.github.com/users/skiingpacman/repos","events_url":"https://api.github.com/users/skiingpacman/events{/privacy}","received_events_url":"https://api.github.com/users/skiingpacman/received_events","type":"User","site_admin":false},"created_at":"2020-09-08T18:55:58Z","updated_at":"2020-09-08T18:55:58Z","author_association":"NONE","body":"Realise this is a somewhat old topic but I ended up digging into this to understand the Inform Rate metric better.\r\n\r\nOn a static, off-line set of dialogue logs the score can vary by around 1 percentage point (tested empirically). As an example, I used a fixed set of test set dialogue sampled from a recent GPT2 based model and found the Inform Rate varied between a min. 71.9% to a max. of 72.9%. Mean 72.42% +/- 0.56% (+/- 2*STD) over 10 samples.\r\n\r\nFor the Dialogue-Context-to-Text Generation task, my interpretation of Inform Rate is that for each domain contained in a dialogue, the last mentioned entity (venue name or id) for that domain should match the requirements in the user's goal. Where the user's goal is specified a priori for each test dialog (but hidden from the dialogue system). Given the assumed benchmarking setup of perfect (oracle) belief state and database extraction for each turn, then the set of entities (per domain) available to be mentioned by policy should eventually satisfy the goal constraints assuming the dialogue remained on course and the user provided all their constraints.\r\n\r\nThe Inform Rate metric, in this offline setting, thus should assess whether the policy finally present a matching entity to the user when all the information about the user's constraints (including any revisions) was available. Thus I was somewhat confused why there should be some random element when computing this metric over a fix corpus of dialogue logs. The venue sampling, as identified by @shaform (above), should still result in venues consistent with the user's goal.\r\n\r\nUnderstanding where the stochasticity in the results comes from, reveals an assumption that is broken in the current implementation. To provide the 'oracle' belief state for each turn in the dialogue the Inform Rate implementation uses the (test set) dialogues collected with human-wizards in the loop as \"perfect\" state trackers. Unfortunately the human-wizards were not perfect, sometime making mistakes and sometime taking shortcuts.\r\n\r\nIn one example (MUL0890) the user asks for indian cuisine on the east side of town. The human-wizard records this and came up with 4 results, 2 moderately priced and two expensive. The user request an expensive restaurant but the human-wizard fails to update the belief state to add this information - in reality I guess they didn't need to as they could likely read off one of the expensive options (which they did) and reply to the user without updating the UI.\r\n\r\nLooking at the code, Inform Rate's implementation uses the human-wizard provided belief state from the dialogues. It computes the set of matching venues that satisfy the human-wizard provided belief state for that turn, then samples one entity from this set and compares to the set of possible entities that match the user's goal. In the above example there are two entities (two restaurants) that satisfy the goal, however the set of available entities that match the human-wizard provided belief state is 4 and thus there is a 50:50 chance that the process of randomly sampling one entity will result in a mismatch and thus the dialogue will be classified as having failed on this metric.\r\n\r\nHaving discovered the cause of the randomness the next question that occured to me is to what extent does the Inform Rate metric implementation make it impossible to select a match, i.e. in how many test set dialogues does the human-wizard provided belief state not overlap at all with the set of requirements in the user's goal.\r\n\r\nAssuming that the human-wizard dialogues in the test set present the domain entities during the optimum turns in the dialogues with respect to belief state, it turns out that there is zero overlap between the available venues that match the human-wizard provided belief state and the user goal set of venues in 84 dialogues. Given that the test set consists of 1000 dialogues this would likely* bound the highest score that can be achieved on this implementation of Inform Rate to 91.6%.\r\n\r\n*There's a possibility - thought my suspicion is that it's a low possibility - that a better strategy than using the human-wizard responses to decide in which turn to present entities could exist. I hacked the metric code to simulated a policy that presented a venue for each domain in the goal set at the end of every dialogue but this scored worse (~83% Inform Rate) indicating that there is an \"optimal\" turn in several of the dialogues. I speculate that the human-wizards make further erroneous updates to the belief state after that turn.\r\n\r\nNote all of this analysis is based on MultiWoZ 2.0.\r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/budzianowski/multiwoz/issues/comments/689071719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"skiingpacman","id":37202747,"node_id":"MDQ6VXNlcjM3MjAyNzQ3","avatar_url":"https://avatars.githubusercontent.com/u/37202747?v=4","gravatar_id":"","url":"https://api.github.com/users/skiingpacman","html_url":"https://github.com/skiingpacman","followers_url":"https://api.github.com/users/skiingpacman/followers","following_url":"https://api.github.com/users/skiingpacman/following{/other_user}","gists_url":"https://api.github.com/users/skiingpacman/gists{/gist_id}","starred_url":"https://api.github.com/users/skiingpacman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skiingpacman/subscriptions","organizations_url":"https://api.github.com/users/skiingpacman/orgs","repos_url":"https://api.github.com/users/skiingpacman/repos","events_url":"https://api.github.com/users/skiingpacman/events{/privacy}","received_events_url":"https://api.github.com/users/skiingpacman/received_events","type":"User","site_admin":false}},{"id":3742374196,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50Mzc0MjM3NDE5Ng==","url":"https://api.github.com/repos/budzianowski/multiwoz/issues/events/3742374196","actor":{"login":"shaform","id":367172,"node_id":"MDQ6VXNlcjM2NzE3Mg==","avatar_url":"https://avatars.githubusercontent.com/u/367172?v=4","gravatar_id":"","url":"https://api.github.com/users/shaform","html_url":"https://github.com/shaform","followers_url":"https://api.github.com/users/shaform/followers","following_url":"https://api.github.com/users/shaform/following{/other_user}","gists_url":"https://api.github.com/users/shaform/gists{/gist_id}","starred_url":"https://api.github.com/users/shaform/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shaform/subscriptions","organizations_url":"https://api.github.com/users/shaform/orgs","repos_url":"https://api.github.com/users/shaform/repos","events_url":"https://api.github.com/users/shaform/events{/privacy}","received_events_url":"https://api.github.com/users/shaform/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-09-08T18:55:58Z","performed_via_github_app":null},{"id":3742374202,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDM3NDIzNzQyMDI=","url":"https://api.github.com/repos/budzianowski/multiwoz/issues/events/3742374202","actor":{"login":"shaform","id":367172,"node_id":"MDQ6VXNlcjM2NzE3Mg==","avatar_url":"https://avatars.githubusercontent.com/u/367172?v=4","gravatar_id":"","url":"https://api.github.com/users/shaform","html_url":"https://github.com/shaform","followers_url":"https://api.github.com/users/shaform/followers","following_url":"https://api.github.com/users/shaform/following{/other_user}","gists_url":"https://api.github.com/users/shaform/gists{/gist_id}","starred_url":"https://api.github.com/users/shaform/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shaform/subscriptions","organizations_url":"https://api.github.com/users/shaform/orgs","repos_url":"https://api.github.com/users/shaform/repos","events_url":"https://api.github.com/users/shaform/events{/privacy}","received_events_url":"https://api.github.com/users/shaform/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-09-08T18:55:58Z","performed_via_github_app":null},{"id":4992986648,"node_id":"MDE1OlJlZmVyZW5jZWRFdmVudDQ5OTI5ODY2NDg=","url":"https://api.github.com/repos/budzianowski/multiwoz/issues/events/4992986648","actor":{"login":"budzianowski","id":17451096,"node_id":"MDQ6VXNlcjE3NDUxMDk2","avatar_url":"https://avatars.githubusercontent.com/u/17451096?v=4","gravatar_id":"","url":"https://api.github.com/users/budzianowski","html_url":"https://github.com/budzianowski","followers_url":"https://api.github.com/users/budzianowski/followers","following_url":"https://api.github.com/users/budzianowski/following{/other_user}","gists_url":"https://api.github.com/users/budzianowski/gists{/gist_id}","starred_url":"https://api.github.com/users/budzianowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/budzianowski/subscriptions","organizations_url":"https://api.github.com/users/budzianowski/orgs","repos_url":"https://api.github.com/users/budzianowski/repos","events_url":"https://api.github.com/users/budzianowski/events{/privacy}","received_events_url":"https://api.github.com/users/budzianowski/received_events","type":"User","site_admin":false},"event":"referenced","commit_id":"6641d4a63d9eae0766852c1c31ef3dc255862d9a","commit_url":"https://api.github.com/repos/budzianowski/multiwoz/commits/6641d4a63d9eae0766852c1c31ef3dc255862d9a","created_at":"2021-07-08T06:49:40Z","performed_via_github_app":null}]