{"url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/31","repository_url":"https://api.github.com/repos/nanoporetech/taiyaki","labels_url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/31/comments","events_url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/31/events","html_url":"https://github.com/nanoporetech/taiyaki/issues/31","id":462417149,"node_id":"MDU6SXNzdWU0NjI0MTcxNDk=","number":31,"title":"Modified Base Output","user":{"login":"fneuh","id":39982768,"node_id":"MDQ6VXNlcjM5OTgyNzY4","avatar_url":"https://avatars.githubusercontent.com/u/39982768?v=4","gravatar_id":"","url":"https://api.github.com/users/fneuh","html_url":"https://github.com/fneuh","followers_url":"https://api.github.com/users/fneuh/followers","following_url":"https://api.github.com/users/fneuh/following{/other_user}","gists_url":"https://api.github.com/users/fneuh/gists{/gist_id}","starred_url":"https://api.github.com/users/fneuh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fneuh/subscriptions","organizations_url":"https://api.github.com/users/fneuh/orgs","repos_url":"https://api.github.com/users/fneuh/repos","events_url":"https://api.github.com/users/fneuh/events{/privacy}","received_events_url":"https://api.github.com/users/fneuh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-06-30T15:29:15Z","updated_at":"2019-06-30T16:45:24Z","closed_at":"2019-06-30T16:45:24Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nI trained a modification-aware RNA model, the modification that I looked at, can occur only at G's. My training dataset consists of reads that are either completely modified (so every G has the modification) or completely unmodifed.\r\nAfter training I basecalled a held-out test set, that also consists of reads that are completely modified or unmodified, with _basecall.py_\r\nWhen looking at the modifed base scores, modified positions have a modified base score from -2 to 0, and unmodified positions have a score from around -20 to -2. There is a bit of intercept between these populations, but over all the distributions of unmodified and modified reads are separated quite clear. In docs/FILE_FORMATS you write:\r\n\r\n> More negative modified base scores indicate modified bases and more positive scores indicate canonical bases.\r\n\r\nSo that's more or less the opposite behavior of what I would expect from looking at my data..\r\nDo you have an idea, where this problem is coming from? Maybe by any luck there is a mistake in the file-format doc? \r\n\r\nThanks,\r\nFlorian","closed_by":{"login":"fneuh","id":39982768,"node_id":"MDQ6VXNlcjM5OTgyNzY4","avatar_url":"https://avatars.githubusercontent.com/u/39982768?v=4","gravatar_id":"","url":"https://api.github.com/users/fneuh","html_url":"https://github.com/fneuh","followers_url":"https://api.github.com/users/fneuh/followers","following_url":"https://api.github.com/users/fneuh/following{/other_user}","gists_url":"https://api.github.com/users/fneuh/gists{/gist_id}","starred_url":"https://api.github.com/users/fneuh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fneuh/subscriptions","organizations_url":"https://api.github.com/users/fneuh/orgs","repos_url":"https://api.github.com/users/fneuh/repos","events_url":"https://api.github.com/users/fneuh/events{/privacy}","received_events_url":"https://api.github.com/users/fneuh/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/31/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/31/timeline","performed_via_github_app":null,"state_reason":"completed"}