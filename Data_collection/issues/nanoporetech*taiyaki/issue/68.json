{"url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/68","repository_url":"https://api.github.com/repos/nanoporetech/taiyaki","labels_url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/68/labels{/name}","comments_url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/68/comments","events_url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/68/events","html_url":"https://github.com/nanoporetech/taiyaki/issues/68","id":568863876,"node_id":"MDU6SXNzdWU1Njg4NjM4NzY=","number":68,"title":"Why are signal lengths per nucleotide always multiples of 12?","user":{"login":"RaverJay","id":29630353,"node_id":"MDQ6VXNlcjI5NjMwMzUz","avatar_url":"https://avatars.githubusercontent.com/u/29630353?v=4","gravatar_id":"","url":"https://api.github.com/users/RaverJay","html_url":"https://github.com/RaverJay","followers_url":"https://api.github.com/users/RaverJay/followers","following_url":"https://api.github.com/users/RaverJay/following{/other_user}","gists_url":"https://api.github.com/users/RaverJay/gists{/gist_id}","starred_url":"https://api.github.com/users/RaverJay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RaverJay/subscriptions","organizations_url":"https://api.github.com/users/RaverJay/orgs","repos_url":"https://api.github.com/users/RaverJay/repos","events_url":"https://api.github.com/users/RaverJay/events{/privacy}","received_events_url":"https://api.github.com/users/RaverJay/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-02-21T10:19:24Z","updated_at":"2020-03-17T16:43:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey there,\r\n\r\nI noticed the signal lengths for each nucleotide are only multiples of 12 after re-squiggling with prepare_mapped_reads.py\r\n\r\nSo differences between adjacent values in Ref_to_signal are e.g.\r\n[ 24.,  12.,  12., 132., 108.,  24.,  12., ...]\r\n\r\nWhy is that?\r\nSeems like unnecessarily coarse resolution\r\nDoes this correspond to the Move table in any way?\r\n\r\nPossibly unrelated:\r\nI just realized that my reads have old Albacore basecalls (Events table etc) and Guppy basecalls (Move table etc) -  will prepare_mapped_reads.py only use the newest Basecalls in the fast5?\r\n\r\nCheers\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/68/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/nanoporetech/taiyaki/issues/68/timeline","performed_via_github_app":null,"state_reason":null}