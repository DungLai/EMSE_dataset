{"url":"https://api.github.com/repos/atulkum/pointer_summarizer/issues/60","repository_url":"https://api.github.com/repos/atulkum/pointer_summarizer","labels_url":"https://api.github.com/repos/atulkum/pointer_summarizer/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/atulkum/pointer_summarizer/issues/60/comments","events_url":"https://api.github.com/repos/atulkum/pointer_summarizer/issues/60/events","html_url":"https://github.com/atulkum/pointer_summarizer/issues/60","id":880440262,"node_id":"MDU6SXNzdWU4ODA0NDAyNjI=","number":60,"title":"Discrepancy with implementation and the paper ","user":{"login":"AetherPrior","id":39939017,"node_id":"MDQ6VXNlcjM5OTM5MDE3","avatar_url":"https://avatars.githubusercontent.com/u/39939017?v=4","gravatar_id":"","url":"https://api.github.com/users/AetherPrior","html_url":"https://github.com/AetherPrior","followers_url":"https://api.github.com/users/AetherPrior/followers","following_url":"https://api.github.com/users/AetherPrior/following{/other_user}","gists_url":"https://api.github.com/users/AetherPrior/gists{/gist_id}","starred_url":"https://api.github.com/users/AetherPrior/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AetherPrior/subscriptions","organizations_url":"https://api.github.com/users/AetherPrior/orgs","repos_url":"https://api.github.com/users/AetherPrior/repos","events_url":"https://api.github.com/users/AetherPrior/events{/privacy}","received_events_url":"https://api.github.com/users/AetherPrior/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-08T07:31:56Z","updated_at":"2021-05-08T07:31:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, I hope you are doing well. While going through your implementation on the pointer generator, I have noticed that there's a difference in the implementation of the `p_gen` calculation versus the formula mentioned in the paper. \r\nI request some clarity as to why it has been implemented this way (if there is any advantage in doing so). \r\n\r\n```\r\n        y_t_1_embd = self.embedding(y_t_1)\r\n        x = self.x_context(torch.cat((c_t_1, y_t_1_embd), 1))\r\n        lstm_out, s_t = self.lstm(x.unsqueeze(1), s_t_1)\r\n\r\n        h_decoder, c_decoder = s_t\r\n        s_t_hat = torch.cat((h_decoder.view(-1, config.hidden_dim),\r\n                             c_decoder.view(-1, config.hidden_dim)), 1)  # B x 2*hidden_dim\r\n        c_t, attn_dist, coverage_next = self.attention_network(s_t_hat, encoder_outputs, encoder_feature,\r\n                                                          enc_padding_mask, coverage)\r\n\r\n        if self.training or step > 0:\r\n            coverage = coverage_next\r\n\r\n        p_gen = None\r\n        if config.pointer_gen:\r\n            p_gen_input = torch.cat((c_t, s_t_hat, x), 1)  # B x (2*2*hidden_dim + emb_dim)\r\n            p_gen = self.p_gen_linear(p_gen_input)\r\n            p_gen = F.sigmoid(p_gen)\r\n ```\r\nFrom what I know, the p_gen takes in the context vector `c_t` , the `s_t_hat` and the input `y_t_1` separately, but you've passed the concatenated input `x` .  \r\nI am attaching a screenshot from the original [paper](https://arxiv.org/pdf/1704.04368.pdf) as a reference.   \r\n![pointer_gen](https://user-images.githubusercontent.com/39939017/117530848-01fee200-affd-11eb-951b-082ca0e4c68a.png)  \r\nFrom what I can see here, they are directly passing in the decoder input `x_t` into the sigmoid instead of concatenating the context vector with it.\r\nIn this line however, \r\n```\r\nx = self.x_context(torch.cat((c_t_1, y_t_1_embd), 1))\r\n```\r\nthe context vector is being concatenated with the input, before being fed into the sigmoid function:  \r\n```\r\n            p_gen_input = torch.cat((c_t, s_t_hat, x), 1)  # B x (2*2*hidden_dim + emb_dim)\r\n            p_gen = self.p_gen_linear(p_gen_input)\r\n            p_gen = F.sigmoid(p_gen)\r\n```\r\nThank you!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/atulkum/pointer_summarizer/issues/60/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/atulkum/pointer_summarizer/issues/60/timeline","performed_via_github_app":null,"state_reason":null}