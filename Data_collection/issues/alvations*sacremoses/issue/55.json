{"url":"https://api.github.com/repos/alvations/sacremoses/issues/55","repository_url":"https://api.github.com/repos/alvations/sacremoses","labels_url":"https://api.github.com/repos/alvations/sacremoses/issues/55/labels{/name}","comments_url":"https://api.github.com/repos/alvations/sacremoses/issues/55/comments","events_url":"https://api.github.com/repos/alvations/sacremoses/issues/55/events","html_url":"https://github.com/alvations/sacremoses/issues/55","id":455647042,"node_id":"MDU6SXNzdWU0NTU2NDcwNDI=","number":55,"title":"Truecaser crashes for large corpora (>8M segments)","user":{"login":"pypae","id":1078105,"node_id":"MDQ6VXNlcjEwNzgxMDU=","avatar_url":"https://avatars.githubusercontent.com/u/1078105?v=4","gravatar_id":"","url":"https://api.github.com/users/pypae","html_url":"https://github.com/pypae","followers_url":"https://api.github.com/users/pypae/followers","following_url":"https://api.github.com/users/pypae/following{/other_user}","gists_url":"https://api.github.com/users/pypae/gists{/gist_id}","starred_url":"https://api.github.com/users/pypae/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pypae/subscriptions","organizations_url":"https://api.github.com/users/pypae/orgs","repos_url":"https://api.github.com/users/pypae/repos","events_url":"https://api.github.com/users/pypae/events{/privacy}","received_events_url":"https://api.github.com/users/pypae/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-06-13T09:57:42Z","updated_at":"2019-07-16T03:23:07Z","closed_at":"2019-07-16T03:23:07Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We used the truecaser for some of our corpora with >8M segments. There are some issues when training a truecaser for larger corpora:\r\n\r\n- Using `joblib.Parallel` causes a huge memory footprint even when used with a single process. i.e. >32GB of memory for our 8M corpus.\r\n- The training never seems to stop (cancelled after 24h). The progressbar finishes after about 20minutes. \r\n\r\nIn our particular case we fixed the problem by using `map` instead of `Parallel` for single processes in this function:\r\n\r\nhttps://github.com/alvations/sacremoses/blob/f3780b392368ba09106098354aca706f8476cdb6/sacremoses/util.py#L169-L171\r\n\r\n```python\r\n def parallelize_preprocess(func, iterator, processes, progress_bar=False): \r\n     iterator = tqdm(iterator) if progress_bar else iterator \r\n     if processes <= 1:\r\n          return map(func, iterator)\r\n     return Parallel(n_jobs=processes)(delayed(func)(line) for line in iterator) \r\n```","closed_by":{"login":"alvations","id":1050316,"node_id":"MDQ6VXNlcjEwNTAzMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1050316?v=4","gravatar_id":"","url":"https://api.github.com/users/alvations","html_url":"https://github.com/alvations","followers_url":"https://api.github.com/users/alvations/followers","following_url":"https://api.github.com/users/alvations/following{/other_user}","gists_url":"https://api.github.com/users/alvations/gists{/gist_id}","starred_url":"https://api.github.com/users/alvations/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alvations/subscriptions","organizations_url":"https://api.github.com/users/alvations/orgs","repos_url":"https://api.github.com/users/alvations/repos","events_url":"https://api.github.com/users/alvations/events{/privacy}","received_events_url":"https://api.github.com/users/alvations/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/alvations/sacremoses/issues/55/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/alvations/sacremoses/issues/55/timeline","performed_via_github_app":null,"state_reason":"completed"}