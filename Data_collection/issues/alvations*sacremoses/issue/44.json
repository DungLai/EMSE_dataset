{"url":"https://api.github.com/repos/alvations/sacremoses/issues/44","repository_url":"https://api.github.com/repos/alvations/sacremoses","labels_url":"https://api.github.com/repos/alvations/sacremoses/issues/44/labels{/name}","comments_url":"https://api.github.com/repos/alvations/sacremoses/issues/44/comments","events_url":"https://api.github.com/repos/alvations/sacremoses/issues/44/events","html_url":"https://github.com/alvations/sacremoses/issues/44","id":428304798,"node_id":"MDU6SXNzdWU0MjgzMDQ3OTg=","number":44,"title":"Support of Moses tokenizer Perl scripts","user":{"login":"loretoparisi","id":163333,"node_id":"MDQ6VXNlcjE2MzMzMw==","avatar_url":"https://avatars.githubusercontent.com/u/163333?v=4","gravatar_id":"","url":"https://api.github.com/users/loretoparisi","html_url":"https://github.com/loretoparisi","followers_url":"https://api.github.com/users/loretoparisi/followers","following_url":"https://api.github.com/users/loretoparisi/following{/other_user}","gists_url":"https://api.github.com/users/loretoparisi/gists{/gist_id}","starred_url":"https://api.github.com/users/loretoparisi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loretoparisi/subscriptions","organizations_url":"https://api.github.com/users/loretoparisi/orgs","repos_url":"https://api.github.com/users/loretoparisi/repos","events_url":"https://api.github.com/users/loretoparisi/events{/privacy}","received_events_url":"https://api.github.com/users/loretoparisi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2019-04-02T15:45:10Z","updated_at":"2020-12-01T16:16:07Z","closed_at":"2019-04-12T07:45:10Z","author_association":"NONE","active_lock_reason":null,"body":"In my tokenization pipeline I run several Moses `perl` scripts like\r\n\r\n```python\r\ndef TokenLine(line, lang='en', lower_case=True, romanize=False):\r\n    assert lower_case, 'lower case is needed by all the models'\r\n    roman = lang if romanize else 'none'\r\n    tok = check_output(\r\n            REM_NON_PRINT_CHAR\r\n            + '|' + NORM_PUNC + lang\r\n            + '|' + DESCAPE\r\n            + '|' + MOSES_TOKENIZER + lang\r\n            input=line,\r\n            encoding='UTF-8',\r\n            shell=True)\r\n    return tok.strip()\r\n```\r\n\r\nwhere I have\r\n\r\n```\r\nMOSES_BDIR = os.path.join( TOOL_BASE_DIR, 'moses-tokenizer/tokenizer/')\r\nMOSES_TOKENIZER = MOSES_BDIR + 'tokenizer.perl -q -no-escape -threads 20 -l '\r\nNORM_PUNC = MOSES_BDIR + 'normalize-punctuation.perl -l '\r\nDESCAPE = MOSES_BDIR + 'deescape-special-chars.perl'\r\nREM_NON_PRINT_CHAR = MOSES_BDIR + 'remove-non-printing-char.perl'\r\n```\r\n\r\nSo I run `normalize-punctuation.perl`, `remove-non-printing-char.perl` and `tokenizer.perl`. Are all these script supported by Sacremoses?\r\n\r\nIn my understanding I should do like\r\n\r\n```python\r\nfrom sacremoses import MosesTokenizer\r\n\r\nmtok = MosesTokenizer(lang='fr')\r\ntokenized_docs = [mtok.tokenize(line) for line text.splitlines() ]\r\n```\r\n\r\nwhile from the command line options I can see the `--xml-unescape` to   unescape special characters for XML, that should match the `deescape-special-chars.perl` script. Regarding the non printing chars from the `remove-non-printing-char.perl` my understanding is that are handled by the api without other options like\r\n\r\n```python\r\n>>> mtok.tokenize(\"This , is a sentence with weird \\xbb symbols \\u2026 appearing everywhere \\xbf\")\r\n['This', ',', 'is', 'a', 'sentence', 'with', 'weird', '»', 'symbols', '…', 'appearing', 'everywhere', '¿']\r\n>>> \r\n```\r\n\r\nSo what I did was having the signature of `tokenize`\r\n\r\n```python\r\ndef tokenize(self, text, aggressive_dash_splits=False, return_str=False, escape=True):\r\n```\r\n\r\nto use it like\r\n\r\n```python\r\nmtok.tokenize(string, escape=True, return_str=True, aggressive_dash_splits=False)\r\n```\r\n\r\nbecause I want a string output (`return_str=True`), to not handle hypens (`aggressive_dash_splits=False`). Regarding the escaping of HTML chars in the perl version I don't know if `escape=True` of the python version, will match it, since here it handles the `XML` escaping.","closed_by":{"login":"loretoparisi","id":163333,"node_id":"MDQ6VXNlcjE2MzMzMw==","avatar_url":"https://avatars.githubusercontent.com/u/163333?v=4","gravatar_id":"","url":"https://api.github.com/users/loretoparisi","html_url":"https://github.com/loretoparisi","followers_url":"https://api.github.com/users/loretoparisi/followers","following_url":"https://api.github.com/users/loretoparisi/following{/other_user}","gists_url":"https://api.github.com/users/loretoparisi/gists{/gist_id}","starred_url":"https://api.github.com/users/loretoparisi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loretoparisi/subscriptions","organizations_url":"https://api.github.com/users/loretoparisi/orgs","repos_url":"https://api.github.com/users/loretoparisi/repos","events_url":"https://api.github.com/users/loretoparisi/events{/privacy}","received_events_url":"https://api.github.com/users/loretoparisi/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/alvations/sacremoses/issues/44/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/alvations/sacremoses/issues/44/timeline","performed_via_github_app":null,"state_reason":"completed"}