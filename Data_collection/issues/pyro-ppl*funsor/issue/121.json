{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/121","repository_url":"https://api.github.com/repos/pyro-ppl/funsor","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/121/labels{/name}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/121/comments","events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/121/events","html_url":"https://github.com/pyro-ppl/funsor/issues/121","id":430631948,"node_id":"MDU6SXNzdWU0MzA2MzE5NDg=","number":121,"title":"Add examples implementing various PPL styles via Funsor","user":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"labels":[{"id":1235911323,"node_id":"MDU6TGFiZWwxMjM1OTExMzIz","url":"https://api.github.com/repos/pyro-ppl/funsor/labels/examples","name":"examples","color":"0052cc","default":false,"description":"Examples and tutorials"}],"state":"open","locked":false,"assignee":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"assignees":[{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2019-04-08T20:00:42Z","updated_at":"2019-07-02T06:04:40Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"@lawmurray suggested adding examples of how to implement different styles of probabilistic programming languages on top of Funsor. We could implement this as a directory examples/ppl-zoo or examples/rosetta or something.\r\n\r\n## Tasks\r\n(@eb8680 @lawmurray I've tried to populate with representative examples, but I think you both have clearer views of the landscape; feel free to update/add to/remove from this list)\r\n\r\n- [x] a Pyro example (minipyro)\r\n- [ ] a Birch-style example (with delayed sampling, maybe using `pyro.ground`)\r\n- [ ] a Stan-style example (HMC on a non-normalized log-density function, blocked by #123)\r\n- [ ] a TFP [JointDistributionCoroutine](https://github.com/tensorflow/probability/blob/5d2aa92/tensorflow_probability/python/distributions/joint_distribution_coroutine.py#L34)-style example wrapping minipyro with `yield` statements\r\n- [ ] an omega/Edward2-style example (with `RandomVariable`s (and RCD?))  #130 \r\n- [ ] an Infer.net-style example using expectation propagation #90 or #115 \r\n- [ ] a webPPL-style example (a single `Infer` operator and basic ADTs and control flow)\r\n- [ ] a Dyna/kProbLog-style example (with a polyvariadic fix-point combinator)\r\n- [ ] a Church-style example\r\n- [ ] a Venture/Gen-style example\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/121/timeline","performed_via_github_app":null,"state_reason":null}