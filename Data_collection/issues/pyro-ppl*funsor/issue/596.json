{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/596","repository_url":"https://api.github.com/repos/pyro-ppl/funsor","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/596/labels{/name}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/596/comments","events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/596/events","html_url":"https://github.com/pyro-ppl/funsor/issues/596","id":1228973575,"node_id":"I_kwDOCgoJts5JQKYH","number":596,"title":"FR rules for (Gaussian + UniformPolygon).reduce(logaddexp)","user":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"labels":[{"id":1215006862,"node_id":"MDU6TGFiZWwxMjE1MDA2ODYy","url":"https://api.github.com/repos/pyro-ppl/funsor/labels/enhancement","name":"enhancement","color":"0e8a16","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-05-08T19:56:35Z","updated_at":"2022-05-08T19:56:35Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"It would be great to have reduction rules for uniform likelihoods wrt Gaussian latent variables:\r\n- [ ] `(MyContinuousDist + Uniform).reduce(logaddexp)` implemented via `.cdf()`\r\n- [ ] `(Gaussian + UniformPolygon).reduce(logaddexp)` implemented via quadrature (MC or QMC)\r\n\r\nThis could be used for Pyro and NumPyro probabilistic programs with constraint-like likelihoods, something like\r\n```python\r\ndef model(data):\r\n    z = pyro.sample(\"z\", Normal(...))\r\n    # Observe a constraint like lb < z < ub.\r\n    pyro.sample(\"x\", Uniform(...), obs=z)\r\n```\r\nhere we can be lazy and compute marginal likelihood via `Normal(...).cdf([lb, ub])`.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/596/timeline","performed_via_github_app":null,"state_reason":null}