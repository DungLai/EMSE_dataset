{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/308","repository_url":"https://api.github.com/repos/pyro-ppl/funsor","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/308/labels{/name}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/308/comments","events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/308/events","html_url":"https://github.com/pyro-ppl/funsor/issues/308","id":557161955,"node_id":"MDU6SXNzdWU1NTcxNjE5NTU=","number":308,"title":"Replace tensor.stack,tensor.tensordot -> ops.stack,ops.tensordot","user":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"labels":[{"id":1245797346,"node_id":"MDU6TGFiZWwxMjQ1Nzk3MzQ2","url":"https://api.github.com/repos/pyro-ppl/funsor/labels/refactor","name":"refactor","color":"ff9900","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"fehiepsi","id":4736342,"node_id":"MDQ6VXNlcjQ3MzYzNDI=","avatar_url":"https://avatars.githubusercontent.com/u/4736342?v=4","gravatar_id":"","url":"https://api.github.com/users/fehiepsi","html_url":"https://github.com/fehiepsi","followers_url":"https://api.github.com/users/fehiepsi/followers","following_url":"https://api.github.com/users/fehiepsi/following{/other_user}","gists_url":"https://api.github.com/users/fehiepsi/gists{/gist_id}","starred_url":"https://api.github.com/users/fehiepsi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fehiepsi/subscriptions","organizations_url":"https://api.github.com/users/fehiepsi/orgs","repos_url":"https://api.github.com/users/fehiepsi/repos","events_url":"https://api.github.com/users/fehiepsi/events{/privacy}","received_events_url":"https://api.github.com/users/fehiepsi/received_events","type":"User","site_admin":false},"assignees":[{"login":"fehiepsi","id":4736342,"node_id":"MDQ6VXNlcjQ3MzYzNDI=","avatar_url":"https://avatars.githubusercontent.com/u/4736342?v=4","gravatar_id":"","url":"https://api.github.com/users/fehiepsi","html_url":"https://github.com/fehiepsi","followers_url":"https://api.github.com/users/fehiepsi/followers","following_url":"https://api.github.com/users/fehiepsi/following{/other_user}","gists_url":"https://api.github.com/users/fehiepsi/gists{/gist_id}","starred_url":"https://api.github.com/users/fehiepsi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fehiepsi/subscriptions","organizations_url":"https://api.github.com/users/fehiepsi/orgs","repos_url":"https://api.github.com/users/fehiepsi/repos","events_url":"https://api.github.com/users/fehiepsi/events{/privacy}","received_events_url":"https://api.github.com/users/fehiepsi/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-01-29T22:44:16Z","updated_at":"2020-04-23T02:29:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"After #303 it will be possible to replace `funsor.tensor.stack()` with an `ops.stack` plus an eager reduction rule. Similarly for `tensordot`.\r\n\r\nOne issue is that both of these patterns take side inputs (`dim`), and `stack` takes an iterable of operands. We may want to resurrect `Finitary` funsors and think about how to add operator parameters (which might be restricted to Python int and never Funsors). There is already precedent for operators taking a single `dim` argument, namely [GetitemOp](https://github.com/pyro-ppl/funsor/blob/d4e61e1/funsor/ops.py#L140).","closed_by":null,"reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/308/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/308/timeline","performed_via_github_app":null,"state_reason":null}