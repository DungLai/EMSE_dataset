{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/533","repository_url":"https://api.github.com/repos/pyro-ppl/funsor","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/533/labels{/name}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/533/comments","events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/533/events","html_url":"https://github.com/pyro-ppl/funsor/issues/533","id":864216410,"node_id":"MDU6SXNzdWU4NjQyMTY0MTA=","number":533,"title":"Delayed param in minipyro","user":{"login":"ordabayevy","id":50752571,"node_id":"MDQ6VXNlcjUwNzUyNTcx","avatar_url":"https://avatars.githubusercontent.com/u/50752571?v=4","gravatar_id":"","url":"https://api.github.com/users/ordabayevy","html_url":"https://github.com/ordabayevy","followers_url":"https://api.github.com/users/ordabayevy/followers","following_url":"https://api.github.com/users/ordabayevy/following{/other_user}","gists_url":"https://api.github.com/users/ordabayevy/gists{/gist_id}","starred_url":"https://api.github.com/users/ordabayevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ordabayevy/subscriptions","organizations_url":"https://api.github.com/users/ordabayevy/orgs","repos_url":"https://api.github.com/users/ordabayevy/repos","events_url":"https://api.github.com/users/ordabayevy/events{/privacy}","received_events_url":"https://api.github.com/users/ordabayevy/received_events","type":"User","site_admin":false},"labels":[{"id":1235911323,"node_id":"MDU6TGFiZWwxMjM1OTExMzIz","url":"https://api.github.com/repos/pyro-ppl/funsor/labels/examples","name":"examples","color":"0052cc","default":false,"description":"Examples and tutorials"},{"id":1262045842,"node_id":"MDU6TGFiZWwxMjYyMDQ1ODQy","url":"https://api.github.com/repos/pyro-ppl/funsor/labels/discussion","name":"discussion","color":"fef2c0","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-04-21T19:46:41Z","updated_at":"2021-04-21T22:00:27Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue proposes to create delayed `pyro.param` by `log_joint` and then use `funsor.adam.Adam` to optimize parameters. This would allow to write optimization part in `minipyro` in a way that is more consistent with funsor style (if there is such a thing) and also  make it backend-agnostic (with more supported backends in `funsor.adam.Adam`). Support for constrained variables (#502) might be useful here.\r\n\r\n```py\r\nclass log_joint(Messenger):\r\n    ...\r\n    def process_message(self, msg):\r\n        if msg[\"type\"] == \"param\":\r\n            msg[\"value\"] = funsor.Variable(msg[\"name\"], msg[\"output\"])\r\n\r\nclass SVI:\r\n    ...\r\n    def run(self, *args, **kwargs):\r\n        ...\r\n        loss = ...\r\n        with funsor.montecarlo.MonteCarlo():\r\n            with funsor.adam.Adam(**options):\r\n                loss.reduce(ops.min)\r\n```\r\n\r\n(I have tried this out for a simple guide where `pyro.param` doesn't have any constraints and not nested in `pyro.plate` and it seems to work.)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/533/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/533/timeline","performed_via_github_app":null,"state_reason":null}