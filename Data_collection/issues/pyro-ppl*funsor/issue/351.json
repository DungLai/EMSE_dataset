{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351","repository_url":"https://api.github.com/repos/pyro-ppl/funsor","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/comments","events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/events","html_url":"https://github.com/pyro-ppl/funsor/issues/351","id":679670078,"node_id":"MDU6SXNzdWU2Nzk2NzAwNzg=","number":351,"title":"Replace domains -> types, .inputs+.output -> type hints","user":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"labels":[{"id":1245797346,"node_id":"MDU6TGFiZWwxMjQ1Nzk3MzQ2","url":"https://api.github.com/repos/pyro-ppl/funsor/labels/refactor","name":"refactor","color":"ff9900","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"assignees":[{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/pyro-ppl/funsor/milestones/3","html_url":"https://github.com/pyro-ppl/funsor/milestone/3","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/milestones/3/labels","id":6235535,"node_id":"MDk6TWlsZXN0b25lNjIzNTUzNQ==","number":3,"title":"1.0 engineering / hardening","description":"Engineering and hardening before Funsor 1.0 release needed for Pyro 2.0 release.","creator":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2020-12-22T00:34:04Z","updated_at":"2021-02-23T15:31:29Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2020-08-16T01:30:03Z","updated_at":"2021-03-17T15:48:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue proposes to replace funsor `Domain` objects with new subscripted types a la Python 3's `typing` module.\r\n\r\nThe goal is to make Funsor more Pythonic and to make funsors act more like Python functions (but with support for pointwise operations). In particular many of our design questions about multiple inputs or outputs could be resolved by \"following Python\". A simple example of more-Pythonic syntax is:\r\n```py\r\n# decorator syntax to read .inputs and .outputs from a type annotation\r\n@to_funsor\r\ndef f(x: Real[3], y: Real[3,3], t: Real) -> Real:\r\n    ...\r\n\r\n# explicitly specify type as Callable[..., ...]\r\ng = to_funsor(lambda x: x.sum(), Callable[[Real[3]], Real)\r\n    ...\r\n\r\nh = f + g  # materialized view of lambda x, y, t: f(x, y, t) + g(x)\r\n```\r\n\r\n## Interface\r\nBecause the Python 3 typing library is moving and not natively inspectable, we should implement a minimal interface for inspection:\r\n\r\n- [x] #352 creating domain types, `Bint[n]`, `Reals[m,n]`\r\n- [x] #352 `isinstance(-, Domain)` (with `Domain = type`)\r\n- [x] #352 `issubclass(-, -)` (by overriding `__subclasscheck__`)\r\n- [x] #354 `typing.get_type_hints()` for funsors\r\n- [ ] `typing.get_origin()`\r\n- [ ] `typing.get_args()`\r\n\r\n## Tasks\r\n- [x] #352 Refactor domains to be typing-compatible type objects: `Bint[n]`, `Real`, `Real[m,n]`, ...\r\n- [x] #356 Generalize `Bint` to nontrivial shape #322  and add an `Array` supertype\r\n- [x] #354 Update interfaces to make use of typing-compatible types (e.g. allow `@function`, `@of_type` to read type hints)\r\n- [x] #357 Cleanup: replace all uses of `reals()` and `bint()` with `Reals[]` and `Bint[]`\r\n- [x] #421 Cleanup: unify op-caching metaclasses\r\n- [x] #422 Support dynamic op creation and registration in `find_domain`\r\n- [x] #423 Add a `Finitary` term for lazy op application\r\n- [x] #430 Promote `LazyTuple` to a subclass of `Funsor`\r\n- [x] #431 Cleanup: automate invocation of `Unary` and `Binary` for ops applied to funsors\r\n- [ ] Replace `Function` with `Finitary` (or merge `Unary` and `Binary` into `Function` as in [the paper](https://arxiv.org/abs/1910.10775));\r\n  and replace `@function` with a dynamic `Op` factory.\r\n- [ ] Support limited (variables but no arithmetic) shape polymorphism in `Array` domains (#214)\r\n  ```py\r\n  @function\r\n  def matmul(x: Reals[\"i\", \"j\"], y: Reals[\"j\", \"k\"]) -> Reals[\"i\", \"k\"]:\r\n      return x @ y\r\n  ```\r\n  This will require a [unification](https://github.com/mrocklin/unification) algorithm in `find_domain()` and substitution.\r\n- [ ] Add type `.__annotations__` to all Ops and refactor `find_domain()`. We may be able to read many of these from gufunc signatures.\r\n- [ ] Add a mypy test stage and ensure the Funsor codebase typechecks.\r\n- [ ] Register `to_funsor` to use either `@function` or `@symbolic` (requires first class `Tuple`s, memoization)?\r\n- [ ] Possibly promote `Funsor` types themselves to subtypes of [Callable](https://docs.python.org/3/library/typing.html#typing.Callable)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/timeline","performed_via_github_app":null,"state_reason":null}