{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/304","repository_url":"https://api.github.com/repos/pyro-ppl/funsor","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/304/labels{/name}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/304/comments","events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/304/events","html_url":"https://github.com/pyro-ppl/funsor/issues/304","id":554966047,"node_id":"MDU6SXNzdWU1NTQ5NjYwNDc=","number":304,"title":"FR GaussianHMM.rsample() or MarkovProduct().sample()","user":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"labels":[{"id":1215006862,"node_id":"MDU6TGFiZWwxMjE1MDA2ODYy","url":"https://api.github.com/repos/pyro-ppl/funsor/labels/enhancement","name":"enhancement","color":"0e8a16","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-24T21:37:30Z","updated_at":"2020-01-29T06:06:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Addresses https://github.com/pyro-ppl/pyro/issues/2182\r\n\r\nA powerful class of guides would be enabled if we could support posterior sampling from a `GaussianHMM` class, with an interface like\r\n```py\r\nclass GaussianHMM(TorchDistribution):\r\n    def posterior(self, likelihood):\r\n        assert isinstance(likelihood, MultivariateNormal)\r\n        ...\r\n        return GaussianHMM(...)  # the posterior\r\n```\r\nIt should be easy in Funsor to contruct the `GaussianHMM`'s `.funsor_dist` using only a `+` operator. Then all we would need would be a `GaussianHMM.rsample()` method similar to https://github.com/pyro-ppl/pyro/pull/2238, requiring (I believe) a `MarkovProduct.sample()` implementation.\r\n\r\n## Tasks\r\n\r\n- [x] #306 Add an `ops.sample`\r\n- [ ] Add `Argreduce` and `Argbinary` funsors for use in adjoint\r\n- [ ] Move all `.unscaled_sample()` methods to `eager` interpretations of `Argreduce(ops.sample, ...)` and `Argbinary(ops.sample, ...)`\r\n- [ ] Add `eager` interpretations of `Argreduce(ops.max)` and `Argbinary(ops.max)`\r\n- [ ] Remove `red_op, bin_op` args from `AdjointTape.adjoint()` (instead each op will represent a (forward,backward) pair with the forward part of `ops.sample` agreeing with `ops.logaddexp`)\r\n- [ ] Refactor `AdjointTape.adjoint()` to compute wrt `reduced_vars` rather than `targets`\r\n- [ ] Add a helper `Funsor.argreduce(op, reduced_vars)` similar to `.reduce()`, e.g.\r\n    ```py\r\n    with AdjointTape() as t:\r\n        root = self.reduce(op, ...)  # forward pass\r\n    result = t.adjoint(root, ...)  # backward pass\r\n    assert result.inputs == self.inputs  # result has same type as self\r\n    return result\r\n    ```\r\n    Note this does both forward and backward passes, preserving inputs.\r\n- [ ] Reimplement `Funsor.sample(v,s) = Funsor.argreduce(ops.sample,v).reduce(ops.logaddexp,s)`\r\n- [ ] Fix the `._sample_delta()` implementations in `FunsorDistribution` and `GaussianHMM`","closed_by":null,"reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/304/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/304/timeline","performed_via_github_app":null,"state_reason":null}