{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/552","repository_url":"https://api.github.com/repos/pyro-ppl/funsor","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/552/labels{/name}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/552/comments","events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/552/events","html_url":"https://github.com/pyro-ppl/funsor/issues/552","id":1006696600,"node_id":"I_kwDOCgoJts48APiY","number":552,"title":"`Delta` turns into  `Binary` after `_alpha_unmangle`","user":{"login":"ordabayevy","id":50752571,"node_id":"MDQ6VXNlcjUwNzUyNTcx","avatar_url":"https://avatars.githubusercontent.com/u/50752571?v=4","gravatar_id":"","url":"https://api.github.com/users/ordabayevy","html_url":"https://github.com/ordabayevy","followers_url":"https://api.github.com/users/ordabayevy/followers","following_url":"https://api.github.com/users/ordabayevy/following{/other_user}","gists_url":"https://api.github.com/users/ordabayevy/gists{/gist_id}","starred_url":"https://api.github.com/users/ordabayevy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ordabayevy/subscriptions","organizations_url":"https://api.github.com/users/ordabayevy/orgs","repos_url":"https://api.github.com/users/ordabayevy/repos","events_url":"https://api.github.com/users/ordabayevy/events{/privacy}","received_events_url":"https://api.github.com/users/ordabayevy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-09-24T17:51:50Z","updated_at":"2021-09-26T16:16:08Z","closed_at":"2021-09-26T16:16:08Z","author_association":"MEMBER","active_lock_reason":null,"body":"There is an `_alpha_unmangle` issue with `Delta` terms where after unmangling it becomes a `Binary` term (`Delta(...)+Number(0)`):\r\n\r\n```py\r\nimport funsor.ops as ops\r\nfrom funsor.interpretations import reflect\r\nfrom funsor.terms import Variable, Bint, Real, substitute, Reduce\r\nfrom funsor.tensor import Tensor\r\nfrom funsor.delta import Delta\r\nfrom funsor.constant import Constant\r\nfrom funsor.adjoint import _alpha_unmangle\r\nfrom funsor.cnf import Contraction\r\nimport torch\r\nimport funsor\r\nfunsor.set_backend(\"torch\")\r\n\r\n\r\nfn = Reduce\r\ninputs = (\r\n    ops.logaddexp,\r\n    Contraction(\r\n        ops.null,\r\n        ops.add,\r\n        frozenset(),\r\n        (\r\n            Delta(\r\n                (\r\n                    (\r\n                        \"z\",\r\n                        (\r\n                            Tensor(\r\n                                torch.tensor([6.0, 1.0], dtype=torch.float64),\r\n                                (\r\n                                    (\r\n                                        \"data\",\r\n                                        Bint[2],\r\n                                    ),\r\n                                ),\r\n                                \"real\",\r\n                            ),\r\n                            Tensor(\r\n                                torch.tensor([0.0, 0.0], dtype=torch.float64),\r\n                                (\r\n                                    (\r\n                                        \"data\",\r\n                                        Bint[2],\r\n                                    ),\r\n                                ),\r\n                                \"real\",\r\n                            ),\r\n                        ),\r\n                    ),\r\n                )\r\n            ),\r\n            Constant(\r\n                (\r\n                    (\r\n                        \"data\",\r\n                        Bint[2],\r\n                    ),\r\n                ),\r\n                Tensor(torch.tensor(0.0, dtype=torch.float64), (), \"real\"),\r\n            ),\r\n        ),\r\n    ),\r\n    frozenset({Variable(\"z\", Real)}),\r\n)\r\nother_subs = ()\r\nwith reflect:\r\n    new_inputs = _alpha_unmangle(substitute(fn(*inputs), other_subs))\r\n```\r\n\r\n`Delta` in `inputs[1]` vs `Binary` in `new_inputs[1]`\r\n\r\n```\r\n>>> type(inputs[1])\r\nContraction[<class 'funsor.ops.NullOp'>, <class 'funsor.ops.AddOp'>, typing.FrozenSet, typing.Tuple[funsor.delta.Delta, funsor.constant.Constant]]\r\n>>> type(new_inputs[1])\r\nContraction[<class 'funsor.ops.NullOp'>, <class 'funsor.ops.AddOp'>, typing.FrozenSet, typing.Tuple[funsor.terms.Binary, funsor.constant.Constant]]\r\n```","closed_by":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/552/timeline","performed_via_github_app":null,"state_reason":"completed"}