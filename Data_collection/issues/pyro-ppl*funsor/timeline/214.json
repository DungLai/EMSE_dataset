[{"id":2604600655,"node_id":"MDEyOkxhYmVsZWRFdmVudDI2MDQ2MDA2NTU=","url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events/2604600655","actor":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-09-03T18:40:27Z","label":{"name":"enhancement","color":"0e8a16"},"performed_via_github_app":null},{"id":2604600657,"node_id":"MDEyOkxhYmVsZWRFdmVudDI2MDQ2MDA2NTc=","url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events/2604600657","actor":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-09-03T18:40:27Z","label":{"name":"discussion","color":"fef2c0"},"performed_via_github_app":null},{"id":2605194346,"node_id":"MDE0OlVubGFiZWxlZEV2ZW50MjYwNTE5NDM0Ng==","url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events/2605194346","actor":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"event":"unlabeled","commit_id":null,"commit_url":null,"created_at":"2019-09-03T22:40:06Z","label":{"name":"discussion","color":"fef2c0"},"performed_via_github_app":null},{"id":2605194348,"node_id":"MDEyOkxhYmVsZWRFdmVudDI2MDUxOTQzNDg=","url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events/2605194348","actor":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-09-03T22:40:06Z","label":{"name":"low priority","color":"c2e0c6"},"performed_via_github_app":null},{"actor":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"created_at":"2020-08-16T02:07:02Z","updated_at":"2020-08-16T02:07:02Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351","repository_url":"https://api.github.com/repos/pyro-ppl/funsor","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/comments","events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/events","html_url":"https://github.com/pyro-ppl/funsor/issues/351","id":679670078,"node_id":"MDU6SXNzdWU2Nzk2NzAwNzg=","number":351,"title":"Replace domains -> types, .inputs+.output -> type hints","user":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"labels":[{"id":1245797346,"node_id":"MDU6TGFiZWwxMjQ1Nzk3MzQ2","url":"https://api.github.com/repos/pyro-ppl/funsor/labels/refactor","name":"refactor","color":"ff9900","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"assignees":[{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/pyro-ppl/funsor/milestones/3","html_url":"https://github.com/pyro-ppl/funsor/milestone/3","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/milestones/3/labels","id":6235535,"node_id":"MDk6TWlsZXN0b25lNjIzNTUzNQ==","number":3,"title":"1.0 engineering / hardening","description":"Engineering and hardening before Funsor 1.0 release needed for Pyro 2.0 release.","creator":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2020-12-22T00:34:04Z","updated_at":"2021-02-23T15:31:29Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2020-08-16T01:30:03Z","updated_at":"2021-03-17T15:48:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"repository":{"id":168430006,"node_id":"MDEwOlJlcG9zaXRvcnkxNjg0MzAwMDY=","name":"funsor","full_name":"pyro-ppl/funsor","private":false,"owner":{"login":"pyro-ppl","id":46794900,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQ2Nzk0OTAw","avatar_url":"https://avatars.githubusercontent.com/u/46794900?v=4","gravatar_id":"","url":"https://api.github.com/users/pyro-ppl","html_url":"https://github.com/pyro-ppl","followers_url":"https://api.github.com/users/pyro-ppl/followers","following_url":"https://api.github.com/users/pyro-ppl/following{/other_user}","gists_url":"https://api.github.com/users/pyro-ppl/gists{/gist_id}","starred_url":"https://api.github.com/users/pyro-ppl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pyro-ppl/subscriptions","organizations_url":"https://api.github.com/users/pyro-ppl/orgs","repos_url":"https://api.github.com/users/pyro-ppl/repos","events_url":"https://api.github.com/users/pyro-ppl/events{/privacy}","received_events_url":"https://api.github.com/users/pyro-ppl/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/pyro-ppl/funsor","description":"Functional tensors for probabilistic programming","fork":false,"url":"https://api.github.com/repos/pyro-ppl/funsor","forks_url":"https://api.github.com/repos/pyro-ppl/funsor/forks","keys_url":"https://api.github.com/repos/pyro-ppl/funsor/keys{/key_id}","collaborators_url":"https://api.github.com/repos/pyro-ppl/funsor/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/pyro-ppl/funsor/teams","hooks_url":"https://api.github.com/repos/pyro-ppl/funsor/hooks","issue_events_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events{/number}","events_url":"https://api.github.com/repos/pyro-ppl/funsor/events","assignees_url":"https://api.github.com/repos/pyro-ppl/funsor/assignees{/user}","branches_url":"https://api.github.com/repos/pyro-ppl/funsor/branches{/branch}","tags_url":"https://api.github.com/repos/pyro-ppl/funsor/tags","blobs_url":"https://api.github.com/repos/pyro-ppl/funsor/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/pyro-ppl/funsor/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/pyro-ppl/funsor/git/refs{/sha}","trees_url":"https://api.github.com/repos/pyro-ppl/funsor/git/trees{/sha}","statuses_url":"https://api.github.com/repos/pyro-ppl/funsor/statuses/{sha}","languages_url":"https://api.github.com/repos/pyro-ppl/funsor/languages","stargazers_url":"https://api.github.com/repos/pyro-ppl/funsor/stargazers","contributors_url":"https://api.github.com/repos/pyro-ppl/funsor/contributors","subscribers_url":"https://api.github.com/repos/pyro-ppl/funsor/subscribers","subscription_url":"https://api.github.com/repos/pyro-ppl/funsor/subscription","commits_url":"https://api.github.com/repos/pyro-ppl/funsor/commits{/sha}","git_commits_url":"https://api.github.com/repos/pyro-ppl/funsor/git/commits{/sha}","comments_url":"https://api.github.com/repos/pyro-ppl/funsor/comments{/number}","issue_comment_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/comments{/number}","contents_url":"https://api.github.com/repos/pyro-ppl/funsor/contents/{+path}","compare_url":"https://api.github.com/repos/pyro-ppl/funsor/compare/{base}...{head}","merges_url":"https://api.github.com/repos/pyro-ppl/funsor/merges","archive_url":"https://api.github.com/repos/pyro-ppl/funsor/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/pyro-ppl/funsor/downloads","issues_url":"https://api.github.com/repos/pyro-ppl/funsor/issues{/number}","pulls_url":"https://api.github.com/repos/pyro-ppl/funsor/pulls{/number}","milestones_url":"https://api.github.com/repos/pyro-ppl/funsor/milestones{/number}","notifications_url":"https://api.github.com/repos/pyro-ppl/funsor/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/pyro-ppl/funsor/labels{/name}","releases_url":"https://api.github.com/repos/pyro-ppl/funsor/releases{/id}","deployments_url":"https://api.github.com/repos/pyro-ppl/funsor/deployments","created_at":"2019-01-30T23:13:39Z","updated_at":"2023-01-03T19:08:54Z","pushed_at":"2022-12-28T19:16:12Z","git_url":"git://github.com/pyro-ppl/funsor.git","ssh_url":"git@github.com:pyro-ppl/funsor.git","clone_url":"https://github.com/pyro-ppl/funsor.git","svn_url":"https://github.com/pyro-ppl/funsor","homepage":"https://funsor.pyro.ai","size":2622,"stargazers_count":209,"watchers_count":209,"language":"Python","has_issues":true,"has_projects":false,"has_downloads":true,"has_wiki":false,"has_pages":false,"has_discussions":false,"forks_count":18,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":89,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["jax","machine-learning","numpy","probabilistic-programming","pyro","pytorch","symbolic"],"visibility":"public","forks":18,"open_issues":89,"watchers":209,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"This issue proposes to replace funsor `Domain` objects with new subscripted types a la Python 3's `typing` module.\r\n\r\nThe goal is to make Funsor more Pythonic and to make funsors act more like Python functions (but with support for pointwise operations). In particular many of our design questions about multiple inputs or outputs could be resolved by \"following Python\". A simple example of more-Pythonic syntax is:\r\n```py\r\n# decorator syntax to read .inputs and .outputs from a type annotation\r\n@to_funsor\r\ndef f(x: Real[3], y: Real[3,3], t: Real) -> Real:\r\n    ...\r\n\r\n# explicitly specify type as Callable[..., ...]\r\ng = to_funsor(lambda x: x.sum(), Callable[[Real[3]], Real)\r\n    ...\r\n\r\nh = f + g  # materialized view of lambda x, y, t: f(x, y, t) + g(x)\r\n```\r\n\r\n## Interface\r\nBecause the Python 3 typing library is moving and not natively inspectable, we should implement a minimal interface for inspection:\r\n\r\n- [x] #352 creating domain types, `Bint[n]`, `Reals[m,n]`\r\n- [x] #352 `isinstance(-, Domain)` (with `Domain = type`)\r\n- [x] #352 `issubclass(-, -)` (by overriding `__subclasscheck__`)\r\n- [x] #354 `typing.get_type_hints()` for funsors\r\n- [ ] `typing.get_origin()`\r\n- [ ] `typing.get_args()`\r\n\r\n## Tasks\r\n- [x] #352 Refactor domains to be typing-compatible type objects: `Bint[n]`, `Real`, `Real[m,n]`, ...\r\n- [x] #356 Generalize `Bint` to nontrivial shape #322  and add an `Array` supertype\r\n- [x] #354 Update interfaces to make use of typing-compatible types (e.g. allow `@function`, `@of_type` to read type hints)\r\n- [x] #357 Cleanup: replace all uses of `reals()` and `bint()` with `Reals[]` and `Bint[]`\r\n- [x] #421 Cleanup: unify op-caching metaclasses\r\n- [x] #422 Support dynamic op creation and registration in `find_domain`\r\n- [x] #423 Add a `Finitary` term for lazy op application\r\n- [x] #430 Promote `LazyTuple` to a subclass of `Funsor`\r\n- [x] #431 Cleanup: automate invocation of `Unary` and `Binary` for ops applied to funsors\r\n- [ ] Replace `Function` with `Finitary` (or merge `Unary` and `Binary` into `Function` as in [the paper](https://arxiv.org/abs/1910.10775));\r\n  and replace `@function` with a dynamic `Op` factory.\r\n- [ ] Support limited (variables but no arithmetic) shape polymorphism in `Array` domains (#214)\r\n  ```py\r\n  @function\r\n  def matmul(x: Reals[\"i\", \"j\"], y: Reals[\"j\", \"k\"]) -> Reals[\"i\", \"k\"]:\r\n      return x @ y\r\n  ```\r\n  This will require a [unification](https://github.com/mrocklin/unification) algorithm in `find_domain()` and substitution.\r\n- [ ] Add type `.__annotations__` to all Ops and refactor `find_domain()`. We may be able to read many of these from gufunc signatures.\r\n- [ ] Add a mypy test stage and ensure the Funsor codebase typechecks.\r\n- [ ] Register `to_funsor` to use either `@function` or `@symbolic` (requires first class `Tuple`s, memoization)?\r\n- [ ] Possibly promote `Funsor` types themselves to subtypes of [Callable](https://docs.python.org/3/library/typing.html#typing.Callable)","reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/351/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/comments/768398706","html_url":"https://github.com/pyro-ppl/funsor/issues/214#issuecomment-768398706","issue_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/214","id":768398706,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM5ODcwNg==","user":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"created_at":"2021-01-27T16:18:01Z","updated_at":"2021-01-27T16:18:01Z","author_association":"MEMBER","body":"@fritzo and I came up with what seems like a nice design in #442.  Inspired by the notation in that PR, we might write the `matmul` example above as\r\n```py\r\n@function\r\ndef matmul(\r\n    x: Array,\r\n    y: Array\r\n) -> Dependent[lambda x, y: Array[x.dtype, (x.shape[0], y.shape[1])]]:\r\n    return x.matmul(y)\r\n```\r\nwhere `Dependent`, like `Fresh` in #442. takes a `lambda` as an argument that takes the domains of arguments `x` and `y` at the time that `matmul` is called and returns the result domain.\r\n\r\nOne question for this approach is whether to allow more specific dependent type annotations for `x` and `y` analogous to the shape variables `a,b,c` above and how useful that would be for shape checking.","reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/comments/768398706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false}},{"id":4256737318,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDI1NjczNzMxOA==","url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events/4256737318","actor":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-01-27T16:18:01Z","performed_via_github_app":null},{"id":4256737323,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQyNTY3MzczMjM=","url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events/4256737323","actor":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-01-27T16:18:01Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/comments/768413445","html_url":"https://github.com/pyro-ppl/funsor/issues/214#issuecomment-768413445","issue_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/214","id":768413445,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODQxMzQ0NQ==","user":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false},"created_at":"2021-01-27T16:40:45Z","updated_at":"2021-01-27T16:40:45Z","author_association":"MEMBER","body":"@eb8680 interesting... I guess we could even enforce constraints, something like\r\n```py\r\ndef assume(constraint, value):\r\n    if not constraint:\r\n        raise TypeError\r\n    return value\r\n\r\n@function\r\ndef matmul(\r\n    x: Dependent[lambda x: assume(isinstance(x, Array) and len(x.shape) == 2, x)],\r\n    y: Dependent[lambda y: assume(isinstance(y, Array) and len(y.shape) == 2, y)],\r\n) -> Dependent[lambda x, y: assume(x.dtype == y.dtype and x.shape[1] == y.shape[0],\r\n                                   Array[x.dtype, (x.shape[0], y.shape[1])])]:\r\n    return x.matmul(y)\r\n```\r\nor with a `Where[...]` type.","reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/comments/768413445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fritzo","id":648532,"node_id":"MDQ6VXNlcjY0ODUzMg==","avatar_url":"https://avatars.githubusercontent.com/u/648532?v=4","gravatar_id":"","url":"https://api.github.com/users/fritzo","html_url":"https://github.com/fritzo","followers_url":"https://api.github.com/users/fritzo/followers","following_url":"https://api.github.com/users/fritzo/following{/other_user}","gists_url":"https://api.github.com/users/fritzo/gists{/gist_id}","starred_url":"https://api.github.com/users/fritzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fritzo/subscriptions","organizations_url":"https://api.github.com/users/fritzo/orgs","repos_url":"https://api.github.com/users/fritzo/repos","events_url":"https://api.github.com/users/fritzo/events{/privacy}","received_events_url":"https://api.github.com/users/fritzo/received_events","type":"User","site_admin":false}},{"id":4256856232,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDI1Njg1NjIzMg==","url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events/4256856232","actor":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-01-27T16:40:45Z","performed_via_github_app":null},{"id":4256856236,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQyNTY4NTYyMzY=","url":"https://api.github.com/repos/pyro-ppl/funsor/issues/events/4256856236","actor":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-01-27T16:40:45Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/comments/768451102","html_url":"https://github.com/pyro-ppl/funsor/issues/214#issuecomment-768451102","issue_url":"https://api.github.com/repos/pyro-ppl/funsor/issues/214","id":768451102,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODQ1MTEwMg==","user":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false},"created_at":"2021-01-27T17:34:48Z","updated_at":"2021-02-19T22:43:02Z","author_association":"MEMBER","body":"I like the idea of having `assume` or `Where`, where `Where` takes a base type and a dependent predicate. We could even allow their use simultaneously.\r\n\r\nA downside of this notation is that it quickly becomes verbose when specifying complicated shape constraints.  Maybe it would still be useful to have a notation like the original post specifically for `Array` that desugars to `Dependent`/`Where`. This also has the virtue of nudging users away from specifying shape arithmetic constraints which are harder to get right or compose.\r\n\r\nFor example, we could write a batched `matmul` as:\r\n```py\r\n@function\r\ndef matmul(\r\n    x: Array['real', (..., \"a\", \"b\")],\r\n    y: Array['real', (..., \"b\", \"c\")],\r\n) -> Array['real', (..., \"a\", \"c\")]:\r\n    return x.matmul(y)\r\n```\r\nwhich might desugar to\r\n```py\r\n@function\r\ndef matmul(\r\n    x: Where[Dependent[lambda x: Array[x.dtype, x.shape]], lambda x: len(x.shape) >= 2],\r\n    y: Where[Dependent[lambda y: Array[y.dtype, y.shape]], lambda y: len(y.shape) >= 2],\r\n) -> Where[Dependent[lambda x, y: Array['real', broadcast_shape(x.shape[:-2], y.shape[:-2]) + (x.shape[-2], y.shape[-1])]], \r\n           lambda x, y: is_broadcastable(x.shape[:-2], y.shape[:-2]) and x.shape[-1] == y.shape[-2] and x.dtype == y.dtype]:  # generated from shape variables\r\n    return x.matmul(y)\r\n```\r\nOne implication of such an expressive design is that only ground types could be supported in inputs and outputs of actual funsors e.g. we couldn't allow the construction of `funsor.Variable(name, Dependent[...])`.\r\n\r\nAnother set of operations that pose a challenge for this design are those where shapes depend on an argument *value*, even when that value is guaranteed to be an integer or boolean literal. In #442, the function in `Fresh` takes domains as arguments rather than values.  The simplest one is `.sum(dim=dim)`:\r\n```py\r\n@function\r\ndef sum_one_dim(\r\n    x: Array,\r\n    dim: int\r\n) -> Dependent[lambda x, dim: Array[x.dtype, x.shape[:dim] + x.shape[dim+1:]]]:\r\n    return x.sum(dim)\r\n```\r\nFor this to work as written, `lambda x, dim: ...` would have to take the *value* of `dim`, not its type `int`. This forces us to choose a consistent behavior for the other argument `x`: \r\n1. Should this `lambda` take the *value* of `x` by default, rather than its `.output`? This does not seem ideal if `x` could be a Funsor\r\n2. Should we require a special notation indicating that the return type of `sum_one_dim` depends on the *value* of `dim` (e.g. `dim: Value[int]` instead of `dim: int`)?\r\n3. Should we have a different annotation `ValueDependent` for types that depend on values, e.g. the return type of `sum_one_dim`?\r\n4. Alternatively, should we simply disallow value-dependent types and say that `sum_one_dim` should either use a less specific signature or be written as a Funsor term?\r\n\r\nExample of 2:\r\n```py\r\n@function\r\ndef sum_one_dim(\r\n    x: Array,\r\n    dim: Value[int]\r\n) -> Dependent[lambda x, dim: Array[x.dtype, x.shape[:dim] + x.shape[dim+1:]]]:\r\n    return x.sum(dim)\r\n```","reactions":{"url":"https://api.github.com/repos/pyro-ppl/funsor/issues/comments/768451102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"eb8680","id":2032320,"node_id":"MDQ6VXNlcjIwMzIzMjA=","avatar_url":"https://avatars.githubusercontent.com/u/2032320?v=4","gravatar_id":"","url":"https://api.github.com/users/eb8680","html_url":"https://github.com/eb8680","followers_url":"https://api.github.com/users/eb8680/followers","following_url":"https://api.github.com/users/eb8680/following{/other_user}","gists_url":"https://api.github.com/users/eb8680/gists{/gist_id}","starred_url":"https://api.github.com/users/eb8680/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eb8680/subscriptions","organizations_url":"https://api.github.com/users/eb8680/orgs","repos_url":"https://api.github.com/users/eb8680/repos","events_url":"https://api.github.com/users/eb8680/events{/privacy}","received_events_url":"https://api.github.com/users/eb8680/received_events","type":"User","site_admin":false}}]