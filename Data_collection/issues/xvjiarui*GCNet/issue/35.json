{"url":"https://api.github.com/repos/xvjiarui/GCNet/issues/35","repository_url":"https://api.github.com/repos/xvjiarui/GCNet","labels_url":"https://api.github.com/repos/xvjiarui/GCNet/issues/35/labels{/name}","comments_url":"https://api.github.com/repos/xvjiarui/GCNet/issues/35/comments","events_url":"https://api.github.com/repos/xvjiarui/GCNet/issues/35/events","html_url":"https://github.com/xvjiarui/GCNet/issues/35","id":573017109,"node_id":"MDU6SXNzdWU1NzMwMTcxMDk=","number":35,"title":"Simplified NL","user":{"login":"Shiro-LK","id":26505641,"node_id":"MDQ6VXNlcjI2NTA1NjQx","avatar_url":"https://avatars.githubusercontent.com/u/26505641?v=4","gravatar_id":"","url":"https://api.github.com/users/Shiro-LK","html_url":"https://github.com/Shiro-LK","followers_url":"https://api.github.com/users/Shiro-LK/followers","following_url":"https://api.github.com/users/Shiro-LK/following{/other_user}","gists_url":"https://api.github.com/users/Shiro-LK/gists{/gist_id}","starred_url":"https://api.github.com/users/Shiro-LK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shiro-LK/subscriptions","organizations_url":"https://api.github.com/users/Shiro-LK/orgs","repos_url":"https://api.github.com/users/Shiro-LK/repos","events_url":"https://api.github.com/users/Shiro-LK/events{/privacy}","received_events_url":"https://api.github.com/users/Shiro-LK/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-02-28T21:34:00Z","updated_at":"2020-03-05T17:16:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nThank you for your interesting papers and sharing the code.\r\nI have a question about the paper, in particular the simplified NL module.\r\n\r\nIf I understand well, you are using the self attention in order to get some features which will permits you , then to weighted the different channel of your input images right ?\r\n\r\nSo if I want to code it from your code it will give :\r\n```\r\n\r\ncontext = self.spatial_pool(x) # dim context: NxCx1x1\r\noutput = conv2D(context) # conv1x1 with C input channels and C output channels , dim output NxCx1x1 \r\n\r\nreturn x + output \r\n```\r\nis that right ?\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/xvjiarui/GCNet/issues/35/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/xvjiarui/GCNet/issues/35/timeline","performed_via_github_app":null,"state_reason":null}