{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/176","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/176/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/176/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/176/events","html_url":"https://github.com/onnx/onnxmltools/issues/176","id":380950468,"node_id":"MDU6SXNzdWUzODA5NTA0Njg=","number":176,"title":"Add support for sklearn.compose.ColumnTransformer","user":{"login":"little-eyes","id":1495542,"node_id":"MDQ6VXNlcjE0OTU1NDI=","avatar_url":"https://avatars.githubusercontent.com/u/1495542?v=4","gravatar_id":"","url":"https://api.github.com/users/little-eyes","html_url":"https://github.com/little-eyes","followers_url":"https://api.github.com/users/little-eyes/followers","following_url":"https://api.github.com/users/little-eyes/following{/other_user}","gists_url":"https://api.github.com/users/little-eyes/gists{/gist_id}","starred_url":"https://api.github.com/users/little-eyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/little-eyes/subscriptions","organizations_url":"https://api.github.com/users/little-eyes/orgs","repos_url":"https://api.github.com/users/little-eyes/repos","events_url":"https://api.github.com/users/little-eyes/events{/privacy}","received_events_url":"https://api.github.com/users/little-eyes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-11-15T00:44:20Z","updated_at":"2019-01-04T18:09:27Z","closed_at":"2019-01-04T18:09:27Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI am running into a scenario that I need to transform a few columns with different ways and they have different types. I saw scikit-learn has a new experimental API `sklearn.compose.ColumnTransformer`, which could help me easily wire up my transforms on different columns. So I wonder if onnxmltools will have the plan to include this. Many operators are aleady exists in onnxruntime.\r\n\r\nAn exmaple:\r\n\r\n```python\r\nfrom sklearn.pipeline import Pipeline\r\nfrom sklearn.datasets import fetch_covtype\r\nfrom sklearn.preprocessing import *\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.compose import ColumnTransformer\r\nfrom sklearn.impute import SimpleImputer\r\n\r\nimport lightgbm as lgb\r\nimport pandas as pd\r\n\r\nfrom onnxmltools import convert_sklearn\r\nfrom onnxmltools.convert.common.data_types import FloatTensorType, StringTensorType\r\n\r\ntitanic_url = ('https://raw.githubusercontent.com/amueller/'\r\n               'scipy-2017-sklearn/091d371/notebooks/datasets/titanic3.csv')\r\ndf = pd.read_csv(titanic_url)\r\ndf.head()\r\n\r\ndata = df[[\"age\", \"fare\", \"embarked\", \"sex\", \"pclass\", \"survived\"]]\r\nnumeric_features = ['age', 'fare']\r\nnumeric_transformer = Pipeline(steps=[\r\n    ('imputer', SimpleImputer(strategy='median')),\r\n    ('scaler', StandardScaler())])\r\n\r\ncategorical_features = ['embarked', 'sex', 'pclass']\r\ncategorical_transformer = Pipeline(steps=[\r\n    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\r\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))])\r\n\r\npreprocessor = ColumnTransformer(\r\n    transformers=[\r\n        ('num', numeric_transformer, numeric_features),\r\n        ('cat', categorical_transformer, categorical_features)])\r\n\r\nclf = Pipeline(steps=[\r\n    ('precprocessor', preprocessor),\r\n    ('classifier', lgb.LGBMClassifier(objective=\"binary\"))])\r\n\r\nX = data.drop('survived', axis=1)\r\ny = data['survived']\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\r\n\r\nclf.fit(X_train, y_train)\r\ninputs = [\r\n    (\"input_string\", StringTensorType([1,2])),\r\n    (\"input_numerical\", FloatTensorType([1, 3]))\r\n]\r\nmodel_onnx = convert_sklearn(clf, 'pipeline', inputs)\r\n```\r\n\r\nCurrently, it throws out error: ValueError: No proper operator name found for '<class 'sklearn.compose._column_transformer.ColumnTransformer'>'","closed_by":{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/176/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/176/timeline","performed_via_github_app":null,"state_reason":"completed"}