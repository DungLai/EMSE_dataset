{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/598","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/598/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/598/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/598/events","html_url":"https://github.com/onnx/onnxmltools/issues/598","id":1469022036,"node_id":"I_kwDOB0J-H85Xj39U","number":598,"title":"convert_xgboost fails with JSONDecodeError","user":{"login":"hombit","id":1784493,"node_id":"MDQ6VXNlcjE3ODQ0OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1784493?v=4","gravatar_id":"","url":"https://api.github.com/users/hombit","html_url":"https://github.com/hombit","followers_url":"https://api.github.com/users/hombit/followers","following_url":"https://api.github.com/users/hombit/following{/other_user}","gists_url":"https://api.github.com/users/hombit/gists{/gist_id}","starred_url":"https://api.github.com/users/hombit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hombit/subscriptions","organizations_url":"https://api.github.com/users/hombit/orgs","repos_url":"https://api.github.com/users/hombit/repos","events_url":"https://api.github.com/users/hombit/events{/privacy}","received_events_url":"https://api.github.com/users/hombit/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-11-30T04:14:14Z","updated_at":"2022-11-30T04:14:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Env\r\n- Python 3.9.7\r\n- xgboost 1.5.2\r\n- onnxmltools 1.11.0\r\n\r\n### Code to reproduce\r\n```python\r\nimport xgboost\r\nfrom onnxmltools.convert import convert_xgboost\r\nfrom onnxmltools.convert.common.data_types import FloatTensorType\r\n\r\nmodel = xgboost.XGBClassifier()\r\nmodel.load_model(\"xgb.ubj\")\r\nconvert_xgboost(model, initial_types=[('input', FloatTensorType(shape=[None, None]))])\r\n```\r\n\r\n### Data\r\nxgb.ubj: https://drive.google.com/file/d/1KaFC-AFBluTO1CJLD1XAFZEQrUnRpkAx/view?usp=share_link\r\n\r\n### Error\r\n`JSONDecodeError: Expecting value: line 138 column 75 (char 12602)`\r\n\r\n### Full Traceback\r\n<details>\r\n  <summary>Expand</summary>\r\n```\r\n~/.conda/envs/env/lib/python3.9/site-packages/onnxmltools/convert/main.py in convert_xgboost(*args, **kwargs)\r\n    175\r\n    176     from .xgboost.convert import convert\r\n--> 177     return convert(*args, **kwargs)\r\n    178\r\n    179\r\n\r\n~/.conda/envs/env/lib/python3.9/site-packages/onnxmltools/convert/xgboost/convert.py in convert(model, name, initial_types, doc_string, target_opset, targeted_onnx, custom_conversion_functions, custom_shape_calculators)\r\n     41     topology = parse_xgboost(model, initial_types, target_opset, custom_conversion_functions, custom_shape_calculators)\r\n     42     topology.compile()\r\n---> 43     onnx_model = convert_topology(topology, name, doc_string, target_opset, targeted_onnx)\r\n     44     return onnx_model\r\n\r\n~/.conda/envs/env/lib/python3.9/site-packages/onnxconverter_common/topology.py in convert_topology(topology, model_name, doc_string, target_opset, targeted_onnx, channel_first_inputs)\r\n    774         else:\r\n    775             # Convert the selected operator into some ONNX objects and save them into the container\r\n--> 776             get_converter(operator.type)(scope, operator, container)\r\n    777\r\n    778     # When calling ModelComponentContainer's add_initializer(...), nothing is added into the input list.\r\n\r\n~/.conda/envs/env/lib/python3.9/site-packages/onnxmltools/convert/xgboost/operator_converters/XGBoost.py in convert_xgboost(scope, operator, container)\r\n    299         cls = XGBRegressorConverter\r\n    300     cls.validate(xgb_node)\r\n--> 301     cls.convert(scope, operator, container)\r\n    302\r\n    303\r\n\r\n~/.conda/envs/env/lib/python3.9/site-packages/onnxmltools/convert/xgboost/operator_converters/XGBoost.py in convert(scope, operator, container)\r\n    224         inputs = operator.inputs\r\n    225\r\n--> 226         objective, base_score, js_trees = XGBConverter.common_members(xgb_node, inputs)\r\n    227\r\n    228         params = XGBConverter.get_xgb_params(xgb_node)\r\n\r\n~/.conda/envs/env/lib/python3.9/site-packages/onnxmltools/convert/xgboost/operator_converters/XGBoost.py in common_members(xgb_node, inputs)\r\n     40         # XGBoost 0.7 was the first version released with it.\r\n     41         js_tree_list = booster.get_dump(with_stats=True, dump_format='json')\r\n---> 42         js_trees = [json.loads(s) for s in js_tree_list]\r\n     43         return objective, base_score, js_trees\r\n     44\r\n\r\n~/.conda/envs/env/lib/python3.9/site-packages/onnxmltools/convert/xgboost/operator_converters/XGBoost.py in <listcomp>(.0)\r\n     40         # XGBoost 0.7 was the first version released with it.\r\n     41         js_tree_list = booster.get_dump(with_stats=True, dump_format='json')\r\n---> 42         js_trees = [json.loads(s) for s in js_tree_list]\r\n     43         return objective, base_score, js_trees\r\n     44\r\n\r\n~/.conda/envs/env/lib/python3.9/json/__init__.py in loads(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\r\n    344             parse_int is None and parse_float is None and\r\n    345             parse_constant is None and object_pairs_hook is None and not kw):\r\n--> 346         return _default_decoder.decode(s)\r\n    347     if cls is None:\r\n    348         cls = JSONDecoder\r\n\r\n~/.conda/envs/env/lib/python3.9/json/decoder.py in decode(self, s, _w)\r\n    335\r\n    336         \"\"\"\r\n--> 337         obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n    338         end = _w(s, end).end()\r\n    339         if end != len(s):\r\n\r\n~/.conda/envs/env/lib/python3.9/json/decoder.py in raw_decode(self, s, idx)\r\n    353             obj, end = self.scan_once(s, idx)\r\n    354         except StopIteration as err:\r\n--> 355             raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n    356         return obj, end\r\n\r\nJSONDecodeError: Expecting value: line 138 column 75 (char 12602)\r\n```\r\n</details>","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/598/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/598/timeline","performed_via_github_app":null,"state_reason":null}