{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/469","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/469/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/469/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/469/events","html_url":"https://github.com/onnx/onnxmltools/issues/469","id":920436927,"node_id":"MDU6SXNzdWU5MjA0MzY5Mjc=","number":469,"title":"Converting multiple inputs XGBClassifier model ","user":{"login":"DvirDukhan","id":12258836,"node_id":"MDQ6VXNlcjEyMjU4ODM2","avatar_url":"https://avatars.githubusercontent.com/u/12258836?v=4","gravatar_id":"","url":"https://api.github.com/users/DvirDukhan","html_url":"https://github.com/DvirDukhan","followers_url":"https://api.github.com/users/DvirDukhan/followers","following_url":"https://api.github.com/users/DvirDukhan/following{/other_user}","gists_url":"https://api.github.com/users/DvirDukhan/gists{/gist_id}","starred_url":"https://api.github.com/users/DvirDukhan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DvirDukhan/subscriptions","organizations_url":"https://api.github.com/users/DvirDukhan/orgs","repos_url":"https://api.github.com/users/DvirDukhan/repos","events_url":"https://api.github.com/users/DvirDukhan/events{/privacy}","received_events_url":"https://api.github.com/users/DvirDukhan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-06-14T13:52:55Z","updated_at":"2022-04-12T13:46:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"hi\r\nI'm trying to convert an XGBClassifier with multiple inputs to onnx but getting an error with respect to the number of inputs:\r\n`For operator XGBClassifier (type: XGBClassifier), at most 1 input(s) is(are) supported`\r\nI saw an open issue with respect to XGBoost regressor but it seems inactive https://github.com/onnx/onnxmltools/issues/410 so I'm not sure if it is something I missed.\r\n\r\n### Dataset:\r\n[Kaggle credit card fraud data set](https://www.kaggle.com/mlg-ulb/creditcardfraud )\r\n\r\n### How to reproduce:\r\n```python\r\nimport pandas as pd\r\nimport onnxmltools.convert.common.data_types\r\nfrom numpy import dtype\r\nfrom xgboost import XGBClassifier\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.metrics import accuracy_score\r\nfrom onnxconverter_common.data_types import FloatTensorType, Int64TensorType\r\nfrom onnxmltools.convert import convert_xgboost\r\n\r\ndef dtype_to_onnxType(dt):\r\n    if (dt==dtype('float64')):\r\n        return FloatTensorType((1,1))\r\n    if (dt == dtype('int64')):\r\n        return Int64TensorType((1,1))\r\n\r\n# read data\r\ndf = pd.read_csv('creditcard.csv')\r\nY = df['Class']\r\nX = df.drop(['Class'], axis=1)\r\n\r\n# split data into train and test sets\r\nseed = 7\r\ntest_size = 0.33\r\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=test_size, random_state=seed)\r\n\r\n# train_model\r\nmodel = XGBClassifier()\r\nmodel.fit(X_train, y_train)\r\n\r\n# validate\r\ny_pred = model.predict(X_test)\r\npredictions = [round(value) for value in y_pred]\r\naccuracy = accuracy_score(y_test, predictions)\r\nprint(\"Accuracy: %.2f%%\" % (accuracy * 100.0))\r\n\r\n# convert\r\nschema= [(key, dtype_to_onnxType(value)) for key, value in X.dtypes.to_dict().items()]\r\nmodel_onnx = convert_xgboost(\r\n    model, initial_types = schema)\r\n\r\n```\r\n\r\n### Error\r\n\r\n```\r\nRuntimeError: For operator XGBClassifier (type: XGBClassifier), at most 1 input(s) is(are) supported but we got 30 output(s) which are ['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10', 'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20', 'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount']\r\n```\r\n\r\nfull stack trace:\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-4-0f6a7c8cd6fc> in <module>\r\n     35 \r\n     36 schema= [(key, dtype_to_onnxType(value)) for key, value in X.dtypes.to_dict().items()]\r\n---> 37 model_onnx = convert_xgboost(\r\n     38     model, initial_types = schema)\r\n\r\n~/.local/lib/python3.8/site-packages/onnxmltools/convert/main.py in convert_xgboost(*args, **kwargs)\r\n     83 \r\n     84     from .xgboost.convert import convert\r\n---> 85     return convert(*args, **kwargs)\r\n     86 \r\n     87 \r\n\r\n~/.local/lib/python3.8/site-packages/onnxmltools/convert/xgboost/convert.py in convert(model, name, initial_types, doc_string, target_opset, targeted_onnx, custom_conversion_functions, custom_shape_calculators)\r\n     44     target_opset = target_opset if target_opset else get_maximum_opset_supported()\r\n     45     topology = parse_xgboost(model, initial_types, target_opset, custom_conversion_functions, custom_shape_calculators)\r\n---> 46     topology.compile()\r\n     47     onnx_model = convert_topology(topology, name, doc_string, target_opset, targeted_onnx)\r\n     48     return onnx_model\r\n\r\n~/.local/lib/python3.8/site-packages/onnxconverter_common/topology.py in compile(self)\r\n    676         self._resolve_duplicates()\r\n    677         self._fix_shapes()\r\n--> 678         self._infer_all_types()\r\n    679         self._check_structure()\r\n    680 \r\n\r\n~/.local/lib/python3.8/site-packages/onnxconverter_common/topology.py in _infer_all_types(self)\r\n    551                 pass  # in Keras converter, the shape calculator can be optional.\r\n    552             else:\r\n--> 553                 operator.infer_types()\r\n    554 \r\n    555     def _resolve_duplicates(self):\r\n\r\n~/.local/lib/python3.8/site-packages/onnxconverter_common/topology.py in infer_types(self)\r\n    105     def infer_types(self):\r\n    106         # Invoke a core inference function\r\n--> 107         get_shape_calculator(self.type)(self)\r\n    108 \r\n    109 \r\n\r\n~/.local/lib/python3.8/site-packages/onnxmltools/convert/xgboost/shape_calculators/Classifier.py in calculate_xgboost_classifier_output_shapes(operator)\r\n     16 \r\n     17 def calculate_xgboost_classifier_output_shapes(operator):\r\n---> 18     check_input_and_output_numbers(operator, input_count_range=1, output_count_range=2)\r\n     19     check_input_and_output_types(operator, good_input_types=[FloatTensorType, Int64TensorType])\r\n     20     N = operator.inputs[0].type.shape[0]\r\n\r\n~/.local/lib/python3.8/site-packages/onnxconverter_common/utils.py in check_input_and_output_numbers(operator, input_count_range, output_count_range)\r\n    281 \r\n    282     if max_input_count is not None and len(operator.inputs) > max_input_count:\r\n--> 283         raise RuntimeError(\r\n    284             'For operator %s (type: %s), at most %s input(s) is(are) supported but we got %s output(s) which are %s'\r\n    285             % (operator.full_name, operator.type, max_input_count, len(operator.inputs), operator.input_full_names))\r\n\r\nRuntimeError: For operator XGBClassifier (type: XGBClassifier), at most 1 input(s) is(are) supported but we got 30 output(s) which are ['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10', 'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20', 'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount']\r\n```\r\n\r\nThanks for the help!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/469/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/469/timeline","performed_via_github_app":null,"state_reason":null}