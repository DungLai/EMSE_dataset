{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/511","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/511/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/511/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/511/events","html_url":"https://github.com/onnx/onnxmltools/issues/511","id":1032317319,"node_id":"I_kwDOB0J-H849h-mH","number":511,"title":"wrong prediction result after convertion","user":{"login":"mayuanyang","id":3387099,"node_id":"MDQ6VXNlcjMzODcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/3387099?v=4","gravatar_id":"","url":"https://api.github.com/users/mayuanyang","html_url":"https://github.com/mayuanyang","followers_url":"https://api.github.com/users/mayuanyang/followers","following_url":"https://api.github.com/users/mayuanyang/following{/other_user}","gists_url":"https://api.github.com/users/mayuanyang/gists{/gist_id}","starred_url":"https://api.github.com/users/mayuanyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayuanyang/subscriptions","organizations_url":"https://api.github.com/users/mayuanyang/orgs","repos_url":"https://api.github.com/users/mayuanyang/repos","events_url":"https://api.github.com/users/mayuanyang/events{/privacy}","received_events_url":"https://api.github.com/users/mayuanyang/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-10-21T10:21:05Z","updated_at":"2021-10-27T23:38:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Step 1 - Training\r\n```\r\nfrom numpy import asarray\r\nfrom xgboost import XGBRegressor\r\nfrom sklearn.model_selection import cross_val_score\r\nfrom sklearn.model_selection import RepeatedKFold\r\n\r\nmodel =  XGBRegressor(n_estimators=200, max_depth=7, eta=0.01, subsample=0.7, colsample_bytree=0.8)\r\n# define model evaluation method\r\ncv = RepeatedKFold(n_splits=10, n_repeats=3, random_state=1)\r\n# evaluate model\r\nscores = cross_val_score(model, train_features, train_labels, scoring='neg_mean_absolute_error', cv=cv, n_jobs=-1)\r\nprint('Mean MAE: %.3f (%.3f)' % (scores.mean(), scores.std()) )\r\n```\r\n\r\n### Step 2 - Prediction\r\n```\r\nxg_predict_model = XGBRegressor(n_estimators=200, max_depth=7, eta=0.01, subsample=0.7, colsample_bytree=0.8)\r\n# fit model\r\nxg_predict_model.fit(train_features, train_labels)\r\n# make a prediction\r\nxg_test_predicted = xg_predict_model.predict(test_features)\r\n```\r\n\r\n### Step 3 - Convertion\r\n```\r\nfrom onnxmltools.convert.common.data_types import FloatTensorType\r\nfrom onnxmltools.convert import convert_xgboost\r\nfrom onnxconverter_common.onnx_ex import DEFAULT_OPSET_NUMBER\r\nfrom onnx.defs import onnx_opset_version\r\nimport onnxruntime as rt\r\nimport numpy\r\nimport onnxmltools\r\n\r\nTARGET_OPSET = min(DEFAULT_OPSET_NUMBER, onnx_opset_version())\r\nxg_export_model = XGBRegressor(n_estimators=200, max_depth=7, eta=0.01, subsample=0.7, colsample_bytree=0.8)\r\n# fit model\r\nxg_export_model.fit(train_features, train_labels)\r\ninitial_type = [('float_input', FloatTensorType([None, train_features.shape[1]]))]\r\nonx = convert_xgboost(xg_export_model, initial_types=initial_type, target_opset=TARGET_OPSET)\r\nonnxmltools.utils.save_model(onx, 'better_model.onnx')\r\n```\r\n\r\n### Step 4 - Use onnx model to predict the same data\r\n```\r\nsess = rt.InferenceSession(onx.SerializeToString())\r\ninput_name = sess.get_inputs()[0].name\r\nlabel_name = sess.get_outputs()[0].name\r\npred_onx = sess.run(\r\n    [label_name], {input_name: test_features.to_numpy().astype(numpy.float32)})[0]\r\n```\r\n\r\nI am getting different result between Step 2 and Step 4, any thoughts?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/511/timeline","performed_via_github_app":null,"state_reason":null}