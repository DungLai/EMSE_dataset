{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/129","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/129/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/129/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/129/events","html_url":"https://github.com/onnx/onnxmltools/issues/129","id":351692687,"node_id":"MDU6SXNzdWUzNTE2OTI2ODc=","number":129,"title":"MaxPool and AveragePool conversion doesn't need explicit Pad with ONNX 1.2","user":{"login":"tracysh","id":42477615,"node_id":"MDQ6VXNlcjQyNDc3NjE1","avatar_url":"https://avatars.githubusercontent.com/u/42477615?v=4","gravatar_id":"","url":"https://api.github.com/users/tracysh","html_url":"https://github.com/tracysh","followers_url":"https://api.github.com/users/tracysh/followers","following_url":"https://api.github.com/users/tracysh/following{/other_user}","gists_url":"https://api.github.com/users/tracysh/gists{/gist_id}","starred_url":"https://api.github.com/users/tracysh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tracysh/subscriptions","organizations_url":"https://api.github.com/users/tracysh/orgs","repos_url":"https://api.github.com/users/tracysh/repos","events_url":"https://api.github.com/users/tracysh/events{/privacy}","received_events_url":"https://api.github.com/users/tracysh/received_events","type":"User","site_admin":false},"labels":[{"id":839509668,"node_id":"MDU6TGFiZWw4Mzk1MDk2Njg=","url":"https://api.github.com/repos/onnx/onnxmltools/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-08-17T18:19:04Z","updated_at":"2018-08-17T19:50:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"As discussed in internal email, the CoreML converter is creating Pad->MaxPool sequences where the Pad node is not required. These were observed when converting squeezenet.mlmodel.\r\n\r\nI pasted the two observed sequences below. The first generated a no-op Pad operator where the input tensor was already even-aligned. The second can fold the padding into the pool operators, possibly with AveragePool also needing count_include_pad to get the same result.\r\n\r\n  node {\r\n    input: \"conv1\"\r\n    output: \"legacy_padded_tensor\"\r\n    name: \"Pad\"\r\n    op_type: \"Pad\"\r\n    attribute {\r\n      name: \"pads\"\r\n      ints: 0\r\n      ints: 0\r\n      ints: 0\r\n      ints: 0\r\n      ints: 0\r\n      ints: 0\r\n      ints: 0\r\n      ints: 0\r\n      type: INTS\r\n    }\r\n    attribute {\r\n      name: \"value\"\r\n      f: -3.40282347e+38\r\n      type: FLOAT\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"legacy_padded_tensor\"\r\n    output: \"pool1\"\r\n    name: \"pooling\"\r\n    op_type: \"MaxPool\"\r\n    attribute {\r\n      name: \"auto_pad\"\r\n      s: \"VALID\"\r\n      type: STRING\r\n    }\r\n    attribute {\r\n      name: \"kernel_shape\"\r\n      ints: 3\r\n      ints: 3\r\n      type: INTS\r\n    }\r\n    attribute {\r\n      name: \"strides\"\r\n      ints: 2\r\n      ints: 2\r\n      type: INTS\r\n    }\r\n    domain: \"\"\r\n  }\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/129/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/129/timeline","performed_via_github_app":null,"state_reason":null}