{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/448","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/448/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/448/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/448/events","html_url":"https://github.com/onnx/onnxmltools/issues/448","id":811559669,"node_id":"MDU6SXNzdWU4MTE1NTk2Njk=","number":448,"title":"xgboost prediction doesn't match","user":{"login":"tmunemoto","id":2957362,"node_id":"MDQ6VXNlcjI5NTczNjI=","avatar_url":"https://avatars.githubusercontent.com/u/2957362?v=4","gravatar_id":"","url":"https://api.github.com/users/tmunemoto","html_url":"https://github.com/tmunemoto","followers_url":"https://api.github.com/users/tmunemoto/followers","following_url":"https://api.github.com/users/tmunemoto/following{/other_user}","gists_url":"https://api.github.com/users/tmunemoto/gists{/gist_id}","starred_url":"https://api.github.com/users/tmunemoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmunemoto/subscriptions","organizations_url":"https://api.github.com/users/tmunemoto/orgs","repos_url":"https://api.github.com/users/tmunemoto/repos","events_url":"https://api.github.com/users/tmunemoto/events{/privacy}","received_events_url":"https://api.github.com/users/tmunemoto/received_events","type":"User","site_admin":false},"labels":[{"id":839509663,"node_id":"MDU6TGFiZWw4Mzk1MDk2NjM=","url":"https://api.github.com/repos/onnx/onnxmltools/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-18T23:42:13Z","updated_at":"2021-08-23T12:14:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI ran into an issue with xgboost model conversion and want to post the symptom here. It happened when I attempted to convert a model trained on features stored as pandas DataFrame. The code below reproduces the issue.\r\n```\r\nimport numpy as np\r\nfrom onnxmltools.convert import convert_xgboost\r\nfrom onnxmltools.convert.common.data_types import FloatTensorType\r\nimport onnxruntime as rt\r\nimport pandas as pd\r\nfrom xgboost import XGBClassifier\r\n\r\ndef test_convert_xgboost(columns):\r\n    \r\n    num_features = len(columns)\r\n    nrows = 50\r\n    nrows_test = 10\r\n    model_path = 'test_xgb.onnx'\r\n\r\n    # prepare data\r\n    X = np.random.random((nrows, num_features))\r\n    X = pd.DataFrame(X, columns=columns)\r\n    X_test = np.random.random((nrows_test, num_features))\r\n    y = np.zeros(nrows)\r\n    y[:nrows//2] = 1\r\n\r\n    # train\r\n    xgb = XGBClassifier(use_label_encoder=False)\r\n    xgb.fit(X, y)\r\n    \r\n    # convert to onnx\r\n    onx = convert_xgboost(xgb, \r\n                          initial_types=[('feature_input', \r\n                                          FloatTensorType([None, num_features]))])\r\n    with open(model_path, 'wb') as f:\r\n        f.write(onx.SerializeToString())\r\n\r\n    # test predictions\r\n    sess = rt.InferenceSession(model_path)\r\n    input_name = sess.get_inputs()[0].name\r\n    prob_name = sess.get_outputs()[1].name\r\n\r\n    pred_onx = sess.run([prob_name], {input_name: X_test.astype(np.float32)})[0]\r\n    pred = xgb.predict_proba(X_test)\r\n    \r\n    assert np.allclose(pred_onx, pred)\r\n\r\ntest_convert_xgboost(['f0','f1','f2','f3','f4']) # pass\r\ntest_convert_xgboost(['f1','f2','f3','f4','f5']) # fail because f0 is skipped\r\ntest_convert_xgboost(['f0','f1','f2','f4','f3']) # fail because f3 and f4 are swapped\r\n```\r\nAt a glance, the culprit seems the way `convert_xgboost` (or more specifically `XGBConverter` class) translates column names to feature ids. I can't imagine anyone jumbling up columns as the above examples. However, if anyone inadvertently does, this issue could be cumbersome to debug because it doesn't raise any exceptions (as a consequence, this could be easily misunderstood as issues with general model performance).\r\n\r\nenvironment\r\nmacOS 10.14.6\r\nPython 3.8.6\r\nonnxmltools 1.7.0\r\nonnxruntime 1.6.0\r\nxgboost 1.3.1\r\npandas 1.2.0\r\nnumpy 1.18.5\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/448/timeline","performed_via_github_app":null,"state_reason":null}