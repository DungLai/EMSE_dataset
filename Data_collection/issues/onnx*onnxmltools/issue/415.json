{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/415","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/415/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/415/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/415/events","html_url":"https://github.com/onnx/onnxmltools/issues/415","id":679309717,"node_id":"MDU6SXNzdWU2NzkzMDk3MTc=","number":415,"title":"ONNX model for RandomForestClassifier with a single node returns the wrong label","user":{"login":"interesaaat","id":1534199,"node_id":"MDQ6VXNlcjE1MzQxOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1534199?v=4","gravatar_id":"","url":"https://api.github.com/users/interesaaat","html_url":"https://github.com/interesaaat","followers_url":"https://api.github.com/users/interesaaat/followers","following_url":"https://api.github.com/users/interesaaat/following{/other_user}","gists_url":"https://api.github.com/users/interesaaat/gists{/gist_id}","starred_url":"https://api.github.com/users/interesaaat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/interesaaat/subscriptions","organizations_url":"https://api.github.com/users/interesaaat/orgs","repos_url":"https://api.github.com/users/interesaaat/repos","events_url":"https://api.github.com/users/interesaaat/events{/privacy}","received_events_url":"https://api.github.com/users/interesaaat/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-14T17:51:03Z","updated_at":"2020-08-14T17:51:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"To reproduce:\r\n```\r\nimport numpy as np\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom onnxconverter_common.data_types import FloatTensorType\r\nfrom onnxmltools.convert \r\n\r\nnp.random.seed(0)\r\nX = np.random.rand(1, 1)\r\nX = np.array(X, dtype=np.float32)\r\ny = np.random.randint(1, size=1)\r\nmodel = RandomForestClassifier(n_estimators=5).fit(X, y)\r\nmodel.fit(X, y)\r\n\r\nonnx_ml_model = convert_sklearn(\r\n            model, initial_types=[(\"input\", FloatTensorType([X.shape[0], X.shape[1]]))], target_opset=11)\r\n)\r\n\r\n# Get the predictions for the ONNX-ML model\r\nsession = ort.InferenceSession(onnx_ml_model.SerializeToString())\r\noutput_names = [session.get_outputs()[i].name for i in range(len(session.get_outputs()))]\r\nonnx_ml_pred = [[] for i in range(len(output_names))]\r\ninputs = {session.get_inputs()[0].name: X}\r\npred = session.run(output_names, inputs)\r\nfor i in range(len(output_names)):\r\n    if \"label\" in output_names[i]:\r\n        onnx_ml_pred[1] = pred[i]\r\n    else:\r\n        onnx_ml_pred[0] = pred[i]\r\n\r\n# Get predictions for Sklearn\r\nskl_pred = [[] for i in range(len(output_names))]\r\nskl_pred[0] = model.predict_proba(X)\r\nskl_pred[1] = model.predict(X)\r\n\r\nnp.testing.assert_allclose(onnx_ml_pred[1], skl_pred[1])  # labels\r\nnp.testing.assert_allclose(\r\n    list(map(lambda x: list(x.values()), onnx_ml_pred[0])), skl_pred[0])  # probs\r\n```\r\n\r\nProbabilities match, but not the labels (the ONNX model returns label `1` for some reason).","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/415/timeline","performed_via_github_app":null,"state_reason":null}