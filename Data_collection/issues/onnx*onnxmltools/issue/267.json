{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/267","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/267/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/267/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/267/events","html_url":"https://github.com/onnx/onnxmltools/issues/267","id":423738430,"node_id":"MDU6SXNzdWU0MjM3Mzg0MzA=","number":267,"title":"Unsupported shape calculation for operator BatchNormalization","user":{"login":"gosha20777","id":25365364,"node_id":"MDQ6VXNlcjI1MzY1MzY0","avatar_url":"https://avatars.githubusercontent.com/u/25365364?v=4","gravatar_id":"","url":"https://api.github.com/users/gosha20777","html_url":"https://github.com/gosha20777","followers_url":"https://api.github.com/users/gosha20777/followers","following_url":"https://api.github.com/users/gosha20777/following{/other_user}","gists_url":"https://api.github.com/users/gosha20777/gists{/gist_id}","starred_url":"https://api.github.com/users/gosha20777/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gosha20777/subscriptions","organizations_url":"https://api.github.com/users/gosha20777/orgs","repos_url":"https://api.github.com/users/gosha20777/repos","events_url":"https://api.github.com/users/gosha20777/events{/privacy}","received_events_url":"https://api.github.com/users/gosha20777/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2019-03-21T13:49:07Z","updated_at":"2020-12-28T03:30:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I made a new model using keras, and saved it to an .hdf file using a callback during training.\r\n\r\nI reloaded the model and tried to convert to an ONNX model:\r\n```\r\nmodel = keras.models.load_model(filename)\r\nconvert_model = winmltools.convert_keras(keras_model, 7)\r\nwinmltools.save_model(convert_model, onnx_model_name)\r\n```\r\nconvert_keras throws an error here. Any idea what I might be doing wrong? \r\npython 3.6.2, Tensorflow 1.8, Keras 2.1.5, onnxmltools 1.3.2\r\n\r\nThe keras-retinanet implementation uses keras_resnet which has [BatchNormalization](https://github.com/broadinstitute/keras-resnet/blob/master/keras_resnet/layers/_batch_normalization.py) referred to in the error.\r\n\r\nError below:\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-11-800754ba9409> in <module>()\r\n----> 1 convert_to_onnx(model, \"snapshots/onnxmodel.onnx\")\r\n\r\n<ipython-input-9-d58ccba40905> in convert_to_onnx(keras_model, onnx_model_name)\r\n      2 \r\n      3         ########  Conver to ONNX ############\r\n----> 4         convert_model = winmltools.convert_keras(keras_model, 7)\r\n      5         winmltools.save_model(convert_model, onnx_model_name)\r\n\r\n~/.local/lib/python3.6/site-packages/winmltools/convert/main.py in convert_keras(model, target_opset, name, initial_types, doc_string, default_batch_size, channel_first_inputs, custom_conversion_functions, custom_shape_calculators)\r\n    151     return _convert_keras(model, name=name, target_opset=target_opset, initial_types=initial_types, doc_string=doc_string,\r\n    152                           default_batch_size=default_batch_size, channel_first_inputs=channel_first_inputs,\r\n--> 153                           custom_conversion_functions=custom_conversion_functions, custom_shape_calculators=custom_shape_calculators)\r\n    154 \r\n    155 \r\n\r\n~/.local/lib/python3.6/site-packages/onnxmltools/convert/keras/convert.py in convert(model, name, default_batch_size, initial_types, doc_string, target_opset, targeted_onnx, channel_first_inputs, custom_conversion_functions, custom_shape_calculators)\r\n     41                            custom_conversion_functions, custom_shape_calculators)\r\n     42 \r\n---> 43     topology.compile()\r\n     44 \r\n     45     if name is None:\r\n\r\n~/.local/lib/python3.6/site-packages/onnxmltools/convert/common/_topology.py in compile(self)\r\n    623         self._resolve_duplicates()\r\n    624         self._fix_shapes()\r\n--> 625         self._infer_all_types()\r\n    626         self._check_structure()\r\n    627 \r\n\r\n~/.local/lib/python3.6/site-packages/onnxmltools/convert/common/_topology.py in _infer_all_types(self)\r\n    499                 pass  # in Keras converter, the shape calculator can be optional.\r\n    500             else:\r\n--> 501                 operator.infer_types()\r\n    502 \r\n    503     def _resolve_duplicates(self):\r\n\r\n~/.local/lib/python3.6/site-packages/onnxmltools/convert/common/_topology.py in infer_types(self)\r\n    101     def infer_types(self):\r\n    102         # Invoke a core inference function\r\n--> 103         _registration.get_shape_calculator(self.type)(self)\r\n    104 \r\n    105 \r\n\r\n~/.local/lib/python3.6/site-packages/onnxmltools/convert/common/_registration.py in get_shape_calculator(operator_name)\r\n     66     '''\r\n     67     if operator_name not in _shape_calculator_pool:\r\n---> 68         raise ValueError('Unsupported shape calculation for operator %s' % operator_name)\r\n     69     return _shape_calculator_pool[operator_name]\r\n\r\nValueError: Unsupported shape calculation for operator <class 'keras_resnet.layers._batch_normalization.BatchNormalization'>\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/267/timeline","performed_via_github_app":null,"state_reason":null}