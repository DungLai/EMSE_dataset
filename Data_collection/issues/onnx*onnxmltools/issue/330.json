{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/330","repository_url":"https://api.github.com/repos/onnx/onnxmltools","labels_url":"https://api.github.com/repos/onnx/onnxmltools/issues/330/labels{/name}","comments_url":"https://api.github.com/repos/onnx/onnxmltools/issues/330/comments","events_url":"https://api.github.com/repos/onnx/onnxmltools/issues/330/events","html_url":"https://github.com/onnx/onnxmltools/issues/330","id":480445393,"node_id":"MDU6SXNzdWU0ODA0NDUzOTM=","number":330,"title":"SparkML random forest classifier test not working.","user":{"login":"sanatanSharma","id":17642674,"node_id":"MDQ6VXNlcjE3NjQyNjc0","avatar_url":"https://avatars.githubusercontent.com/u/17642674?v=4","gravatar_id":"","url":"https://api.github.com/users/sanatanSharma","html_url":"https://github.com/sanatanSharma","followers_url":"https://api.github.com/users/sanatanSharma/followers","following_url":"https://api.github.com/users/sanatanSharma/following{/other_user}","gists_url":"https://api.github.com/users/sanatanSharma/gists{/gist_id}","starred_url":"https://api.github.com/users/sanatanSharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sanatanSharma/subscriptions","organizations_url":"https://api.github.com/users/sanatanSharma/orgs","repos_url":"https://api.github.com/users/sanatanSharma/repos","events_url":"https://api.github.com/users/sanatanSharma/events{/privacy}","received_events_url":"https://api.github.com/users/sanatanSharma/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-08-14T01:59:16Z","updated_at":"2020-07-13T17:21:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I was trying to run the test on my local spark but the code is not working. I've pasted the exact code which I ran down below and it breaks at the last line, `compare_results(expected, output, decimal=5)`.  Almost all of the code below is copy-pasted from the actual test [here.](https://github.com/onnx/onnxmltools/blob/master/tests/sparkml/test_random_forest_classifier.py#L31)\r\n\r\n```\r\nimport sys\r\nimport inspect\r\nimport unittest\r\nimport os\r\nfrom distutils.version import StrictVersion\r\n\r\nimport onnx\r\nimport pandas\r\nimport numpy\r\nfrom pyspark.ml import Pipeline\r\nfrom pyspark.ml.classification import RandomForestClassifier\r\nfrom pyspark.ml.linalg import VectorUDT, SparseVector\r\n\r\nfrom onnxmltools import convert_sparkml\r\nfrom onnxmltools.convert.common.data_types import StringTensorType, FloatTensorType\r\nfrom tests.sparkml.sparkml_test_utils import save_data_models, run_onnx_model, compare_results\r\nfrom tests.sparkml import SparkMlTestCase\r\nfrom pyspark.ml.feature import StringIndexer, VectorIndexer\r\n\r\nsc = SparkContext()\r\nspark = SparkSession(sc)\r\n\r\noriginal_data = spark.read.format(\"libsvm\").load(\"/Users/sanashar/sample.txt\")\r\n\r\nfeature_count = 5\r\nspark.udf.register(\"truncateFeatures\",\r\n                        lambda x: SparseVector(feature_count, range(0,feature_count), x.toArray()[125:130]),\r\n                        VectorUDT())\r\ndata = original_data.selectExpr(\"cast(label as string) as label\", \"truncateFeatures(features) as features\")\r\nlabel_indexer = StringIndexer(inputCol=\"label\", outputCol=\"indexedLabel\")\r\nfeature_indexer = VectorIndexer(inputCol=\"features\", outputCol=\"indexedFeatures\",\r\n                                maxCategories=10, handleInvalid='keep')\r\n\r\nrf = RandomForestClassifier(labelCol=\"indexedLabel\", featuresCol=\"indexedFeatures\", numTrees=10)\r\npipeline = Pipeline(stages=[label_indexer, feature_indexer, rf])\r\nmodel = pipeline.fit(data)\r\nmodel_onnx = convert_sparkml(model, 'Sparkml RandomForest Classifier', [\r\n    ('label', StringTensorType([1, 1])),\r\n    ('features', FloatTensorType([1, feature_count]))\r\n], spark_session=spark)\r\n\r\npredicted = model.transform(data)\r\ndata_np = {\r\n    'label': data.toPandas().label.values,\r\n    'features': data.toPandas().features.apply(lambda x: pandas.Series(x.toArray())).values.astype(numpy.float32)\r\n}\r\nexpected = [\r\n    predicted.toPandas().indexedLabel.values.astype(numpy.int64),\r\n    predicted.toPandas().prediction.values.astype(numpy.float32),\r\n    predicted.toPandas().probability.apply(lambda x: pandas.Series(x.toArray())).values.astype(numpy.float32)\r\n]\r\npaths = save_data_models(data_np, expected, model, model_onnx,\r\n                            basename=\"SparkmlRandomForestClassifier\")\r\nonnx_model_path = paths[3]\r\noutput, output_shapes = run_onnx_model(['indexedLabel', 'prediction', 'probability'], data_np, onnx_model_path)\r\n\r\ncompare_results(expected, output, decimal=5)\r\n```\r\n\r\nSince, this was not working out, I wrote a little line to compare predictions myself, `output[1] == expected[1]`, which showed that the expected and the outputs obtained through onnxruntime don't match. Also, sometimes my kernel dies at the `run_onnx_model` call, which is weird too.\r\n\r\nI'm not sure what's going on here and any help would be appreciated. \r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/onnxmltools/issues/330/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/onnxmltools/issues/330/timeline","performed_via_github_app":null,"state_reason":null}