{"url":"https://api.github.com/repos/khurramjaved96/incremental-learning/issues/6","repository_url":"https://api.github.com/repos/khurramjaved96/incremental-learning","labels_url":"https://api.github.com/repos/khurramjaved96/incremental-learning/issues/6/labels{/name}","comments_url":"https://api.github.com/repos/khurramjaved96/incremental-learning/issues/6/comments","events_url":"https://api.github.com/repos/khurramjaved96/incremental-learning/issues/6/events","html_url":"https://github.com/khurramjaved96/incremental-learning/issues/6","id":533138666,"node_id":"MDU6SXNzdWU1MzMxMzg2NjY=","number":6,"title":"pop_val = self.all_classes.pop() IndexError: pop from empty list","user":{"login":"ouening","id":15122811,"node_id":"MDQ6VXNlcjE1MTIyODEx","avatar_url":"https://avatars.githubusercontent.com/u/15122811?v=4","gravatar_id":"","url":"https://api.github.com/users/ouening","html_url":"https://github.com/ouening","followers_url":"https://api.github.com/users/ouening/followers","following_url":"https://api.github.com/users/ouening/following{/other_user}","gists_url":"https://api.github.com/users/ouening/gists{/gist_id}","starred_url":"https://api.github.com/users/ouening/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ouening/subscriptions","organizations_url":"https://api.github.com/users/ouening/orgs","repos_url":"https://api.github.com/users/ouening/repos","events_url":"https://api.github.com/users/ouening/events{/privacy}","received_events_url":"https://api.github.com/users/ouening/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-12-05T05:47:11Z","updated_at":"2021-03-30T08:13:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, I added custom dataset like below:\r\n```python\r\ndef pil_loader(path):\r\n    # open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)\r\n    with open(path, 'rb') as f:\r\n        img = Image.open(f)\r\n        img = img.resize((32,32))\r\n        img = img.convert('RGB')\r\n        return img\r\n\r\nclass GEO(Dataset):\r\n    '''\r\n    :param train_path: /media/gaoya/disk/Applications/pytorch/Incremental Learning/train_dataset\r\n    :param test_path /media/gaoya/disk/Applications/pytorch/Incremental Learning/test_dataset\r\n    '''\r\n    def __init__(self,train_path, test_path):\r\n        super().__init__(classes=5, name=\"GEO\", labels_per_class_train=500, labels_per_class_test=100)\r\n\r\n        imgs = numpy.array([])\r\n        self.train_transform = transforms.Compose([\r\n            transforms.Resize(32),\r\n            transforms.RandomHorizontalFlip(),\r\n            transforms.ToTensor(),\r\n            transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),\r\n             ])\r\n\r\n        self.test_transform = transforms.Compose([\r\n            transforms.Resize(32),\r\n            transforms.ToTensor(),\r\n            transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),\r\n             ])\r\n\r\n        self.train_data = datasets.ImageFolder(root=train_path, \r\n                                                transform=self.train_transform,\r\n                                                loader=pil_loader)\r\n\r\n        imgs = numpy.array([self.train_transform(pil_loader(path[0])).numpy().transpose(2,1,0) for path in self.train_data.imgs])\r\n        # img_temp = imgs[0]\r\n        # for k in range(1, len(imgs)):\r\n        #     img_temp = numpy.stack((img_temp, imgs[k]))\r\n        \r\n        self.train_imgs = imgs\r\n        self.train_targets = self.train_data.targets\r\n\r\n        self.test_data = datasets.ImageFolder(root=test_path, \r\n                                                transform=self.test_transform,\r\n                                                loader=pil_loader)\r\n\r\n        self.test_imgs = numpy.array([self.test_transform(pil_loader(path[0])).numpy().transpose(2,1,0) for path in self.test_data.imgs])\r\n        self.test_targets = self.test_data.targets\r\n```\r\nand I also have changed the code about dataset_loader( like *data* is dataset.train_imgs, *labels* is dataset.train_targets)\r\n\r\nWhen I reran the file, I got error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"run_experiment.py\", line 224, in <module>\r\n    my_trainer.increment_classes(class_group)\r\n  File \"H:\\MachineLearning\\incremental-learning-autoencoders\\trainer\\trainer.py\", line 78, in increment_classes\r\n    pop_val = self.all_classes.pop()\r\nIndexError: pop from empty list\r\n```\r\nCan you tell me what's wrong with the code? My custom datasets have 5 classes (traing set is ((8476, 32, 32, 3), testing set is (1021, 32, 32, 3))","closed_by":null,"reactions":{"url":"https://api.github.com/repos/khurramjaved96/incremental-learning/issues/6/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/khurramjaved96/incremental-learning/issues/6/timeline","performed_via_github_app":null,"state_reason":null}