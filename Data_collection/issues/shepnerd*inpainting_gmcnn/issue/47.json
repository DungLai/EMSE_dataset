{"url":"https://api.github.com/repos/shepnerd/inpainting_gmcnn/issues/47","repository_url":"https://api.github.com/repos/shepnerd/inpainting_gmcnn","labels_url":"https://api.github.com/repos/shepnerd/inpainting_gmcnn/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/shepnerd/inpainting_gmcnn/issues/47/comments","events_url":"https://api.github.com/repos/shepnerd/inpainting_gmcnn/issues/47/events","html_url":"https://github.com/shepnerd/inpainting_gmcnn/issues/47","id":536526860,"node_id":"MDU6SXNzdWU1MzY1MjY4NjA=","number":47,"title":"IndexError: list index out of range","user":{"login":"MrLassagna","id":33775218,"node_id":"MDQ6VXNlcjMzNzc1MjE4","avatar_url":"https://avatars.githubusercontent.com/u/33775218?v=4","gravatar_id":"","url":"https://api.github.com/users/MrLassagna","html_url":"https://github.com/MrLassagna","followers_url":"https://api.github.com/users/MrLassagna/followers","following_url":"https://api.github.com/users/MrLassagna/following{/other_user}","gists_url":"https://api.github.com/users/MrLassagna/gists{/gist_id}","starred_url":"https://api.github.com/users/MrLassagna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MrLassagna/subscriptions","organizations_url":"https://api.github.com/users/MrLassagna/orgs","repos_url":"https://api.github.com/users/MrLassagna/repos","events_url":"https://api.github.com/users/MrLassagna/events{/privacy}","received_events_url":"https://api.github.com/users/MrLassagna/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-12-11T17:55:13Z","updated_at":"2021-09-16T11:26:03Z","closed_at":"2019-12-16T17:44:46Z","author_association":"NONE","active_lock_reason":null,"body":"Following is the full stack trace of the PyTorch version...\r\n\r\nC:\\inpainting_gmcnn\\pytorch>python test.py --dataset paris_streetview --data_file imgs/paris-streetview_256x256/ --load_model_dir checkpoints/paris-streetview_256x256_rect --random_mask 0\r\n------------ Options -------------\r\nd_cnum: 32\r\ndata_file: imgs/paris-streetview_256x256/\r\ndataset: paris_streetview\r\ndataset_path: imgs/paris-streetview_256x256/\r\ndate_str: test_20191211-232248\r\ng_cnum: 32\r\ngpu_ids: 0\r\nimg_shapes: [256, 256, 3]\r\nload_model_dir: checkpoints/paris-streetview_256x256_rect\r\nmask_shapes: [128, 128]\r\nmask_type: rect\r\nmode: save\r\nmodel: gmcnn\r\nmodel_folder: test_20191211-232248_paris_streetview_gmcnn_s256x256_gc32\r\nphase: test\r\nrandom_mask: False\r\nsaving_path: ./test_results\\test_20191211-232248_paris_streetview_gmcnn_s256x256_gc32\r\nseed: 1\r\ntest_dir: ./test_results\r\ntest_num: -1\r\n-------------- End ----------------\r\nThe total number of testing images is 4, and we take 4 for test.\r\nconfiguring model..\r\ninitialize network with normal\r\n---------- Networks initialized -------------\r\nGMCNN(\r\n  (EB1): ModuleList(\r\n    (0): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1))\r\n    (1): Conv2d(32, 64, kernel_size=(7, 7), stride=(2, 2))\r\n    (2): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1))\r\n    (3): Conv2d(64, 128, kernel_size=(7, 7), stride=(2, 2))\r\n    (4): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1))\r\n    (5): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1))\r\n    (6): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1), dilation=(2, 2))\r\n    (7): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1), dilation=(4, 4))\r\n    (8): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1), dilation=(8, 8))\r\n    (9): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1), dilation=(16, 16))\r\n    (10): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1))\r\n    (11): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1))\r\n    (12): PureUpsampling()\r\n  )\r\n  (EB2): ModuleList(\r\n    (0): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1))\r\n    (1): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2))\r\n    (2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1))\r\n    (3): Conv2d(64, 128, kernel_size=(5, 5), stride=(2, 2))\r\n    (4): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1))\r\n    (5): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1))\r\n    (6): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), dilation=(2, 2))\r\n    (7): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), dilation=(4, 4))\r\n    (8): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), dilation=(8, 8))\r\n    (9): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), dilation=(16, 16))\r\n    (10): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1))\r\n    (11): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1))\r\n    (12): PureUpsampling()\r\n    (13): Conv2d(128, 64, kernel_size=(5, 5), stride=(1, 1))\r\n    (14): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1))\r\n    (15): PureUpsampling()\r\n  )\r\n  (EB3): ModuleList(\r\n    (0): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1))\r\n    (1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\r\n    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\r\n    (3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\r\n    (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))\r\n    (5): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))\r\n    (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2))\r\n    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), dilation=(4, 4))\r\n    (8): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), dilation=(8, 8))\r\n    (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), dilation=(16, 16))\r\n    (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))\r\n    (11): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))\r\n    (12): PureUpsampling()\r\n    (13): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1))\r\n    (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\r\n    (15): PureUpsampling()\r\n    (16): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))\r\n    (17): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))\r\n  )\r\n  (decoding_layers): ModuleList(\r\n    (0): Conv2d(224, 16, kernel_size=(3, 3), stride=(1, 1))\r\n    (1): Conv2d(16, 3, kernel_size=(3, 3), stride=(1, 1))\r\n  )\r\n  (pads): ModuleList(\r\n    (0): ReflectionPad2d((0, 0, 0, 0))\r\n    (1): ReflectionPad2d((1, 1, 1, 1))\r\n    (2): ReflectionPad2d((2, 2, 2, 2))\r\n    (3): ReflectionPad2d((3, 3, 3, 3))\r\n    (4): ReflectionPad2d((4, 4, 4, 4))\r\n    (5): ReflectionPad2d((5, 5, 5, 5))\r\n    (6): ReflectionPad2d((6, 6, 6, 6))\r\n    (7): ReflectionPad2d((7, 7, 7, 7))\r\n    (8): ReflectionPad2d((8, 8, 8, 8))\r\n    (9): ReflectionPad2d((9, 9, 9, 9))\r\n    (10): ReflectionPad2d((10, 10, 10, 10))\r\n    (11): ReflectionPad2d((11, 11, 11, 11))\r\n    (12): ReflectionPad2d((12, 12, 12, 12))\r\n    (13): ReflectionPad2d((13, 13, 13, 13))\r\n    (14): ReflectionPad2d((14, 14, 14, 14))\r\n    (15): ReflectionPad2d((15, 15, 15, 15))\r\n    (16): ReflectionPad2d((16, 16, 16, 16))\r\n    (17): ReflectionPad2d((17, 17, 17, 17))\r\n    (18): ReflectionPad2d((18, 18, 18, 18))\r\n    (19): ReflectionPad2d((19, 19, 19, 19))\r\n    (20): ReflectionPad2d((20, 20, 20, 20))\r\n    (21): ReflectionPad2d((21, 21, 21, 21))\r\n    (22): ReflectionPad2d((22, 22, 22, 22))\r\n    (23): ReflectionPad2d((23, 23, 23, 23))\r\n    (24): ReflectionPad2d((24, 24, 24, 24))\r\n    (25): ReflectionPad2d((25, 25, 25, 25))\r\n    (26): ReflectionPad2d((26, 26, 26, 26))\r\n    (27): ReflectionPad2d((27, 27, 27, 27))\r\n    (28): ReflectionPad2d((28, 28, 28, 28))\r\n    (29): ReflectionPad2d((29, 29, 29, 29))\r\n    (30): ReflectionPad2d((30, 30, 30, 30))\r\n    (31): ReflectionPad2d((31, 31, 31, 31))\r\n    (32): ReflectionPad2d((32, 32, 32, 32))\r\n    (33): ReflectionPad2d((33, 33, 33, 33))\r\n    (34): ReflectionPad2d((34, 34, 34, 34))\r\n    (35): ReflectionPad2d((35, 35, 35, 35))\r\n    (36): ReflectionPad2d((36, 36, 36, 36))\r\n    (37): ReflectionPad2d((37, 37, 37, 37))\r\n    (38): ReflectionPad2d((38, 38, 38, 38))\r\n    (39): ReflectionPad2d((39, 39, 39, 39))\r\n    (40): ReflectionPad2d((40, 40, 40, 40))\r\n    (41): ReflectionPad2d((41, 41, 41, 41))\r\n    (42): ReflectionPad2d((42, 42, 42, 42))\r\n    (43): ReflectionPad2d((43, 43, 43, 43))\r\n    (44): ReflectionPad2d((44, 44, 44, 44))\r\n    (45): ReflectionPad2d((45, 45, 45, 45))\r\n    (46): ReflectionPad2d((46, 46, 46, 46))\r\n    (47): ReflectionPad2d((47, 47, 47, 47))\r\n    (48): ReflectionPad2d((48, 48, 48, 48))\r\n  )\r\n)\r\n[Network GM] Total number of parameters : 12.562 M\r\n-----------------------------------------------\r\nLoading pretrained model from checkpoints/paris-streetview_256x256_rect\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 32, in <module>\r\n    ourModel.load_networks(getLatest(os.path.join(config.load_model_dir, '*.pth')))\r\n  File \"C:\\Projects\\inpainting_gmcnn\\pytorch\\util\\utils.py\", line 84, in getLatest\r\n    return files[sorted(range(len(file_times)), key=lambda x: file_times[x])[-1]]\r\nIndexError: list index out of range","closed_by":{"login":"MrLassagna","id":33775218,"node_id":"MDQ6VXNlcjMzNzc1MjE4","avatar_url":"https://avatars.githubusercontent.com/u/33775218?v=4","gravatar_id":"","url":"https://api.github.com/users/MrLassagna","html_url":"https://github.com/MrLassagna","followers_url":"https://api.github.com/users/MrLassagna/followers","following_url":"https://api.github.com/users/MrLassagna/following{/other_user}","gists_url":"https://api.github.com/users/MrLassagna/gists{/gist_id}","starred_url":"https://api.github.com/users/MrLassagna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MrLassagna/subscriptions","organizations_url":"https://api.github.com/users/MrLassagna/orgs","repos_url":"https://api.github.com/users/MrLassagna/repos","events_url":"https://api.github.com/users/MrLassagna/events{/privacy}","received_events_url":"https://api.github.com/users/MrLassagna/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/shepnerd/inpainting_gmcnn/issues/47/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/shepnerd/inpainting_gmcnn/issues/47/timeline","performed_via_github_app":null,"state_reason":"completed"}