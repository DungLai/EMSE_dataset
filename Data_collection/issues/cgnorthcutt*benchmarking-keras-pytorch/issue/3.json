{"url":"https://api.github.com/repos/cgnorthcutt/benchmarking-keras-pytorch/issues/3","repository_url":"https://api.github.com/repos/cgnorthcutt/benchmarking-keras-pytorch","labels_url":"https://api.github.com/repos/cgnorthcutt/benchmarking-keras-pytorch/issues/3/labels{/name}","comments_url":"https://api.github.com/repos/cgnorthcutt/benchmarking-keras-pytorch/issues/3/comments","events_url":"https://api.github.com/repos/cgnorthcutt/benchmarking-keras-pytorch/issues/3/events","html_url":"https://github.com/cgnorthcutt/benchmarking-keras-pytorch/issues/3","id":432313362,"node_id":"MDU6SXNzdWU0MzIzMTMzNjI=","number":3,"title":"PyTorch ResNet50 Validation Accuracy","user":{"login":"ankmathur96","id":8398819,"node_id":"MDQ6VXNlcjgzOTg4MTk=","avatar_url":"https://avatars.githubusercontent.com/u/8398819?v=4","gravatar_id":"","url":"https://api.github.com/users/ankmathur96","html_url":"https://github.com/ankmathur96","followers_url":"https://api.github.com/users/ankmathur96/followers","following_url":"https://api.github.com/users/ankmathur96/following{/other_user}","gists_url":"https://api.github.com/users/ankmathur96/gists{/gist_id}","starred_url":"https://api.github.com/users/ankmathur96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankmathur96/subscriptions","organizations_url":"https://api.github.com/users/ankmathur96/orgs","repos_url":"https://api.github.com/users/ankmathur96/repos","events_url":"https://api.github.com/users/ankmathur96/events{/privacy}","received_events_url":"https://api.github.com/users/ankmathur96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-04-11T23:09:07Z","updated_at":"2019-04-19T20:44:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey there!\r\n\r\nI came across your project from Jeremy Howard's Twitter. I think it's great to be benchmarking these numbers and keeping them in a single place!\r\n\r\nI've tried running your script and ran into some problems that I was hoping you could help diagnose:\r\nI ran `python imagenet_pytorch_get_predictions.py -m resnet50 -g 0 -b 64 ~/imagenet/` and got \r\n\r\n> `resnet50 completed: 100.00%`\r\n> `resnet50: acc1: 0.10%, acc5: 0.27%`\r\n\r\nI'm using Python 3.7 and PyTorch 1.0.1.post2 and didn't change any of your code except for making the argparse parameter for batch_size to be type=int.\r\n\r\nI work pretty regularly with PyTorch and ResNet-50 and was surprised to see the ResNet-50 have only 75.02% validation accuracy. When I use the pretrained ResNet-50 using the code [here](https://github.com/pytorch/examples/blob/master/imagenet/main.py), I get 76.138% top-1, 92.864% top-5 accuracy. Specifically, I run:\r\n\r\n`python main.py -a resnet50 -e -b 64 -j 8 --pretrained ~/imagenet/`\r\n\r\nI'm using CUDA 9.2 and CUDNN version 7.4.1 and running inference on a NVIDIA V100 on a Google Cloud instance using Ubuntu 16.04.\r\n\r\nI'm curious what might be going wrong here and why our results are different - to start with, what version of CUDNN/CUDA did your results originate from? ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/cgnorthcutt/benchmarking-keras-pytorch/issues/3/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/cgnorthcutt/benchmarking-keras-pytorch/issues/3/timeline","performed_via_github_app":null,"state_reason":null}