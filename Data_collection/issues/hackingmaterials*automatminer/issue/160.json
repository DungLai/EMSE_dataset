{"url":"https://api.github.com/repos/hackingmaterials/automatminer/issues/160","repository_url":"https://api.github.com/repos/hackingmaterials/automatminer","labels_url":"https://api.github.com/repos/hackingmaterials/automatminer/issues/160/labels{/name}","comments_url":"https://api.github.com/repos/hackingmaterials/automatminer/issues/160/comments","events_url":"https://api.github.com/repos/hackingmaterials/automatminer/issues/160/events","html_url":"https://github.com/hackingmaterials/automatminer/issues/160","id":399166766,"node_id":"MDU6SXNzdWUzOTkxNjY3NjY=","number":160,"title":"Add random_state option to benchmark function","user":{"login":"utf","id":1330638,"node_id":"MDQ6VXNlcjEzMzA2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/1330638?v=4","gravatar_id":"","url":"https://api.github.com/users/utf","html_url":"https://github.com/utf","followers_url":"https://api.github.com/users/utf/followers","following_url":"https://api.github.com/users/utf/following{/other_user}","gists_url":"https://api.github.com/users/utf/gists{/gist_id}","starred_url":"https://api.github.com/users/utf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/utf/subscriptions","organizations_url":"https://api.github.com/users/utf/orgs","repos_url":"https://api.github.com/users/utf/repos","events_url":"https://api.github.com/users/utf/events{/privacy}","received_events_url":"https://api.github.com/users/utf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-01-15T02:53:36Z","updated_at":"2019-01-26T00:24:13Z","closed_at":"2019-01-26T00:20:49Z","author_association":"MEMBER","active_lock_reason":null,"body":"Would be nice to add support for the `random_sample` variable of `pandas.DataFrame.sample()` for pipeline benchmarking.\r\n\r\nE.g. implemented for this line:\r\n\r\n```\r\ntestdf, traindf = np.split(df.sample(frac=1), [int(test_spec * len(df))])\r\n```\r\n\r\nWould allow for random but deterministic sampling of the dataframe when choosing the test/train split. This way you can benchmark two models on the same dataframe and automatically have the same test/train split. Can just override the benchmark `test_spec` variable again (e.g. if `test_spec` is an int or `numpy.random.RandomState` object then use it as the `random_sample` variable).","closed_by":{"login":"ardunn","id":19936203,"node_id":"MDQ6VXNlcjE5OTM2MjAz","avatar_url":"https://avatars.githubusercontent.com/u/19936203?v=4","gravatar_id":"","url":"https://api.github.com/users/ardunn","html_url":"https://github.com/ardunn","followers_url":"https://api.github.com/users/ardunn/followers","following_url":"https://api.github.com/users/ardunn/following{/other_user}","gists_url":"https://api.github.com/users/ardunn/gists{/gist_id}","starred_url":"https://api.github.com/users/ardunn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ardunn/subscriptions","organizations_url":"https://api.github.com/users/ardunn/orgs","repos_url":"https://api.github.com/users/ardunn/repos","events_url":"https://api.github.com/users/ardunn/events{/privacy}","received_events_url":"https://api.github.com/users/ardunn/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/hackingmaterials/automatminer/issues/160/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hackingmaterials/automatminer/issues/160/timeline","performed_via_github_app":null,"state_reason":"completed"}