[{"id":5676038620,"node_id":"MEE_lADOCbx2hs4_bhSRzwAAAAFSUXnc","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5676038620","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-11-26T07:33:42Z","performed_via_github_app":null},{"id":5676038625,"node_id":"SE_lADOCbx2hs4_bhSRzwAAAAFSUXnh","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5676038625","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-11-26T07:33:42Z","performed_via_github_app":null},{"id":5676038634,"node_id":"MEE_lADOCbx2hs4_bhSRzwAAAAFSUXnq","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5676038634","actor":{"login":"tgaddair","id":1742912,"node_id":"MDQ6VXNlcjE3NDI5MTI=","avatar_url":"https://avatars.githubusercontent.com/u/1742912?v=4","gravatar_id":"","url":"https://api.github.com/users/tgaddair","html_url":"https://github.com/tgaddair","followers_url":"https://api.github.com/users/tgaddair/followers","following_url":"https://api.github.com/users/tgaddair/following{/other_user}","gists_url":"https://api.github.com/users/tgaddair/gists{/gist_id}","starred_url":"https://api.github.com/users/tgaddair/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tgaddair/subscriptions","organizations_url":"https://api.github.com/users/tgaddair/orgs","repos_url":"https://api.github.com/users/tgaddair/repos","events_url":"https://api.github.com/users/tgaddair/events{/privacy}","received_events_url":"https://api.github.com/users/tgaddair/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-11-26T07:33:42Z","performed_via_github_app":null},{"id":5676038638,"node_id":"SE_lADOCbx2hs4_bhSRzwAAAAFSUXnu","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5676038638","actor":{"login":"tgaddair","id":1742912,"node_id":"MDQ6VXNlcjE3NDI5MTI=","avatar_url":"https://avatars.githubusercontent.com/u/1742912?v=4","gravatar_id":"","url":"https://api.github.com/users/tgaddair","html_url":"https://github.com/tgaddair","followers_url":"https://api.github.com/users/tgaddair/followers","following_url":"https://api.github.com/users/tgaddair/following{/other_user}","gists_url":"https://api.github.com/users/tgaddair/gists{/gist_id}","starred_url":"https://api.github.com/users/tgaddair/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tgaddair/subscriptions","organizations_url":"https://api.github.com/users/tgaddair/orgs","repos_url":"https://api.github.com/users/tgaddair/repos","events_url":"https://api.github.com/users/tgaddair/events{/privacy}","received_events_url":"https://api.github.com/users/tgaddair/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-11-26T07:33:42Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/984001179","html_url":"https://github.com/ludwig-ai/ludwig/issues/1520#issuecomment-984001179","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1520","id":984001179,"node_id":"IC_kwDOCbx2hs46pqqb","user":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"created_at":"2021-12-01T19:51:50Z","updated_at":"2021-12-01T19:51:50Z","author_association":"COLLABORATOR","body":"Hi @PeterPirog thanks for this detailed issue!\r\n\r\nYo are right that there are a bunch of additional preprocessing we can do on categorical and numerical features (open to PRs!), but at the same time some of the features you'd like are already here.\r\n\r\n- One hot encoding is achieved by setting the category encoder to `sparse`. In a deep learning model is not very useful to be honest, because as soon as that sparse representation is multiplied by a matrix in a fully connected layer, that's equivalent to selecting a row from an embedding matrix, which is what the default `dense` encoder does. So it is there, but it's just a less efficient version of the default option anyway.\r\n- rare labels: there's a `most_common` parameter. If your category feature contains, say 10 distinct values, and you set it to, say, 5, the 5 least common classes will all be encoded with a special token.\r\n\r\nQuantile encoding for numerical features would be a great addition, we had it in the backlog for a while. Ordinal encoding on the other hand could be useful but a little bit less so, as it would require the user to specify the mapping manually anyway 8and then they could be doing it in pandas before training with Ludwig), but still a good option to have.\r\n\r\nRegarding the common format for transformations, we are going in that direction already with the numerical transformers, but your suggestion is well taken. The main difference with what you are showing would be the assumption that the dataframe operations should work with both pandas and dask.\r\n\r\nRegarding imputation, this is also a great suggestion, although the sklearn imputed assumes data in bumpy, and Ludwig doesn't make the same assumption because of the different datatypes. At the same time we could do something potentially similar with pandas/dask.\r\n\r\nIn general though preprocessing will be a major focus of the v0.6 release, which will start to work on after we are done with the v0.5 PyTorch porting. Really happy to get these detailed suggestions!","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/984001179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false}},{"id":5701441925,"node_id":"MEE_lADOCbx2hs4_bhSRzwAAAAFT1RmF","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5701441925","actor":{"login":"PeterPirog","id":56269734,"node_id":"MDQ6VXNlcjU2MjY5NzM0","avatar_url":"https://avatars.githubusercontent.com/u/56269734?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterPirog","html_url":"https://github.com/PeterPirog","followers_url":"https://api.github.com/users/PeterPirog/followers","following_url":"https://api.github.com/users/PeterPirog/following{/other_user}","gists_url":"https://api.github.com/users/PeterPirog/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterPirog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterPirog/subscriptions","organizations_url":"https://api.github.com/users/PeterPirog/orgs","repos_url":"https://api.github.com/users/PeterPirog/repos","events_url":"https://api.github.com/users/PeterPirog/events{/privacy}","received_events_url":"https://api.github.com/users/PeterPirog/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-12-01T19:51:50Z","performed_via_github_app":null},{"id":5701441929,"node_id":"SE_lADOCbx2hs4_bhSRzwAAAAFT1RmJ","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5701441929","actor":{"login":"PeterPirog","id":56269734,"node_id":"MDQ6VXNlcjU2MjY5NzM0","avatar_url":"https://avatars.githubusercontent.com/u/56269734?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterPirog","html_url":"https://github.com/PeterPirog","followers_url":"https://api.github.com/users/PeterPirog/followers","following_url":"https://api.github.com/users/PeterPirog/following{/other_user}","gists_url":"https://api.github.com/users/PeterPirog/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterPirog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterPirog/subscriptions","organizations_url":"https://api.github.com/users/PeterPirog/orgs","repos_url":"https://api.github.com/users/PeterPirog/repos","events_url":"https://api.github.com/users/PeterPirog/events{/privacy}","received_events_url":"https://api.github.com/users/PeterPirog/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-12-01T19:51:50Z","performed_via_github_app":null},{"id":5701442951,"node_id":"LE_lADOCbx2hs4_bhSRzwAAAAFT1R2H","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5701442951","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2021-12-01T19:52:04Z","label":{"name":"feature request","color":"0377d6"},"performed_via_github_app":null},{"id":5701447352,"node_id":"LE_lADOCbx2hs4_bhSRzwAAAAFT1S64","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5701447352","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2021-12-01T19:52:59Z","label":{"name":"v0.6","color":"d4c5f9"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/984141878","html_url":"https://github.com/ludwig-ai/ludwig/issues/1520#issuecomment-984141878","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1520","id":984141878,"node_id":"IC_kwDOCbx2hs46qNA2","user":{"login":"PeterPirog","id":56269734,"node_id":"MDQ6VXNlcjU2MjY5NzM0","avatar_url":"https://avatars.githubusercontent.com/u/56269734?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterPirog","html_url":"https://github.com/PeterPirog","followers_url":"https://api.github.com/users/PeterPirog/followers","following_url":"https://api.github.com/users/PeterPirog/following{/other_user}","gists_url":"https://api.github.com/users/PeterPirog/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterPirog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterPirog/subscriptions","organizations_url":"https://api.github.com/users/PeterPirog/orgs","repos_url":"https://api.github.com/users/PeterPirog/repos","events_url":"https://api.github.com/users/PeterPirog/events{/privacy}","received_events_url":"https://api.github.com/users/PeterPirog/received_events","type":"User","site_admin":false},"created_at":"2021-12-01T23:10:17Z","updated_at":"2021-12-01T23:10:17Z","author_association":"NONE","body":"Hi, @w4nderlust  \r\nI didn't know that some encoders are implemented  (sparse = one-hot). Of course one-hot encoding is completly useless for data with high cardinality so I use Quantile Encoder for categorical data (QuantileEncoder for numerical data and QuantileEncoder for categorical data are completly different)\r\nQuantileEncoding for categorical data is very usefull in spervising learning with very high cardinality:\r\n[https://contrib.scikit-learn.org/category_encoders/quantile.html](https://contrib.scikit-learn.org/category_encoders/quantile.html)\r\nI recommend this article to explain it: [https://maxhalford.github.io/blog/target-encoding/](https://maxhalford.github.io/blog/target-encoding/)\r\n\r\nFor own purposes I did own transformer for quantile encoding but I didn't describe it yet (code need cleaning):\r\n```\r\nclass PercentileTargetEncoder(BaseEstimator, TransformerMixin):\r\n    def __init__(self, features=None,\r\n                 ignored_features=None,\r\n                 p=0.5,\r\n                 m=1,\r\n                 remove_original=True,\r\n                 return_df=True,\r\n                 use_internal_yeo_johnson=True,\r\n                 verbose=True):\r\n        super().__init__()\r\n        self.features = features  # selected categorical features\r\n        self.ignored_features = ignored_features\r\n        self.columns = None  # all columns in df\r\n        self.column_target = None\r\n        self.p = p\r\n        self.m = m\r\n        self.N = None  # Number of rows in training dataset\r\n        self.remove_original = remove_original\r\n        self.return_df = return_df\r\n        # usage of yeo-johnson transformation inside encoder\r\n        self.use_internal_yeo_johnson = use_internal_yeo_johnson\r\n        self.verbose = verbose\r\n        # dict with unique values lists for specified feature, key form (feature)\r\n        self.features_unique = {}\r\n        # stored quantiles for whole dataset, key form (p)\r\n        self.global_quantiles = {}\r\n        # stored quantiles for all values, key form (feature, value, p)\r\n        self.value_quantiles = {}\r\n        # stored counts of every value in train data key form (feature, value)\r\n        self.value_counts = {}\r\n\r\n        # convert p and m to lists for iteration available\r\n        if isinstance(p, int) or isinstance(p, float):\r\n            self.p = [self.p]\r\n        if isinstance(m, int) or isinstance(m, float):\r\n            self.m = [self.m]\r\n\r\n        # convert feature lists for iteration available\r\n        if not isinstance(self.features, list) and self.features is not None:\r\n            self.features = [self.features]\r\n\r\n        if not isinstance(self.ignored_features, list) and self.ignored_features is not None:\r\n            self.ignored_features = [self.ignored_features]\r\n\r\n    def fit(self, X, y=None):\r\n        X = X.copy()\r\n        # Convert y to proper datatype\r\n        # if y is pd.Series\r\n        if isinstance(y, pd.Series):\r\n            y = y.to_frame().copy()\r\n        # if y is np.array\r\n        elif isinstance(y, type(np.array([0]))):\r\n            y = pd.DataFrame(y, columns=['target']).copy()\r\n        # if y is pd.DataFrame\r\n        elif isinstance(y, pd.DataFrame):\r\n            y = y.copy()\r\n        else:\r\n            print(\"Wrong target 'y' data type\")\r\n\r\n        # use yeo-johnson transformation for target inside encoder\r\n        if self.use_internal_yeo_johnson:\r\n            y = stats.yeojohnson(y)[0]  # second component is lambda\r\n            y = pd.DataFrame(y, columns=['target']).copy()\r\n\r\n        # Count number of rows in training dataset\r\n        self.N = len(y)\r\n\r\n        self.columns = X.columns\r\n        # Find only categorical columns if not defines\r\n        # Auto-search categorical features\r\n        if self.features is None:\r\n            self.features = [col for col in self.columns if X[col].dtypes == 'O']\r\n        else:\r\n            # convert single feature name to list for iteration possibility\r\n            if isinstance(self.features, str):\r\n                self.features = [self.features]\r\n\r\n        # Remove ignored features\r\n        if self.ignored_features is not None:\r\n            for ignored_feature in self.ignored_features:\r\n                self.features.remove(ignored_feature)\r\n\r\n        if self.verbose and X.isnull().values.any():\r\n            print('There were some nan values if specified features. Nan values are replaced')\r\n\r\n        # Replace nan values in selected categorical features by 'MISSING\" value\r\n        # X[self.features] = X[self.features].fillna('MISSING').copy()\r\n\r\n        # print (f\"self.features={self.features}\")\r\n\r\n        # Find unique values for specified features\r\n        for feature in self.features:\r\n            self.features_unique[feature] = list(X[feature].unique())\r\n            # print(f\"self.features_unique={self.features_unique}\")\r\n            # print(f\"self.features_unique[feature]={self.features_unique[feature]}\")\r\n            # Replace nan values in selected categorical features by 'MISSING\" value\r\n            X[feature] = X[feature].apply(lambda value: value if value in self.features_unique[feature] else 'UNKNOWN')\r\n\r\n            # add 'UNKNOWN' value for transform never seen values\r\n            self.features_unique[feature].append('UNKNOWN')\r\n\r\n            # add 'MISSING' value whole data  were complete and 'MISSING' key is not created\r\n            if not 'MISSING' in self.features_unique[feature]:\r\n                self.features_unique[feature].append('MISSING')\r\n\r\n        # Find quantiles for all dataset for each value of p\r\n        for p in self.p:\r\n            self.global_quantiles[p] = np.quantile(y, p)\r\n\r\n        # Find quantiles for every feature and every value\r\n        for feature in self.features:\r\n            unique_vals_for_feature = self.features_unique[feature]\r\n            # for every unique value for feature\r\n            for value in unique_vals_for_feature:\r\n                value_counts = X.loc[X[feature] == value, feature].count()\r\n\r\n                # value not exist in training data\r\n                if value_counts == 0:\r\n                    for p in self.p:\r\n                        # replace missing value by quantile for all data\r\n                        self.value_quantiles[feature, value, p] = self.global_quantiles[p]\r\n\r\n                        # set value 1 for 'UNKNOWN'  and 'MISSING'values\r\n                        self.value_counts[feature, value] = 1\r\n\r\n                # value exist in training data, quantile can be calculated\r\n                else:\r\n                    # Find y values for specified feature and specified value\r\n                    idx = X[feature] == value\r\n                    # value_not_exist_in_data=sum(idx.astype(int))\r\n                    y_for_value = y[idx].copy()\r\n                    # counts for every feature and every value\r\n                    self.value_counts[feature, value] = len(y_for_value)\r\n\r\n                    for p in self.p:\r\n                        # quantiles calculation\r\n                        quantile = np.quantile(y_for_value, p, interpolation='linear')\r\n                        self.value_quantiles[feature, value, p] = quantile\r\n        return self\r\n\r\n    def transform(self, X):\r\n        X = X.copy()\r\n        # Replace nan values in selected categorical features by 'MISSING\" value\r\n        # X[self.features] = X[self.features].fillna('MISSING')\r\n\r\n        for feature in self.features:\r\n            # Replace never seen values as 'UNKNOWN'\r\n            # X[feature] = X[feature].apply(lambda value: value if value is pd.notnull(value) else 'MISSING')\r\n            X[feature] = X[feature].apply(lambda value: value if pd.notnull(value) else 'MISSING')\r\n            for p in self.p:\r\n                for m in self.m:\r\n                    # Prepare new columns names for percentile values\r\n                    feature_name = feature + '_' + str(p) + '_' + str(m)\r\n                    print(f'feature name={feature_name}')\r\n                    X[feature_name] = X[feature].apply(lambda value:\r\n                                                       self.__calculate_new_target(feature, value, p, m))\r\n\r\n        # Remove original features\r\n        if self.remove_original:\r\n            X = X.drop(self.features, axis=1)\r\n\r\n        # Return dataframe or np array\r\n        if self.return_df:\r\n            return X\r\n        else:\r\n            return X.to_numpy()\r\n\r\n    def __calculate_new_target(self, feature, value, p, m):\r\n        \"\"\"\r\n        :param feature: current feature name\r\n        :param value: current value for feature\r\n        :param p: percentile value\r\n        :param m: regularization parameter to prevent overfitting , int in range for 1 to np.inf\r\n        :return: calculated target to replace categorical value\r\n        \"\"\"\r\n        # N - total number of rows in training set\r\n        N = self.N\r\n        # ni - number of rows with specified 'value' in training set\r\n        ni = self.value_counts[feature, value]\r\n        # eta - proportion of specified value to all values in training set\r\n        eta = ni / N\r\n        # q - quantile value for specified 'feature' and specified 'value'\r\n        q = self.value_quantiles[feature, value, p]\r\n        # mQ - mean quantile for whole dataset\r\n        mQ = self.global_quantiles[p]\r\n        # print(f'eth={eta}')\r\n        return (mQ + m * eta * q) / (1 + m * eta)\r\n```\r\nusage:\r\n\r\nPercentileTargetEncoder( features=None, # if None detect categorical features or ['feature1,'feature2']\r\n                 ignored_features=None, # do not convert this categorical features None or List \r\n                 p=0.5,  # percentile - if 0.5 median or list for example [0.1,0.5,0.9]\r\n                 m=1, # smoothing parameter  described in article, in article\r\n                 remove_original=True, #remove original categorical data if True\r\n                 return_df=True, return dataframe if True, nparray if false\r\n                 use_internal_yeo_johnson=True, # inetgrated yeo-yohnson transformation to reduce skewness\r\n                 verbose=True # True to show calculations inside transformer\r\n):\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/984141878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"PeterPirog","id":56269734,"node_id":"MDQ6VXNlcjU2MjY5NzM0","avatar_url":"https://avatars.githubusercontent.com/u/56269734?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterPirog","html_url":"https://github.com/PeterPirog","followers_url":"https://api.github.com/users/PeterPirog/followers","following_url":"https://api.github.com/users/PeterPirog/following{/other_user}","gists_url":"https://api.github.com/users/PeterPirog/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterPirog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterPirog/subscriptions","organizations_url":"https://api.github.com/users/PeterPirog/orgs","repos_url":"https://api.github.com/users/PeterPirog/repos","events_url":"https://api.github.com/users/PeterPirog/events{/privacy}","received_events_url":"https://api.github.com/users/PeterPirog/received_events","type":"User","site_admin":false}},{"id":5702327328,"node_id":"MEE_lADOCbx2hs4_bhSRzwAAAAFT4pwg","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5702327328","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-12-01T23:10:17Z","performed_via_github_app":null},{"id":5702327332,"node_id":"SE_lADOCbx2hs4_bhSRzwAAAAFT4pwk","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5702327332","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-12-01T23:10:17Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1013795514","html_url":"https://github.com/ludwig-ai/ludwig/issues/1520#issuecomment-1013795514","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1520","id":1013795514,"node_id":"IC_kwDOCbx2hs48bUq6","user":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"created_at":"2022-01-16T02:11:15Z","updated_at":"2022-01-16T02:11:15Z","author_association":"COLLABORATOR","body":"An update on this @PeterPirog . We had an internal session, and these features have been prioritized as one of the main features after we are completely done with the PyTorch porting. It will require a little bit more of patience, but they will be added to Ludwig. Thanks for your support and help, very much appreciated!","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1013795514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false}},{"id":5899756456,"node_id":"MEE_lADOCbx2hs4_bhSRzwAAAAFfpyOo","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5899756456","actor":{"login":"PeterPirog","id":56269734,"node_id":"MDQ6VXNlcjU2MjY5NzM0","avatar_url":"https://avatars.githubusercontent.com/u/56269734?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterPirog","html_url":"https://github.com/PeterPirog","followers_url":"https://api.github.com/users/PeterPirog/followers","following_url":"https://api.github.com/users/PeterPirog/following{/other_user}","gists_url":"https://api.github.com/users/PeterPirog/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterPirog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterPirog/subscriptions","organizations_url":"https://api.github.com/users/PeterPirog/orgs","repos_url":"https://api.github.com/users/PeterPirog/repos","events_url":"https://api.github.com/users/PeterPirog/events{/privacy}","received_events_url":"https://api.github.com/users/PeterPirog/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-01-16T02:11:16Z","performed_via_github_app":null},{"id":5899756457,"node_id":"SE_lADOCbx2hs4_bhSRzwAAAAFfpyOp","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5899756457","actor":{"login":"PeterPirog","id":56269734,"node_id":"MDQ6VXNlcjU2MjY5NzM0","avatar_url":"https://avatars.githubusercontent.com/u/56269734?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterPirog","html_url":"https://github.com/PeterPirog","followers_url":"https://api.github.com/users/PeterPirog/followers","following_url":"https://api.github.com/users/PeterPirog/following{/other_user}","gists_url":"https://api.github.com/users/PeterPirog/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterPirog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterPirog/subscriptions","organizations_url":"https://api.github.com/users/PeterPirog/orgs","repos_url":"https://api.github.com/users/PeterPirog/repos","events_url":"https://api.github.com/users/PeterPirog/events{/privacy}","received_events_url":"https://api.github.com/users/PeterPirog/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-01-16T02:11:16Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1017785508","html_url":"https://github.com/ludwig-ai/ludwig/issues/1520#issuecomment-1017785508","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1520","id":1017785508,"node_id":"IC_kwDOCbx2hs48qiyk","user":{"login":"PeterPirog","id":56269734,"node_id":"MDQ6VXNlcjU2MjY5NzM0","avatar_url":"https://avatars.githubusercontent.com/u/56269734?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterPirog","html_url":"https://github.com/PeterPirog","followers_url":"https://api.github.com/users/PeterPirog/followers","following_url":"https://api.github.com/users/PeterPirog/following{/other_user}","gists_url":"https://api.github.com/users/PeterPirog/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterPirog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterPirog/subscriptions","organizations_url":"https://api.github.com/users/PeterPirog/orgs","repos_url":"https://api.github.com/users/PeterPirog/repos","events_url":"https://api.github.com/users/PeterPirog/events{/privacy}","received_events_url":"https://api.github.com/users/PeterPirog/received_events","type":"User","site_admin":false},"created_at":"2022-01-20T18:15:38Z","updated_at":"2022-01-20T18:15:38Z","author_association":"NONE","body":"@w4nderlust \r\nThank you for the information. Now I test how to effectively encode categorical features with both layers \r\n\r\n-  [ StringLookup layer](https://www.tensorflow.org/api_docs/python/tf/keras/layers/StringLookup)\r\n- [Embedding layer](https://www.tensorflow.org/api_docs/python/tf/keras/layers/Embedding)\r\n\r\nI test different vector lenghts for different feature cardinality\r\n","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1017785508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"PeterPirog","id":56269734,"node_id":"MDQ6VXNlcjU2MjY5NzM0","avatar_url":"https://avatars.githubusercontent.com/u/56269734?v=4","gravatar_id":"","url":"https://api.github.com/users/PeterPirog","html_url":"https://github.com/PeterPirog","followers_url":"https://api.github.com/users/PeterPirog/followers","following_url":"https://api.github.com/users/PeterPirog/following{/other_user}","gists_url":"https://api.github.com/users/PeterPirog/gists{/gist_id}","starred_url":"https://api.github.com/users/PeterPirog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PeterPirog/subscriptions","organizations_url":"https://api.github.com/users/PeterPirog/orgs","repos_url":"https://api.github.com/users/PeterPirog/repos","events_url":"https://api.github.com/users/PeterPirog/events{/privacy}","received_events_url":"https://api.github.com/users/PeterPirog/received_events","type":"User","site_admin":false}},{"id":5927145012,"node_id":"MEE_lADOCbx2hs4_bhSRzwAAAAFhSQ40","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5927145012","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-01-20T18:15:38Z","performed_via_github_app":null},{"id":5927145020,"node_id":"SE_lADOCbx2hs4_bhSRzwAAAAFhSQ48","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/5927145020","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-01-20T18:15:38Z","performed_via_github_app":null}]