[{"actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"created_at":"2022-05-31T17:09:09Z","updated_at":"2022-05-31T17:09:09Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2069","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2069/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2069/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2069/events","html_url":"https://github.com/ludwig-ai/ludwig/pull/2069","id":1250901587,"node_id":"PR_kwDOCbx2hs44lxuW","number":2069,"title":"Revert \"Adds rule of thumb for determining embeddings size\"","user":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-05-27T15:35:46Z","updated_at":"2022-05-31T17:09:09Z","closed_at":"2022-05-29T06:33:58Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":163346054,"node_id":"MDEwOlJlcG9zaXRvcnkxNjMzNDYwNTQ=","name":"ludwig","full_name":"ludwig-ai/ludwig","private":false,"owner":{"login":"ludwig-ai","id":65477820,"node_id":"MDEyOk9yZ2FuaXphdGlvbjY1NDc3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/65477820?v=4","gravatar_id":"","url":"https://api.github.com/users/ludwig-ai","html_url":"https://github.com/ludwig-ai","followers_url":"https://api.github.com/users/ludwig-ai/followers","following_url":"https://api.github.com/users/ludwig-ai/following{/other_user}","gists_url":"https://api.github.com/users/ludwig-ai/gists{/gist_id}","starred_url":"https://api.github.com/users/ludwig-ai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ludwig-ai/subscriptions","organizations_url":"https://api.github.com/users/ludwig-ai/orgs","repos_url":"https://api.github.com/users/ludwig-ai/repos","events_url":"https://api.github.com/users/ludwig-ai/events{/privacy}","received_events_url":"https://api.github.com/users/ludwig-ai/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/ludwig-ai/ludwig","description":"Data-centric declarative deep learning framework","fork":false,"url":"https://api.github.com/repos/ludwig-ai/ludwig","forks_url":"https://api.github.com/repos/ludwig-ai/ludwig/forks","keys_url":"https://api.github.com/repos/ludwig-ai/ludwig/keys{/key_id}","collaborators_url":"https://api.github.com/repos/ludwig-ai/ludwig/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/ludwig-ai/ludwig/teams","hooks_url":"https://api.github.com/repos/ludwig-ai/ludwig/hooks","issue_events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events{/number}","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/events","assignees_url":"https://api.github.com/repos/ludwig-ai/ludwig/assignees{/user}","branches_url":"https://api.github.com/repos/ludwig-ai/ludwig/branches{/branch}","tags_url":"https://api.github.com/repos/ludwig-ai/ludwig/tags","blobs_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/refs{/sha}","trees_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/trees{/sha}","statuses_url":"https://api.github.com/repos/ludwig-ai/ludwig/statuses/{sha}","languages_url":"https://api.github.com/repos/ludwig-ai/ludwig/languages","stargazers_url":"https://api.github.com/repos/ludwig-ai/ludwig/stargazers","contributors_url":"https://api.github.com/repos/ludwig-ai/ludwig/contributors","subscribers_url":"https://api.github.com/repos/ludwig-ai/ludwig/subscribers","subscription_url":"https://api.github.com/repos/ludwig-ai/ludwig/subscription","commits_url":"https://api.github.com/repos/ludwig-ai/ludwig/commits{/sha}","git_commits_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/commits{/sha}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/comments{/number}","issue_comment_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments{/number}","contents_url":"https://api.github.com/repos/ludwig-ai/ludwig/contents/{+path}","compare_url":"https://api.github.com/repos/ludwig-ai/ludwig/compare/{base}...{head}","merges_url":"https://api.github.com/repos/ludwig-ai/ludwig/merges","archive_url":"https://api.github.com/repos/ludwig-ai/ludwig/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/ludwig-ai/ludwig/downloads","issues_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues{/number}","pulls_url":"https://api.github.com/repos/ludwig-ai/ludwig/pulls{/number}","milestones_url":"https://api.github.com/repos/ludwig-ai/ludwig/milestones{/number}","notifications_url":"https://api.github.com/repos/ludwig-ai/ludwig/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/labels{/name}","releases_url":"https://api.github.com/repos/ludwig-ai/ludwig/releases{/id}","deployments_url":"https://api.github.com/repos/ludwig-ai/ludwig/deployments","created_at":"2018-12-27T23:58:12Z","updated_at":"2023-01-19T21:01:40Z","pushed_at":"2023-01-19T23:08:58Z","git_url":"git://github.com/ludwig-ai/ludwig.git","ssh_url":"git@github.com:ludwig-ai/ludwig.git","clone_url":"https://github.com/ludwig-ai/ludwig.git","svn_url":"https://github.com/ludwig-ai/ludwig","homepage":"http://ludwig.ai","size":29868,"stargazers_count":8712,"watchers_count":8712,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1027,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":241,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["computer-vision","data-centric","data-science","datascience","deep","deep-learning","deeplearning","learning","machine","machine-learning","machinelearning","ml","natural-language","natural-language-processing","neural-network","python","pytorch"],"visibility":"public","forks":1027,"open_issues":241,"watchers":8712,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/pulls/2069","html_url":"https://github.com/ludwig-ai/ludwig/pull/2069","diff_url":"https://github.com/ludwig-ai/ludwig/pull/2069.diff","patch_url":"https://github.com/ludwig-ai/ludwig/pull/2069.patch","merged_at":"2022-05-29T06:33:57Z"},"body":"Reverts ludwig-ai/ludwig#2050","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2069/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"id":6772736368,"node_id":"RTE_lADOCbx2hs5Kg5vZzwAAAAGTr8Fw","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6772736368","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"renamed","commit_id":null,"commit_url":null,"created_at":"2022-06-08T19:59:48Z","rename":{"from":"When saving the model, export an even fuller Ludwig config that includes module-specific parameters","to":"Comprehensive Configs: When saving the model, export the fullest Ludwig config that includes module-specific parameters"},"performed_via_github_app":null},{"id":6773171005,"node_id":"COE_lADOCbx2hs5Kg5vZzwAAAAGTtmM9","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6773171005","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"connected","commit_id":null,"commit_url":null,"created_at":"2022-06-08T21:16:23Z","performed_via_github_app":null},{"id":6788821893,"node_id":"CE_lADOCbx2hs5Kg5vZzwAAAAGUpTOF","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6788821893","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-06-10T21:05:17Z","state_reason":null,"performed_via_github_app":null},{"id":6861696840,"node_id":"REE_lADOCbx2hs5Kg5vZzwAAAAGY_S9I","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6861696840","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"reopened","commit_id":null,"commit_url":null,"created_at":"2022-06-23T00:35:13Z","state_reason":"reopened","performed_via_github_app":null},{"actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"created_at":"2022-09-06T16:32:12Z","updated_at":"2022-09-06T16:32:12Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2456","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2456/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2456/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2456/events","html_url":"https://github.com/ludwig-ai/ludwig/pull/2456","id":1363542954,"node_id":"PR_kwDOCbx2hs4-dAvN","number":2456,"title":"Comprehensive configs: Explicitly list and save all parameter values for input and output features in configs.","user":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T16:32:12Z","updated_at":"2022-09-06T17:01:25Z","closed_at":"2022-09-06T17:01:25Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":163346054,"node_id":"MDEwOlJlcG9zaXRvcnkxNjMzNDYwNTQ=","name":"ludwig","full_name":"ludwig-ai/ludwig","private":false,"owner":{"login":"ludwig-ai","id":65477820,"node_id":"MDEyOk9yZ2FuaXphdGlvbjY1NDc3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/65477820?v=4","gravatar_id":"","url":"https://api.github.com/users/ludwig-ai","html_url":"https://github.com/ludwig-ai","followers_url":"https://api.github.com/users/ludwig-ai/followers","following_url":"https://api.github.com/users/ludwig-ai/following{/other_user}","gists_url":"https://api.github.com/users/ludwig-ai/gists{/gist_id}","starred_url":"https://api.github.com/users/ludwig-ai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ludwig-ai/subscriptions","organizations_url":"https://api.github.com/users/ludwig-ai/orgs","repos_url":"https://api.github.com/users/ludwig-ai/repos","events_url":"https://api.github.com/users/ludwig-ai/events{/privacy}","received_events_url":"https://api.github.com/users/ludwig-ai/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/ludwig-ai/ludwig","description":"Data-centric declarative deep learning framework","fork":false,"url":"https://api.github.com/repos/ludwig-ai/ludwig","forks_url":"https://api.github.com/repos/ludwig-ai/ludwig/forks","keys_url":"https://api.github.com/repos/ludwig-ai/ludwig/keys{/key_id}","collaborators_url":"https://api.github.com/repos/ludwig-ai/ludwig/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/ludwig-ai/ludwig/teams","hooks_url":"https://api.github.com/repos/ludwig-ai/ludwig/hooks","issue_events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events{/number}","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/events","assignees_url":"https://api.github.com/repos/ludwig-ai/ludwig/assignees{/user}","branches_url":"https://api.github.com/repos/ludwig-ai/ludwig/branches{/branch}","tags_url":"https://api.github.com/repos/ludwig-ai/ludwig/tags","blobs_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/refs{/sha}","trees_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/trees{/sha}","statuses_url":"https://api.github.com/repos/ludwig-ai/ludwig/statuses/{sha}","languages_url":"https://api.github.com/repos/ludwig-ai/ludwig/languages","stargazers_url":"https://api.github.com/repos/ludwig-ai/ludwig/stargazers","contributors_url":"https://api.github.com/repos/ludwig-ai/ludwig/contributors","subscribers_url":"https://api.github.com/repos/ludwig-ai/ludwig/subscribers","subscription_url":"https://api.github.com/repos/ludwig-ai/ludwig/subscription","commits_url":"https://api.github.com/repos/ludwig-ai/ludwig/commits{/sha}","git_commits_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/commits{/sha}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/comments{/number}","issue_comment_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments{/number}","contents_url":"https://api.github.com/repos/ludwig-ai/ludwig/contents/{+path}","compare_url":"https://api.github.com/repos/ludwig-ai/ludwig/compare/{base}...{head}","merges_url":"https://api.github.com/repos/ludwig-ai/ludwig/merges","archive_url":"https://api.github.com/repos/ludwig-ai/ludwig/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/ludwig-ai/ludwig/downloads","issues_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues{/number}","pulls_url":"https://api.github.com/repos/ludwig-ai/ludwig/pulls{/number}","milestones_url":"https://api.github.com/repos/ludwig-ai/ludwig/milestones{/number}","notifications_url":"https://api.github.com/repos/ludwig-ai/ludwig/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/labels{/name}","releases_url":"https://api.github.com/repos/ludwig-ai/ludwig/releases{/id}","deployments_url":"https://api.github.com/repos/ludwig-ai/ludwig/deployments","created_at":"2018-12-27T23:58:12Z","updated_at":"2023-01-19T21:01:40Z","pushed_at":"2023-01-19T23:08:58Z","git_url":"git://github.com/ludwig-ai/ludwig.git","ssh_url":"git@github.com:ludwig-ai/ludwig.git","clone_url":"https://github.com/ludwig-ai/ludwig.git","svn_url":"https://github.com/ludwig-ai/ludwig","homepage":"http://ludwig.ai","size":29868,"stargazers_count":8712,"watchers_count":8712,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1027,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":241,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["computer-vision","data-centric","data-science","datascience","deep","deep-learning","deeplearning","learning","machine","machine-learning","machinelearning","ml","natural-language","natural-language-processing","neural-network","python","pytorch"],"visibility":"public","forks":1027,"open_issues":241,"watchers":8712,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/pulls/2456","html_url":"https://github.com/ludwig-ai/ludwig/pull/2456","diff_url":"https://github.com/ludwig-ai/ludwig/pull/2456.diff","patch_url":"https://github.com/ludwig-ai/ludwig/pull/2456.patch","merged_at":null},"body":"This helps ensure that the loading of old models are robust to changes to default parameter values.\r\n\r\nTitanic example.\r\n\r\nBefore:\r\n\r\n```python\r\n    'input_features': [   {   'column': 'Pclass',\r\n                              'encoder': {'type': 'dense'},\r\n                              'name': 'Pclass',\r\n                              'proc_column': 'Pclass_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'},\r\n                          {   'column': 'Sex',\r\n                              'encoder': {'type': 'dense'},\r\n                              'name': 'Sex',\r\n                              'proc_column': 'Sex_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'},\r\n                          {   'column': 'Age',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Age',\r\n                              'preprocessing': {   'missing_value_strategy': 'fill_with_mean'},\r\n                              'proc_column': 'Age_DF6VxJ',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'SibSp',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'SibSp',\r\n                              'proc_column': 'SibSp_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Parch',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Parch',\r\n                              'proc_column': 'Parch_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Fare',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Fare',\r\n                              'preprocessing': {   'missing_value_strategy': 'fill_with_mean'},\r\n                              'proc_column': 'Fare_DF6VxJ',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Embarked',\r\n                              'encoder': {'type': 'dense'},\r\n                              'name': 'Embarked',\r\n                              'proc_column': 'Embarked_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'}],\r\n```\r\n\r\nAfter:\r\n\r\n```python\r\n    'input_features': [   {   'column': 'Pclass',\r\n                              'encoder': {   'dropout': 0.0,\r\n                                             'embedding_initializer': None,\r\n                                             'embedding_size': 50,\r\n                                             'embeddings_on_cpu': False,\r\n                                             'embeddings_trainable': True,\r\n                                             'pretrained_embeddings': None,\r\n                                             'type': 'dense',\r\n                                             'vocab': None},\r\n                              'name': 'Pclass',\r\n                              'preprocessing': {   'computed_fill_value': '<UNK>',\r\n                                                   'fill_value': '<UNK>',\r\n                                                   'lowercase': False,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'most_common': 10000},\r\n                              'proc_column': 'Pclass_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'},\r\n                          {   'column': 'Sex',\r\n                              'encoder': {   'dropout': 0.0,\r\n                                             'embedding_initializer': None,\r\n                                             'embedding_size': 50,\r\n                                             'embeddings_on_cpu': False,\r\n                                             'embeddings_trainable': True,\r\n                                             'pretrained_embeddings': None,\r\n                                             'type': 'dense',\r\n                                             'vocab': None},\r\n                              'name': 'Sex',\r\n                              'preprocessing': {   'computed_fill_value': '<UNK>',\r\n                                                   'fill_value': '<UNK>',\r\n                                                   'lowercase': False,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'most_common': 10000},\r\n                              'proc_column': 'Sex_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'},\r\n                          {   'column': 'Age',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Age',\r\n                              'preprocessing': {   'computed_fill_value': 0.0,\r\n                                                   'fill_value': 0.0,\r\n                                                   'missing_value_strategy': 'fill_with_mean',\r\n                                                   'normalization': None},\r\n                              'proc_column': 'Age_DF6VxJ',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'SibSp',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'SibSp',\r\n                              'preprocessing': {   'computed_fill_value': 0.0,\r\n                                                   'fill_value': 0.0,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'normalization': None},\r\n                              'proc_column': 'SibSp_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Parch',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Parch',\r\n                              'preprocessing': {   'computed_fill_value': 0.0,\r\n                                                   'fill_value': 0.0,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'normalization': None},\r\n                              'proc_column': 'Parch_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Fare',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Fare',\r\n                              'preprocessing': {   'computed_fill_value': 0.0,\r\n                                                   'fill_value': 0.0,\r\n                                                   'missing_value_strategy': 'fill_with_mean',\r\n                                                   'normalization': None},\r\n                              'proc_column': 'Fare_DF6VxJ',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Embarked',\r\n                              'encoder': {   'dropout': 0.0,\r\n                                             'embedding_initializer': None,\r\n                                             'embedding_size': 50,\r\n                                             'embeddings_on_cpu': False,\r\n                                             'embeddings_trainable': True,\r\n                                             'pretrained_embeddings': None,\r\n                                             'type': 'dense',\r\n                                             'vocab': None},\r\n                              'name': 'Embarked',\r\n                              'preprocessing': {   'computed_fill_value': '<UNK>',\r\n                                                   'fill_value': '<UNK>',\r\n                                                   'lowercase': False,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'most_common': 10000},\r\n                              'proc_column': 'Embarked_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'}],\r\n```\r\n\r\nBefore:\r\n```python\r\n    'output_features': [   {   'column': 'Survived',\r\n                               'decoder': {'type': 'regressor'},\r\n                               'dependencies': [],\r\n                               'loss': {   'confidence_penalty': 0,\r\n                                           'positive_class_weight': None,\r\n                                           'robust_lambda': 0,\r\n                                           'type': 'binary_weighted_cross_entropy',\r\n                                           'weight': 1},\r\n                               'name': 'Survived',\r\n                               'preprocessing': {   'missing_value_strategy': 'drop_row'},\r\n                               'proc_column': 'Survived_mZFLky',\r\n                               'reduce_dependencies': 'sum',\r\n                               'reduce_input': 'sum',\r\n                               'threshold': 0.5,\r\n                               'type': 'binary'}]\r\n```\r\n\r\nAfter:\r\n```python\r\n    'output_features': [   {   'calibration': False,\r\n                               'column': 'Survived',\r\n                               'decoder': {   'bias_initializer': 'zeros',\r\n                                              'fc_activation': 'relu',\r\n                                              'fc_bias_initializer': 'zeros',\r\n                                              'fc_dropout': 0.0,\r\n                                              'fc_layers': None,\r\n                                              'fc_norm': None,\r\n                                              'fc_norm_params': None,\r\n                                              'fc_output_size': 256,\r\n                                              'fc_use_bias': True,\r\n                                              'fc_weights_initializer': 'xavier_uniform',\r\n                                              'input_size': None,\r\n                                              'num_fc_layers': 0,\r\n                                              'type': 'regressor',\r\n                                              'use_bias': True,\r\n                                              'weights_initializer': 'xavier_uniform'},\r\n                               'dependencies': [],\r\n                               'input_size': None,\r\n                               'loss': {   'confidence_penalty': 0,\r\n                                           'positive_class_weight': None,\r\n                                           'robust_lambda': 0,\r\n                                           'type': 'binary_weighted_cross_entropy',\r\n                                           'weight': 1},\r\n                               'name': 'Survived',\r\n                               'num_classes': None,\r\n                               'preprocessing': {   'missing_value_strategy': 'drop_row'},\r\n                               'proc_column': 'Survived_mZFLky',\r\n                               'reduce_dependencies': 'sum',\r\n                               'reduce_input': 'sum',\r\n                               'threshold': 0.5,\r\n                               'type': 'binary'}]\r\n```\r\n\r\nCloses #2066 ","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2456/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2456/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"created_at":"2022-09-06T22:01:39Z","updated_at":"2022-09-06T22:01:39Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2460","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2460/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2460/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2460/events","html_url":"https://github.com/ludwig-ai/ludwig/pull/2460","id":1363860375,"node_id":"PR_kwDOCbx2hs4-eC1E","number":2460,"title":"Comprehensive configs: Explicitly list and save all parameter values for input and output features in configs. ","user":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-09-06T22:01:38Z","updated_at":"2022-09-27T20:19:14Z","closed_at":"2022-09-27T20:19:13Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":163346054,"node_id":"MDEwOlJlcG9zaXRvcnkxNjMzNDYwNTQ=","name":"ludwig","full_name":"ludwig-ai/ludwig","private":false,"owner":{"login":"ludwig-ai","id":65477820,"node_id":"MDEyOk9yZ2FuaXphdGlvbjY1NDc3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/65477820?v=4","gravatar_id":"","url":"https://api.github.com/users/ludwig-ai","html_url":"https://github.com/ludwig-ai","followers_url":"https://api.github.com/users/ludwig-ai/followers","following_url":"https://api.github.com/users/ludwig-ai/following{/other_user}","gists_url":"https://api.github.com/users/ludwig-ai/gists{/gist_id}","starred_url":"https://api.github.com/users/ludwig-ai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ludwig-ai/subscriptions","organizations_url":"https://api.github.com/users/ludwig-ai/orgs","repos_url":"https://api.github.com/users/ludwig-ai/repos","events_url":"https://api.github.com/users/ludwig-ai/events{/privacy}","received_events_url":"https://api.github.com/users/ludwig-ai/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/ludwig-ai/ludwig","description":"Data-centric declarative deep learning framework","fork":false,"url":"https://api.github.com/repos/ludwig-ai/ludwig","forks_url":"https://api.github.com/repos/ludwig-ai/ludwig/forks","keys_url":"https://api.github.com/repos/ludwig-ai/ludwig/keys{/key_id}","collaborators_url":"https://api.github.com/repos/ludwig-ai/ludwig/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/ludwig-ai/ludwig/teams","hooks_url":"https://api.github.com/repos/ludwig-ai/ludwig/hooks","issue_events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events{/number}","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/events","assignees_url":"https://api.github.com/repos/ludwig-ai/ludwig/assignees{/user}","branches_url":"https://api.github.com/repos/ludwig-ai/ludwig/branches{/branch}","tags_url":"https://api.github.com/repos/ludwig-ai/ludwig/tags","blobs_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/refs{/sha}","trees_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/trees{/sha}","statuses_url":"https://api.github.com/repos/ludwig-ai/ludwig/statuses/{sha}","languages_url":"https://api.github.com/repos/ludwig-ai/ludwig/languages","stargazers_url":"https://api.github.com/repos/ludwig-ai/ludwig/stargazers","contributors_url":"https://api.github.com/repos/ludwig-ai/ludwig/contributors","subscribers_url":"https://api.github.com/repos/ludwig-ai/ludwig/subscribers","subscription_url":"https://api.github.com/repos/ludwig-ai/ludwig/subscription","commits_url":"https://api.github.com/repos/ludwig-ai/ludwig/commits{/sha}","git_commits_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/commits{/sha}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/comments{/number}","issue_comment_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments{/number}","contents_url":"https://api.github.com/repos/ludwig-ai/ludwig/contents/{+path}","compare_url":"https://api.github.com/repos/ludwig-ai/ludwig/compare/{base}...{head}","merges_url":"https://api.github.com/repos/ludwig-ai/ludwig/merges","archive_url":"https://api.github.com/repos/ludwig-ai/ludwig/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/ludwig-ai/ludwig/downloads","issues_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues{/number}","pulls_url":"https://api.github.com/repos/ludwig-ai/ludwig/pulls{/number}","milestones_url":"https://api.github.com/repos/ludwig-ai/ludwig/milestones{/number}","notifications_url":"https://api.github.com/repos/ludwig-ai/ludwig/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/labels{/name}","releases_url":"https://api.github.com/repos/ludwig-ai/ludwig/releases{/id}","deployments_url":"https://api.github.com/repos/ludwig-ai/ludwig/deployments","created_at":"2018-12-27T23:58:12Z","updated_at":"2023-01-19T21:01:40Z","pushed_at":"2023-01-19T23:08:58Z","git_url":"git://github.com/ludwig-ai/ludwig.git","ssh_url":"git@github.com:ludwig-ai/ludwig.git","clone_url":"https://github.com/ludwig-ai/ludwig.git","svn_url":"https://github.com/ludwig-ai/ludwig","homepage":"http://ludwig.ai","size":29868,"stargazers_count":8712,"watchers_count":8712,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1027,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":241,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["computer-vision","data-centric","data-science","datascience","deep","deep-learning","deeplearning","learning","machine","machine-learning","machinelearning","ml","natural-language","natural-language-processing","neural-network","python","pytorch"],"visibility":"public","forks":1027,"open_issues":241,"watchers":8712,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/pulls/2460","html_url":"https://github.com/ludwig-ai/ludwig/pull/2460","diff_url":"https://github.com/ludwig-ai/ludwig/pull/2460.diff","patch_url":"https://github.com/ludwig-ai/ludwig/pull/2460.patch","merged_at":"2022-09-27T20:19:13Z"},"body":"This helps ensure that the loading of old models are robust to changes to default parameter values.\r\n\r\nTitanic example.\r\n\r\nBefore:\r\n\r\n```python\r\n    'input_features': [   {   'column': 'Pclass',\r\n                              'encoder': {'type': 'dense'},\r\n                              'name': 'Pclass',\r\n                              'proc_column': 'Pclass_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'},\r\n                          {   'column': 'Sex',\r\n                              'encoder': {'type': 'dense'},\r\n                              'name': 'Sex',\r\n                              'proc_column': 'Sex_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'},\r\n                          {   'column': 'Age',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Age',\r\n                              'preprocessing': {   'missing_value_strategy': 'fill_with_mean'},\r\n                              'proc_column': 'Age_DF6VxJ',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'SibSp',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'SibSp',\r\n                              'proc_column': 'SibSp_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Parch',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Parch',\r\n                              'proc_column': 'Parch_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Fare',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Fare',\r\n                              'preprocessing': {   'missing_value_strategy': 'fill_with_mean'},\r\n                              'proc_column': 'Fare_DF6VxJ',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Embarked',\r\n                              'encoder': {'type': 'dense'},\r\n                              'name': 'Embarked',\r\n                              'proc_column': 'Embarked_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'}],\r\n```\r\n\r\nAfter:\r\n\r\n```python\r\n    'input_features': [   {   'column': 'Pclass',\r\n                              'encoder': {   'dropout': 0.0,\r\n                                             'embedding_initializer': None,\r\n                                             'embedding_size': 50,\r\n                                             'embeddings_on_cpu': False,\r\n                                             'embeddings_trainable': True,\r\n                                             'pretrained_embeddings': None,\r\n                                             'type': 'dense',\r\n                                             'vocab': None},\r\n                              'name': 'Pclass',\r\n                              'preprocessing': {   'computed_fill_value': '<UNK>',\r\n                                                   'fill_value': '<UNK>',\r\n                                                   'lowercase': False,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'most_common': 10000},\r\n                              'proc_column': 'Pclass_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'},\r\n                          {   'column': 'Sex',\r\n                              'encoder': {   'dropout': 0.0,\r\n                                             'embedding_initializer': None,\r\n                                             'embedding_size': 50,\r\n                                             'embeddings_on_cpu': False,\r\n                                             'embeddings_trainable': True,\r\n                                             'pretrained_embeddings': None,\r\n                                             'type': 'dense',\r\n                                             'vocab': None},\r\n                              'name': 'Sex',\r\n                              'preprocessing': {   'computed_fill_value': '<UNK>',\r\n                                                   'fill_value': '<UNK>',\r\n                                                   'lowercase': False,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'most_common': 10000},\r\n                              'proc_column': 'Sex_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'},\r\n                          {   'column': 'Age',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Age',\r\n                              'preprocessing': {   'computed_fill_value': 0.0,\r\n                                                   'fill_value': 0.0,\r\n                                                   'missing_value_strategy': 'fill_with_mean',\r\n                                                   'normalization': None},\r\n                              'proc_column': 'Age_DF6VxJ',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'SibSp',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'SibSp',\r\n                              'preprocessing': {   'computed_fill_value': 0.0,\r\n                                                   'fill_value': 0.0,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'normalization': None},\r\n                              'proc_column': 'SibSp_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Parch',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Parch',\r\n                              'preprocessing': {   'computed_fill_value': 0.0,\r\n                                                   'fill_value': 0.0,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'normalization': None},\r\n                              'proc_column': 'Parch_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Fare',\r\n                              'encoder': {'type': 'passthrough'},\r\n                              'name': 'Fare',\r\n                              'preprocessing': {   'computed_fill_value': 0.0,\r\n                                                   'fill_value': 0.0,\r\n                                                   'missing_value_strategy': 'fill_with_mean',\r\n                                                   'normalization': None},\r\n                              'proc_column': 'Fare_DF6VxJ',\r\n                              'tied': None,\r\n                              'type': 'number'},\r\n                          {   'column': 'Embarked',\r\n                              'encoder': {   'dropout': 0.0,\r\n                                             'embedding_initializer': None,\r\n                                             'embedding_size': 50,\r\n                                             'embeddings_on_cpu': False,\r\n                                             'embeddings_trainable': True,\r\n                                             'pretrained_embeddings': None,\r\n                                             'type': 'dense',\r\n                                             'vocab': None},\r\n                              'name': 'Embarked',\r\n                              'preprocessing': {   'computed_fill_value': '<UNK>',\r\n                                                   'fill_value': '<UNK>',\r\n                                                   'lowercase': False,\r\n                                                   'missing_value_strategy': 'fill_with_const',\r\n                                                   'most_common': 10000},\r\n                              'proc_column': 'Embarked_mZFLky',\r\n                              'tied': None,\r\n                              'type': 'category'}],\r\n```\r\n\r\nBefore:\r\n```python\r\n    'output_features': [   {   'column': 'Survived',\r\n                               'decoder': {'type': 'regressor'},\r\n                               'dependencies': [],\r\n                               'loss': {   'confidence_penalty': 0,\r\n                                           'positive_class_weight': None,\r\n                                           'robust_lambda': 0,\r\n                                           'type': 'binary_weighted_cross_entropy',\r\n                                           'weight': 1},\r\n                               'name': 'Survived',\r\n                               'preprocessing': {   'missing_value_strategy': 'drop_row'},\r\n                               'proc_column': 'Survived_mZFLky',\r\n                               'reduce_dependencies': 'sum',\r\n                               'reduce_input': 'sum',\r\n                               'threshold': 0.5,\r\n                               'type': 'binary'}]\r\n```\r\n\r\nAfter:\r\n```python\r\n    'output_features': [   {   'calibration': False,\r\n                               'column': 'Survived',\r\n                               'decoder': {   'bias_initializer': 'zeros',\r\n                                              'fc_activation': 'relu',\r\n                                              'fc_bias_initializer': 'zeros',\r\n                                              'fc_dropout': 0.0,\r\n                                              'fc_layers': None,\r\n                                              'fc_norm': None,\r\n                                              'fc_norm_params': None,\r\n                                              'fc_output_size': 256,\r\n                                              'fc_use_bias': True,\r\n                                              'fc_weights_initializer': 'xavier_uniform',\r\n                                              'input_size': None,\r\n                                              'num_fc_layers': 0,\r\n                                              'type': 'regressor',\r\n                                              'use_bias': True,\r\n                                              'weights_initializer': 'xavier_uniform'},\r\n                               'dependencies': [],\r\n                               'input_size': None,\r\n                               'loss': {   'confidence_penalty': 0,\r\n                                           'positive_class_weight': None,\r\n                                           'robust_lambda': 0,\r\n                                           'type': 'binary_weighted_cross_entropy',\r\n                                           'weight': 1},\r\n                               'name': 'Survived',\r\n                               'num_classes': None,\r\n                               'preprocessing': {   'missing_value_strategy': 'drop_row'},\r\n                               'proc_column': 'Survived_mZFLky',\r\n                               'reduce_dependencies': 'sum',\r\n                               'reduce_input': 'sum',\r\n                               'threshold': 0.5,\r\n                               'type': 'binary'}]\r\n```\r\n\r\nCloses #2066 ","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2460/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"id":7471894288,"node_id":"CE_lADOCbx2hs5Kg5vZzwAAAAG9XA8Q","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/7471894288","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-09-27T20:19:14Z","state_reason":null,"performed_via_github_app":null}]