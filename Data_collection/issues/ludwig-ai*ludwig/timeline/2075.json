[{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1142401780","html_url":"https://github.com/ludwig-ai/ludwig/issues/2075#issuecomment-1142401780","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2075","id":1142401780,"node_id":"IC_kwDOCbx2hs5EF6r0","user":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"created_at":"2022-05-31T17:14:15Z","updated_at":"2022-05-31T17:14:15Z","author_association":"COLLABORATOR","body":"Hi, \r\n\r\nYou can use `auto_transformer`, i.e.:\r\n\r\n```python\r\nimport pandas as pd\r\nimport yaml\r\n\r\nfrom ludwig.api import LudwigModel\r\n\r\nconfig = \"\"\"\r\ninput_features:\r\n    - name: text\r\n      type: text\r\n      encoder: auto_transformer\r\n      pretrained_model_name_or_path: 'roberta-large'\r\noutput_features:\r\n    - name: category\r\n      type: category\r\ntrainer:\r\n    epochs: 1\r\n\"\"\"\r\nmodel = LudwigModel(yaml.load(config), backend=\"local\")\r\n\r\ndf = pd.DataFrame(\r\n    {\r\n        \"text\": [\"Suomessa vaihtuu kesän aikana sekä pääministeri että valtiovarain\"],\r\n        \"category\": [\"Suomi\"],\r\n    }\r\n)\r\nmodel.train(df)\r\nmodel.predict(df)\r\n```\r\n\r\nRelated discussion:\r\nhttps://github.com/ludwig-ai/ludwig/discussions/2057\r\n\r\nDocumentation:\r\nhttps://ludwig-ai.github.io/ludwig-docs/0.5/configuration/features/text_features/#autotransformer","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1142401780/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1143134324","html_url":"https://github.com/ludwig-ai/ludwig/issues/2075#issuecomment-1143134324","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2075","id":1143134324,"node_id":"IC_kwDOCbx2hs5EIth0","user":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false},"created_at":"2022-06-01T05:31:49Z","updated_at":"2022-06-01T05:31:49Z","author_association":"NONE","body":"Thanks @justinxzhao for the example!\r\n\r\nI would like to get a bit more understanding on the working of Ludwig. \r\n\r\nIs the specified encoder (for example,  roberta-large) the model used for training after encoding the text sequence **_or_** the encoder used to obtain the sequence embeddings, which is later fed to another model (unsure of what black-box model it is)? \r\n\r\nAsking this question as, if we have multiple text sequences in our data (for example, question `(type: text, encoder: auto_transformer, pretrained_model_name_or_path: 'roberta-large')` and passage `(type: text, encoder: auto_transformer, pretrained_model_name_or_path: 'bert-base')`), with each having an unique encoder, how do I specify the encoder model to which both the sequence embeddings are fed?","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1143134324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false}},{"id":6715307597,"node_id":"MEE_lADOCbx2hs5Kp5M9zwAAAAGQQ3ZN","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6715307597","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-01T05:31:49Z","performed_via_github_app":null},{"id":6715307600,"node_id":"SE_lADOCbx2hs5Kp5M9zwAAAAGQQ3ZQ","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6715307600","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-01T05:31:49Z","performed_via_github_app":null},{"actor":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false},"created_at":"2022-06-01T14:02:53Z","updated_at":"2022-06-01T14:02:53Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2076","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2076/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2076/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2076/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/2076","id":1252689978,"node_id":"I_kwDOCbx2hs5Kqog6","number":2076,"title":"Training a multi-column sequence classification model (transformer based)","user":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-05-30T12:44:22Z","updated_at":"2022-06-01T14:02:53Z","closed_at":"2022-06-01T14:02:53Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":163346054,"node_id":"MDEwOlJlcG9zaXRvcnkxNjMzNDYwNTQ=","name":"ludwig","full_name":"ludwig-ai/ludwig","private":false,"owner":{"login":"ludwig-ai","id":65477820,"node_id":"MDEyOk9yZ2FuaXphdGlvbjY1NDc3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/65477820?v=4","gravatar_id":"","url":"https://api.github.com/users/ludwig-ai","html_url":"https://github.com/ludwig-ai","followers_url":"https://api.github.com/users/ludwig-ai/followers","following_url":"https://api.github.com/users/ludwig-ai/following{/other_user}","gists_url":"https://api.github.com/users/ludwig-ai/gists{/gist_id}","starred_url":"https://api.github.com/users/ludwig-ai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ludwig-ai/subscriptions","organizations_url":"https://api.github.com/users/ludwig-ai/orgs","repos_url":"https://api.github.com/users/ludwig-ai/repos","events_url":"https://api.github.com/users/ludwig-ai/events{/privacy}","received_events_url":"https://api.github.com/users/ludwig-ai/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/ludwig-ai/ludwig","description":"Data-centric declarative deep learning framework","fork":false,"url":"https://api.github.com/repos/ludwig-ai/ludwig","forks_url":"https://api.github.com/repos/ludwig-ai/ludwig/forks","keys_url":"https://api.github.com/repos/ludwig-ai/ludwig/keys{/key_id}","collaborators_url":"https://api.github.com/repos/ludwig-ai/ludwig/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/ludwig-ai/ludwig/teams","hooks_url":"https://api.github.com/repos/ludwig-ai/ludwig/hooks","issue_events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events{/number}","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/events","assignees_url":"https://api.github.com/repos/ludwig-ai/ludwig/assignees{/user}","branches_url":"https://api.github.com/repos/ludwig-ai/ludwig/branches{/branch}","tags_url":"https://api.github.com/repos/ludwig-ai/ludwig/tags","blobs_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/refs{/sha}","trees_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/trees{/sha}","statuses_url":"https://api.github.com/repos/ludwig-ai/ludwig/statuses/{sha}","languages_url":"https://api.github.com/repos/ludwig-ai/ludwig/languages","stargazers_url":"https://api.github.com/repos/ludwig-ai/ludwig/stargazers","contributors_url":"https://api.github.com/repos/ludwig-ai/ludwig/contributors","subscribers_url":"https://api.github.com/repos/ludwig-ai/ludwig/subscribers","subscription_url":"https://api.github.com/repos/ludwig-ai/ludwig/subscription","commits_url":"https://api.github.com/repos/ludwig-ai/ludwig/commits{/sha}","git_commits_url":"https://api.github.com/repos/ludwig-ai/ludwig/git/commits{/sha}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/comments{/number}","issue_comment_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments{/number}","contents_url":"https://api.github.com/repos/ludwig-ai/ludwig/contents/{+path}","compare_url":"https://api.github.com/repos/ludwig-ai/ludwig/compare/{base}...{head}","merges_url":"https://api.github.com/repos/ludwig-ai/ludwig/merges","archive_url":"https://api.github.com/repos/ludwig-ai/ludwig/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/ludwig-ai/ludwig/downloads","issues_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues{/number}","pulls_url":"https://api.github.com/repos/ludwig-ai/ludwig/pulls{/number}","milestones_url":"https://api.github.com/repos/ludwig-ai/ludwig/milestones{/number}","notifications_url":"https://api.github.com/repos/ludwig-ai/ludwig/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/labels{/name}","releases_url":"https://api.github.com/repos/ludwig-ai/ludwig/releases{/id}","deployments_url":"https://api.github.com/repos/ludwig-ai/ludwig/deployments","created_at":"2018-12-27T23:58:12Z","updated_at":"2023-01-19T21:01:40Z","pushed_at":"2023-01-19T23:08:58Z","git_url":"git://github.com/ludwig-ai/ludwig.git","ssh_url":"git@github.com:ludwig-ai/ludwig.git","clone_url":"https://github.com/ludwig-ai/ludwig.git","svn_url":"https://github.com/ludwig-ai/ludwig","homepage":"http://ludwig.ai","size":29868,"stargazers_count":8712,"watchers_count":8712,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1027,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":241,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["computer-vision","data-centric","data-science","datascience","deep","deep-learning","deeplearning","learning","machine","machine-learning","machinelearning","ml","natural-language","natural-language-processing","neural-network","python","pytorch"],"visibility":"public","forks":1027,"open_issues":241,"watchers":8712,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"**Describe the bug**\r\n\r\n- Trying to train a transformer model on Colab using multiple text columns and input features and a binary target column.\r\n- Tried with the BoolQ dataset from SuperGLUE Benchmark. Can be obtained from [here](https://dl.fbaipublicfiles.com/glue/superglue/data/v2/BoolQ.zip).\r\n\r\nInput Feature Columns: `question` (type: text), `passage` (type: text)\r\nTarget Column: : `label` (type: binary)\r\n\r\n**Trial 1 Ludwig Configuration:**\r\n```\r\nconfig = {\r\n  \"preprocessing\": {\r\n    \"text\": {\r\n      \"tokenizer\": \"hf_tokenizer\",\r\n      \"pretrained_model_name_or_path\": \"roberta\",\r\n      \"max_sequence_length\": 512\r\n    }\r\n  },\r\n  \"input_features\": [\r\n    {\r\n      \"name\": \"question\",\r\n      \"type\": \"text\",\r\n      \"encoder\": \"roberta\",\r\n      \"trainable\": True,\r\n      \"dropout\": 0.2\r\n    },\r\n    {\r\n      \"name\": \"passage\",\r\n      \"type\": \"text\",\r\n      \"encoder\": \"roberta\",\r\n      \"trainable\": True,\r\n      \"dropout\": 0.2\r\n    }\r\n  ],\r\n  \"output_features\": [\r\n    {\r\n      \"name\": \"label\",\r\n      \"type\": \"binary\"\r\n    }\r\n  ],\r\n  \"combiner\": {\r\n    \"type\": \"transformer\",\r\n    \"output_size\": 512\r\n  },\r\n  \"trainer\":{\r\n      \"epochs\": 100,\r\n      \"early_stop\": 15\r\n  }\r\n}\r\n```\r\n**Error Stack for Trial 1:** \r\n```\r\nRuntimeError: CUDA error: device-side assert triggered\r\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\r\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nFileNotFoundError                         Traceback (most recent call last)\r\n[/usr/local/lib/python3.7/dist-packages/torch/serialization.py](https://localhost:8080/#) in __init__(self, name, mode)\r\n    210 class _open_file(_opener):\r\n    211     def __init__(self, name, mode):\r\n--> 212         super(_open_file, self).__init__(open(name, mode))\r\n    213 \r\n    214     def __exit__(self, *args):\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: '/content/results/api_experiment_run_5/model/model_weights'\r\n```\r\n\r\nSince the previous trial failed, I tried to remove the preprocessing config and try it again.\r\n\r\n**Trial 2 Ludwig Configuration: **\r\n\r\n```\r\nconfig = {\r\n  \"input_features\": [\r\n    {\r\n      \"name\": \"question\",\r\n      \"type\": \"text\",\r\n      \"encoder\": \"roberta\",\r\n      \"trainable\": True,\r\n      \"dropout\": 0.2\r\n    },\r\n    {\r\n      \"name\": \"passage\",\r\n      \"type\": \"text\",\r\n      \"encoder\": \"roberta\",\r\n      \"trainable\": True,\r\n      \"dropout\": 0.2\r\n    }\r\n  ],\r\n  \"output_features\": [\r\n    {\r\n      \"name\": \"label\",\r\n      \"type\": \"binary\"\r\n    }\r\n  ],\r\n  \"combiner\": {\r\n    \"type\": \"transformer\",\r\n    \"output_size\": 512\r\n  },\r\n  \"trainer\":{\r\n      \"epochs\": 100,\r\n      \"early_stop\": 15\r\n  }\r\n}\r\n```\r\nThis time, the training begins, but there is no improvement in training or validation accuracy even after 10 epochs. \r\n\r\nSo, I created another trial with default encoders (Trial 3).\r\n\r\n**Trial 3 Ludwig Configuration:**\r\n\r\n```\r\nconfig = {\r\n  \"input_features\": [\r\n    {\r\n      \"name\": \"question\",\r\n      \"type\": \"text\"\r\n    },\r\n    {\r\n      \"name\": \"passage\",\r\n      \"type\": \"text\"\r\n    }\r\n  ],\r\n  \"output_features\": [\r\n    {\r\n      \"name\": \"label\",\r\n      \"type\": \"binary\"\r\n    }\r\n  ],\r\n  \"trainer\":{\r\n      \"epochs\": 100,\r\n      \"early_stop\": 15\r\n  }\r\n}\r\n```\r\n\r\n This time, the training and validation accuracy increased. Training started at approx 60% and reached 98% by 15 epochs while validation reached around 64%, indicating that the default parallel_cnn model is training while the roberta model in Trials 1 and 2 was not being trained.\r\n\r\n1. Any possible reason why the roberta model is not being trained?\r\n2. How can I use a `roberta-large` model to train for sequence classification tasks? My input features would be `question` and `passage` columns in the BoolQ dataset. The columns would have to be tokenized and encoded for roberta model.\r\n3. On a more generic note, does Ludwig use two separate roberta (or any encoder model) models for two separate input features or a single model takes the concatenated/processed/tokenized/encoded input of multiple input sequence columns? If Ludwig uses two separate encoder models for each input and then uses a combiner to concatenate the embeddings, I believe the model would not train as the `question` and `passage` columns have to be fed to a single model to derive the target `label`, as each column individually would not be enough to make the prediction.\r\n4. If multiple encoders are used for multiple input sequence columns, how can I feed multiple input sequence columns to a single encoder model?\r\n\r\n\r\n**To Reproduce**\r\n```\r\n!python -m pip install git+https://github.com/ludwig-ai/ludwig.git --quiet\r\n!pip install ray\r\n```\r\n```\r\n!wget https://dl.fbaipublicfiles.com/glue/superglue/data/v2/BoolQ.zip\r\n!unzip BoolQ.zip\r\n```\r\n```\r\nimport pandas as pd\r\n\r\ntrain_df = pd.read_json(\"BoolQ/train.jsonl\", lines=True)\r\nval_df = pd.read_json(\"BoolQ/val.jsonl\", lines=True)\r\ntest_df = pd.read_json(\"BoolQ/test.jsonl\", lines=True)\r\n```\r\n```\r\nINSERT CONFIG FROM TRIAL 1 OR 2 HERE\r\n```\r\n```\r\nimport logging\r\nfrom ludwig.api import LudwigModel\r\nmodel = LudwigModel(config, logging_level=logging.INFO)\r\n```\r\n```\r\ntrain_stats, preprocessed_data, output_directory = model.train(dataset=train_df)\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Google Colab (Tesla T4 GPU)\r\n- Python version: 3.7.13\r\n- Ludwig version: 0.5.1\r\nInstalled Ludwig using: `!python -m pip install git+https://github.com/ludwig-ai/ludwig.git --quiet`\r\n\r\nThanks! :D","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2076/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1143889828","html_url":"https://github.com/ludwig-ai/ludwig/issues/2075#issuecomment-1143889828","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2075","id":1143889828,"node_id":"IC_kwDOCbx2hs5ELl-k","user":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"created_at":"2022-06-01T17:09:15Z","updated_at":"2022-06-01T17:09:15Z","author_association":"COLLABORATOR","body":"> Is the specified encoder (for example, roberta-large) the model used for training after encoding the text sequence **_or_** the encoder used to obtain the sequence embeddings, which is later fed to another model (unsure of what black-box model it is)?\r\n\r\nHere's a sequence of what's happening:\r\n1. Text sequences are pre-processed and tokenized with the same tokenizer that `roberta-large` uses\r\n2. The encoded sequences are fed to to the `roberta-large` model.\r\n3. The output of all Ludwig encoders for all features are fed to a Combiner (by default, a simple concatenation)\r\n4. The output of the combiner is fed to the binary decoder, which by default is a simple `nn.Linear` layer with output size=2.\r\n5. The output of the decoder is post-processed into real predictions for metrics.\r\n\r\n> Asking this question as, if we have multiple text sequences in our data (for example, question `(type: text, encoder: auto_transformer, pretrained_model_name_or_path: 'roberta-large')` and passage `(type: text, encoder: auto_transformer, pretrained_model_name_or_path: 'bert-base')`), with each having an unique encoder, how do I specify the encoder model to which both the sequence embeddings are fed?\r\n\r\nThe [Combiner](https://ludwig-ai.github.io/ludwig-docs/0.5/configuration/combiner/) takes the outputs of all input features encoders and combines them before providing the combined representation to the output feature decoder. You can specify which one to use in the combiner section of the configuration, and if you don't specify a combiner, the concat combiner will be used.\r\n\r\nIf you have multiple text features and you are using the concat combiner, then their encoder outputs (one from `roberta-large` for the `question` feature and one from `bert-base` for the `passage` feature) are concatenated and this combined representation is fed to the decoder.\r\n\r\nHaving separate transformers for each text feature seems really heavyweight. One alternative technique to consider that's commonly used for multilingual NMT or T5, is to concatenate your features offline, and use a single model for the combined feature, e.g.\r\n\r\n```\r\nquestion: \"...x...\"\r\npassage: \"...y...\"\r\n```\r\n\r\nBecomes:\r\n```\r\ncombined_text: \"question ...x... SEP passage ...y...\"\r\n```\r\n\r\nThe sequence length becomes longer, but one transformer for the combined text should train faster than one transformer for each text input feature.","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1143889828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1146747704","html_url":"https://github.com/ludwig-ai/ludwig/issues/2075#issuecomment-1146747704","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2075","id":1146747704,"node_id":"IC_kwDOCbx2hs5EWfs4","user":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false},"created_at":"2022-06-05T05:57:05Z","updated_at":"2022-06-05T05:57:05Z","author_association":"NONE","body":"Thanks, @justinxzhao for the detailed explanation. The example with two transformer models was mentioned to understand if the encoder in Ludwig performs the task of both - encoding the text sequence, and training the model specified in the encoder (basically, whether it's just an encoder or encoder + encoder layers).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1146747704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false}},{"id":6743070310,"node_id":"CE_lADOCbx2hs5Kp5M9zwAAAAGR6xZm","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6743070310","actor":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-06-05T05:57:05Z","state_reason":null,"performed_via_github_app":null},{"id":6743070322,"node_id":"MEE_lADOCbx2hs5Kp5M9zwAAAAGR6xZy","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6743070322","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-05T05:57:05Z","performed_via_github_app":null},{"id":6743070328,"node_id":"SE_lADOCbx2hs5Kp5M9zwAAAAGR6xZ4","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6743070328","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-05T05:57:05Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1149522991","html_url":"https://github.com/ludwig-ai/ludwig/issues/2075#issuecomment-1149522991","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2075","id":1149522991,"node_id":"IC_kwDOCbx2hs5EhFQv","user":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false},"created_at":"2022-06-08T06:39:01Z","updated_at":"2022-06-08T06:39:01Z","author_association":"NONE","body":"Hi @justinxzhao ! I recently came across a similar machine learning framework - [Lightwood ](https://github.com/mindsdb/lightwood). \r\n\r\nOn comparison with Ludwig, they both have functionalities to handle features of multiple input types, pre-process them based on their input type, encode the inputs, **_TRAIN THE MODEL USING THE ENCODED INPUT_** (emphasizing on the model), decode the outputs from the trained model into output features.\r\n\r\nIn Lightwood, the possible models that could be trained are provided here - [https://lightwood.io/mixer.html](https://lightwood.io/mixer.html)\r\n\r\nIn similar fashion, are there a list of possible models that could be trained using Ludwig? And if yes, how do we specify our preferred model to train (using the concated output from the combiner)?\r\n\r\nThanks!\r\n","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1149522991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false}},{"id":6766971273,"node_id":"REE_lADOCbx2hs5Kp5M9zwAAAAGTV8mJ","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6766971273","actor":{"login":"msakthiganesh","id":47854670,"node_id":"MDQ6VXNlcjQ3ODU0Njcw","avatar_url":"https://avatars.githubusercontent.com/u/47854670?v=4","gravatar_id":"","url":"https://api.github.com/users/msakthiganesh","html_url":"https://github.com/msakthiganesh","followers_url":"https://api.github.com/users/msakthiganesh/followers","following_url":"https://api.github.com/users/msakthiganesh/following{/other_user}","gists_url":"https://api.github.com/users/msakthiganesh/gists{/gist_id}","starred_url":"https://api.github.com/users/msakthiganesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msakthiganesh/subscriptions","organizations_url":"https://api.github.com/users/msakthiganesh/orgs","repos_url":"https://api.github.com/users/msakthiganesh/repos","events_url":"https://api.github.com/users/msakthiganesh/events{/privacy}","received_events_url":"https://api.github.com/users/msakthiganesh/received_events","type":"User","site_admin":false},"event":"reopened","commit_id":null,"commit_url":null,"created_at":"2022-06-08T06:39:01Z","state_reason":"reopened","performed_via_github_app":null},{"id":6766971292,"node_id":"MEE_lADOCbx2hs5Kp5M9zwAAAAGTV8mc","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6766971292","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-08T06:39:01Z","performed_via_github_app":null},{"id":6766971297,"node_id":"SE_lADOCbx2hs5Kp5M9zwAAAAGTV8mh","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6766971297","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-08T06:39:01Z","performed_via_github_app":null}]