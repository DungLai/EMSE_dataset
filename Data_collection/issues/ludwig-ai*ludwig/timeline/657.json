[{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/599846293","html_url":"https://github.com/ludwig-ai/ludwig/issues/657#issuecomment-599846293","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/657","id":599846293,"node_id":"MDEyOklzc3VlQ29tbWVudDU5OTg0NjI5Mw==","user":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"created_at":"2020-03-17T02:32:39Z","updated_at":"2020-03-17T02:32:39Z","author_association":"COLLABORATOR","body":"Is your dataset made of all unique inputs and outputs? In that case, if you are not using some pretrained embeddings it's really unlikely you are going to obtain a model the produces opposites for words it has never seen, as it does not have any representation for an unseen word and has never predicted a word that's the opposite of the specified word.. Those words are unique and treated like categories so the overall approch is hopeless. On the other hand you could set the level to characters and the model could learn something from it, like that in many cases preponing \"anti-\" to a ward gives it's opposite (I'm not really sure this is the correct example, as antiwar is not the oposite of war, but what I meant is that there could be some character sequences that can be learned for producing opposites in a limited number of cases).\r\nIf on the other hand you used word embeddings you could learna function, maybe even a single direction in the multidimensional embedding space, that let's you figure out the opposite. I would collect all the embeddings of those words and compute `avg_dir_opp = avg(word-opposite)` to obtain a direction vector that then you cna add to a word to obtain the position in space like `new_pos = new_word + avg_dir_opp` and then compare that position with all the other embeddings to figure out among all words which one is the opposite the the new word. A similar approach is used in thsi paper, but for computing verb affordances instead of opposite words: https://arxiv.org/abs/1703.03429","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/599846293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/599914268","html_url":"https://github.com/ludwig-ai/ludwig/issues/657#issuecomment-599914268","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/657","id":599914268,"node_id":"MDEyOklzc3VlQ29tbWVudDU5OTkxNDI2OA==","user":{"login":"Budapresst","id":22636225,"node_id":"MDQ6VXNlcjIyNjM2MjI1","avatar_url":"https://avatars.githubusercontent.com/u/22636225?v=4","gravatar_id":"","url":"https://api.github.com/users/Budapresst","html_url":"https://github.com/Budapresst","followers_url":"https://api.github.com/users/Budapresst/followers","following_url":"https://api.github.com/users/Budapresst/following{/other_user}","gists_url":"https://api.github.com/users/Budapresst/gists{/gist_id}","starred_url":"https://api.github.com/users/Budapresst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Budapresst/subscriptions","organizations_url":"https://api.github.com/users/Budapresst/orgs","repos_url":"https://api.github.com/users/Budapresst/repos","events_url":"https://api.github.com/users/Budapresst/events{/privacy}","received_events_url":"https://api.github.com/users/Budapresst/received_events","type":"User","site_admin":false},"created_at":"2020-03-17T07:17:10Z","updated_at":"2020-03-17T07:17:10Z","author_association":"NONE","body":"Thank you... Your answer has cleared things up for me.  I knew that my first experiment was rather pointless, but I guess being my first interaction with deep learning, I wanted to see Ludwig repeat output based on controlled input before making the next step and getting into actual predictions.  But, I see now that my model was probably the issue and I will try some more appropriate experiments for my next try.  Thank you very much for the explanation and the link to the affordances paper which was very interesting.","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/599914268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"Budapresst","id":22636225,"node_id":"MDQ6VXNlcjIyNjM2MjI1","avatar_url":"https://avatars.githubusercontent.com/u/22636225?v=4","gravatar_id":"","url":"https://api.github.com/users/Budapresst","html_url":"https://github.com/Budapresst","followers_url":"https://api.github.com/users/Budapresst/followers","following_url":"https://api.github.com/users/Budapresst/following{/other_user}","gists_url":"https://api.github.com/users/Budapresst/gists{/gist_id}","starred_url":"https://api.github.com/users/Budapresst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Budapresst/subscriptions","organizations_url":"https://api.github.com/users/Budapresst/orgs","repos_url":"https://api.github.com/users/Budapresst/repos","events_url":"https://api.github.com/users/Budapresst/events{/privacy}","received_events_url":"https://api.github.com/users/Budapresst/received_events","type":"User","site_admin":false}},{"id":3136103179,"node_id":"MDExOkNsb3NlZEV2ZW50MzEzNjEwMzE3OQ==","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/3136103179","actor":{"login":"Budapresst","id":22636225,"node_id":"MDQ6VXNlcjIyNjM2MjI1","avatar_url":"https://avatars.githubusercontent.com/u/22636225?v=4","gravatar_id":"","url":"https://api.github.com/users/Budapresst","html_url":"https://github.com/Budapresst","followers_url":"https://api.github.com/users/Budapresst/followers","following_url":"https://api.github.com/users/Budapresst/following{/other_user}","gists_url":"https://api.github.com/users/Budapresst/gists{/gist_id}","starred_url":"https://api.github.com/users/Budapresst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Budapresst/subscriptions","organizations_url":"https://api.github.com/users/Budapresst/orgs","repos_url":"https://api.github.com/users/Budapresst/repos","events_url":"https://api.github.com/users/Budapresst/events{/privacy}","received_events_url":"https://api.github.com/users/Budapresst/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-03-17T07:17:14Z","state_reason":null,"performed_via_github_app":null}]