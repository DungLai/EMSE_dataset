[{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/464163894","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-464163894","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":464163894,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NDE2Mzg5NA==","user":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"created_at":"2019-02-15T19:08:01Z","updated_at":"2019-02-15T19:08:01Z","author_association":"COLLABORATOR","body":"You can initialize form an existing Ludwig model with `--load_model`. As for using external pretrained models, at the moment pretrained embeddings are supported in all sequential encoders. Loading pretrained ResNet and VGG-16 is coming next, stay tuned for it. Or if you want to contribute it that would be great!","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/464163894/reactions","total_count":9,"+1":6,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false}},{"id":2143307531,"node_id":"MDEyOkxhYmVsZWRFdmVudDIxNDMzMDc1MzE=","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/2143307531","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-02-15T19:08:08Z","label":{"name":"enhancement","color":"a2eeef"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/471585824","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-471585824","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":471585824,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTU4NTgyNA==","user":{"login":"simonMoisselin","id":20187820,"node_id":"MDQ6VXNlcjIwMTg3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/20187820?v=4","gravatar_id":"","url":"https://api.github.com/users/simonMoisselin","html_url":"https://github.com/simonMoisselin","followers_url":"https://api.github.com/users/simonMoisselin/followers","following_url":"https://api.github.com/users/simonMoisselin/following{/other_user}","gists_url":"https://api.github.com/users/simonMoisselin/gists{/gist_id}","starred_url":"https://api.github.com/users/simonMoisselin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonMoisselin/subscriptions","organizations_url":"https://api.github.com/users/simonMoisselin/orgs","repos_url":"https://api.github.com/users/simonMoisselin/repos","events_url":"https://api.github.com/users/simonMoisselin/events{/privacy}","received_events_url":"https://api.github.com/users/simonMoisselin/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T15:25:10Z","updated_at":"2019-03-11T15:25:10Z","author_association":"NONE","body":"Hi @w4nderlust ,\r\n\r\nI really need ludwig to work with pre-trained models !\r\n\r\nAny tips on how you want to add (for example) a pretrained VGG-16 on your codebase ?\r\n\r\nI was thinking of using the same logic than sequential encoders:\r\n- adding a class named VGG16, in modules/images_encoder.py, using a class EmbedImage which play the same role of EmbedSequence. \r\n- adding a class named EmbedImage in embedding_modules.py\r\n- create some utils  functions in utils/data_utils.py for loading and downloading pre-trained model weights.\r\n\r\nThanks,\r\nSimon","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/471585824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"simonMoisselin","id":20187820,"node_id":"MDQ6VXNlcjIwMTg3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/20187820?v=4","gravatar_id":"","url":"https://api.github.com/users/simonMoisselin","html_url":"https://github.com/simonMoisselin","followers_url":"https://api.github.com/users/simonMoisselin/followers","following_url":"https://api.github.com/users/simonMoisselin/following{/other_user}","gists_url":"https://api.github.com/users/simonMoisselin/gists{/gist_id}","starred_url":"https://api.github.com/users/simonMoisselin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonMoisselin/subscriptions","organizations_url":"https://api.github.com/users/simonMoisselin/orgs","repos_url":"https://api.github.com/users/simonMoisselin/repos","events_url":"https://api.github.com/users/simonMoisselin/events{/privacy}","received_events_url":"https://api.github.com/users/simonMoisselin/received_events","type":"User","site_admin":false}},{"id":2194293943,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjE5NDI5Mzk0Mw==","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/2194293943","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-03-11T15:25:10Z","performed_via_github_app":null},{"id":2194293945,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDIxOTQyOTM5NDU=","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/2194293945","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-03-11T15:25:10Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/471636779","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-471636779","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":471636779,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTYzNjc3OQ==","user":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T17:20:19Z","updated_at":"2019-03-11T17:21:14Z","author_association":"COLLABORATOR","body":"@entruv it is something that we definitely want to do, it's just that we haven't prioritized it yet :)\r\nAnyway, if you have this urgency, I would actually go and implement it myself if I were you, it should be pretty simple. I would implement a VGGEncoder among image encoders that looks like this:\r\n```\r\nclass VGGEncoder:\r\n    def __init__(\r\n            self,\r\n            pretrained_model_path,\r\n            **kwargs\r\n    ):\r\n        self.vgg = load_vgg(pretrained_model_path)\r\n\r\n    def __call__(\r\n            self,\r\n            input_image,\r\n            regularizer,\r\n            dropout,\r\n            is_training\r\n    ):\r\n        hidden = self.vgg(\r\n            input_image,\r\n            regularizer,\r\n            dropout,\r\n            is_training=is_training\r\n        )\r\n        hidden, hidden_size = flatten(hidden)\r\n        return hidden, hidden_size\r\n```\r\nAs you noted, the bulk is in the `load_vgg` function that you would have to implement, but I believe it's not an enormous amount of work.\r\nThen, don't forget to add your encoder in the registry in `image_feature.py`:\r\n```\r\nimage_encoder_registry = {\r\n    'stacked_cnn': Stacked2DCNN,\r\n    'resnet': ResNetEncoder,\r\n    'vgg': VGGEncoder\r\n}\r\n```\r\nIf you do and you are willing to share it with the community we would really gladly accept your contribution!","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/471636779/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false}},{"id":2194666832,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjE5NDY2NjgzMg==","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/2194666832","actor":{"login":"simonMoisselin","id":20187820,"node_id":"MDQ6VXNlcjIwMTg3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/20187820?v=4","gravatar_id":"","url":"https://api.github.com/users/simonMoisselin","html_url":"https://github.com/simonMoisselin","followers_url":"https://api.github.com/users/simonMoisselin/followers","following_url":"https://api.github.com/users/simonMoisselin/following{/other_user}","gists_url":"https://api.github.com/users/simonMoisselin/gists{/gist_id}","starred_url":"https://api.github.com/users/simonMoisselin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonMoisselin/subscriptions","organizations_url":"https://api.github.com/users/simonMoisselin/orgs","repos_url":"https://api.github.com/users/simonMoisselin/repos","events_url":"https://api.github.com/users/simonMoisselin/events{/privacy}","received_events_url":"https://api.github.com/users/simonMoisselin/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-03-11T17:20:19Z","performed_via_github_app":null},{"id":2194666836,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDIxOTQ2NjY4MzY=","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/2194666836","actor":{"login":"simonMoisselin","id":20187820,"node_id":"MDQ6VXNlcjIwMTg3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/20187820?v=4","gravatar_id":"","url":"https://api.github.com/users/simonMoisselin","html_url":"https://github.com/simonMoisselin","followers_url":"https://api.github.com/users/simonMoisselin/followers","following_url":"https://api.github.com/users/simonMoisselin/following{/other_user}","gists_url":"https://api.github.com/users/simonMoisselin/gists{/gist_id}","starred_url":"https://api.github.com/users/simonMoisselin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonMoisselin/subscriptions","organizations_url":"https://api.github.com/users/simonMoisselin/orgs","repos_url":"https://api.github.com/users/simonMoisselin/repos","events_url":"https://api.github.com/users/simonMoisselin/events{/privacy}","received_events_url":"https://api.github.com/users/simonMoisselin/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-03-11T17:20:19Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/567742797","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-567742797","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":567742797,"node_id":"MDEyOklzc3VlQ29tbWVudDU2Nzc0Mjc5Nw==","user":{"login":"jdunnmon","id":14251104,"node_id":"MDQ6VXNlcjE0MjUxMTA0","avatar_url":"https://avatars.githubusercontent.com/u/14251104?v=4","gravatar_id":"","url":"https://api.github.com/users/jdunnmon","html_url":"https://github.com/jdunnmon","followers_url":"https://api.github.com/users/jdunnmon/followers","following_url":"https://api.github.com/users/jdunnmon/following{/other_user}","gists_url":"https://api.github.com/users/jdunnmon/gists{/gist_id}","starred_url":"https://api.github.com/users/jdunnmon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdunnmon/subscriptions","organizations_url":"https://api.github.com/users/jdunnmon/orgs","repos_url":"https://api.github.com/users/jdunnmon/repos","events_url":"https://api.github.com/users/jdunnmon/events{/privacy}","received_events_url":"https://api.github.com/users/jdunnmon/received_events","type":"User","site_admin":false},"created_at":"2019-12-20T00:58:51Z","updated_at":"2019-12-20T00:58:51Z","author_association":"NONE","body":"Has there been any progress on this?  Would like to use Ludwig for a couple of projects, but would need access to the broader world of pretrained checkpoints, and it's not 100% clear to me how to do this without writing a new encoder for each architecture I want to use.  Thanks!","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/567742797/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"jdunnmon","id":14251104,"node_id":"MDQ6VXNlcjE0MjUxMTA0","avatar_url":"https://avatars.githubusercontent.com/u/14251104?v=4","gravatar_id":"","url":"https://api.github.com/users/jdunnmon","html_url":"https://github.com/jdunnmon","followers_url":"https://api.github.com/users/jdunnmon/followers","following_url":"https://api.github.com/users/jdunnmon/following{/other_user}","gists_url":"https://api.github.com/users/jdunnmon/gists{/gist_id}","starred_url":"https://api.github.com/users/jdunnmon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdunnmon/subscriptions","organizations_url":"https://api.github.com/users/jdunnmon/orgs","repos_url":"https://api.github.com/users/jdunnmon/repos","events_url":"https://api.github.com/users/jdunnmon/events{/privacy}","received_events_url":"https://api.github.com/users/jdunnmon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585015634","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-585015634","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":585015634,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NTAxNTYzNA==","user":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false},"created_at":"2020-02-12T03:56:42Z","updated_at":"2020-02-12T03:56:42Z","author_association":"COLLABORATOR","body":"@w4nderlust   If there is still interest in a` VGGEncoder`, I'm willing to take a stab at implementing it.","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585015634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false}},{"id":3029252094,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MzAyOTI1MjA5NA==","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/3029252094","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-02-12T03:56:42Z","performed_via_github_app":null},{"id":3029252097,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDMwMjkyNTIwOTc=","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/3029252097","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-02-12T03:56:42Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585194883","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-585194883","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":585194883,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NTE5NDg4Mw==","user":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false},"created_at":"2020-02-12T13:02:45Z","updated_at":"2020-02-12T13:02:45Z","author_association":"COLLABORATOR","body":"A point of clarification for the current proposal:  In regards to the `VGGEncoder`, I'm thinking of creating the VGG equivalent to the `ResNetEncoder`, i.e., the user will be able to specify a VGG16 or VGG19 network architecture, e.g., have parameter `vgg_size=[16 | 19]`.  \r\n\r\nLoading of a pre-trained VGG model will be a separate function.","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585194883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585412109","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-585412109","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":585412109,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NTQxMjEwOQ==","user":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"created_at":"2020-02-12T20:52:45Z","updated_at":"2020-02-12T20:52:45Z","author_association":"COLLABORATOR","body":"> A point of clarification for the current proposal: In regards to the `VGGEncoder`, I'm thinking of creating the VGG equivalent to the `ResNetEncoder`, i.e., the user will be able to specify a VGG16 or VGG19 network architecture, e.g., have parameter `vgg_size=[16 | 19]`.\r\n> \r\n> Loading of a pre-trained VGG model will be a separate function.\r\n\r\nMakes sense, although I believe 2 encoders for pretrained ResNet and pretrained VGG would be more valuable. But ideally we want to have both vgg and resnet both trained from scratch and pretrained.","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585412109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585468674","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-585468674","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":585468674,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NTQ2ODY3NA==","user":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false},"created_at":"2020-02-12T23:23:24Z","updated_at":"2020-02-12T23:23:24Z","author_association":"COLLABORATOR","body":"OK...I understand \"2 encoders for pretrained ResNet and pretrained VGG would be more valuable.\"  I'll shift the focus.\r\nA few questions:\r\n* In regards to ResNet, do you want the encoder for \"pretrained ResNet\" to be **different from the existing** `ResNetEncoder` class or should I **extend the existing** `ResNetEncoder` class to support loading pretrained weights?   I'm thinking the **preferred approach** is to have different encoder classes because Resnet and VGG have well know predefined structures. There is no need to specify details of the network architecture.  If I'm heading down the wrong path, let me know.\r\n* As for specifying the location of the pre-trained weights, I'm thinking of adding a key to the model definition structure, something like `pretrained_weights: <file location>`\r\n\r\nMy current thinking on model definition for pretrained Resnet  would look something like this:\r\n``` \r\ninput_features:\r\n  - name: image_column_name\r\n     type: image\r\n     encoder: pretrained_resnet\r\n     resnet_size: 50\r\n     pretrained_weights: ./my_resnet/pre-trained-weights\r\n```\r\nPretrained VGG would be something like\r\n```\r\ninput_features:\r\n  - name: image_column_name\r\n     type: image\r\n     encoder: pretrained_vgg\r\n     resnet_size: 16\r\n     pretrained_weights: ./my_vgg/pre-trained-weights\r\n```\r\n\r\n* Is it correct to assume that the format of the pretrained weights that will be loaded is in the format created by tf.compat.v1.train.Saver()?\r\n* I've read in another issue that work is underway for Ludwig to support TF2.   Any guidance on this particular issue?  Absent any guidance, I'm following existing TF api usage.","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585468674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585476809","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-585476809","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":585476809,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NTQ3NjgwOQ==","user":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"created_at":"2020-02-12T23:50:15Z","updated_at":"2020-02-12T23:50:15Z","author_association":"COLLABORATOR","body":"I guess one thing we could do in the future is calling VGG adn ResNet ecnoders that only load pretrained models `vgg` and `resnet` and calling the ones that don't load weights like `custom_vgg` and `custom_resnet` for clarity.\r\n\r\nRegarding how to structure parameters, yes what you are suggesting makes sense. If you want a reference on a similar implementation for we did for BERT you can check the BERT encoder here: https://github.com/uber/ludwig/blob/master/ludwig/models/modules/sequence_encoders.py#L1663\r\n\r\nOne additional caveat is that VGG and ResNet expect input image tensors to be of a specific size. For this reason, in all examples and docstrings and comments, you should point out that the use has to either provide images of the right size or has to specify image preprocessing parameters accordingly (like height, width and resizing strategy).\r\nAn additional caveat is  that the user may not want to collect the representations from the last layer but from previous ones. I would add an optional parameter containing the name of the layer for obtaining the representations, by default it's the one before the final transformation into logits.\r\nFinally, finetuning is an additional parameter, by default I would say no finetuning.\r\n\r\nRegarding the format, yes the move to TF2 may change things, that's actually why I wanted to complete that one first before addressing other feature requests. After TF2 one could imagine to use Keras models for that for instance. Otherwise we can definitely find some place where the checkpoints are provided and use those instead, but knowing that in the future we may want to switch.\r\n\r\nFinal consideration, which is an issue also emerging in the BERT case that we haven't solved yet is the following: after I save my Ludwig model, the weights will contain also the weights of the VGG or ResNet encoder, so when those models are loaded for either further tuning or for serving there is no need to actually bring the original checkpoints with you, but at the moment in the BERT case you actually have to as that is a required parameter. One option here could be the following: if the weights are specified, then fine, if they are not, the model is randomly initialized, as then the saver that restores the weights will override those random weights, but we have to notify the user that if this is loading a previously trained Ludwig model this is fine, but if this is the first training, that is not fine and you have to specify the checkpoint position. I'm open to alternative solutions here.","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/585476809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1163770483","html_url":"https://github.com/ludwig-ai/ludwig/issues/93#issuecomment-1163770483","issue_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/93","id":1163770483,"node_id":"IC_kwDOCbx2hs5FXbpz","user":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"created_at":"2022-06-22T23:40:08Z","updated_at":"2022-06-22T23:40:08Z","author_association":"COLLABORATOR","body":"Ludwig supports reloading and continuing training.\r\n\r\nLudwig has also integrated with Huggingface for loading and fine-tuning pretrained models.\r\n\r\nhttps://ludwig-ai.github.io/ludwig-docs/latest/configuration/features/text_features/#huggingface-encoders","reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/comments/1163770483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false}},{"id":6861380385,"node_id":"CE_lADOCbx2hs4YfBc-zwAAAAGY-Fsh","url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/events/6861380385","actor":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-06-22T23:40:08Z","state_reason":null,"performed_via_github_app":null}]