{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/661","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/661/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/661/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/661/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/661","id":586147442,"node_id":"MDU6SXNzdWU1ODYxNDc0NDI=","number":661,"title":"Difference between 'ludwig predict' and 'ludwig serve'","user":{"login":"myzarak","id":2746389,"node_id":"MDQ6VXNlcjI3NDYzODk=","avatar_url":"https://avatars.githubusercontent.com/u/2746389?v=4","gravatar_id":"","url":"https://api.github.com/users/myzarak","html_url":"https://github.com/myzarak","followers_url":"https://api.github.com/users/myzarak/followers","following_url":"https://api.github.com/users/myzarak/following{/other_user}","gists_url":"https://api.github.com/users/myzarak/gists{/gist_id}","starred_url":"https://api.github.com/users/myzarak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/myzarak/subscriptions","organizations_url":"https://api.github.com/users/myzarak/orgs","repos_url":"https://api.github.com/users/myzarak/repos","events_url":"https://api.github.com/users/myzarak/events{/privacy}","received_events_url":"https://api.github.com/users/myzarak/received_events","type":"User","site_admin":false},"labels":[{"id":1174068775,"node_id":"MDU6TGFiZWwxMTc0MDY4Nzc1","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/waiting%20for%20answer","name":"waiting for answer","color":"fff36b","default":false,"description":"Further information is requested"},{"id":1434966350,"node_id":"MDU6TGFiZWwxNDM0OTY2MzUw","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/looking%20into%20it","name":"looking into it","color":"ffa54f","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-03-23T11:45:38Z","updated_at":"2020-09-29T00:02:26Z","closed_at":"2020-09-29T00:02:26Z","author_association":"NONE","active_lock_reason":null,"body":"# Description of the bug\r\nHello,\r\n\r\nI find an issue with the contribution serve.py.\r\n\r\nI tried to use 'ludwig serve' with a python client to send data to a trained model but I notice a difference if I send a csv file to 'ludwig predict' again sending file to 'ludwig serve' through python client.\r\n\r\nAfter investigation, I deduce that the problem is due to a wrong managing of null input field.\r\n\r\nBasically, 'Ludwig Serve' requiered all input features (function convert_input from serve.py) , so you need to define all input features inside the client.\r\nBut convert_input() not allow to retrieve None data (None / \"\" / '').\r\n\r\nIs it possible to manage empty data into convert_input ? Or to add a new feature in serve.py in order to enable to request the REST API directly with a json ? ( Maybe we could protect the input data with a serializer construct with pydentic build by using input_features )\r\n\r\n# To Reproduce\r\n1. Load your model: \r\nludwig serve --model_path ../../ --port 5000\r\n\r\n2. Request the server with a client:\r\n\r\nPython client which send text data to ludwig serve\r\nimport requests\r\nfile={\r\n        'some input parameters': (None, 'some text data'),\r\n        'some none imput parameters': (None, ''),\r\n        'some none imput parameters': (None, None), # Raise an error on client side\r\n        'some none imput parameters': None, # Raise an error on client side\r\n    }\r\nr = requests.post(url, files=file)\r\nprint(r.json())\r\n\r\n# Environment\r\n- OS: Windows 10 Pro\r\n- Python version: 3.6.8\r\n- Ludwig version: 0.2.1 & 0.2.2.3\r\n\r\n#Additional context\r\nIn addition, find below my json request.body json parser:\r\n\r\nInitial function\r\n@app.post('/predict')\r\nasync def predict(request: Request):\r\n    form = await request.form()\r\n    files, entry = convert_input(form)\r\n    \r\n\r\nI test to add a new function to serve.py which retrieve json directly from body request (Json allow safely to initialize None field)\r\nThis different approach produce the same results as 'ludwig predict'\r\n\r\nimport json\r\n@app.post('/predict_json')\r\nasync def predict_json(request: Request):\r\n    entry = await request.body()\r\n    entry = json.loads(entry.decode())\r\n    ","closed_by":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/661/timeline","performed_via_github_app":null,"state_reason":"completed"}