{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2158","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2158/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2158/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2158/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/2158","id":1273950231,"node_id":"I_kwDOCbx2hs5L7vAX","number":2158,"title":"Add the ability to visualize and select a threshold for binary postprocessing","user":{"login":"geoffreyangus","id":29719151,"node_id":"MDQ6VXNlcjI5NzE5MTUx","avatar_url":"https://avatars.githubusercontent.com/u/29719151?v=4","gravatar_id":"","url":"https://api.github.com/users/geoffreyangus","html_url":"https://github.com/geoffreyangus","followers_url":"https://api.github.com/users/geoffreyangus/followers","following_url":"https://api.github.com/users/geoffreyangus/following{/other_user}","gists_url":"https://api.github.com/users/geoffreyangus/gists{/gist_id}","starred_url":"https://api.github.com/users/geoffreyangus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geoffreyangus/subscriptions","organizations_url":"https://api.github.com/users/geoffreyangus/orgs","repos_url":"https://api.github.com/users/geoffreyangus/repos","events_url":"https://api.github.com/users/geoffreyangus/events{/privacy}","received_events_url":"https://api.github.com/users/geoffreyangus/received_events","type":"User","site_admin":false},"labels":[{"id":1174068771,"node_id":"MDU6TGFiZWwxMTc0MDY4Nzcx","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/feature","name":"feature","color":"0377d6","default":false,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"geoffreyangus","id":29719151,"node_id":"MDQ6VXNlcjI5NzE5MTUx","avatar_url":"https://avatars.githubusercontent.com/u/29719151?v=4","gravatar_id":"","url":"https://api.github.com/users/geoffreyangus","html_url":"https://github.com/geoffreyangus","followers_url":"https://api.github.com/users/geoffreyangus/followers","following_url":"https://api.github.com/users/geoffreyangus/following{/other_user}","gists_url":"https://api.github.com/users/geoffreyangus/gists{/gist_id}","starred_url":"https://api.github.com/users/geoffreyangus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geoffreyangus/subscriptions","organizations_url":"https://api.github.com/users/geoffreyangus/orgs","repos_url":"https://api.github.com/users/geoffreyangus/repos","events_url":"https://api.github.com/users/geoffreyangus/events{/privacy}","received_events_url":"https://api.github.com/users/geoffreyangus/received_events","type":"User","site_admin":false},"assignees":[{"login":"geoffreyangus","id":29719151,"node_id":"MDQ6VXNlcjI5NzE5MTUx","avatar_url":"https://avatars.githubusercontent.com/u/29719151?v=4","gravatar_id":"","url":"https://api.github.com/users/geoffreyangus","html_url":"https://github.com/geoffreyangus","followers_url":"https://api.github.com/users/geoffreyangus/followers","following_url":"https://api.github.com/users/geoffreyangus/following{/other_user}","gists_url":"https://api.github.com/users/geoffreyangus/gists{/gist_id}","starred_url":"https://api.github.com/users/geoffreyangus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geoffreyangus/subscriptions","organizations_url":"https://api.github.com/users/geoffreyangus/orgs","repos_url":"https://api.github.com/users/geoffreyangus/repos","events_url":"https://api.github.com/users/geoffreyangus/events{/privacy}","received_events_url":"https://api.github.com/users/geoffreyangus/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-06-16T18:43:19Z","updated_at":"2022-06-23T18:39:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The binary classification threshold `threshold` postprocesses probabilities as either negatives (<`threshold`) or positives (>=`threshold`). This is currently a value that one would set prior to training, and is often set to its default as 0.5. If the user wanted to change the threshold of their model upon discovery of an ideal operating point, they would edit the threshold in the config after training. However, it is currently somewhat difficult to find said operating point.\r\n\r\nIn class imbalanced settings, it is often desired to set the threshold to some value != 0.5. For example, if the user wants to have high precision at the expense of some recall of a rare positive, the user may want to set a higher threshold. We want to provide two new functionalities: (1) a visualization of `threshold` vs. `metric`, where the metrics plotted are those that are threshold-dependent (i.e. accuracy, precision, recall, f1, etc.), and (2) a lightweight ability to experiment with different thresholds from the `LudwigModel.predict` function.\r\n\r\nSuch functionality would enable users to analyze and ultimately select the optimal threshold for their use case. \r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2158/timeline","performed_via_github_app":null,"state_reason":null}