{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/574","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/574/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/574/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/574/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/574","id":524048025,"node_id":"MDU6SXNzdWU1MjQwNDgwMjU=","number":574,"title":"Proposal:  Training performance improvements on cpu-only platforms","user":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false},"labels":[{"id":1174068771,"node_id":"MDU6TGFiZWwxMTc0MDY4Nzcx","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/feature","name":"feature","color":"0377d6","default":false,"description":"New feature or request"},{"id":1434966350,"node_id":"MDU6TGFiZWwxNDM0OTY2MzUw","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/looking%20into%20it","name":"looking into it","color":"ffa54f","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-11-17T21:13:11Z","updated_at":"2020-02-15T07:10:26Z","closed_at":"2020-02-15T04:05:33Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nNot related to a problem.\r\n\r\n**Describe the use case**\r\n\r\nIn reviewing Ludwig's code base, I noticed in `ludwig/utils/tf_utils.py` this [code fragment](https://github.com/uber/ludwig/blob/master/ludwig/utils/tf_utils.py#L43):\r\n``` \r\ndef get_tf_config(gpus=None, gpu_fraction=1, horovod=None,\r\n                  allow_parallel_threads=True):\r\n    intra_op_parallelism_threads = 2  # defult in tensorflow\r\n    inter_op_parallelism_threads = 5  # defult in tensorflow\r\n```\r\n\r\nThis sequence hard codes Tensorflow's configuration parameter `intra_op_parallelism_threads` to the value '2'.  According to [Tensorflow's documentation](https://github.com/tensorflow/tensorflow/blob/v1.14.0/tensorflow/core/protobuf/config.proto#L341) setting `intra_op_parallelism_threads=0` allows the Tensorflow's run-time to select a system appropriate value.\r\n\r\nThis chart shows the effect of setting `intra_op_parallelism_threads = 0` on two different platforms: MacBookPro (8vcpu/16GB RAM) and an AWS c5.4xlarge (16vcpu/32GB RAM).  As the chart shows, reductions in the training time per epoch is possible with the '0' setting:\r\n![intra_op_effect_on_training](https://user-images.githubusercontent.com/1425269/69014012-14daae00-0954-11ea-92ca-b8e21f1a73bb.png)\r\n\r\n\r\nNote: \r\n\r\n* This reflects testing only with a CNN architecture.  I have not done testing on other types of neural network architectures.  I'm assuming similar results will hold with other types of neural network architectures.\r\n* This proposal covers cpu-only platforms and not gpu-enabled platforms.\r\n* No assessment on changing the default value of `inter_op_parallelism_threads`\r\n\r\n**Describe the solution you'd like**\r\n\r\n* For `intra_op_parallelism_threads` change default value from '2' to '0'.\r\n* Provide a mechanism to override the default value to a user specified value.  The override mechanism could be provided in one of two ways:\r\n  * Adding a key to the `training` section in the model definition, e.g.,\r\n  ```\r\n  training:\r\n    tensorflow_intra_op_parallelism_threads: 2\r\n  ```\r\n  * Add parameter to LudwigModel's `train` method, e.g., \r\n  ``` \r\n  def train(\r\n    . . .\r\n    tensorflow_intra_op_parallelism_threads = 0,\r\n    . . .\r\n    ):\r\n      . . .\r\n  ```\r\n    Ludwig's cli will be updated to reflect this additional parameter.\r\n  \r\n\r\n**Describe alternatives you've considered**\r\n\r\nSee previous section.\r\n\r\n**Additional context**\r\n\r\nIf this proposal is acceptable, I'm willing to work on its implementation.  I'll need guidance on the override mechanism.\r\n\r\nIf there is interest, these are the training logs from the benchmark training runs.\r\n[intra_op_2_macbook.txt](https://github.com/uber/ludwig/files/3856096/intra_op_2_macbook.txt)\r\n[intra_op_0_macbook.txt](https://github.com/uber/ludwig/files/3856097/intra_op_0_macbook.txt)\r\n[intra_op_2_aws.txt](https://github.com/uber/ludwig/files/3856098/intra_op_2_aws.txt)\r\n[intra_op_0_aws.txt](https://github.com/uber/ludwig/files/3856099/intra_op_0_aws.txt)\r\n\r\n\r\n\r\n\r\n","closed_by":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/574/timeline","performed_via_github_app":null,"state_reason":"completed"}