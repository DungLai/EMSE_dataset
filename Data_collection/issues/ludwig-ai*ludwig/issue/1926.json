{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1926","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1926/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1926/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1926/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/1926","id":1203883473,"node_id":"I_kwDOCbx2hs5Hwc3R","number":1926,"title":"Consistency between modules: input features, output features, encoders, decoders and combiners","user":{"login":"dantreiman","id":687280,"node_id":"MDQ6VXNlcjY4NzI4MA==","avatar_url":"https://avatars.githubusercontent.com/u/687280?v=4","gravatar_id":"","url":"https://api.github.com/users/dantreiman","html_url":"https://github.com/dantreiman","followers_url":"https://api.github.com/users/dantreiman/followers","following_url":"https://api.github.com/users/dantreiman/following{/other_user}","gists_url":"https://api.github.com/users/dantreiman/gists{/gist_id}","starred_url":"https://api.github.com/users/dantreiman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dantreiman/subscriptions","organizations_url":"https://api.github.com/users/dantreiman/orgs","repos_url":"https://api.github.com/users/dantreiman/repos","events_url":"https://api.github.com/users/dantreiman/events{/privacy}","received_events_url":"https://api.github.com/users/dantreiman/received_events","type":"User","site_admin":false},"labels":[{"id":4032822844,"node_id":"LA_kwDOCbx2hs7wX_48","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/productivity%20and%20code%20quality","name":"productivity and code quality","color":"bfd4f2","default":false,"description":"Engineer productivity, maintainability, consistency, readability"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-04-13T23:33:28Z","updated_at":"2022-04-13T23:33:28Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"It would improve productivity if we used a consistent structure for all of these ludwig modules which are created from a config dict (which will soon be a `dataclass`)\r\n\r\nWe should makes these as consistent as possible, using the same pattern for class declaration, config, and registration.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1926/timeline","performed_via_github_app":null,"state_reason":null}