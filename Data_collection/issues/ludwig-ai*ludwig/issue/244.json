{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/244","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/244/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/244/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/244/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/244","id":425603298,"node_id":"MDU6SXNzdWU0MjU2MDMyOTg=","number":244,"title":"Preprocessing for univariate/multivariate timeseries ?","user":{"login":"yanisIk","id":4313018,"node_id":"MDQ6VXNlcjQzMTMwMTg=","avatar_url":"https://avatars.githubusercontent.com/u/4313018?v=4","gravatar_id":"","url":"https://api.github.com/users/yanisIk","html_url":"https://github.com/yanisIk","followers_url":"https://api.github.com/users/yanisIk/followers","following_url":"https://api.github.com/users/yanisIk/following{/other_user}","gists_url":"https://api.github.com/users/yanisIk/gists{/gist_id}","starred_url":"https://api.github.com/users/yanisIk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanisIk/subscriptions","organizations_url":"https://api.github.com/users/yanisIk/orgs","repos_url":"https://api.github.com/users/yanisIk/repos","events_url":"https://api.github.com/users/yanisIk/events{/privacy}","received_events_url":"https://api.github.com/users/yanisIk/received_events","type":"User","site_admin":false},"labels":[{"id":1174068771,"node_id":"MDU6TGFiZWwxMTc0MDY4Nzcx","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/feature","name":"feature","color":"0377d6","default":false,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-26T19:15:52Z","updated_at":"2019-07-30T08:13:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nComplexity of preprocessing/transforming data for LSTM networks.\r\n\r\n**Describe the use case**\r\nMost timeseries data come in the format where each row represents a timestamp or step.\r\nThe generic preprocessing step for timeseries/sequences is to transform N rows to 1 row, using a sliding window for example.\r\n\r\n**Describe the solution you'd like**\r\nA preprocessing feature that transforms N rows into one row, that supports sliding window or tumbling window and that supports univariate or multivariate timeseries/sequences.\r\n\r\nInput: \r\n\r\n- time, featureA, featureB, label\r\n- 1,         a,             1            X\r\n- 2,        b,             2            Y\r\n- 3,        c,             3            X\r\n- 4,        d,             4            Y\r\n\r\nParams: timeColumn=\"time\", N=3, WindowType=\"sliding\" and label=[\"label\"]\r\n\r\nOutput:\r\n\r\n- featureA, featureB, label\r\n- [a, b, c],  [1, 2, 3]    X\r\n- [b, c, d],  [2, 3, 4]   Y\r\n\r\n\r\n**Describe alternatives you've considered**\r\nDoing it by hand everytime.\r\n\r\nI'm not very proficient in Python and manipulating matrices and multiple for loops can become confusing and very error prone.\r\nI'm looking for a simple script that can do that, even if it's not directly integrated as a preprocessor such as tokenizers.\r\n\r\nThanks","closed_by":null,"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/244/timeline","performed_via_github_app":null,"state_reason":null}