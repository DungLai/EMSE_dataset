{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2181","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2181/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2181/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2181/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/2181","id":1279262085,"node_id":"I_kwDOCbx2hs5MP_2F","number":2181,"title":"Add in-training tooling to find a more optimal threshold for binary classification.","user":{"login":"justinxzhao","id":3459541,"node_id":"MDQ6VXNlcjM0NTk1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/3459541?v=4","gravatar_id":"","url":"https://api.github.com/users/justinxzhao","html_url":"https://github.com/justinxzhao","followers_url":"https://api.github.com/users/justinxzhao/followers","following_url":"https://api.github.com/users/justinxzhao/following{/other_user}","gists_url":"https://api.github.com/users/justinxzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/justinxzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinxzhao/subscriptions","organizations_url":"https://api.github.com/users/justinxzhao/orgs","repos_url":"https://api.github.com/users/justinxzhao/repos","events_url":"https://api.github.com/users/justinxzhao/events{/privacy}","received_events_url":"https://api.github.com/users/justinxzhao/received_events","type":"User","site_admin":false},"labels":[{"id":1174068771,"node_id":"MDU6TGFiZWwxMTc0MDY4Nzcx","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/feature","name":"feature","color":"0377d6","default":false,"description":"New feature or request"},{"id":3602609750,"node_id":"LA_kwDOCbx2hs7Wu3ZW","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/release-0.6","name":"release-0.6","color":"d4c5f9","default":false,"description":"Feature to be implemented in v0.6"}],"state":"open","locked":false,"assignee":{"login":"geoffreyangus","id":29719151,"node_id":"MDQ6VXNlcjI5NzE5MTUx","avatar_url":"https://avatars.githubusercontent.com/u/29719151?v=4","gravatar_id":"","url":"https://api.github.com/users/geoffreyangus","html_url":"https://github.com/geoffreyangus","followers_url":"https://api.github.com/users/geoffreyangus/followers","following_url":"https://api.github.com/users/geoffreyangus/following{/other_user}","gists_url":"https://api.github.com/users/geoffreyangus/gists{/gist_id}","starred_url":"https://api.github.com/users/geoffreyangus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geoffreyangus/subscriptions","organizations_url":"https://api.github.com/users/geoffreyangus/orgs","repos_url":"https://api.github.com/users/geoffreyangus/repos","events_url":"https://api.github.com/users/geoffreyangus/events{/privacy}","received_events_url":"https://api.github.com/users/geoffreyangus/received_events","type":"User","site_admin":false},"assignees":[{"login":"geoffreyangus","id":29719151,"node_id":"MDQ6VXNlcjI5NzE5MTUx","avatar_url":"https://avatars.githubusercontent.com/u/29719151?v=4","gravatar_id":"","url":"https://api.github.com/users/geoffreyangus","html_url":"https://github.com/geoffreyangus","followers_url":"https://api.github.com/users/geoffreyangus/followers","following_url":"https://api.github.com/users/geoffreyangus/following{/other_user}","gists_url":"https://api.github.com/users/geoffreyangus/gists{/gist_id}","starred_url":"https://api.github.com/users/geoffreyangus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geoffreyangus/subscriptions","organizations_url":"https://api.github.com/users/geoffreyangus/orgs","repos_url":"https://api.github.com/users/geoffreyangus/repos","events_url":"https://api.github.com/users/geoffreyangus/events{/privacy}","received_events_url":"https://api.github.com/users/geoffreyangus/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-06-22T00:07:41Z","updated_at":"2022-06-23T20:10:53Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Ludwig uses a default threshold of 0.5 to calculate accuracy for binary classification problems. However, it's highly possible, especially for imbalanced datasets that a threshold of 0.5 is [not the best threshold to use](https://machinelearningmastery.com/threshold-moving-for-imbalanced-classification/).\r\n\r\nThe AUC measures the performance of a binary classifier averaged across all possible decision thresholds, and is commonly used to determine a better threshold that gets a better balance of precision and recall.\r\n\r\nOne such algorithmic outline, proposed by @geoffreyangus and @w4nderlust:\r\n\r\n```python\r\ndef find_best_threshold(model, output_feature_name, dataset, metric, thresholds:  range(0, 1, 0.05)):\r\n  probabilities = model.predict(dataset)[output_feature_name]['probabilities']\r\n  scores = []\r\n  for threshold in thresholds:\r\n    preds = probabilities[:, 1] > threshold\r\n    metric_score = metric(preds, targets)  # TODO: extract targets from `dataset`\r\n    scores.append(metric_score)\r\n  return threshold[argmax(scores)]\r\n```\r\n\r\nBy default, the optimal threshold should be calculated at the end of the training phase.\r\n\r\nIt would also be useful to expose this as a standalone API.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2181/timeline","performed_via_github_app":null,"state_reason":null}