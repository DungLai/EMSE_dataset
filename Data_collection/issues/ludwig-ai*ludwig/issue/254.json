{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/254","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/254/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/254/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/254/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/254","id":426289499,"node_id":"MDU6SXNzdWU0MjYyODk0OTk=","number":254,"title":"Training model outputs and error that I am unable to reference: Key Error: 'a'","user":{"login":"TimusLetap","id":28797042,"node_id":"MDQ6VXNlcjI4Nzk3MDQy","avatar_url":"https://avatars.githubusercontent.com/u/28797042?v=4","gravatar_id":"","url":"https://api.github.com/users/TimusLetap","html_url":"https://github.com/TimusLetap","followers_url":"https://api.github.com/users/TimusLetap/followers","following_url":"https://api.github.com/users/TimusLetap/following{/other_user}","gists_url":"https://api.github.com/users/TimusLetap/gists{/gist_id}","starred_url":"https://api.github.com/users/TimusLetap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TimusLetap/subscriptions","organizations_url":"https://api.github.com/users/TimusLetap/orgs","repos_url":"https://api.github.com/users/TimusLetap/repos","events_url":"https://api.github.com/users/TimusLetap/events{/privacy}","received_events_url":"https://api.github.com/users/TimusLetap/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-03-28T04:12:08Z","updated_at":"2019-03-29T05:35:31Z","closed_at":"2019-03-28T20:27:09Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nTraining model doesn't run.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n```\r\nfrom ludwig import LudwigModel\r\n\r\nludwig_model = LudwigModel(model_definition, logging_level=40)\r\ntrain_stats = ludwig_model.train(data_df= dataset)\r\n```\r\n \r\n```\r\n\r\n> ---------------------------------------------------------------------------\r\n> KeyError                                  Traceback (most recent call last)\r\n> /usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)\r\n>    2524             try:\r\n> -> 2525                 return self._engine.get_loc(key)\r\n>    2526             except KeyError:\r\n> \r\n> pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n> \r\n> pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n> \r\n> pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n> \r\n> pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n> \r\n> KeyError: 'a'\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> KeyError                                  Traceback (most recent call last)\r\n> <ipython-input-29-8534bb58fa69> in <module>()\r\n>       4 \r\n>       5 ludwig_model = LudwigModel(model_definition, logging_level=40)\r\n> ----> 6 train_stats = ludwig_model.train(data_df= dataset)\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/ludwig/api.py in train(self, data_df, data_train_df, data_validation_df, data_test_df, data_csv, data_train_csv, data_validation_csv, data_test_csv, data_hdf5, data_train_hdf5, data_validation_hdf5, data_test_hdf5, train_set_metadata_json, dataset_type, model_name, model_load_path, model_resume_path, skip_save_model, skip_save_progress, skip_save_log, skip_save_processed_input, output_directory, gpus, gpu_fraction, random_seed, logging_level, debug, **kwargs)\r\n>     462                 preprocessing_params=\r\n>     463                 self.model_definition['preprocessing'],\r\n> --> 464                 random_seed=random_seed)\r\n>     465         else:\r\n>     466             (\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/ludwig/data/preprocessing.py in preprocess_for_training(model_definition, dataset_type, data_df, data_train_df, data_validation_df, data_test_df, data_csv, data_train_csv, data_validation_csv, data_test_csv, data_hdf5, data_train_hdf5, data_validation_hdf5, data_test_hdf5, train_set_metadata_json, skip_save_processed_input, preprocessing_params, random_seed)\r\n>     391             features,\r\n>     392             preprocessing_params,\r\n> --> 393             random_seed=random_seed\r\n>     394         )\r\n>     395         if not skip_save_processed_input:\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/ludwig/data/preprocessing.py in build_dataset_df(dataset_df, features, global_preprocessing_parameters, train_set_metadata, random_seed, **kwargs)\r\n>      80             dataset_df,\r\n>      81             features,\r\n> ---> 82             global_preprocessing_parameters\r\n>      83         )\r\n>      84 \r\n> \r\n> /usr/local/lib/python3.6/dist-packages/ludwig/data/preprocessing.py in build_metadata(dataset_df, features, global_preprocessing_parameters)\r\n>     120             ]\r\n>     121         train_set_metadata[feature['name']] = get_feature_meta(\r\n> --> 122             dataset_df[feature['name']].astype(str),\r\n>     123             preprocessing_parameters\r\n>     124         )\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/pandas/core/frame.py in __getitem__(self, key)\r\n>    2137             return self._getitem_multilevel(key)\r\n>    2138         else:\r\n> -> 2139             return self._getitem_column(key)\r\n>    2140 \r\n>    2141     def _getitem_column(self, key):\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/pandas/core/frame.py in _getitem_column(self, key)\r\n>    2144         # get column\r\n>    2145         if self.columns.is_unique:\r\n> -> 2146             return self._get_item_cache(key)\r\n>    2147 \r\n>    2148         # duplicate columns & possible reduce dimensionality\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/pandas/core/generic.py in _get_item_cache(self, item)\r\n>    1840         res = cache.get(item)\r\n>    1841         if res is None:\r\n> -> 1842             values = self._data.get(item)\r\n>    1843             res = self._box_item_values(item, values)\r\n>    1844             cache[item] = res\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/pandas/core/internals.py in get(self, item, fastpath)\r\n>    3841 \r\n>    3842             if not isna(item):\r\n> -> 3843                 loc = self.items.get_loc(item)\r\n>    3844             else:\r\n>    3845                 indexer = np.arange(len(self.items))[isna(self.items)]\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)\r\n>    2525                 return self._engine.get_loc(key)\r\n>    2526             except KeyError:\r\n> -> 2527                 return self._engine.get_loc(self._maybe_cast_indexer(key))\r\n>    2528 \r\n>    2529         indexer = self.get_indexer([key], method=method, tolerance=tolerance)\r\n> \r\n> pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n> \r\n> pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n> \r\n> pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n> \r\n> pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n> \r\n> KeyError: 'a'\r\n\r\nYAML:\r\n\r\n```\r\nimport yaml\r\n\r\nmodel_definition = {}\r\nmodel_definition['input_features'] = [{'name': i, 'type': 'category'} for i in 'a_data']\r\nmodel_definition['output_features'] = [{'name': j, 'type': 'numerical'} for j in 'time']\r\nmodel_definition['training'] = {}\r\n```\r\n\r\nData Sample (as a dataframe)\r\n```\r\n\t1\t0.003398\r\n\t-2\t0.003398\r\n\t-4\t0.003398\r\n\t-6\t0.003398\r\n\t-4\t0.003398\r\n```\r\n\r\n**Expected behavior**\r\nRun a training model on dataset\r\n\r\n**Environment (please complete the following information):**\r\n - current ludwig on colab\r\n\r\n\r\n","closed_by":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/254/timeline","performed_via_github_app":null,"state_reason":"completed"}