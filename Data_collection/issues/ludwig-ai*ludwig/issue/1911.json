{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1911","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1911/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1911/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1911/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/1911","id":1203099824,"node_id":"I_kwDOCbx2hs5Htdiw","number":1911,"title":"Normalization with number input feature does not occur with LudwigModel.evaluate() method","user":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-04-13T10:22:38Z","updated_at":"2022-04-13T20:37:40Z","closed_at":"2022-04-13T20:37:40Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Describe the bug**\r\nWhen using the `LudwigModel.evaluate()` method, number input feature normalization does not occur.  This failure manifest itself with incorrect predicted values, i.e., incorrect predicted probabilities for a binary output feature.  This code illustrates the issue:\r\n\r\n```\r\nimport os\r\nimport shutil\r\n\r\nfrom ludwig.datasets import adult_census_income\r\nfrom ludwig.evaluate import evaluate_cli\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    # Loads the dataset as a pandas.DataFrame\r\n    train_df, test_df, _ = adult_census_income.load(split=True, cache_dir=\"adult_census_income_data\")\r\n\r\n    import pandas as pd\r\n    import numpy as np\r\n\r\n    # setup pandas output options\r\n    pd.set_option('display.max_colwidth', 50)\r\n    pd.set_option(\"display.width\", 120)\r\n    pd.set_option(\"display.max_columns\", 10)\r\n\r\n    # make reproducible output sample\r\n    np.random.seed(31)\r\n\r\n    # Print sample of trainig and test data sets.\r\n    print(f\"Training Dataset(train_df):\\n{train_df.sample(n=5)}\")\r\n    print(f\"\\nTest Dataset(test_df):\\n{test_df.sample(n=5)}\")\r\n\r\n    import logging\r\n    from ludwig.api import LudwigModel\r\n\r\n    # define model configuration\r\n    config = {'combiner': {'dropout': 0.2,\r\n                  'num_fc_layers': 3,\r\n                  'output_size': 128,\r\n                  'type': 'concat'},\r\n     'input_features': [{'name': 'age', 'type': 'number'},\r\n                        {'name': 'workclass', 'type': 'category'},\r\n                        {'name': 'fnlwgt', 'type': 'number'},\r\n                        {'name': 'education', 'type': 'category'},\r\n                        {'name': 'education-num', 'type': 'number'},\r\n                        {'name': 'marital-status', 'type': 'category'},\r\n                        {'name': 'occupation', 'type': 'category'},\r\n                        {'name': 'relationship', 'type': 'category'},\r\n                        {'name': 'race', 'type': 'category'},\r\n                        {'name': 'sex', 'type': 'category'},\r\n                        {'name': 'capital-gain', 'type': 'number'},\r\n                        {'name': 'capital-loss', 'type': 'number'},\r\n                        {'name': 'hours-per-week', 'type': 'number'},\r\n                        {'name': 'native-country', 'type': 'category'}],\r\n     'output_features': [{'name': 'income',\r\n                          'num_fc_layers': 4,\r\n                          'output_size': 32,\r\n                          'preprocessing': {'fallback_true_label': ' >50K'},\r\n                          'loss': {'type': 'binary_weighted_cross_entropy'},\r\n                          'type': 'binary'}],\r\n     'preprocessing': {'number': {'missing_value_strategy': 'fill_with_mean',\r\n                                  'normalization': 'zscore'}},\r\n     'trainer': {'epochs': 3, 'optimizer': {'type': 'adam'}}}\r\n\r\n\r\n    # instantiate Ludwig model object\r\n    model = LudwigModel(config=config, logging_level=logging.INFO)\r\n\r\n    shutil.rmtree('results', ignore_errors=True)\r\n    # Trains the model. This cell might take a few minutes.\r\n    train_stats, preprocessed_data, output_directory = model.train(training_set=train_df,\r\n                                                                   test_set=test_df)\r\n\r\n    np.random.seed(13)\r\n    eval_df = test_df.sample(n=1000)\r\n\r\n    print(eval_df.head())\r\n\r\n    # Generates predictions and performance statistics for the test set.\r\n    shutil.rmtree('test_results', ignore_errors=True)\r\n    print(f\"\\n>>>>>torch training flag before: {model.model.training}\")\r\n    print(f\"\\n>>>>PERFORMING api evalaute()<<<<<<<<<\")\r\n    test_stats, predictions, output_directory = model.evaluate(\r\n      eval_df,\r\n      collect_predictions=True,   # True\r\n      collect_overall_stats=True, # True\r\n      skip_save_eval_stats=False,   # False\r\n      skip_save_predictions=False,  # False\r\n      # skip_save_unprocessed_output=True,   # not specified\r\n      output_directory=\"test_results\",\r\n      return_type=\"dict\"\r\n    )\r\n    print(f\"torch training flag after: {model.model.training}\")\r\n\r\n    pred_df = pd.read_parquet(\"test_results/predictions.parquet\")\r\n    print(\"\\n>>>>> evaluate api from in-memory api trained model\")\r\n    print(pred_df.head())\r\n\r\n```\r\n\r\nPredicted probabilities are all 1.0 or 0.0.\r\n\r\n```\r\n  income_probabilities income_predictions  income_probabilities_ <=50K  income_probabilities_ >50K  income_probability\r\n0           [1.0, 0.0]              <=50K                          1.0                         0.0                 1.0\r\n1           [1.0, 0.0]              <=50K                          1.0                         0.0                 1.0\r\n2           [1.0, 0.0]              <=50K                          1.0                         0.0                 1.0\r\n3           [1.0, 0.0]              <=50K                          1.0                         0.0                 1.0\r\n4           [1.0, 0.0]              <=50K                          1.0                         0.0                 1.0\r\n```\r\n","closed_by":{"login":"jimthompson5802","id":1425269,"node_id":"MDQ6VXNlcjE0MjUyNjk=","avatar_url":"https://avatars.githubusercontent.com/u/1425269?v=4","gravatar_id":"","url":"https://api.github.com/users/jimthompson5802","html_url":"https://github.com/jimthompson5802","followers_url":"https://api.github.com/users/jimthompson5802/followers","following_url":"https://api.github.com/users/jimthompson5802/following{/other_user}","gists_url":"https://api.github.com/users/jimthompson5802/gists{/gist_id}","starred_url":"https://api.github.com/users/jimthompson5802/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimthompson5802/subscriptions","organizations_url":"https://api.github.com/users/jimthompson5802/orgs","repos_url":"https://api.github.com/users/jimthompson5802/repos","events_url":"https://api.github.com/users/jimthompson5802/events{/privacy}","received_events_url":"https://api.github.com/users/jimthompson5802/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1911/timeline","performed_via_github_app":null,"state_reason":"completed"}