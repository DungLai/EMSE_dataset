{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/480","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/480/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/480/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/480/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/480","id":477602139,"node_id":"MDU6SXNzdWU0Nzc2MDIxMzk=","number":480,"title":"Adding routes to serve.py","user":{"login":"areeves87","id":8838937,"node_id":"MDQ6VXNlcjg4Mzg5Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/8838937?v=4","gravatar_id":"","url":"https://api.github.com/users/areeves87","html_url":"https://github.com/areeves87","followers_url":"https://api.github.com/users/areeves87/followers","following_url":"https://api.github.com/users/areeves87/following{/other_user}","gists_url":"https://api.github.com/users/areeves87/gists{/gist_id}","starred_url":"https://api.github.com/users/areeves87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areeves87/subscriptions","organizations_url":"https://api.github.com/users/areeves87/orgs","repos_url":"https://api.github.com/users/areeves87/repos","events_url":"https://api.github.com/users/areeves87/events{/privacy}","received_events_url":"https://api.github.com/users/areeves87/received_events","type":"User","site_admin":false},"labels":[{"id":1174068771,"node_id":"MDU6TGFiZWwxMTc0MDY4Nzcx","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/feature","name":"feature","color":"0377d6","default":false,"description":"New feature or request"},{"id":1493021899,"node_id":"MDU6TGFiZWwxNDkzMDIxODk5","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/documentation","name":"documentation","color":"fbca04","default":true,"description":"improve documentation"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-08-06T21:27:30Z","updated_at":"2019-08-26T01:02:15Z","closed_at":"2019-08-26T01:02:15Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nI'd like to check whether the server is up or down (ie a healthcheck) with a simple GET request to the root path `/` of the ludwig server.\r\n\r\nIn general it would be nice to have some instructions/examples for how to extend the functionality of serve.py.\r\n\r\n**Describe the use case**\r\nThis new route would help run health checks on a remote instance of the ludwig server. In my case it would be for an aws ecs cluster, which requires a valid URI with no spaces for healthchecks. It is not straight forward to satisfy this criteria with the `/predict` route.\r\n\r\n**Describe the solution you'd like**\r\nAdd a simple `GET` route in serve.py's fastApi for the root path `/`, but have not had any success yet.\r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\nHere's what I've edited in `ludwig/serve.py` before building the docker image. \r\n\r\n```python\r\ndef server(model):\r\n    app = FastAPI()\r\n\r\n    input_features = {\r\n        f['name'] for f in model.model_definition['input_features']\r\n    }\r\n\r\n    @app.get('/')\r\n    def root():\r\n        return JSONResponse({\"message\": \"ludwig is up!\"})\r\n\r\n    @app.post('/predict')\r\n    async def predict(request: Request):\r\n        form = await request.form()\r\n        files, entry = convert_input(form)\r\n\r\n        try:\r\n            if (entry.keys() & input_features) != input_features:\r\n                return JSONResponse(ALL_FEATURES_PRESENT_ERROR,\r\n                                    status_code=400)\r\n            try:\r\n                resp = model.predict(data_dict=[entry]).to_dict('records')[0]\r\n                return JSONResponse(resp)\r\n            except Exception as e:\r\n                logger.error(\"Error: {}\".format(str(e)))\r\n                return JSONResponse(COULD_NOT_RUN_INFERENCE_ERROR,\r\n                                    status_code=500)\r\n        finally:\r\n            for f in files:\r\n                os.remove(f.name)\r\n\r\n\r\n    return app\r\n```\r\n\r\nAnd what I changed in the Dockerfile to make sure it uses the updated serve.py \r\n```\r\nFROM tensorflow/tensorflow:latest-py3\r\n\r\nRUN apt-get install -y --no-install-recommends \\\r\n        git libgmp3-dev\r\nRUN git clone --depth=1 https://github.com/uber/ludwig.git \\\r\n    && cd ludwig/ \\\r\n    && pip install -r requirements.txt \\\r\n    && python -m spacy download en \\\r\n    && python setup.py install\r\n\r\nCOPY ludwig/serve.py ludwig/build/lib/ludwig/serve.py\r\nCOPY ludwig/serve.py ludwig/ludwig/serve.py\r\n\r\nWORKDIR /data\r\n\r\nENTRYPOINT [\"ludwig\"]\r\n```","closed_by":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/480/timeline","performed_via_github_app":null,"state_reason":"completed"}