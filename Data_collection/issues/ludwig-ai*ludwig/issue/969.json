{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/969","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/969/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/969/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/969/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/969","id":728924560,"node_id":"MDU6SXNzdWU3Mjg5MjQ1NjA=","number":969,"title":"Replicating Keras architecture for text classification in Ludwig","user":{"login":"AschHarwood","id":9735894,"node_id":"MDQ6VXNlcjk3MzU4OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9735894?v=4","gravatar_id":"","url":"https://api.github.com/users/AschHarwood","html_url":"https://github.com/AschHarwood","followers_url":"https://api.github.com/users/AschHarwood/followers","following_url":"https://api.github.com/users/AschHarwood/following{/other_user}","gists_url":"https://api.github.com/users/AschHarwood/gists{/gist_id}","starred_url":"https://api.github.com/users/AschHarwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AschHarwood/subscriptions","organizations_url":"https://api.github.com/users/AschHarwood/orgs","repos_url":"https://api.github.com/users/AschHarwood/repos","events_url":"https://api.github.com/users/AschHarwood/events{/privacy}","received_events_url":"https://api.github.com/users/AschHarwood/received_events","type":"User","site_admin":false},"labels":[{"id":1332772629,"node_id":"MDU6TGFiZWwxMzMyNzcyNjI5","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/discussion","name":"discussion","color":"008500","default":false,"description":"Open discussion"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-10-25T02:42:09Z","updated_at":"2021-02-04T23:18:55Z","closed_at":"2021-02-04T23:18:55Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nThanks so much for the the impressive tool you've put together. I have an feed forward sequential model that has been performing quite well for my problem at hand, which is predicting hourly google search trend volume for particular keywords based on aggregated news articles (basically, I take all the tokens from articles that were published at a particular time and concatenate them into one long set of tokens).\r\n\r\nI'm particularly interested in Ludwig because I have additional metadata that I would like to bring into my model, and it appears that the \"combiner\" feature could really simplify the problem. \r\n\r\n```\r\n`\r\n#download google news 128 dim pertained model\r\nembedding = \"https://tfhub.dev/google/nnlm-en-dim128/2\"\r\n#create hub layer\r\nhub_layer = hub.KerasLayer(embedding, input_shape=[], dtype=tf.string, trainable=True)\r\n\r\n#set up sequential model\r\nmodel = tf.keras.Sequential()\r\nmodel.add(hub_layer)\r\nmodel.add(tf.keras.layers.Dense(16, activation='relu'))\r\nmodel.add(tf.keras.layers.Dropout(0.2))\r\nmodel.add(tf.keras.layers.Dense(8, activation='relu'))\r\nmodel.add(tf.keras.layers.Dropout(0.2))\r\nmodel.add(tf.keras.layers.Dense(4, activation='relu', kernel_regularizer=regularizers.l2(0.01)))\r\nmodel.add(tf.keras.layers.Dropout(0.2))\r\nmodel.add(tf.keras.layers.Dense(1))\r\n\r\n#compile model\r\nmodel.compile(optimizer='adam',\r\n             loss=tf.keras.losses.BinaryCrossentropy(from_logits=True),\r\n             metrics=['accuracy'])\r\n\r\n#fit model\r\nhistory = model.fit(X_train, y_train, epochs=5, verbose=1, validation_data=(X_test, y_test))\r\n`\r\n```\r\n\r\nMy goal would be to take this model and add additional input features. In Ludwig, it would look something like:\r\n\r\n`model_definition = {\r\n    'input_features': [\r\n        { 'Keras squential model with google news word embeddings'\r\n         },\r\n    {'name':'avg_tone', 'type': 'numerical', 'encoder': 'dense'},\r\n    {'name':'pos_words', 'type': 'numerical', 'encoder': 'dense'},\r\n    {'name':'neg_words', 'type': 'numerical', 'encoder': 'dense'},\r\n    {'name':'polarity', 'type': 'numerical', 'encoder': 'dense'},\r\n    {'name':'act_ref_density', 'type': 'numerical', 'encoder': 'dense'},\r\n    {'name':'self_group_density', 'type': 'numerical', 'encoder': 'dense'},\r\n    {'name':'word_count', 'type': 'numerical', 'encoder': 'dense'}\r\n    ],\r\n    'output_features': [\r\n        {'name': 'shifted_12h', 'type': 'binary'},\r\n    ]\r\n}\r\n`\r\n\r\nAny guidance would be greatly appreciated!\r\n","closed_by":{"login":"AschHarwood","id":9735894,"node_id":"MDQ6VXNlcjk3MzU4OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9735894?v=4","gravatar_id":"","url":"https://api.github.com/users/AschHarwood","html_url":"https://github.com/AschHarwood","followers_url":"https://api.github.com/users/AschHarwood/followers","following_url":"https://api.github.com/users/AschHarwood/following{/other_user}","gists_url":"https://api.github.com/users/AschHarwood/gists{/gist_id}","starred_url":"https://api.github.com/users/AschHarwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AschHarwood/subscriptions","organizations_url":"https://api.github.com/users/AschHarwood/orgs","repos_url":"https://api.github.com/users/AschHarwood/repos","events_url":"https://api.github.com/users/AschHarwood/events{/privacy}","received_events_url":"https://api.github.com/users/AschHarwood/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/969/timeline","performed_via_github_app":null,"state_reason":"completed"}