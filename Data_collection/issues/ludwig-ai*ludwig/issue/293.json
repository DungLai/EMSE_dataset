{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/293","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/293/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/293/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/293/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/293","id":434444598,"node_id":"MDU6SXNzdWU0MzQ0NDQ1OTg=","number":293,"title":"KeyError: 'tied_weights'","user":{"login":"Rhasz","id":49730352,"node_id":"MDQ6VXNlcjQ5NzMwMzUy","avatar_url":"https://avatars.githubusercontent.com/u/49730352?v=4","gravatar_id":"","url":"https://api.github.com/users/Rhasz","html_url":"https://github.com/Rhasz","followers_url":"https://api.github.com/users/Rhasz/followers","following_url":"https://api.github.com/users/Rhasz/following{/other_user}","gists_url":"https://api.github.com/users/Rhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/Rhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Rhasz/subscriptions","organizations_url":"https://api.github.com/users/Rhasz/orgs","repos_url":"https://api.github.com/users/Rhasz/repos","events_url":"https://api.github.com/users/Rhasz/events{/privacy}","received_events_url":"https://api.github.com/users/Rhasz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-04-17T19:18:16Z","updated_at":"2019-04-20T18:46:20Z","closed_at":"2019-04-20T06:47:17Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nUsing API to load a pre trained model and getting the error\r\nKeyError: 'tied_weights'\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nRun in Google Colab\r\nPython code so indents may need to be added for loops and conditionals for code to work.\r\n\r\n**Imports and Installations**\r\n_from __future__ import print_function\r\nimport math\r\nimport time\r\nfrom IPython import display\r\nfrom matplotlib import cm\r\nfrom matplotlib import gridspec\r\nfrom matplotlib import pyplot as plt\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom sklearn import metrics\r\nimport tensorflow as tf\r\nfrom tensorflow.python.data import Dataset\r\ntf.logging.set_verbosity(tf.logging.ERROR)\r\npd.options.display.max_rows = 10\r\npd.options.display.float_format = '{:.2f}'.format\r\n!pip3 install ludwig\r\nimport yaml\r\nfrom ludwig import LudwigModel_\r\n\r\n**ModelDefinition:**\r\n_dict = {'input_features': [{'name': 'Open_Price', 'type': 'numerical'}], 'output_features': [{'name': 'Closing_Price', 'type': 'numerical'}], 'training':{'epochs': 3000}}\r\nmodel_definition = dict \r\nludwig_model = LudwigModel(model_definition)_\r\n\r\n**Sample Data:**\r\nThe full code pulls data from an exchange through their API, the below is a modified version to generate a sample.\r\nData is generated in code\r\nCreate a data frame with first series having numerical and a second series having numerical...\r\nSeries are generated in a loop using append\r\n\r\nReplace stock_bars[i].o and stock_bars[i].o with a constant like 200.00 in following code to generate sample series\r\n\r\n\r\n_limit = 1000\r\nstock_open = []\r\nstock_close = []\r\nif len(stock_open) == 0:\r\n   for i in range(limit):\r\n       stock_open.append(stock_bars[i].o)_\r\n\r\n_if len(stock_close) == 0:\r\n   for i in range(limit):\r\n          stock_close.append(stock_bars[i].c)_\r\n\r\n_df = pd.DataFrame({ \"Open_Price\": pd.Series(stock_open), \"Closing_Price\": pd.Series(stock_close)})\r\nprint(df)\r\ndf.describe()_\r\n\r\n**Training**\r\n_train_stats = ludwig_model.train(df)_\r\n\r\n\r\n\r\n**Saving** (Drive needs to be mounted before saving, will need to also replace stock_symbol)\r\n\r\n_save_path = \"gdrive/My Drive/Colab Notebooks/\" + stock_symbol\r\nludwig_model.save(save_path)_\r\n\r\n**Loading**\r\n\r\n_model_dir = \"gdrive/My Drive/Colab Notebooks/\" + stock_symbol\r\nludwig_model = []\r\nludwig_model = LudwigModel.load(model_dir)_\r\n\r\nPlease provide code, yaml definition file and a sample of data in order to entirely reproduce the issue.\r\nIssues that are not reproducible will be ignored.\r\n\r\n**Expected behavior**\r\nModel loaded\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. iOS]  (colab)\r\n - Version [e.g. 22] (colab)\r\n- Python version (colab)\r\n- Ludwig version (!pip3 install ludwig)\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\r\nCode for mounting a drive\r\n_from google.colab import drive\r\ndrive.mount('/content/gdrive')_\r\n","closed_by":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/293/timeline","performed_via_github_app":null,"state_reason":"completed"}