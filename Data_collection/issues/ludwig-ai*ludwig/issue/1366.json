{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1366","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1366/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1366/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1366/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/1366","id":1021852760,"node_id":"I_kwDOCbx2hs486DxY","number":1366,"title":"[automl] Implement rules-based filtering pipeline for determining search space","user":{"login":"tgaddair","id":1742912,"node_id":"MDQ6VXNlcjE3NDI5MTI=","avatar_url":"https://avatars.githubusercontent.com/u/1742912?v=4","gravatar_id":"","url":"https://api.github.com/users/tgaddair","html_url":"https://github.com/tgaddair","followers_url":"https://api.github.com/users/tgaddair/followers","following_url":"https://api.github.com/users/tgaddair/following{/other_user}","gists_url":"https://api.github.com/users/tgaddair/gists{/gist_id}","starred_url":"https://api.github.com/users/tgaddair/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tgaddair/subscriptions","organizations_url":"https://api.github.com/users/tgaddair/orgs","repos_url":"https://api.github.com/users/tgaddair/repos","events_url":"https://api.github.com/users/tgaddair/events{/privacy}","received_events_url":"https://api.github.com/users/tgaddair/received_events","type":"User","site_admin":false},"labels":[{"id":1174068771,"node_id":"MDU6TGFiZWwxMTc0MDY4Nzcx","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/feature","name":"feature","color":"0377d6","default":false,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-10-10T01:36:04Z","updated_at":"2021-10-10T01:36:04Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Currently, the process for generating the search space is based on a handful of heuristics that select from a handful of pre-defined configs based on properties of the dataset.\r\n\r\nGoing forward, we want to introduce a rule-based filtering pipeline that starts with a monolithic \"set\" of hyperparams to search over, and then applies a series of rules to \"filter out\" params based on the dataset and other constraints. Given the final set of params remaining in the set, the final search space should generated by selecting the top K hyperparams from the sorted list of priorities (based on empirically determined impact).\r\n\r\nThe first draft of the filtering pipeline would look like this:\r\n\r\n1. Generate the set of all possible hyperparams we would want to explore in the search space\r\n2. Apply hard constraints from user-provided config (e.g.,if user selected concat combiner, remove combiner type from the search space).\r\n3. Filter out and constrain hyperparams based on heuristic rules (e.g., past X% numerical columns, remove tabnet from the combiner search space).\r\n4. Rank remaining hyperparams based on global priority list.\r\n5. Retain only the top K hyperparams to help constrain the search problem, where K is a function of the number of trials / time limit and the number of compute resources in the Ray cluster.\r\n\r\nV2 of the pipeline will introduce \"soft\" constraints on the search space. For example, instead of setting a threshold of numerical columns past which we never use TabNet or similar, we can weight the probability of sampling TabNet as a combiner lower as the number of numerical columns decreases.\r\n\r\nV3 will use meta learning to determine the search space and distributions for each param ;)\r\n\r\ncc @w4nderlust @ANarayan @ShreyaR @justinxzhao ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1366/timeline","performed_via_github_app":null,"state_reason":null}