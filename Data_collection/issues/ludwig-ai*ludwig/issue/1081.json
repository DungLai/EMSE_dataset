{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1081","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1081/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1081/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1081/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/1081","id":787856461,"node_id":"MDU6SXNzdWU3ODc4NTY0NjE=","number":1081,"title":"cannot use tf.keras.models.load_model to load SavedModel","user":{"login":"ericxsun","id":1772912,"node_id":"MDQ6VXNlcjE3NzI5MTI=","avatar_url":"https://avatars.githubusercontent.com/u/1772912?v=4","gravatar_id":"","url":"https://api.github.com/users/ericxsun","html_url":"https://github.com/ericxsun","followers_url":"https://api.github.com/users/ericxsun/followers","following_url":"https://api.github.com/users/ericxsun/following{/other_user}","gists_url":"https://api.github.com/users/ericxsun/gists{/gist_id}","starred_url":"https://api.github.com/users/ericxsun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ericxsun/subscriptions","organizations_url":"https://api.github.com/users/ericxsun/orgs","repos_url":"https://api.github.com/users/ericxsun/repos","events_url":"https://api.github.com/users/ericxsun/events{/privacy}","received_events_url":"https://api.github.com/users/ericxsun/received_events","type":"User","site_admin":false},"labels":[{"id":1174068769,"node_id":"MDU6TGFiZWwxMTc0MDY4NzY5","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1174068775,"node_id":"MDU6TGFiZWwxMTc0MDY4Nzc1","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/waiting%20for%20answer","name":"waiting for answer","color":"fff36b","default":false,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-01-18T01:56:58Z","updated_at":"2021-01-20T00:47:23Z","closed_at":"2021-01-20T00:47:23Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nsave the trained model in format of SavedModel and reload it using `tf.keras.models.load_model` won't suceed with the following exception:\r\n\r\n```sh\r\nTypeError: The two structures don't have the same nested structure.\r\n\r\nFirst structure: type=tuple str=(({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='input_1_1_combiner_output')}, {}), TensorSpec(shape=(None,), dtype=tf.int8, name='input_2'))\r\n\r\nSecond structure: type=tuple str=({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='inputs/0/combiner_output')}, {})\r\n\r\nMore specifically: The two namedtuples don't have the same sequence type. First structure type=tuple str=({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='input_1_1_combiner_output')}, {}) has type tuple, while second structure type=dict str={'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='inputs/0/combiner_output')} has type dict\r\nEntire first structure:\r\n(({'combiner_output': .}, {}), .)\r\nEntire second structure:\r\n({'combiner_output': .}, {})\r\n```\r\n\r\n**To Reproduce**\r\nusing the example [mnist-simple-train](https://github.com/ludwig-ai/ludwig/blob/master/examples/mnist/simple_model_training.py)\r\n\r\nstep 1: train the model with the following code\r\n```python\r\nimport logging\r\nimport shutil\r\nimport yaml\r\n\r\nfrom ludwig.api import LudwigModel\r\nfrom ludwig.datasets import mnist\r\n\r\n# clean out prior results\r\nshutil.rmtree('./results', ignore_errors=True)\r\n\r\n# set up Python dictionary to hold model training parameters\r\nwith open('./config.yaml', 'r') as f:\r\n    config = yaml.safe_load(f.read())\r\n\r\n# Define Ludwig model object that drive model training\r\nmodel = LudwigModel(config, logging_level=logging.INFO)\r\n\r\n# load and split MNIST dataset\r\ntraining_set, test_set, _ = mnist.load(split=True)\r\n\r\n# initiate model training\r\n(\r\n    train_stats,  # training statistics\r\n    _,\r\n    output_directory  # location for training results saved to disk\r\n) = model.train(\r\n    training_set=training_set,\r\n    test_set=test_set,\r\n    experiment_name='simple_image_experiment',\r\n    model_name='single_model',\r\n    skip_save_processed_input=True\r\n)\r\n```\r\n\r\nwhen finished, one could got the results:\r\n```sh\r\nTraining: 100%|███████████████████████████████████████| 469/469 [00:23<00:00, 20.19it/s]\r\nEvaluation train: 100%|███████████████████████████████| 469/469 [00:06<00:00, 67.49it/s]\r\nEvaluation test : 100%|█████████████████████████████████| 79/79 [00:01<00:00, 64.11it/s]\r\nTook 31.4292s\r\n╒═════════╤════════╤════════════╤═════════════╕\r\n│ label   │   loss │   accuracy │   hits_at_k │\r\n╞═════════╪════════╪════════════╪═════════════╡\r\n│ train   │ 0.1218 │     0.9697 │      0.9968 │\r\n├─────────┼────────┼────────────┼─────────────┤\r\n│ test    │ 0.1145 │     0.9709 │      0.9966 │\r\n╘═════════╧════════╧════════════╧═════════════╛\r\n╒════════════╤════════╕\r\n│ combined   │   loss │\r\n╞════════════╪════════╡\r\n│ train      │ 0.1027 │\r\n├────────────┼────────┤\r\n│ test       │ 0.0926 │\r\n╘════════════╧════════╛\r\n```\r\n\r\nstep 2: save the model\r\n```python\r\n>>> model.model.save_savedmodel('./savedmodel')\r\n```\r\n\r\nsuceed with some warning, looks like:\r\n\r\n```shell\r\nWARNING:tensorflow:Skipping full serialization of Keras layer <ludwig.modules.reduction_modules.SequenceReducer object at 0x1396c34a8>, because it is not built.\r\nWARNING:tensorflow:From /Users/qinluo/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/training/tracking/tracking.py:111: Model.state_updates (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nThis property should not be used in TensorFlow 2.0, as updates are applied automatically.\r\n2021-01-17 22:58:40.627240: W tensorflow/python/util/util.cc:348] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.\r\nWARNING:tensorflow:From /Users/qinluo/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/training/tracking/tracking.py:111: Layer.updates (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nThis property should not be used in TensorFlow 2.0, as updates are applied automatically.\r\nWARNING:tensorflow:Skipping full serialization of Keras layer <ludwig.modules.reduction_modules.ReduceSum object at 0x1396c35c0>, because it is not built.\r\nINFO:tensorflow:Assets written to: ./savedmodel/assets\r\n```\r\n\r\nstep 3: reload the saved model\r\n```python\r\n>>> import tensorflow as tf\r\n>>> tf.keras.models.load_model('./savedmodel')\r\n```\r\n\r\none could got the following error\r\n```sh\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/util/nest.py in assert_same_structure(nest1, nest2, check_types, expand_composites)\r\n    394     _pywrap_utils.AssertSameStructure(nest1, nest2, check_types,\r\n--> 395                                       expand_composites)\r\n    396   except (ValueError, TypeError) as e:\r\n\r\nTypeError: The two structures don't have the same nested structure.\r\n\r\nFirst structure: type=tuple str=(({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='input_1_1_combiner_output')}, {}), TensorSpec(shape=(None,), dtype=tf.int8, name='input_2'))\r\n\r\nSecond structure: type=tuple str=({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='inputs/0/combiner_output')}, {})\r\n\r\nMore specifically: The two namedtuples don't have the same sequence type. First structure type=tuple str=({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='input_1_1_combiner_output')}, {}) has type tuple, while second structure type=dict str={'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='inputs/0/combiner_output')} has type dict\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-4-a155984253eb> in <module>\r\n----> 1 tf.keras.models.load_model('./savedmodel')\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/keras/saving/save.py in load_model(filepath, custom_objects, compile, options)\r\n    185     if isinstance(filepath, six.string_types):\r\n    186       loader_impl.parse_saved_model(filepath)\r\n--> 187       return saved_model_load.load(filepath, compile, options)\r\n    188\r\n    189   raise IOError(\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py in load(path, compile, options)\r\n    119\r\n    120   model = tf_load.load_internal(\r\n--> 121       path, options=options, loader_cls=KerasObjectLoader)\r\n    122\r\n    123   # pylint: disable=protected-access\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/saved_model/load.py in load_internal(export_dir, tags, options, loader_cls)\r\n    631       try:\r\n    632         loader = loader_cls(object_graph_proto, saved_model_proto, export_dir,\r\n--> 633                             ckpt_options)\r\n    634       except errors.NotFoundError as err:\r\n    635         raise FileNotFoundError(\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py in __init__(self, *args, **kwargs)\r\n    192     self._models_to_reconstruct = []\r\n    193\r\n--> 194     super(KerasObjectLoader, self).__init__(*args, **kwargs)\r\n    195\r\n    196     # Now that the node object has been fully loaded, and the checkpoint has\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/saved_model/load.py in __init__(self, object_graph_proto, saved_model_proto, export_dir, ckpt_options)\r\n    128       self._concrete_functions[name] = _WrapperFunction(concrete_function)\r\n    129\r\n--> 130     self._load_all()\r\n    131     self._restore_checkpoint()\r\n    132\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py in _load_all(self)\r\n    219\r\n    220     # Finish setting up layers and models. See function docstring for more info.\r\n--> 221     self._finalize_objects()\r\n    222\r\n    223   @property\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py in _finalize_objects(self)\r\n    524         layers_revived_from_saved_model.append(node)\r\n    525\r\n--> 526     _finalize_saved_model_layers(layers_revived_from_saved_model)\r\n    527     _finalize_config_layers(layers_revived_from_config)\r\n    528\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py in _finalize_saved_model_layers(layers)\r\n    704         call_fn = _get_keras_attr(layer).call_and_return_conditional_losses\r\n    705         if call_fn.input_signature is None:\r\n--> 706           inputs = infer_inputs_from_restored_call_function(call_fn)\r\n    707         else:\r\n    708           inputs = call_fn.input_signature[0]\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/load.py in infer_inputs_from_restored_call_function(fn)\r\n    983   for concrete in fn.concrete_functions[1:]:\r\n    984     spec2 = concrete.structured_input_signature[0][0]\r\n--> 985     spec = nest.map_structure(common_spec, spec, spec2)\r\n    986   return spec\r\n    987\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/util/nest.py in map_structure(func, *structure, **kwargs)\r\n    627   for other in structure[1:]:\r\n    628     assert_same_structure(structure[0], other, check_types=check_types,\r\n--> 629                           expand_composites=expand_composites)\r\n    630\r\n    631   flat_structure = [flatten(s, expand_composites) for s in structure]\r\n\r\n~/works/tools/env-py37/.venv/lib/python3.7/site-packages/tensorflow/python/util/nest.py in assert_same_structure(nest1, nest2, check_types, expand_composites)\r\n    400                   \"Entire first structure:\\n%s\\n\"\r\n    401                   \"Entire second structure:\\n%s\"\r\n--> 402                   % (str(e), str1, str2))\r\n    403\r\n    404\r\n\r\nTypeError: The two structures don't have the same nested structure.\r\n\r\nFirst structure: type=tuple str=(({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='input_1_1_combiner_output')}, {}), TensorSpec(shape=(None,), dtype=tf.int8, name='input_2'))\r\n\r\nSecond structure: type=tuple str=({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='inputs/0/combiner_output')}, {})\r\n\r\nMore specifically: The two namedtuples don't have the same sequence type. First structure type=tuple str=({'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='input_1_1_combiner_output')}, {}) has type tuple, while second structure type=dict str={'combiner_output': TensorSpec(shape=(None, 128), dtype=tf.float32, name='inputs/0/combiner_output')} has type dict\r\nEntire first structure:\r\n(({'combiner_output': .}, {}), .)\r\nEntire second structure:\r\n({'combiner_output': .}, {})\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Mac 10.13.6\r\n- Python: python3.8 or python3.7 (both tested)\r\n- Ludwig version: 0.3.2\r\n- Tensorflow: 2.3.1\r\n\r\n**Additional context**\r\nmaybe the line  [hidden = tf.reshape(hidden, [shape[0], -1])](https://github.com/ludwig-ai/ludwig/blob/576b74b26cf7c289761ee3c6fcb45bef732ba8ce/ludwig/encoders/image_encoders.py#L146) in `ludwig/encoders/image_encoders.py` should be replaced by:\r\n```python\r\nshape = hidden.shape\r\nif shape[0] is not None:\r\n    hidden = tf.reshape(hidden, [shape[0], -1])\r\nelse:\r\n    hidden = tf.reshape(hidden, [-1, tf.math.reduce_prod(shape[1:])])\r\n```\r\n","closed_by":{"login":"ericxsun","id":1772912,"node_id":"MDQ6VXNlcjE3NzI5MTI=","avatar_url":"https://avatars.githubusercontent.com/u/1772912?v=4","gravatar_id":"","url":"https://api.github.com/users/ericxsun","html_url":"https://github.com/ericxsun","followers_url":"https://api.github.com/users/ericxsun/followers","following_url":"https://api.github.com/users/ericxsun/following{/other_user}","gists_url":"https://api.github.com/users/ericxsun/gists{/gist_id}","starred_url":"https://api.github.com/users/ericxsun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ericxsun/subscriptions","organizations_url":"https://api.github.com/users/ericxsun/orgs","repos_url":"https://api.github.com/users/ericxsun/repos","events_url":"https://api.github.com/users/ericxsun/events{/privacy}","received_events_url":"https://api.github.com/users/ericxsun/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/1081/timeline","performed_via_github_app":null,"state_reason":"completed"}