{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/105","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/105/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/105/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/105/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/105","id":411096586,"node_id":"MDU6SXNzdWU0MTEwOTY1ODY=","number":105,"title":"KeyError: 'item_id_char'","user":{"login":"goldenrati0","id":11729048,"node_id":"MDQ6VXNlcjExNzI5MDQ4","avatar_url":"https://avatars.githubusercontent.com/u/11729048?v=4","gravatar_id":"","url":"https://api.github.com/users/goldenrati0","html_url":"https://github.com/goldenrati0","followers_url":"https://api.github.com/users/goldenrati0/followers","following_url":"https://api.github.com/users/goldenrati0/following{/other_user}","gists_url":"https://api.github.com/users/goldenrati0/gists{/gist_id}","starred_url":"https://api.github.com/users/goldenrati0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/goldenrati0/subscriptions","organizations_url":"https://api.github.com/users/goldenrati0/orgs","repos_url":"https://api.github.com/users/goldenrati0/repos","events_url":"https://api.github.com/users/goldenrati0/events{/privacy}","received_events_url":"https://api.github.com/users/goldenrati0/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-02-16T18:01:33Z","updated_at":"2019-02-17T00:36:18Z","closed_at":"2019-02-17T00:36:18Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nMy `small_dataset.csv` looks like this\r\n```csv\r\nuser_id,item_id,dow,hod,category_id,cusine_id,restaurant_id,item_count\r\n-6088859261566846925,601d4dc5-2ad,7,3,9c64431e-79f,fb8b5b7f-013,706247b3-86e,1\r\n-4662982070704311223,af48a23f-f80,7,2,a989cb37-db5,8631ea96-a78,ea90883c-a2f,1\r\n-4849981472186386714,bab8cfae-930,1,1,4f31b9ea-059,5aa1a680-942,d9ab8a13-380,1\r\n-5400975689533971605,3ae9d553-282,4,0,37d510f8-745,c9aa3993-86f,0b8d021a-c5c,1\r\n4810905585891548302,3d673534-8f8,3,1,4264559d-470,5aa1a680-942,5772716f-1f3,1\r\n8523163246689801258,f5cab6a9-8f5,2,3,60db56cd-21e,2d470ebd-e46,4e4c60a4-bca,1\r\n6141444640923780397,e1d46baf-89c,6,17,b7226a64-569,5aa1a680-942,910396af-1dd,1\r\n7782246672655206426,617f0d50-e63,2,23,68f8231d-6e1,8631ea96-a78,344071ad-459,1\r\n-3808793554476278979,56903221-9d1,5,5,79803e34-c64,e153fa17-ac6,5746c349-5e1,1\r\n```\r\n\r\nMy `model_definition` looks like this (I defined it programatically)\r\n```python3\r\nINPUT_COLUMN_NAMES = \"user_id, item_id, dow, hod, category_id, cusine_id, restaurant_id, item_count\".split(\", \")\r\nNUMERIC_COLUMN_NAMES = [\"dow\", \"hod\", \"item_count\"]\r\nOUTPUT_COLUMN_NAMES = \"item_id, category_id, restaurant_id\".split(\", \")\r\n\r\nmodel_definition = {\r\n        \"input_features\": [\r\n            {\r\n                \"name\": col_name,\r\n                \"type\": \"numerical\" if col_name in NUMERIC_COLUMN_NAMES else \"text\",\r\n                \"encoder\": \"parallel_cnn\"\r\n            } for col_name in INPUT_COLUMN_NAMES\r\n        ],\r\n        \"output_features\": [\r\n            {\r\n                \"name\": col_name,\r\n                \"type\": \"numerical\" if col_name in NUMERIC_COLUMN_NAMES else \"text\",\r\n            } for col_name in OUTPUT_COLUMN_NAMES\r\n        ],\r\n        \"training\": {\r\n            \"epochs\": 10\r\n        }\r\n    }\r\n```\r\n\r\nWhen I run the `train()` function I get the error `KeyError: 'item_id_char'`\r\n\r\nLog\r\n```\r\nINFO:root:Model name: run\r\nINFO:root:Output path: ../ludwig_model\\_run_5\r\nINFO:root:\r\n\r\nINFO:root:ludwig_version: '0.1.0'\r\nINFO:root:command: 'D:/playground/ml-playground/ludwig-test/cnn.py'\r\nINFO:root:dataset_type: 'generic'\r\nINFO:root:random_seed: 42\r\nINFO:root:model_definition: {   'combiner': {'type': 'concat'},\r\n    'input_features': [   {   'encoder': 'parallel_cnn',\r\n                              'level': 'word',\r\n                              'name': 'user_id',\r\n                              'tied_weights': None,\r\n                              'type': 'text'},\r\n                          {   'encoder': 'parallel_cnn',\r\n                              'level': 'word',\r\n                              'name': 'item_id',\r\n                              'tied_weights': None,\r\n                              'type': 'text'},\r\n                          {   'encoder': 'parallel_cnn',\r\n                              'name': 'dow',\r\n                              'tied_weights': None,\r\n                              'type': 'numerical'},\r\n                          {   'encoder': 'parallel_cnn',\r\n                              'name': 'hod',\r\n                              'tied_weights': None,\r\n                              'type': 'numerical'},\r\n                          {   'encoder': 'parallel_cnn',\r\n                              'level': 'word',\r\n                              'name': 'category_id',\r\n                              'tied_weights': None,\r\n                              'type': 'text'},\r\n                          {   'encoder': 'parallel_cnn',\r\n                              'level': 'word',\r\n                              'name': 'cusine_id',\r\n                              'tied_weights': None,\r\n                              'type': 'text'},\r\n                          {   'encoder': 'parallel_cnn',\r\n                              'level': 'word',\r\n                              'name': 'restaurant_id',\r\n                              'tied_weights': None,\r\n                              'type': 'text'},\r\n                          {   'encoder': 'parallel_cnn',\r\n                              'name': 'item_count',\r\n                              'tied_weights': None,\r\n                              'type': 'numerical'}],\r\n    'output_features': [   {   'decoder': 'generator',\r\n                               'dependencies': [],\r\n                               'level': 'char',\r\n                               'loss': {   'class_distance_temperature': 0,\r\n                                           'class_weights': 1,\r\n                                           'type': 'softmax_cross_entropy',\r\n                                           'weight': 1},\r\n                               'name': 'item_id',\r\n                               'reduce_dependencies': 'sum',\r\n                               'reduce_input': 'sum',\r\n                               'type': 'text',\r\n                               'weight': 1},\r\n                           {   'decoder': 'generator',\r\n                               'dependencies': [],\r\n                               'level': 'char',\r\n                               'loss': {   'class_distance_temperature': 0,\r\n                                           'class_weights': 1,\r\n                                           'type': 'softmax_cross_entropy',\r\n                                           'weight': 1},\r\n                               'name': 'category_id',\r\n                               'reduce_dependencies': 'sum',\r\n                               'reduce_input': 'sum',\r\n                               'type': 'text',\r\n                               'weight': 1},\r\n                           {   'decoder': 'generator',\r\n                               'dependencies': [],\r\n                               'level': 'char',\r\n                               'loss': {   'class_distance_temperature': 0,\r\n                                           'class_weights': 1,\r\n                                           'type': 'softmax_cross_entropy',\r\n                                           'weight': 1},\r\n                               'name': 'restaurant_id',\r\n                               'reduce_dependencies': 'sum',\r\n                               'reduce_input': 'sum',\r\n                               'type': 'text',\r\n                               'weight': 1}],\r\n    'preprocessing': {   'bag': {   'fill_value': '',\r\n                                    'format': 'space',\r\n                                    'lowercase': 10000,\r\n                                    'missing_value_strategy': 'fill_with_const',\r\n                                    'most_common': False},\r\n                         'binary': {   'fill_value': 0,\r\n                                       'missing_value_strategy': 'fill_with_const'},\r\n                         'category': {   'fill_value': '<UNK>',\r\n                                         'lowercase': False,\r\n                                         'missing_value_strategy': 'fill_with_const',\r\n                                         'most_common': 10000},\r\n                         'force_split': False,\r\n                         'image': {'missing_value_strategy': 'backfill'},\r\n                         'numerical': {   'fill_value': 0,\r\n                                          'missing_value_strategy': 'fill_with_const'},\r\n                         'sequence': {   'fill_value': '',\r\n                                         'format': 'space',\r\n                                         'lowercase': False,\r\n                                         'missing_value_strategy': 'fill_with_const',\r\n                                         'most_common': 20000,\r\n                                         'padding': 'right',\r\n                                         'padding_symbol': '<PAD>',\r\n                                         'sequence_length_limit': 256,\r\n                                         'unknown_symbol': '<UNK>'},\r\n                         'set': {   'fill_value': '',\r\n                                    'format': 'space',\r\n                                    'lowercase': False,\r\n                                    'missing_value_strategy': 'fill_with_const',\r\n                                    'most_common': 10000},\r\n                         'split_probabilities': (0.7, 0.1, 0.2),\r\n                         'stratify': None,\r\n                         'text': {   'char_format': 'characters',\r\n                                     'char_most_common': 70,\r\n                                     'char_sequence_length_limit': 1024,\r\n                                     'fill_value': '',\r\n                                     'lowercase': True,\r\n                                     'missing_value_strategy': 'fill_with_const',\r\n                                     'padding': 'right',\r\n                                     'padding_symbol': '<PAD>',\r\n                                     'unknown_symbol': '<UNK>',\r\n                                     'word_format': 'space_punct',\r\n                                     'word_most_common': 20000,\r\n                                     'word_sequence_length_limit': 256},\r\n                         'timeseries': {   'fill_value': '',\r\n                                           'format': 'space',\r\n                                           'missing_value_strategy': 'fill_with_const',\r\n                                           'padding': 'right',\r\n                                           'padding_value': 0,\r\n                                           'timeseries_length_limit': 256}},\r\n    'training': {   'batch_size': 128,\r\n                    'bucketing_field': None,\r\n                    'decay': False,\r\n                    'decay_rate': 0.96,\r\n                    'decay_steps': 10000,\r\n                    'dropout_rate': 0.0,\r\n                    'early_stop': 3,\r\n                    'epochs': 50,\r\n                    'gradient_clipping': None,\r\n                    'increase_batch_size_on_plateau': 0,\r\n                    'increase_batch_size_on_plateau_max': 512,\r\n                    'increase_batch_size_on_plateau_patience': 5,\r\n                    'increase_batch_size_on_plateau_rate': 2,\r\n                    'learning_rate': 0.001,\r\n                    'learning_rate_warmup_epochs': 5,\r\n                    'optimizer': {   'beta1': 0.9,\r\n                                     'beta2': 0.999,\r\n                                     'epsilon': 1e-08,\r\n                                     'type': 'adam'},\r\n                    'reduce_learning_rate_on_plateau': 0,\r\n                    'reduce_learning_rate_on_plateau_patience': 5,\r\n                    'reduce_learning_rate_on_plateau_rate': 0.5,\r\n                    'regularization_lambda': 0,\r\n                    'regularizer': 'l2',\r\n                    'staircase': False,\r\n                    'validation_field': 'combined',\r\n                    'validation_measure': 'loss'}}\r\nINFO:root:\r\n\r\nINFO:root:Using full dataframe\r\nINFO:root:Building dataset (it may take a while)\r\nINFO:root:Loading NLP pipeline\r\nD:\\playground\\ml-playground\\ludwig-test\\venv\\lib\\site-packages\\ludwig\\features\\numerical_feature.py:63: FutureWarning: Method .as_matrix will be removed in a future version. Use .values instead.\r\n  np.float32).as_matrix()\r\nINFO:root:Writing train set metadata with vocabulary\r\nTraceback (most recent call last):\r\n  File \"D:/playground/ml-playground/ludwig-test/cnn.py\", line 27, in <module>\r\n    main()\r\n  File \"D:/playground/ml-playground/ludwig-test/cnn.py\", line 23, in main\r\n    train(model)\r\n  File \"D:/playground/ml-playground/ludwig-test/cnn.py\", line 13, in train\r\n    model.train()\r\n  File \"D:\\playground\\ml-playground\\ludwig-test\\model.py\", line 63, in train\r\n    self.model.train(data_df=self.data_frame, logging_level=logging.INFO, output_directory=\"../ludwig_model\")\r\n  File \"D:\\playground\\ml-playground\\ludwig-test\\venv\\lib\\site-packages\\ludwig\\api.py\", line 448, in train\r\n    random_seed=random_seed)\r\n  File \"D:\\playground\\ml-playground\\ludwig-test\\venv\\lib\\site-packages\\ludwig\\data\\preprocessing.py\", line 561, in preprocess_for_training\r\n    [training_set, validation_set, test_set]\r\n  File \"D:\\playground\\ml-playground\\ludwig-test\\venv\\lib\\site-packages\\ludwig\\data\\preprocessing.py\", line 769, in replace_text_feature_level\r\n    feature['level']\r\nKeyError: 'item_id_char'\r\n```","closed_by":{"login":"w4nderlust","id":349256,"node_id":"MDQ6VXNlcjM0OTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/349256?v=4","gravatar_id":"","url":"https://api.github.com/users/w4nderlust","html_url":"https://github.com/w4nderlust","followers_url":"https://api.github.com/users/w4nderlust/followers","following_url":"https://api.github.com/users/w4nderlust/following{/other_user}","gists_url":"https://api.github.com/users/w4nderlust/gists{/gist_id}","starred_url":"https://api.github.com/users/w4nderlust/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w4nderlust/subscriptions","organizations_url":"https://api.github.com/users/w4nderlust/orgs","repos_url":"https://api.github.com/users/w4nderlust/repos","events_url":"https://api.github.com/users/w4nderlust/events{/privacy}","received_events_url":"https://api.github.com/users/w4nderlust/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/105/timeline","performed_via_github_app":null,"state_reason":"completed"}