{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2125","repository_url":"https://api.github.com/repos/ludwig-ai/ludwig","labels_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2125/labels{/name}","comments_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2125/comments","events_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2125/events","html_url":"https://github.com/ludwig-ai/ludwig/issues/2125","id":1266704838,"node_id":"I_kwDOCbx2hs5LgGHG","number":2125,"title":"RFC: Nesting Refactor for Encoder/Decoder Config ","user":{"login":"connor-mccorm","id":97468934,"node_id":"U_kgDOBc9CBg","avatar_url":"https://avatars.githubusercontent.com/u/97468934?v=4","gravatar_id":"","url":"https://api.github.com/users/connor-mccorm","html_url":"https://github.com/connor-mccorm","followers_url":"https://api.github.com/users/connor-mccorm/followers","following_url":"https://api.github.com/users/connor-mccorm/following{/other_user}","gists_url":"https://api.github.com/users/connor-mccorm/gists{/gist_id}","starred_url":"https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/connor-mccorm/subscriptions","organizations_url":"https://api.github.com/users/connor-mccorm/orgs","repos_url":"https://api.github.com/users/connor-mccorm/repos","events_url":"https://api.github.com/users/connor-mccorm/events{/privacy}","received_events_url":"https://api.github.com/users/connor-mccorm/received_events","type":"User","site_admin":false},"labels":[{"id":1332772629,"node_id":"MDU6TGFiZWwxMzMyNzcyNjI5","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/discussion","name":"discussion","color":"008500","default":false,"description":"Open discussion"},{"id":3602609750,"node_id":"LA_kwDOCbx2hs7Wu3ZW","url":"https://api.github.com/repos/ludwig-ai/ludwig/labels/release-0.6","name":"release-0.6","color":"d4c5f9","default":false,"description":"Feature to be implemented in v0.6"}],"state":"closed","locked":false,"assignee":{"login":"connor-mccorm","id":97468934,"node_id":"U_kgDOBc9CBg","avatar_url":"https://avatars.githubusercontent.com/u/97468934?v=4","gravatar_id":"","url":"https://api.github.com/users/connor-mccorm","html_url":"https://github.com/connor-mccorm","followers_url":"https://api.github.com/users/connor-mccorm/followers","following_url":"https://api.github.com/users/connor-mccorm/following{/other_user}","gists_url":"https://api.github.com/users/connor-mccorm/gists{/gist_id}","starred_url":"https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/connor-mccorm/subscriptions","organizations_url":"https://api.github.com/users/connor-mccorm/orgs","repos_url":"https://api.github.com/users/connor-mccorm/repos","events_url":"https://api.github.com/users/connor-mccorm/events{/privacy}","received_events_url":"https://api.github.com/users/connor-mccorm/received_events","type":"User","site_admin":false},"assignees":[{"login":"connor-mccorm","id":97468934,"node_id":"U_kgDOBc9CBg","avatar_url":"https://avatars.githubusercontent.com/u/97468934?v=4","gravatar_id":"","url":"https://api.github.com/users/connor-mccorm","html_url":"https://github.com/connor-mccorm","followers_url":"https://api.github.com/users/connor-mccorm/followers","following_url":"https://api.github.com/users/connor-mccorm/following{/other_user}","gists_url":"https://api.github.com/users/connor-mccorm/gists{/gist_id}","starred_url":"https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/connor-mccorm/subscriptions","organizations_url":"https://api.github.com/users/connor-mccorm/orgs","repos_url":"https://api.github.com/users/connor-mccorm/repos","events_url":"https://api.github.com/users/connor-mccorm/events{/privacy}","received_events_url":"https://api.github.com/users/connor-mccorm/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2022-06-09T21:45:13Z","updated_at":"2022-08-26T16:57:06Z","closed_at":"2022-08-26T16:57:06Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"In the push to create a fully fledged schema using Marshmallow, we've run into a bit of an issue. When specifying things like optimizers, the structure of the config works well in a nested structure like this:\r\n```\r\ntrainer:\r\n     learning_rate: 0.001\r\n     optimizer:\r\n          type: adam\r\n          beta_1: 0.9\r\n          beta_2: 0.999\r\n```\r\nThis works great for the structure of the schema since it allows us to create a hierarchical set of modules and submodules that can help build out the schema object which can be used internally for consistency in Ludwig, for populating parameter info on the frontend, and also for building the config object in the SDK. The issue here lies  in the config structure for Encoders and Decoders. Currently the way we specify encoder details in the config is without using any nesting and just adding any additional encoder specific parameters at the same level. For example:\r\n```\r\ninput_features:\r\n    - name: Feature_1\r\n       type: binary\r\n       encoder: dense\r\n       dropout: 0.2\r\n       activation: leakyRelu\r\n    - name: Feature_2\r\n       type: text\r\n       encoder: stacked_cnn\r\n       dropout: 0.2\r\n       reduce_output: mean\r\n       embeddings_on_cpu: false\r\n       strides: 5\r\n       output_size: 128\r\n```\r\nThe issue here is that the encoder parameters are nested at the input feature level which is an issue for a few reasons:\r\n\r\n- The code required to validate a schema without a nested module structure becomes very messy and convoluted which will only become more of a problem over time with the addition of new encoders and our value prop of extensibility.\r\n- Specifying encoder parameters in the future SDK config object will be complicated and unintuitive because you will have to add the specific encoder parameters to the input feature as opposed the the specific encoder you want to use.\r\n\r\nBecause of this, we are proposing a refactor of the encoder config structure that nests encoders an additional level to stay consistent with a module structure. For example:\r\n\r\nInstead of this \r\n```\r\ninput_features:\r\n    - name: Feature_1\r\n      type: binary\r\n      encoder: dense\r\n      dropout: 0.2\r\n      activation: leakyRelu\r\n```\r\nWe would do this\r\n```\r\ninput_features:\r\n    - name: Feature_1\r\n      type: binary\r\n      encoder: \r\n            type: dense\r\n            dropout: 0.2\r\n            activation: leakyRelu\r\n```\r\n\r\nNote this also applies for decoders as well. If we decide to move forward on this proposal, we would need to put in some logic to handle backwards compatibility for all the existing Ludwig users. While this may seem like a headache, I believe that this is something that we definitely want to do, and I think that doing it now as opposed to later is a good idea since the impact issues from a change like this will only increase over time. Let me know your thoughts! ","closed_by":{"login":"connor-mccorm","id":97468934,"node_id":"U_kgDOBc9CBg","avatar_url":"https://avatars.githubusercontent.com/u/97468934?v=4","gravatar_id":"","url":"https://api.github.com/users/connor-mccorm","html_url":"https://github.com/connor-mccorm","followers_url":"https://api.github.com/users/connor-mccorm/followers","following_url":"https://api.github.com/users/connor-mccorm/following{/other_user}","gists_url":"https://api.github.com/users/connor-mccorm/gists{/gist_id}","starred_url":"https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/connor-mccorm/subscriptions","organizations_url":"https://api.github.com/users/connor-mccorm/orgs","repos_url":"https://api.github.com/users/connor-mccorm/repos","events_url":"https://api.github.com/users/connor-mccorm/events{/privacy}","received_events_url":"https://api.github.com/users/connor-mccorm/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ludwig-ai/ludwig/issues/2125/timeline","performed_via_github_app":null,"state_reason":"completed"}