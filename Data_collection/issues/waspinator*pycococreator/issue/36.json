{"url":"https://api.github.com/repos/waspinator/pycococreator/issues/36","repository_url":"https://api.github.com/repos/waspinator/pycococreator","labels_url":"https://api.github.com/repos/waspinator/pycococreator/issues/36/labels{/name}","comments_url":"https://api.github.com/repos/waspinator/pycococreator/issues/36/comments","events_url":"https://api.github.com/repos/waspinator/pycococreator/issues/36/events","html_url":"https://github.com/waspinator/pycococreator/issues/36","id":650612949,"node_id":"MDU6SXNzdWU2NTA2MTI5NDk=","number":36,"title":"IndexError: list index out of range","user":{"login":"anmspro","id":33668152,"node_id":"MDQ6VXNlcjMzNjY4MTUy","avatar_url":"https://avatars.githubusercontent.com/u/33668152?v=4","gravatar_id":"","url":"https://api.github.com/users/anmspro","html_url":"https://github.com/anmspro","followers_url":"https://api.github.com/users/anmspro/followers","following_url":"https://api.github.com/users/anmspro/following{/other_user}","gists_url":"https://api.github.com/users/anmspro/gists{/gist_id}","starred_url":"https://api.github.com/users/anmspro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anmspro/subscriptions","organizations_url":"https://api.github.com/users/anmspro/orgs","repos_url":"https://api.github.com/users/anmspro/repos","events_url":"https://api.github.com/users/anmspro/events{/privacy}","received_events_url":"https://api.github.com/users/anmspro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-03T13:54:48Z","updated_at":"2020-11-15T19:58:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Full error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"segment.py\", line 108, in <module>\r\n    class_id = [x['id'] for x in CATEGORIES if x['name'] in annotation_filename][0]\r\nIndexError: list index out of range\r\n```\r\nHere's the code:\r\n``` \r\nINFO = {\r\n    \"description\": \"Fashion Dataset\",\r\n    \"url\": \"https://github.com/waspinator/pycococreator\",\r\n    \"version\": \"0.1.0\",\r\n    \"year\": 2020,\r\n    \"contributor\": \"Abu Noman Md. Sakib\",\r\n    \"date_created\": datetime.datetime.utcnow().isoformat(' ')\r\n}\r\n\r\nLICENSES = [\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"GB\",\r\n        \"url\": \"GB\"\r\n    }\r\n]\r\n\r\nCATEGORIES = [\r\n    {\r\n        'id': 1,\r\n        'name': 'mask',\r\n        'supercategory': 'fashion',\r\n    }\r\n]\r\n\r\ncoco_output = {\r\n    \"info\": INFO,\r\n    \"licenses\": LICENSES,\r\n    \"categories\": CATEGORIES,\r\n    \"images\": [],\r\n    \"annotations\": []\r\n}\r\n\r\nimage_id = 1\r\nsegmentation_id = 1\r\n\r\nROOT_DIR = \"train\"\r\nIMAGE_DIR = \"train/images\"\r\nANNOTATION_DIR = \"train/annotations\"\r\n\r\nimage_files = [f for f in listdir(IMAGE_DIR) if isfile(join(IMAGE_DIR, f))]\r\nannotation_files = [f for f in listdir(ANNOTATION_DIR) if isfile(join(ANNOTATION_DIR, f))]\r\n\r\n# go through each image\r\nfor image_filename in image_files:\r\n    image = Image.open(IMAGE_DIR + '/' + image_filename)\r\n    image_info = pycococreatortools.create_image_info(image_id, os.path.basename(image_filename), image.size)\r\n\r\n    coco_output[\"images\"].append(image_info)\r\n\r\n# go through each associated annotation\r\nfor annotation_filename in annotation_files:\r\n\r\n    print(annotation_filename)\r\n    class_id = [x['id'] for x in CATEGORIES if x['name'] in annotation_filename][0]\r\n    category_info = {'id': class_id, 'is_crowd': 'crowd' in image_filename}\r\n    binary_mask = np.asarray(Image.open(annotation_filename).convert('1')).astype(np.uint8)\r\n\r\n    annotation_info = pycococreatortools.create_annotation_info(segmentation_id, image_id, category_info, binary_mask, image.size, tolerance=2)\r\n\r\n    if annotation_info is not None:\r\n        coco_output[\"annotations\"].append(annotation_info)\r\n\r\n    segmentation_id = segmentation_id + 1\r\n\r\n    image_id = image_id + 1\r\n\r\nwith open('train/images.json', 'w') as output_json_file:\r\n    json.dump(coco_output, output_json_file)\r\n```\r\n\r\nI still don't know if the code works or not. Please help!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/waspinator/pycococreator/issues/36/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/waspinator/pycococreator/issues/36/timeline","performed_via_github_app":null,"state_reason":null}