{"url":"https://api.github.com/repos/GMvandeVen/continual-learning/issues/14","repository_url":"https://api.github.com/repos/GMvandeVen/continual-learning","labels_url":"https://api.github.com/repos/GMvandeVen/continual-learning/issues/14/labels{/name}","comments_url":"https://api.github.com/repos/GMvandeVen/continual-learning/issues/14/comments","events_url":"https://api.github.com/repos/GMvandeVen/continual-learning/issues/14/events","html_url":"https://github.com/GMvandeVen/continual-learning/issues/14","id":837564112,"node_id":"MDU6SXNzdWU4Mzc1NjQxMTI=","number":14,"title":"Grad in SI","user":{"login":"ssydasheng","id":8342176,"node_id":"MDQ6VXNlcjgzNDIxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/8342176?v=4","gravatar_id":"","url":"https://api.github.com/users/ssydasheng","html_url":"https://github.com/ssydasheng","followers_url":"https://api.github.com/users/ssydasheng/followers","following_url":"https://api.github.com/users/ssydasheng/following{/other_user}","gists_url":"https://api.github.com/users/ssydasheng/gists{/gist_id}","starred_url":"https://api.github.com/users/ssydasheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ssydasheng/subscriptions","organizations_url":"https://api.github.com/users/ssydasheng/orgs","repos_url":"https://api.github.com/users/ssydasheng/repos","events_url":"https://api.github.com/users/ssydasheng/events{/privacy}","received_events_url":"https://api.github.com/users/ssydasheng/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-03-22T10:16:25Z","updated_at":"2021-03-24T13:58:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\n\r\nI am recently reading your excellent continual-learning implementation, in particular about the SI. In the following line of code, you used `p.grad`, which is the gradient of the regularized loss. However, based on my understanding about SI, the gradient should be computed merely on the data loss, so that it measures how much each weight contributes to the fitting error of the present task. Am I wrong about it, or I missed important factors in your implementation? Thanks ahead for your clarification.\r\n\r\nhttps://github.com/GMvandeVen/continual-learning/blob/d281967802396b146b2c30b6667369c6f2395472/train.py#L248","closed_by":null,"reactions":{"url":"https://api.github.com/repos/GMvandeVen/continual-learning/issues/14/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/GMvandeVen/continual-learning/issues/14/timeline","performed_via_github_app":null,"state_reason":null}