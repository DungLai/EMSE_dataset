{"url":"https://api.github.com/repos/kymatio/kymatio/issues/792","repository_url":"https://api.github.com/repos/kymatio/kymatio","labels_url":"https://api.github.com/repos/kymatio/kymatio/issues/792/labels{/name}","comments_url":"https://api.github.com/repos/kymatio/kymatio/issues/792/comments","events_url":"https://api.github.com/repos/kymatio/kymatio/issues/792/events","html_url":"https://github.com/kymatio/kymatio/issues/792","id":1112476425,"node_id":"I_kwDOCQLq_c5CTwsJ","number":792,"title":"Scattering 2D doesn't work when using 2^J == image size (TensorFlow backend)","user":{"login":"MatthijsMars","id":32309817,"node_id":"MDQ6VXNlcjMyMzA5ODE3","avatar_url":"https://avatars.githubusercontent.com/u/32309817?v=4","gravatar_id":"","url":"https://api.github.com/users/MatthijsMars","html_url":"https://github.com/MatthijsMars","followers_url":"https://api.github.com/users/MatthijsMars/followers","following_url":"https://api.github.com/users/MatthijsMars/following{/other_user}","gists_url":"https://api.github.com/users/MatthijsMars/gists{/gist_id}","starred_url":"https://api.github.com/users/MatthijsMars/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MatthijsMars/subscriptions","organizations_url":"https://api.github.com/users/MatthijsMars/orgs","repos_url":"https://api.github.com/users/MatthijsMars/repos","events_url":"https://api.github.com/users/MatthijsMars/events{/privacy}","received_events_url":"https://api.github.com/users/MatthijsMars/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-01-24T10:48:58Z","updated_at":"2022-06-20T20:22:44Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Similar issues have been reported before (#284, #363) and also fixed (#412) for Torch backend. However, still not working in the tensorflow backend:\r\n\r\ntest:\r\n```python \r\nimport numpy as np\r\nfrom kymatio.tensorflow import Scattering2D\r\n\r\nscattering = Scattering2D(J=5, shape=(32, 32))\r\ntest_im = np.ones((1,1,32,32))\r\ntest = scattering.scattering(test_im)\r\n```\r\n\r\nGives error:\r\n```\r\n      7 scattering = Scattering2D(J=5, shape=(32, 32))\r\n      8 test_im = np.ones((1,1,32,32))\r\n----> 9 test = scattering.scattering(test_im)\r\n\r\n~/.local/lib/python3.9/site-packages/kymatio/scattering2d/frontend/tensorflow_frontend.py in scattering(self, input)\r\n     48             input = tf.reshape(input, tf.concat(((-1,), signal_shape), 0))\r\n     49 \r\n---> 50             S = scattering2d(input, self.pad, self.unpad, self.backend, self.J, self.L, self.phi, self.psi,\r\n     51                              self.max_order, self.out_type)\r\n     52 \r\n\r\n~/.local/lib/python3.9/site-packages/kymatio/scattering2d/core/scattering2d.py in scattering2d(x, pad, unpad, backend, J, L, phi, psi, max_order, out_type)\r\n     13     out_S_0, out_S_1, out_S_2 = [], [], []\r\n     14 \r\n---> 15     U_r = pad(x)\r\n     16 \r\n     17     U_0_c = fft(U_r, 'C2C')\r\n\r\n~/.local/lib/python3.9/site-packages/kymatio/scattering2d/backend/tensorflow_backend.py in __call__(self, x)\r\n     27         paddings = [[0, 0]] * len(x.shape[:-2])\r\n     28         paddings += [[self.pad_size[0], self.pad_size[1]], [self.pad_size[2], self.pad_size[3]]]\r\n---> 29         return tf.cast(tf.pad(x, paddings, mode=\"REFLECT\"), tf.complex64)\r\n     30 \r\n     31 def unpad(in_):\r\n\r\n~/.local/lib/python3.9/site-packages/tensorflow/python/util/traceback_utils.py in error_handler(*args, **kwargs)\r\n    151     except Exception as e:\r\n    152       filtered_tb = _process_traceback_frames(e.__traceback__)\r\n--> 153       raise e.with_traceback(filtered_tb) from None\r\n    154     finally:\r\n    155       del filtered_tb\r\n\r\n~/.local/lib/python3.9/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)\r\n     56   try:\r\n     57     ctx.ensure_initialized()\r\n---> 58     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\r\n     59                                         inputs, attrs, num_outputs)\r\n     60   except core._NotOkStatusException as e:\r\n\r\nInvalidArgumentError: paddings must be less than the dimension size: 32, 32 not less than 32 [Op:MirrorPad]\r\n```\r\n\r\n(speculation) So possibly problems with the order of the padding being different in tensorflow from torch. \r\n\r\nShould also probably include some tests for these types of problems like the tests for implemented for Torch in #346 ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kymatio/kymatio/issues/792/timeline","performed_via_github_app":null,"state_reason":null}