{"url":"https://api.github.com/repos/kymatio/kymatio/issues/698","repository_url":"https://api.github.com/repos/kymatio/kymatio","labels_url":"https://api.github.com/repos/kymatio/kymatio/issues/698/labels{/name}","comments_url":"https://api.github.com/repos/kymatio/kymatio/issues/698/comments","events_url":"https://api.github.com/repos/kymatio/kymatio/issues/698/events","html_url":"https://github.com/kymatio/kymatio/issues/698","id":836742536,"node_id":"MDU6SXNzdWU4MzY3NDI1MzY=","number":698,"title":"TF wants complex inputs for its FFT","user":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-20T07:16:26Z","updated_at":"2021-03-20T09:06:29Z","closed_at":"2021-03-20T09:06:29Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Am getting the following error when I run the tests locally:\r\n```\r\n                                                               \r\nself = <test_tensorflow_scattering2d.TestScattering2DTensorFlow object at 0x7fe0883ba340>                                      \r\nbackend = <class 'kymatio.scattering2d.backend.tensorflow_backend.backend'>                                                    \r\n                                                                                                                                                                                                                                                               \r\n    @pytest.mark.parametrize('backend', backends)                                                                              \r\n    def test_Scattering2D(self, backend):                                                                                      \r\n        test_data_dir = os.path.dirname(__file__)                                                                              \r\n        data = None                                                                                                            \r\n        with open(os.path.join(test_data_dir, 'test_data_2d.npz'), 'rb') as f:                                                 \r\n            buffer = io.BytesIO(f.read())                                                                                      \r\n            data = np.load(buffer)                                                                                             \r\n                                                                                                                               \r\n        x = data['x']                                                                                                                                                                                                                                          \r\n        S = data['Sx']                                                                                                         \r\n        J = data['J']                                          \r\n        pre_pad = data['pre_pad']                                                                                                                                                                                                                              \r\n                                                                                                                                                                                                                                                               \r\n        M = x.shape[2]                                                                                                         \r\n        N = x.shape[3]                                                                                                         \r\n                                                                                                                               \r\n        scattering = Scattering2D(J, shape=(M, N), pre_pad=pre_pad,                                                            \r\n                                  frontend='tensorflow', backend=backend)                                                      \r\n                                                                                                                                                                                                                                                               \r\n        x = x                                                                                                                  \r\n        S = S                                                                                                                  \r\n>       Sg = scattering(x)                                                                                                     \r\n                                                                                                                                                                                                                                                               \r\ntests/scattering2d/test_tensorflow_scattering2d.py:195:                                                                                                                                                                                                        \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \r\n/home/janden/venv/kymatio/lib/python3.8/site-packages/tensorflow/python/module/module.py:289: in method_with_name_scope        \r\n    return method(self, *args, **kwargs)                                                                                       \r\nkymatio/frontend/tensorflow_frontend.py:15: in __call__                                                                        \r\n    return self.scattering(x)                                                                                                                                                                                                                                  \r\nkymatio/scattering2d/frontend/tensorflow_frontend.py:45: in scattering                                                         \r\n    S = scattering2d(input, self.pad, self.unpad, self.backend, self.J, self.L, self.phi, self.psi,                            \r\nkymatio/scattering2d/core/scattering2d.py:17: in scattering2d\r\n    U_0_c = fft(U_r, 'C2C')                                    \r\nkymatio/backend/base_backend.py:58: in __call__\r\n    return self.fft_forward(x, direction=direction, inverse=inverse)                                                           \r\nkymatio/backend/base_backend.py:53: in fft_forward\r\n    output = self.fft(x)                                       \r\nkymatio/scattering2d/backend/tensorflow_backend.py:80: in <lambda>                                                             \r\n    backend.fft = FFT(lambda x: tf.signal.fft2d(x, name='fft2d'),                                                              \r\n/home/janden/venv/kymatio/lib/python3.8/site-packages/tensorflow/python/ops/gen_spectral_ops.py:459: in fft2d                  \r\n    _ops.raise_from_not_ok_status(e, name)\r\n/home/janden/venv/kymatio/lib/python3.8/site-packages/tensorflow/python/framework/ops.py:6653: in raise_from_not_ok_status     \r\n    six.raise_from(core._status_to_exception(e.code, message), None)                                                           \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \r\n\r\nvalue = None, from_value = None\r\n\r\n>   ???                                                        \r\nE   tensorflow.python.framework.errors_impl.InvalidArgumentError: Value for attr 'Tcomplex' of float is not in the list of allowed values: complex64, complex128\r\nE       ; NodeDef: {{node FFT2D}}; Op<name=FFT2D; signature=input:Tcomplex -> output:Tcomplex; attr=Tcomplex:type,default=DT_COMPLEX64,allowed=[DT_COMPLEX64, DT_COMPLEX128]> [Op:FFT2D] name: fft2d\r\n\r\n<string>:3: InvalidArgumentError\r\n```\r\nI don't know why this isn't showing up in the CI. My TF version is:\r\n```\r\n$ pip freeze | grep tensorflow\r\ntensorflow==2.2.0rc3\r\ntensorflow-estimator==2.2.0\r\n```\r\n\r\nAt any rate, the issue seems that TF wants the input to the FFT to be of the type `complex64` or `complex128`. We might need to just add a cast before calling the FFT.","closed_by":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kymatio/kymatio/issues/698/timeline","performed_via_github_app":null,"state_reason":"completed"}