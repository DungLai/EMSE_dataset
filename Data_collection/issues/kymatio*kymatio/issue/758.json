{"url":"https://api.github.com/repos/kymatio/kymatio/issues/758","repository_url":"https://api.github.com/repos/kymatio/kymatio","labels_url":"https://api.github.com/repos/kymatio/kymatio/issues/758/labels{/name}","comments_url":"https://api.github.com/repos/kymatio/kymatio/issues/758/comments","events_url":"https://api.github.com/repos/kymatio/kymatio/issues/758/events","html_url":"https://github.com/kymatio/kymatio/issues/758","id":935269530,"node_id":"MDU6SXNzdWU5MzUyNjk1MzA=","number":758,"title":"Preallocation for speed","user":{"login":"OverLordGoldDragon","id":16495490,"node_id":"MDQ6VXNlcjE2NDk1NDkw","avatar_url":"https://avatars.githubusercontent.com/u/16495490?v=4","gravatar_id":"","url":"https://api.github.com/users/OverLordGoldDragon","html_url":"https://github.com/OverLordGoldDragon","followers_url":"https://api.github.com/users/OverLordGoldDragon/followers","following_url":"https://api.github.com/users/OverLordGoldDragon/following{/other_user}","gists_url":"https://api.github.com/users/OverLordGoldDragon/gists{/gist_id}","starred_url":"https://api.github.com/users/OverLordGoldDragon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OverLordGoldDragon/subscriptions","organizations_url":"https://api.github.com/users/OverLordGoldDragon/orgs","repos_url":"https://api.github.com/users/OverLordGoldDragon/repos","events_url":"https://api.github.com/users/OverLordGoldDragon/events{/privacy}","received_events_url":"https://api.github.com/users/OverLordGoldDragon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-07-01T22:50:22Z","updated_at":"2022-05-30T15:20:35Z","closed_at":"2022-05-30T15:20:35Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"I found a x1.7 speed gain via simple reused preallocation:\r\n\r\n```python\r\nU_1_c0 = zeros_like(U_0_hat)\r\nfor n1 in range(len(psi1)):\r\n    cdgmm(U_0_hat, psi1[n1][0], out=U_1_c0)\r\n    U_1_hat = subsample_fourier(U_1_c0, 2**K1)\r\n    # etc\r\n```\r\nRuntime: `901ms -> 540ms`. This can repeat for other basic ops to speed up the entire pipeline.\r\n\r\nThe caveat is [breaking differentiability](https://stackoverflow.com/q/68043831/10133797) for torch. Workarounds include:\r\n\r\n - A) `differentiable=True` kwarg\r\n - B)  `try-except` to detect differentiable context at runtime and set internal flag\r\n\r\n@lostanlen raises the concerns of (correct me if I'm wrong) 1) added kwarg; 2) increased testing complexity, requiring additional branches akin to additional backends. My response:\r\n\r\n 1. Non-differentiability is a common use case and a kwarg is a small price to pay for 50%+ overall speedup. Worst case, there's B)\r\n 2. Only tests explicitly for differentiability are affected, and there's only one in all of Kymatio: `test_differentiability_scattering()` in `test_torch_scattering1d.py`. All that's needed is setting a kwarg for this one test (or nothing with B) - and easy enough if there are more tests. This does not require additional testing branches, workflows, etc\r\n     - Can add a `test_outputs_agree()` but that's again simple\r\n\r\nWhat are your takes @janden @eickenberg ?\r\n","closed_by":{"login":"MuawizChaudhary","id":39755015,"node_id":"MDQ6VXNlcjM5NzU1MDE1","avatar_url":"https://avatars.githubusercontent.com/u/39755015?v=4","gravatar_id":"","url":"https://api.github.com/users/MuawizChaudhary","html_url":"https://github.com/MuawizChaudhary","followers_url":"https://api.github.com/users/MuawizChaudhary/followers","following_url":"https://api.github.com/users/MuawizChaudhary/following{/other_user}","gists_url":"https://api.github.com/users/MuawizChaudhary/gists{/gist_id}","starred_url":"https://api.github.com/users/MuawizChaudhary/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MuawizChaudhary/subscriptions","organizations_url":"https://api.github.com/users/MuawizChaudhary/orgs","repos_url":"https://api.github.com/users/MuawizChaudhary/repos","events_url":"https://api.github.com/users/MuawizChaudhary/events{/privacy}","received_events_url":"https://api.github.com/users/MuawizChaudhary/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kymatio/kymatio/issues/758/timeline","performed_via_github_app":null,"state_reason":"not_planned"}