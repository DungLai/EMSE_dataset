{"url":"https://api.github.com/repos/kymatio/kymatio/issues/712","repository_url":"https://api.github.com/repos/kymatio/kymatio","labels_url":"https://api.github.com/repos/kymatio/kymatio/issues/712/labels{/name}","comments_url":"https://api.github.com/repos/kymatio/kymatio/issues/712/comments","events_url":"https://api.github.com/repos/kymatio/kymatio/issues/712/events","html_url":"https://github.com/kymatio/kymatio/issues/712","id":852313868,"node_id":"MDU6SXNzdWU4NTIzMTM4Njg=","number":712,"title":"JTFS laundry","user":{"login":"OverLordGoldDragon","id":16495490,"node_id":"MDQ6VXNlcjE2NDk1NDkw","avatar_url":"https://avatars.githubusercontent.com/u/16495490?v=4","gravatar_id":"","url":"https://api.github.com/users/OverLordGoldDragon","html_url":"https://github.com/OverLordGoldDragon","followers_url":"https://api.github.com/users/OverLordGoldDragon/followers","following_url":"https://api.github.com/users/OverLordGoldDragon/following{/other_user}","gists_url":"https://api.github.com/users/OverLordGoldDragon/gists{/gist_id}","starred_url":"https://api.github.com/users/OverLordGoldDragon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OverLordGoldDragon/subscriptions","organizations_url":"https://api.github.com/users/OverLordGoldDragon/orgs","repos_url":"https://api.github.com/users/OverLordGoldDragon/repos","events_url":"https://api.github.com/users/OverLordGoldDragon/events{/privacy}","received_events_url":"https://api.github.com/users/OverLordGoldDragon/received_events","type":"User","site_admin":false},"labels":[{"id":1076176420,"node_id":"MDU6TGFiZWwxMDc2MTc2NDIw","url":"https://api.github.com/repos/kymatio/kymatio/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-07T11:33:21Z","updated_at":"2022-05-30T15:20:47Z","closed_at":"2022-05-30T15:20:46Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"@lostanlen and I bulleted two threads; I'll organize unresolved points here. List probably incomplete, will update\r\n\r\n### Unanswered (may add to Todo)\r\n\r\nNone\r\n \r\n### Todo\r\n\r\n - [ ] 1. move implementation notes?\r\n - [ ] 2. performance guide?\r\n - [ ] 3. rebase into `new-dev`?\r\n - [ ] 4. merge `axis=None` fix in `UnifiedBackend`\r\n\r\n<hr>\r\n\r\n - [x] ~1. Docs~\r\n - [x] ~5. PR breakdown~\r\n - [x] ~6. `conj_reflections` cpu calculations take significant time~\r\n - [x] ~6. Default `pad_factor_fr='zero'`? chk speed~\r\n - [x] ~5. SE~\r\n - [x] ~7. `pack_coeff_jtfs` freq ordering~\r\n - [x] ~2. rename `sc_freq`? -- `fscat` -- `scat_fr` -- `sf`~\r\n - [x] ~6. coverage~\r\n - [x] ~3. reconstruction converges faster than `scattering.m`'s?~\r\n - [x] ~9. examples~\r\n - [x] ~4. coefficient renormalization across samples~\r\n - [x] ~11. `nyquist_correction=False` for JTFS~\r\n - [x] 9.~ `J_pad_fr` -> `J_pad_frs`~\r\n - [x] ~4. review points~\r\n - [x] ~3. `shape_fr` -> `N_fr`?~\r\n - [x] ~4. `analytic`~\r\n - [x] ~2. Demo use case for `resample_* = False`~\r\n - [x] ~3. move pad update to jtfs~\r\n - [x] ~4. visuals test~\r\n - [x] ~11. `pack_coeffs_jtfs` w/ `out_exclude != None`~\r\n - [x] ~10. tuple `r_psi`~\r\n - [x] 7. `implementation`\r\n - [x] ~8. `JTFS(log(U1))`?~\r\n - [x] ~6. \"temporal\" -> \"spatial\"?~\r\n - [x] ~10. denormals~\r\n - [x] ~2. Ensure no boundary effects~\r\n - [x] ~9. 4D demo: `aligned`, `sampling_psi_fr`~\r\n - [x] ~11. `conj-reflect-zero` is worse than `zero` for FDTS? Even with `reflect`?~\r\n - [x] ~10. rework `xi_max`~\r\n - [x] ~8. check LP for `exclude` -- should `recalibrate` phi?~\r\n - [x] ~11. `fftshift` for `zoom=-1`?~\r\n - [x] ~7. out_4D~\r\n - [x] 7. ~\"out_3D\" and exclude? & docs~\r\n - [x] ~10. `validate_filterbank()` -- check if filters are well-behaved in time and freq domain: boundary effects, decay, analyticity, single peak, LP sum, etc~\r\n - [x] ~15. assert that every `j0` has at least one filter in `exclude`~\r\n - [x] ~10. energy-norm coeffs at compute?~\r\n - [x] ~14. stride energy correction?~\r\n - [x] ~7. torch reconstruction OOM (pseudo-iter to register; always keep `J_pad_fr_max_init` in general?)~\r\n - [x] ~7. global average pooling: enforce mean to not exceed `/ N`? or first unpad then take mean?~\r\n - [x] x~14. unpad_fr sooner if `log2_F < J_fr` per `n2` (same for time)~\r\n - [x] x~13. `average_fr_global[j0] = bool(pad_fr < phi_fr['j'])`?~\r\n - [x] x~17. `out_3D`: need not max pad for all, can just pad output~\r\n - [x] ~4. I/O energy test~\r\n - [x] ~9. test global averaging by comparing against `T=N-1` and `F=shape_fr_max - 1`~\r\n - [x] ~8. append stride as part of computed meta?~\r\n - [x] ~9. pad to max with `average_fr_global`?~\r\n - [x] ~8. `average=False` breaks~\r\n - [x] ~7. docs: true `aligned` requires `resample_=True`~\r\n - [x] ~12. backprop test~\r\n - [x] ~8. Dedicated edge case testing~\r\n - [x] ~6. Invariance tests~\r\n - [x] ~4. alt to zero padding JTFS: zero boundaries before `*phi_t` in `_joint_lowpass()`~\r\n - [x] ~2. Backends (patch up `dev`)~\r\n - [x] ~10. variable `n1_fr` per `n2`?~\r\n - [x] ~10. Does `aligned=True` permit `resample_*=False`?~\r\n - [x] ~11. `meta` neglects `*Phi` in tracking first order~\r\n - [x] ~12. `resample_psi_fr=False` aliases~\r\n - [x] ~13. can compute exact padding with `resample*=any`~\r\n - [x] ~14. `resample_psi_fr=False` creates duplicate or redundant filters ...~\r\n - [x] ~15. adjust filter meta based on `resample_`~\r\n - [x] ~16. rework `resample_=False`~\r\n - [x] ~2. ~Backends (done for now, must finish `torch` later along integration with `master`)~\r\n - [x] ~9. meta~\r\n - [x] ~10. move `_FrequencyScatteringBase` docs to `TimeFrequencyScatteringBase1D`?~\r\n - [x] ~11. `resample_*` we get to subsample more but `j` is less?~\r\n - [x] ~12. is a `max_subsample_before_psi_fr` needed? (i.e. pad restriction)~\r\n - [x] ~11. Detach `out_type` from computation logic~\r\n - [x] ~12. Is `sc_freq.ind_start_fr[-1]` unpad for `phi_t * phi_f` correct? (what if `psi_f` subsamples more)~\r\n - [x] ~25. undo accounting for non-CQT filter failure~\r\n - [x]  ~28. rework \"no second order\" edge case to only apply to JTFS~\r\n - [x]  ~29. `alpha`~\r\n - [x]  ~22. up is down~\r\n - [x]  ~17. Set `J_fr` default from `shape_fr_max`?~\r\n - [x]  ~18. Default `average_fr=False`~\r\n - [x]  ~26. `max_pad_factor_fr`~ test~\r\n - [x]  ~9. `resample_phi_fr=False`: not accounted for by `compute_minimum_support_to_pad`, will pad excessively. Unsure if any effects other than speed~\r\n - [x]  ~16. Test `average` & `average_fr` combos (also `oversampling`)~\r\n - [x]  ~25. `log2_F_fo < log2_F` edge case test~\r\n - [x]  ~27. Forbid `J_pad_fo > J_pad_max` with `resample_* = True`~\r\n - [x]  ~24. Ignore `F`, `T` with `average* = False`~\r\n - [x]  ~10. Should `not aligned and out_type == 'list'` be allowed? Unchecked~\r\n - [x]  ~6. Batched inputs~\r\n - [x]  ~19. Detect and set `T=2**N` -> `average=\"global\"`~\r\n - [x]  ~11. 2-point DFT check (at lowpass)~\r\n - [x]  ~15. Merge `resample_psi_fr` & `resample_phi_fr` into tuple?~\r\n - [x]  ~21. `phi_t * phi_f` L1 abnormality~\r\n - [x]  ~20. `out_type = \"array-like\"` so shapes are like `\"array\"` but return list to avoid redundant concat~\r\n - [x]  ~7. Meta for various `out_type` & kwargs~\r\n - [x]  ~3. `average_fr` kwarg (and one more for FOTS freq avg?)~\r\n - [x]  ~4. `concatenate` first-order and JTFS coeffs separately?~\r\n      ~- `* phi_t`: flatten joint along first-order~\r\n      ~- `* phi_t * phi_f`: treat FO as a joint slice~\r\n      ~- both: two arrays? `* phi_t` separately~\r\n - [x]  ~6. `F`~\r\n - [x]  ~16. `phi_t * psi_f` pairs: use all first-order coeffs? (also `psi_t * phi_f` doesn't use `J_fr - 1`)~\r\n - [x]  ~21. `resample_* = False` tests~\r\n - [x]  ~21. `phi`'s max `j` logic in factory~\r\n - [x]  ~22. `_fo` case test~\r\n - [x]  ~19. `sc_freq.phi_f` does global average pooling (bad resampling); also check `sc_freq.psi1_f`~\r\n - [x]  ~3. Global average pooling~\r\n - [x]  ~7. Zeroth-order~\r\n - [x]  ~19. check filterbank energies~\r\n - [x]  ~11.`Q2 > 1`~  \r\n - [x] ~4. `padlen(S_1) > padlen(Y_2)` case~\r\n - [x]  ~4. Resampled `sc_freq.psi1_f`~\r\n - [x]  ~5. Variable padding amounts for `Y_2_list`~\r\n - [x]  ~6. Correct padding boundaries for `Y_2_list`~\r\n - [x]  ~6. `oversample_fr` kwarg? (different from current)~\r\n - [x]  ~8. `phi_f` resampling/subsampling rate for variable padding~\r\n - [x]  ~11. `sc_freq` may lack short enough filters given wide range of `shape_fr` (reproducible with `T=2**16, J=14, Q=16`)~\r\n\r\n### Todo (non-JTFS)\r\n\r\n - [ ] 1. `periodize_filter_fourier`: \r\n```\r\nwhich has the effect of `h_t[::k]`, where `h_t = ifft(h_f)`.\r\n````\r\n - [ ] 2. `scattering_filter_factory`'s `**kwargs` does nothing\r\n - [ ] 3. `ceil`\r\n - [ ] 4. \"subsamp in time <=> ~periodization~ folding in Fourier\"\r\n - [ ] 5. dict returns where lists suffice (or wrong docs)\r\n - [ ] 6. Move `out_type` checks to base frontend\r\n - [ ] 7. Idea re: JTFS tests long: run only if relevant source files changed. Run method on top of `test_jtfs.py` to detect, against previously stored binary file of sources\r\n\r\n<hr>\r\n\r\n - [x] 5. ~For `T`, if `average=False`, override and set to `2**J` so it doesn't interfere with subsampling (+ throw warning that it does nothing)~\r\n - [x] ~11. document \"pad length is x16 `2**J`\"~\r\n - [x] ~12. input device check, recommend `cuda`~\r\n - [x] ~10. \"last dim 2\" allows faster \"complex * real\"?~\r\n - [x] ~5. `alpha=5` -> `4`~\r\n - [x] ~5. `J_tentative` repeat `while support == N//2`~\r\n - [x] ~3. up is down~","closed_by":{"login":"MuawizChaudhary","id":39755015,"node_id":"MDQ6VXNlcjM5NzU1MDE1","avatar_url":"https://avatars.githubusercontent.com/u/39755015?v=4","gravatar_id":"","url":"https://api.github.com/users/MuawizChaudhary","html_url":"https://github.com/MuawizChaudhary","followers_url":"https://api.github.com/users/MuawizChaudhary/followers","following_url":"https://api.github.com/users/MuawizChaudhary/following{/other_user}","gists_url":"https://api.github.com/users/MuawizChaudhary/gists{/gist_id}","starred_url":"https://api.github.com/users/MuawizChaudhary/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MuawizChaudhary/subscriptions","organizations_url":"https://api.github.com/users/MuawizChaudhary/orgs","repos_url":"https://api.github.com/users/MuawizChaudhary/repos","events_url":"https://api.github.com/users/MuawizChaudhary/events{/privacy}","received_events_url":"https://api.github.com/users/MuawizChaudhary/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kymatio/kymatio/issues/712/timeline","performed_via_github_app":null,"state_reason":"not_planned"}