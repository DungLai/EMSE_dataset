{"url":"https://api.github.com/repos/kymatio/kymatio/issues/637","repository_url":"https://api.github.com/repos/kymatio/kymatio","labels_url":"https://api.github.com/repos/kymatio/kymatio/issues/637/labels{/name}","comments_url":"https://api.github.com/repos/kymatio/kymatio/issues/637/comments","events_url":"https://api.github.com/repos/kymatio/kymatio/issues/637/events","html_url":"https://github.com/kymatio/kymatio/issues/637","id":771202029,"node_id":"MDU6SXNzdWU3NzEyMDIwMjk=","number":637,"title":"Keras not saving model architecture","user":{"login":"dgattiwsu","id":32550835,"node_id":"MDQ6VXNlcjMyNTUwODM1","avatar_url":"https://avatars.githubusercontent.com/u/32550835?v=4","gravatar_id":"","url":"https://api.github.com/users/dgattiwsu","html_url":"https://github.com/dgattiwsu","followers_url":"https://api.github.com/users/dgattiwsu/followers","following_url":"https://api.github.com/users/dgattiwsu/following{/other_user}","gists_url":"https://api.github.com/users/dgattiwsu/gists{/gist_id}","starred_url":"https://api.github.com/users/dgattiwsu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dgattiwsu/subscriptions","organizations_url":"https://api.github.com/users/dgattiwsu/orgs","repos_url":"https://api.github.com/users/dgattiwsu/repos","events_url":"https://api.github.com/users/dgattiwsu/events{/privacy}","received_events_url":"https://api.github.com/users/dgattiwsu/received_events","type":"User","site_admin":false},"labels":[{"id":1076176418,"node_id":"MDU6TGFiZWwxMDc2MTc2NDE4","url":"https://api.github.com/repos/kymatio/kymatio/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"assignees":[{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false}],"milestone":null,"comments":9,"created_at":"2020-12-18T22:19:14Z","updated_at":"2021-03-19T08:20:10Z","closed_at":"2021-03-19T08:20:10Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n**Hi everybody, \r\nI have included in a Keras model a scattering layer using the following syntax:**\r\n\r\n```\r\nimport kymatio\r\nfrom kymatio.keras import Scattering2D\r\n\r\n# Model architecture\r\ndef Dual_ResNet_Atrous_Att_WST(input_shape=(HEIGHT, WIDTH, CHANNELS),\r\n                   mra_channels=MRACHANNELS,\r\n                   num_class=NUM_CLASS,\r\n                   ks1=KS1, ks2=KS2, ks3=KS3, \r\n                   dl1=DL1, dl2=DL2, dl3=DL3,\r\n                   filters=NF,resblock1=NR1,\r\n                   r_filters=NFL, resblock2=NR2,\r\n                   dil_mode=DIL_MODE, \r\n                   sp_dropout=DR1,re_dropout=DR2,\r\n                   mask_float=True,\r\n                   attention=None,\r\n                   mask_threshold=0.5,\r\n                   return_seq=True):\r\n\r\n    input_1 = Input(shape=(input_shape[0],input_shape[1],mra_channels))    \r\n    input_2 = Input(shape=input_shape)\r\n    input_3 = tf.where(tf.greater(input_2,mask_threshold),1.0,0.0)\r\n    \r\n    if attention == 'wst':\r\n        # wavelet scattering transform (WST)\r\n        d01 = UpSampling2D(size=(4, 4), interpolation=\"bilinear\")(input_1)\r\n        d02 = Lambda(lambda x: x[:,:,:,0])(d01)\r\n        d03 = Scattering2D(J=2,L=6)(d02)\r\n        d0 = tf.transpose(d03,perm=[0, 2, 3, 1])\r\n    \r\n    for cycle in range(resblock1):\r\n        if cycle == 0:            \r\n            d1 = stem_split_3k(d0, filters, mode=dil_mode, \r\n                                kernel_size_1=ks1, kernel_size_2=ks2, kernel_size_3=ks3, \r\n                                dilation_1=dl1, dilation_2=dl2, dilation_3=dl3,\r\n                                kernel_regularizer=None)                      \r\n        else:\r\n            d1 = residual_block_split_3k(d1, filters, mode=dil_mode, \r\n                                         kernel_size_1=ks1, kernel_size_2=ks2, kernel_size_3=ks3, \r\n                                         dilation_1=dl1, dilation_2=dl2, dilation_3=dl3,\r\n                                         kernel_regularizer=None) \r\n            \r\n\r\n        d1 = SpatialDropout2D(sp_dropout)(d1)            \r\n                 \r\n    d2 = residual_block_split_3k(d1, num_class, mode=\"add\", \r\n                                    kernel_size_1=ks1, kernel_size_2=ks2, kernel_size_3=ks3, \r\n                                    dilation_1=dl1, dilation_2=dl2,dilation_3=dl3,\r\n                                    kernel_regularizer=regularizers.l1_l2(l1=1e-5, l2=1e-4))\r\n        \r\n    d3 = LeakyReLU(alpha=0.1)(d2)\r\n    \r\n    if mask_float:\r\n        d3 = Multiply()([d3, input_2])\r\n    else:\r\n        d3 = Multiply()([d3, input_3])\r\n   \r\n    d3 = GlobalAveragePooling2D()(d3)    \r\n    \r\n    output_1 = Activation(\"softmax\", name = 'softmax')(d3)    \r\n    \r\n    model = Model([input_1,input_2], output_1, name='Dual_Res-CR-Net_Att_WST')    \r\n\r\n    return model\r\n\r\n```\r\n\r\n **The model compiles without problems:**\r\n\r\n```\r\n# Model compilation\r\nstrategy = tf.distribute.MirroredStrategy()\r\nwith strategy.scope():\r\n    model = Dual_ResNet_Atrous_Att_WST(input_shape=(HEIGHT, WIDTH, CHANNELS),\r\n                   mra_channels=MRACHANNELS,                          \r\n                   num_class=NUM_CLASS,\r\n                   ks1=KS1, ks2=KS2, ks3=KS3, \r\n                   dl1=DL1, dl2=DL2, dl3=DL3,\r\n                   filters=NF,resblock1=NR1,\r\n                   r_filters=NFL, resblock2=NR2,\r\n                   dil_mode=DIL_MODE, \r\n                   sp_dropout=DR1,re_dropout=DR2,\r\n                   mask_float=True,\r\n                   attention='wst',\r\n                   mask_threshold=0.5,                                         \r\n                   return_seq=True)\r\n        \r\n    model.compile(optimizer=Adam(), \r\n                      loss=tf.keras.losses.CategoricalCrossentropy(), \r\n                      metrics=[tf.keras.metrics.CategoricalAccuracy()])\r\n\r\nmodel.summary()\r\n```\r\n\r\nModel: Dual_Res-CR-Net_Att_WST\r\n\r\ninput_1 (InputLayer)            [(None, 300, 340, 1) 0                                            \r\n__________________________________________________________________________________________________\r\nup_sampling2d (UpSampling2D)    (None, 1200, 1360, 1 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda (Lambda)                 (None, 1200, 1360)   0           up_sampling2d[0][0]              \r\n__________________________________________________________________________________________________\r\nscattering2d (Scattering2D)     (None, 49, 300, 340) 0           lambda[0][0]                     \r\n__________________________________________________________________________________________________\r\ntf_op_layer_transpose (TensorFl [(None, 300, 340, 49 0           scattering2d[0][0]               \r\n__________________________________________________________________________________________________\r\nseparable_conv2d (SeparableConv (None, 300, 340, 16) 1241        tf_op_layer_transpose[0][0]      \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_2 (SeparableCo (None, 300, 340, 16) 2025        tf_op_layer_transpose[0][0]      \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_4 (SeparableCo (None, 300, 340, 16) 3201        tf_op_layer_transpose[0][0]      \r\n__________________________________________________________________________________________________\r\nbatch_normalization (BatchNorma (None, 300, 340, 16) 64          separable_conv2d[0][0]           \r\n__________________________________________________________________________________________________\r\nbatch_normalization_1 (BatchNor (None, 300, 340, 16) 64          separable_conv2d_2[0][0]         \r\n__________________________________________________________________________________________________\r\nbatch_normalization_2 (BatchNor (None, 300, 340, 16) 64          separable_conv2d_4[0][0]         \r\n__________________________________________________________________________________________________\r\nleaky_re_lu (LeakyReLU)         (None, 300, 340, 16) 0           batch_normalization[0][0]        \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_1 (LeakyReLU)       (None, 300, 340, 16) 0           batch_normalization_1[0][0]      \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_2 (LeakyReLU)       (None, 300, 340, 16) 0           batch_normalization_2[0][0]      \r\n__________________________________________________________________________________________________\r\nconv2d (Conv2D)                 (None, 300, 340, 48) 2400        tf_op_layer_transpose[0][0]      \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_1 (SeparableCo (None, 300, 340, 16) 416         leaky_re_lu[0][0]                \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_3 (SeparableCo (None, 300, 340, 16) 672         leaky_re_lu_1[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_5 (SeparableCo (None, 300, 340, 16) 1056        leaky_re_lu_2[0][0]              \r\n__________________________________________________________________________________________________\r\nbatch_normalization_3 (BatchNor (None, 300, 340, 48) 192         conv2d[0][0]                     \r\n__________________________________________________________________________________________________\r\nconcatenate (Concatenate)       (None, 300, 340, 48) 0           separable_conv2d_1[0][0]         \r\n                                                                 separable_conv2d_3[0][0]         \r\n                                                                 separable_conv2d_5[0][0]         \r\n__________________________________________________________________________________________________\r\nadd (Add)                       (None, 300, 340, 48) 0           batch_normalization_3[0][0]      \r\n                                                                 concatenate[0][0]                \r\n__________________________________________________________________________________________________\r\nspatial_dropout2d (SpatialDropo (None, 300, 340, 48) 0           add[0][0]                        \r\n__________________________________________________________________________________________________\r\nbatch_normalization_4 (BatchNor (None, 300, 340, 48) 192         spatial_dropout2d[0][0]          \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_3 (LeakyReLU)       (None, 300, 340, 48) 0           batch_normalization_4[0][0]      \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_6 (SeparableCo (None, 300, 340, 16) 1216        leaky_re_lu_3[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_8 (SeparableCo (None, 300, 340, 16) 1984        leaky_re_lu_3[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_10 (SeparableC (None, 300, 340, 16) 3136        leaky_re_lu_3[0][0]              \r\n__________________________________________________________________________________________________\r\nbatch_normalization_5 (BatchNor (None, 300, 340, 16) 64          separable_conv2d_6[0][0]         \r\n__________________________________________________________________________________________________\r\nbatch_normalization_6 (BatchNor (None, 300, 340, 16) 64          separable_conv2d_8[0][0]         \r\n__________________________________________________________________________________________________\r\nbatch_normalization_7 (BatchNor (None, 300, 340, 16) 64          separable_conv2d_10[0][0]        \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_4 (LeakyReLU)       (None, 300, 340, 16) 0           batch_normalization_5[0][0]      \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_5 (LeakyReLU)       (None, 300, 340, 16) 0           batch_normalization_6[0][0]      \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_6 (LeakyReLU)       (None, 300, 340, 16) 0           batch_normalization_7[0][0]      \r\n__________________________________________________________________________________________________\r\nconv2d_1 (Conv2D)               (None, 300, 340, 48) 2352        spatial_dropout2d[0][0]          \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_7 (SeparableCo (None, 300, 340, 16) 416         leaky_re_lu_4[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_9 (SeparableCo (None, 300, 340, 16) 672         leaky_re_lu_5[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_11 (SeparableC (None, 300, 340, 16) 1056        leaky_re_lu_6[0][0]              \r\n__________________________________________________________________________________________________\r\nbatch_normalization_8 (BatchNor (None, 300, 340, 48) 192         conv2d_1[0][0]                   \r\n__________________________________________________________________________________________________\r\nconcatenate_1 (Concatenate)     (None, 300, 340, 48) 0           separable_conv2d_7[0][0]         \r\n                                                                 separable_conv2d_9[0][0]         \r\n                                                                 separable_conv2d_11[0][0]        \r\n__________________________________________________________________________________________________\r\nadd_1 (Add)                     (None, 300, 340, 48) 0           batch_normalization_8[0][0]      \r\n                                                                 concatenate_1[0][0]              \r\n__________________________________________________________________________________________________\r\nspatial_dropout2d_1 (SpatialDro (None, 300, 340, 48) 0           add_1[0][0]                      \r\n__________________________________________________________________________________________________\r\nbatch_normalization_9 (BatchNor (None, 300, 340, 48) 192         spatial_dropout2d_1[0][0]        \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_7 (LeakyReLU)       (None, 300, 340, 48) 0           batch_normalization_9[0][0]      \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_12 (SeparableC (None, 300, 340, 2)  530         leaky_re_lu_7[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_14 (SeparableC (None, 300, 340, 2)  1298        leaky_re_lu_7[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_16 (SeparableC (None, 300, 340, 2)  2450        leaky_re_lu_7[0][0]              \r\n__________________________________________________________________________________________________\r\nbatch_normalization_10 (BatchNo (None, 300, 340, 2)  8           separable_conv2d_12[0][0]        \r\n__________________________________________________________________________________________________\r\nbatch_normalization_11 (BatchNo (None, 300, 340, 2)  8           separable_conv2d_14[0][0]        \r\n__________________________________________________________________________________________________\r\nbatch_normalization_12 (BatchNo (None, 300, 340, 2)  8           separable_conv2d_16[0][0]        \r\n__________________________________________________________________________________________________\r\nconv2d_2 (Conv2D)               (None, 300, 340, 2)  98          spatial_dropout2d_1[0][0]        \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_8 (LeakyReLU)       (None, 300, 340, 2)  0           batch_normalization_10[0][0]     \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_9 (LeakyReLU)       (None, 300, 340, 2)  0           batch_normalization_11[0][0]     \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_10 (LeakyReLU)      (None, 300, 340, 2)  0           batch_normalization_12[0][0]     \r\n__________________________________________________________________________________________________\r\nbatch_normalization_13 (BatchNo (None, 300, 340, 2)  8           conv2d_2[0][0]                   \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_13 (SeparableC (None, 300, 340, 2)  24          leaky_re_lu_8[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_15 (SeparableC (None, 300, 340, 2)  56          leaky_re_lu_9[0][0]              \r\n__________________________________________________________________________________________________\r\nseparable_conv2d_17 (SeparableC (None, 300, 340, 2)  104         leaky_re_lu_10[0][0]             \r\n__________________________________________________________________________________________________\r\nadd_2 (Add)                     (None, 300, 340, 2)  0           batch_normalization_13[0][0]     \r\n                                                                 separable_conv2d_13[0][0]        \r\n                                                                 separable_conv2d_15[0][0]        \r\n                                                                 separable_conv2d_17[0][0]        \r\n__________________________________________________________________________________________________\r\nleaky_re_lu_11 (LeakyReLU)      (None, 300, 340, 2)  0           add_2[0][0]  \r\n__________________________________________________________________________________________________                    \r\ninput_2 (InputLayer)            [(None, 300, 340, 1) 0 \r\n__________________________________________________________________________________________________                                           \r\nmultiply (Multiply)             (None, 300, 340, 2)  0           leaky_re_lu_11[0][0]             \r\n                                                                 input_2[0][0] \r\n__________________________________________________________________________________________________                   \r\nglobal_average_pooling2d (Globa (None, 2)            0           multiply[0][0] \r\n__________________________________________________________________________________________________                  \r\nsoftmax (Activation)            (None, 2)            0           global_average_pooling2d[0][0]  \r\n__________________________________________________________________________________________________ \r\n\r\n\r\nTotal params: 27,587\r\nTrainable params: 26,995\r\nNon-trainable params: 592\r\n\r\n**and runs very nicely and very fast (for example, just 3 epochs), however with a warning for not being able to serialize as JSON and a second warning: Layers with arguments in `__init__` must override `get_config`.**\r\n\r\n```\r\n# TRAINING\r\nepoch_num = 3\r\ntrain_steps = len(train_generator)\r\nval_steps = len(valid_generator)\r\n\r\nhistory = model.fit(train_generator, \r\n                    validation_data=valid_generator,\r\n                    steps_per_epoch=train_steps,\r\n                    validation_steps=val_steps,\r\n                    epochs=epoch_num,\r\n                    initial_epoch=initial_epoch,\r\n                    max_queue_size =15,\r\n                    workers=1,\r\n                    callbacks = callbacks_list)\r\n```\r\n  \r\nTrain for 81 steps, validate for 16 steps\r\nWARNING:tensorflow:Model failed to serialize as JSON. Ignoring... Layers with arguments in `__init__` must override `get_config`.\r\nEpoch 1/3\r\nINFO:tensorflow:batch_all_reduce: 88 all-reduces with algorithm = nccl, num_packs = 1, agg_small_grads_max_bytes = 0 and agg_small_grads_max_group = 10\r\nINFO:tensorflow:batch_all_reduce: 88 all-reduces with algorithm = nccl, num_packs = 1, agg_small_grads_max_bytes = 0 and agg_small_grads_max_group = 10\r\n81/81 [==============================] - 535s 7s/step - loss: 0.1260 - categorical_accuracy: 0.3951 - val_loss: 0.1268 - val_categorical_accuracy: 0.3000\r\nEpoch 2/3\r\n81/81 [==============================] - 146s 2s/step - loss: 0.1206 - categorical_accuracy: 0.3160 - val_loss: 0.1237 - val_categorical_accuracy: 0.3000\r\nEpoch 3/3\r\n81/81 [==============================] - 146s 2s/step - loss: 0.1178 - categorical_accuracy: 0.3185 - val_loss: 0.1192 - val_categorical_accuracy: 0.3000\r\n\r\n**However if I try to save the model architecture without weights:**\r\n \r\n`model.save('models/3_epoch_' + model_selection + '_' + model_number + '_arch' + '.h5')`\r\n\r\n**I get:**\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\n<ipython-input-27-abc9f39fa94f> in <module>\r\n      1 # In[12]:\r\n      2 # Save architecture without weights as h5\r\n----> 3 model.save('models/3_epoch_' + model_selection + '_' + model_number + '_arch' + '.h5')\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py in save(self, filepath, overwrite, include_optimizer, save_format, signatures, options)\r\n   1006     \"\"\"\r\n   1007     save.save_model(self, filepath, overwrite, include_optimizer, save_format,\r\n-> 1008                     signatures, options)\r\n   1009 \r\n   1010   def save_weights(self, filepath, overwrite=True, save_format=None):\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/save.py in save_model(model, filepath, overwrite, include_optimizer, save_format, signatures, options)\r\n    110           'or using `save_weights`.')\r\n    111     hdf5_format.save_model_to_hdf5(\r\n--> 112         model, filepath, overwrite, include_optimizer)\r\n    113   else:\r\n    114     saved_model_save.save(model, filepath, overwrite, include_optimizer,\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py in save_model_to_hdf5(model, filepath, overwrite, include_optimizer)\r\n     97 \r\n     98   try:\r\n---> 99     model_metadata = saving_utils.model_metadata(model, include_optimizer)\r\n    100     for k, v in model_metadata.items():\r\n    101       if isinstance(v, (dict, list, tuple)):\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saving_utils.py in model_metadata(model, include_optimizer, require_config)\r\n    170   except NotImplementedError as e:\r\n    171     if require_config:\r\n--> 172       raise e\r\n    173 \r\n    174   metadata = dict(\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saving_utils.py in model_metadata(model, include_optimizer, require_config)\r\n    167   model_config = {'class_name': model.__class__.__name__}\r\n    168   try:\r\n--> 169     model_config['config'] = model.get_config()\r\n    170   except NotImplementedError as e:\r\n    171     if require_config:\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py in get_config(self)\r\n    916     if not self._is_graph_network:\r\n    917       raise NotImplementedError\r\n--> 918     return copy.deepcopy(get_network_config(self))\r\n    919 \r\n    920   @classmethod\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py in get_network_config(network, serialize_layer_fn)\r\n   1991           filtered_inbound_nodes.append(node_data)\r\n   1992 \r\n-> 1993     layer_config = serialize_layer_fn(layer)\r\n   1994     layer_config['name'] = layer.name\r\n   1995     layer_config['inbound_nodes'] = filtered_inbound_nodes\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/utils/generic_utils.py in serialize_keras_object(instance)\r\n    196 \r\n    197   if hasattr(instance, 'get_config'):\r\n--> 198     config = instance.get_config()\r\n    199     serialization_config = {}\r\n    200     for key, item in config.items():\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py in get_config(self)\r\n    497     # or that `get_config` has been overridden:\r\n    498     if len(extra_args) > 1 and hasattr(self.get_config, '_is_default'):\r\n--> 499       raise NotImplementedError('Layers with arguments in `__init__` must '\r\n    500                                 'override `get_config`.')\r\n    501     return config\r\n\r\nNotImplementedError: Layers with arguments in `__init__` must override `get_config`.\r\n\r\n \r\n**Alternatively I can try to save the model including the weights:**\r\n\r\n```\r\nmodel.save('models/3_epoch_' + model_selection + '_' + model_number + '_all' + '.h5',\r\n        overwrite=True,include_optimizer=False,save_format='h5',signatures=None,options=None)\r\n```\r\n\r\n**in which case I also get:**\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\n<ipython-input-26-ccabc94d774e> in <module>\r\n      3 # Save architecture + weights\r\n      4 model.save('models/3_epoch_' + model_selection + '_' + model_number + '_all' + '.h5',\r\n----> 5         overwrite=True,include_optimizer=False,save_format='h5',signatures=None,options=None)\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py in save(self, filepath, overwrite, include_optimizer, save_format, signatures, options)\r\n   1006     \"\"\"\r\n   1007     save.save_model(self, filepath, overwrite, include_optimizer, save_format,\r\n-> 1008                     signatures, options)\r\n   1009 \r\n   1010   def save_weights(self, filepath, overwrite=True, save_format=None):\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/save.py in save_model(model, filepath, overwrite, include_optimizer, save_format, signatures, options)\r\n    110           'or using `save_weights`.')\r\n    111     hdf5_format.save_model_to_hdf5(\r\n--> 112         model, filepath, overwrite, include_optimizer)\r\n    113   else:\r\n    114     saved_model_save.save(model, filepath, overwrite, include_optimizer,\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py in save_model_to_hdf5(model, filepath, overwrite, include_optimizer)\r\n     97 \r\n     98   try:\r\n---> 99     model_metadata = saving_utils.model_metadata(model, include_optimizer)\r\n    100     for k, v in model_metadata.items():\r\n    101       if isinstance(v, (dict, list, tuple)):\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saving_utils.py in model_metadata(model, include_optimizer, require_config)\r\n    170   except NotImplementedError as e:\r\n    171     if require_config:\r\n--> 172       raise e\r\n    173 \r\n    174   metadata = dict(\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saving_utils.py in model_metadata(model, include_optimizer, require_config)\r\n    167   model_config = {'class_name': model.__class__.__name__}\r\n    168   try:\r\n--> 169     model_config['config'] = model.get_config()\r\n    170   except NotImplementedError as e:\r\n    171     if require_config:\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py in get_config(self)\r\n    916     if not self._is_graph_network:\r\n    917       raise NotImplementedError\r\n--> 918     return copy.deepcopy(get_network_config(self))\r\n    919 \r\n    920   @classmethod\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py in get_network_config(network, serialize_layer_fn)\r\n   1991           filtered_inbound_nodes.append(node_data)\r\n   1992 \r\n-> 1993     layer_config = serialize_layer_fn(layer)\r\n   1994     layer_config['name'] = layer.name\r\n   1995     layer_config['inbound_nodes'] = filtered_inbound_nodes\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/utils/generic_utils.py in serialize_keras_object(instance)\r\n    196 \r\n    197   if hasattr(instance, 'get_config'):\r\n--> 198     config = instance.get_config()\r\n    199     serialization_config = {}\r\n    200     for key, item in config.items():\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py in get_config(self)\r\n    497     # or that `get_config` has been overridden:\r\n    498     if len(extra_args) > 1 and hasattr(self.get_config, '_is_default'):\r\n--> 499       raise NotImplementedError('Layers with arguments in `__init__` must '\r\n    500                                 'override `get_config`.')\r\n    501     return config\r\n\r\nNotImplementedError: Layers with arguments in `__init__` must override `get_config`.\r\n\r\n**In both cases a .h5 file is made, but if I try to reload the model from either saved .h5, the loaded file does not contain a model.:**\r\n\r\n```\r\nstrategy = tf.distribute.MirroredStrategy()\r\nwith strategy.scope():\r\n\r\n    filepath = 'models/' + model_selection + '_' + model_number + '.h5'    \r\n    model = load_model(filepath, compile=False)     \r\n\r\n    model.compile(optimizer=Adam(), \r\n                  loss=tf.keras.losses.CategoricalCrossentropy(), \r\n                  metrics=[tf.keras.metrics.CategoricalAccuracy()])\r\n```\r\n \r\nINFO:tensorflow:Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0', '/job:localhost/replica:0/task:0/device:GPU:1')\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-32-1a023ca8bc9a> in <module>\r\n      5     # filepath = 'models/' + model_selection + '_' + model_number + '_all' + '.h5'\r\n      6     filepath = 'models/' + model_selection + '_' + model_number + '.h5'\r\n----> 7     model = load_model(filepath, compile=False)\r\n      8 \r\n      9     model.compile(optimizer=Adam(), \r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/save.py in load_model(filepath, custom_objects, compile)\r\n    144   if (h5py is not None and (\r\n    145       isinstance(filepath, h5py.File) or h5py.is_hdf5(filepath))):\r\n--> 146     return hdf5_format.load_model_from_hdf5(filepath, custom_objects, compile)\r\n    147 \r\n    148   if isinstance(filepath, six.string_types):\r\n\r\n/wsu/el7/pre-compiled/python/3.7/envs/tensorflow_gpuenv_v2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py in load_model_from_hdf5(filepath, custom_objects, compile)\r\n    163     model_config = f.attrs.get('model_config')\r\n    164     if model_config is None:\r\n--> 165       raise ValueError('No model found in config file.')\r\n    166     model_config = json.loads(model_config.decode('utf-8'))\r\n    167     model = model_config_lib.model_from_config(model_config,\r\n\r\nValueError: No model found in config file.\r\n\r\n\r\n**Saving as JSON or tensorflow _savedmodel_ format are equally ineffective. At this time the only fix I can find in order to be able to use a pretrained model, is to save only the weights:**\r\n\r\n`model.save_weights('models/3_epoch_' + model_selection + '_' + model_number + '_weights' + '.h5')`\r\n\r\n**then recompile the model from scratch and load the saved weights:**\r\n\r\n```\r\nstrategy = tf.distribute.MirroredStrategy()\r\nwith strategy.scope():\r\n\r\n    model = Dual_ResNet_Atrous_Att_WST(input_shape=(HEIGHT, WIDTH, CHANNELS),\r\n               mra_channels=MRACHANNELS,                          \r\n               num_class=NUM_CLASS,\r\n               ks1=KS1, ks2=KS2, ks3=KS3, \r\n               dl1=DL1, dl2=DL2, dl3=DL3,\r\n               filters=NF,resblock1=NR1,\r\n               r_filters=NFL, resblock2=NR2,\r\n               dil_mode=DIL_MODE, \r\n               sp_dropout=DR1,re_dropout=DR2,\r\n               mask_float=True,\r\n               attention='wst',\r\n               mask_threshold=0.5,                                         \r\n               return_seq=True)\r\n\r\n    model.compile(optimizer=Adam(), \r\n                  loss=tf.keras.losses.CategoricalCrossentropy(), \r\n                  metrics=[tf.keras.metrics.CategoricalAccuracy()])          \r\n\r\nmodel.load_weights('models/best_' + model_selection + '_' + model_number + '_weights.h5') \r\n\r\n```\r\n\r\n \r\n ","closed_by":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kymatio/kymatio/issues/637/timeline","performed_via_github_app":null,"state_reason":"completed"}