[{"id":6757044307,"node_id":"LE_lADOCQLq_c5LQYl-zwAAAAGSwFBT","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6757044307","actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2022-06-07T00:46:35Z","label":{"name":"1D","color":"5583cc"},"performed_via_github_app":null},{"actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"created_at":"2022-06-07T00:51:43Z","updated_at":"2022-06-07T00:51:43Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/850","repository_url":"https://api.github.com/repos/kymatio/kymatio","labels_url":"https://api.github.com/repos/kymatio/kymatio/issues/850/labels{/name}","comments_url":"https://api.github.com/repos/kymatio/kymatio/issues/850/comments","events_url":"https://api.github.com/repos/kymatio/kymatio/issues/850/events","html_url":"https://github.com/kymatio/kymatio/pull/850","id":1262563829,"node_id":"PR_kwDOCQLq_c45NKBt","number":850,"title":"MAINT remove `calibrate_scattering_filters`","user":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"labels":[{"id":1163515456,"node_id":"MDU6TGFiZWwxMTYzNTE1NDU2","url":"https://api.github.com/repos/kymatio/kymatio/labels/1D","name":"1D","color":"5583cc","default":false,"description":"Issue with 1D scattering code"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-06-07T00:09:36Z","updated_at":"2022-06-25T16:24:57Z","closed_at":"2022-06-09T13:15:19Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":151186173,"node_id":"MDEwOlJlcG9zaXRvcnkxNTExODYxNzM=","name":"kymatio","full_name":"kymatio/kymatio","private":false,"owner":{"login":"kymatio","id":45135504,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQ1MTM1NTA0","avatar_url":"https://avatars.githubusercontent.com/u/45135504?v=4","gravatar_id":"","url":"https://api.github.com/users/kymatio","html_url":"https://github.com/kymatio","followers_url":"https://api.github.com/users/kymatio/followers","following_url":"https://api.github.com/users/kymatio/following{/other_user}","gists_url":"https://api.github.com/users/kymatio/gists{/gist_id}","starred_url":"https://api.github.com/users/kymatio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kymatio/subscriptions","organizations_url":"https://api.github.com/users/kymatio/orgs","repos_url":"https://api.github.com/users/kymatio/repos","events_url":"https://api.github.com/users/kymatio/events{/privacy}","received_events_url":"https://api.github.com/users/kymatio/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/kymatio/kymatio","description":"Wavelet scattering transforms in Python with GPU acceleration","fork":false,"url":"https://api.github.com/repos/kymatio/kymatio","forks_url":"https://api.github.com/repos/kymatio/kymatio/forks","keys_url":"https://api.github.com/repos/kymatio/kymatio/keys{/key_id}","collaborators_url":"https://api.github.com/repos/kymatio/kymatio/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/kymatio/kymatio/teams","hooks_url":"https://api.github.com/repos/kymatio/kymatio/hooks","issue_events_url":"https://api.github.com/repos/kymatio/kymatio/issues/events{/number}","events_url":"https://api.github.com/repos/kymatio/kymatio/events","assignees_url":"https://api.github.com/repos/kymatio/kymatio/assignees{/user}","branches_url":"https://api.github.com/repos/kymatio/kymatio/branches{/branch}","tags_url":"https://api.github.com/repos/kymatio/kymatio/tags","blobs_url":"https://api.github.com/repos/kymatio/kymatio/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/kymatio/kymatio/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/kymatio/kymatio/git/refs{/sha}","trees_url":"https://api.github.com/repos/kymatio/kymatio/git/trees{/sha}","statuses_url":"https://api.github.com/repos/kymatio/kymatio/statuses/{sha}","languages_url":"https://api.github.com/repos/kymatio/kymatio/languages","stargazers_url":"https://api.github.com/repos/kymatio/kymatio/stargazers","contributors_url":"https://api.github.com/repos/kymatio/kymatio/contributors","subscribers_url":"https://api.github.com/repos/kymatio/kymatio/subscribers","subscription_url":"https://api.github.com/repos/kymatio/kymatio/subscription","commits_url":"https://api.github.com/repos/kymatio/kymatio/commits{/sha}","git_commits_url":"https://api.github.com/repos/kymatio/kymatio/git/commits{/sha}","comments_url":"https://api.github.com/repos/kymatio/kymatio/comments{/number}","issue_comment_url":"https://api.github.com/repos/kymatio/kymatio/issues/comments{/number}","contents_url":"https://api.github.com/repos/kymatio/kymatio/contents/{+path}","compare_url":"https://api.github.com/repos/kymatio/kymatio/compare/{base}...{head}","merges_url":"https://api.github.com/repos/kymatio/kymatio/merges","archive_url":"https://api.github.com/repos/kymatio/kymatio/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/kymatio/kymatio/downloads","issues_url":"https://api.github.com/repos/kymatio/kymatio/issues{/number}","pulls_url":"https://api.github.com/repos/kymatio/kymatio/pulls{/number}","milestones_url":"https://api.github.com/repos/kymatio/kymatio/milestones{/number}","notifications_url":"https://api.github.com/repos/kymatio/kymatio/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/kymatio/kymatio/labels{/name}","releases_url":"https://api.github.com/repos/kymatio/kymatio/releases{/id}","deployments_url":"https://api.github.com/repos/kymatio/kymatio/deployments","created_at":"2018-10-02T01:45:46Z","updated_at":"2023-01-18T06:43:13Z","pushed_at":"2023-01-17T09:28:11Z","git_url":"git://github.com/kymatio/kymatio.git","ssh_url":"git@github.com:kymatio/kymatio.git","clone_url":"https://github.com/kymatio/kymatio.git","svn_url":"https://github.com/kymatio/kymatio","homepage":"https://kymat.io","size":2465,"stargazers_count":617,"watchers_count":617,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":false,"has_pages":false,"has_discussions":true,"forks_count":112,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":69,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["deep-learning","keras","numpy","pytorch","scattering-transform","scikit-learn","tensorflow","wavelets"],"visibility":"public","forks":112,"open_issues":69,"watchers":617,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/kymatio/kymatio/pulls/850","html_url":"https://github.com/kymatio/kymatio/pull/850","diff_url":"https://github.com/kymatio/kymatio/pull/850.diff","patch_url":"https://github.com/kymatio/kymatio/pull/850.patch","merged_at":"2022-06-09T13:15:19Z"},"body":"Fix #849 \r\n\r\nAnother PR with more deletions than additions.\r\n\r\nThis PR adds some new input arguments to `precompute_size_scattering` and `compute_meta_scattering` but i have a plan on how to remove them later while maintaining backwards compatibility. (#851)","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kymatio/kymatio/issues/850/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1148843470","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1148843470","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1148843470,"node_id":"IC_kwDOCQLq_c5EefXO","user":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"created_at":"2022-06-07T15:42:05Z","updated_at":"2022-06-07T15:55:46Z","author_association":"COLLABORATOR","body":"Update: i believe it would be good to bundle the input arguments to `scattering_filter_factory` in terms of whether they relate to the filterbank discretization (xi's and sigma's), to the design/periodization of wavelets, or to the design/periodization of the low-pass filter.\r\n\r\nWe could expose this by means of three read-only properties in the base frontend:\r\n```python\r\n@property\r\ndef filterbank(self):\r\n    return (scatnet_filterbank, {\"r_psi\": self.r_psi, \"spinned\": False})\r\n\r\n@property\r\ndef lowpass(self):\r\n    return (gauss_1d, {\"sigma0\": self.sigma0})\r\n\r\n@property\r\ndef wavelet(self):\r\n    return (morlet_1d, {\"alpha\": self.alpha, \"max_subsampling\": None})\r\n```\r\nwhere `scatnet_filterbank` is `compute_params_filterbank` under a new name, and without the third output argument.\r\n(the above is post- #832 but keywords `P_max`, `eps`, and `normalize` could live in these dictionaries!)\r\n\r\nThose properties are a tuple of two elements, where the first element is callable and the second is a dictionary of kwargs for that callable.\r\n\r\nHence a cleaner prototype and control flow for `scattering_filter_factory`: (post #840 )\r\n\r\n```python\r\ndef psi_factory(N, J, Q, wavelet, filterbank, n_resolutions):\r\n    filterbank_fn, filterbank_kwargs = filterbank\r\n    xis, sigmas = filterbank_fn(J, Q, **filterbank_kwargs)\r\n    wavelet_fn, wavelet_kwargs = wavelet\r\n    psis_f = []\r\n    for (xi, sigma) in zip(xis, sigmas):\r\n        j = get_max_dyadic_subsampling(xi, sigma, **wavelet_kwargs)\r\n        psi_f = {\r\n            0: wavelet_fn(N, xi, sigma, **wavelet_kwargs),\r\n            \"xi\": xi,\r\n            \"sigma\": sigma,\r\n            \"j\": j,\r\n        }\r\n        for k in range(1, n_resolutions):\r\n            psi_f[k] = periodize_filter_fourier(psi_f[0], 2**k)\r\n        psis_f.append(psi_f)\r\n    return psis_f\r\n\r\n\r\ndef phi_factory(N, T, filterbank, lowpass, n_resolutions):\r\n    lowpass_fn, lowpass_kwargs = lowpass\r\n    log2_T = math.floor(math.log2(T))\r\n    phi_f = {\r\n        0: lowpass_fn(N, T, **lowpass_kwargs),\r\n        \"xi\": 0,\r\n        \"sigma\": sigma_low,\r\n        \"j\": log2_T,\r\n    }\r\n    for k in range(1, n_resolutions):\r\n        phi_f[k] = periodize_filter_fourier(phi_f[0], 2**k)\r\n    return phi_f\r\n    \r\ndef scattering_filter_factory(N, J, Q, T, filterbank, lowpass, wavelet):\r\n    # First order\r\n    psi1s_f = psi_factory(N, J, Q, wavelet, filterbank, n_resolutions=1)\r\n\r\n    # Second order\r\n    n_psi2_resolutions = max(map(itemgetter(\"j\"), psi1s_f))\r\n    psi2s_f = psi_factory(N, J, 1, wavelet, filterbank, n_psi2_resolutions)\r\n\r\n    # Low-pass filter\r\n    n_phi_resolutions = max(n_psi1_resolutions, max(map(itemgetter(\"j\"), psi2s_f)))\r\n    phi_f = phi_factory(N, T, lowpass, filterbank, n_phi_resolutions)\r\n\r\n    return phi_f, psi1s_f, psi2s_f\r\n```\r\n\r\nThis is `spinned`-friedly (#807), is backwards compatible (v0.3!), and would open the door towards revisiting #385 (by @rleonarduzzi ) and Gammatone filters. By allowing the user to specify `self.wavelet` in the 1D constructor (long-term plan).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1148843470/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false}},{"id":6762612699,"node_id":"MEE_lADOCQLq_c5LQYl-zwAAAAGTFUfb","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6762612699","actor":{"login":"rleonarduzzi","id":10959323,"node_id":"MDQ6VXNlcjEwOTU5MzIz","avatar_url":"https://avatars.githubusercontent.com/u/10959323?v=4","gravatar_id":"","url":"https://api.github.com/users/rleonarduzzi","html_url":"https://github.com/rleonarduzzi","followers_url":"https://api.github.com/users/rleonarduzzi/followers","following_url":"https://api.github.com/users/rleonarduzzi/following{/other_user}","gists_url":"https://api.github.com/users/rleonarduzzi/gists{/gist_id}","starred_url":"https://api.github.com/users/rleonarduzzi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rleonarduzzi/subscriptions","organizations_url":"https://api.github.com/users/rleonarduzzi/orgs","repos_url":"https://api.github.com/users/rleonarduzzi/repos","events_url":"https://api.github.com/users/rleonarduzzi/events{/privacy}","received_events_url":"https://api.github.com/users/rleonarduzzi/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-07T15:42:05Z","performed_via_github_app":null},{"id":6762612707,"node_id":"SE_lADOCQLq_c5LQYl-zwAAAAGTFUfj","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6762612707","actor":{"login":"rleonarduzzi","id":10959323,"node_id":"MDQ6VXNlcjEwOTU5MzIz","avatar_url":"https://avatars.githubusercontent.com/u/10959323?v=4","gravatar_id":"","url":"https://api.github.com/users/rleonarduzzi","html_url":"https://github.com/rleonarduzzi","followers_url":"https://api.github.com/users/rleonarduzzi/followers","following_url":"https://api.github.com/users/rleonarduzzi/following{/other_user}","gists_url":"https://api.github.com/users/rleonarduzzi/gists{/gist_id}","starred_url":"https://api.github.com/users/rleonarduzzi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rleonarduzzi/subscriptions","organizations_url":"https://api.github.com/users/rleonarduzzi/orgs","repos_url":"https://api.github.com/users/rleonarduzzi/repos","events_url":"https://api.github.com/users/rleonarduzzi/events{/privacy}","received_events_url":"https://api.github.com/users/rleonarduzzi/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-07T15:42:05Z","performed_via_github_app":null},{"id":6762713768,"node_id":"RTE_lADOCQLq_c5LQYl-zwAAAAGTFtKo","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6762713768","actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"event":"renamed","commit_id":null,"commit_url":null,"created_at":"2022-06-07T15:54:56Z","rename":{"from":"`alpha`, `r_psi`, and `sigma0` should be passed as a `dict`","to":"`ScatteringBase1D` kwargs should be passed via `dict`'s "},"performed_via_github_app":null},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1150706480","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1150706480","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1150706480,"node_id":"IC_kwDOCQLq_c5ElmMw","user":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"created_at":"2022-06-09T06:02:52Z","updated_at":"2022-06-09T06:34:11Z","author_association":"COLLABORATOR","body":"Update: a more concise version that should work out of the box in v0.3:\r\n\r\n```python\r\ndef scatnet_generator(J, Q, r_psi, sigma0):\r\n    xi = compute_xi_max(Q)\r\n    sigma = compute_sigma_psi(xi, Q, r=r_psi)\r\n    sigma_min = sigma0 / 2**J\r\n\r\n    if sigma <= sigma_min:\r\n        xi = sigma\r\n    else:\r\n        yield xi, sigma\r\n        # High-frequency (constant-Q) region: geometric progression of xi\r\n        while sigma > (sigma_min * math.pow(2, 1 / Q)):\r\n            xi /= math.pow(2, 1 / Q)\r\n            sigma /= math.pow(2, 1 / Q)\r\n            yield xi, sigma\r\n\r\n    # Low-frequency (constant-bandwidth) region: arithmetic progression of xi\r\n    for q in range(Q):\r\n        xi -= 1/Q\r\n        yield xi, sigma_min\r\n\r\n\r\ndef scattering_filter_factory(N, Js, Qs, T, generators, filters):\r\n    lowpass, wavelets = filters[0], filters[1:]\r\n    filterbanks = []\r\n    n_resolutions = 1\r\n    for J, Q, generator, wavelet in zip(Js, Qs, generators, wavelets):\r\n        generator_fn, generator_kwargs = generator\r\n        wavelet_fn, wavelet_kwargs = wavelet\r\n        filterbank = []\r\n        max_j = 0\r\n        xi_sigmas = generator_fn(J, Q, **generator_kwargs)\r\n        for n, (xi, sigma) in enumerate(xi_sigmas):\r\n            j = get_max_dyadic_subsampling(xi, sigma, **wavelet_kwargs)\r\n            psi_f = {0: wavelet_fn(N, xi, sigma, **wavelet_kwargs),\r\n                \"xi\": xi, \"sigma\": sigma, \"j\": j, \"n\": n}\r\n            for k in range(1+n_resolutions):\r\n                psi_f[k] = periodize_filter_fourier(psi_f, n_periods=2**k)\r\n            filterbank.append(psi_f)\r\n            max_j = max(max_j, j)\r\n        n_resolutions = max(n_resolutions, max_j)\r\n        filterbanks.append(filterbank)\r\n\r\n    lowpass_fn, lowpass_kwargs = lowpass\r\n    log2_T = math.floor(math.log2(T))\r\n    phi_f = {0: lowpass_fn(N, T, **lowpass_kwargs), \"j\": log2_T}\r\n    for k in range(1+n_resolutions):\r\n        phi_f[k] = periodize_filter_fourier(phi_f, n_periods=2**k)\r\n\r\n    return phi_f, *filterbanks\r\n\r\n\r\ndef create_filters(self):\r\n    sigma0 = 0.1\r\n    r_psi = sqrt(0.5)\r\n    generators = (\r\n        (scatnet_generator, {\"r_psi\"}),\r\n        (scatnet_generator, {\"r_psi\"})\r\n    )\r\n    filters = (\r\n        (gauss_1d, {\"sigma0\": sigma}),\r\n        (morlet_1d, {\"r_psi\": r_psi}),\r\n        (morlet_1d, {\"r_psi\": r_psi})\r\n    )\r\n    self.phi_f, self.psi1_f, self.psi2_f = scattering_filter_factory(\r\n        N, J, Q, T, generators, filters)\r\n```\r\n\r\nNote that the last function prepares for a number of features that could happen in v0.4 if we deem it useful:\r\n* varying Q per order (#854 )\r\n* varying J per order\r\n* switching wavelet types\r\n* varying r_psi per order\r\n* varying wavelet type per order\r\n* having more than two orders\r\n* replacing the `scatnet_generator` by something else\r\n\r\nIt also allows to skip filterbank construction in a very concise way:\r\n\r\n```python\r\nskip_filters = repeat(lambda *args, **kwargs: None, {})\r\nphi_f, psi1_f, psi2_f = scattering_filter_factory(N, Js, Qs, T, generators, skip_filters)\r\n```\r\n\r\nThis idiom is useful for maintaining `utils.compute_meta_scattering` and `utils.precompute_size_scattering`. I also believe it will improve our approach to padding","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1150706480/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1151019492","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1151019492","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1151019492,"node_id":"IC_kwDOCQLq_c5Emynk","user":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false},"created_at":"2022-06-09T11:45:04Z","updated_at":"2022-06-09T11:45:04Z","author_association":"COLLABORATOR","body":"Looks reasonable, but why the references to `scatnet`? Do these reproduce the exact filters used in that toolbox?\r\n\r\nAlso why the choice of generators instead of lists? What do we gain from it? It seems simpler to me to use lists (which is also what's used elsewhere in the codebase AFAIK).\r\n\r\nFinally I like the idea of skipping the filterbank construction that you show at the end, but it might be cleaner to just have two functions: one which generates the parameters of the filters (essentially coupling the generators you've defined) and another that takes the output and generates the actual filters. This means one (simpler) call if we just want the metadata and two calls if we want the filters (which is one more than before, but I think it's ok).","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1151019492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1153323069","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1153323069","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1153323069,"node_id":"IC_kwDOCQLq_c5EvlA9","user":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"created_at":"2022-06-12T23:36:02Z","updated_at":"2022-06-12T23:36:02Z","author_association":"COLLABORATOR","body":"> why the references to scatnet? Do these reproduce the exact filters used in that toolbox?\r\n\r\nIt doesn't reproduce the value of the filters, but it's reproducing this algorithm of:\r\n* starting from a xi_max / sigma_max pair\r\n* updating both in a geometric sequence so that their ratio is preserved\r\n* up until the sigma reaches a predefined sigma_low (i.e. time support ~T)\r\n* then fill up the spectrum with equally spaced band-pass filters of bandwidth=sigma_low\r\n\r\nThis is what i'm proposing we call `scatnet_filterbank`. Part of me wanted to name it the `anden_filterbank` initially but i wasn't sure if you'd accept the shout out :D \r\n\r\n\r\n> Also why the choice of generators instead of lists? What do we gain from it? It seems simpler to me to use lists (which is also what's used elsewhere in the codebase AFAIK).\r\n\r\nIn this context, what we gain is code simplicity. We don't worry about initializing lists to `[]` and calling `.append` on each of them, only to `return` the fully formed lists. We just `yield` stuff as we go. In other contexts, generator can help save memory and customize/generalize the code more easily. @eickenberg would be far more eloquent than me on this matter. I don't feel very strongly about it, i just figured it was elegant (and a good exercise for myself in using the `yield` statement)\r\n\r\n\r\n> Finally I like the idea of skipping the filterbank construction that you show at the end [...]\r\n\r\nThanks. This is the biggest selling point for me: not having to hack together a `compute_meta_scattering` and a `precompute_size_scattering`, because that's relatively error-prone and might have weird corner cases. Ideally this `compute_meta_scattering` would take the form of a \"dry run\" on the scattering transform itself. Same for `precompute_size_scattering` which would be nothing else than a counter on the metas.\r\n\r\n> [...] but it might be cleaner to just have two functions: one which generates the parameters of the filters (essentially coupling the generators you've defined) and another that takes the output and generates the actual filters). This means one (simpler) call if we just want the metadata and two calls if we want the filters (which is one more than before, but I think it's ok).\r\n\r\nReally interesting. What would be the output format of the first function?\r\nWhat you describe sounds close to `calibrate_scattering_filters` but the issue i take with that function is that going from its output (`sigma_low, xi1, sigma1, j1, xi2, sigma2, j2`) to predict `meta` is quite involved: one has to mimick a scattering transform by running a depth-first search, check for `j1 < j2`, keep track of eight iterated variables at once (four per order), etc. That sounds benign for order-2 Scattering1D but i'm afraid that the same mimicry approach would be awfully tedious to maintain for more advanced algorithms like JTFS. So i'm looking for ways to avoid having to write all this code by hand and instead rely on core `scattering` with \"empty\" filters (metadata but no coefficients) so as to implement `precompute_scattering_meta` in a way that's more resilient to bugs and breaking changes.\r\n\r\n@janden would you like to elaborate on what you're proposing?\r\n","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1153323069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false}},{"id":6792098482,"node_id":"MEE_lADOCQLq_c5LQYl-zwAAAAGU1zKy","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6792098482","actor":{"login":"eickenberg","id":1306635,"node_id":"MDQ6VXNlcjEzMDY2MzU=","avatar_url":"https://avatars.githubusercontent.com/u/1306635?v=4","gravatar_id":"","url":"https://api.github.com/users/eickenberg","html_url":"https://github.com/eickenberg","followers_url":"https://api.github.com/users/eickenberg/followers","following_url":"https://api.github.com/users/eickenberg/following{/other_user}","gists_url":"https://api.github.com/users/eickenberg/gists{/gist_id}","starred_url":"https://api.github.com/users/eickenberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eickenberg/subscriptions","organizations_url":"https://api.github.com/users/eickenberg/orgs","repos_url":"https://api.github.com/users/eickenberg/repos","events_url":"https://api.github.com/users/eickenberg/events{/privacy}","received_events_url":"https://api.github.com/users/eickenberg/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-12T23:36:02Z","performed_via_github_app":null},{"id":6792098483,"node_id":"SE_lADOCQLq_c5LQYl-zwAAAAGU1zKz","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6792098483","actor":{"login":"eickenberg","id":1306635,"node_id":"MDQ6VXNlcjEzMDY2MzU=","avatar_url":"https://avatars.githubusercontent.com/u/1306635?v=4","gravatar_id":"","url":"https://api.github.com/users/eickenberg","html_url":"https://github.com/eickenberg","followers_url":"https://api.github.com/users/eickenberg/followers","following_url":"https://api.github.com/users/eickenberg/following{/other_user}","gists_url":"https://api.github.com/users/eickenberg/gists{/gist_id}","starred_url":"https://api.github.com/users/eickenberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eickenberg/subscriptions","organizations_url":"https://api.github.com/users/eickenberg/orgs","repos_url":"https://api.github.com/users/eickenberg/repos","events_url":"https://api.github.com/users/eickenberg/events{/privacy}","received_events_url":"https://api.github.com/users/eickenberg/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-12T23:36:02Z","performed_via_github_app":null},{"id":6792098484,"node_id":"MEE_lADOCQLq_c5LQYl-zwAAAAGU1zK0","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6792098484","actor":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-12T23:36:02Z","performed_via_github_app":null},{"id":6792098485,"node_id":"SE_lADOCQLq_c5LQYl-zwAAAAGU1zK1","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6792098485","actor":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-12T23:36:02Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1153526479","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1153526479","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1153526479,"node_id":"IC_kwDOCQLq_c5EwWrP","user":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"created_at":"2022-06-13T06:32:00Z","updated_at":"2022-06-13T06:37:55Z","author_association":"COLLABORATOR","body":"@janden here's the \"dry run\" i have in mind. In `ScatteringBase1D.meta` (or its callee `compute_meta_scattering`), locally define\r\n\r\n```python\r\nclass DryBackend:\r\n    cdgmm = lambda *args: None\r\n    fft = lambda *args: None\r\n    ifft = lambda *args: None\r\n    irfft = lambda *args: None\r\n    subsample_fourier = lambda *args: None\r\n```\r\n\r\nand then call `core.scattering(None, DryBackend(), psi1, psi2, phi)` to obtain an `out_S` list (or generator!) of dicts in which all `coef`'s are `None` but their ordering and metadata is consistent with the real McCoy (namely TF/PT/NP backends).\r\n\r\nI'm realizing that for that to happen, i actually don't need to modify the scattering filter factory. Just to make sure that `core.scattering` would accept `DryBackend()` as second argument. This is why i'm interested in removing the bells and whistles (pad, unpad, reshape) from core and reduce it to the depth-first search algorithm.\r\n\r\nThe initial topic of this issue was more: how to make scattering filter factory accept spinned wavelets in the near future, and non-Morlet wavelets in the more long-term future. But maybe that's not as much a high priority as thinning down the code base of `utils.compute_meta_scattering`\r\n\r\nP.S. a less verbose but subtler implementation of `DryBackend` is \r\n```python\r\nclass DryBackend:\r\n    __getattr__ = lambda self, attr: (lambda *args: None)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1153526479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false}},{"id":6793333799,"node_id":"MEE_lADOCQLq_c5LQYl-zwAAAAGU6gwn","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6793333799","actor":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-13T06:32:01Z","performed_via_github_app":null},{"id":6793333803,"node_id":"SE_lADOCQLq_c5LQYl-zwAAAAGU6gwr","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6793333803","actor":{"login":"janden","id":3976052,"node_id":"MDQ6VXNlcjM5NzYwNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3976052?v=4","gravatar_id":"","url":"https://api.github.com/users/janden","html_url":"https://github.com/janden","followers_url":"https://api.github.com/users/janden/followers","following_url":"https://api.github.com/users/janden/following{/other_user}","gists_url":"https://api.github.com/users/janden/gists{/gist_id}","starred_url":"https://api.github.com/users/janden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janden/subscriptions","organizations_url":"https://api.github.com/users/janden/orgs","repos_url":"https://api.github.com/users/janden/repos","events_url":"https://api.github.com/users/janden/events{/privacy}","received_events_url":"https://api.github.com/users/janden/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-13T06:32:01Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1155745762","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1155745762","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1155745762,"node_id":"IC_kwDOCQLq_c5E40fi","user":{"login":"cyrusvahidi","id":10761938,"node_id":"MDQ6VXNlcjEwNzYxOTM4","avatar_url":"https://avatars.githubusercontent.com/u/10761938?v=4","gravatar_id":"","url":"https://api.github.com/users/cyrusvahidi","html_url":"https://github.com/cyrusvahidi","followers_url":"https://api.github.com/users/cyrusvahidi/followers","following_url":"https://api.github.com/users/cyrusvahidi/following{/other_user}","gists_url":"https://api.github.com/users/cyrusvahidi/gists{/gist_id}","starred_url":"https://api.github.com/users/cyrusvahidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyrusvahidi/subscriptions","organizations_url":"https://api.github.com/users/cyrusvahidi/orgs","repos_url":"https://api.github.com/users/cyrusvahidi/repos","events_url":"https://api.github.com/users/cyrusvahidi/events{/privacy}","received_events_url":"https://api.github.com/users/cyrusvahidi/received_events","type":"User","site_admin":false},"created_at":"2022-06-14T21:51:26Z","updated_at":"2022-06-14T21:53:53Z","author_association":"COLLABORATOR","body":"> Update: i believe it would be good to bundle the input arguments to `scattering_filter_factory` in terms of whether they relate to the filterbank discretization (xi's and sigma's), to the design/periodization of wavelets, or to the design/periodization of the low-pass filter.\r\n> \r\n> We could expose this by means of three read-only properties in the base frontend:\r\n> \r\n> ```python\r\n> @property\r\n> def filterbank(self):\r\n>     return (scatnet_filterbank, {\"r_psi\": self.r_psi, \"spinned\": False})\r\n> \r\n> @property\r\n> def lowpass(self):\r\n>     return (gauss_1d, {\"sigma0\": self.sigma0})\r\n> \r\n> @property\r\n> def wavelet(self):\r\n>     return (morlet_1d, {\"alpha\": self.alpha, \"max_subsampling\": None})\r\n> ```\r\n> \r\n> where `scatnet_filterbank` is `compute_params_filterbank` under a new name, and without the third output argument. (the above is post- #832 but keywords `P_max`, `eps`, and `normalize` could live in these dictionaries!)\r\n> \r\n> Those properties are a tuple of two elements, where the first element is callable and the second is a dictionary of kwargs for that callable.\r\n> \r\n> Hence a cleaner prototype and control flow for `scattering_filter_factory`: (post #840 )\r\n> \r\n> ```python\r\n> def psi_factory(N, J, Q, wavelet, filterbank, n_resolutions):\r\n>     filterbank_fn, filterbank_kwargs = filterbank\r\n>     xis, sigmas = filterbank_fn(J, Q, **filterbank_kwargs)\r\n>     wavelet_fn, wavelet_kwargs = wavelet\r\n>     psis_f = []\r\n>     for (xi, sigma) in zip(xis, sigmas):\r\n>         j = get_max_dyadic_subsampling(xi, sigma, **wavelet_kwargs)\r\n>         psi_f = {\r\n>             0: wavelet_fn(N, xi, sigma, **wavelet_kwargs),\r\n>             \"xi\": xi,\r\n>             \"sigma\": sigma,\r\n>             \"j\": j,\r\n>         }\r\n>         for k in range(1, n_resolutions):\r\n>             psi_f[k] = periodize_filter_fourier(psi_f[0], 2**k)\r\n>         psis_f.append(psi_f)\r\n>     return psis_f\r\n> \r\n> \r\n> def phi_factory(N, T, filterbank, lowpass, n_resolutions):\r\n>     lowpass_fn, lowpass_kwargs = lowpass\r\n>     log2_T = math.floor(math.log2(T))\r\n>     phi_f = {\r\n>         0: lowpass_fn(N, T, **lowpass_kwargs),\r\n>         \"xi\": 0,\r\n>         \"sigma\": sigma_low,\r\n>         \"j\": log2_T,\r\n>     }\r\n>     for k in range(1, n_resolutions):\r\n>         phi_f[k] = periodize_filter_fourier(phi_f[0], 2**k)\r\n>     return phi_f\r\n>     \r\n> def scattering_filter_factory(N, J, Q, T, filterbank, lowpass, wavelet):\r\n>     # First order\r\n>     psi1s_f = psi_factory(N, J, Q, wavelet, filterbank, n_resolutions=1)\r\n> \r\n>     # Second order\r\n>     n_psi2_resolutions = max(map(itemgetter(\"j\"), psi1s_f))\r\n>     psi2s_f = psi_factory(N, J, 1, wavelet, filterbank, n_psi2_resolutions)\r\n> \r\n>     # Low-pass filter\r\n>     n_phi_resolutions = max(n_psi1_resolutions, max(map(itemgetter(\"j\"), psi2s_f)))\r\n>     phi_f = phi_factory(N, T, lowpass, filterbank, n_phi_resolutions)\r\n> \r\n>     return phi_f, psi1s_f, psi2s_f\r\n> ```\r\n> \r\n> This is `spinned`-friedly (#807), is backwards compatible (v0.3!), and would open the door towards revisiting #385 (by @rleonarduzzi ) and Gammatone filters. By allowing the user to specify `self.wavelet` in the 1D constructor (long-term plan).\r\n\r\nlove the flexible choice of wavelet function here. will consider the best way to implement. perhaps wavelet function could follow some interface and be callable rather than passing around kwargs.","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1155745762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"cyrusvahidi","id":10761938,"node_id":"MDQ6VXNlcjEwNzYxOTM4","avatar_url":"https://avatars.githubusercontent.com/u/10761938?v=4","gravatar_id":"","url":"https://api.github.com/users/cyrusvahidi","html_url":"https://github.com/cyrusvahidi","followers_url":"https://api.github.com/users/cyrusvahidi/followers","following_url":"https://api.github.com/users/cyrusvahidi/following{/other_user}","gists_url":"https://api.github.com/users/cyrusvahidi/gists{/gist_id}","starred_url":"https://api.github.com/users/cyrusvahidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyrusvahidi/subscriptions","organizations_url":"https://api.github.com/users/cyrusvahidi/orgs","repos_url":"https://api.github.com/users/cyrusvahidi/repos","events_url":"https://api.github.com/users/cyrusvahidi/events{/privacy}","received_events_url":"https://api.github.com/users/cyrusvahidi/received_events","type":"User","site_admin":false}},{"id":6808147078,"node_id":"MEE_lADOCQLq_c5LQYl-zwAAAAGVzBSG","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6808147078","actor":{"login":"rleonarduzzi","id":10959323,"node_id":"MDQ6VXNlcjEwOTU5MzIz","avatar_url":"https://avatars.githubusercontent.com/u/10959323?v=4","gravatar_id":"","url":"https://api.github.com/users/rleonarduzzi","html_url":"https://github.com/rleonarduzzi","followers_url":"https://api.github.com/users/rleonarduzzi/followers","following_url":"https://api.github.com/users/rleonarduzzi/following{/other_user}","gists_url":"https://api.github.com/users/rleonarduzzi/gists{/gist_id}","starred_url":"https://api.github.com/users/rleonarduzzi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rleonarduzzi/subscriptions","organizations_url":"https://api.github.com/users/rleonarduzzi/orgs","repos_url":"https://api.github.com/users/rleonarduzzi/repos","events_url":"https://api.github.com/users/rleonarduzzi/events{/privacy}","received_events_url":"https://api.github.com/users/rleonarduzzi/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-14T21:51:26Z","performed_via_github_app":null},{"id":6808147085,"node_id":"SE_lADOCQLq_c5LQYl-zwAAAAGVzBSN","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6808147085","actor":{"login":"rleonarduzzi","id":10959323,"node_id":"MDQ6VXNlcjEwOTU5MzIz","avatar_url":"https://avatars.githubusercontent.com/u/10959323?v=4","gravatar_id":"","url":"https://api.github.com/users/rleonarduzzi","html_url":"https://github.com/rleonarduzzi","followers_url":"https://api.github.com/users/rleonarduzzi/followers","following_url":"https://api.github.com/users/rleonarduzzi/following{/other_user}","gists_url":"https://api.github.com/users/rleonarduzzi/gists{/gist_id}","starred_url":"https://api.github.com/users/rleonarduzzi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rleonarduzzi/subscriptions","organizations_url":"https://api.github.com/users/rleonarduzzi/orgs","repos_url":"https://api.github.com/users/rleonarduzzi/repos","events_url":"https://api.github.com/users/rleonarduzzi/events{/privacy}","received_events_url":"https://api.github.com/users/rleonarduzzi/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-14T21:51:27Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1155756907","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1155756907","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1155756907,"node_id":"IC_kwDOCQLq_c5E43Nr","user":{"login":"cyrusvahidi","id":10761938,"node_id":"MDQ6VXNlcjEwNzYxOTM4","avatar_url":"https://avatars.githubusercontent.com/u/10761938?v=4","gravatar_id":"","url":"https://api.github.com/users/cyrusvahidi","html_url":"https://github.com/cyrusvahidi","followers_url":"https://api.github.com/users/cyrusvahidi/followers","following_url":"https://api.github.com/users/cyrusvahidi/following{/other_user}","gists_url":"https://api.github.com/users/cyrusvahidi/gists{/gist_id}","starred_url":"https://api.github.com/users/cyrusvahidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyrusvahidi/subscriptions","organizations_url":"https://api.github.com/users/cyrusvahidi/orgs","repos_url":"https://api.github.com/users/cyrusvahidi/repos","events_url":"https://api.github.com/users/cyrusvahidi/events{/privacy}","received_events_url":"https://api.github.com/users/cyrusvahidi/received_events","type":"User","site_admin":false},"created_at":"2022-06-14T22:05:51Z","updated_at":"2022-06-14T22:05:51Z","author_association":"COLLABORATOR","body":"> Update: a more concise version that should work out of the box in v0.3:\r\n> \r\n> ```python\r\n> def scatnet_generator(J, Q, r_psi, sigma0):\r\n>     xi = compute_xi_max(Q)\r\n>     sigma = compute_sigma_psi(xi, Q, r=r_psi)\r\n>     sigma_min = sigma0 / 2**J\r\n> \r\n>     if sigma <= sigma_min:\r\n>         xi = sigma\r\n>     else:\r\n>         yield xi, sigma\r\n>         # High-frequency (constant-Q) region: geometric progression of xi\r\n>         while sigma > (sigma_min * math.pow(2, 1 / Q)):\r\n>             xi /= math.pow(2, 1 / Q)\r\n>             sigma /= math.pow(2, 1 / Q)\r\n>             yield xi, sigma\r\n> \r\n>     # Low-frequency (constant-bandwidth) region: arithmetic progression of xi\r\n>     for q in range(Q):\r\n>         xi -= 1/Q\r\n>         yield xi, sigma_min\r\n> \r\n> \r\n> def scattering_filter_factory(N, Js, Qs, T, generators, filters):\r\n>     lowpass, wavelets = filters[0], filters[1:]\r\n>     filterbanks = []\r\n>     n_resolutions = 1\r\n>     for J, Q, generator, wavelet in zip(Js, Qs, generators, wavelets):\r\n>         generator_fn, generator_kwargs = generator\r\n>         wavelet_fn, wavelet_kwargs = wavelet\r\n>         filterbank = []\r\n>         max_j = 0\r\n>         xi_sigmas = generator_fn(J, Q, **generator_kwargs)\r\n>         for n, (xi, sigma) in enumerate(xi_sigmas):\r\n>             j = get_max_dyadic_subsampling(xi, sigma, **wavelet_kwargs)\r\n>             psi_f = {0: wavelet_fn(N, xi, sigma, **wavelet_kwargs),\r\n>                 \"xi\": xi, \"sigma\": sigma, \"j\": j, \"n\": n}\r\n>             for k in range(1+n_resolutions):\r\n>                 psi_f[k] = periodize_filter_fourier(psi_f, n_periods=2**k)\r\n>             filterbank.append(psi_f)\r\n>             max_j = max(max_j, j)\r\n>         n_resolutions = max(n_resolutions, max_j)\r\n>         filterbanks.append(filterbank)\r\n> \r\n>     lowpass_fn, lowpass_kwargs = lowpass\r\n>     log2_T = math.floor(math.log2(T))\r\n>     phi_f = {0: lowpass_fn(N, T, **lowpass_kwargs), \"j\": log2_T}\r\n>     for k in range(1+n_resolutions):\r\n>         phi_f[k] = periodize_filter_fourier(phi_f, n_periods=2**k)\r\n> \r\n>     return phi_f, *filterbanks\r\n> \r\n> \r\n> def create_filters(self):\r\n>     sigma0 = 0.1\r\n>     r_psi = sqrt(0.5)\r\n>     generators = (\r\n>         (scatnet_generator, {\"r_psi\"}),\r\n>         (scatnet_generator, {\"r_psi\"})\r\n>     )\r\n>     filters = (\r\n>         (gauss_1d, {\"sigma0\": sigma}),\r\n>         (morlet_1d, {\"r_psi\": r_psi}),\r\n>         (morlet_1d, {\"r_psi\": r_psi})\r\n>     )\r\n>     self.phi_f, self.psi1_f, self.psi2_f = scattering_filter_factory(\r\n>         N, J, Q, T, generators, filters)\r\n> ```\r\n> \r\n> Note that the last function prepares for a number of features that could happen in v0.4 if we deem it useful:\r\n> \r\n>     * varying Q per order ([ Make `Q2` customizable #854](https://github.com/kymatio/kymatio/pull/854) )\r\n> \r\n>     * varying J per order\r\n> \r\n>     * switching wavelet types\r\n> \r\n>     * varying r_psi per order\r\n> \r\n>     * varying wavelet type per order\r\n> \r\n>     * having more than two orders\r\n> \r\n>     * replacing the `scatnet_generator` by something else\r\n> \r\n> \r\n> It also allows to skip filterbank construction in a very concise way:\r\n> \r\n> ```python\r\n> skip_filters = repeat(lambda *args, **kwargs: None, {})\r\n> phi_f, psi1_f, psi2_f = scattering_filter_factory(N, Js, Qs, T, generators, skip_filters)\r\n> ```\r\n> \r\n> This idiom is useful for maintaining `utils.compute_meta_scattering` and `utils.precompute_size_scattering`. I also believe it will improve our approach to padding\r\n\r\n🔥 ","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1155756907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"cyrusvahidi","id":10761938,"node_id":"MDQ6VXNlcjEwNzYxOTM4","avatar_url":"https://avatars.githubusercontent.com/u/10761938?v=4","gravatar_id":"","url":"https://api.github.com/users/cyrusvahidi","html_url":"https://github.com/cyrusvahidi","followers_url":"https://api.github.com/users/cyrusvahidi/followers","following_url":"https://api.github.com/users/cyrusvahidi/following{/other_user}","gists_url":"https://api.github.com/users/cyrusvahidi/gists{/gist_id}","starred_url":"https://api.github.com/users/cyrusvahidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyrusvahidi/subscriptions","organizations_url":"https://api.github.com/users/cyrusvahidi/orgs","repos_url":"https://api.github.com/users/cyrusvahidi/repos","events_url":"https://api.github.com/users/cyrusvahidi/events{/privacy}","received_events_url":"https://api.github.com/users/cyrusvahidi/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1156214531","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1156214531","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1156214531,"node_id":"IC_kwDOCQLq_c5E6m8D","user":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"created_at":"2022-06-15T09:14:58Z","updated_at":"2022-06-15T09:18:19Z","author_association":"COLLABORATOR","body":">  perhaps wavelet function could follow some interface and be callable rather than passing around kwargs.\r\n\r\n@cyrusvahidi i'm trying my best (so far with success) not to introduce new object-oriented classes. So a compromise i had in mind would be a two-element tuple with the callable as first element and its kwargs as second elements.\r\n\r\nSomething like `(gauss_1d, {\"sigma0\": sigma})` or `(morlet_1d, {\"r_psi\": r_psi})`.\r\n\r\nFor a Gammatone, it would become `(gammatone_1d, {\"r_psi\": r_psi, \"gammatone_order\": 4})` or something like that. The prototype of `gammatone_1d` would much resemble `morlet_1d`:\r\n\r\n```python\r\ndef gammatone_1d(N, xi, sigma, *, r_psi, gammatone_order):\r\n```\r\n\r\n I don't think it's necessary to have a new class where that class would basically implement `__init__`, `__call__`, and maybe (maybe!) some method `T_from_sigma` which computes the temporal support as a function of the `sigma` bandwidth parameter. But we have no such method right now, as we work empirically (`compute_temporal_support`) on the `phi` so estimate our `min_to_pad`. Therefore i don't believe an OO interface is necessary ... yet.\r\n\r\nSo i see my solution as one step in the journey but not the final destination. In any case this will need to be discussed with @eickenberg, who i know has thought about this for a while now.","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1156214531/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false}},{"id":6811175600,"node_id":"MEE_lADOCQLq_c5LQYl-zwAAAAGV-kqw","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6811175600","actor":{"login":"eickenberg","id":1306635,"node_id":"MDQ6VXNlcjEzMDY2MzU=","avatar_url":"https://avatars.githubusercontent.com/u/1306635?v=4","gravatar_id":"","url":"https://api.github.com/users/eickenberg","html_url":"https://github.com/eickenberg","followers_url":"https://api.github.com/users/eickenberg/followers","following_url":"https://api.github.com/users/eickenberg/following{/other_user}","gists_url":"https://api.github.com/users/eickenberg/gists{/gist_id}","starred_url":"https://api.github.com/users/eickenberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eickenberg/subscriptions","organizations_url":"https://api.github.com/users/eickenberg/orgs","repos_url":"https://api.github.com/users/eickenberg/repos","events_url":"https://api.github.com/users/eickenberg/events{/privacy}","received_events_url":"https://api.github.com/users/eickenberg/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-15T09:14:58Z","performed_via_github_app":null},{"id":6811175606,"node_id":"SE_lADOCQLq_c5LQYl-zwAAAAGV-kq2","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6811175606","actor":{"login":"eickenberg","id":1306635,"node_id":"MDQ6VXNlcjEzMDY2MzU=","avatar_url":"https://avatars.githubusercontent.com/u/1306635?v=4","gravatar_id":"","url":"https://api.github.com/users/eickenberg","html_url":"https://github.com/eickenberg","followers_url":"https://api.github.com/users/eickenberg/followers","following_url":"https://api.github.com/users/eickenberg/following{/other_user}","gists_url":"https://api.github.com/users/eickenberg/gists{/gist_id}","starred_url":"https://api.github.com/users/eickenberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eickenberg/subscriptions","organizations_url":"https://api.github.com/users/eickenberg/orgs","repos_url":"https://api.github.com/users/eickenberg/repos","events_url":"https://api.github.com/users/eickenberg/events{/privacy}","received_events_url":"https://api.github.com/users/eickenberg/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-15T09:14:58Z","performed_via_github_app":null},{"id":6811175612,"node_id":"MEE_lADOCQLq_c5LQYl-zwAAAAGV-kq8","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6811175612","actor":{"login":"cyrusvahidi","id":10761938,"node_id":"MDQ6VXNlcjEwNzYxOTM4","avatar_url":"https://avatars.githubusercontent.com/u/10761938?v=4","gravatar_id":"","url":"https://api.github.com/users/cyrusvahidi","html_url":"https://github.com/cyrusvahidi","followers_url":"https://api.github.com/users/cyrusvahidi/followers","following_url":"https://api.github.com/users/cyrusvahidi/following{/other_user}","gists_url":"https://api.github.com/users/cyrusvahidi/gists{/gist_id}","starred_url":"https://api.github.com/users/cyrusvahidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyrusvahidi/subscriptions","organizations_url":"https://api.github.com/users/cyrusvahidi/orgs","repos_url":"https://api.github.com/users/cyrusvahidi/repos","events_url":"https://api.github.com/users/cyrusvahidi/events{/privacy}","received_events_url":"https://api.github.com/users/cyrusvahidi/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-06-15T09:14:58Z","performed_via_github_app":null},{"id":6811175619,"node_id":"SE_lADOCQLq_c5LQYl-zwAAAAGV-krD","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/6811175619","actor":{"login":"cyrusvahidi","id":10761938,"node_id":"MDQ6VXNlcjEwNzYxOTM4","avatar_url":"https://avatars.githubusercontent.com/u/10761938?v=4","gravatar_id":"","url":"https://api.github.com/users/cyrusvahidi","html_url":"https://github.com/cyrusvahidi","followers_url":"https://api.github.com/users/cyrusvahidi/followers","following_url":"https://api.github.com/users/cyrusvahidi/following{/other_user}","gists_url":"https://api.github.com/users/cyrusvahidi/gists{/gist_id}","starred_url":"https://api.github.com/users/cyrusvahidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cyrusvahidi/subscriptions","organizations_url":"https://api.github.com/users/cyrusvahidi/orgs","repos_url":"https://api.github.com/users/cyrusvahidi/repos","events_url":"https://api.github.com/users/cyrusvahidi/events{/privacy}","received_events_url":"https://api.github.com/users/cyrusvahidi/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-06-15T09:14:58Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1213157708","html_url":"https://github.com/kymatio/kymatio/issues/851#issuecomment-1213157708","issue_url":"https://api.github.com/repos/kymatio/kymatio/issues/851","id":1213157708,"node_id":"IC_kwDOCQLq_c5IT1FM","user":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"created_at":"2022-08-12T14:15:20Z","updated_at":"2022-08-12T14:15:20Z","author_association":"COLLABORATOR","body":"On it.","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/comments/1213157708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false}},{"actor":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"created_at":"2022-08-12T16:24:04Z","updated_at":"2022-08-12T16:24:04Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/915","repository_url":"https://api.github.com/repos/kymatio/kymatio","labels_url":"https://api.github.com/repos/kymatio/kymatio/issues/915/labels{/name}","comments_url":"https://api.github.com/repos/kymatio/kymatio/issues/915/comments","events_url":"https://api.github.com/repos/kymatio/kymatio/issues/915/events","html_url":"https://github.com/kymatio/kymatio/pull/915","id":1337412214,"node_id":"PR_kwDOCQLq_c49Gh__","number":915,"title":"ENH `anden_generator` and `self.filterbank` property","user":{"login":"lostanlen","id":3943142,"node_id":"MDQ6VXNlcjM5NDMxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/3943142?v=4","gravatar_id":"","url":"https://api.github.com/users/lostanlen","html_url":"https://github.com/lostanlen","followers_url":"https://api.github.com/users/lostanlen/followers","following_url":"https://api.github.com/users/lostanlen/following{/other_user}","gists_url":"https://api.github.com/users/lostanlen/gists{/gist_id}","starred_url":"https://api.github.com/users/lostanlen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostanlen/subscriptions","organizations_url":"https://api.github.com/users/lostanlen/orgs","repos_url":"https://api.github.com/users/lostanlen/repos","events_url":"https://api.github.com/users/lostanlen/events{/privacy}","received_events_url":"https://api.github.com/users/lostanlen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-12T16:24:04Z","updated_at":"2022-08-13T13:57:08Z","closed_at":"2022-08-13T13:57:08Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"repository":{"id":151186173,"node_id":"MDEwOlJlcG9zaXRvcnkxNTExODYxNzM=","name":"kymatio","full_name":"kymatio/kymatio","private":false,"owner":{"login":"kymatio","id":45135504,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQ1MTM1NTA0","avatar_url":"https://avatars.githubusercontent.com/u/45135504?v=4","gravatar_id":"","url":"https://api.github.com/users/kymatio","html_url":"https://github.com/kymatio","followers_url":"https://api.github.com/users/kymatio/followers","following_url":"https://api.github.com/users/kymatio/following{/other_user}","gists_url":"https://api.github.com/users/kymatio/gists{/gist_id}","starred_url":"https://api.github.com/users/kymatio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kymatio/subscriptions","organizations_url":"https://api.github.com/users/kymatio/orgs","repos_url":"https://api.github.com/users/kymatio/repos","events_url":"https://api.github.com/users/kymatio/events{/privacy}","received_events_url":"https://api.github.com/users/kymatio/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/kymatio/kymatio","description":"Wavelet scattering transforms in Python with GPU acceleration","fork":false,"url":"https://api.github.com/repos/kymatio/kymatio","forks_url":"https://api.github.com/repos/kymatio/kymatio/forks","keys_url":"https://api.github.com/repos/kymatio/kymatio/keys{/key_id}","collaborators_url":"https://api.github.com/repos/kymatio/kymatio/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/kymatio/kymatio/teams","hooks_url":"https://api.github.com/repos/kymatio/kymatio/hooks","issue_events_url":"https://api.github.com/repos/kymatio/kymatio/issues/events{/number}","events_url":"https://api.github.com/repos/kymatio/kymatio/events","assignees_url":"https://api.github.com/repos/kymatio/kymatio/assignees{/user}","branches_url":"https://api.github.com/repos/kymatio/kymatio/branches{/branch}","tags_url":"https://api.github.com/repos/kymatio/kymatio/tags","blobs_url":"https://api.github.com/repos/kymatio/kymatio/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/kymatio/kymatio/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/kymatio/kymatio/git/refs{/sha}","trees_url":"https://api.github.com/repos/kymatio/kymatio/git/trees{/sha}","statuses_url":"https://api.github.com/repos/kymatio/kymatio/statuses/{sha}","languages_url":"https://api.github.com/repos/kymatio/kymatio/languages","stargazers_url":"https://api.github.com/repos/kymatio/kymatio/stargazers","contributors_url":"https://api.github.com/repos/kymatio/kymatio/contributors","subscribers_url":"https://api.github.com/repos/kymatio/kymatio/subscribers","subscription_url":"https://api.github.com/repos/kymatio/kymatio/subscription","commits_url":"https://api.github.com/repos/kymatio/kymatio/commits{/sha}","git_commits_url":"https://api.github.com/repos/kymatio/kymatio/git/commits{/sha}","comments_url":"https://api.github.com/repos/kymatio/kymatio/comments{/number}","issue_comment_url":"https://api.github.com/repos/kymatio/kymatio/issues/comments{/number}","contents_url":"https://api.github.com/repos/kymatio/kymatio/contents/{+path}","compare_url":"https://api.github.com/repos/kymatio/kymatio/compare/{base}...{head}","merges_url":"https://api.github.com/repos/kymatio/kymatio/merges","archive_url":"https://api.github.com/repos/kymatio/kymatio/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/kymatio/kymatio/downloads","issues_url":"https://api.github.com/repos/kymatio/kymatio/issues{/number}","pulls_url":"https://api.github.com/repos/kymatio/kymatio/pulls{/number}","milestones_url":"https://api.github.com/repos/kymatio/kymatio/milestones{/number}","notifications_url":"https://api.github.com/repos/kymatio/kymatio/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/kymatio/kymatio/labels{/name}","releases_url":"https://api.github.com/repos/kymatio/kymatio/releases{/id}","deployments_url":"https://api.github.com/repos/kymatio/kymatio/deployments","created_at":"2018-10-02T01:45:46Z","updated_at":"2023-01-18T06:43:13Z","pushed_at":"2023-01-17T09:28:11Z","git_url":"git://github.com/kymatio/kymatio.git","ssh_url":"git@github.com:kymatio/kymatio.git","clone_url":"https://github.com/kymatio/kymatio.git","svn_url":"https://github.com/kymatio/kymatio","homepage":"https://kymat.io","size":2465,"stargazers_count":617,"watchers_count":617,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":false,"has_pages":false,"has_discussions":true,"forks_count":112,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":69,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause","node_id":"MDc6TGljZW5zZTU="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["deep-learning","keras","numpy","pytorch","scattering-transform","scikit-learn","tensorflow","wavelets"],"visibility":"public","forks":112,"open_issues":69,"watchers":617,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/kymatio/kymatio/pulls/915","html_url":"https://github.com/kymatio/kymatio/pull/915","diff_url":"https://github.com/kymatio/kymatio/pull/915.diff","patch_url":"https://github.com/kymatio/kymatio/pull/915.patch","merged_at":"2022-08-13T13:57:08Z"},"body":"Closes #851\r\n\r\nalso closes #916 \r\n\r\nNew prototype for `scattering_filter_factory`\r\n```python\r\nscattering_filter_factory(N, J, Q, T, filterbank)\r\n```\r\n\r\nwhere filterbank is stored as a property of the scattering object.\r\n\r\n\r\nThe algorithm for scattering filter factory is now way more concise. No more `if` statements !\r\n\r\n```python\r\n# Loop over scattering layers\r\nfor Q_layer in Q:\r\n    psi_f = []\r\n\r\n    # Loop over center frequencies xi and bandwidths sigma in the filterbank\r\n    for xi, sigma in filterbank_fn(J, Q_layer, **filterbank_kwargs):\r\n\r\n        # Construct filter at full resolution\r\n        psi_levels = [morlet_1d(N, xi, sigma)]\r\n        j = get_max_dyadic_subsampling(xi, sigma, **filterbank_kwargs)\r\n\r\n        # Resample to smaller resolutions if necessary (beyond 1st layer)\r\n        # The idiom min(previous_J, j, log2_T) implements \"j1 < j2\"\r\n        for level in range(1, min(previous_J, j, log2_T)):\r\n            psi_level = psi_levels[0].reshape(2 ** level, -1).mean(axis=0)\r\n            psi_levels.append(psi_level)\r\n        psi_f.append({'levels': psi_levels, 'xi': xi, 'sigma': sigma, 'j': j})\r\n        max_j = max(j, max_j)\r\n\r\n    # Keep score of how many resolutions will be needed in the next layer\r\n    previous_J = max_j\r\n    psis_f.append(psi_f)\r\n\r\n# Same with low-pass filter phi\r\nsigma_low = filterbank_kwargs[\"sigma0\"] / T\r\nphi_levels = [gauss_1d(N, sigma_low)]\r\nfor level in range(1, max(previous_J, 1+log2_T)):\r\n    phi_level = phi_levels[0].reshape(2 ** level, -1).mean(axis=0)\r\n    phi_levels.append(phi_level)\r\nphi_f = {'levels': phi_levels, 'xi': 0, 'sigma': sigma_low, 'j': log2_T}\r\n\r\nreturn tuple([phi_f] + psis_f)\r\n```\r\n\r\n- [x] write `scatnet_generator`\r\n- [x] update callsites: `scattering_filter_factory`, `precompute_size_scattering`, `compute_meta_scattering`\r\n- [x] define `generators` and `filters` lists\r\n- [x] pass `alpha` as `filterbank_kwargs`\r\n- [x] pass `sigma0` as `generator_kwargs`\r\n- [x] pass `r_psi` as `generator_kwargs`\r\n- [x] refactor `scattering_filter_factory` for any order\r\n- [x] merge #914 (automatic meta and output_size)\r\n- [x] resolve conflicts here \r\n- [x] documentation\r\n- [x] tests\r\n- [x] examples\r\n\r\nSome of the new features that will become easier to develop and maintain after this:\r\n\r\nspinned wavelets\r\nvarying J per order\r\nswitching wavelet types\r\nvarying r_psi per order\r\nvarying wavelet type per order\r\nhaving more than two orders\r\nreplacing the scatnet_generator by something else\r\n\r\nNB: \"skip filters\" is out of scope for this PR. This is more simply done with a `DryBackend` (#914)\r\nNB: in the end i didn't introduce `wavelet` and `lowpass` properties, only `filterbank`. I don't want to introduce too many features that perhaps no one will use (although there is precedent for a feature request in switching the wavelet: #385 , but one thing at a time)\r\n\r\nI have removed `periodize_filter_fourier` which is a simple one-liner and was called in 2/3 places\r\n`compute_params_filterbank` is now replaced by `scatnet_generator`, which is shorter. I have also improved (i hope!) the documentation\r\n\r\n","reactions":{"url":"https://api.github.com/repos/kymatio/kymatio/issues/915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kymatio/kymatio/issues/915/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"id":7183421380,"node_id":"CE_lADOCQLq_c5LQYl-zwAAAAGsKk_E","url":"https://api.github.com/repos/kymatio/kymatio/issues/events/7183421380","actor":{"login":"MuawizChaudhary","id":39755015,"node_id":"MDQ6VXNlcjM5NzU1MDE1","avatar_url":"https://avatars.githubusercontent.com/u/39755015?v=4","gravatar_id":"","url":"https://api.github.com/users/MuawizChaudhary","html_url":"https://github.com/MuawizChaudhary","followers_url":"https://api.github.com/users/MuawizChaudhary/followers","following_url":"https://api.github.com/users/MuawizChaudhary/following{/other_user}","gists_url":"https://api.github.com/users/MuawizChaudhary/gists{/gist_id}","starred_url":"https://api.github.com/users/MuawizChaudhary/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MuawizChaudhary/subscriptions","organizations_url":"https://api.github.com/users/MuawizChaudhary/orgs","repos_url":"https://api.github.com/users/MuawizChaudhary/repos","events_url":"https://api.github.com/users/MuawizChaudhary/events{/privacy}","received_events_url":"https://api.github.com/users/MuawizChaudhary/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-08-13T13:57:09Z","state_reason":null,"performed_via_github_app":null}]