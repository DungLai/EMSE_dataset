{"url":"https://api.github.com/repos/mravanelli/SincNet/issues/37","repository_url":"https://api.github.com/repos/mravanelli/SincNet","labels_url":"https://api.github.com/repos/mravanelli/SincNet/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/mravanelli/SincNet/issues/37/comments","events_url":"https://api.github.com/repos/mravanelli/SincNet/issues/37/events","html_url":"https://github.com/mravanelli/SincNet/issues/37","id":434760998,"node_id":"MDU6SXNzdWU0MzQ3NjA5OTg=","number":37,"title":"Adding new speakers/using transfer learning ","user":{"login":"bogdan-nechita","id":4755516,"node_id":"MDQ6VXNlcjQ3NTU1MTY=","avatar_url":"https://avatars.githubusercontent.com/u/4755516?v=4","gravatar_id":"","url":"https://api.github.com/users/bogdan-nechita","html_url":"https://github.com/bogdan-nechita","followers_url":"https://api.github.com/users/bogdan-nechita/followers","following_url":"https://api.github.com/users/bogdan-nechita/following{/other_user}","gists_url":"https://api.github.com/users/bogdan-nechita/gists{/gist_id}","starred_url":"https://api.github.com/users/bogdan-nechita/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bogdan-nechita/subscriptions","organizations_url":"https://api.github.com/users/bogdan-nechita/orgs","repos_url":"https://api.github.com/users/bogdan-nechita/repos","events_url":"https://api.github.com/users/bogdan-nechita/events{/privacy}","received_events_url":"https://api.github.com/users/bogdan-nechita/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-04-18T13:07:00Z","updated_at":"2019-06-14T12:31:21Z","closed_at":"2019-04-20T18:59:30Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nFirst of all, thanks for all the great work :)\r\n\r\nI managed to reproduce the results from the paper using the TIMIT dataset and I am now thinking about the following scenario:\r\n\r\nI have a dataset of 500 speakers, I trained the model on it, I get a good enough accuracy and the model can reliably identify one of those 500 speakers from an audio sample. Now I need to add one or more new speakers, let's say 5; the desired outcome is a model that can identify one of the now 505 speakers. This could be a case that repeats in the future, as I get more audio data.\r\n\r\nI currently have these approaches in mind:\r\n\r\n1. Train the model from scratch every time I need to add new speakers. The disadvantage to this is that I don't leverage any accumulated knowledge from previous trainings.\r\n\r\n2. Use transfer learning somehow - load the weights from the \"500 speakers\" trained model and replace the softmax layer with one that has 505 classes, then train a few more epochs.\r\n\r\n3. Same as 2, except we also freeze all the layers except softmax.\r\n\r\nHow would you approach this? If 2 and 3 are viable options, how would you implement that? Would changing \"class_lay\" in the config to 505 and training with the new dataset be enough for 2? How would you approach freezing the non-softmax layers?\r\n\r\nThanks again,\r\nBogdan","closed_by":{"login":"mravanelli","id":16886998,"node_id":"MDQ6VXNlcjE2ODg2OTk4","avatar_url":"https://avatars.githubusercontent.com/u/16886998?v=4","gravatar_id":"","url":"https://api.github.com/users/mravanelli","html_url":"https://github.com/mravanelli","followers_url":"https://api.github.com/users/mravanelli/followers","following_url":"https://api.github.com/users/mravanelli/following{/other_user}","gists_url":"https://api.github.com/users/mravanelli/gists{/gist_id}","starred_url":"https://api.github.com/users/mravanelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mravanelli/subscriptions","organizations_url":"https://api.github.com/users/mravanelli/orgs","repos_url":"https://api.github.com/users/mravanelli/repos","events_url":"https://api.github.com/users/mravanelli/events{/privacy}","received_events_url":"https://api.github.com/users/mravanelli/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mravanelli/SincNet/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mravanelli/SincNet/issues/37/timeline","performed_via_github_app":null,"state_reason":"completed"}