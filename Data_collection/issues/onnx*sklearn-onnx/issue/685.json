{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/685","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/685/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/685/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/685/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/685","id":945049260,"node_id":"MDU6SXNzdWU5NDUwNDkyNjA=","number":685,"title":"Converter for pyod.models.iforest.IForest","user":{"login":"hanzigs","id":30790120,"node_id":"MDQ6VXNlcjMwNzkwMTIw","avatar_url":"https://avatars.githubusercontent.com/u/30790120?v=4","gravatar_id":"","url":"https://api.github.com/users/hanzigs","html_url":"https://github.com/hanzigs","followers_url":"https://api.github.com/users/hanzigs/followers","following_url":"https://api.github.com/users/hanzigs/following{/other_user}","gists_url":"https://api.github.com/users/hanzigs/gists{/gist_id}","starred_url":"https://api.github.com/users/hanzigs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanzigs/subscriptions","organizations_url":"https://api.github.com/users/hanzigs/orgs","repos_url":"https://api.github.com/users/hanzigs/repos","events_url":"https://api.github.com/users/hanzigs/events{/privacy}","received_events_url":"https://api.github.com/users/hanzigs/received_events","type":"User","site_admin":false},"labels":[{"id":3171328463,"node_id":"MDU6TGFiZWwzMTcxMzI4NDYz","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/todo","name":"todo","color":"1785AD","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-07-15T06:33:09Z","updated_at":"2021-08-05T08:27:36Z","closed_at":"2021-08-05T08:27:36Z","author_association":"NONE","active_lock_reason":null,"body":"Is it possible to get converter for pyod anomaly detection models? \r\nhttps://pyod.readthedocs.io/en/latest/_modules/pyod/models/iforest.html\r\n\r\npyod Iforest is a Wrapper of scikit-learn Isolation Forest with more functionalities.\r\n\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-91-f753e8bf7b2f>\", line 1, in <module>\r\n    IFOnnx_model = convert_sklearn(model1, initial_types=initial_type)\r\n\r\n  File \"C:\\Users\\pl\\Anaconda3\\lib\\site-packages\\onnxmltools\\convert\\main.py\", line 66, in convert_sklearn\r\n    custom_conversion_functions, custom_shape_calculators)\r\n\r\n  File \"C:\\Users\\pl\\Anaconda3\\lib\\site-packages\\skl2onnx\\convert.py\", line 150, in convert_sklearn\r\n    topology.compile()\r\n\r\n  File \"C:\\Users\\pl\\Anaconda3\\lib\\site-packages\\skl2onnx\\common\\_topology.py\", line 903, in compile\r\n    self._infer_all_types()\r\n\r\n  File \"C:\\Users\\pl\\Anaconda3\\lib\\site-packages\\skl2onnx\\common\\_topology.py\", line 756, in _infer_all_types\r\n    operator.infer_types()\r\n\r\n  File \"C:\\Users\\pl\\Anaconda3\\lib\\site-packages\\skl2onnx\\common\\_topology.py\", line 215, in infer_types\r\n    type(self.raw_operator)))\r\n\r\nMissingShapeCalculator: Unable to find a shape calculator for type '<class 'pyod.models.iforest.IForest'>'.\r\nIt usually means the pipeline being converted contains a\r\ntransformer or a predictor with no corresponding converter\r\nimplemented in sklearn-onnx. If the converted is implemented\r\nin another library, you need to register\r\nthe converted so that it can be used by sklearn-onnx (function\r\nupdate_registered_converter). If the model is not yet covered\r\nby sklearn-onnx, you may raise an issue to\r\nhttps://github.com/onnx/sklearn-onnx/issues\r\nto get the converter implemented or even contribute to the\r\nproject. If the model is a custom model, a new converter must\r\nbe implemented. Examples can be found in the gallery.\r\n```\r\nsample code for IForest\r\n```\r\nimport pandas as pd\r\nfrom pyod.models.iforest import IForest\r\nfrom sklearn.preprocessing import MinMaxScaler\r\n\r\ndata1 = {'First':  [500,500,400,100,200,300,100],\r\n         'Second': ['a','b','a','b','a','b','c'],\r\n         }\r\ndf1 = pd.DataFrame(data1,columns=['First','Second'])\r\ndumdf1 = pd.get_dummies(df1) \r\nscaler = MinMaxScaler()\r\nscaler.partial_fit(dumdf1)\r\nsc_data = scaler.transform(dumdf1)\r\nmodel1 = IForest(n_estimators=10,\r\n               bootstrap=True,\r\n               behaviour='new',\r\n               contamination=0.1,\r\n               random_state=np.random.RandomState(42),\r\n               verbose=1,\r\n               n_jobs=-1).fit(sc_data)\r\nfeature_names2 = dumdf1.columns\r\n\r\nfrom onnxmltools.convert.common.data_types import FloatTensorType\r\nfrom onnxmltools import convert_sklearn\r\n\r\ninitial_type = [('float_input', FloatTensorType([None, len(feature_names2)]))]\r\nIFOnnx_model = convert_sklearn(model1, initial_types=initial_type)\r\n```\r\n\r\n\r\nThanks in advance\r\n","closed_by":{"login":"xadupre","id":22452781,"node_id":"MDQ6VXNlcjIyNDUyNzgx","avatar_url":"https://avatars.githubusercontent.com/u/22452781?v=4","gravatar_id":"","url":"https://api.github.com/users/xadupre","html_url":"https://github.com/xadupre","followers_url":"https://api.github.com/users/xadupre/followers","following_url":"https://api.github.com/users/xadupre/following{/other_user}","gists_url":"https://api.github.com/users/xadupre/gists{/gist_id}","starred_url":"https://api.github.com/users/xadupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xadupre/subscriptions","organizations_url":"https://api.github.com/users/xadupre/orgs","repos_url":"https://api.github.com/users/xadupre/repos","events_url":"https://api.github.com/users/xadupre/events{/privacy}","received_events_url":"https://api.github.com/users/xadupre/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/685/timeline","performed_via_github_app":null,"state_reason":"completed"}