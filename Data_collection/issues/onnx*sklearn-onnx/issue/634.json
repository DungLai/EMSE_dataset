{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/634","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/634/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/634/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/634/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/634","id":843454349,"node_id":"MDU6SXNzdWU4NDM0NTQzNDk=","number":634,"title":"Question about using nested models (OnnxSubOperator)","user":{"login":"alvaroibrwork","id":81574848,"node_id":"MDQ6VXNlcjgxNTc0ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/81574848?v=4","gravatar_id":"","url":"https://api.github.com/users/alvaroibrwork","html_url":"https://github.com/alvaroibrwork","followers_url":"https://api.github.com/users/alvaroibrwork/followers","following_url":"https://api.github.com/users/alvaroibrwork/following{/other_user}","gists_url":"https://api.github.com/users/alvaroibrwork/gists{/gist_id}","starred_url":"https://api.github.com/users/alvaroibrwork/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alvaroibrwork/subscriptions","organizations_url":"https://api.github.com/users/alvaroibrwork/orgs","repos_url":"https://api.github.com/users/alvaroibrwork/repos","events_url":"https://api.github.com/users/alvaroibrwork/events{/privacy}","received_events_url":"https://api.github.com/users/alvaroibrwork/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-03-29T14:54:59Z","updated_at":"2021-03-31T09:13:38Z","closed_at":"2021-03-31T09:13:38Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI'm trying to implement a converter for a custom sklearn model but I'm getting errors...\r\nSimplified, the thing I'm doing is similar to [this example](http://onnx.ai/sklearn-onnx/auto_tutorial/plot_kcustom_converter_wrapper.html) (using OnnxSubOperator for auto-converting a nested estimator in a model).\r\n\r\nIn my case, my custom estimator is something like this:\r\n\r\n```python3\r\nclass BinaryClassifier:\r\n    \"\"\"\r\n    Custom binary classifier class. A wrapper of a classifier that must have a predict_proba method.\r\n\r\n    \"\"\"\r\n\r\n    def __init__(self, classifier, **kwargs):\r\n        \"\"\"\r\n        Class constructor.\r\n\r\n            Args:\r\n            classifier: classifier object.\r\n            kwargs: parameters for the classifier.\r\n\r\n        \"\"\"\r\n        self.clf = classifier(**kwargs)\r\n\r\n    def fit(self, X, y):\r\n        self.clf.fit(X, y)\r\n\r\n    def predict(self, X, threshold=0.5):\r\n        # Custom implementation\r\n\r\n    def predict_proba(self, X):\r\n        # Custom implementation\r\n```\r\n\r\nAnd my converter:\r\n\r\n```python3\r\ndef binaryclf_shape_calculator(operator):\r\n    op = operator.raw_operator\r\n    input_type = operator.inputs[0].type.__class__\r\n    input_dim = operator.inputs[0].type.shape[0]\r\n    output_type = input_type([input_dim,op.clf.n_features_]) \r\n    operator.outputs[0].type = output_type\r\n\r\ndef binaryclf_cvtr(scope, operator, container):\r\n    # shortcuts\r\n    op = operator.raw_operator\r\n    opv = container.target_opset\r\n    out = operator.outputs\r\n\r\n    # We retrieve the unique input.\r\n    X = operator.outputs[0]\r\n\r\n    # We guess its type. If the operator ingests float (or double),\r\n    # it outputs float (or double).\r\n    proto_dtype = guess_proto_type(X.type)\r\n    dtype = guess_numpy_type(X.type)\r\n\r\n    \r\n    subop = OnnxSubOperator(op.clf, X, op_version=opv)\r\n    Y = OnnxIdentity(subop, op_version=opv, output_names=out[:1])\r\n    Y.set_onnx_name_prefix('Y')\r\n    Y.add_to(scope, container)\r\n\r\n\r\nupdate_registered_converter(\r\n    BinaryClassifier, \"BinaryClassifierOp\",\r\n    binaryclf_shape_calculator,\r\n    binaryclf_cvtr)\r\n```\r\n\r\nRight now, my `BinaryClassifier` is wrapping a standard sklearn `RandomForestClassifier`. I simply want to take the RF graph and embed it into my graph to do further operations.\r\n\r\nThe problem arises when executing the conversion. I get an `IndexError: list index out of range` exception, raised [here](https://github.com/onnx/sklearn-onnx/blob/master/skl2onnx/operator_converters/random_forest.py#L215).  \r\n\r\nSupposedly, the RF graph has 2 outputs: `output_label` and `output_probability`. However, when converting via `OnnxSubOperator`, the legth of `operator_outputs` (inside the `skl2onnx/operator_converters/random_forest.py:convert_sklearn_random_forest_classifier` ) is equal to 1 (vs equal to 2 when directly converting the RF). \r\n\r\nCould anyone give me a hint about why this happens? Am I missing any step?\r\n\r\nThanks!\r\n\r\n","closed_by":{"login":"alvaroibrwork","id":81574848,"node_id":"MDQ6VXNlcjgxNTc0ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/81574848?v=4","gravatar_id":"","url":"https://api.github.com/users/alvaroibrwork","html_url":"https://github.com/alvaroibrwork","followers_url":"https://api.github.com/users/alvaroibrwork/followers","following_url":"https://api.github.com/users/alvaroibrwork/following{/other_user}","gists_url":"https://api.github.com/users/alvaroibrwork/gists{/gist_id}","starred_url":"https://api.github.com/users/alvaroibrwork/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alvaroibrwork/subscriptions","organizations_url":"https://api.github.com/users/alvaroibrwork/orgs","repos_url":"https://api.github.com/users/alvaroibrwork/repos","events_url":"https://api.github.com/users/alvaroibrwork/events{/privacy}","received_events_url":"https://api.github.com/users/alvaroibrwork/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/634/timeline","performed_via_github_app":null,"state_reason":"completed"}