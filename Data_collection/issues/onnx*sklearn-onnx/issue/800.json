{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/800","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/800/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/800/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/800/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/800","id":1076397335,"node_id":"I_kwDOCa0gS85AKIUX","number":800,"title":"Keyerror while converting StackingRegressor to ONNX...","user":{"login":"ebolotin6","id":42818860,"node_id":"MDQ6VXNlcjQyODE4ODYw","avatar_url":"https://avatars.githubusercontent.com/u/42818860?v=4","gravatar_id":"","url":"https://api.github.com/users/ebolotin6","html_url":"https://github.com/ebolotin6","followers_url":"https://api.github.com/users/ebolotin6/followers","following_url":"https://api.github.com/users/ebolotin6/following{/other_user}","gists_url":"https://api.github.com/users/ebolotin6/gists{/gist_id}","starred_url":"https://api.github.com/users/ebolotin6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebolotin6/subscriptions","organizations_url":"https://api.github.com/users/ebolotin6/orgs","repos_url":"https://api.github.com/users/ebolotin6/repos","events_url":"https://api.github.com/users/ebolotin6/events{/privacy}","received_events_url":"https://api.github.com/users/ebolotin6/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-10T03:53:39Z","updated_at":"2021-12-10T17:44:50Z","closed_at":"2021-12-10T17:44:50Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI have a StackingRegressor with 3 estimators:\r\n```\r\nstacking_ensemble = StackingRegressor(\r\n                    estimators=estimators, \r\n                    final_estimator=XGBRegressor(tree_method='gpu_hist', gpu_id=0),\r\n                    n_jobs=-1, \r\n                    verbose=0\r\n                )\r\n```\r\n\r\nI am trying to convert this model to onnx:\r\n\r\n```\r\nonnx_ens_model = to_onnx(stacking_ensemble, x_data.astype(np.float32), target_opset=12)\r\n```\r\n\r\nAnd receive the error below:\r\n```\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/convert.py in to_onnx(model, X, name, initial_types, target_opset, options, white_op, black_op, final_types, dtype, naming, verbose)\r\n    261     if verbose >= 1:\r\n    262         print(\"[to_onnx] initial_types=%r\" % initial_types)\r\n--> 263     return convert_sklearn(model, initial_types=initial_types,\r\n    264                            target_opset=target_opset,\r\n    265                            name=name, options=options,\r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/convert.py in convert_sklearn(model, name, initial_types, doc_string, target_opset, custom_conversion_functions, custom_shape_calculators, custom_parsers, options, intermediate, white_op, black_op, final_types, dtype, naming, verbose)\r\n    182     if verbose >= 1:\r\n    183         print(\"[convert_sklearn] convert_topology\")\r\n--> 184     onnx_model = convert_topology(\r\n    185         topology, name, doc_string, target_opset, options=options,\r\n    186         remove_identity=not intermediate, verbose=verbose)\r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/common/_topology.py in convert_topology(topology, model_name, doc_string, target_opset, channel_first_inputs, options, remove_identity, verbose)\r\n   1390     # Traverse the graph from roots to leaves\r\n   1391     # This loop could eventually be parallelized.\r\n-> 1392     topology.convert_operators(container=container, verbose=verbose)\r\n   1393     container.ensure_topological_order()\r\n   1394 \r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/common/_topology.py in convert_operators(self, container, verbose)\r\n   1227 \r\n   1228                     self.call_shape_calculator(operator)\r\n-> 1229                     self.call_converter(operator, container, verbose=verbose)\r\n   1230 \r\n   1231                     # If an operator contains a sequence of operators,\r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/common/_topology.py in call_converter(self, operator, container, verbose)\r\n   1042             \"\".join(str(i.is_fed) for i in operator.inputs),\r\n   1043             \"\".join(str(i.is_fed) for i in operator.outputs))\r\n-> 1044         conv(self.scopes[0], operator, container)\r\n   1045         logger.debug(\"[Conv] end - %r\", operator)\r\n   1046 \r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/common/_registration.py in __call__(self, *args)\r\n     24             if args[1].raw_operator is not None:\r\n     25                 args[2]._get_allowed_options(args[1].raw_operator)\r\n---> 26         return self._fct(*args)\r\n     27 \r\n     28     def get_allowed_options(self):\r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/operator_converters/stacking.py in convert_sklearn_stacking_regressor(scope, operator, container)\r\n    156     stacking_op = operator.raw_operator\r\n    157 \r\n--> 158     merged_proba_tensor = _transform_regressor(\r\n    159         scope, operator, container, stacking_op)\r\n    160     prob = _fetch_scores(\r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/operator_converters/stacking.py in _transform_regressor(scope, operator, container, model)\r\n     45         'merged_probability_tensor', operator.inputs[0].type.__class__())\r\n     46 \r\n---> 47     predictions = [\r\n     48         _fetch_scores(\r\n     49             scope, container, est, operator.inputs[0], is_regressor=True)\r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/operator_converters/stacking.py in <listcomp>(.0)\r\n     46 \r\n     47     predictions = [\r\n---> 48         _fetch_scores(\r\n     49             scope, container, est, operator.inputs[0], is_regressor=True)\r\n     50         for est in model.estimators_\r\n\r\n~/miniconda3/envs/ls/lib/python3.9/site-packages/skl2onnx/operator_converters/stacking.py in _fetch_scores(scope, container, model, inputs, raw_scores, is_regressor)\r\n     16 def _fetch_scores(scope, container, model, inputs, raw_scores=False,\r\n     17                   is_regressor=False):\r\n---> 18     op_type = sklearn_operator_name_map[type(model)]\r\n     19     this_operator = scope.declare_local_operator(op_type, model)\r\n     20     if container.has_options(model, 'raw_scores'):\r\n\r\nKeyError: <class 'xgboost.sklearn.XGBRegressor'>\r\n```\r\n\r\nAny ideas how to fix?\r\n\r\nThank you!","closed_by":{"login":"ebolotin6","id":42818860,"node_id":"MDQ6VXNlcjQyODE4ODYw","avatar_url":"https://avatars.githubusercontent.com/u/42818860?v=4","gravatar_id":"","url":"https://api.github.com/users/ebolotin6","html_url":"https://github.com/ebolotin6","followers_url":"https://api.github.com/users/ebolotin6/followers","following_url":"https://api.github.com/users/ebolotin6/following{/other_user}","gists_url":"https://api.github.com/users/ebolotin6/gists{/gist_id}","starred_url":"https://api.github.com/users/ebolotin6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebolotin6/subscriptions","organizations_url":"https://api.github.com/users/ebolotin6/orgs","repos_url":"https://api.github.com/users/ebolotin6/repos","events_url":"https://api.github.com/users/ebolotin6/events{/privacy}","received_events_url":"https://api.github.com/users/ebolotin6/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/800/timeline","performed_via_github_app":null,"state_reason":"completed"}