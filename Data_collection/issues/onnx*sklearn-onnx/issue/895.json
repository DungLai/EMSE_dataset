{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/895","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/895/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/895/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/895/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/895","id":1320908590,"node_id":"I_kwDOCa0gS85Ou3cu","number":895,"title":"(OneVsOneClassifier) Not able to convert sklearn model using pipeline to ONNX format for real time inferencing","user":{"login":"pratikchhapolika","id":11159549,"node_id":"MDQ6VXNlcjExMTU5NTQ5","avatar_url":"https://avatars.githubusercontent.com/u/11159549?v=4","gravatar_id":"","url":"https://api.github.com/users/pratikchhapolika","html_url":"https://github.com/pratikchhapolika","followers_url":"https://api.github.com/users/pratikchhapolika/followers","following_url":"https://api.github.com/users/pratikchhapolika/following{/other_user}","gists_url":"https://api.github.com/users/pratikchhapolika/gists{/gist_id}","starred_url":"https://api.github.com/users/pratikchhapolika/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pratikchhapolika/subscriptions","organizations_url":"https://api.github.com/users/pratikchhapolika/orgs","repos_url":"https://api.github.com/users/pratikchhapolika/repos","events_url":"https://api.github.com/users/pratikchhapolika/events{/privacy}","received_events_url":"https://api.github.com/users/pratikchhapolika/received_events","type":"User","site_admin":false},"labels":[{"id":2673847808,"node_id":"MDU6TGFiZWwyNjczODQ3ODA4","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/pending%20user%20response","name":"pending user response","color":"2465AA","default":false,"description":""},{"id":2914513939,"node_id":"MDU6TGFiZWwyOTE0NTEzOTM5","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/new%20converter","name":"new converter","color":"873032","default":false,"description":""},{"id":4532706039,"node_id":"LA_kwDOCa0gS88AAAABDiua9w","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/done","name":"done","color":"309614","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[{"login":"xiaowuhu","id":19218188,"node_id":"MDQ6VXNlcjE5MjE4MTg4","avatar_url":"https://avatars.githubusercontent.com/u/19218188?v=4","gravatar_id":"","url":"https://api.github.com/users/xiaowuhu","html_url":"https://github.com/xiaowuhu","followers_url":"https://api.github.com/users/xiaowuhu/followers","following_url":"https://api.github.com/users/xiaowuhu/following{/other_user}","gists_url":"https://api.github.com/users/xiaowuhu/gists{/gist_id}","starred_url":"https://api.github.com/users/xiaowuhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiaowuhu/subscriptions","organizations_url":"https://api.github.com/users/xiaowuhu/orgs","repos_url":"https://api.github.com/users/xiaowuhu/repos","events_url":"https://api.github.com/users/xiaowuhu/events{/privacy}","received_events_url":"https://api.github.com/users/xiaowuhu/received_events","type":"User","site_admin":false}],"milestone":null,"comments":21,"created_at":"2022-07-28T13:09:33Z","updated_at":"2022-11-26T01:06:54Z","closed_at":"2022-11-26T01:06:54Z","author_association":"NONE","active_lock_reason":null,"body":"It is a multi-class classification model with sklearn. \r\n\r\nI am using `OneVsOneClassifier` model to train and predict `150 intents`. Its a multi-class classification problem.\r\n\r\n**Data:**\r\n\r\n    text          intents\r\n    \r\n    text1         int1\r\n    text2         int2\r\n\r\nI convert these intents in labels using:\r\n\r\n    le = LabelEncoder()\r\n    y_train = le.fit_transform(y_train)\r\n    y_test = le.fit_transform(y_test)\r\n\r\n **Expectation:**\r\n\r\nWithout changing the training pipeline or parameters, note the inference time. Currently, it's slow, ~1second for 1 inference. So to convert pipeline to `ONNX` format and then use for inferencing on 1 example.\r\n\r\n\r\n**Code:**\r\n\r\n\r\n    from sklearn.feature_extraction.text import TfidfVectorizer\r\n    from sklearn.compose import ColumnTransformer\r\n    from sklearn.multiclass import OneVsRestClassifier, OneVsOneClassifier\r\n    from sklearn.pipeline import Pipeline\r\n    from sklearn.svm import SVC,LinearSVC\r\n    \r\n    def create_pipe(clf):\r\n        \r\n        # Each pipeline uses the same column transformer.  \r\n        column_trans = ColumnTransformer(\r\n                [('Text', TfidfVectorizer(), 'text')\r\n                 ],\r\n                remainder='drop') \r\n        \r\n        pipeline = Pipeline([('prep',column_trans),                     \r\n                             ('clf', clf)])\r\n         \r\n        return pipeline\r\n    \r\n    def fit_and_print(pipeline):\r\n        \r\n        pipeline.fit(X_train, y_train)\r\n        y_pred = pipeline.predict(X_test)\r\n    \r\n        print(metrics.classification_report(y_test, y_pred, \r\n                                            target_names=le.classes_, \r\n                                            digits=3))\r\n    clf = OneVsOneClassifier(LinearSVC(random_state=42, class_weight='balanced'))\r\n    pipeline = create_pipe(clf)\r\n    %time fit_and_print(pipeline)\r\n    \r\n    # convert input to df\r\n    \r\n    def create_test_data(x):\r\n        d = {'text' : x}\r\n        df = pd.DataFrame(d, index=[0])\r\n        return df\r\n    \r\n    revs=[]\r\n    for idx in [948, 5717, 458]:\r\n         cur = test.loc[idx, 'text']\r\n         revs.append(cur)\r\n    print(revs) \r\n    \r\n    revs=sam['text'].values\r\n    \r\n    %%time\r\n    for rev in revs:\r\n        c_res = pipeline.predict(create_test_data(rev))\r\n        print(rev, '=', labels[c_res[0]])\r\n\r\n\r\n**ONNX conversion code**\r\n\r\n    from skl2onnx import convert_sklearn\r\n    from skl2onnx.common.data_types import FloatTensorType, StringTensorType\r\n    \r\n    initial_type = [('UTTERANCE', StringTensorType([None, 2]))]\r\n    model_onnx = convert_sklearn(pipeline, initial_types=initial_type)\r\n\r\n\r\n**Error**\r\n\r\n    MissingShapeCalculator: Unable to find a shape calculator for type '<class 'sklearn.multiclass.OneVsOneClassifier'>'.\r\n    It usually means the pipeline being converted contains a\r\n    transformer or a predictor with no corresponding converter\r\n    implemented in sklearn-onnx. If the converted is implemented\r\n    in another library, you need to register\r\n    the converted so that it can be used by sklearn-onnx (function\r\n    update_registered_converter). If the model is not yet covered\r\n    by sklearn-onnx, you may raise an issue to\r\n    https://github.com/onnx/sklearn-onnx/issues\r\n    to get the converter implemented or even contribute to the\r\n    project. If the model is a custom model, a new converter must\r\n    be implemented. Examples can be found in the gallery.\r\n\r\n**How to resolve this ? Also how to do prediction after converting to ONNX format?**","closed_by":{"login":"xiaowuhu","id":19218188,"node_id":"MDQ6VXNlcjE5MjE4MTg4","avatar_url":"https://avatars.githubusercontent.com/u/19218188?v=4","gravatar_id":"","url":"https://api.github.com/users/xiaowuhu","html_url":"https://github.com/xiaowuhu","followers_url":"https://api.github.com/users/xiaowuhu/followers","following_url":"https://api.github.com/users/xiaowuhu/following{/other_user}","gists_url":"https://api.github.com/users/xiaowuhu/gists{/gist_id}","starred_url":"https://api.github.com/users/xiaowuhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiaowuhu/subscriptions","organizations_url":"https://api.github.com/users/xiaowuhu/orgs","repos_url":"https://api.github.com/users/xiaowuhu/repos","events_url":"https://api.github.com/users/xiaowuhu/events{/privacy}","received_events_url":"https://api.github.com/users/xiaowuhu/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/895/timeline","performed_via_github_app":null,"state_reason":"completed"}