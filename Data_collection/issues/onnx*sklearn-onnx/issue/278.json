{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/278","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/278/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/278/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/278/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/278","id":501529019,"node_id":"MDU6SXNzdWU1MDE1MjkwMTk=","number":278,"title":"How can I pipe custom operations to a standard sklearn operations? ","user":{"login":"alexandreCameron","id":12397890,"node_id":"MDQ6VXNlcjEyMzk3ODkw","avatar_url":"https://avatars.githubusercontent.com/u/12397890?v=4","gravatar_id":"","url":"https://api.github.com/users/alexandreCameron","html_url":"https://github.com/alexandreCameron","followers_url":"https://api.github.com/users/alexandreCameron/followers","following_url":"https://api.github.com/users/alexandreCameron/following{/other_user}","gists_url":"https://api.github.com/users/alexandreCameron/gists{/gist_id}","starred_url":"https://api.github.com/users/alexandreCameron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexandreCameron/subscriptions","organizations_url":"https://api.github.com/users/alexandreCameron/orgs","repos_url":"https://api.github.com/users/alexandreCameron/repos","events_url":"https://api.github.com/users/alexandreCameron/events{/privacy}","received_events_url":"https://api.github.com/users/alexandreCameron/received_events","type":"User","site_admin":false},"labels":[{"id":2026627304,"node_id":"MDU6TGFiZWwyMDI2NjI3MzA0","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/Agility","name":"Agility","color":"109641","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-10-02T14:32:56Z","updated_at":"2021-06-03T09:50:25Z","closed_at":"2021-06-03T09:50:25Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI'm really impressed by the achievements of the package, especially by the easy conversion of sklearn pipelines to onnx. \r\n\r\nHowever, I'm requiring a little more flexibility in my project. I'll like to use a custom operation before applying an sklearn operation, for example: \r\n1. operation 1 : X_1 = log(X_0) : it could be `sklearn.preprocessing.FunctionTransformer(func=np.log, inverse_func=np.exp)` or `skl2onnx.algebra.onnx_ops.OnnxLog` \r\n2. operation 2 : X_2 = `sklearn.preprocessing.StandardScaler.fit_transform`(X_1) \r\n\r\nBut the `convert_sklearn` of `FunctionTransformer` is not implemented and I haven't been able to pipe properly `onnx_ops` to other transformations. \r\n\r\nWhat is the best way to create a skl2onnx graph with custom transformation? \r\n\r\nWill you implement `FunctionTransformer` in the near future? ","closed_by":{"login":"xadupre","id":22452781,"node_id":"MDQ6VXNlcjIyNDUyNzgx","avatar_url":"https://avatars.githubusercontent.com/u/22452781?v=4","gravatar_id":"","url":"https://api.github.com/users/xadupre","html_url":"https://github.com/xadupre","followers_url":"https://api.github.com/users/xadupre/followers","following_url":"https://api.github.com/users/xadupre/following{/other_user}","gists_url":"https://api.github.com/users/xadupre/gists{/gist_id}","starred_url":"https://api.github.com/users/xadupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xadupre/subscriptions","organizations_url":"https://api.github.com/users/xadupre/orgs","repos_url":"https://api.github.com/users/xadupre/repos","events_url":"https://api.github.com/users/xadupre/events{/privacy}","received_events_url":"https://api.github.com/users/xadupre/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/278/timeline","performed_via_github_app":null,"state_reason":"completed"}