{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/662","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/662/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/662/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/662/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/662","id":910614777,"node_id":"MDU6SXNzdWU5MTA2MTQ3Nzc=","number":662,"title":"SVMClassifier trained with GridSearchCV is not correctly converted","user":{"login":"biagiom","id":20740951,"node_id":"MDQ6VXNlcjIwNzQwOTUx","avatar_url":"https://avatars.githubusercontent.com/u/20740951?v=4","gravatar_id":"","url":"https://api.github.com/users/biagiom","html_url":"https://github.com/biagiom","followers_url":"https://api.github.com/users/biagiom/followers","following_url":"https://api.github.com/users/biagiom/following{/other_user}","gists_url":"https://api.github.com/users/biagiom/gists{/gist_id}","starred_url":"https://api.github.com/users/biagiom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/biagiom/subscriptions","organizations_url":"https://api.github.com/users/biagiom/orgs","repos_url":"https://api.github.com/users/biagiom/repos","events_url":"https://api.github.com/users/biagiom/events{/privacy}","received_events_url":"https://api.github.com/users/biagiom/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-03T15:34:42Z","updated_at":"2021-06-29T16:40:40Z","closed_at":"2021-06-29T16:40:40Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nI trained a SVMClassifier model with GridSearchCV and then converted it into a ONNX, but the resulting model is not valid (nodes of the models' graph are not topologically sorted).\r\nI guess it is an issue related to the conversion of GridSearchCV and so it would be probably independent from the type of classifier chosen.\r\nA possible workaround is to pass to `to_onnx()` method the best classifier found by GridSearchCV insead of the object returned by GridSearchCV.\r\n\r\nThe script added in the follow can be used to reproduce the issue and the workaround described above.\r\n\r\nBest regards,\r\nBiagio.\r\n```\r\nimport numpy as np\r\nimport onnx\r\nfrom sklearn import svm\r\nfrom sklearn.model_selection import GridSearchCV\r\nfrom sklearn import datasets\r\nfrom sklearn.model_selection import train_test_split\r\nfrom skl2onnx.helpers.onnx_helper import load_onnx_model\r\nfrom skl2onnx import to_onnx\r\n\r\nrand_seed = 0\r\nnp.random.seed(rand_seed)\r\n\r\ndef convert_to_onnx(sklearn_model, X, model_savename):\r\n    onnx_model_filename = model_savename + '.onnx'\r\n\r\n    onnx_model = to_onnx(sklearn_model, X[:1].astype(np.float32))\r\n\r\n    # Check the model\r\n    try:\r\n        onnx.checker.check_model(onnx_model)\r\n    except onnx.checker.ValidationError as e:\r\n        print('The model is NOT valid:\\n%s' % e)\r\n    else:\r\n        print('The model is valid!')\r\n\r\n        with open(onnx_model_filename, \"wb\") as f:\r\n            f.write(onnx_model.SerializeToString())\r\n\r\n\r\ndef load_train_test():\r\n    iris = datasets.load_iris()\r\n    X = iris.data\r\n    y = iris.target\r\n    X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, random_state=rand_seed)\r\n    return X_train, X_test, y_train, y_test\r\n\r\n\r\ndef train_svc_gs(X_train, y_train, apply_fix=False):\r\n    param_grid = {\r\n        'C': [0.1, 1, 1e1],\r\n        'gamma': [1e-3, 1e-2, 1e-1]\r\n    }\r\n\r\n    clf_est = svm.SVC(kernel='rbf', coef0=0.0, degree=3,\r\n                      decision_function_shape='ovr',\r\n                      probability=True)\r\n    \r\n    if apply_fix:\r\n        gs_clf = GridSearchCV(clf_est, param_grid)\r\n        gs_clf.fit(X_train, y_train)\r\n        clf = gs_clf.best_estimator_\r\n    else:\r\n        clf = GridSearchCV(clf_est, param_grid)\r\n        clf.fit(X_train, y_train)\r\n\r\n    return clf\r\n\r\ndef train_svc(X_train, y_train):\r\n    clf = svm.SVC(kernel='rbf', coef0=0.0, C=10,\r\n                  gamma=3e-2, degree=3,\r\n                  decision_function_shape='ovr',\r\n                  probability=True)\r\n    \r\n    clf.fit(X_train, y_train)\r\n\r\n    return clf\r\n\r\n\r\ndef run(test_gs=True, apply_fix=False):\r\n    # Load train and test dataset\r\n    X_train, X_test, y_train, y_test = load_train_test()\r\n\r\n    assert apply_fix in [True, False], \"Invalid value for apply_fix\"\r\n    assert test_gs in [True, False], \"Invalid value for test_gs\"\r\n\r\n    if test_gs:\r\n        clf = train_svc_gs(X_train, y_train, apply_fix)\r\n    else:\r\n        clf = train_svc(X_train, y_train)\r\n\r\n    if test_gs:\r\n        if apply_fix:\r\n            onnx_model_name = \"svc_gs_valid\"\r\n        else:\r\n            onnx_model_name = \"svc_gs_not_valid\"\r\n    else:\r\n        onnx_model_name = \"svc\"\r\n    \r\n    convert_to_onnx(clf, X_test, onnx_model_name)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    print(\"SVC model trained with GridSearchCV (without workaround):\")\r\n    run(test_gs=True, apply_fix=False)\r\n    print(\"\\nSVC model trained with GridSearchCV (with workaround):\")\r\n    run(test_gs=True, apply_fix=True)\r\n    print(\"\\nSVC model trained without GridSearchCV:\")\r\n    run(test_gs=False)\r\n```","closed_by":{"login":"xadupre","id":22452781,"node_id":"MDQ6VXNlcjIyNDUyNzgx","avatar_url":"https://avatars.githubusercontent.com/u/22452781?v=4","gravatar_id":"","url":"https://api.github.com/users/xadupre","html_url":"https://github.com/xadupre","followers_url":"https://api.github.com/users/xadupre/followers","following_url":"https://api.github.com/users/xadupre/following{/other_user}","gists_url":"https://api.github.com/users/xadupre/gists{/gist_id}","starred_url":"https://api.github.com/users/xadupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xadupre/subscriptions","organizations_url":"https://api.github.com/users/xadupre/orgs","repos_url":"https://api.github.com/users/xadupre/repos","events_url":"https://api.github.com/users/xadupre/events{/privacy}","received_events_url":"https://api.github.com/users/xadupre/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/662/timeline","performed_via_github_app":null,"state_reason":"completed"}