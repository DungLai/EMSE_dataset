{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/854","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/854/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/854/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/854/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/854","id":1213252125,"node_id":"I_kwDOCa0gS85IUMId","number":854,"title":"onnx_remove_node_identity causes graphs with supbgraphs to break","user":{"login":"JulZimmermann","id":9468878,"node_id":"MDQ6VXNlcjk0Njg4Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/9468878?v=4","gravatar_id":"","url":"https://api.github.com/users/JulZimmermann","html_url":"https://github.com/JulZimmermann","followers_url":"https://api.github.com/users/JulZimmermann/followers","following_url":"https://api.github.com/users/JulZimmermann/following{/other_user}","gists_url":"https://api.github.com/users/JulZimmermann/gists{/gist_id}","starred_url":"https://api.github.com/users/JulZimmermann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JulZimmermann/subscriptions","organizations_url":"https://api.github.com/users/JulZimmermann/orgs","repos_url":"https://api.github.com/users/JulZimmermann/repos","events_url":"https://api.github.com/users/JulZimmermann/events{/privacy}","received_events_url":"https://api.github.com/users/JulZimmermann/received_events","type":"User","site_admin":false},"labels":[{"id":1165979599,"node_id":"MDU6TGFiZWwxMTY1OTc5NTk5","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-04-23T09:17:25Z","updated_at":"2022-11-23T13:53:05Z","closed_at":"2022-11-23T13:53:04Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The ONNX Operators `Loop`, `Scan`, and `If` can add subgraphs to an ONNX graph. These subgraphs can access variables from the scope above, which is important, because `If` doesn't define the possibility to pass parameters to the subgraphs for the `then` and `else` branches.\r\n\r\nUnfortunately, the optimization function`onnx_remove_node_identity` doesn't seem to handle this case of referenced variables from the top scope, resulting in removals of `Identity` nodes in the top graph, but no renaming of the corresponding variable in the subgraph.\r\n\r\nI think this is especially bad because `onnx_remove_node_identity` is used by default when calling `convert_sklearn`. Only by setting `intermediate=False` the optimization isn't performed. This is also not documented. \r\n\r\nI run into this problem. because I use custom converters, which uses the `If` Operator.\r\n\r\n# Example as Python code\r\n```\r\ndef example(X):\r\n    one = 1\r\n    zero = 0\r\n\r\n    identity_one = one\r\n    identity_zero = zero\r\n\r\n    y = None\r\n    if X:\r\n        y = identity_one\r\n    else:\r\n        y = identity_zero\r\n\r\n    return y\r\n```\r\n\r\n# Example as Python code for ONNX graph creation\r\n```\r\nimport onnx\r\nfrom onnx import checker\r\nfrom onnx import helper\r\nfrom onnx import TensorProto as tp\r\n\r\nthen_branch = helper.make_graph(\r\n    [helper.make_node('Identity', inputs=[\"identity_one\"], outputs=[\"then_result\"])],\r\n    'then_branch',\r\n    [],\r\n    [helper.make_tensor_value_info('then_result', tp.INT64, [1])])\r\n\r\nelse_branch = helper.make_graph(\r\n    [helper.make_node('Identity', inputs=[\"identity_zero\"], outputs=[\"else_result\"])],\r\n    'else_branch',\r\n    [],\r\n    [helper.make_tensor_value_info('else_result', tp.INT64, [1])])\r\n\r\n\r\nnodes = [\r\n    helper.make_node('Constant', inputs=[], outputs=[\"one\"], value=helper.make_tensor(name='', data_type=tp.INT64, dims=[1], vals=[1])),\r\n    helper.make_node('Constant', inputs=[], outputs=[\"zero\"], value=helper.make_tensor(name='', data_type=tp.INT64, dims=[1], vals=[0])),\r\n\r\n    helper.make_node('Identity', inputs=[\"one\"], outputs=[\"identity_one\"]),\r\n    helper.make_node('Identity', inputs=[\"zero\"], outputs=[\"identity_zero\"]),\r\n\r\n    helper.make_node('If', inputs=[\"X\"], outputs=[\"y\"], then_branch=then_branch, else_branch=else_branch),\r\n]\r\n\r\ng = helper.make_graph(nodes, 'if_test',\r\n                       [helper.make_tensor_value_info('X', tp.BOOL, [1])],\r\n                       [helper.make_tensor_value_info('y', tp.INT64, [1])])\r\n\r\n# Create the model and check\r\nm = helper.make_model(g)\r\nchecker.check_model(m)\r\n\r\nonnx.save(m, 'if_test.onnx')\r\n```\r\n\r\nLoading this model with `onnxruntime` works just fine:\r\n```\r\nimport onnxruntime\r\n\r\nonnxruntime.InferenceSession(\"if_test.onnx\")\r\n```\r\n\r\nOptimising the model:\r\n```\r\nfrom skl2onnx.common.onnx_optimisation_identity import onnx_remove_node_identity\r\n\r\noptimized_model = onnx_remove_node_identity(onnx_model)\r\n```\r\n\r\nWill output with debug log level:\r\n```\r\nDEBUG:skl2onnx:[NodeId-a] remove input: \"one\"\r\noutput: \"identity_one\"\r\nop_type: \"Identity\"\r\n\r\nDEBUG:skl2onnx:[NodeId-a] remove input: \"zero\"\r\noutput: \"identity_zero\"\r\nop_type: \"Identity\"\r\n```\r\n\r\nBut the model is broken now:\r\n```\r\nwith open(\"optimized_if.onnx\", \"wb\") as f:\r\n    f.write(optimized_model.SerializeToString())\r\n\r\nonnxruntime.InferenceSession(\"optimized_if.onnx\")\r\n```\r\n\r\nthis will output:\r\n```\r\nInvalidGraph: [ONNXRuntimeError] : 10 : INVALID_GRAPH : Load model from optimized_if.onnx failed:This is an invalid model. In Node, (\"\", If, \"\", -1) : (\"X\": tensor(bool),) -> (\"y\": tensor(int64),) , Error Nodes in a graph must be topologically sorted, however input 'identity_zero' of node:  name:  OpType: Identity is not output of any previous nodes.\r\n```\r\n","closed_by":{"login":"xadupre","id":22452781,"node_id":"MDQ6VXNlcjIyNDUyNzgx","avatar_url":"https://avatars.githubusercontent.com/u/22452781?v=4","gravatar_id":"","url":"https://api.github.com/users/xadupre","html_url":"https://github.com/xadupre","followers_url":"https://api.github.com/users/xadupre/followers","following_url":"https://api.github.com/users/xadupre/following{/other_user}","gists_url":"https://api.github.com/users/xadupre/gists{/gist_id}","starred_url":"https://api.github.com/users/xadupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xadupre/subscriptions","organizations_url":"https://api.github.com/users/xadupre/orgs","repos_url":"https://api.github.com/users/xadupre/repos","events_url":"https://api.github.com/users/xadupre/events{/privacy}","received_events_url":"https://api.github.com/users/xadupre/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/854/timeline","performed_via_github_app":null,"state_reason":"completed"}