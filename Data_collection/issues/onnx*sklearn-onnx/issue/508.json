{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/508","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/508/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/508/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/508/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/508","id":652955433,"node_id":"MDU6SXNzdWU2NTI5NTU0MzM=","number":508,"title":"How to convert custom pipeline (categorical get_dummies) with convert_coreml?","user":{"login":"gitDawn","id":579582,"node_id":"MDQ6VXNlcjU3OTU4Mg==","avatar_url":"https://avatars.githubusercontent.com/u/579582?v=4","gravatar_id":"","url":"https://api.github.com/users/gitDawn","html_url":"https://github.com/gitDawn","followers_url":"https://api.github.com/users/gitDawn/followers","following_url":"https://api.github.com/users/gitDawn/following{/other_user}","gists_url":"https://api.github.com/users/gitDawn/gists{/gist_id}","starred_url":"https://api.github.com/users/gitDawn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gitDawn/subscriptions","organizations_url":"https://api.github.com/users/gitDawn/orgs","repos_url":"https://api.github.com/users/gitDawn/repos","events_url":"https://api.github.com/users/gitDawn/events{/privacy}","received_events_url":"https://api.github.com/users/gitDawn/received_events","type":"User","site_admin":false},"labels":[{"id":2673847808,"node_id":"MDU6TGFiZWwyNjczODQ3ODA4","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/pending%20user%20response","name":"pending user response","color":"2465AA","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-08T04:49:15Z","updated_at":"2021-08-26T09:50:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I'm trying to save a custom sklearn pipeline as onnx model, but I'm getting errors in the process.\r\n\r\nsample code:\r\n\r\n    from sklearn.preprocessing import OneHotEncoder\r\n    from sklearn.base import BaseEstimator, TransformerMixin\r\n    from sklearn.pipeline import Pipeline\r\n    \r\n    from sklearn import svm\r\n    from winmltools import convert_coreml\r\n    \r\n    import copy\r\n    from IPython.display import display\r\n    # https://github.com/pandas-dev/pandas/issues/8918\r\n    \r\n    class MyEncoder(TransformerMixin):\r\n    \r\n        def __init__(self, columns=None):\r\n            self.columns = columns\r\n    \r\n        def transform(self, X, y=None, **kwargs):\r\n            return pd.get_dummies(X, dtype=np.float, columns=['ID'])\r\n    \r\n        def fit(self, X, y=None, **kwargs):\r\n            return self\r\n    \r\n    # data\r\n    X = pd.DataFrame([[100, 1.1, 3.1], [200, 4.1, 5.1], [100, 4.1, 2.1]], columns=['ID', 'X1', 'X2'])\r\n    Y = pd.Series([3, 2, 4])\r\n    \r\n    # check transform\r\n    df = MyEncoder().transform(X)\r\n    display(df)\r\n    \r\n    # create pipeline\r\n    pipe = Pipeline( steps=[('categorical', MyEncoder()), ('classifier', svm.SVR())] )\r\n    print(type(pipe), MyEncoder().transform(X).dtypes, '\\n')\r\n    \r\n    # prepare models\r\n    svm_toy  = svm.SVR()\r\n    svm_toy.fit(X,Y)\r\n    pipe_toy = copy.deepcopy(pipe).fit(X, Y)\r\n    \r\n    # save onnx\r\n    \r\n    # no problem here\r\n    initial_type = [('X', FloatTensorType( [None, X.shape[1]] ) ) ] \r\n    onx = convert_sklearn(svm_toy, initial_types=initial_type  )\r\n    \r\n    # something goes wrong...\r\n    initial_type = [('X', FloatTensorType( [None, X.shape[1]] ) ) ] \r\n    onx = convert_sklearn(pipe_toy, initial_types=initial_type  )\r\n\r\nThe simple conversion goes well:\r\n\r\n    # no problem here\r\n    initial_type = [('X', FloatTensorType( [None, X.shape[1]] ) ) ] \r\n    onx = convert_sklearn(svm_toy, initial_types=initial_type  )\r\n\r\nBut the pipeline conversion fails:\r\n\r\n    # something goes wrong...\r\n    initial_type = [('X', FloatTensorType( [None, X.shape[1]] ) ) ] \r\n    onx = convert_sklearn(pipe_toy, initial_types=initial_type  )\r\n\r\nwith the following error:\r\n\r\n    MissingShapeCalculator: Unable to find a shape calculator for type ''.\r\n    It usually means the pipeline being converted contains a\r\n    transformer or a predictor with no corresponding converter\r\n    implemented in sklearn-onnx. If the converted is implemented\r\n    in another library, you need to register\r\n    the converted so that it can be used by sklearn-onnx (function\r\n    update_registered_converter). If the model is not yet covered\r\n    by sklearn-onnx, you may raise an issue to\r\n    https://github.com/onnx/sklearn-onnx/issues\r\n    to get the converter implemented or even contribute to the\r\n    project. If the model is a custom model, a new converter must\r\n    be implemented. Examples can be found in the gallery.\r\n\r\nAm I missing something with the customized pipeline and the `get_dummies`?\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/508/timeline","performed_via_github_app":null,"state_reason":null}