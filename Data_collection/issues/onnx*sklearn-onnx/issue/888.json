{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/888","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/888/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/888/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/888/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/888","id":1309794084,"node_id":"I_kwDOCa0gS85OEd8k","number":888,"title":"Is PolynomialFeatures actually supported?","user":{"login":"fmathx","id":107659868,"node_id":"U_kgDOBmrCXA","avatar_url":"https://avatars.githubusercontent.com/u/107659868?v=4","gravatar_id":"","url":"https://api.github.com/users/fmathx","html_url":"https://github.com/fmathx","followers_url":"https://api.github.com/users/fmathx/followers","following_url":"https://api.github.com/users/fmathx/following{/other_user}","gists_url":"https://api.github.com/users/fmathx/gists{/gist_id}","starred_url":"https://api.github.com/users/fmathx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmathx/subscriptions","organizations_url":"https://api.github.com/users/fmathx/orgs","repos_url":"https://api.github.com/users/fmathx/repos","events_url":"https://api.github.com/users/fmathx/events{/privacy}","received_events_url":"https://api.github.com/users/fmathx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-19T16:46:16Z","updated_at":"2022-07-20T18:18:39Z","closed_at":"2022-07-20T18:18:39Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nI have been using skl2onnx for some time now but I think I must be doing something wrong. Very often I run into problems with either the skl2onnx conversion OR the resulting ONNX file being unreadable with onnxruntime, despite the fact that my model contains only operators that are listed as supported here:\r\nhttps://onnx.ai/sklearn-onnx/supported.html\r\n\r\nIn the present case, my problem is with PolynomialFeatures. Here's the code that defines my pipeline (please forget about whether getting polynomialfeatures after PCA is meaningful, I'm experimenting here):\r\n\r\n\r\n```\r\ndef define_preprocessing_pipeline(X):\r\n    \"\"\"\r\n    Return a pipeline containing the most basic preprocessing steps:\r\n        - standard scaling / PCA of numerical features\r\n        - one-hot encoding of categorical features\r\n    \"\"\"\r\n    X_columns = list(X.columns)\r\n    scalable_columns = columns.get_scalable_columns(X_columns)\r\n    categorical_columns = columns.get_columns_by_data_type(X_columns, columns.DataType.categorical)\r\n\r\n    scaling_transformer = Pipeline(\r\n        steps=[\r\n            (\"scaler\", StandardScaler()),\r\n            (\"pca\", PCA(n_components=len(scalable_columns))),\r\n            (\"polynomial\", PolynomialFeatures(include_bias=False))\r\n        ]\r\n    )\r\n\r\n    category_transformer = Pipeline(\r\n        steps=[(\"onehot\", OneHotEncoder(handle_unknown=\"ignore\", sparse=False))]\r\n    )\r\n\r\n    preprocessor = ColumnTransformer(\r\n        transformers=[\r\n            (\"scalable\", scaling_transformer, scalable_columns),\r\n            (\"categories\", category_transformer, categorical_columns)\r\n        ],\r\n        remainder=\"passthrough\"\r\n    )\r\n\r\n    return preprocessor\r\n\r\n\r\npreprocess_pipeline = define_preprocessing_pipeline(X_train)\r\n\r\nfinal_pipeline = Pipeline(\r\n    steps=[\r\n        (\"preprocessing\", preprocess_pipeline),\r\n        (\"classifier\", RandomForestClassifier(max_depth=25))\r\n    ]\r\n)\r\n\r\nfinal_pipeline.fit(X_train, y_train)\r\n```\r\n\r\n\r\nThis trains and predicts appropriately enough. It converts to ONNX without error too. The resulting ONNX is readable via Netron without warnings.\r\n\r\nI use skl2onnx version 1.11.2 (after updating it. previously I was using 1.10.1 with the same result).\r\nonnxruntime is 1.11.1\r\ntarget opset is 12\r\n\r\nIf I set include_bias to False, I get this error when loading:\r\nNotImplemented: [ONNXRuntimeError] : 9 : NOT_IMPLEMENTED : Could not find an implementation for ReduceProd(11) node with name 'ReduceProd'\r\n\r\nHere is the netron graph:\r\n\r\n![netron_graph](https://user-images.githubusercontent.com/107659868/179815878-05f94925-5ce8-42b7-b563-8091ace3ec64.PNG)\r\n\r\nIf I set include_bias to True, I get another error about different data types being fed to the concat operator that follows (which, after visualizing the resulting graph with Netron, shows that a separate node is created at the same level as all other polynomial features but which seems to be a shape attribute of some sort).\r\n\r\nThe first error (when include_bias is False) is what really bothers me. Anyone has any idea what the problem might be (and/or how to solve it)?\r\n","closed_by":{"login":"fmathx","id":107659868,"node_id":"U_kgDOBmrCXA","avatar_url":"https://avatars.githubusercontent.com/u/107659868?v=4","gravatar_id":"","url":"https://api.github.com/users/fmathx","html_url":"https://github.com/fmathx","followers_url":"https://api.github.com/users/fmathx/followers","following_url":"https://api.github.com/users/fmathx/following{/other_user}","gists_url":"https://api.github.com/users/fmathx/gists{/gist_id}","starred_url":"https://api.github.com/users/fmathx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmathx/subscriptions","organizations_url":"https://api.github.com/users/fmathx/orgs","repos_url":"https://api.github.com/users/fmathx/repos","events_url":"https://api.github.com/users/fmathx/events{/privacy}","received_events_url":"https://api.github.com/users/fmathx/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/888/timeline","performed_via_github_app":null,"state_reason":"completed"}