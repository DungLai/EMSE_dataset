{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/339","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/339/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/339/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/339/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/339","id":534782227,"node_id":"MDU6SXNzdWU1MzQ3ODIyMjc=","number":339,"title":"OneVsRestClassifier issues","user":{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false},"labels":[{"id":1165979599,"node_id":"MDU6TGFiZWwxMTY1OTc5NTk5","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false},"assignees":[{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2019-12-09T08:57:40Z","updated_at":"2019-12-10T08:05:09Z","closed_at":"2019-12-10T08:05:09Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"1) Error with binary classification\r\n```\r\nimport numpy as np\r\nfrom sklearn.datasets import make_classification\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.linear_model import LogisticRegression\r\nfrom sklearn.multiclass import OneVsRestClassifier\r\nfrom onnxmltools import save_model\r\nfrom onnxruntime import InferenceSession\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\nfrom skl2onnx.convert import convert_sklearn\r\n\r\nX, y = make_classification(n_classes=2, n_samples=100, random_state=42, n_features=100, n_informative=7)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = OneVsRestClassifier(estimator=LogisticRegression()).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([None, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr1.onnx')\r\nsess = InferenceSession('lr1.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nprint(np.mean(np.isclose(model.predict_proba(X_test),\r\n                         list(map(lambda x: list(map(lambda y: x[y], x)), res[1])), atol=1e-5)))\r\nprint(np.mean(model.predict(X_test) == res[0]))\r\n```\r\n\r\nInvalidArgument                           Traceback (most recent call last)\r\n<ipython-input-42-d5433f9eb125> in <module>\r\n     17 save_model(onnx_model, 'lr1.onnx')\r\n     18 sess = InferenceSession('lr1.onnx')\r\n---> 19 res = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n     20 \r\n     21 print(np.mean(np.isclose(model.predict_proba(X_test),\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in run(self, output_names, input_feed, run_options)\r\n    134             output_names = [output.name for output in self._outputs_meta]\r\n    135         try:\r\n--> 136             return self._sess.run(output_names, input_feed, run_options)\r\n    137         except C.EPFail as err:\r\n    138             if self._enable_fallback:\r\n\r\nInvalidArgument: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Non-zero status code returned while running ZipMap node. Name:'ZipMap' Status Message: Input features_per_batch[1] != number of classlabels[2]\r\n\r\n\r\n2) Error with MLPRegressor, GradientBoostingRegressor, etc.\r\n\r\n```\r\nimport numpy as np\r\nfrom sklearn.datasets import make_classification\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.neural_network import MLPRegressor\r\nfrom sklearn.multiclass import OneVsRestClassifier\r\nfrom onnxmltools import save_model\r\nfrom onnxruntime import InferenceSession\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\nfrom skl2onnx.convert import convert_sklearn\r\n\r\nX, y = make_classification(n_classes=2, n_samples=100, random_state=42, n_features=100, n_informative=7)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = OneVsRestClassifier(estimator=MLPRegressor()).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([None, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr1.onnx')\r\nsess = InferenceSession('lr1.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nprint(np.mean(np.isclose(model.predict_proba(X_test),\r\n                         list(map(lambda x: list(map(lambda y: x[y], x)), res[1])), atol=1e-5)))\r\nprint(np.mean(model.predict(X_test) == res[0]))\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-47-6547d8cf2f71> in <module>\r\n     14 model = OneVsRestClassifier(estimator=MLPRegressor()).fit(X_train, y_train)\r\n     15 \r\n---> 16 onnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([None, X_test.shape[1]]))])\r\n     17 save_model(onnx_model, 'lr1.onnx')\r\n     18 sess = InferenceSession('lr1.onnx')\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/skl2onnx-1.6.0-py3.6.egg/skl2onnx/convert.py in convert_sklearn(model, name, initial_types, doc_string, target_opset, custom_conversion_functions, custom_shape_calculators, custom_parsers, options, dtype, intermediate)\r\n    136     # Convert our Topology object into ONNX. The outcome is an ONNX model.\r\n    137     onnx_model = convert_topology(topology, name, doc_string, target_opset,\r\n--> 138                                   dtype=dtype, options=options)\r\n    139 \r\n    140     return (onnx_model, topology) if intermediate else onnx_model\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/skl2onnx-1.6.0-py3.6.egg/skl2onnx/common/_topology.py in convert_topology(topology, model_name, doc_string, target_opset, channel_first_inputs, dtype, options)\r\n    963                     \"\".format(operator.type,\r\n    964                               type(getattr(operator, 'raw_model', None))))\r\n--> 965         conv(scope, operator, container)\r\n    966 \r\n    967     # Create a graph from its main components\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/skl2onnx-1.6.0-py3.6.egg/skl2onnx/operator_converters/one_vs_rest_classifier.py in convert_one_vs_rest_classifier(scope, operator, container)\r\n     37             this_operator.outputs.append(score_name)\r\n     38 \r\n---> 39             if len(estimator.coef_.shape) == 2:\r\n     40                 raise RuntimeError(\"OneVsRestClassifier accepts \"\r\n     41                                    \"regressor with only one target.\")\r\n\r\nAttributeError: 'MLPRegressor' object has no attribute 'coef_'\r\n\r\n","closed_by":{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/339/timeline","performed_via_github_app":null,"state_reason":"completed"}