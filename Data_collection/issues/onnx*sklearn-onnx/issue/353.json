{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/353","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/353/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/353/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/353/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/353","id":543957573,"node_id":"MDU6SXNzdWU1NDM5NTc1NzM=","number":353,"title":"Multi-label classification issues","user":{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false},"labels":[{"id":1165979599,"node_id":"MDU6TGFiZWwxMTY1OTc5NTk5","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false},"assignees":[{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2019-12-30T17:42:58Z","updated_at":"2020-01-07T19:17:55Z","closed_at":"2020-01-07T19:17:55Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"1) MLPClassifier:\r\nFail                                      Traceback (most recent call last)\r\n<ipython-input-3-8f31611a7150> in <module>\r\n      7 model_onnx = convert_sklearn(model, 'mlp', [('input', FloatTensorType([None, X_test.shape[1]]))], options=options)\r\n      8 save_model(model_onnx, 'mlp.onnx')\r\n----> 9 sess = InferenceSession('mlp.onnx')\r\n     10 res = sess.run(None, input_feed={'input': X_test})\r\n     11 #print(np.mean(np.isclose(model.predict_proba(X_test), list(map(lambda x:\r\n\r\n~/Documents/MachineLearning/onnx_projects/skl_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options, providers)\r\n     23         self._path_or_bytes = path_or_bytes\r\n     24         self._sess_options = sess_options\r\n---> 25         self._load_model(providers)\r\n     26         self._enable_fallback = True\r\n     27 \r\n\r\n~/Documents/MachineLearning/onnx_projects/skl_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in _load_model(self, providers)\r\n     41             raise TypeError(\"Unable to load from type '{0}'\".format(type(self._path_or_bytes)))\r\n     42 \r\n---> 43         self._sess.load_model(providers)\r\n     44 \r\n     45         self._session_options = self._sess.session_options\r\n\r\nFail: [ONNXRuntimeError] : 1 : FAIL : Type Error: Type (tensor(int64)) of output arg (label) of node (N8) does not match expected type (tensor(float)).\r\n2) RandomForestClassifier\r\n```\r\nX, y = make_multilabel_classification(n_labels=1, n_classes=5, random_state=9, n_samples=4)\r\nX = X.astype(np.float32)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = RandomForestClassifier().fit(X_train, y_train)\r\noptions = {id(model): {'zipmap': False}}\r\nmodel_onnx = convert_sklearn(model, 'mlp', [('input', FloatTensorType([None, X_test.shape[1]]))], options=options)\r\nsave_model(model_onnx, 'mlp.onnx')\r\nsess = InferenceSession('mlp.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\nprint(np.mean(res[0] == model.predict(X_test)))\r\n```\r\nInvalidArgument                           Traceback (most recent call last)\r\n<ipython-input-61-6e0708955095> in <module>\r\n      8 save_model(model_onnx, 'mlp.onnx')\r\n      9 sess = InferenceSession('mlp.onnx')\r\n---> 10 res = sess.run(None, input_feed={'input': X_test})\r\n     11 #print(np.mean(np.isclose(model.predict_proba(X_test), list(map(lambda x:\r\n     12 #                                                      list(map(lambda y: x[y], x)), res[1])), atol=1e-3)))\r\n\r\n~/Documents/MachineLearning/onnx_projects/skl_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in run(self, output_names, input_feed, run_options)\r\n    140             output_names = [output.name for output in self._outputs_meta]\r\n    141         try:\r\n--> 142             return self._sess.run(output_names, input_feed, run_options)\r\n    143         except C.EPFail as err:\r\n    144             if self._enable_fallback:\r\n\r\nInvalidArgument: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Non-zero status code returned while running ArrayFeatureExtractor node. Name:'ArrayFeatureExtractor9' Status Message: Invalid Y argument: index is out of range: Y[0] (1) >=1\r\n","closed_by":{"login":"prabhat00155","id":7043157,"node_id":"MDQ6VXNlcjcwNDMxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7043157?v=4","gravatar_id":"","url":"https://api.github.com/users/prabhat00155","html_url":"https://github.com/prabhat00155","followers_url":"https://api.github.com/users/prabhat00155/followers","following_url":"https://api.github.com/users/prabhat00155/following{/other_user}","gists_url":"https://api.github.com/users/prabhat00155/gists{/gist_id}","starred_url":"https://api.github.com/users/prabhat00155/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prabhat00155/subscriptions","organizations_url":"https://api.github.com/users/prabhat00155/orgs","repos_url":"https://api.github.com/users/prabhat00155/repos","events_url":"https://api.github.com/users/prabhat00155/events{/privacy}","received_events_url":"https://api.github.com/users/prabhat00155/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/353/timeline","performed_via_github_app":null,"state_reason":"completed"}