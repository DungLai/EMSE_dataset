{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/506","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/506/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/506/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/506/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/506","id":651556203,"node_id":"MDU6SXNzdWU2NTE1NTYyMDM=","number":506,"title":"Difference in prediction output of a scikit-learn model and ONNX model for the same data.","user":{"login":"Karnav123","id":36244620,"node_id":"MDQ6VXNlcjM2MjQ0NjIw","avatar_url":"https://avatars.githubusercontent.com/u/36244620?v=4","gravatar_id":"","url":"https://api.github.com/users/Karnav123","html_url":"https://github.com/Karnav123","followers_url":"https://api.github.com/users/Karnav123/followers","following_url":"https://api.github.com/users/Karnav123/following{/other_user}","gists_url":"https://api.github.com/users/Karnav123/gists{/gist_id}","starred_url":"https://api.github.com/users/Karnav123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Karnav123/subscriptions","organizations_url":"https://api.github.com/users/Karnav123/orgs","repos_url":"https://api.github.com/users/Karnav123/repos","events_url":"https://api.github.com/users/Karnav123/events{/privacy}","received_events_url":"https://api.github.com/users/Karnav123/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2020-07-06T13:50:21Z","updated_at":"2021-02-18T16:50:43Z","closed_at":"2021-02-18T16:50:43Z","author_association":"NONE","active_lock_reason":null,"body":"See the difference in output in following image.\r\n![onnxVSpkl](https://user-images.githubusercontent.com/36244620/86598792-47a4e580-bfbb-11ea-8da5-1173bca6923a.PNG)\r\nThe dataset is for binary classification. The code to generate the model is:\r\n```\r\ncategorical_pipeline_onehot = Pipeline([\r\n             ('OneHot', OneHotEncoder( handle_unknown='ignore'))\r\n        ])\r\npreprocessor = ColumnTransformer(\r\n    transformers=[('Onehot', categorical_pipeline_onehot, CATEGORICAL_ATTRIBUTES_ONEHOT)],\r\n    remainder='passthrough')\r\nfrom xgboost import XGBClassifier\r\nxgb = XGBClassifier()\r\n\r\nclf = Pipeline(steps=[('preprocessor', preprocessor),('cls', xgb)])\r\nclf.fit(df_train[predictors], df_train[\"IsSelected\"])\r\n\r\nupdate_registered_converter(\r\n    XGBClassifier, 'XGBoostXGBClassifier',\r\n    calculate_linear_classifier_output_shapes, convert_xgboost,\r\n    options={'nocl': [True, False], 'zipmap': [True, False]})\r\n```\r\n\r\nTo convert this model to ONNX the code is:\r\n\r\n```\r\ndef convert_dataframe_schema(df, drop=None):\r\n    inputs = []\r\n    for k, v in zip(df.columns, df.dtypes):\r\n        if drop is not None and k in drop:\r\n            continue\r\n        if v == 'int64':\r\n            t = Int64TensorType([None, 1])\r\n        elif v == 'float64':\r\n            t = FloatTensorType([None, 1])\r\n        else:\r\n            t = StringTensorType([None, 1])\r\n        inputs.append((k, t))\r\n    return inputs\r\n\r\ntry:\r\n    model_onnx_wholed = convert_sklearn(model, 'pipeline_with_onehot', inputs)\r\nexcept Exception as e:\r\n    print(e)\r\n\r\nwith open(\"XGB_onehot_wholedata.onnx\", \"wb\") as f:\r\n    f.write(model_onnx_wholed.SerializeToString())\r\n```\r\nWhile prediction I am using C++ APIs as well as Python for onnxruntime. The prediction output generated by the onnx model is all 0 for both C++ and Python which do not match with that of the trained sklearn model.\r\n\r\nThe ONNX model adds Cast operator for features. It may be due to this but I am not sure.\r\n\r\nThe C++ onnxruntime API log is as following:\r\n\r\n```\r\n2020-07-06 18:50:47.2890620 [W:onnxruntime:test, abi_session_options.cc:147 OrtApis::SetIntraOpNumThreads] Since openmp is enabled in this build, this API cannot be used to configure intra op num threads. Please use the openmp environment variables to control the number of threads.\r\nUsing Onnxruntime C++ API\r\n2020-07-06 18:50:55.2296864 [I:onnxruntime:, inference_session.cc:174 onnxruntime::InferenceSession::ConstructorCommon] Creating and using per session threadpools since use_per_session_threads_ is true\r\n2020-07-06 18:50:55.4219403 [I:onnxruntime:, inference_session.cc:830 onnxruntime::InferenceSession::Initialize] Initializing session.\r\n2020-07-06 18:50:55.4220585 [I:onnxruntime:, inference_session.cc:848 onnxruntime::InferenceSession::Initialize] Adding default CPU execution provider.\r\n2020-07-06 18:50:55.4224222 [I:onnxruntime:test, bfc_arena.cc:15 onnxruntime::BFCArena::BFCArena] Creating BFCArena for Cpu\r\n2020-07-06 18:50:55.4224870 [V:onnxruntime:test, bfc_arena.cc:32 onnxruntime::BFCArena::BFCArena] Creating 21 bins of max chunk size 256 to 268435456\r\n2020-07-06 18:50:55.4247204 [V:onnxruntime:, inference_session.cc:671 onnxruntime::InferenceSession::TransformGraph] Node placements\r\n2020-07-06 18:50:55.4248273 [V:onnxruntime:, inference_session.cc:673 onnxruntime::InferenceSession::TransformGraph] All nodes have been placed on [CPUExecutionProvider].\r\n2020-07-06 18:50:55.4249199 [I:onnxruntime:, session_state.cc:25 onnxruntime::SessionState::SetGraph] SaveMLValueNameIndexMapping\r\n2020-07-06 18:50:55.4250567 [I:onnxruntime:, session_state.cc:70 onnxruntime::SessionState::SetGraph] Done saving OrtValue mappings.\r\n2020-07-06 18:50:55.4266916 [I:onnxruntime:, session_state_initializer.cc:178 onnxruntime::SaveInitializedTensors] Saving initialized tensors.\r\n2020-07-06 18:50:55.4268214 [I:onnxruntime:, session_state_initializer.cc:223 onnxruntime::SaveInitializedTensors] Done saving initialized tensors\r\n2020-07-06 18:50:55.7311821 [I:onnxruntime:, inference_session.cc:919 onnxruntime::InferenceSession::Initialize] Session successfully initialized.\r\nNumber of inputs = 22\r\nNumber of outputs = 2\r\nOutput 0 : name=label\r\nOutput 1 : name=probabilities\r\n\r\n2020-07-06 18:51:18.7355209 [I:onnxruntime:, sequential_executor.cc:145 onnxruntime::SequentialExecutor::Execute] Begin execution\r\n2020-07-06 18:51:27.4858870 [I:onnxruntime:test, bfc_arena.cc:259 onnxruntime::BFCArena::AllocateRawInternal] Extending BFCArena for Cpu. bin_num:0 rounded_bytes:256\r\n2020-07-06 18:51:27.4867688 [I:onnxruntime:test, bfc_arena.cc:143 onnxruntime::BFCArena::Extend] Extended allocation by 1048576 bytes.\r\n2020-07-06 18:51:27.4871985 [I:onnxruntime:test, bfc_arena.cc:147 onnxruntime::BFCArena::Extend] Total allocated bytes: 1048832\r\n2020-07-06 18:51:27.4872666 [I:onnxruntime:test, bfc_arena.cc:150 onnxruntime::BFCArena::Extend] Allocated memory at 000001D54AC25060 to 000001D54AD25060\r\nPredicted Class:\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n```\r\n```\r\nVersions: \r\nskl2onnx: 1.7.0\r\nonnxruntime: 1.3.0\r\n```\r\n\r\n","closed_by":{"login":"xadupre","id":22452781,"node_id":"MDQ6VXNlcjIyNDUyNzgx","avatar_url":"https://avatars.githubusercontent.com/u/22452781?v=4","gravatar_id":"","url":"https://api.github.com/users/xadupre","html_url":"https://github.com/xadupre","followers_url":"https://api.github.com/users/xadupre/followers","following_url":"https://api.github.com/users/xadupre/following{/other_user}","gists_url":"https://api.github.com/users/xadupre/gists{/gist_id}","starred_url":"https://api.github.com/users/xadupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xadupre/subscriptions","organizations_url":"https://api.github.com/users/xadupre/orgs","repos_url":"https://api.github.com/users/xadupre/repos","events_url":"https://api.github.com/users/xadupre/events{/privacy}","received_events_url":"https://api.github.com/users/xadupre/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/506/timeline","performed_via_github_app":null,"state_reason":"completed"}