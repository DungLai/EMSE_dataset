{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/627","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/627/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/627/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/627/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/627","id":821271752,"node_id":"MDU6SXNzdWU4MjEyNzE3NTI=","number":627,"title":"How to handle a pipeline for a hierarchical setup?","user":{"login":"ManuelMartinG","id":39061366,"node_id":"MDQ6VXNlcjM5MDYxMzY2","avatar_url":"https://avatars.githubusercontent.com/u/39061366?v=4","gravatar_id":"","url":"https://api.github.com/users/ManuelMartinG","html_url":"https://github.com/ManuelMartinG","followers_url":"https://api.github.com/users/ManuelMartinG/followers","following_url":"https://api.github.com/users/ManuelMartinG/following{/other_user}","gists_url":"https://api.github.com/users/ManuelMartinG/gists{/gist_id}","starred_url":"https://api.github.com/users/ManuelMartinG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ManuelMartinG/subscriptions","organizations_url":"https://api.github.com/users/ManuelMartinG/orgs","repos_url":"https://api.github.com/users/ManuelMartinG/repos","events_url":"https://api.github.com/users/ManuelMartinG/events{/privacy}","received_events_url":"https://api.github.com/users/ManuelMartinG/received_events","type":"User","site_admin":false},"labels":[{"id":2673847808,"node_id":"MDU6TGFiZWwyNjczODQ3ODA4","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/pending%20user%20response","name":"pending user response","color":"2465AA","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-03-03T16:29:23Z","updated_at":"2022-11-24T13:12:15Z","closed_at":"2022-11-24T13:12:15Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI'me currently dealing with the following problem. I have a hierarchy of labels in the form:\r\n```python\r\nlabels = {\r\n\"parent1\": \r\n{\"child1\", \"child2\"}, \r\n\"parent2\": {\"child1\", \"child2\", \"child3\"}\r\n}\r\n```\r\n\r\nMy pipeline consists on a first parents classifier model and then I have a classifier for each parent's child labels. I will put it as simple as I can:\r\n```python\r\nclass ParentLabelsModel(BaseEstimator, TransformerMixin):\r\n    def __init__(self, base_estimator):\r\n        TransformerMixin.__init__(self)\r\n        BaseEstimator.__init__(self)\r\n        self.base_estimator = base_estimator()\r\n\r\n    def fit(self, X, y, *args):\r\n        self.base_estimator.fit(X, y)\r\n\r\n    def fit_transform(self, X, y, *args):\r\n        self.base_estimator.fit(X, y)\r\n        return X\r\n\r\n    def transform(self, X, *args):\r\n        y = self.base_estimator.predict(X)\r\n        return X, y\r\n\r\n\r\nclass ChildLabelsModel(BaseEstimator, ClassifierMixin):\r\n    def __init__(self, base_estimator, unique_parent_labels):\r\n        BaseEstimator.__init__(self)\r\n        self.unique_parent_labels = unique_parent_labels\r\n        self.child_estimators = {p: base_estimator()\r\n                                 for p in unique_parent_labels}\r\n\r\n    def fit(self, X, y, y_, *args):\r\n        X = X.toarray()\r\n        for p in self.unique_parent_labels:\r\n            child_indices = np.argwhere(np.array(y) == p).flatten()\r\n            x_ = X[child_indices, :]\r\n            y__ = y_[child_indices]\r\n            self.child_estimators[p].fit(x_, y__)\r\n        return self\r\n\r\n    def predict(self, X, *args):\r\n        parent_y = X[1][0]\r\n        X = X[0].toarray()\r\n        return (np.array([parent_y]),\r\n                np.array([self.child_estimators[parent_y].predict(X)]))\r\n\r\n\r\npipeline = Pipeline([\r\n    (\"tfidf1\", TfidfVectorizer()),\r\n    (\"plm\", ParentLabelsModel(base_estimator=SGDClassifier)),\r\n    (\"clm\", ChildLabelsModel(\r\n        base_estimator=SGDClassifier,\r\n        unique_parent_labels=np.unique(ytrain))\r\n    )\r\n])\r\n```\r\n\r\nAs you can see, the first `ParentsLabelsModel` is a transformer, so that I can pass the predicted parent labels to select the specific `child_estimator` (there is one classifier per parent label).\r\n\r\nI've been trying to convert both `ParentLabelsModel` and `ChildLabelsModel` but quite unsuccessfully. Before pasting the code i've written for the `update_registered_converter` functions, I would like to check if you have any opinion or guidelines to approach this conversion.\r\n\r\nThanks!\r\n\r\n","closed_by":{"login":"xadupre","id":22452781,"node_id":"MDQ6VXNlcjIyNDUyNzgx","avatar_url":"https://avatars.githubusercontent.com/u/22452781?v=4","gravatar_id":"","url":"https://api.github.com/users/xadupre","html_url":"https://github.com/xadupre","followers_url":"https://api.github.com/users/xadupre/followers","following_url":"https://api.github.com/users/xadupre/following{/other_user}","gists_url":"https://api.github.com/users/xadupre/gists{/gist_id}","starred_url":"https://api.github.com/users/xadupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xadupre/subscriptions","organizations_url":"https://api.github.com/users/xadupre/orgs","repos_url":"https://api.github.com/users/xadupre/repos","events_url":"https://api.github.com/users/xadupre/events{/privacy}","received_events_url":"https://api.github.com/users/xadupre/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/627/timeline","performed_via_github_app":null,"state_reason":"completed"}