{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/113","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/113/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/113/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/113/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/113","id":438215994,"node_id":"MDU6SXNzdWU0MzgyMTU5OTQ=","number":113,"title":"Multi label classifier (OneVsRestClassifier) normalization","user":{"login":"bambi2511","id":31990506,"node_id":"MDQ6VXNlcjMxOTkwNTA2","avatar_url":"https://avatars.githubusercontent.com/u/31990506?v=4","gravatar_id":"","url":"https://api.github.com/users/bambi2511","html_url":"https://github.com/bambi2511","followers_url":"https://api.github.com/users/bambi2511/followers","following_url":"https://api.github.com/users/bambi2511/following{/other_user}","gists_url":"https://api.github.com/users/bambi2511/gists{/gist_id}","starred_url":"https://api.github.com/users/bambi2511/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bambi2511/subscriptions","organizations_url":"https://api.github.com/users/bambi2511/orgs","repos_url":"https://api.github.com/users/bambi2511/repos","events_url":"https://api.github.com/users/bambi2511/events{/privacy}","received_events_url":"https://api.github.com/users/bambi2511/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-04-29T09:05:48Z","updated_at":"2019-05-24T08:52:34Z","closed_at":"2019-05-22T14:40:03Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI am working on a multilabel pipeline (not multiclass): classifier may have multiple outputs.\r\n\r\n## sklearn pipeline\r\n\r\nI use OneVsRestClassifier on a LogisticRegression as a last step on a sklearn pipeline to get a multi-label classifier (not multiclass: my classifier may predict 0 classes, 1 class or several classes)\r\n\r\nWhen I use predict_proba on my pipeline, I am able to get probabilities for each class, each probability of a class is independant from the one of another class.\r\n\r\n```python\r\npipeline3 = Pipeline(steps=[('tfidf', TfidfVectorizer(input='content', analyzer='word',\r\n                                                     min_df=5, max_df=0.5, ngram_range=(1, 1), lowercase=True)),\r\n                           ('best', TruncatedSVD(n_components=50)),\r\n                           ('lr', OneVsRestClassifier(LogisticRegression(penalty='l1',\r\n                                                      solver='liblinear',\r\n                                                      class_weight='balanced',\r\n                                                      fit_intercept=True)))])\r\npipeline3.fit(X_train_preprocessed, y_train)\r\npipeline3.predict_proba(X_train_preprocessed.reshape(-1, 1)[0])\r\n```\r\noutputs array([[0.6818949 , 0.38450937, 0.39627797]]) \r\n\r\n- Class 0 is selected (>.5)\r\n- Class 1 and 2 are not selected (< .5)\r\n\r\n## Conversion to onnx\r\n\r\nWhen I convert this pipeline with onnx, (convert_sklearn), these probabilities are normalized to sum to one (one vs rest classifier)\r\n\r\n```python\r\nfrom skl2onnx import convert_sklearn\r\nfrom skl2onnx.common.data_types import StringTensorType\r\n\r\nseps = {TfidfVectorizer: {\"sep\": [' ']}}\r\nmodel3_onnx = convert_sklearn(pipeline3, name=\"tfidf\",\r\n                              initial_types=[(\"input\", StringTensorType([1, 1]))],\r\n                              options=seps)\r\n\r\nwith open(\"pipeline3_tfidf.onnx\", \"wb\") as f:\r\n    f.write(model3_onnx.SerializeToString())\r\n\r\n# Inference session\r\nimport onnxruntime as rt\r\n\r\nsess = rt.InferenceSession(\"pipeline3_tfidf.onnx\")\r\ninputs = {'input': X_train_preprocessed.reshape(-1, 1)[0]}\r\npred_onx = sess.run(None, inputs)\r\n# print(\"predict\", pred_onx[0])\r\nprint(\"predict_proba\", pred_onx[1])\r\n```\r\noutputs [{0: 0.44900158047676086, 1: 0.2634965181350708, 2: 0.28750190138816833}]\r\n\r\nI get a multiclass classifier (It corresponds to sklean output that was normalized afterwards).\r\n\r\nI did not see any option within sklearn-onnx to bypass normalization step\r\n\r\n## Calculation graph print and attempt to change outputs\r\n\r\nTherefore I attempted to change the output of the calculation graph to get calculaitions before normalization step ('concatenated' step if I am right)\r\n\r\n![model3_onnx dot](https://user-images.githubusercontent.com/31990506/56885801-a09af480-6a6d-11e9-9e55-f4aa68013be8.png)\r\n\r\n```python\r\nonnx_helper.select_model_inputs_outputs(model3_onnx, 'concatenated')\r\n\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-30-5926ab7e7f40> in <module>\r\n----> 1 onnx_helper.select_model_inputs_outputs(model3_onnx, 'concatenated')\r\n\r\n~/environment/default/lib/python3.7/site-packages/skl2onnx/helpers/onnx_helper.py in select_model_inputs_outputs(model, outputs, inputs)\r\n    108             nb += 1\r\n    109             for inp in node.input:\r\n--> 110                 if mark_var[inp] == 1:\r\n    111                     continue\r\n    112                 mark_var[inp] = 1\r\n\r\nKeyError: 'transform_matrix'\r\n```\r\n\r\nBut it did not work out (Besides, if I cannot get a node to be an output as soon as I go after SVD step)\r\n\r\nI suppose I am doing something wrong but I can't figure out what ?\r\n\r\nAny help would be appreciated.\r\n\r\nRegards,\r\n\r\nFrancois","closed_by":{"login":"xadupre","id":22452781,"node_id":"MDQ6VXNlcjIyNDUyNzgx","avatar_url":"https://avatars.githubusercontent.com/u/22452781?v=4","gravatar_id":"","url":"https://api.github.com/users/xadupre","html_url":"https://github.com/xadupre","followers_url":"https://api.github.com/users/xadupre/followers","following_url":"https://api.github.com/users/xadupre/following{/other_user}","gists_url":"https://api.github.com/users/xadupre/gists{/gist_id}","starred_url":"https://api.github.com/users/xadupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xadupre/subscriptions","organizations_url":"https://api.github.com/users/xadupre/orgs","repos_url":"https://api.github.com/users/xadupre/repos","events_url":"https://api.github.com/users/xadupre/events{/privacy}","received_events_url":"https://api.github.com/users/xadupre/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/113/timeline","performed_via_github_app":null,"state_reason":"completed"}