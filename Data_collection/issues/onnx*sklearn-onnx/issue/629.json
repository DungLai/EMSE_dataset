{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/629","repository_url":"https://api.github.com/repos/onnx/sklearn-onnx","labels_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/629/labels{/name}","comments_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/629/comments","events_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/629/events","html_url":"https://github.com/onnx/sklearn-onnx/issues/629","id":824297114,"node_id":"MDU6SXNzdWU4MjQyOTcxMTQ=","number":629,"title":"lightgbm with categorical feature error","user":{"login":"LmYjQ","id":12581433,"node_id":"MDQ6VXNlcjEyNTgxNDMz","avatar_url":"https://avatars.githubusercontent.com/u/12581433?v=4","gravatar_id":"","url":"https://api.github.com/users/LmYjQ","html_url":"https://github.com/LmYjQ","followers_url":"https://api.github.com/users/LmYjQ/followers","following_url":"https://api.github.com/users/LmYjQ/following{/other_user}","gists_url":"https://api.github.com/users/LmYjQ/gists{/gist_id}","starred_url":"https://api.github.com/users/LmYjQ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LmYjQ/subscriptions","organizations_url":"https://api.github.com/users/LmYjQ/orgs","repos_url":"https://api.github.com/users/LmYjQ/repos","events_url":"https://api.github.com/users/LmYjQ/events{/privacy}","received_events_url":"https://api.github.com/users/LmYjQ/received_events","type":"User","site_admin":false},"labels":[{"id":2673847808,"node_id":"MDU6TGFiZWwyNjczODQ3ODA4","url":"https://api.github.com/repos/onnx/sklearn-onnx/labels/pending%20user%20response","name":"pending user response","color":"2465AA","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-03-08T08:06:57Z","updated_at":"2021-08-27T08:45:09Z","closed_at":"2021-08-27T08:45:08Z","author_association":"NONE","active_lock_reason":null,"body":"package version:\r\nonnx:  1.8.1\r\nonnxruntime:  1.4.0\r\nskl2onnx:  1.8.0\r\nonnxmltools:  1.7.0\r\n\r\nhere is my code\r\n\r\n`\r\nimport pandas as pd\r\nfrom sklearn.model_selection import train_test_split\r\nimport onnx\r\nimport onnxmltools\r\n\r\nimport lightgbm as lgb\r\nfrom lightgbm import LGBMClassifier\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\nfrom onnxmltools.convert.lightgbm.operator_converters.LightGbm import convert_lightgbm  # noqa\r\nfrom skl2onnx.common.shape_calculator import calculate_linear_classifier_output_shapes  # noqa\r\nfrom skl2onnx import convert_sklearn, update_registered_converter, __version__\r\nimport onnxruntime as rt\r\n\r\nprint(\"onnx: \", onnx.__version__)\r\nprint(\"onnxruntime: \", rt.__version__)\r\nprint(\"skl2onnx: \", __version__)\r\nprint(\"onnxmltools: \",onnxmltools.__version__)\r\n\r\nCATE_MODE = True\r\nsample_name='sample2.csv'\r\ncate_col_str = 'mid,204,2591,2603'\r\n\r\nparameters = {\r\n    'n_jobs': 1,\r\n    'objective': 'binary',\r\n    'metric': 'auc',\r\n    'is_unbalance': 'true',\r\n    'boosting': 'gbdt',\r\n    'num_leaves': 50,\r\n    'num_trees': 100,\r\n    'feature_fraction': 0.9,\r\n    'bagging_fraction': 0.8,\r\n    'learning_rate': 0.1,\r\n    'min_data_in_leaf': 500,\r\n    'max_depth': 15,\r\n    'verbose': 0,\r\n}\r\n\r\nflat = pd.read_csv(sample_name, sep='\\t')\r\ncols = flat.columns\r\n\r\nfeatures = []\r\nfor i in cols:\r\n    if i != 'label':\r\n        features.append(i)\r\n\r\nfor i in flat.columns:\r\n    flat[i] = flat[i].astype(float)\r\n\r\nflat['label'] = flat['label'].astype(int)\r\n\r\n\r\nif CATE_MODE:\r\n    for cate_col in cate_col_str.split(','):\r\n        flat = flat[(flat[cate_col] >= 0) & (flat[cate_col] % 1 == 0)]\r\n        flat[cate_col] = flat[cate_col].astype('category')\r\n\r\nlabel = ['label']\r\nx = flat[features]\r\ny = flat[label]\r\n\r\nx, x_test, y, y_test = train_test_split(x, y, test_size=0.2, random_state=42, stratify=y)\r\nx_train, x_valid, y_train, y_valid = train_test_split(x, y, test_size=0.2, random_state=42, stratify=y)\r\ntrain_data = lgb.Dataset(x_train, y_train, free_raw_data=False)\r\ntest_data = lgb.Dataset(x_test, label=y_test, free_raw_data=False)\r\nvalid_data = lgb.Dataset(x_valid, label=y_valid, free_raw_data=False)\r\n\r\nclf = LGBMClassifier(**parameters)\r\nclf.fit(X=x_train, y=y_train, eval_set=[(x_valid, y_valid)], early_stopping_rounds=10)\r\nprint('best score', clf.best_score_)\r\n\r\nupdate_registered_converter(\r\n    LGBMClassifier, 'LightGbmLGBMClassifier',\r\n    calculate_linear_classifier_output_shapes, convert_lightgbm,\r\n    options={'nocl': [True, False],\r\n             'zipmap': [True, False]\r\n             })\r\n\r\nversion = 'testtest'\r\nonnx_name = f\"lgb_skl_{version}.onnx\"\r\n\r\ndim = x_train.shape[1]\r\ninitial_type = [('float_input', FloatTensorType([None, dim]))]\r\nonx = convert_sklearn(clf, initial_types=initial_type, target_opset=12, options={id(clf): {'zipmap': False}})\r\n\r\nprint(dim)\r\n\r\nwith open(onnx_name, \"wb\") as f:\r\n    f.write(onx.SerializeToString())\r\nprint('success')\r\n`\r\n\r\nWhen I set CATE_MODE=False, ONNX can be saved successfully.\r\nWhen I set CATE_MODE=True, and a small dataset sample.csv, ONNX can be saved successfully.\r\nWhen I set CATE_MODE=True, with a large dataset, sample2.csv. Here is the error:\r\n\r\n`\r\nValueError                                Traceback (most recent call last)\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/common/_container.py in add_node(self, op_type, inputs, outputs, op_domain, op_version, name, **attrs)\r\n    540             node = make_node(op_type, inputs, outputs, name=name,\r\n--> 541                              _dtype=dtype, **attrs)\r\n    542         except ValueError as e:\r\n\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/proto/onnx_helper_modified.py in make_node(op_type, inputs, outputs, name, doc_string, domain, _dtype, **kwargs)\r\n     67             make_attribute(key, value, dtype=_dtype, domain=domain)\r\n---> 68             for key, value in sorted(kwargs.items()))\r\n     69     return node\r\n\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/proto/onnx_helper_modified.py in <genexpr>(.0)\r\n     67             make_attribute(key, value, dtype=_dtype, domain=domain)\r\n---> 68             for key, value in sorted(kwargs.items()))\r\n     69     return node\r\n\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/proto/onnx_helper_modified.py in make_attribute(key, value, dtype, domain, doc_string)\r\n    183                     key, type(value), dtype,\r\n--> 184                     [type(_) for _, __ in zip(value, range(0, 5))]))\r\n    185     else:\r\n\r\nValueError: You passed in an iterable attribute but I cannot figure out its applicable type, key='nodes_values', type=<class 'list'>, dtype=None, types=[<class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>, <class 'float'>].\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-29-e6c46f777ebd> in <module>\r\n      1 model_def = to_onnx(clf, x_train.values.astype(numpy.float32),\r\n----> 2                     options={id(clf): {'zipmap': False}})\r\n\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/convert.py in to_onnx(model, X, name, initial_types, target_opset, options, white_op, black_op, final_types, dtype)\r\n    212                            name=name, options=options,\r\n    213                            white_op=white_op, black_op=black_op,\r\n--> 214                            final_types=final_types, dtype=dtype)\r\n    215 \r\n    216 \r\n\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/convert.py in convert_sklearn(model, name, initial_types, doc_string, target_opset, custom_conversion_functions, custom_shape_calculators, custom_parsers, options, intermediate, white_op, black_op, final_types, dtype)\r\n    160     onnx_model = convert_topology(topology, name, doc_string, target_opset,\r\n    161                                   options=options,\r\n--> 162                                   remove_identity=not intermediate)\r\n    163 \r\n    164     return (onnx_model, topology) if intermediate else onnx_model\r\n\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/common/_topology.py in convert_topology(topology, model_name, doc_string, target_opset, channel_first_inputs, options, remove_identity)\r\n   1085                               type(getattr(operator, 'raw_model', None))))\r\n   1086         container.validate_options(operator)\r\n-> 1087         conv(scope, operator, container)\r\n   1088 \r\n   1089     # Create a graph from its main components\r\n\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/common/_registration.py in __call__(self, *args)\r\n     27             if args[1].raw_operator is not None:\r\n     28                 args[2]._get_allowed_options(args[1].raw_operator)\r\n---> 29         return self._fct(*args)\r\n     30 \r\n     31     def get_allowed_options(self):\r\n\r\n/usr/local/lib/python3.6/dist-packages/onnxmltools/convert/lightgbm/operator_converters/LightGbm.py in convert_lightgbm(scope, operator, container)\r\n    300             'TreeEnsembleClassifier', operator.input_full_names,\r\n    301             [label_tensor_name, probability_tensor_name],\r\n--> 302             op_domain='ai.onnx.ml', **attrs)\r\n    303 \r\n    304         prob_tensor = probability_tensor_name\r\n\r\n/usr/local/lib/python3.6/dist-packages/skl2onnx/common/_container.py in add_node(self, op_type, inputs, outputs, op_domain, op_version, name, **attrs)\r\n    542         except ValueError as e:\r\n    543             raise ValueError(\"Unable to create node '{}' with name='{}'.\"\r\n--> 544                              \"\".format(op_type, name)) from e\r\n    545         node.domain = op_domain\r\n    546 \r\n\r\nValueError: Unable to create node 'TreeEnsembleClassifier' with name='LightGbmLGBMClassifier'.\r\n`\r\n\r\nAlso, When I change 'num_trees' from 100 to 10(CATE_MODE=True, with a large dataset), the error disappear.\r\n","closed_by":{"login":"xadupre","id":22452781,"node_id":"MDQ6VXNlcjIyNDUyNzgx","avatar_url":"https://avatars.githubusercontent.com/u/22452781?v=4","gravatar_id":"","url":"https://api.github.com/users/xadupre","html_url":"https://github.com/xadupre","followers_url":"https://api.github.com/users/xadupre/followers","following_url":"https://api.github.com/users/xadupre/following{/other_user}","gists_url":"https://api.github.com/users/xadupre/gists{/gist_id}","starred_url":"https://api.github.com/users/xadupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xadupre/subscriptions","organizations_url":"https://api.github.com/users/xadupre/orgs","repos_url":"https://api.github.com/users/xadupre/repos","events_url":"https://api.github.com/users/xadupre/events{/privacy}","received_events_url":"https://api.github.com/users/xadupre/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/onnx/sklearn-onnx/issues/629/timeline","performed_via_github_app":null,"state_reason":"completed"}