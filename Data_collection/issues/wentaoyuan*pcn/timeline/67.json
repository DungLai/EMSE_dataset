[{"url":"https://api.github.com/repos/wentaoyuan/pcn/issues/comments/1119616449","html_url":"https://github.com/wentaoyuan/pcn/issues/67#issuecomment-1119616449","issue_url":"https://api.github.com/repos/wentaoyuan/pcn/issues/67","id":1119616449,"node_id":"IC_kwDOCIdebM5Cu_3B","user":{"login":"MarioCavero","id":23640690,"node_id":"MDQ6VXNlcjIzNjQwNjkw","avatar_url":"https://avatars.githubusercontent.com/u/23640690?v=4","gravatar_id":"","url":"https://api.github.com/users/MarioCavero","html_url":"https://github.com/MarioCavero","followers_url":"https://api.github.com/users/MarioCavero/followers","following_url":"https://api.github.com/users/MarioCavero/following{/other_user}","gists_url":"https://api.github.com/users/MarioCavero/gists{/gist_id}","starred_url":"https://api.github.com/users/MarioCavero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarioCavero/subscriptions","organizations_url":"https://api.github.com/users/MarioCavero/orgs","repos_url":"https://api.github.com/users/MarioCavero/repos","events_url":"https://api.github.com/users/MarioCavero/events{/privacy}","received_events_url":"https://api.github.com/users/MarioCavero/received_events","type":"User","site_admin":false},"created_at":"2022-05-06T13:21:28Z","updated_at":"2022-05-06T13:21:28Z","author_association":"NONE","body":"Taking into account the comments on the functions (Thanks, by the way) like:\r\n```\r\ndef approx_match(xyz1,xyz2):\r\n    '''\r\ninput:\r\n    xyz1 : batch_size * #dataset_points * 3\r\n    xyz2 : batch_size * #query_points * 3\r\nreturns:\r\n    match : batch_size * #query_points * #dataset_points\r\n    '''\r\n    return approxmatch_module.approx_match(xyz1,xyz2)\r\n@ops.RegisterShape('ApproxMatch')\r\ndef _approx_match_shape(op):\r\n    shape1=op.inputs[0].get_shape().with_rank(3)\r\n    shape2=op.inputs[1].get_shape().with_rank(3)\r\n    return [tf.TensorShape([shape1.dims[0],shape2.dims[1],shape1.dims[1]])]\r\n```\r\n\r\nWe can certainly register that operator in c++. Tensorflow has a guide for when updating the project with   ` tf_upgrade_v2 `. I don't recommend it though as this model won't work in the end when upgrading TF version. Specifically use the versions of the author (I still can't manage to get it running due to paths installation problems). The reason for this is that the different versions are not compatible. \r\n\r\nAnyways, for the registration of the operators in c++:\r\n```\r\n#include \"tensorflow/core/framework/shape_inference.h\"\r\nusing namespace tensorflow;\r\nREGISTER_OP(\"ApproxMatch\")\r\n    .Input(\"xyz1: float32\")\r\n    .Input(\"xyz2: float32\")\r\n    .Output(\"match: float32\")\r\n    .SetShapeFn([](shape_inference::InferenceContext* c) {\r\n        shape_inference::ShapeHandle xyz1_shape = c->input(0);\r\n        shape_inference::ShapeHandle xyz2_shape = c->input(1);\r\n        // batch_size is the first dimension \r\n        shape_inference::DimensionHandle batch_size = c->Dim(xyz1_shape, 0);\r\n        // dataset_points points is the 2nd dimension of the first input\r\n        shape_inference::DimensionHandle dataset_points = c->Dim(xyz1_shape, 1);\r\n        // query_points points is the 2nd dimension of the second input\r\n        shape_inference::DimensionHandle query_points = c->Dim(xyz2_shape, 1);\r\n        // Creating the new shape (batch_size, query_points, dataset_points)\r\n        // and setting it to the output\r\n        c->set_output(0, c->MakeShape({batch_size, query_points, dataset_points})); \r\n        // Returning a status telling that everything went well\r\n        return Status::OK();    \r\n    });\r\n```\r\nand \r\n```\r\nREGISTER_OP(\"MatchCost\")\r\n    .Input(\"xyz1: float32\")\r\n    .Input(\"xyz2: float32\")\r\n    .Input(\"match: float32\")\r\n    .Output(\"cost: float32\")\r\n    .SetShapeFn([](shape_inference::InferenceContext* c) {\r\n        shape_inference::DimensionHandle batch_size = c->Dim(c->input(0), 0);\r\n        c->set_output(0, c->Vector(batch_size));\r\n        return Status::OK();        \r\n    });\r\n```\r\nAs mentioned by the user that helped me out on SO [see question here](https://stackoverflow.com/questions/72010560/tensorflow-migration-problem-regardless-defining-the-operations-tensorflow-pytho/72129084#72129084), This code does not contain any error handling (for example, checking that the first dimensions of the 2 inputs are the same, or that the last dimension of both inputs is 3). I let that as an exercise to the reader, you could look at the aforementioned guide or directly to the [source code of some ops](https://github.com/tensorflow/tensorflow/blob/v2.8.0/tensorflow/core/ops/math_ops.cc) to have an idea on how to do error handling, with, for example, the macro TF_RETURN_IF_ERROR.\r\n\r\n\r\nAfter fixing this, the following error will pop up, meaning that CUDA versions, TF versions are incompatible. \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"lmdb_writer.py\", line 35, in <module>\r\n    from tensorpack import DataFlow, dataflow\r\n  File \"/home/mario/.local/lib/python3.6/site-packages/tensorpack/_init_.py\", line 5, in <module>\r\n    from tensorpack.libinfo import _version_, _HAS_TF\r\n  File \"/home/mario/.local/lib/python3.6/site-packages/tensorpack/libinfo.py\", line 47, in <module>\r\n    import tensorflow as tf  # noqa\r\n  File \"/home/mario/.local/lib/python3.6/site-packages/tensorflow/_init_.py\", line 438, in <module>\r\n    _ll.load_library(_main_dir)\r\n  File \"/home/mario/.local/lib/python3.6/site-packages/tensorflow/python/framework/load_library.py\", line 154, in load_library\r\n    py_tf.TF_LoadLibrary(lib)\r\ntensorflow.python.framework.errors_impl.NotFoundError: /home/mario/anaconda3/envs/pcnconda/lib/python3.6/site-packages/tensorflow/core/kernels/libtfkernel_sobol_op.so: undefined symbol: _ZN10tensorflow8OpKernel11TraceStringB5cxx11EPNS_15OpKernelContextEb\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/wentaoyuan/pcn/issues/comments/1119616449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"MarioCavero","id":23640690,"node_id":"MDQ6VXNlcjIzNjQwNjkw","avatar_url":"https://avatars.githubusercontent.com/u/23640690?v=4","gravatar_id":"","url":"https://api.github.com/users/MarioCavero","html_url":"https://github.com/MarioCavero","followers_url":"https://api.github.com/users/MarioCavero/followers","following_url":"https://api.github.com/users/MarioCavero/following{/other_user}","gists_url":"https://api.github.com/users/MarioCavero/gists{/gist_id}","starred_url":"https://api.github.com/users/MarioCavero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarioCavero/subscriptions","organizations_url":"https://api.github.com/users/MarioCavero/orgs","repos_url":"https://api.github.com/users/MarioCavero/repos","events_url":"https://api.github.com/users/MarioCavero/events{/privacy}","received_events_url":"https://api.github.com/users/MarioCavero/received_events","type":"User","site_admin":false}},{"id":6563554713,"node_id":"CE_lADOCIdebM5JG-t2zwAAAAGHN-WZ","url":"https://api.github.com/repos/wentaoyuan/pcn/issues/events/6563554713","actor":{"login":"MarioCavero","id":23640690,"node_id":"MDQ6VXNlcjIzNjQwNjkw","avatar_url":"https://avatars.githubusercontent.com/u/23640690?v=4","gravatar_id":"","url":"https://api.github.com/users/MarioCavero","html_url":"https://github.com/MarioCavero","followers_url":"https://api.github.com/users/MarioCavero/followers","following_url":"https://api.github.com/users/MarioCavero/following{/other_user}","gists_url":"https://api.github.com/users/MarioCavero/gists{/gist_id}","starred_url":"https://api.github.com/users/MarioCavero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarioCavero/subscriptions","organizations_url":"https://api.github.com/users/MarioCavero/orgs","repos_url":"https://api.github.com/users/MarioCavero/repos","events_url":"https://api.github.com/users/MarioCavero/events{/privacy}","received_events_url":"https://api.github.com/users/MarioCavero/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2022-05-06T13:21:28Z","state_reason":null,"performed_via_github_app":null}]