{"url":"https://api.github.com/repos/wentaoyuan/pcn/issues/53","repository_url":"https://api.github.com/repos/wentaoyuan/pcn","labels_url":"https://api.github.com/repos/wentaoyuan/pcn/issues/53/labels{/name}","comments_url":"https://api.github.com/repos/wentaoyuan/pcn/issues/53/comments","events_url":"https://api.github.com/repos/wentaoyuan/pcn/issues/53/events","html_url":"https://github.com/wentaoyuan/pcn/issues/53","id":665674775,"node_id":"MDU6SXNzdWU2NjU2NzQ3NzU=","number":53,"title":"Unpickling Error: invalid load key, '\\xdc'.","user":{"login":"HimangiM","id":14819391,"node_id":"MDQ6VXNlcjE0ODE5Mzkx","avatar_url":"https://avatars.githubusercontent.com/u/14819391?v=4","gravatar_id":"","url":"https://api.github.com/users/HimangiM","html_url":"https://github.com/HimangiM","followers_url":"https://api.github.com/users/HimangiM/followers","following_url":"https://api.github.com/users/HimangiM/following{/other_user}","gists_url":"https://api.github.com/users/HimangiM/gists{/gist_id}","starred_url":"https://api.github.com/users/HimangiM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HimangiM/subscriptions","organizations_url":"https://api.github.com/users/HimangiM/orgs","repos_url":"https://api.github.com/users/HimangiM/repos","events_url":"https://api.github.com/users/HimangiM/events{/privacy}","received_events_url":"https://api.github.com/users/HimangiM/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-25T23:02:59Z","updated_at":"2020-07-26T16:57:14Z","closed_at":"2020-07-26T16:55:31Z","author_association":"NONE","active_lock_reason":null,"body":"While using train.lmdb and valid.lmdb from the shapenet_car folder in the mentioned Google Drive link, the line 'dataflow.LMDBSerializer.load(lmdb_path, shuffle=False)' throws 'Unpickling Error: invalid load key, '\\xdc'. I also tried downloading the lmdb files multiple times to check if the lmdb is not corrupted. \r\n\r\n```\r\n<ipython-input-1-8968eb1dd6e2>` in lmdb_dataflow(lmdb_path, batch_size, input_size, output_size, is_training, test_speed)\r\n\r\n     69 \r\n     70 def lmdb_dataflow(lmdb_path, batch_size, input_size, output_size, is_training, test_speed=False):\r\n---> 71     df = dataflow.LMDBSerializer.load(lmdb_path, shuffle=False)\r\n     72     size = df.size()\r\n     73     if is_training:\r\n\r\n~/py3.7/lib/python3.7/site-packages/tensorpack/dataflow/serialize.py in load(path, shuffle)\r\n    112             and run deserialization as a mapper in parallel.\r\n    113         \"\"\"\r\n--> 114         df = LMDBData(path, shuffle=shuffle)\r\n    115         return MapData(df, LMDBSerializer._deserialize_lmdb)\r\n    116 \r\n\r\n~/py3.7/lib/python3.7/site-packages/tensorpack/dataflow/format.py in __init__(self, lmdb_path, shuffle, keys)\r\n     88         self._open_lmdb()\r\n     89         self._size = self._txn.stat()['entries']\r\n---> 90         self._set_keys(keys)\r\n     91         logger.info(\"Found {} entries in {}\".format(self._size, self._lmdb_path))\r\n     92 \r\n\r\n~/py3.7/lib/python3.7/site-packages/tensorpack/dataflow/format.py in _set_keys(self, keys)\r\n    108         self.keys = self._txn.get(b'__keys__')\r\n    109         if self.keys is not None:\r\n--> 110             self.keys = loads(self.keys)\r\n    111             self._size -= 1     # delete this item\r\n    112 \r\n\r\n~/py3.7/lib/python3.7/site-packages/tensorpack/utils/serialize.py in loads(buf)\r\n     91             bytes\r\n     92         \"\"\"\r\n---> 93         return pickle.loads(buf)\r\n     94 \r\n     95 \r\n\r\nUnpicklingError: invalid load key, '\\xdc'.\r\n```","closed_by":{"login":"HimangiM","id":14819391,"node_id":"MDQ6VXNlcjE0ODE5Mzkx","avatar_url":"https://avatars.githubusercontent.com/u/14819391?v=4","gravatar_id":"","url":"https://api.github.com/users/HimangiM","html_url":"https://github.com/HimangiM","followers_url":"https://api.github.com/users/HimangiM/followers","following_url":"https://api.github.com/users/HimangiM/following{/other_user}","gists_url":"https://api.github.com/users/HimangiM/gists{/gist_id}","starred_url":"https://api.github.com/users/HimangiM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HimangiM/subscriptions","organizations_url":"https://api.github.com/users/HimangiM/orgs","repos_url":"https://api.github.com/users/HimangiM/repos","events_url":"https://api.github.com/users/HimangiM/events{/privacy}","received_events_url":"https://api.github.com/users/HimangiM/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/wentaoyuan/pcn/issues/53/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/wentaoyuan/pcn/issues/53/timeline","performed_via_github_app":null,"state_reason":"completed"}