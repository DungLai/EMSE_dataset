{"url":"https://api.github.com/repos/intel/dffml/issues/1308","repository_url":"https://api.github.com/repos/intel/dffml","labels_url":"https://api.github.com/repos/intel/dffml/issues/1308/labels{/name}","comments_url":"https://api.github.com/repos/intel/dffml/issues/1308/comments","events_url":"https://api.github.com/repos/intel/dffml/issues/1308/events","html_url":"https://github.com/intel/dffml/issues/1308","id":1144917545,"node_id":"I_kwDOCOlgGM5EPg4p","number":1308,"title":"df: types: dataflow: Call update any time any subproperty of flow is modified","user":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"labels":[{"id":1062701220,"node_id":"MDU6TGFiZWwxMDYyNzAxMjIw","url":"https://api.github.com/repos/intel/dffml/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1062701224,"node_id":"MDU6TGFiZWwxMDYyNzAxMjI0","url":"https://api.github.com/repos/intel/dffml/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":1474883817,"node_id":"MDU6TGFiZWwxNDc0ODgzODE3","url":"https://api.github.com/repos/intel/dffml/labels/kind/dataflow","name":"kind/dataflow","color":"e8818c","default":false,"description":"Issues partaining to DataFlows"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-02-20T04:28:18Z","updated_at":"2022-03-25T08:28:27Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"## Pain Point\r\n\r\nCurrently when a use modifies `dataflow.flow` the dataflow is not updated unless `dataflow.update()` is called.\r\n\r\nFor example:\r\n\r\nhttps://github.com/intel/dffml/blob/8c87efaf55707bf1c3f72406226de85111fb7681/examples/io/io_usage.py#L11-L49\r\n\r\n## Proposed Solution\r\n\r\nIdeally whenever `flow` is modified, or any subproperty all the way down the nested objects is modifed. We would automatically call `dataflow.update()` so the user doesn't have to remember to call it.\r\n\r\nThe following code might be helpful from the config code paths. We have leveraged getters and setters to do validation on properties. We could possibly take a similar with `flow`, we might have to ensure each object within flow has a reference to the dataflow it's within. If an object was instantiated as above, we might be able to detect it from the parent it was added to, going all the way up to the `flow` object, and add down a reference to the dataflow, so the object can call update, as well as then calling update due to that addition of a property.\r\n\r\nhttps://github.com/intel/dffml/blob/8c87efaf55707bf1c3f72406226de85111fb7681/dffml/base.py#L366-L451","closed_by":null,"reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/1308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/intel/dffml/issues/1308/timeline","performed_via_github_app":null,"state_reason":null}