{"url":"https://api.github.com/repos/intel/dffml/issues/699","repository_url":"https://api.github.com/repos/intel/dffml","labels_url":"https://api.github.com/repos/intel/dffml/issues/699/labels{/name}","comments_url":"https://api.github.com/repos/intel/dffml/issues/699/comments","events_url":"https://api.github.com/repos/intel/dffml/issues/699/events","html_url":"https://github.com/intel/dffml/issues/699","id":635647436,"node_id":"MDU6SXNzdWU2MzU2NDc0MzY=","number":699,"title":"model: scikit: Scikit models don't support arrays as features","user":{"login":"sakshamarora1","id":50872172,"node_id":"MDQ6VXNlcjUwODcyMTcy","avatar_url":"https://avatars.githubusercontent.com/u/50872172?v=4","gravatar_id":"","url":"https://api.github.com/users/sakshamarora1","html_url":"https://github.com/sakshamarora1","followers_url":"https://api.github.com/users/sakshamarora1/followers","following_url":"https://api.github.com/users/sakshamarora1/following{/other_user}","gists_url":"https://api.github.com/users/sakshamarora1/gists{/gist_id}","starred_url":"https://api.github.com/users/sakshamarora1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sakshamarora1/subscriptions","organizations_url":"https://api.github.com/users/sakshamarora1/orgs","repos_url":"https://api.github.com/users/sakshamarora1/repos","events_url":"https://api.github.com/users/sakshamarora1/events{/privacy}","received_events_url":"https://api.github.com/users/sakshamarora1/received_events","type":"User","site_admin":false},"labels":[{"id":1062701217,"node_id":"MDU6TGFiZWwxMDYyNzAxMjE3","url":"https://api.github.com/repos/intel/dffml/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/intel/dffml/milestones/12","html_url":"https://github.com/intel/dffml/milestone/12","labels_url":"https://api.github.com/repos/intel/dffml/milestones/12/labels","id":5313485,"node_id":"MDk6TWlsZXN0b25lNTMxMzQ4NQ==","number":12,"title":"0.4.0 Alpha Release","description":"","creator":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":119,"state":"closed","created_at":"2020-04-15T22:17:52Z","updated_at":"2021-02-26T21:58:12Z","due_on":"2021-02-18T08:00:00Z","closed_at":"2021-02-18T23:38:00Z"},"comments":0,"created_at":"2020-06-09T17:58:23Z","updated_at":"2020-08-28T22:03:17Z","closed_at":"2020-08-28T06:09:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Steps To Reproduce\r\n\r\n```console\r\ndffml train \\\r\n    -model scikitmlp -model-activation relu -model-solver adam -model-verbose -model-iter 100  \\\r\n    -model-predict label:int:1 \\\r\n    -model-features image:int:$((28 * 28)) \\\r\n    -sources images=idx3 label=idx1 \\\r\n    -source-images-filename train-images-idx3-ubyte.gz \\\r\n    -source-images-feature image \\\r\n    -source-label-filename train-labels-idx1-ubyte.gz \\\r\n    -source-label-feature label \\\r\n    -log debug\r\n```\r\n\r\nError Message:\r\n```console\r\n  File \"/home/tron/Desktop/dffml/dffml/model/model.py\", line 96, in __call__\r\n    return self.CONTEXT(self)\r\n  File \"/home/tron/Desktop/dffml/model/scikit/dffml_model_scikit/scikit_base.py\", line 35, in __init__\r\n    self.features = self.applicable_features(self.parent.config.features)\r\n  File \"/home/tron/Desktop/dffml/model/scikit/dffml_model_scikit/scikit_models.py\", line 73, in applicable_features\r\n    \"Models only supports single values (non-matrix / array)\"\r\nValueError: Models only supports single values (non-matrix / array)\r\n```\r\n\r\nThe above bug was temporarily fixed by:\r\n```diff\r\ndiff --git a/model/scikit/dffml_model_scikit/scikit_models.py b/model/scikit/dffml_model_scikit/scikit_models.py\r\nindex a175e054..22b4fa24 100644\r\n--- a/model/scikit/dffml_model_scikit/scikit_models.py\r\n+++ b/model/scikit/dffml_model_scikit/scikit_models.py\r\n@@ -68,10 +68,10 @@ def applicable_features(self, features):\r\n     for feature in features:\r\n         if feature.dtype != int and feature.dtype != float:\r\n             raise ValueError(\"Models only supports int or float feature\")\r\n-        if feature.length != 1:\r\n-            raise ValueError(\r\n-                \"Models only supports single values (non-matrix / array)\"\r\n-            )\r\n+        # if feature.length != 1:\r\n+            # raise ValueError(\r\n+                # \"Models only supports single values (non-matrix / array)\"\r\n+            # )\r\n         usable.append(feature.name)\r\n     return sorted(usable)\r\n```\r\n\r\nAfter this, the command threw the following error:\r\n\r\n\r\n```console\r\nTypeError: float() argument must be a string or a number, not 'tuple'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\n...tracebacks...\r\n  File \"/home/tron/Desktop/dffml/dffml/high_level.py\", line 379, in train\r\n    return await mctx.train(sctx)\r\n  File \"/home/tron/Desktop/dffml/model/scikit/dffml_model_scikit/scikit_base.py\", line 90, in train\r\n    self.clf.fit(xdata, ydata)\r\n  File \"/home/tron/anaconda3/lib/python3.7/site-packages/sklearn/neural_network/_multilayer_perceptron.py\", line 995, in fit\r\n    hasattr(self, \"classes_\")))\r\n  File \"/home/tron/anaconda3/lib/python3.7/site-packages/sklearn/neural_network/_multilayer_perceptron.py\", line 325, in _fit\r\n    X, y = self._validate_input(X, y, incremental)\r\n  File \"/home/tron/anaconda3/lib/python3.7/site-packages/sklearn/neural_network/_multilayer_perceptron.py\", line 932, in _validate_input\r\n    multi_output=True)\r\n  File \"/home/tron/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py\", line 755, in check_X_y\r\n    estimator=estimator)\r\n  File \"/home/tron/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py\", line 531, in check_array\r\n    array = np.asarray(array, order=order, dtype=dtype)\r\n  File \"/home/tron/anaconda3/lib/python3.7/site-packages/numpy/core/_asarray.py\", line 85, in asarray\r\n    return array(a, dtype, copy=False, order=order)\r\nValueError: setting an array element with a sequence.\r\n```\r\n\r\n#### Expected behaviour:\r\nin model/scikit/dffml_model_scikit/scikit_base.py , xdata should be a list in which each element should be the image array\r\n\r\n#### Abnormal behaviour:\r\nxdata is a list in which each element is a list containing only a single element that is the array.\r\n\r\nI was able to train the model after the following changes:\r\n```diff\r\ndiff --git a/model/scikit/dffml_model_scikit/scikit_base.py b/model/scikit/dffml_model_scikit/scikit_base.py\r\nindex d3d3c1b2..8ebb9c0b 100644\r\n--- a/model/scikit/dffml_model_scikit/scikit_base.py\r\n+++ b/model/scikit/dffml_model_scikit/scikit_base.py\r\n@@ -87,7 +87,10 @@ class ScikitContext(ModelContext):\r\n         xdata = self.np.array(df.drop([self.parent.config.predict.name], 1))\r\n         ydata = self.np.array(df[self.parent.config.predict.name])\r\n         self.logger.info(\"Number of input records: {}\".format(len(xdata)))\r\n-        self.clf.fit(xdata, ydata)\r\n+        xxdata = []\r\n+        for i in range(len(xdata)):\r\n+            xxdata.append(xdata[i][0])\r\n+        self.clf.fit(xxdata, ydata)\r\n         self.joblib.dump(self.clf, str(self._filepath))\r\n \r\n     async def accuracy(self, sources: Sources) -> Accuracy:\r\n@@ -103,7 +106,10 @@ class ScikitContext(ModelContext):\r\n         xdata = self.np.array(df.drop([self.parent.config.predict.name], 1))\r\n         ydata = self.np.array(df[self.parent.config.predict.name])\r\n         self.logger.debug(\"Number of input records: {}\".format(len(xdata)))\r\n-        self.confidence = self.clf.score(xdata, ydata)\r\n+        xxdata = []\r\n+        for i in range(len(xdata)):\r\n+            xxdata.append(xdata[i][0])\r\n+        self.confidence = self.clf.score(xxdata, ydata)\r\n         self.logger.debug(\"Model Accuracy: {}\".format(self.confidence))\r\n         return self.confidence\r\n```","closed_by":{"login":"sakshamarora1","id":50872172,"node_id":"MDQ6VXNlcjUwODcyMTcy","avatar_url":"https://avatars.githubusercontent.com/u/50872172?v=4","gravatar_id":"","url":"https://api.github.com/users/sakshamarora1","html_url":"https://github.com/sakshamarora1","followers_url":"https://api.github.com/users/sakshamarora1/followers","following_url":"https://api.github.com/users/sakshamarora1/following{/other_user}","gists_url":"https://api.github.com/users/sakshamarora1/gists{/gist_id}","starred_url":"https://api.github.com/users/sakshamarora1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sakshamarora1/subscriptions","organizations_url":"https://api.github.com/users/sakshamarora1/orgs","repos_url":"https://api.github.com/users/sakshamarora1/repos","events_url":"https://api.github.com/users/sakshamarora1/events{/privacy}","received_events_url":"https://api.github.com/users/sakshamarora1/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/699/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/intel/dffml/issues/699/timeline","performed_via_github_app":null,"state_reason":"completed"}