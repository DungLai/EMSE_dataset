{"url":"https://api.github.com/repos/intel/dffml/issues/415","repository_url":"https://api.github.com/repos/intel/dffml","labels_url":"https://api.github.com/repos/intel/dffml/issues/415/labels{/name}","comments_url":"https://api.github.com/repos/intel/dffml/issues/415/comments","events_url":"https://api.github.com/repos/intel/dffml/issues/415/events","html_url":"https://github.com/intel/dffml/issues/415","id":571714896,"node_id":"MDU6SXNzdWU1NzE3MTQ4OTY=","number":415,"title":"df: Support operation redefintion for run_dataflow","user":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"labels":[{"id":1062701220,"node_id":"MDU6TGFiZWwxMDYyNzAxMjIw","url":"https://api.github.com/repos/intel/dffml/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1474883817,"node_id":"MDU6TGFiZWwxNDc0ODgzODE3","url":"https://api.github.com/repos/intel/dffml/labels/kind/dataflow","name":"kind/dataflow","color":"e8818c","default":false,"description":"Issues partaining to DataFlows"},{"id":1740392441,"node_id":"MDU6TGFiZWwxNzQwMzkyNDQx","url":"https://api.github.com/repos/intel/dffml/labels/p0","name":"p0","color":"b60205","default":false,"description":"Critical Priority"},{"id":1740462287,"node_id":"MDU6TGFiZWwxNzQwNDYyMjg3","url":"https://api.github.com/repos/intel/dffml/labels/tM","name":"tM","color":"82c8e0","default":false,"description":"Esitmated Time To Complete: Medium"}],"state":"closed","locked":false,"assignee":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"assignees":[{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/intel/dffml/milestones/10","html_url":"https://github.com/intel/dffml/milestone/10","labels_url":"https://api.github.com/repos/intel/dffml/milestones/10/labels","id":5189140,"node_id":"MDk6TWlsZXN0b25lNTE4OTE0MA==","number":10,"title":"0.3.6 Alpha Release","description":"","creator":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":28,"state":"closed","created_at":"2020-03-11T02:58:22Z","updated_at":"2020-04-06T05:31:45Z","due_on":null,"closed_at":"2020-04-06T05:31:45Z"},"comments":3,"created_at":"2020-02-26T23:04:40Z","updated_at":"2020-03-19T07:56:59Z","closed_at":"2020-03-19T07:56:59Z","author_association":"MEMBER","active_lock_reason":null,"body":"I realized something about the concept of forwarding. For this pull request we probably want to continue with what we discussed yesterday (only forward to active contexts).\r\n\r\nFor the other pull request (and also this will be helpful for shouldi and the upcoming subflows there) what we're interested in is really the **redefinition of the inputs to run_dataflow** (and also maybe the outputs by extension, but I haven't figured that out yet). Which isn't really \"forwarding\" because we're trying to kick off a new subflow, not forward inputs to a running subflow.\r\n\r\nTo illustrate what I'm talking about here let's look at something Rahul and I have been working on in another branch. We're trying to find the dependency tree of a given python package. [full file](https://github.com/pdxjohnny/dffml/blob/1bc5a787c78e21b169afa673d7facdcad511ac36/examples/shouldi/tests/test_dep_tree.py)\r\n\r\n```python\r\n@config\r\nclass ShouldIDataFlowAsOperationConfig:\r\n    dataflow: DataFlow\r\n\r\n@op(\r\n    inputs={\"package\": pypi_package_json.op.inputs[\"package\"]},\r\n    outputs={\"package\": pypi_package_json.op.inputs[\"package\"]},\r\n    expand=[\"package\"],\r\n    config_cls=ShouldIDataFlowAsOperationConfig,\r\n)\r\nasync def shouldi_dataflow_as_operation(self, package: str):\r\n    async with self.octx.parent(self.config.dataflow) as octx:\r\n        async for ctx, result in octx.run(\r\n            {\r\n                package: [\r\n                    Input(\r\n                        value=package,\r\n                        definition=self.parent.op.inputs[\"package\"],\r\n                    )\r\n                ]\r\n            }\r\n        ):\r\n            packages = result[self.parent.op.inputs[\"package\"].name]\r\n            # Remove input package from list\r\n            packages = list(filter(lambda pkg: pkg != package, packages))\r\n            # TODO Deduplicate\r\n            return {\"package\": packages}\r\n\r\ndataflow = DataFlow.auto(shouldi_dataflow_as_operation, GetMulti)\r\ndataflow.seed.append(\r\n    Input(\r\n        value=[pypi_package_json.op.inputs[\"package\"].name],\r\n        definition=GetMulti.op.inputs[\"spec\"],\r\n    )\r\n)\r\ndataflow.configs[\r\n    \"shouldi_dataflow_as_operation\"\r\n] = ShouldIDataFlowAsOperationConfig(dataflow=SUBFLOW)\r\ndataflow.flow[\"shouldi_dataflow_as_operation\"].inputs[\"package\"].append(\r\n    \"seed\"\r\n)\r\ndataflow.update_by_origin()\r\nreturn dataflow\r\n```\r\n\r\nWhat I ended up doing here was writing a custom `run_dataflow` operation. This way, it could takes a package as an input, runs the dataflow for that package, returns the output (which is a package) and runs the same dataflow again. The result is a nice long list of dependencies where all of those `Input` objects have their `parent` set to whatever package requires them.\r\n\r\nThe point is that it's basically the same as `run_dataflow`, the difference is the inputs and the outputs (which probably seems like a big difference, but from a usability standpoint I think this will be good. Given what we talked about in the [February 25th Weekly Sync @ 1:04](https://youtu.be/Ih9vkE9synY?t=3893) with regards to `@op` / `OperationImplementation` / `OperationImplementationContext`, we could change `run_dataflow` into a `OperationImplementationContext` (see `dffml/operation/output.py` for examples).\r\n\r\nThe new `run_dataflow` (`RunDataFlow` if it's a `Context` because it's a class) would look at it's `self.parent.op` and see what the names of it's inputs are. To start small, we should just support the one input -> one output case, similar to the above example.\r\n\r\nWe'll need to change the operation instantiation code within `MemoryOperationImplementationNetworkContext.instantiate` to make sure that the `operation` passed in is assigned to `opimp.op`. We probably also need to be careful here and test what happens if two `run_dataflow` operation implementations get loaded (my guess is we might need the help of `copy.deepcopy` or `type` to avoid overwriting the shared class property)\r\n\r\n```python\r\n    async def instantiate(\r\n        self,\r\n        operation: Operation,\r\n        config: BaseConfig,\r\n        *,\r\n        opimp: OperationImplementation = None,\r\n    ) -> bool:\r\n        \"\"\"\r\n        Instantiate class registered with ____ entrypoint using pkg_resources.\r\n        Return true if instantiation was successful.\r\n        \"\"\"\r\n        if opimp is None:\r\n            if await self.instantiable(operation):\r\n                opimp = OperationImplementation.load(operation.name)\r\n                opimp = type(opimp.__qualname__, (opimp,), {\"op\": operation})\r\n            else:\r\n                raise OperationImplementationNotInstantiable(operation.name)\r\n        self.operations[\r\n            operation.instance_name\r\n        ] = await self._stack.enter_async_context(opimp(config))\r\n```","closed_by":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/intel/dffml/issues/415/timeline","performed_via_github_app":null,"state_reason":"completed"}