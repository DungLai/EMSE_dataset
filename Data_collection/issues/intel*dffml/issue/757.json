{"url":"https://api.github.com/repos/intel/dffml/issues/757","repository_url":"https://api.github.com/repos/intel/dffml","labels_url":"https://api.github.com/repos/intel/dffml/issues/757/labels{/name}","comments_url":"https://api.github.com/repos/intel/dffml/issues/757/comments","events_url":"https://api.github.com/repos/intel/dffml/issues/757/events","html_url":"https://github.com/intel/dffml/issues/757","id":648532676,"node_id":"MDU6SXNzdWU2NDg1MzI2NzY=","number":757,"title":"cli: dataflow: create: Shorthand for flow modification","user":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"labels":[{"id":1062701220,"node_id":"MDU6TGFiZWwxMDYyNzAxMjIw","url":"https://api.github.com/repos/intel/dffml/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-30T22:20:32Z","updated_at":"2020-06-30T22:20:32Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As an example, let's look at the following command:\r\n\r\n```console\r\n$ dffml dataflow \\\r\n    create \\\r\n        resize \\\r\n        calcHist \\\r\n        Haralick \\\r\n        HuMoments \\\r\n        gray=convert_color \\\r\n        hsv=convert_color \\\r\n        flatten \\\r\n        normalize \\\r\n        get_single \\\r\n    -configloader yaml \\\r\n    -seed \\\r\n        '[400,400,3]'=resize.inputs.dsize \\\r\n        '[0,1,2]'=calcHist.inputs.channels \\\r\n        'None'=calcHist.inputs.mask \\\r\n        '[8,8,8]'=calcHist.inputs.histSize \\\r\n        '[0,256,0,256,0,256]'=calcHist.inputs.ranges \\\r\n        BGR2GRAY=gray.inputs.code \\\r\n        BGR2HSV=hsv.inputs.code \\\r\n        flatten.outputs.result,HuMoments.outputs.result,Haralick.outputs.result=get_single_spec \\\r\n    -flow \\\r\n        '[{\"seed\": [\"image\"]}]'=resize.inputs.src \\\r\n        '[{\"resize\": \"result\"}]'=hsv.inputs.src \\\r\n        '[{\"hsv\": \"result\"}]'=calcHist.inputs.images \\\r\n        '[{\"calcHist\": \"result\"}]'=normalize.inputs.src \\\r\n        '[{\"normalize\": \"result\"}]'=flatten.inputs.array \\\r\n        '[{\"resize\": \"result\"}]'=gray.inputs.src \\\r\n        '[{\"gray\": \"result\"}]'=HuMoments.inputs.m \\\r\n        '[{\"resize\": \"result\"}]'=Haralick.inputs.f |\r\n    tee features1.yaml\r\n```\r\n\r\nWe see that flow is always an array, so we should assume that if we only see one entry, that it should be the only entry within an array.\r\n\r\nIt might also be nice to provide a shorthand for the common `{\"instance_name\": \"output\"}`, perhaps in the format of `instance_name:output`\r\n\r\n\r\n```console\r\n$ dffml dataflow \\\r\n    create \\\r\n        resize \\\r\n        calcHist \\\r\n        Haralick \\\r\n        HuMoments \\\r\n        gray=convert_color \\\r\n        hsv=convert_color \\\r\n        flatten \\\r\n        normalize \\\r\n        get_single \\\r\n    -configloader yaml \\\r\n    -seed \\\r\n        400,400,3=resize.inputs.dsize \\\r\n        0,1,2=calcHist.inputs.channels \\\r\n        nil=calcHist.inputs.mask \\\r\n        8,8,8=calcHist.inputs.histSize \\\r\n        0,256,0,256,0,256=calcHist.inputs.ranges \\\r\n        BGR2GRAY=gray.inputs.code \\\r\n        BGR2HSV=hsv.inputs.code \\\r\n        flatten.outputs.result,HuMoments.outputs.result,Haralick.outputs.result=get_single_spec \\\r\n    -flow \\\r\n        '{\"seed\": [\"image\"]}'=resize.inputs.src \\\r\n        resize:result=hsv.inputs.src \\\r\n        hsv:result=calcHist.inputs.images \\\r\n        calcHist:result=normalize.inputs.src \\\r\n        normalize:result=flatten.inputs.array \\\r\n        resize:result=gray.inputs.src \\\r\n        gray:result=HuMoments.inputs.m \\\r\n        resize:result=Haralick.inputs.f |\r\n    tee features1.yaml\r\n```\r\n\r\nIt would be nice if we could have some kind of syntax similar to the above to modify a flow","closed_by":null,"reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/intel/dffml/issues/757/timeline","performed_via_github_app":null,"state_reason":null}