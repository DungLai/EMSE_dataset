{"url":"https://api.github.com/repos/intel/dffml/issues/1224","repository_url":"https://api.github.com/repos/intel/dffml","labels_url":"https://api.github.com/repos/intel/dffml/issues/1224/labels{/name}","comments_url":"https://api.github.com/repos/intel/dffml/issues/1224/comments","events_url":"https://api.github.com/repos/intel/dffml/issues/1224/events","html_url":"https://github.com/intel/dffml/issues/1224","id":996510950,"node_id":"I_kwDOCOlgGM47ZYzm","number":1224,"title":"df: Optimal dataflow selection","user":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"labels":[{"id":1062701220,"node_id":"MDU6TGFiZWwxMDYyNzAxMjIw","url":"https://api.github.com/repos/intel/dffml/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-09-14T23:12:12Z","updated_at":"2021-09-14T23:12:12Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Using the considerations in the inventory for operation selection plus additional constraints/ values. Use existing methods for map routing to determine optimal operations / operation implementations.\r\n\r\nCoffee example:\r\n\r\n- coffee machine is one road\r\n- Hot water boiler and french press is two roads\r\n\r\nWe can easily add complexity by adding more “roads”. If we dont have a coffee machine, we now have two roads, one for usage, and one for acquisition.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/1224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/intel/dffml/issues/1224/timeline","performed_via_github_app":null,"state_reason":null}