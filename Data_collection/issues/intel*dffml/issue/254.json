{"url":"https://api.github.com/repos/intel/dffml/issues/254","repository_url":"https://api.github.com/repos/intel/dffml","labels_url":"https://api.github.com/repos/intel/dffml/issues/254/labels{/name}","comments_url":"https://api.github.com/repos/intel/dffml/issues/254/comments","events_url":"https://api.github.com/repos/intel/dffml/issues/254/events","html_url":"https://github.com/intel/dffml/issues/254","id":533482392,"node_id":"MDU6SXNzdWU1MzM0ODIzOTI=","number":254,"title":"docs: usage: integration: Make prediction using operation","user":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"labels":[{"id":1062701220,"node_id":"MDU6TGFiZWwxMDYyNzAxMjIw","url":"https://api.github.com/repos/intel/dffml/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1264621657,"node_id":"MDU6TGFiZWwxMjY0NjIxNjU3","url":"https://api.github.com/repos/intel/dffml/labels/documentation","name":"documentation","color":"57a5f9","default":true,"description":"Changes to documentation"},{"id":1266689488,"node_id":"MDU6TGFiZWwxMjY2Njg5NDg4","url":"https://api.github.com/repos/intel/dffml/labels/project","name":"project","color":"53e097","default":false,"description":"Issues which will take a while to complete"},{"id":1474883282,"node_id":"MDU6TGFiZWwxNDc0ODgzMjgy","url":"https://api.github.com/repos/intel/dffml/labels/kind/ml","name":"kind/ml","color":"0e8a16","default":false,"description":"Issues partaining to machine learning"},{"id":1474883817,"node_id":"MDU6TGFiZWwxNDc0ODgzODE3","url":"https://api.github.com/repos/intel/dffml/labels/kind/dataflow","name":"kind/dataflow","color":"e8818c","default":false,"description":"Issues partaining to DataFlows"},{"id":1740392441,"node_id":"MDU6TGFiZWwxNzQwMzkyNDQx","url":"https://api.github.com/repos/intel/dffml/labels/p0","name":"p0","color":"b60205","default":false,"description":"Critical Priority"},{"id":1740463703,"node_id":"MDU6TGFiZWwxNzQwNDYzNzAz","url":"https://api.github.com/repos/intel/dffml/labels/tXL","name":"tXL","color":"893ddb","default":false,"description":"Esitmated Time To Complete: Extra Long"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/intel/dffml/milestones/12","html_url":"https://github.com/intel/dffml/milestone/12","labels_url":"https://api.github.com/repos/intel/dffml/milestones/12/labels","id":5313485,"node_id":"MDk6TWlsZXN0b25lNTMxMzQ4NQ==","number":12,"title":"0.4.0 Alpha Release","description":"","creator":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":119,"state":"closed","created_at":"2020-04-15T22:17:52Z","updated_at":"2021-02-26T21:58:12Z","due_on":"2021-02-18T08:00:00Z","closed_at":"2021-02-18T23:38:00Z"},"comments":0,"created_at":"2019-12-05T17:10:43Z","updated_at":"2020-09-26T22:17:44Z","closed_at":"2020-09-26T22:17:43Z","author_association":"MEMBER","active_lock_reason":null,"body":"In the Integrating Machine Learning usage example between the [Making a Prediction](https://intel.github.io/dffml/usage/integration.html#making-a-prediction) and [Modifying the Legacy App](https://intel.github.io/dffml/usage/integration.html#modifying-the-legacy-app) headings we need to add a section where we show how to use the Trained Model Operation to make the prediction, rather than the other CLI call.\r\n\r\nIn the new section we need to go over how we construct the dataflow.\r\n\r\n```python\r\nelif action == 'predict':\r\n    today = datetime.now().strftime('%Y-%m-%d %H:%M')\r\n    subprocess.check_call([\r\n        \"dffml\", \"dataflow\", \"run\", \"repos\", \"set\",\r\n        \"-keys\", query['URL'],\r\n        \"-repo-def\", \"URL\",\r\n        \"-dataflow\", os.path.join(os.path.dirname(__file__), \"dataflow.yaml\"),\r\n        \"-sources\", \"db=demoapp\",\r\n        ])\r\n    result = subprocess.check_output([\r\n        'dffml', 'predict', 'repo',\r\n        '-keys', query['URL'],\r\n        '-model', 'tfdnnc',\r\n        '-model-classification', 'maintained',\r\n        '-model-classifications', '0', '1',\r\n        '-sources', 'db=demoapp',\r\n        '-features',\r\n        'def:authors:int:10',\r\n        'def:commits:int:10',\r\n        'def:work:int:10',\r\n        '-log', 'critical',\r\n        '-update'])\r\n    result = json.loads(result)\r\n    cursor.execute(\"REPLACE INTO status (src_url, maintained) VALUES(%s, %s)\",\r\n                   (query['URL'], result[0]['prediction']['value'],))\r\n    cnx.commit()\r\n    print json.dumps(dict(success=True))\r\n```\r\n\r\nwill turn into:\r\n\r\n\r\n```python\r\nelif action == 'predict':\r\n    subprocess.check_call([\r\n        \"dffml\", \"dataflow\", \"run\", \"repos\", \"set\",\r\n        \"-keys\", query['URL'],\r\n        \"-repo-def\", \"URL\",\r\n        \"-dataflow\", os.path.join(os.path.dirname(__file__), \"prediction_dataflow.yaml\"),\r\n        \"-sources\", \"db=demoapp\",\r\n        ])\r\n    print json.dumps(dict(success=True))\r\n```\r\n\r\nThis issue is probably worth spiting into smaller issues. Since off the top of my head I'd say it involves at least these sub-tasks.\r\n\r\n- [x] Create a `model_predict` Operation (#215)\r\n  - This operation will do almost the same thing as the `dffml predict repo` CLI command.\r\n  - Done: [model_predict operation](https://github.com/intel/dffml/blob/ba96ad764a1788491307ca93e619f6791bfbf1f0/dffml/operation/model.py#L10-L38)\r\n- [x] Create a `run_dataflow` Operation\r\n  - This operation will do almost the same thing as the `dffml dataflow run repos set` CLI command.\r\n  - This operation takes a dataflow in its configuration (See [remap](https://github.com/intel/dffml/blob/a09d12b8c63659df734f7fd2864d799618c9a3a1/dffml/operation/output.py#L182-L227) operation for an example of how this can be done, when calling `self.octx.parent(` make sure not to pass `ictx`. `ictx` is only passed in remap because we are executing an output subflow from within an output operation)\r\n  - For the initial test of this we want to just paste the old dataflow into the new one under the config for this operation.\r\n  - Eventually we'll want to make a `ConfigLoader` that takes a directory as the argument to `loadb`  #255\r\n- [x] Create an operation that preforms a sql query. The config for the operation should take a class similar to a source which represents a sql database. We need to make a new base class for it the same way that all the base classes are created (reference dffml/df/base.py BaseKeyValueStore for an example of how to do this). Then create an instance of it that understands how to interact with a sqlite database (reference dffml/df/memory.py MemoryKeyValueStore for an example of how to do this). Don't use the `aiosqlite` module, instead use `asyncio.Lock` and the sqlite module from the standard library (the [new source tutorial](https://intel.github.io/dffml/tutorials/source.html) uses aiosqlite, but will probably be enough to get you going in the right direction). The goal here is to provide a minimal working interaction with the database, while keeping the dependencies to only the standard library.\r\n- [ ] Any other operations that might be needed to tie these all together...\r\n- [ ] Create the dataflow `prediction_dataflow.yaml` using these new operations and any others needed to replicated the functionality of the two command line calls (because the point here is that we're making it one command line call).\r\n- [ ] Update the tutorial documentation\r\n- [ ] Test that the updated documentation works, start to finish.","closed_by":{"login":"pdxjohnny","id":5950433,"node_id":"MDQ6VXNlcjU5NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5950433?v=4","gravatar_id":"","url":"https://api.github.com/users/pdxjohnny","html_url":"https://github.com/pdxjohnny","followers_url":"https://api.github.com/users/pdxjohnny/followers","following_url":"https://api.github.com/users/pdxjohnny/following{/other_user}","gists_url":"https://api.github.com/users/pdxjohnny/gists{/gist_id}","starred_url":"https://api.github.com/users/pdxjohnny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdxjohnny/subscriptions","organizations_url":"https://api.github.com/users/pdxjohnny/orgs","repos_url":"https://api.github.com/users/pdxjohnny/repos","events_url":"https://api.github.com/users/pdxjohnny/events{/privacy}","received_events_url":"https://api.github.com/users/pdxjohnny/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/intel/dffml/issues/254/timeline","performed_via_github_app":null,"state_reason":"completed"}