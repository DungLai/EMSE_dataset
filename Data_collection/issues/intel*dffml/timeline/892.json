[{"url":"https://api.github.com/repos/intel/dffml/issues/comments/728883176","html_url":"https://github.com/intel/dffml/issues/892#issuecomment-728883176","issue_url":"https://api.github.com/repos/intel/dffml/issues/892","id":728883176,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODg4MzE3Ng==","user":{"login":"yashlamba","id":44164398,"node_id":"MDQ6VXNlcjQ0MTY0Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/44164398?v=4","gravatar_id":"","url":"https://api.github.com/users/yashlamba","html_url":"https://github.com/yashlamba","followers_url":"https://api.github.com/users/yashlamba/followers","following_url":"https://api.github.com/users/yashlamba/following{/other_user}","gists_url":"https://api.github.com/users/yashlamba/gists{/gist_id}","starred_url":"https://api.github.com/users/yashlamba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yashlamba/subscriptions","organizations_url":"https://api.github.com/users/yashlamba/orgs","repos_url":"https://api.github.com/users/yashlamba/repos","events_url":"https://api.github.com/users/yashlamba/events{/privacy}","received_events_url":"https://api.github.com/users/yashlamba/received_events","type":"User","site_admin":false},"created_at":"2020-11-17T12:04:50Z","updated_at":"2020-11-17T12:04:50Z","author_association":"CONTRIBUTOR","body":"**dffml-model-pytorch**\r\nAll the tests are failing for Pytorch, the issue maybe because of the recent PyTorch update.\r\n\r\nSince Pytorch needs to be explicitly installed for dffml (only windows) right now (see #877), the following command was used:\r\n`pip install torch===1.7.0 torchvision===0.8.1 -f https://download.pytorch.org/whl/torch_stable.html`\r\n\r\nThere is this weird test loop happening each time I ran PyTorch tests too.\r\n\r\n```console\r\npython setup.py test\r\nrunning test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\ntest_00_train (tests.test_pytorchnet.TestPyTorchNeuralNetwork) ... running test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\ncreating dffml_model_pytorch.egg-info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\nrunning test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\nrunning test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\nrunning test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\nERROR\r\ntest_01_accuracy (tests.test_pytorchnet.TestPyTorchNeuralNetwork) ... ERROR\r\ntest_02_predict (tests.test_pytorchnet.TestPyTorchNeuralNetwork) ... ERROR\r\ntest_shell (tests.test_pytorchnet.TestPyTorchNeuralNetwork) ... running test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\ncreating dffml_model_pytorch.egg-info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\nrunning test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\nrunning test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\nrunning test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic te\r\nst entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\nwriting dffml_model_pytorch.egg-info\\PKG-INFO\r\nwriting dependency_links to dffml_model_pytorch.egg-info\\dependency_links.txt\r\nwriting entry points to dffml_model_pytorch.egg-info\\entry_points.txt\r\nwriting requirements to dffml_model_pytorch.egg-info\\requires.txt\r\nwriting top-level names to dffml_model_pytorch.egg-info\\top_level.txt\r\nreading manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nwriting manifest file 'dffml_model_pytorch.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\nERROR\r\ntest_shell (tests.test_resnet18.TestResNet18Model) ... ^Z/bin/bash: c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\te\r\nsts\\..\\examples\\resnet18\\unknown_data.sh: No such file or directory\r\nERROR\r\n\r\n======================================================================\r\nERROR: test_00_train (tests.test_pytorchnet.TestPyTorchNeuralNetwork)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\asynctestcase.py\", line 69, in run_it\r\n    result = self.loop.run_until_complete(coro(*args, **kwargs))\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 616, in run_until_compl\r\nete\r\n    return future.result()\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\net.py\", line 215, in wrapper\r\n    return await func(*(list(args) + [directory_path]), **kwds)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\tests\\test_pytorchnet.py\", line 91, in test_00_train\r\n    await train(\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\high_level.py\", line 380, in train\r\n    return await mctx.train(sctx)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\dffml_model_pytorch\\pytorch_base.py\", line 271, in train\r\n    loss = self.criterion(outputs, labels)\r\n  File \"C:\\Users\\yashl\\Main\\Projects\\dffml\\.venv\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 722, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"C:\\Users\\yashl\\Main\\Projects\\dffml\\.venv\\lib\\site-packages\\torch\\nn\\modules\\loss.py\", line 947, in forward\r\n    return F.cross_entropy(input, target, weight=self.weight,\r\n  File \"C:\\Users\\yashl\\Main\\Projects\\dffml\\.venv\\lib\\site-packages\\torch\\nn\\functional.py\", line 2422, in cross_entropy\r\n    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)\r\n  File \"C:\\Users\\yashl\\Main\\Projects\\dffml\\.venv\\lib\\site-packages\\torch\\nn\\functional.py\", line 2218, in nll_loss\r\n    ret = torch._C._nn.nll_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index)\r\nRuntimeError: Expected object of scalar type Long but got scalar type Int for argument #2 'target' in call to _thnn_nll\r\n_loss_forward\r\n\r\n======================================================================\r\nERROR: test_01_accuracy (tests.test_pytorchnet.TestPyTorchNeuralNetwork)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\asynctestcase.py\", line 69, in run_it\r\n    result = self.loop.run_until_complete(coro(*args, **kwargs))\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 616, in run_until_compl\r\nete\r\n    return future.result()\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\net.py\", line 215, in wrapper\r\n    return await func(*(list(args) + [directory_path]), **kwds)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\tests\\test_pytorchnet.py\", line 107, in test_01_accuracy\r\n    acc = await accuracy(\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\high_level.py\", line 439, in accuracy\r\n    return float(await mctx.accuracy(sctx))\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\dffml_model_pytorch\\pytorch_base.py\", line 335, in accuracy\r\n    raise ModelNotTrained(\"Train model before assessing for accuracy.\")\r\ndffml.model.model.ModelNotTrained: Train model before assessing for accuracy.\r\n\r\n======================================================================\r\nERROR: test_02_predict (tests.test_pytorchnet.TestPyTorchNeuralNetwork)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\asynctestcase.py\", line 69, in run_it\r\n    result = self.loop.run_until_complete(coro(*args, **kwargs))\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 616, in run_until_compl\r\nete\r\n    return future.result()\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\net.py\", line 215, in wrapper\r\n    return await func(*(list(args) + [directory_path]), **kwds)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\tests\\test_pytorchnet.py\", line 126, in test_02_predict\r\n    async for key, features, prediction in predict(\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\high_level.py\", line 504, in predict\r\n    async for record in mctx.predict(sctx):\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\dffml_model_pytorch\\pytorch_base.py\", line 385, in predict\r\n    raise ModelNotTrained(\"Train model before prediction.\")\r\ndffml.model.model.ModelNotTrained: Train model before prediction.\r\n\r\n======================================================================\r\nERROR: test_shell (tests.test_pytorchnet.TestPyTorchNeuralNetwork)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\asynctestcase.py\", line 69, in run_it\r\n    result = self.loop.run_until_complete(coro(*args, **kwargs))\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 616, in run_until_compl\r\nete\r\n    return future.result()\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\net.py\", line 215, in wrapper\r\n    return await func(*(list(args) + [directory_path]), **kwds)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\net.py\", line 215, in wrapper\r\n    return await func(*(list(args) + [directory_path]), **kwds)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\net.py\", line 215, in wrapper\r\n    return await func(*(list(args) + [directory_path]), **kwds)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\tests\\test_pytorchnet.py\", line 176, in test_shell\r\n    await CLI.cli(*train_command[1:])\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\cli\\cmd.py\", line 224, in cli\r\n    return await cmd.do_run()\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\cli\\cmd.py\", line 203, in do_run\r\n    return await self.run()\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\cli\\ml.py\", line 40, in run\r\n    return await train(self.model, self.sources)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\high_level.py\", line 380, in train\r\n    return await mctx.train(sctx)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\dffml_model_pytorch\\pytorch_base.py\", line 271, in train\r\n    loss = self.criterion(outputs, labels)\r\n  File \"C:\\Users\\yashl\\Main\\Projects\\dffml\\.venv\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 722, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"C:\\Users\\yashl\\Main\\Projects\\dffml\\.venv\\lib\\site-packages\\torch\\nn\\modules\\loss.py\", line 947, in forward\r\n    return F.cross_entropy(input, target, weight=self.weight,\r\n  File \"C:\\Users\\yashl\\Main\\Projects\\dffml\\.venv\\lib\\site-packages\\torch\\nn\\functional.py\", line 2422, in cross_entropy\r\n    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)\r\n  File \"C:\\Users\\yashl\\Main\\Projects\\dffml\\.venv\\lib\\site-packages\\torch\\nn\\functional.py\", line 2218, in nll_loss\r\n    ret = torch._C._nn.nll_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index)\r\nRuntimeError: Expected object of scalar type Long but got scalar type Int for argument #2 'target' in call to _thnn_nll\r\n_loss_forward\r\n\r\n======================================================================\r\nERROR: test_shell (tests.test_resnet18.TestResNet18Model)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\asynctestcase.py\", line 69, in run_it\r\n    result = self.loop.run_until_complete(coro(*args, **kwargs))\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 616, in run_until_compl\r\nete\r\n    return future.result()\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\net.py\", line 215, in wrapper\r\n    return await func(*(list(args) + [directory_path]), **kwds)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\pytorch\\tests\\test_resnet18.py\", line 40, in test_shell\r\n    subprocess.check_output(\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 411, in check_output\r\n    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 512, in run\r\n    raise CalledProcessError(retcode, process.args,\r\nsubprocess.CalledProcessError: Command '['bash', 'c:\\\\users\\\\yashl\\\\main\\\\projects\\\\dffml\\\\model\\\\pytorch\\\\tests\\\\..\\\\e\r\nxamples\\\\resnet18\\\\unknown_data.sh']' returned non-zero exit status 127.\r\n\r\n----------------------------------------------------------------------\r\nRan 5 tests in 290.327s\r\n\r\nFAILED (errors=5)\r\nTest failed: <unittest.runner.TextTestResult run=5 errors=5 failures=0>\r\nerror: Test failed: <unittest.runner.TextTestResult run=5 errors=5 failures=0>\r\n```","reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/comments/728883176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"yashlamba","id":44164398,"node_id":"MDQ6VXNlcjQ0MTY0Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/44164398?v=4","gravatar_id":"","url":"https://api.github.com/users/yashlamba","html_url":"https://github.com/yashlamba","followers_url":"https://api.github.com/users/yashlamba/followers","following_url":"https://api.github.com/users/yashlamba/following{/other_user}","gists_url":"https://api.github.com/users/yashlamba/gists{/gist_id}","starred_url":"https://api.github.com/users/yashlamba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yashlamba/subscriptions","organizations_url":"https://api.github.com/users/yashlamba/orgs","repos_url":"https://api.github.com/users/yashlamba/repos","events_url":"https://api.github.com/users/yashlamba/events{/privacy}","received_events_url":"https://api.github.com/users/yashlamba/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/intel/dffml/issues/comments/728885904","html_url":"https://github.com/intel/dffml/issues/892#issuecomment-728885904","issue_url":"https://api.github.com/repos/intel/dffml/issues/892","id":728885904,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODg4NTkwNA==","user":{"login":"yashlamba","id":44164398,"node_id":"MDQ6VXNlcjQ0MTY0Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/44164398?v=4","gravatar_id":"","url":"https://api.github.com/users/yashlamba","html_url":"https://github.com/yashlamba","followers_url":"https://api.github.com/users/yashlamba/followers","following_url":"https://api.github.com/users/yashlamba/following{/other_user}","gists_url":"https://api.github.com/users/yashlamba/gists{/gist_id}","starred_url":"https://api.github.com/users/yashlamba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yashlamba/subscriptions","organizations_url":"https://api.github.com/users/yashlamba/orgs","repos_url":"https://api.github.com/users/yashlamba/repos","events_url":"https://api.github.com/users/yashlamba/events{/privacy}","received_events_url":"https://api.github.com/users/yashlamba/received_events","type":"User","site_admin":false},"created_at":"2020-11-17T12:10:17Z","updated_at":"2020-11-17T12:10:17Z","author_association":"CONTRIBUTOR","body":"**dffml-model-spacy**\r\nAll tests are fine except one and that might just be because I wasn't using a bash terminal. Putting this here just for the record and note for CI:\r\n\r\n```console\r\n======================================================================\r\nERROR: test_run (tests.test_ner_integration.TestSpacyNERModel)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\dffml\\util\\asynctestcase.py\", line 69, in run_it\r\n    result = self.loop.run_until_complete(coro(*args, **kwargs))\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 616, in run_until_compl\r\nete\r\n    return future.result()\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\spacy\\tests\\test_ner_integration.py\", line 212, in test_run\r\n    with directory_with_csv_files() as tempdir:\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\contextlib.py\", line 113, in __enter__\r\n    return next(self.gen)\r\n  File \"c:\\users\\yashl\\main\\projects\\dffml\\model\\spacy\\tests\\test_ner_integration.py\", line 25, in directory_with_csv_f\r\niles\r\n    subprocess.check_output(\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 411, in check_output\r\n    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,\r\n  File \"C:\\Users\\yashl\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 512, in run\r\n    raise CalledProcessError(retcode, process.args,\r\nsubprocess.CalledProcessError: Command '['bash', 'c:\\\\users\\\\yashl\\\\main\\\\projects\\\\dffml\\\\model\\\\spacy\\\\examples\\\\ner\\\r\n\\train_data.sh']' returned non-zero exit status 127.\r\n\r\n----------------------------------------------------------------------\r\nRan 5 tests in 31.055s\r\n\r\nFAILED (errors=1)\r\nTest failed: <unittest.runner.TextTestResult run=5 errors=1 failures=0>\r\nerror: Test failed: <unittest.runner.TextTestResult run=5 errors=1 failures=0>\r\n```","reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/comments/728885904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"yashlamba","id":44164398,"node_id":"MDQ6VXNlcjQ0MTY0Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/44164398?v=4","gravatar_id":"","url":"https://api.github.com/users/yashlamba","html_url":"https://github.com/yashlamba","followers_url":"https://api.github.com/users/yashlamba/followers","following_url":"https://api.github.com/users/yashlamba/following{/other_user}","gists_url":"https://api.github.com/users/yashlamba/gists{/gist_id}","starred_url":"https://api.github.com/users/yashlamba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yashlamba/subscriptions","organizations_url":"https://api.github.com/users/yashlamba/orgs","repos_url":"https://api.github.com/users/yashlamba/repos","events_url":"https://api.github.com/users/yashlamba/events{/privacy}","received_events_url":"https://api.github.com/users/yashlamba/received_events","type":"User","site_admin":false}},{"actor":{"login":"yashlamba","id":44164398,"node_id":"MDQ6VXNlcjQ0MTY0Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/44164398?v=4","gravatar_id":"","url":"https://api.github.com/users/yashlamba","html_url":"https://github.com/yashlamba","followers_url":"https://api.github.com/users/yashlamba/followers","following_url":"https://api.github.com/users/yashlamba/following{/other_user}","gists_url":"https://api.github.com/users/yashlamba/gists{/gist_id}","starred_url":"https://api.github.com/users/yashlamba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yashlamba/subscriptions","organizations_url":"https://api.github.com/users/yashlamba/orgs","repos_url":"https://api.github.com/users/yashlamba/repos","events_url":"https://api.github.com/users/yashlamba/events{/privacy}","received_events_url":"https://api.github.com/users/yashlamba/received_events","type":"User","site_admin":false},"created_at":"2020-11-17T12:18:28Z","updated_at":"2020-11-17T12:18:28Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/intel/dffml/issues/898","repository_url":"https://api.github.com/repos/intel/dffml","labels_url":"https://api.github.com/repos/intel/dffml/issues/898/labels{/name}","comments_url":"https://api.github.com/repos/intel/dffml/issues/898/comments","events_url":"https://api.github.com/repos/intel/dffml/issues/898/events","html_url":"https://github.com/intel/dffml/pull/898","id":744684495,"node_id":"MDExOlB1bGxSZXF1ZXN0NTIyMzY2MjMw","number":898,"title":"ci: Don't skip model/vowpalwabbit","user":{"login":"yashlamba","id":44164398,"node_id":"MDQ6VXNlcjQ0MTY0Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/44164398?v=4","gravatar_id":"","url":"https://api.github.com/users/yashlamba","html_url":"https://github.com/yashlamba","followers_url":"https://api.github.com/users/yashlamba/followers","following_url":"https://api.github.com/users/yashlamba/following{/other_user}","gists_url":"https://api.github.com/users/yashlamba/gists{/gist_id}","starred_url":"https://api.github.com/users/yashlamba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yashlamba/subscriptions","organizations_url":"https://api.github.com/users/yashlamba/orgs","repos_url":"https://api.github.com/users/yashlamba/repos","events_url":"https://api.github.com/users/yashlamba/events{/privacy}","received_events_url":"https://api.github.com/users/yashlamba/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-11-17T12:18:28Z","updated_at":"2020-11-19T16:33:16Z","closed_at":"2020-11-19T16:33:16Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"repository":{"id":149512216,"node_id":"MDEwOlJlcG9zaXRvcnkxNDk1MTIyMTY=","name":"dffml","full_name":"intel/dffml","private":false,"owner":{"login":"intel","id":17888862,"node_id":"MDEyOk9yZ2FuaXphdGlvbjE3ODg4ODYy","avatar_url":"https://avatars.githubusercontent.com/u/17888862?v=4","gravatar_id":"","url":"https://api.github.com/users/intel","html_url":"https://github.com/intel","followers_url":"https://api.github.com/users/intel/followers","following_url":"https://api.github.com/users/intel/following{/other_user}","gists_url":"https://api.github.com/users/intel/gists{/gist_id}","starred_url":"https://api.github.com/users/intel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intel/subscriptions","organizations_url":"https://api.github.com/users/intel/orgs","repos_url":"https://api.github.com/users/intel/repos","events_url":"https://api.github.com/users/intel/events{/privacy}","received_events_url":"https://api.github.com/users/intel/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/intel/dffml","description":"The easiest way to use Machine Learning. Mix and match underlying ML libraries and data set sources. Generate new datasets or modify existing ones with ease.","fork":false,"url":"https://api.github.com/repos/intel/dffml","forks_url":"https://api.github.com/repos/intel/dffml/forks","keys_url":"https://api.github.com/repos/intel/dffml/keys{/key_id}","collaborators_url":"https://api.github.com/repos/intel/dffml/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/intel/dffml/teams","hooks_url":"https://api.github.com/repos/intel/dffml/hooks","issue_events_url":"https://api.github.com/repos/intel/dffml/issues/events{/number}","events_url":"https://api.github.com/repos/intel/dffml/events","assignees_url":"https://api.github.com/repos/intel/dffml/assignees{/user}","branches_url":"https://api.github.com/repos/intel/dffml/branches{/branch}","tags_url":"https://api.github.com/repos/intel/dffml/tags","blobs_url":"https://api.github.com/repos/intel/dffml/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/intel/dffml/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/intel/dffml/git/refs{/sha}","trees_url":"https://api.github.com/repos/intel/dffml/git/trees{/sha}","statuses_url":"https://api.github.com/repos/intel/dffml/statuses/{sha}","languages_url":"https://api.github.com/repos/intel/dffml/languages","stargazers_url":"https://api.github.com/repos/intel/dffml/stargazers","contributors_url":"https://api.github.com/repos/intel/dffml/contributors","subscribers_url":"https://api.github.com/repos/intel/dffml/subscribers","subscription_url":"https://api.github.com/repos/intel/dffml/subscription","commits_url":"https://api.github.com/repos/intel/dffml/commits{/sha}","git_commits_url":"https://api.github.com/repos/intel/dffml/git/commits{/sha}","comments_url":"https://api.github.com/repos/intel/dffml/comments{/number}","issue_comment_url":"https://api.github.com/repos/intel/dffml/issues/comments{/number}","contents_url":"https://api.github.com/repos/intel/dffml/contents/{+path}","compare_url":"https://api.github.com/repos/intel/dffml/compare/{base}...{head}","merges_url":"https://api.github.com/repos/intel/dffml/merges","archive_url":"https://api.github.com/repos/intel/dffml/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/intel/dffml/downloads","issues_url":"https://api.github.com/repos/intel/dffml/issues{/number}","pulls_url":"https://api.github.com/repos/intel/dffml/pulls{/number}","milestones_url":"https://api.github.com/repos/intel/dffml/milestones{/number}","notifications_url":"https://api.github.com/repos/intel/dffml/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/intel/dffml/labels{/name}","releases_url":"https://api.github.com/repos/intel/dffml/releases{/id}","deployments_url":"https://api.github.com/repos/intel/dffml/deployments","created_at":"2018-09-19T21:06:34Z","updated_at":"2023-01-17T12:33:57Z","pushed_at":"2023-01-18T17:27:44Z","git_url":"git://github.com/intel/dffml.git","ssh_url":"git@github.com:intel/dffml.git","clone_url":"https://github.com/intel/dffml.git","svn_url":"https://github.com/intel/dffml","homepage":"https://intel.github.io/dffml/main/","size":602603,"stargazers_count":201,"watchers_count":201,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":145,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":386,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["ai-inference","ai-machine-learning","ai-training","analytics","asyncio","dag","data-flow","dataflows","datasets","dffml","event-based","flow-based-programming","frameworks","hyperautomation","libraries","machine-learning","models","pipelines","python","swrepo"],"visibility":"public","forks":145,"open_issues":386,"watchers":201,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/intel/dffml/pulls/898","html_url":"https://github.com/intel/dffml/pull/898","diff_url":"https://github.com/intel/dffml/pull/898.diff","patch_url":"https://github.com/intel/dffml/pull/898.patch","merged_at":"2020-11-19T16:33:16Z"},"body":"Re-tested during #892","reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/intel/dffml/issues/898/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"actor":{"login":"yashlamba","id":44164398,"node_id":"MDQ6VXNlcjQ0MTY0Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/44164398?v=4","gravatar_id":"","url":"https://api.github.com/users/yashlamba","html_url":"https://github.com/yashlamba","followers_url":"https://api.github.com/users/yashlamba/followers","following_url":"https://api.github.com/users/yashlamba/following{/other_user}","gists_url":"https://api.github.com/users/yashlamba/gists{/gist_id}","starred_url":"https://api.github.com/users/yashlamba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yashlamba/subscriptions","organizations_url":"https://api.github.com/users/yashlamba/orgs","repos_url":"https://api.github.com/users/yashlamba/repos","events_url":"https://api.github.com/users/yashlamba/events{/privacy}","received_events_url":"https://api.github.com/users/yashlamba/received_events","type":"User","site_admin":false},"created_at":"2020-11-20T11:05:26Z","updated_at":"2020-11-20T11:05:26Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/intel/dffml/issues/901","repository_url":"https://api.github.com/repos/intel/dffml","labels_url":"https://api.github.com/repos/intel/dffml/issues/901/labels{/name}","comments_url":"https://api.github.com/repos/intel/dffml/issues/901/comments","events_url":"https://api.github.com/repos/intel/dffml/issues/901/events","html_url":"https://github.com/intel/dffml/issues/901","id":747399210,"node_id":"MDU6SXNzdWU3NDczOTkyMTA=","number":901,"title":"plugins: Track/Fix support for Windows","user":{"login":"yashlamba","id":44164398,"node_id":"MDQ6VXNlcjQ0MTY0Mzk4","avatar_url":"https://avatars.githubusercontent.com/u/44164398?v=4","gravatar_id":"","url":"https://api.github.com/users/yashlamba","html_url":"https://github.com/yashlamba","followers_url":"https://api.github.com/users/yashlamba/followers","following_url":"https://api.github.com/users/yashlamba/following{/other_user}","gists_url":"https://api.github.com/users/yashlamba/gists{/gist_id}","starred_url":"https://api.github.com/users/yashlamba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yashlamba/subscriptions","organizations_url":"https://api.github.com/users/yashlamba/orgs","repos_url":"https://api.github.com/users/yashlamba/repos","events_url":"https://api.github.com/users/yashlamba/events{/privacy}","received_events_url":"https://api.github.com/users/yashlamba/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-20T11:05:26Z","updated_at":"2020-12-23T14:51:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"repository":{"id":149512216,"node_id":"MDEwOlJlcG9zaXRvcnkxNDk1MTIyMTY=","name":"dffml","full_name":"intel/dffml","private":false,"owner":{"login":"intel","id":17888862,"node_id":"MDEyOk9yZ2FuaXphdGlvbjE3ODg4ODYy","avatar_url":"https://avatars.githubusercontent.com/u/17888862?v=4","gravatar_id":"","url":"https://api.github.com/users/intel","html_url":"https://github.com/intel","followers_url":"https://api.github.com/users/intel/followers","following_url":"https://api.github.com/users/intel/following{/other_user}","gists_url":"https://api.github.com/users/intel/gists{/gist_id}","starred_url":"https://api.github.com/users/intel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intel/subscriptions","organizations_url":"https://api.github.com/users/intel/orgs","repos_url":"https://api.github.com/users/intel/repos","events_url":"https://api.github.com/users/intel/events{/privacy}","received_events_url":"https://api.github.com/users/intel/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/intel/dffml","description":"The easiest way to use Machine Learning. Mix and match underlying ML libraries and data set sources. Generate new datasets or modify existing ones with ease.","fork":false,"url":"https://api.github.com/repos/intel/dffml","forks_url":"https://api.github.com/repos/intel/dffml/forks","keys_url":"https://api.github.com/repos/intel/dffml/keys{/key_id}","collaborators_url":"https://api.github.com/repos/intel/dffml/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/intel/dffml/teams","hooks_url":"https://api.github.com/repos/intel/dffml/hooks","issue_events_url":"https://api.github.com/repos/intel/dffml/issues/events{/number}","events_url":"https://api.github.com/repos/intel/dffml/events","assignees_url":"https://api.github.com/repos/intel/dffml/assignees{/user}","branches_url":"https://api.github.com/repos/intel/dffml/branches{/branch}","tags_url":"https://api.github.com/repos/intel/dffml/tags","blobs_url":"https://api.github.com/repos/intel/dffml/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/intel/dffml/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/intel/dffml/git/refs{/sha}","trees_url":"https://api.github.com/repos/intel/dffml/git/trees{/sha}","statuses_url":"https://api.github.com/repos/intel/dffml/statuses/{sha}","languages_url":"https://api.github.com/repos/intel/dffml/languages","stargazers_url":"https://api.github.com/repos/intel/dffml/stargazers","contributors_url":"https://api.github.com/repos/intel/dffml/contributors","subscribers_url":"https://api.github.com/repos/intel/dffml/subscribers","subscription_url":"https://api.github.com/repos/intel/dffml/subscription","commits_url":"https://api.github.com/repos/intel/dffml/commits{/sha}","git_commits_url":"https://api.github.com/repos/intel/dffml/git/commits{/sha}","comments_url":"https://api.github.com/repos/intel/dffml/comments{/number}","issue_comment_url":"https://api.github.com/repos/intel/dffml/issues/comments{/number}","contents_url":"https://api.github.com/repos/intel/dffml/contents/{+path}","compare_url":"https://api.github.com/repos/intel/dffml/compare/{base}...{head}","merges_url":"https://api.github.com/repos/intel/dffml/merges","archive_url":"https://api.github.com/repos/intel/dffml/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/intel/dffml/downloads","issues_url":"https://api.github.com/repos/intel/dffml/issues{/number}","pulls_url":"https://api.github.com/repos/intel/dffml/pulls{/number}","milestones_url":"https://api.github.com/repos/intel/dffml/milestones{/number}","notifications_url":"https://api.github.com/repos/intel/dffml/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/intel/dffml/labels{/name}","releases_url":"https://api.github.com/repos/intel/dffml/releases{/id}","deployments_url":"https://api.github.com/repos/intel/dffml/deployments","created_at":"2018-09-19T21:06:34Z","updated_at":"2023-01-17T12:33:57Z","pushed_at":"2023-01-18T17:27:44Z","git_url":"git://github.com/intel/dffml.git","ssh_url":"git@github.com:intel/dffml.git","clone_url":"https://github.com/intel/dffml.git","svn_url":"https://github.com/intel/dffml","homepage":"https://intel.github.io/dffml/main/","size":602603,"stargazers_count":201,"watchers_count":201,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":145,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":386,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["ai-inference","ai-machine-learning","ai-training","analytics","asyncio","dag","data-flow","dataflows","datasets","dffml","event-based","flow-based-programming","frameworks","hyperautomation","libraries","machine-learning","models","pipelines","python","swrepo"],"visibility":"public","forks":145,"open_issues":386,"watchers":201,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"Continuation of #892 which is specifically for model plugins.\r\n- [x] configloader/yaml ✔\r\n- [x] configloader/image ✔\r\n- [ ] examples/shouldi\r\n- [ ] feature/git \r\n- [x] feature/auth ✔\r\n- [x] operations/binsec ✔\r\n- [ ] operations/deploy \r\n- [x] operations/image ✔\r\n- [x] operations/nlp ⚠\r\n- [x] service/http ⚠\r\n- [x] source/mysql ❌ (Uses Docker)","reactions":{"url":"https://api.github.com/repos/intel/dffml/issues/901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/intel/dffml/issues/901/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"}]