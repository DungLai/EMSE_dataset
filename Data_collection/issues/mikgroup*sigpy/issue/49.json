{"url":"https://api.github.com/repos/mikgroup/sigpy/issues/49","repository_url":"https://api.github.com/repos/mikgroup/sigpy","labels_url":"https://api.github.com/repos/mikgroup/sigpy/issues/49/labels{/name}","comments_url":"https://api.github.com/repos/mikgroup/sigpy/issues/49/comments","events_url":"https://api.github.com/repos/mikgroup/sigpy/issues/49/events","html_url":"https://github.com/mikgroup/sigpy/issues/49","id":615903000,"node_id":"MDU6SXNzdWU2MTU5MDMwMDA=","number":49,"title":"[Memory managment] Deallocating GPU variables and freeing memory","user":{"login":"mscipio","id":17526160,"node_id":"MDQ6VXNlcjE3NTI2MTYw","avatar_url":"https://avatars.githubusercontent.com/u/17526160?v=4","gravatar_id":"","url":"https://api.github.com/users/mscipio","html_url":"https://github.com/mscipio","followers_url":"https://api.github.com/users/mscipio/followers","following_url":"https://api.github.com/users/mscipio/following{/other_user}","gists_url":"https://api.github.com/users/mscipio/gists{/gist_id}","starred_url":"https://api.github.com/users/mscipio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mscipio/subscriptions","organizations_url":"https://api.github.com/users/mscipio/orgs","repos_url":"https://api.github.com/users/mscipio/repos","events_url":"https://api.github.com/users/mscipio/events{/privacy}","received_events_url":"https://api.github.com/users/mscipio/received_events","type":"User","site_admin":false},"labels":[{"id":983094941,"node_id":"MDU6TGFiZWw5ODMwOTQ5NDE=","url":"https://api.github.com/repos/mikgroup/sigpy/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-05-11T13:52:56Z","updated_at":"2021-08-18T23:54:43Z","closed_at":"2021-08-18T23:54:43Z","author_association":"NONE","active_lock_reason":null,"body":"I don't know if this is of interest, or if you are aware of this behavior, but I thought I would mentioned it here, in case anyone was struggling with this \"bug\" ...\r\n\r\n**Describe the bug**\r\nWhen creating an instance of an 'app' class, we pass to the `__init__ `function all the input variables needed to create an instance of an 'alg'. If using a GPU, this sends a lot of data (i.e. coord, weights, ...) to the GPU's RAM memory. \r\nRunning the `run()` method, we can then perform the optimization and get back the result. However, the memory allocated on the GPU is not freed automatically. Furthermore, even if we delete to instance of the app class, after completing the optimization, part of that memory remain allocated, untill we restart the python kernel. At least, this is what happens using python notebooks.\r\n\r\n**A few notes:**\r\n- the only algorithm no affected by this, which is able to correctly free GPU's memory is Conjugate Gradient. I haven't been able to figure out why.\r\n- To check the memory used by your app you may do as follows:\r\n -- create a subclass of `sp.app.LinearLeastSquares`\r\n -- in the `__init__()` method add the following lines: \r\n\r\n```python\r\nimport cupy\r\nself.mempool = cupy.get_default_memory_pool()\r\nself.pinned_mempool = cupy.get_default_pinned_memory_pool()\r\n```\r\n -- then define a `_post_update(self)` method as:\r\n```python\r\ndef _post_update(self):\r\n        print(self.mempool.used_bytes())              \r\n        print(self.mempool.total_bytes())             \r\n        print(self.pinned_mempool.n_free_blocks())\r\n        return\r\n```\r\nYou will se that after each `alg.update()`, the memory occupancy keeps growing.\r\nAfter the `run()` is finished you can delete the instance of the app, but such memory will remain flagged.\r\n\r\nThe only way I found so far to overcome this issue is to add a `del self.alg` to the `__output(self) `method of the app: \r\n```python\r\ndef _output(self):\r\n        x = sp.to_device(self.x, sp.cpu_device)\r\n        del self.x\r\n        del self.alg\r\n        return x\r\n```\r\nthis seems like the only way to me to deallocate all the structures created by the algorithm on the GPU.\r\n\r\n","closed_by":{"login":"sidward","id":7364812,"node_id":"MDQ6VXNlcjczNjQ4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7364812?v=4","gravatar_id":"","url":"https://api.github.com/users/sidward","html_url":"https://github.com/sidward","followers_url":"https://api.github.com/users/sidward/followers","following_url":"https://api.github.com/users/sidward/following{/other_user}","gists_url":"https://api.github.com/users/sidward/gists{/gist_id}","starred_url":"https://api.github.com/users/sidward/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sidward/subscriptions","organizations_url":"https://api.github.com/users/sidward/orgs","repos_url":"https://api.github.com/users/sidward/repos","events_url":"https://api.github.com/users/sidward/events{/privacy}","received_events_url":"https://api.github.com/users/sidward/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mikgroup/sigpy/issues/49/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mikgroup/sigpy/issues/49/timeline","performed_via_github_app":null,"state_reason":"completed"}