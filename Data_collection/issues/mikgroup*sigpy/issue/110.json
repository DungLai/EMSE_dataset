{"url":"https://api.github.com/repos/mikgroup/sigpy/issues/110","repository_url":"https://api.github.com/repos/mikgroup/sigpy","labels_url":"https://api.github.com/repos/mikgroup/sigpy/issues/110/labels{/name}","comments_url":"https://api.github.com/repos/mikgroup/sigpy/issues/110/comments","events_url":"https://api.github.com/repos/mikgroup/sigpy/issues/110/events","html_url":"https://github.com/mikgroup/sigpy/issues/110","id":1242447780,"node_id":"I_kwDOCFKrHc5KDj-k","number":110,"title":"A method for validating adjoint implementation of a linear operation","user":{"login":"tianrluo","id":7621354,"node_id":"MDQ6VXNlcjc2MjEzNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/7621354?v=4","gravatar_id":"","url":"https://api.github.com/users/tianrluo","html_url":"https://github.com/tianrluo","followers_url":"https://api.github.com/users/tianrluo/followers","following_url":"https://api.github.com/users/tianrluo/following{/other_user}","gists_url":"https://api.github.com/users/tianrluo/gists{/gist_id}","starred_url":"https://api.github.com/users/tianrluo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianrluo/subscriptions","organizations_url":"https://api.github.com/users/tianrluo/orgs","repos_url":"https://api.github.com/users/tianrluo/repos","events_url":"https://api.github.com/users/tianrluo/events{/privacy}","received_events_url":"https://api.github.com/users/tianrluo/received_events","type":"User","site_admin":false},"labels":[{"id":983094943,"node_id":"MDU6TGFiZWw5ODMwOTQ5NDM=","url":"https://api.github.com/repos/mikgroup/sigpy/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-05-20T00:11:38Z","updated_at":"2022-05-20T00:37:39Z","closed_at":"2022-05-20T00:29:32Z","author_association":"NONE","active_lock_reason":null,"body":"Hey folks,\r\n\r\nThanks for creating this awesome tool!\r\n\r\nI was wondering if you'd be interested in including a general method that may facilitate validation of adjoint linear operations.\r\nSomething as simple as checking if <d, Ap> == <A^H d, p> holds for a pair of primal/dual random vectors {p, d}.\r\nI thought such feature could ease common developments, e.g., checking if the adjoint of a multi-dim spatial difference operator is correctly implemented.\r\n(My apologize if it already exists and I've missed it.) \r\n\r\nI feel like the following patch can do the trick, but am not so sure if it's compatible with things like different backends, etc.\r\n\r\n```diff\r\nFrom e88c3fdf0e8dd3db5e38b722316453b0d3ea8d74 Mon Sep 17 00:00:00 2001\r\nFrom: <tianrluo@users.noreply.github.com>\r\nDate: Thu, 19 May 2022 19:56:24 -0400\r\nSubject: [PATCH] A tool for adjoint operator validation.\r\n\r\n---\r\n sigpy/linop.py | 17 +++++++++++++++++\r\n 1 file changed, 17 insertions(+)\r\n\r\ndiff --git a/sigpy/linop.py b/sigpy/linop.py\r\nindex 0efd1af..cdfd533 100644\r\n--- a/sigpy/linop.py\r\n+++ b/sigpy/linop.py\r\n@@ -109,6 +109,23 @@ class Linop():\r\n     def _normal_linop(self):\r\n         return self.H * self\r\n\r\n+    def _valid_adjoint(self, rtol=1e-05, atol=1e-08, equal_nan=False) -> bool:\r\n+        \"\"\"Validate if adjoint is correctly implemented\r\n+\r\n+        For random primal/dual vectors, {p, d}, expect <d, Ap> == <Aᴴd, p>.\r\n+        \"\"\"\r\n+        p1 = np.random.randn(self.ishape)+1j*np.random.randn(self.ishape)\r\n+        d1 = self.apply(p1)\r\n+\r\n+        d2 = np.random.randn(self.oshape)+1j*np.random.randn(self.oshape)\r\n+        p2 = self.H.apply(d2)\r\n+\r\n+        res_fwd = (d2.ravel()).conj().T @ d1.ravel()  # <  d, Ap>\r\n+        res_adj = (p2.ravel()).conj().T @ p1.ravel()  # <Aᴴd,  p>\r\n+\r\n+        return np.isclose(res_fwd, res_adj,\r\n+                          rtol=rtol, atol=atol, equal_nan=equal_nan)\r\n+\r\n     @property\r\n     def H(self):\r\n         r\"\"\"Return adjoint linear operator.\r\n--\r\n2.25.1\r\n```\r\n\r\nThanks!","closed_by":{"login":"sidward","id":7364812,"node_id":"MDQ6VXNlcjczNjQ4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7364812?v=4","gravatar_id":"","url":"https://api.github.com/users/sidward","html_url":"https://github.com/sidward","followers_url":"https://api.github.com/users/sidward/followers","following_url":"https://api.github.com/users/sidward/following{/other_user}","gists_url":"https://api.github.com/users/sidward/gists{/gist_id}","starred_url":"https://api.github.com/users/sidward/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sidward/subscriptions","organizations_url":"https://api.github.com/users/sidward/orgs","repos_url":"https://api.github.com/users/sidward/repos","events_url":"https://api.github.com/users/sidward/events{/privacy}","received_events_url":"https://api.github.com/users/sidward/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mikgroup/sigpy/issues/110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mikgroup/sigpy/issues/110/timeline","performed_via_github_app":null,"state_reason":"completed"}