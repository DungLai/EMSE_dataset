{"url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/79","repository_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence","labels_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/79/labels{/name}","comments_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/79/comments","events_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/79/events","html_url":"https://github.com/RobotLocomotion/pytorch-dense-correspondence/issues/79","id":317659342,"node_id":"MDU6SXNzdWUzMTc2NTkzNDI=","number":79,"title":"What is our segmentation network really doing?","user":{"login":"manuelli","id":5898488,"node_id":"MDQ6VXNlcjU4OTg0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5898488?v=4","gravatar_id":"","url":"https://api.github.com/users/manuelli","html_url":"https://github.com/manuelli","followers_url":"https://api.github.com/users/manuelli/followers","following_url":"https://api.github.com/users/manuelli/following{/other_user}","gists_url":"https://api.github.com/users/manuelli/gists{/gist_id}","starred_url":"https://api.github.com/users/manuelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manuelli/subscriptions","organizations_url":"https://api.github.com/users/manuelli/orgs","repos_url":"https://api.github.com/users/manuelli/repos","events_url":"https://api.github.com/users/manuelli/events{/privacy}","received_events_url":"https://api.github.com/users/manuelli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-25T14:41:34Z","updated_at":"2018-08-02T20:14:16Z","closed_at":"2018-08-02T20:14:16Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Just a sandbox issue to record some of what I have learned about segmentation networks.\r\n\r\n- We are using the network ResNet34_8s network from WSW (warmspringwinds). See [here](https://github.com/warmspringwinds/pytorch-segmentation-detection/blob/d6e7e8242ba72b7e53cee6703348de2d5ccc81e5/pytorch_segmentation_detection/models/resnet_dilated.py#L235). This achieves 68% mIoU on RV-VOC12. This network is a (simplified) implementation of a network in [this](https://arxiv.org/pdf/1606.00915.pdf) paper.\r\n\r\n- We are using `output_stride=8`. Hence the Resnet34_8s takes a `[H,W,3]` tensor and maps it to a `[H/8, W/8, K]` tensor where `K` is the feature size. I need to check but I think that `K = 512` for the ResNet34.\r\n\r\n- This blog [post](http://blog.qure.ai/notes/semantic-segmentation-deep-learning-review) provides a good overview of the different segmentation networks.\r\n\r\n- For a detailed look at \"transposed convolutions\" (aka atrous convolution) which is just a convolutional way of doing upsampling see [here](https://towardsdatascience.com/up-sampling-with-transposed-convolution-9ae4f2df52d0)\r\n\r\n- This [post](http://warmspringwinds.github.io/tensorflow/tf-slim/2016/11/22/upsampling-and-image-segmentation-with-tensorflow-and-tf-slim/) by WSW describes image segmentation and upsampling.","closed_by":{"login":"manuelli","id":5898488,"node_id":"MDQ6VXNlcjU4OTg0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5898488?v=4","gravatar_id":"","url":"https://api.github.com/users/manuelli","html_url":"https://github.com/manuelli","followers_url":"https://api.github.com/users/manuelli/followers","following_url":"https://api.github.com/users/manuelli/following{/other_user}","gists_url":"https://api.github.com/users/manuelli/gists{/gist_id}","starred_url":"https://api.github.com/users/manuelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manuelli/subscriptions","organizations_url":"https://api.github.com/users/manuelli/orgs","repos_url":"https://api.github.com/users/manuelli/repos","events_url":"https://api.github.com/users/manuelli/events{/privacy}","received_events_url":"https://api.github.com/users/manuelli/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/79/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/79/timeline","performed_via_github_app":null,"state_reason":"completed"}