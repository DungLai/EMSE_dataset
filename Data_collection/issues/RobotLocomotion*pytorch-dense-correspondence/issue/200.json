{"url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/200","repository_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence","labels_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/200/labels{/name}","comments_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/200/comments","events_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/200/events","html_url":"https://github.com/RobotLocomotion/pytorch-dense-correspondence/issues/200","id":462614472,"node_id":"MDU6SXNzdWU0NjI2MTQ0NzI=","number":200,"title":"Problem with training_tutorial.ipynb","user":{"login":"kevinkengne","id":37625908,"node_id":"MDQ6VXNlcjM3NjI1OTA4","avatar_url":"https://avatars.githubusercontent.com/u/37625908?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinkengne","html_url":"https://github.com/kevinkengne","followers_url":"https://api.github.com/users/kevinkengne/followers","following_url":"https://api.github.com/users/kevinkengne/following{/other_user}","gists_url":"https://api.github.com/users/kevinkengne/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinkengne/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinkengne/subscriptions","organizations_url":"https://api.github.com/users/kevinkengne/orgs","repos_url":"https://api.github.com/users/kevinkengne/repos","events_url":"https://api.github.com/users/kevinkengne/events{/privacy}","received_events_url":"https://api.github.com/users/kevinkengne/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-07-01T09:39:22Z","updated_at":"2020-03-18T10:55:54Z","closed_at":"2019-07-01T11:11:53Z","author_association":"NONE","active_lock_reason":null,"body":"dense_correspondence/dataset/simple_datasets_test.ipynb runs fine. However, I get the following error when I run dense_correspondence/training/training_tutorial.ipynb:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-77b56ac20ed4> in <module>()\r\n      5     print \"training descriptor of dimension %d\" %(d)\r\n      6     train = DenseCorrespondenceTraining(dataset=dataset, config=train_config)\r\n----> 7     train.run()\r\n      8     print \"finished training descriptor of dimension %d\" %(d)\r\n\r\n/home/kevink/code/dense_correspondence/training/training.pyc in run(self, loss_current_iteration, use_pretrained)\r\n    242         if not use_pretrained:\r\n    243             # create new network and optimizer\r\n--> 244             self._dcn = self.build_network()\r\n    245             self._optimizer = self._construct_optimizer(self._dcn.parameters())\r\n    246         else:\r\n\r\n/home/kevink/code/dense_correspondence/training/training.pyc in build_network(self)\r\n    129 \r\n    130         return DenseCorrespondenceNetwork.from_config(self._config['dense_correspondence_network'],\r\n--> 131                                                       load_stored_params=False)\r\n    132 \r\n    133     def _construct_optimizer(self, parameters):\r\n\r\n/home/kevink/code/dense_correspondence/network/dense_correspondence_network.pyc in from_config(config, load_stored_params, model_param_file)\r\n    412             config[\"backbone\"][\"resnet_name\"] = \"Resnet34_8s\"\r\n    413 \r\n--> 414         fcn = DenseCorrespondenceNetwork.get_fcn(config)\r\n    415 \r\n    416         if 'normalize' in config:\r\n\r\n/home/kevink/code/dense_correspondence/network/dense_correspondence_network.pyc in get_fcn(config)\r\n    373         if config[\"backbone\"][\"model_class\"] == \"Resnet\":\r\n    374             resnet_model = config[\"backbone\"][\"resnet_name\"]\r\n--> 375             fcn = getattr(resnet_dilated, resnet_model)(num_classes=config['descriptor_dimension'])\r\n    376 \r\n    377         elif config[\"backbone\"][\"model_class\"] == \"Unet\":\r\n\r\n/home/kevink/code/external/pytorch-segmentation-detection/pytorch_segmentation_detection/models/resnet_dilated.py in __init__(self, num_classes)\r\n    245                                        pretrained=True,\r\n    246                                        output_stride=8,\r\n--> 247                                        remove_avg_pool_layer=True)\r\n    248 \r\n    249         # Randomly initialize the 1x1 Conv scoring layer\r\n\r\n/usr/local/lib/python2.7/dist-packages/torchvision/models/resnet.pyc in resnet34(pretrained, progress, **kwargs)\r\n    235     \"\"\"\r\n    236     return _resnet('resnet34', BasicBlock, [3, 4, 6, 3], pretrained, progress,\r\n--> 237                    **kwargs)\r\n    238 \r\n    239 \r\n\r\n/usr/local/lib/python2.7/dist-packages/torchvision/models/resnet.pyc in _resnet(arch, block, layers, pretrained, progress, **kwargs)\r\n    208 \r\n    209 def _resnet(arch, block, layers, pretrained, progress, **kwargs):\r\n--> 210     model = ResNet(block, layers, **kwargs)\r\n    211     if pretrained:\r\n    212         state_dict = load_state_dict_from_url(model_urls[arch],\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'fully_conv'\r\n","closed_by":{"login":"kevinkengne","id":37625908,"node_id":"MDQ6VXNlcjM3NjI1OTA4","avatar_url":"https://avatars.githubusercontent.com/u/37625908?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinkengne","html_url":"https://github.com/kevinkengne","followers_url":"https://api.github.com/users/kevinkengne/followers","following_url":"https://api.github.com/users/kevinkengne/following{/other_user}","gists_url":"https://api.github.com/users/kevinkengne/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinkengne/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinkengne/subscriptions","organizations_url":"https://api.github.com/users/kevinkengne/orgs","repos_url":"https://api.github.com/users/kevinkengne/repos","events_url":"https://api.github.com/users/kevinkengne/events{/privacy}","received_events_url":"https://api.github.com/users/kevinkengne/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/200/timeline","performed_via_github_app":null,"state_reason":"completed"}