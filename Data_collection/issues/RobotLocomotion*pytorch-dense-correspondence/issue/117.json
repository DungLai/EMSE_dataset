{"url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/117","repository_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence","labels_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/117/labels{/name}","comments_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/117/comments","events_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/117/events","html_url":"https://github.com/RobotLocomotion/pytorch-dense-correspondence/issues/117","id":320107950,"node_id":"MDU6SXNzdWUzMjAxMDc5NTA=","number":117,"title":"Loss function error","user":{"login":"manuelli","id":5898488,"node_id":"MDQ6VXNlcjU4OTg0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5898488?v=4","gravatar_id":"","url":"https://api.github.com/users/manuelli","html_url":"https://github.com/manuelli","followers_url":"https://api.github.com/users/manuelli/followers","following_url":"https://api.github.com/users/manuelli/following{/other_user}","gists_url":"https://api.github.com/users/manuelli/gists{/gist_id}","starred_url":"https://api.github.com/users/manuelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manuelli/subscriptions","organizations_url":"https://api.github.com/users/manuelli/orgs","repos_url":"https://api.github.com/users/manuelli/repos","events_url":"https://api.github.com/users/manuelli/events{/privacy}","received_events_url":"https://api.github.com/users/manuelli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-05-03T22:59:41Z","updated_at":"2018-06-22T14:33:42Z","closed_at":"2018-05-04T17:41:53Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-3-b7b8f07a11b2> in <module>()\r\n     12 train._config[\"loss_function\"][\"use_l2_pixel_loss_on_background_non_matches\"] = True\r\n     13 if not debug:\r\n---> 14     train.run()\r\n     15 \r\n     16 model_folder = os.path.join(logging_dir, name)\r\n\r\n/home/manuelli/code/dense_correspondence/training/training.pyc in run(self, loss_current_iteration, use_pretrained)\r\n    334                                                                                 masked_non_matches_a, masked_non_matches_b,\r\n    335                                                                                 background_non_matches_a, background_non_matches_b,\r\n--> 336                                                                                 blind_non_matches_a, blind_non_matches_b)\r\n    337 \r\n    338 \r\n\r\n/home/manuelli/code/dense_correspondence/loss_functions/loss_composer.pyc in get_loss(pixelwise_contrastive_loss, match_type, image_a_pred, image_b_pred, matches_a, matches_b, masked_non_matches_a, masked_non_matches_b, background_non_matches_a, background_non_matches_b, blind_non_matches_a, blind_non_matches_b)\r\n     28                                             masked_non_matches_a, masked_non_matches_b,\r\n     29                                             background_non_matches_a, background_non_matches_b,\r\n---> 30                                             blind_non_matches_a, blind_non_matches_b)\r\n     31 \r\n     32     if (match_type == SpartanDatasetDataType.SINGLE_OBJECT_ACROSS_SCENE).all():\r\n\r\n/home/manuelli/code/dense_correspondence/loss_functions/loss_composer.pyc in get_within_scene_loss(pixelwise_contrastive_loss, image_a_pred, image_b_pred, matches_a, matches_b, masked_non_matches_a, masked_non_matches_b, background_non_matches_a, background_non_matches_b, blind_non_matches_a, blind_non_matches_b)\r\n     85             pixelwise_contrastive_loss.non_match_loss_descriptor_only(image_a_pred, image_b_pred,\r\n     86                                                                     blind_non_matches_a, blind_non_matches_b,\r\n---> 87                                                                     M_descriptor=0.5)\r\n     88 \r\n     89 \r\n\r\n/home/manuelli/code/dense_correspondence/loss_functions/pixelwise_contrastive_loss.pyc in non_match_loss_descriptor_only(self, image_a_pred, image_b_pred, non_matches_a, non_matches_b, M_descriptor, invert)\r\n    247 \r\n    248         non_match_loss_vec, num_hard_negatives, _, _ = PCL.non_match_descriptor_loss(image_a_pred, image_b_pred, non_matches_a,\r\n--> 249                                                                  non_matches_b, M=M_descriptor, invert=invert)\r\n    250 \r\n    251         num_non_matches = long(non_match_loss_vec.size()[0])\r\n\r\n/home/manuelli/code/dense_correspondence/loss_functions/pixelwise_contrastive_loss.pyc in non_match_descriptor_loss(image_a_pred, image_b_pred, non_matches_a, non_matches_b, M, invert)\r\n    153 \r\n    154         norm_degree = 2\r\n--> 155         non_match_loss = (non_matches_a_descriptors - non_matches_b_descriptors).norm(norm_degree, 1)\r\n    156         if not invert:\r\n    157             non_match_loss = torch.clamp(M - non_match_loss.pow(2), min=0)\r\n\r\n/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.pyc in norm(self, p, dim, keepdim)\r\n    396             return super(Variable, self).norm(p)\r\n    397         else:\r\n--> 398             return super(Variable, self).norm(p, dim, keepdim)\r\n    399 \r\n    400     def index_add(self, dim, index, tensor):\r\n\r\nRuntimeError: dimension out of range (expected to be in range of [-1, 0], but got 1)\r\n```","closed_by":{"login":"peteflorence","id":5640360,"node_id":"MDQ6VXNlcjU2NDAzNjA=","avatar_url":"https://avatars.githubusercontent.com/u/5640360?v=4","gravatar_id":"","url":"https://api.github.com/users/peteflorence","html_url":"https://github.com/peteflorence","followers_url":"https://api.github.com/users/peteflorence/followers","following_url":"https://api.github.com/users/peteflorence/following{/other_user}","gists_url":"https://api.github.com/users/peteflorence/gists{/gist_id}","starred_url":"https://api.github.com/users/peteflorence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peteflorence/subscriptions","organizations_url":"https://api.github.com/users/peteflorence/orgs","repos_url":"https://api.github.com/users/peteflorence/repos","events_url":"https://api.github.com/users/peteflorence/events{/privacy}","received_events_url":"https://api.github.com/users/peteflorence/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/RobotLocomotion/pytorch-dense-correspondence/issues/117/timeline","performed_via_github_app":null,"state_reason":"completed"}