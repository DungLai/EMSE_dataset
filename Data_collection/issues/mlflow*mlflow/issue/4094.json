{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4094","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4094/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4094/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4094/events","html_url":"https://github.com/mlflow/mlflow/issues/4094","id":806577708,"node_id":"MDU6SXNzdWU4MDY1Nzc3MDg=","number":4094,"title":"[FR] support non-pandas-based dataframe input formats in REST API","user":{"login":"yitao-li","id":405346,"node_id":"MDQ6VXNlcjQwNTM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/405346?v=4","gravatar_id":"","url":"https://api.github.com/users/yitao-li","html_url":"https://github.com/yitao-li","followers_url":"https://api.github.com/users/yitao-li/followers","following_url":"https://api.github.com/users/yitao-li/following{/other_user}","gists_url":"https://api.github.com/users/yitao-li/gists{/gist_id}","starred_url":"https://api.github.com/users/yitao-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yitao-li/subscriptions","organizations_url":"https://api.github.com/users/yitao-li/orgs","repos_url":"https://api.github.com/users/yitao-li/repos","events_url":"https://api.github.com/users/yitao-li/events{/privacy}","received_events_url":"https://api.github.com/users/yitao-li/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2237250735,"node_id":"MDU6TGFiZWwyMjM3MjUwNzM1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/server-infra","name":"area/server-infra","color":"48eabc","default":false,"description":"MLflow Tracking server backend"}],"state":"closed","locked":false,"assignee":{"login":"yitao-li","id":405346,"node_id":"MDQ6VXNlcjQwNTM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/405346?v=4","gravatar_id":"","url":"https://api.github.com/users/yitao-li","html_url":"https://github.com/yitao-li","followers_url":"https://api.github.com/users/yitao-li/followers","following_url":"https://api.github.com/users/yitao-li/following{/other_user}","gists_url":"https://api.github.com/users/yitao-li/gists{/gist_id}","starred_url":"https://api.github.com/users/yitao-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yitao-li/subscriptions","organizations_url":"https://api.github.com/users/yitao-li/orgs","repos_url":"https://api.github.com/users/yitao-li/repos","events_url":"https://api.github.com/users/yitao-li/events{/privacy}","received_events_url":"https://api.github.com/users/yitao-li/received_events","type":"User","site_admin":false},"assignees":[{"login":"yitao-li","id":405346,"node_id":"MDQ6VXNlcjQwNTM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/405346?v=4","gravatar_id":"","url":"https://api.github.com/users/yitao-li","html_url":"https://github.com/yitao-li","followers_url":"https://api.github.com/users/yitao-li/followers","following_url":"https://api.github.com/users/yitao-li/following{/other_user}","gists_url":"https://api.github.com/users/yitao-li/gists{/gist_id}","starred_url":"https://api.github.com/users/yitao-li/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yitao-li/subscriptions","organizations_url":"https://api.github.com/users/yitao-li/orgs","repos_url":"https://api.github.com/users/yitao-li/repos","events_url":"https://api.github.com/users/yitao-li/events{/privacy}","received_events_url":"https://api.github.com/users/yitao-li/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-02-11T17:05:08Z","updated_at":"2021-03-08T20:45:17Z","closed_at":"2021-03-08T20:45:17Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nAccording to https://mlflow.org/docs/latest/models.html#deploy-mlflow-models dataFrames can only be sent in JSON-serialized split-orientation format, JSON-serialized records orientation, or in CSV format. It would be nice to support other formats such as arrow.\r\n\r\n## Motivation\r\n- What is the use case for this feature? Users won't need to convert from other formats such as arrow when sending over dataframes through the REST API. Also, arrow is a highly performant, in-memory serialization mechanism that is widely used.\r\n- Why is this use case valuable to support for MLflow users in general? Because arrow format is well supported in multiple programming languages (Python, R, Java, etc), MLflow users will have the option of sending over dataframe in arrow format once arrow format is supported by MLflow server. \r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case?\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [x] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n","closed_by":{"login":"arjundc-db","id":61438563,"node_id":"MDQ6VXNlcjYxNDM4NTYz","avatar_url":"https://avatars.githubusercontent.com/u/61438563?v=4","gravatar_id":"","url":"https://api.github.com/users/arjundc-db","html_url":"https://github.com/arjundc-db","followers_url":"https://api.github.com/users/arjundc-db/followers","following_url":"https://api.github.com/users/arjundc-db/following{/other_user}","gists_url":"https://api.github.com/users/arjundc-db/gists{/gist_id}","starred_url":"https://api.github.com/users/arjundc-db/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arjundc-db/subscriptions","organizations_url":"https://api.github.com/users/arjundc-db/orgs","repos_url":"https://api.github.com/users/arjundc-db/repos","events_url":"https://api.github.com/users/arjundc-db/events{/privacy}","received_events_url":"https://api.github.com/users/arjundc-db/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4094/timeline","performed_via_github_app":null,"state_reason":"completed"}