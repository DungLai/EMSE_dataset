{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4657","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4657/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4657/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4657/events","html_url":"https://github.com/mlflow/mlflow/issues/4657","id":960629670,"node_id":"MDU6SXNzdWU5NjA2Mjk2NzA=","number":4657,"title":"[FR] Support logging plots from plotnine from Python client","user":{"login":"lorenzwalthert","id":10477073,"node_id":"MDQ6VXNlcjEwNDc3MDcz","avatar_url":"https://avatars.githubusercontent.com/u/10477073?v=4","gravatar_id":"","url":"https://api.github.com/users/lorenzwalthert","html_url":"https://github.com/lorenzwalthert","followers_url":"https://api.github.com/users/lorenzwalthert/followers","following_url":"https://api.github.com/users/lorenzwalthert/following{/other_user}","gists_url":"https://api.github.com/users/lorenzwalthert/gists{/gist_id}","starred_url":"https://api.github.com/users/lorenzwalthert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lorenzwalthert/subscriptions","organizations_url":"https://api.github.com/users/lorenzwalthert/orgs","repos_url":"https://api.github.com/users/lorenzwalthert/repos","events_url":"https://api.github.com/users/lorenzwalthert/events{/privacy}","received_events_url":"https://api.github.com/users/lorenzwalthert/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-04T15:28:28Z","updated_at":"2021-08-04T15:28:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [x] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nFigure logging is already possible with the Python client for figures [produced with matplotlib and plotly](https://mlflow.org/docs/latest/python_api/mlflow.html#mlflow.log_figure). I'd like to add support for [plotnine](https://plotnine.readthedocs.io/en/stable/) figures, a port of the popular ggplot2 library in R to python. This reduces boilerplate code for the user, who currently has to save the figure into a temp directory before logging it as an artifact. This feature is backward compatible and small in scope.\r\n\r\n\r\n\r\n## Motivation\r\n- What is the use case for this feature? Logging plotnine figures as one can log figures created with other libraries.\r\n- Why is this use case valuable to support for MLflow users in general? Plotnine is a popular python visualization library.\r\n- Why is this use case valuable to support for your project(s) or organization? Reduce boilerplate code.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient) Because I have to use `log_artifact()`.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [x] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n### Details\r\n\r\nNone","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4657/timeline","performed_via_github_app":null,"state_reason":null}