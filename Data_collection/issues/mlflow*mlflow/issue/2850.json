{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2850","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2850/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2850/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2850/events","html_url":"https://github.com/mlflow/mlflow/issues/2850","id":620281513,"node_id":"MDU6SXNzdWU2MjAyODE1MTM=","number":2850,"title":"[FR] Improve support for simultaneous Conda and Docker environment","user":{"login":"Zethson","id":21954664,"node_id":"MDQ6VXNlcjIxOTU0NjY0","avatar_url":"https://avatars.githubusercontent.com/u/21954664?v=4","gravatar_id":"","url":"https://api.github.com/users/Zethson","html_url":"https://github.com/Zethson","followers_url":"https://api.github.com/users/Zethson/followers","following_url":"https://api.github.com/users/Zethson/following{/other_user}","gists_url":"https://api.github.com/users/Zethson/gists{/gist_id}","starred_url":"https://api.github.com/users/Zethson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zethson/subscriptions","organizations_url":"https://api.github.com/users/Zethson/orgs","repos_url":"https://api.github.com/users/Zethson/repos","events_url":"https://api.github.com/users/Zethson/events{/privacy}","received_events_url":"https://api.github.com/users/Zethson/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1893072438,"node_id":"MDU6TGFiZWwxODkzMDcyNDM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":"We would like help from the community to add this support"},{"id":2022847277,"node_id":"MDU6TGFiZWwyMDIyODQ3Mjc3","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/examples","name":"area/examples","color":"48eabc","default":false,"description":"Example code"},{"id":2022848510,"node_id":"MDU6TGFiZWwyMDIyODQ4NTEw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/projects","name":"area/projects","color":"48eabc","default":false,"description":"MLproject format, project running backends"},{"id":2022851725,"node_id":"MDU6TGFiZWwyMDIyODUxNzI1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docker","name":"area/docker","color":"ede978","default":false,"description":"Docker use anywhere, such as MLprojects and MLmodels"},{"id":2022865338,"node_id":"MDU6TGFiZWwyMDIyODY1MzM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-longterm","name":"priority/important-longterm","color":"534cb5","default":false,"description":"Important over the long term, but may not be staffed or may need multiple releases to complete."},{"id":2022886708,"node_id":"MDU6TGFiZWwyMDIyODg2NzA4","url":"https://api.github.com/repos/mlflow/mlflow/labels/needs%20design","name":"needs design","color":"006b75","default":false,"description":"This feature requires design and design review before starting coding"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-05-18T15:01:22Z","updated_at":"2021-10-18T13:05:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [x] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nWould be very useful and for my use case mandatory, if both, a Conda environment and a Docker environment could be present in the project directory. The user can then pick which of the two environments to run mlflow with e.g. with flags: -with-conda or -with-docker\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n- Why is this use case valuable to support for MLflow users in general?\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nIt would allow us to build Docker containers based on the same present conda environment file. This would reduce duplicated implementation efforts. Furthermore, the user would gain the choice of which environment to run the mlflow run with. \r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [x] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [x] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [x] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\n\r\nNextflow uses either flags for this (-with-conda or -with-docker) or predefined profiles for conda/docker/singularity environments such as -profile docker or -profile conda (they define run time parameters, which is another feature I would love to already have as configuration in the MLproject file, but that's another story)\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2850/timeline","performed_via_github_app":null,"state_reason":null}