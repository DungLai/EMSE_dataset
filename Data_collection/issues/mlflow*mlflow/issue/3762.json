{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3762","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3762/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3762/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3762/events","html_url":"https://github.com/mlflow/mlflow/issues/3762","id":755284144,"node_id":"MDU6SXNzdWU3NTUyODQxNDQ=","number":3762,"title":"[FR] Aggregate runs into groups","user":{"login":"carefree0910","id":15677328,"node_id":"MDQ6VXNlcjE1Njc3MzI4","avatar_url":"https://avatars.githubusercontent.com/u/15677328?v=4","gravatar_id":"","url":"https://api.github.com/users/carefree0910","html_url":"https://github.com/carefree0910","followers_url":"https://api.github.com/users/carefree0910/followers","following_url":"https://api.github.com/users/carefree0910/following{/other_user}","gists_url":"https://api.github.com/users/carefree0910/gists{/gist_id}","starred_url":"https://api.github.com/users/carefree0910/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carefree0910/subscriptions","organizations_url":"https://api.github.com/users/carefree0910/orgs","repos_url":"https://api.github.com/users/carefree0910/repos","events_url":"https://api.github.com/users/carefree0910/events{/privacy}","received_events_url":"https://api.github.com/users/carefree0910/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-02T13:41:24Z","updated_at":"2020-12-02T13:48:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [x] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nSupports aggregating some runs to provide nicer visualizations.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n\r\nIn Hyper Parameter Optimization, it is common to run on the same set of hyper parameters several times (in deep learning), so it will be nice to support aggregating these runs (e.g. through tags) to provide a mean-std visualization of each metric (which [aim](https://github.com/aimhubio/aim) has already supported).\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\n\r\nBeing able to aggregate the 'same' runs can provide us a more general view of the model (e.g. bias-variance analysis).\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n\r\nIt can help us choose hyper parameters better.\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nI've searched for hours and could not get a near solution. As far as I know is the nested run, but it did not provide statistics (e.g. mean, std) of the child runs.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [x] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nI'm expecting something like this:\r\n\r\n![mean-std](https://user-images.githubusercontent.com/15677328/100879917-04598f00-34e7-11eb-93ec-a722b70bbcc4.png)\r\n\r\nIf this feature is supported, it will be so cool!","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3762/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3762/timeline","performed_via_github_app":null,"state_reason":null}