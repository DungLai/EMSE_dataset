{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4875","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4875/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4875/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4875/events","html_url":"https://github.com/mlflow/mlflow/issues/4875","id":1019966665,"node_id":"I_kwDOCB5Jx848y3TJ","number":4875,"title":"Hi, I want to implement MLFlow project on my own ML model. However I am getting \"\"Could not find main among entry points\"\"","user":{"login":"nihad1998","id":48281287,"node_id":"MDQ6VXNlcjQ4MjgxMjg3","avatar_url":"https://avatars.githubusercontent.com/u/48281287?v=4","gravatar_id":"","url":"https://api.github.com/users/nihad1998","html_url":"https://github.com/nihad1998","followers_url":"https://api.github.com/users/nihad1998/followers","following_url":"https://api.github.com/users/nihad1998/following{/other_user}","gists_url":"https://api.github.com/users/nihad1998/gists{/gist_id}","starred_url":"https://api.github.com/users/nihad1998/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nihad1998/subscriptions","organizations_url":"https://api.github.com/users/nihad1998/orgs","repos_url":"https://api.github.com/users/nihad1998/repos","events_url":"https://api.github.com/users/nihad1998/events{/privacy}","received_events_url":"https://api.github.com/users/nihad1998/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-10-07T12:07:10Z","updated_at":"2021-10-16T08:58:52Z","closed_at":"2021-10-16T08:58:51Z","author_association":"NONE","active_lock_reason":null,"body":"\r\nThe full error message is as below:\r\n\r\nERROR mlflow.cli: === Could not find main among entry points [] or interpret main as a runnable script. Supported script file extensions: ['.py', '.sh'] ===\r\n\r\nI also try the solutions suggested here ```https://github.com/mlflow/mlflow/issues/1094```, but the result is the same.\r\n\r\nBelow I provide all the required files to run ```MLflow``` project.\r\n\r\nThe ```conda.yaml ``` file\r\n\r\n```\r\nname: lightgbm-example\r\nchannels:\r\n  - conda-forge\r\ndependencies:\r\n  - python=3.6\r\n  - pip\r\n  - pip:\r\n      - mlflow>=1.6.0\r\n      - lightgbm\r\n      - pandas\r\n      - numpy\r\n```\r\n\r\n```The MLProject file```\r\n\r\n```\r\nname: lightgbm-example\r\nconda_env: ~/Desktop/MLflow/conda.yaml\r\nentry-points:\r\n    main:\r\n      parameters:\r\n        learning_rate: {type: float, default: 0.1}\r\n        colsample_bytree: {type: float, default: 1.0}\r\n        subsample: {type: float, default: 1.0} \r\n      command: |\r\n          python3 ~/Desktop/MLflow/Test.py \\\r\n            --learning-rate={learning_rate} \\\r\n            --colsample-bytree={colsample_bytree} \\\r\n            --subsample={subsample}\r\n```\r\n\r\n```My Test.py file```\r\n\r\n```\r\nimport pandas as pd\r\nimport lightgbm as lgb\r\nimport numpy as np\r\nimport mlflow\r\nimport mlflow.lightgbm\r\nimport argparse\r\nfrom sklearn.metrics import accuracy_score, confusion_matrix\r\n\r\n\r\ndef parse_args():\r\n    parser = argparse.ArgumentParser(description=\"LightGBM example\")\r\n    parser.add_argument(\r\n        \"--learning-rate\",\r\n        type=float,\r\n        default=0.1,\r\n        help=\"learning rate to update step size at each boosting step (default: 0.3)\",\r\n    )\r\n    parser.add_argument(\r\n        \"--colsample-bytree\",\r\n        type=float,\r\n        default=1.0,\r\n        help=\"subsample ratio of columns when constructing each tree (default: 1.0)\",\r\n    )\r\n    parser.add_argument(\r\n        \"--subsample\",\r\n        type=float,\r\n        default=1.0,\r\n        help=\"subsample ratio of the training instances (default: 1.0)\",\r\n    )\r\n    return parser.parse_args()\r\n\r\ndef find_specificity(c_matrix):\r\n    specificity = c_matrix[1][1]/(c_matrix[1][1]+c_matrix[0][1])\r\n    return specificity\r\n    \r\n    \r\ndef main():\r\n\r\n    args = parse_args()\r\n\r\n    df = pd.read_csv('~/Desktop/MLflow/Churn_demo.csv')\r\n    train_df = df.sample(frac=0.8, random_state=25)\r\n    test_df = df.drop(train_df.index)\r\n\r\n\r\n        \r\n    train_df.drop(['subscriberid'], axis = 1, inplace = True)\r\n    test_df.drop(['subscriberid'], axis = 1, inplace = True)\r\n\r\n    TrainX = train_df.iloc[:,:-1]\r\n    TrainY = train_df.iloc[:,-1]\r\n\r\n    TestX = test_df.iloc[:,:-1]\r\n    TestY = test_df.iloc[:,-1]\r\n    \r\n    mlflow.lightgbm.autolog()\r\n    \r\n    dtrain = lgb.Dataset(TrainX, label=TrainY)\r\n    dtest = lgb.Dataset(TestX, label=TestY)\r\n    \r\n    with mlflow.start_run():\r\n\r\n        parameters = {\r\n            'objective': 'binary',\r\n            'device':'cpu',\r\n            'num_threads': 6,\r\n            'num_leaves': 127,\r\n            'metric' : 'binary',\r\n            'lambda_l2':5,\r\n            'max_bin': 63,\r\n            'bin_construct_sample_cnt' :2*1000*1000,\r\n            'learning_rate': args.learning_rate,\r\n            'colsample_bytree': args.colsample_bytree,\r\n            'subsample': args.subsample,\r\n            'verbose': 1\r\n        }\r\n\r\n\r\n\r\n        model = lgb.train(parameters,\r\n                       dtrain,\r\n                       valid_sets=dtest,\r\n                       num_boost_round=10000,\r\n                       early_stopping_rounds=10)\r\n                       \r\n               \r\n        y_proba=model.predict(TestX)\r\n        pred=np.where(y_proba>0.25,1,0) \r\n        conf_matrix = confusion_matrix(TestY,pred)\r\n        \r\n        specificity = find_specificity(conf_matrix)\r\n        acc = accuracy_score(TestY,pred)\r\n        \r\n        mlflow.log_metric({\"specificity\" : specificity, \"accuracy\" : acc})\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nAny comments, more than welcome.\r\n","closed_by":{"login":"nihad1998","id":48281287,"node_id":"MDQ6VXNlcjQ4MjgxMjg3","avatar_url":"https://avatars.githubusercontent.com/u/48281287?v=4","gravatar_id":"","url":"https://api.github.com/users/nihad1998","html_url":"https://github.com/nihad1998","followers_url":"https://api.github.com/users/nihad1998/followers","following_url":"https://api.github.com/users/nihad1998/following{/other_user}","gists_url":"https://api.github.com/users/nihad1998/gists{/gist_id}","starred_url":"https://api.github.com/users/nihad1998/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nihad1998/subscriptions","organizations_url":"https://api.github.com/users/nihad1998/orgs","repos_url":"https://api.github.com/users/nihad1998/repos","events_url":"https://api.github.com/users/nihad1998/events{/privacy}","received_events_url":"https://api.github.com/users/nihad1998/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4875/timeline","performed_via_github_app":null,"state_reason":"completed"}