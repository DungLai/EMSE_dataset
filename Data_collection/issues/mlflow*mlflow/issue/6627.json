{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6627","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/6627/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/6627/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/6627/events","html_url":"https://github.com/mlflow/mlflow/issues/6627","id":1353791895,"node_id":"I_kwDOCB5Jx85QsTmX","number":6627,"title":"[FR] Support argument for `local_tmpdir` when loading spark model.","user":{"login":"thinkall","id":3197038,"node_id":"MDQ6VXNlcjMxOTcwMzg=","avatar_url":"https://avatars.githubusercontent.com/u/3197038?v=4","gravatar_id":"","url":"https://api.github.com/users/thinkall","html_url":"https://github.com/thinkall","followers_url":"https://api.github.com/users/thinkall/followers","following_url":"https://api.github.com/users/thinkall/following{/other_user}","gists_url":"https://api.github.com/users/thinkall/gists{/gist_id}","starred_url":"https://api.github.com/users/thinkall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thinkall/subscriptions","organizations_url":"https://api.github.com/users/thinkall/orgs","repos_url":"https://api.github.com/users/thinkall/repos","events_url":"https://api.github.com/users/thinkall/events{/privacy}","received_events_url":"https://api.github.com/users/thinkall/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"},{"id":4300304016,"node_id":"LA_kwDOCB5Jx88AAAABAFFukA","url":"https://api.github.com/repos/mlflow/mlflow/labels/has-closing-pr","name":"has-closing-pr","color":"fef2c0","default":false,"description":"This issue has a closing PR"}],"state":"closed","locked":false,"assignee":{"login":"thinkall","id":3197038,"node_id":"MDQ6VXNlcjMxOTcwMzg=","avatar_url":"https://avatars.githubusercontent.com/u/3197038?v=4","gravatar_id":"","url":"https://api.github.com/users/thinkall","html_url":"https://github.com/thinkall","followers_url":"https://api.github.com/users/thinkall/followers","following_url":"https://api.github.com/users/thinkall/following{/other_user}","gists_url":"https://api.github.com/users/thinkall/gists{/gist_id}","starred_url":"https://api.github.com/users/thinkall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thinkall/subscriptions","organizations_url":"https://api.github.com/users/thinkall/orgs","repos_url":"https://api.github.com/users/thinkall/repos","events_url":"https://api.github.com/users/thinkall/events{/privacy}","received_events_url":"https://api.github.com/users/thinkall/received_events","type":"User","site_admin":false},"assignees":[{"login":"thinkall","id":3197038,"node_id":"MDQ6VXNlcjMxOTcwMzg=","avatar_url":"https://avatars.githubusercontent.com/u/3197038?v=4","gravatar_id":"","url":"https://api.github.com/users/thinkall","html_url":"https://github.com/thinkall","followers_url":"https://api.github.com/users/thinkall/followers","following_url":"https://api.github.com/users/thinkall/following{/other_user}","gists_url":"https://api.github.com/users/thinkall/gists{/gist_id}","starred_url":"https://api.github.com/users/thinkall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thinkall/subscriptions","organizations_url":"https://api.github.com/users/thinkall/orgs","repos_url":"https://api.github.com/users/thinkall/repos","events_url":"https://api.github.com/users/thinkall/events{/privacy}","received_events_url":"https://api.github.com/users/thinkall/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-08-29T06:48:05Z","updated_at":"2022-08-30T16:06:49Z","closed_at":"2022-08-30T16:06:49Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Willingness to contribute\n\nYes. I would be willing to contribute this feature with guidance from the MLflow community.\n\n### Proposal Summary\n\nIn the current implementation of `load_model` in `mlflow/spark.py`, `_download_artifact_from_uri` will be called to download the artifacts to a local path. The thing is that `load_model` doesn't support passing a value to the argument `output_path` in `_download_artifact_from_uri`. \r\n\r\nThis `output_path` supports specifying a path for storing artifacts in local system, it will create a local path if the argument is unspecified. Sometimes, the auto created local path may not work well. In that case, a user specified path is needed.\n\n### Motivation\n\n> #### What is the use case for this feature?\r\nSometimes, the temp path created by `_download_artifact_from_uri` doesn't work well (e.g., not enough space, not proper auth, not proper path for customized file system...). As a result, `mlflow.spark.load_model` doesn't work well. We just need to specify a usable path to solve the issue.\r\n\r\nFor log_model, we can specify `dfs_tmpdir` in `mlflow.spark.log_model` to successfully log a spark model (default value is `/tmp/mlflow`, which doesn't work in our system). However, since we can't specifiy `local_tmpdir` or `output_path` in `mlflow.spark.load_model`, we can't load a spark model back.\r\n\r\n> #### Why is this use case valuable to support for MLflow users in general?\r\nIt helps mlflow to support more file systems. \r\n\r\nWith a specified `local_tmpdir`, users can avoid downloading the same artifcats in different programs. This will save both time and space, especially for large models.\r\n\r\n> #### Why is this use case valuable to support for your project(s) or organization?\r\nWith this we can use mlflow to log and load model in our system.\r\n\r\n> #### Why is it currently difficult to achieve this use case?\r\nWe can patch mlflow to achieve this use case, but it's not the optimized solution.\n\n### Details\n\n### Current implementation\r\n```python\r\ndef load_model(model_uri, dfs_tmpdir=None):\r\n    \"\"\"\r\n    Load the Spark MLlib model from the path.\r\n    :param model_uri: The location, in URI format, of the MLflow model, for example:\r\n                      - ``/Users/me/path/to/local/model``\r\n                      - ``relative/path/to/local/model``\r\n                      - ``s3://my_bucket/path/to/model``\r\n                      - ``runs:/<mlflow_run_id>/run-relative/path/to/model``\r\n                      - ``models:/<model_name>/<model_version>``\r\n                      - ``models:/<model_name>/<stage>``\r\n                      For more information about supported URI schemes, see\r\n                      `Referencing Artifacts <https://www.mlflow.org/docs/latest/concepts.html#\r\n                      artifact-locations>`_.\r\n    :param dfs_tmpdir: Temporary directory path on Distributed (Hadoop) File System (DFS) or local\r\n                       filesystem if running in local mode. The model is loaded from this\r\n                       destination. Defaults to ``/tmp/mlflow``.\r\n    :return: pyspark.ml.pipeline.PipelineModel\r\n    .. code-block:: python\r\n        :caption: Example\r\n        from mlflow import spark\r\n        model = mlflow.spark.load_model(\"spark-model\")\r\n        # Prepare test documents, which are unlabeled (id, text) tuples.\r\n        test = spark.createDataFrame([\r\n            (4, \"spark i j k\"),\r\n            (5, \"l m n\"),\r\n            (6, \"spark hadoop spark\"),\r\n            (7, \"apache hadoop\")], [\"id\", \"text\"])\r\n        # Make predictions on test documents\r\n        prediction = model.transform(test)\r\n    \"\"\"\r\n    if RunsArtifactRepository.is_runs_uri(model_uri):\r\n        runs_uri = model_uri\r\n        model_uri = RunsArtifactRepository.get_underlying_uri(model_uri)\r\n        _logger.info(\"'%s' resolved as '%s'\", runs_uri, model_uri)\r\n    elif ModelsArtifactRepository.is_models_uri(model_uri):\r\n        runs_uri = model_uri\r\n        model_uri = ModelsArtifactRepository.get_underlying_uri(model_uri)\r\n        _logger.info(\"'%s' resolved as '%s'\", runs_uri, model_uri)\r\n    # This MUST be called prior to appending the model flavor to `model_uri` in order\r\n    # for `artifact_path` to take on the correct value for model loading via mlflowdbfs.\r\n    root_uri, artifact_path = _get_root_uri_and_artifact_path(model_uri)\r\n\r\n    flavor_conf = _get_flavor_configuration_from_uri(model_uri, FLAVOR_NAME)\r\n    model_uri = append_to_uri_path(model_uri, flavor_conf[\"model_data\"])\r\n    local_model_path = _download_artifact_from_uri(model_uri)\r\n    _add_code_from_conf_to_system_path(local_model_path, flavor_conf)\r\n\r\n    if _should_use_mlflowdbfs(model_uri):\r\n        from pyspark.ml.pipeline import PipelineModel\r\n\r\n        mlflowdbfs_path = _mlflowdbfs_path(\r\n            DatabricksArtifactRepository._extract_run_id(model_uri), artifact_path\r\n        )\r\n        with databricks_utils.MlflowCredentialContext(\r\n            get_databricks_profile_uri_from_artifact_uri(root_uri)\r\n        ):\r\n            return PipelineModel.load(mlflowdbfs_path)\r\n\r\n    return _load_model(\r\n        model_uri=model_uri, dfs_tmpdir_base=dfs_tmpdir, local_model_path=local_model_path\r\n    )\r\n```\r\n\r\n### Proposal\r\n```python\r\ndef load_model(model_uri, dfs_tmpdir=None, local_tmpdir=None):\r\n    \"\"\"\r\n    Load the Spark MLlib model from the path.\r\n\r\n...\r\n\r\n    :param local_tmpdir: Temporary directory path on local filesystem.The model artifacts are \r\n                         download to this path. If unspecified, a local path will be created.\r\n\r\n...\r\n\r\n    local_model_path = _download_artifact_from_uri(model_uri, local_tmpdir)\r\n    _add_code_from_conf_to_system_path(local_model_path, flavor_conf)\r\n\r\n...\r\n```\n\n### What component(s) does this bug affect?\n\n- [X] `area/artifacts`: Artifact stores and artifact logging\n- [ ] `area/build`: Build and test infrastructure for MLflow\n- [ ] `area/docs`: MLflow documentation pages\n- [ ] `area/examples`: Example code\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\n- [ ] `area/pipelines`: Pipelines, Pipeline APIs, Pipeline configs, Pipeline Templates\n- [ ] `area/projects`: MLproject format, project running backends\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\n- [ ] `area/server-infra`: MLflow Tracking server backend\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\n\n### What interface(s) does this bug affect?\n\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\n- [ ] `area/windows`: Windows support\n\n### What language(s) does this bug affect?\n\n- [ ] `language/r`: R APIs and clients\n- [ ] `language/java`: Java APIs and clients\n- [ ] `language/new`: Proposals for new client languages\n\n### What integration(s) does this bug affect?\n\n- [ ] `integrations/azure`: Azure and Azure ML integrations\n- [ ] `integrations/sagemaker`: SageMaker integrations\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/6627/timeline","performed_via_github_app":null,"state_reason":"completed"}