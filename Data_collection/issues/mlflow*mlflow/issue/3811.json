{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3811","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3811/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3811/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3811/events","html_url":"https://github.com/mlflow/mlflow/issues/3811","id":761145598,"node_id":"MDU6SXNzdWU3NjExNDU1OTg=","number":3811,"title":"[FR] Add input validation to `mlflow.search_runs`","user":{"login":"mberr","id":36984984,"node_id":"MDQ6VXNlcjM2OTg0OTg0","avatar_url":"https://avatars.githubusercontent.com/u/36984984?v=4","gravatar_id":"","url":"https://api.github.com/users/mberr","html_url":"https://github.com/mberr","followers_url":"https://api.github.com/users/mberr/followers","following_url":"https://api.github.com/users/mberr/following{/other_user}","gists_url":"https://api.github.com/users/mberr/gists{/gist_id}","starred_url":"https://api.github.com/users/mberr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mberr/subscriptions","organizations_url":"https://api.github.com/users/mberr/orgs","repos_url":"https://api.github.com/users/mberr/repos","events_url":"https://api.github.com/users/mberr/events{/privacy}","received_events_url":"https://api.github.com/users/mberr/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-12-10T11:11:42Z","updated_at":"2020-12-10T17:36:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nAdd input validation to `mlflow.search_runs`, in particular for `experiment_ids`.\r\n\r\n## Motivation\r\nI accidentally passed the Experiment object instead of the experiment ID to `mlflow.search_runs`:\r\n```python\r\nexperiment = mlflow.get_experiment_by_name(\"experiment\")\r\nmlflow.search_runs(experiment_ids=[experiment])\r\n```\r\n\r\nFrom the client side I did not receive any error message, besides having 3 tries with error code 500, internal server error.\r\nWhen investigating the MLFlow server logs, I found out that a serialized string of the experiment object was passed as experiment ID, with error message on the server\r\n```ptb\r\nsycopg2.errors.InvalidTextRepresentation: invalid input syntax for type integer: \"<Experiment: artifact_location='/path/to/mlflow/artifacts/207', experiment_id='207', lifecycle_stage='active', name='experiment', tags={}>\"\r\n```\r\n\r\nSince not every user of the MLFlow client may have access to the server logs, it would be good to have a more informative error message from the client side.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nA check whether all passed arguments are string representations of an integer could be sufficient.\r\n```python\r\nimport re\r\nif not all (re.match(r\"^\\d+$\", i) for i in experiment_ids):\r\n    raise ValueError(f\"Invalid experiment_ids: {experiment_ids}\")\r\n```\r\n\r\nI am not familiar with the MLFLow code base, but here seems to be a suitable place\r\n\r\nhttps://github.com/mlflow/mlflow/blob/8fb419fb109d72446a869f3d1c002cdfd8610f92/mlflow/tracking/_tracking_service/client.py#L367-L368","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3811/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3811/timeline","performed_via_github_app":null,"state_reason":null}