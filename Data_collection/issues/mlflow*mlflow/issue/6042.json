{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6042","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/6042/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/6042/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/6042/events","html_url":"https://github.com/mlflow/mlflow/issues/6042","id":1266300060,"node_id":"I_kwDOCB5Jx85LejSc","number":6042,"title":"[BUG]","user":{"login":"ianbenlolo","id":28714744,"node_id":"MDQ6VXNlcjI4NzE0NzQ0","avatar_url":"https://avatars.githubusercontent.com/u/28714744?v=4","gravatar_id":"","url":"https://api.github.com/users/ianbenlolo","html_url":"https://github.com/ianbenlolo","followers_url":"https://api.github.com/users/ianbenlolo/followers","following_url":"https://api.github.com/users/ianbenlolo/following{/other_user}","gists_url":"https://api.github.com/users/ianbenlolo/gists{/gist_id}","starred_url":"https://api.github.com/users/ianbenlolo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ianbenlolo/subscriptions","organizations_url":"https://api.github.com/users/ianbenlolo/orgs","repos_url":"https://api.github.com/users/ianbenlolo/repos","events_url":"https://api.github.com/users/ianbenlolo/events{/privacy}","received_events_url":"https://api.github.com/users/ianbenlolo/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022847277,"node_id":"MDU6TGFiZWwyMDIyODQ3Mjc3","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/examples","name":"area/examples","color":"48eabc","default":false,"description":"Example code"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-06-09T15:20:10Z","updated_at":"2022-08-11T22:39:48Z","closed_at":"2022-06-10T13:38:51Z","author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\r\n\r\nNo. I cannot contribute a bug fix at this time.\r\n\r\n### MLflow version\r\n\r\n1.16.0\r\n\r\n### System information\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **Python version**:\r\n- **yarn version, if running the dev UI**:\r\nLinux Ubuntu 18.04.6 LTS\r\nPython 3.8.0\r\nRunning in google cloud platform\r\n\r\n### Describe the problem\r\n\r\nI try to log a pytorch model with `mlflow.pytorch.log_model(model, artifact_path=\"model\",pickle_module=pickle)`  and am getting an error `RepresenterError: ('cannot represent an object', '1.11.0+cu102')`.\r\n\r\n### Tracking information\r\n\r\n_No response_\r\n\r\n### Code to reproduce issue\r\n\r\n```\r\nimport mlflow\r\nimport pickle\r\nimport torch.nn as nn\r\nclass my_rnn(nn.Module):\r\n    def __init__(self, **kwargs):\r\n        super().__init__()\r\n        self.kwargs=kwargs\r\n        \r\n        self.rnn = nn.RNN(input_size = 100, hidden_size = 100,)\r\n        self.fc = nn.Linear(100, 2)\r\n        \r\n    def forward(self, x,):\r\n        \r\n        rnn_out, rnn_hidden = self.rnn(x)\r\n        return self.fc(rnn_out), rnn_hidden\r\n\r\nrnn = my_rnn()\r\n\r\nprint(\"Net: \", rnn)\r\n\r\ncriterion = nn.CrossEntropyLoss()\r\noptimizer = torch.optim.Adam(rnn.parameters(), lr=0.001)\r\n\r\nmlflow.set_tracking_uri(REMOTE_SERVER_URI)\r\nmlflow.set_experiment(\"ibenlolo-rnn\")\r\n\r\nwith mlflow.start_run():\r\n    mlflow.pytorch.log_model(rnn, artifact_path=\"model\",pickle_module=pickle)\r\n\r\n```\r\n\r\n### Other info / logs\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRepresenterError                          Traceback (most recent call last)\r\n/tmp/ipykernel_120/4239973167.py in <module>\r\n      7 \r\n      8 with mlflow.start_run():\r\n----> 9     mlflow.pytorch.log_model(rnn, artifact_path=\"model\",pickle_module=pickle)\r\n\r\n/usr/local/lib/python3.8/dist-packages/mlflow/pytorch/__init__.py in log_model(pytorch_model, artifact_path, conda_env, code_paths, pickle_module, registered_model_name, signature, input_example, await_registration_for, requirements_file, extra_files, **kwargs)\r\n    273     \"\"\"\r\n    274     pickle_module = pickle_module or mlflow_pytorch_pickle_module\r\n--> 275     Model.log(\r\n    276         artifact_path=artifact_path,\r\n    277         flavor=mlflow.pytorch,\r\n\r\n/usr/local/lib/python3.8/dist-packages/mlflow/models/model.py in log(cls, artifact_path, flavor, registered_model_name, await_registration_for, **kwargs)\r\n    180             run_id = mlflow.tracking.fluent._get_or_start_run().info.run_id\r\n    181             mlflow_model = cls(artifact_path=artifact_path, run_id=run_id)\r\n--> 182             flavor.save_model(path=local_path, mlflow_model=mlflow_model, **kwargs)\r\n    183             mlflow.tracking.fluent.log_artifacts(local_path, artifact_path)\r\n    184             try:\r\n\r\n/usr/local/lib/python3.8/dist-packages/mlflow/pytorch/__init__.py in save_model(pytorch_model, path, conda_env, mlflow_model, code_paths, pickle_module, signature, input_example, requirements_file, extra_files, **kwargs)\r\n    545         env=conda_env_subpath,\r\n    546     )\r\n--> 547     mlflow_model.save(os.path.join(path, MLMODEL_FILE_NAME))\r\n    548 \r\n    549 \r\n\r\n/usr/local/lib/python3.8/dist-packages/mlflow/models/model.py in save(self, path)\r\n    110         \"\"\"Write the model as a local YAML file.\"\"\"\r\n    111         with open(path, \"w\") as out:\r\n--> 112             self.to_yaml(out)\r\n    113 \r\n    114     @classmethod\r\n\r\n/usr/local/lib/python3.8/dist-packages/mlflow/models/model.py in to_yaml(self, stream)\r\n     98     def to_yaml(self, stream=None):\r\n     99         \"\"\"Write the model as yaml string.\"\"\"\r\n--> 100         return yaml.safe_dump(self.to_dict(), stream=stream, default_flow_style=False)\r\n    101 \r\n    102     def __str__(self):\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/__init__.py in safe_dump(data, stream, **kwds)\r\n    304     If stream is None, return the produced string instead.\r\n    305     \"\"\"\r\n--> 306     return dump_all([data], stream, Dumper=SafeDumper, **kwds)\r\n    307 \r\n    308 def add_implicit_resolver(tag, regexp, first=None,\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/__init__.py in dump_all(documents, stream, Dumper, default_style, default_flow_style, canonical, indent, width, allow_unicode, line_break, encoding, explicit_start, explicit_end, version, tags, sort_keys)\r\n    276         dumper.open()\r\n    277         for data in documents:\r\n--> 278             dumper.represent(data)\r\n    279         dumper.close()\r\n    280     finally:\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent(self, data)\r\n     25 \r\n     26     def represent(self, data):\r\n---> 27         node = self.represent_data(data)\r\n     28         self.serialize(node)\r\n     29         self.represented_objects = {}\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_data(self, data)\r\n     46         data_types = type(data).__mro__\r\n     47         if data_types[0] in self.yaml_representers:\r\n---> 48             node = self.yaml_representers[data_types[0]](self, data)\r\n     49         else:\r\n     50             for data_type in data_types:\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_dict(self, data)\r\n    205 \r\n    206     def represent_dict(self, data):\r\n--> 207         return self.represent_mapping('tag:yaml.org,2002:map', data)\r\n    208 \r\n    209     def represent_set(self, data):\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_mapping(self, tag, mapping, flow_style)\r\n    116         for item_key, item_value in mapping:\r\n    117             node_key = self.represent_data(item_key)\r\n--> 118             node_value = self.represent_data(item_value)\r\n    119             if not (isinstance(node_key, ScalarNode) and not node_key.style):\r\n    120                 best_style = False\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_data(self, data)\r\n     46         data_types = type(data).__mro__\r\n     47         if data_types[0] in self.yaml_representers:\r\n---> 48             node = self.yaml_representers[data_types[0]](self, data)\r\n     49         else:\r\n     50             for data_type in data_types:\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_dict(self, data)\r\n    205 \r\n    206     def represent_dict(self, data):\r\n--> 207         return self.represent_mapping('tag:yaml.org,2002:map', data)\r\n    208 \r\n    209     def represent_set(self, data):\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_mapping(self, tag, mapping, flow_style)\r\n    116         for item_key, item_value in mapping:\r\n    117             node_key = self.represent_data(item_key)\r\n--> 118             node_value = self.represent_data(item_value)\r\n    119             if not (isinstance(node_key, ScalarNode) and not node_key.style):\r\n    120                 best_style = False\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_data(self, data)\r\n     46         data_types = type(data).__mro__\r\n     47         if data_types[0] in self.yaml_representers:\r\n---> 48             node = self.yaml_representers[data_types[0]](self, data)\r\n     49         else:\r\n     50             for data_type in data_types:\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_dict(self, data)\r\n    205 \r\n    206     def represent_dict(self, data):\r\n--> 207         return self.represent_mapping('tag:yaml.org,2002:map', data)\r\n    208 \r\n    209     def represent_set(self, data):\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_mapping(self, tag, mapping, flow_style)\r\n    116         for item_key, item_value in mapping:\r\n    117             node_key = self.represent_data(item_key)\r\n--> 118             node_value = self.represent_data(item_value)\r\n    119             if not (isinstance(node_key, ScalarNode) and not node_key.style):\r\n    120                 best_style = False\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_data(self, data)\r\n     56                     node = self.yaml_multi_representers[None](self, data)\r\n     57                 elif None in self.yaml_representers:\r\n---> 58                     node = self.yaml_representers[None](self, data)\r\n     59                 else:\r\n     60                     node = ScalarNode(None, str(data))\r\n\r\n/usr/local/lib/python3.8/dist-packages/yaml/representer.py in represent_undefined(self, data)\r\n    229 \r\n    230     def represent_undefined(self, data):\r\n--> 231         raise RepresenterError(\"cannot represent an object\", data)\r\n    232 \r\n    233 SafeRepresenter.add_representer(type(None),\r\n\r\nRepresenterError: ('cannot represent an object', '1.11.0+cu102')\r\n```\r\n\r\n\r\n### What component(s) does this bug affect?\r\n\r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [X] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [X] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\n### What interface(s) does this bug affect?\r\n\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\n### What language(s) does this bug affect?\r\n\r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\n### What integration(s) does this bug affect?\r\n\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":{"login":"ianbenlolo","id":28714744,"node_id":"MDQ6VXNlcjI4NzE0NzQ0","avatar_url":"https://avatars.githubusercontent.com/u/28714744?v=4","gravatar_id":"","url":"https://api.github.com/users/ianbenlolo","html_url":"https://github.com/ianbenlolo","followers_url":"https://api.github.com/users/ianbenlolo/followers","following_url":"https://api.github.com/users/ianbenlolo/following{/other_user}","gists_url":"https://api.github.com/users/ianbenlolo/gists{/gist_id}","starred_url":"https://api.github.com/users/ianbenlolo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ianbenlolo/subscriptions","organizations_url":"https://api.github.com/users/ianbenlolo/orgs","repos_url":"https://api.github.com/users/ianbenlolo/repos","events_url":"https://api.github.com/users/ianbenlolo/events{/privacy}","received_events_url":"https://api.github.com/users/ianbenlolo/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/6042/timeline","performed_via_github_app":null,"state_reason":"completed"}