{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3741","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3741/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3741/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3741/events","html_url":"https://github.com/mlflow/mlflow/issues/3741","id":752050957,"node_id":"MDU6SXNzdWU3NTIwNTA5NTc=","number":3741,"title":"[FR] The 'kubernetes' backend should allow users to use existing docker images","user":{"login":"oreh","id":831790,"node_id":"MDQ6VXNlcjgzMTc5MA==","avatar_url":"https://avatars.githubusercontent.com/u/831790?v=4","gravatar_id":"","url":"https://api.github.com/users/oreh","html_url":"https://github.com/oreh","followers_url":"https://api.github.com/users/oreh/followers","following_url":"https://api.github.com/users/oreh/following{/other_user}","gists_url":"https://api.github.com/users/oreh/gists{/gist_id}","starred_url":"https://api.github.com/users/oreh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oreh/subscriptions","organizations_url":"https://api.github.com/users/oreh/orgs","repos_url":"https://api.github.com/users/oreh/repos","events_url":"https://api.github.com/users/oreh/events{/privacy}","received_events_url":"https://api.github.com/users/oreh/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-11-27T07:46:29Z","updated_at":"2022-11-19T19:52:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [* ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nThe current 'kubernetes' backend requires users to rebuild and push docker images for every run. However, this makes it difficult to launch mlflow from a pod inside a Kubernetes cluster, as one normally cannot build docker image inside a pod. We should provide an option to users to launch mlflow runs with existing docker images, which could be built by some other tools or processes.\r\n\r\n## Motivation\r\nTo my understanding, the reason why we need to build a new docker image for each mlflow run is to package code and data in the working directory into the image. But \r\n1. Ideally this packaging should only happen once when the source code or runtime dependency changes. We may run the experiments multiple times using various arguments but these runs do not require new images. \r\n2. It is not always necessary to package everything into a new docker, since we normally have CI pipelines to build docker images and distribute code via git or data volumes in K8S.\r\n\r\nMoreover, rebuilding and pushing images for each run is also a blocker to deploy the entire mlflow stack into a Kubernetes cluster. We prefer to develop mlflow projects in K8S Pods and launch multiple runs directly using the kubernetes backend. However, we won't allow user to build and push docker images inside a Pod for security reasons. \r\n\r\nSo it would be nice if we allows mlflow users to use a flag to skip docker image building/pushing when start runs with the 'kubernetes' backend. \r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [* ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3741/reactions","total_count":13,"+1":13,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3741/timeline","performed_via_github_app":null,"state_reason":null}