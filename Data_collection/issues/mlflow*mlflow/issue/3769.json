{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3769","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3769/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3769/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3769/events","html_url":"https://github.com/mlflow/mlflow/issues/3769","id":755748671,"node_id":"MDU6SXNzdWU3NTU3NDg2NzE=","number":3769,"title":"[FR] Registry UI should display comment in pending transition requests","user":{"login":"tnixon","id":1181780,"node_id":"MDQ6VXNlcjExODE3ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1181780?v=4","gravatar_id":"","url":"https://api.github.com/users/tnixon","html_url":"https://github.com/tnixon","followers_url":"https://api.github.com/users/tnixon/followers","following_url":"https://api.github.com/users/tnixon/following{/other_user}","gists_url":"https://api.github.com/users/tnixon/gists{/gist_id}","starred_url":"https://api.github.com/users/tnixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tnixon/subscriptions","organizations_url":"https://api.github.com/users/tnixon/orgs","repos_url":"https://api.github.com/users/tnixon/repos","events_url":"https://api.github.com/users/tnixon/events{/privacy}","received_events_url":"https://api.github.com/users/tnixon/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022847714,"node_id":"MDU6TGFiZWwyMDIyODQ3NzE0","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/model-registry","name":"area/model-registry","color":"48eabc","default":false,"description":"Model registry, model registry APIs, and the fluent client calls for model registry"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-12-03T01:58:24Z","updated_at":"2020-12-03T22:39:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [X] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nUsers may supply important comments when a request to transition a model to a different stage is made. This information could be invaluable to those making the determination whether or not to approve the request. While the comments are listed in the \"Activities\" section, they should be displayed alongside other aspects of the pending request. It would be relatively easy to add an additional column to the pending request UI table that would display the comments.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nTo assist in reviewing pending stage transition requests.\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\nIt facilitates the good communication of different team members in an MLOps workflow\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nIt facilitates the good communication of different team members in an MLOps workflow\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nComments are not displayed in a way that obviously ties them to the pending request under consideration.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [X] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [X] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3769/timeline","performed_via_github_app":null,"state_reason":null}