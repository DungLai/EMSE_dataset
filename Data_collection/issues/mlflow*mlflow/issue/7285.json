{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7285","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/7285/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/7285/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/7285/events","html_url":"https://github.com/mlflow/mlflow/issues/7285","id":1439915098,"node_id":"I_kwDOCB5Jx85V01xa","number":7285,"title":"[BUG] Lightning library import error","user":{"login":"syaffers","id":2733370,"node_id":"MDQ6VXNlcjI3MzMzNzA=","avatar_url":"https://avatars.githubusercontent.com/u/2733370?v=4","gravatar_id":"","url":"https://api.github.com/users/syaffers","html_url":"https://github.com/syaffers","followers_url":"https://api.github.com/users/syaffers/followers","following_url":"https://api.github.com/users/syaffers/following{/other_user}","gists_url":"https://api.github.com/users/syaffers/gists{/gist_id}","starred_url":"https://api.github.com/users/syaffers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/syaffers/subscriptions","organizations_url":"https://api.github.com/users/syaffers/orgs","repos_url":"https://api.github.com/users/syaffers/repos","events_url":"https://api.github.com/users/syaffers/events{/privacy}","received_events_url":"https://api.github.com/users/syaffers/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-11-08T10:27:02Z","updated_at":"2022-11-16T00:15:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issues Policy acknowledgement\n\n- [X] I have read and agree to submit bug reports in accordance with the [issues policy](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md)\n\n### Willingness to contribute\n\nYes. I can contribute a fix for this bug independently.\n\n### MLflow version\n\n- Client: 1.30.0\r\n\n\n### System information\n\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS Monterey 12.6\r\n- **Python version**: 3.8.13\n\n### Describe the problem\n\nA module import error was encountered when calling the `mlflow.pytorch.autolog()` function in a recent installation of mlflow and lightning.ai (previously called pytorch-lightning) library. This is due to the change in the package name of the lightning library which mlflow still assumes is `pytorch_lightning` but is now `lightning`.\n\n### Tracking information\n\nMLflow version: 1.30.0\r\nTracking URI: http://localhost:5000\r\nArtifact URI: data/1/be290c11e1074b3bb7c69537387a5eb2/artifacts\n\n### Code to reproduce issue\n\n```python\r\nimport mlflow\r\nimport pandas as pd\r\nimport torch\r\nimport lightning as pl\r\nfrom torch.utils.data import TensorDataset, DataLoader\r\n\r\nclass ANN(pl.LightningModule):\r\n    def __init__(self, *args, **kwargs) -> None:\r\n        super().__init__(*args, **kwargs)\r\n        self.net = torch.nn.Linear(3, 1)\r\n    \r\n    def forward(self, x):\r\n        return self.net(x)\r\n    \r\n    def configure_optimizers(self):\r\n        return torch.optim.Adam(self.parameters(), lr=1e-3)\r\n    \r\n    def training_step(self, batch, batch_idx):\r\n        x, y = batch\r\n        yp = self(x)\r\n        loss = torch.nn.functional.mse_loss(yp, y)\r\n        self.log(\"train_loss\", loss)\r\n        return loss\r\n\r\nclass DModule(pl.LightningDataModule):\r\n    def __init__(self) -> None:\r\n        super().__init__()\r\n    \r\n    def setup(self, stage):  \r\n        self.dataset = TensorDataset(torch.randn(10, 3), torch.randint(10, 1))\r\n\r\n    def train_dataloader(self):\r\n        return DataLoader(self.train_set, batch_size=3)\r\n\r\nmodel = ANN()\r\ndatamod = DModule()\r\n\r\nmlflow.set_tracking_uri('http://localhost:5000')\r\nmlflow.set_experiment(experiment_id='1')\r\n\r\nwith mlflow.start_run(run_name='pytorch-nn-v1'):\r\n    mlflow.pytorch.autolog()\r\n    trainer = pl.Trainer(enable_progress_bar=False)\r\n    trainer.fit(model, datamod)\r\n```\n\n### Stack trace\n\n```python\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\nCell In [6], line 42\r\n     39 mlflow.set_experiment(experiment_id='1')\r\n     41 with mlflow.start_run(run_name='pytorch-nn-v1'):\r\n---> 42     mlflow.pytorch.autolog()\r\n     43     trainer = pl.Trainer(enable_progress_bar=False)\r\n     44     trainer.fit(model, datamod)\r\n\r\nFile ~/Projects/ds-samples/.venv/lib/python3.8/site-packages/mlflow/utils/autologging_utils/__init__.py:414, in autologging_integration.<locals>.wrapper.<locals>.autolog(*args, **kwargs)\r\n    394 # Reroute non-MLflow warnings encountered during autologging enablement to an\r\n    395 # MLflow event logger, and enforce silent mode if applicable (i.e. if the corresponding\r\n    396 # autologging integration was called with `silent=True`)\r\n    397 with set_mlflow_events_and_warnings_behavior_globally(\r\n    398     # MLflow warnings emitted during autologging setup / enablement are likely\r\n    399     # actionable and relevant to the user, so they should be emitted as normal\r\n   (...)\r\n    412     disable_warnings=is_silent_mode,\r\n    413 ):\r\n--> 414     _check_and_log_warning_for_unsupported_package_versions(name)\r\n    416     return _autolog(*args, **kwargs)\r\n\r\nFile ~/Projects/ds-samples/.venv/lib/python3.8/site-packages/mlflow/utils/autologging_utils/__init__.py:329, in _check_and_log_warning_for_unsupported_package_versions(integration_name)\r\n    318 def _check_and_log_warning_for_unsupported_package_versions(integration_name):\r\n    319     \"\"\"\r\n    320     When autologging is enabled and `disable_for_unsupported_versions=False` for the specified\r\n    321     autologging integration, check whether the currently-installed versions of the integration's\r\n    322     associated package versions are supported by the specified integration. If the package versions\r\n    323     are not supported, log a warning message.\r\n    324     \"\"\"\r\n    325     if (\r\n    326         integration_name in FLAVOR_TO_MODULE_NAME_AND_VERSION_INFO_KEY\r\n    327         and not get_autologging_config(integration_name, \"disable\", True)\r\n    328         and not get_autologging_config(integration_name, \"disable_for_unsupported_versions\", False)\r\n--> 329         and not is_flavor_supported_for_associated_package_versions(integration_name)\r\n    330     ):\r\n    331         _logger.warning(\r\n    332             \"You are using an unsupported version of %s. If you encounter errors during \"\r\n    333             \"autologging, try upgrading / downgrading %s to a supported version, or try \"\r\n   (...)\r\n    336             integration_name,\r\n    337         )\r\n\r\nFile ~/Projects/ds-samples/.venv/lib/python3.8/site-packages/mlflow/utils/autologging_utils/versioning.py:83, in is_flavor_supported_for_associated_package_versions(flavor_name)\r\n     78 \"\"\"\r\n     79 :return: True if the specified flavor is supported for the currently-installed versions of its\r\n     80          associated packages\r\n     81 \"\"\"\r\n     82 module_name, module_key = FLAVOR_TO_MODULE_NAME_AND_VERSION_INFO_KEY[flavor_name]\r\n---> 83 actual_version = importlib.import_module(module_name).__version__\r\n     85 # In Databricks, treat 'pyspark 3.x.y.dev0' as 'pyspark 3.x.y'\r\n     86 if module_name == \"pyspark\" and is_in_databricks_runtime():\r\n\r\nFile ~/.pyenv/versions/3.8.13/lib/python3.8/importlib/__init__.py:127, in import_module(name, package)\r\n    125             break\r\n    126         level += 1\r\n--> 127 return _bootstrap._gcd_import(name[level:], package, level)\r\n\r\nFile <frozen importlib._bootstrap>:1014, in _gcd_import(name, package, level)\r\n\r\nFile <frozen importlib._bootstrap>:991, in _find_and_load(name, import_)\r\n\r\nFile <frozen importlib._bootstrap>:973, in _find_and_load_unlocked(name, import_)\r\n\r\nModuleNotFoundError: No module named 'pytorch_lightning'\r\n```\n\n### Other info / logs\n\nrequirements.txt:\r\n\r\n```\r\ntorch==1.13.0\r\ntorchaudio==0.13.0\r\ntorchvision==0.14.0\r\nlightning==1.8.0.post1\r\n```\n\n### What component(s) does this bug affect?\n\n- [ ] `area/artifacts`: Artifact stores and artifact logging\n- [ ] `area/build`: Build and test infrastructure for MLflow\n- [ ] `area/docs`: MLflow documentation pages\n- [ ] `area/examples`: Example code\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\n- [ ] `area/recipes`: Recipes, Recipe APIs, Recipe configs, Recipe Templates\n- [ ] `area/projects`: MLproject format, project running backends\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\n- [ ] `area/server-infra`: MLflow Tracking server backend\n- [X] `area/tracking`: Tracking Service, tracking client APIs, autologging\n\n### What interface(s) does this bug affect?\n\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\n- [ ] `area/windows`: Windows support\n\n### What language(s) does this bug affect?\n\n- [ ] `language/r`: R APIs and clients\n- [ ] `language/java`: Java APIs and clients\n- [ ] `language/new`: Proposals for new client languages\n\n### What integration(s) does this bug affect?\n\n- [ ] `integrations/azure`: Azure and Azure ML integrations\n- [ ] `integrations/sagemaker`: SageMaker integrations\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/7285/timeline","performed_via_github_app":null,"state_reason":null}