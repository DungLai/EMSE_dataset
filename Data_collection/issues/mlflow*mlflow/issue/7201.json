{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7201","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/7201/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/7201/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/7201/events","html_url":"https://github.com/mlflow/mlflow/issues/7201","id":1429429832,"node_id":"I_kwDOCB5Jx85VM15I","number":7201,"title":"Migration to pytest","user":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"labels":[{"id":955449436,"node_id":"MDU6TGFiZWw5NTU0NDk0MzY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"}],"state":"open","locked":false,"assignee":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"assignees":[{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false}],"milestone":null,"comments":15,"created_at":"2022-10-31T08:06:18Z","updated_at":"2023-01-06T20:14:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"## Details\r\n\r\nIn our code base, we currently use both:\r\n\r\n- Function-based tests with `pytest` ([example](https://github.com/mlflow/mlflow/blob/master/tests/store/tracking/test_sqlalchemy_store.py))\r\n- Class-based tests with `uniitest.TestCase` ([example](https://github.com/mlflow/mlflow/blob/master/tests/test_version.py))\r\n\r\nWe will migrate class-based tests to function-based tests.\r\n\r\n## Motivations\r\n\r\n`pytest` has the following advantages:\r\n\r\n- Test parameterization is easier.\r\n- Less boilerplate code.\r\n- Fixtures\r\n- Doesn't require remembering assert method names such as `assertEqual`.\r\n\r\n## TODOs:\r\n\r\n- [ ] List files that use `uniitest.TestCase`.\r\n- [ ] Add a pylint rule to prevent using `uniitest.TestCase`.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/7201/timeline","performed_via_github_app":null,"state_reason":null}