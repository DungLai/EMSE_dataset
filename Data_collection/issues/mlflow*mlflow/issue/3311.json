{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3311","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3311/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3311/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3311/events","html_url":"https://github.com/mlflow/mlflow/issues/3311","id":684057035,"node_id":"MDU6SXNzdWU2ODQwNTcwMzU=","number":3311,"title":"[FR] Search runs by \"nested\" property","user":{"login":"rbu","id":65913,"node_id":"MDQ6VXNlcjY1OTEz","avatar_url":"https://avatars.githubusercontent.com/u/65913?v=4","gravatar_id":"","url":"https://api.github.com/users/rbu","html_url":"https://github.com/rbu","followers_url":"https://api.github.com/users/rbu/followers","following_url":"https://api.github.com/users/rbu/following{/other_user}","gists_url":"https://api.github.com/users/rbu/gists{/gist_id}","starred_url":"https://api.github.com/users/rbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbu/subscriptions","organizations_url":"https://api.github.com/users/rbu/orgs","repos_url":"https://api.github.com/users/rbu/repos","events_url":"https://api.github.com/users/rbu/events{/privacy}","received_events_url":"https://api.github.com/users/rbu/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-08-22T19:51:26Z","updated_at":"2020-09-07T18:05:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [x] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nThe property of a run to be \"nested\", i.e. the child of a parent run, should be exposed in the the \"search_runs\" data frame. In addition, the filter string should allow querying for the \"nested\" property.\r\n\r\n## Motivation\r\n- _What is the use case for this feature?_ We're using the concept of nested runs to track intermediate models that generate hyperparameters of a main model. However, to promote only the main (non-nested) model to the model registry, we need a way to filter only the non-nested models (as a workaround, we're using tags).\r\n- _Why is this use case valuable to support for MLflow users in general?_ Consistency: Other attributes, properties and tags of a run are available for filtering as well.\r\n- _Why is this use case valuable to support for your project(s) or organization?_ It would make our code easier to maintain as there's no information duplication (tracking the nested property as an additional tag).\r\n- _Why is it currently difficult to achieve this use case?_ The current workaround isn't difficult, but introduces information duplication which is undesirable.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3311/timeline","performed_via_github_app":null,"state_reason":null}