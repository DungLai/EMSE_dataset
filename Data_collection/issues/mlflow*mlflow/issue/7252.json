{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7252","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/7252/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/7252/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/7252/events","html_url":"https://github.com/mlflow/mlflow/issues/7252","id":1435761609,"node_id":"I_kwDOCB5Jx85Vk_vJ","number":7252,"title":"MLFlow+Flyte+Pytorch: Encountered an unexpected error while inferring pip requirements","user":{"login":"tamis-laan","id":3178666,"node_id":"MDQ6VXNlcjMxNzg2NjY=","avatar_url":"https://avatars.githubusercontent.com/u/3178666?v=4","gravatar_id":"","url":"https://api.github.com/users/tamis-laan","html_url":"https://github.com/tamis-laan","followers_url":"https://api.github.com/users/tamis-laan/followers","following_url":"https://api.github.com/users/tamis-laan/following{/other_user}","gists_url":"https://api.github.com/users/tamis-laan/gists{/gist_id}","starred_url":"https://api.github.com/users/tamis-laan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tamis-laan/subscriptions","organizations_url":"https://api.github.com/users/tamis-laan/orgs","repos_url":"https://api.github.com/users/tamis-laan/repos","events_url":"https://api.github.com/users/tamis-laan/events{/privacy}","received_events_url":"https://api.github.com/users/tamis-laan/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"},{"id":2022847714,"node_id":"MDU6TGFiZWwyMDIyODQ3NzE0","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/model-registry","name":"area/model-registry","color":"48eabc","default":false,"description":"Model registry, model registry APIs, and the fluent client calls for model registry"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-11-04T09:05:05Z","updated_at":"2022-11-07T19:56:21Z","closed_at":"2022-11-07T19:56:21Z","author_association":"NONE","active_lock_reason":null,"body":"### Issues Policy acknowledgement\r\n\r\n- [X] I have read and agree to submit bug reports in accordance with the [issues policy](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md)\r\n\r\n### Willingness to contribute\r\n\r\nYes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n\r\n### MLflow version\r\n\r\nmlflow, version 1.30.0\r\n\r\n\r\n### System information\r\n\r\n- Arch linux\r\n- Python 3.10.8\r\n\r\n\r\n### Describe the problem\r\n\r\nI'm using a combination of MLflow, Flyte and pytorch to train a model locally and store the result into MLflow. When the model is stored into MLflow I get the following error:\r\n\r\n```\r\n2022/11/04 09:58:08 WARNING mlflow.utils.environment: Encountered an unexpected error while inferring pip requirements (model URI: /tmp/tmp3k6c3_ff/model/data, flavor: pytorch), fall back to return ['torch==1.13.0', 'cloudpickle==2.2.0']. Set logging level to DEBUG to see the full traceback.\r\n/$HOME/.local/share/virtualenvs/ai-template-ekyeoNrO/lib/python3.10/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils.\r\n  warnings.warn(\"Setuptools is replacing distutils.\")\r\n```\r\n\r\n### Tracking information\r\n\r\n_No response_\r\n\r\n### Code to reproduce issue\r\n\r\n``` python\r\nimport os\r\nimport typing\r\n\r\nimport mlflow\r\nimport pandas\r\n\r\nimport torch\r\nimport torchvision\r\n\r\nimport flytekit\r\nfrom flytekit import LaunchPlan, CronSchedule, workflow, task, Resources\r\nfrom flytekit.types.file import FlyteFile\r\nfrom flytekit.types.directory import FlyteDirectory\r\n\r\n# Construct model\r\nclass Model(torch.nn.Module):\r\n    # Construct model\r\n    def __init__(self):\r\n        # Initialise parent\r\n        super(Model, self).__init__()\r\n        # First layer\r\n        self.l1 = torch.nn.Sequential(\r\n            torch.nn.Conv2d(1, 16, 5, 1, 2), torch.nn.ReLU(), torch.nn.MaxPool2d(2)\r\n        )\r\n        # Second layer\r\n        self.l2 = torch.nn.Sequential(\r\n            torch.nn.Conv2d(16, 32, 5, 1, 2), torch.nn.ReLU(), torch.nn.MaxPool2d(2)\r\n        )\r\n        # Third layer\r\n        self.l3 = torch.nn.Sequential(\r\n            torch.nn.Flatten(), torch.nn.Linear(32 * 7 * 7, 10), torch.nn.Softmax(-1)\r\n        )\r\n\r\n    # Forward data through model\r\n    def forward(self, inputs: torch.Tensor):\r\n        interme = self.l1(inputs)\r\n        interme = self.l2(interme)\r\n        outputs = self.l3(interme)\r\n        return outputs\r\n\r\n    # Loss function\r\n    def loss(self, outputs, targets):\r\n        # Convert targets to one hot\r\n        targets = torch.nn.functional.one_hot(targets, 10)\r\n        # Compute negative log likelihood\r\n        return -torch.mean(torch.sum(targets * torch.log(outputs), -1))\r\n\r\n\r\n@task(cache=True, cache_version=\"1.0\")\r\ndef download_mnist() -> FlyteDirectory:\r\n    # Data path\r\n    data_path = str(flytekit.current_context().working_directory) + \"/mnist\"\r\n\r\n    # Log data path\r\n    print(\"data path\", data_path)\r\n\r\n    # download the training set\r\n    torchvision.datasets.MNIST(root=data_path, train=True, download=True)\r\n\r\n    # Download the test set\r\n    torchvision.datasets.MNIST(root=data_path, train=False, download=True)\r\n\r\n    # Return data\r\n    return FlyteDirectory(path=data_path)\r\n\r\n\r\n@task\r\ndef fit(data: FlyteDirectory) -> str:\r\n    # Construct the training set\r\n    train_set = torchvision.datasets.MNIST(\r\n        root=str(data.path),\r\n        train=True,\r\n        transform=torchvision.transforms.ToTensor(),\r\n    )\r\n\r\n    # Construct the test set\r\n    test_set = torchvision.datasets.MNIST(\r\n        root=str(data.path), train=False, transform=torchvision.transforms.ToTensor()\r\n    )\r\n\r\n    # Construct train set loader\r\n    train = torch.utils.data.DataLoader(\r\n        train_set,\r\n        batch_size=100,\r\n        shuffle=True,\r\n        num_workers=1,\r\n    )\r\n\r\n    # Construct test set loader\r\n    test = torch.utils.data.DataLoader(\r\n        test_set,\r\n        batch_size=100,\r\n        shuffle=True,\r\n        num_workers=1,\r\n    )\r\n\r\n    # Configure the device to run on\r\n    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\r\n\r\n    # Materialize model\r\n    model = Model()\r\n\r\n    # Set the experiment\r\n    experiment = mlflow.set_experiment(\"mnist\")\r\n\r\n    # Start logging run\r\n    with mlflow.start_run(experiment_id=experiment.experiment_id) as run:\r\n\r\n        # Define number of epochs\r\n        epochs = 20\r\n\r\n        # Define learning rate\r\n        alpha = 0.0005\r\n\r\n        # Log params\r\n        mlflow.log_param(\"epochs\", epochs)\r\n        mlflow.log_param(\"learning rate\", alpha)\r\n\r\n        # Get optimizer\r\n        optimizer = torch.optim.Adam(model.parameters(), lr=alpha)\r\n\r\n        # Start optimization process\r\n        for epoch in range(epochs):\r\n            for i, (inputs, targets) in enumerate(train):\r\n                # Run batch through model\r\n                outputs = model(inputs)\r\n                # Compute the loss\r\n                loss = model.loss(outputs, targets)\r\n                # Clear optimizer gradients\r\n                optimizer.zero_grad()\r\n                # Back propagate loss\r\n                loss.backward()\r\n                # Apply gradients\r\n                optimizer.step()\r\n                # Log loss metric\r\n                mlflow.log_metric(\"negative log likelihood\", loss.item())\r\n                # Log to console\r\n                if (i + 1) % 50 == 0:\r\n                    print(f\"[{epoch+1},{epochs}] [{i+1},{len(train)}], {loss.item()}\")\r\n\r\n        # Log model\r\n        mlflow.pytorch.log_model(model, \"mnist model\")\r\n\r\n        # Return run id\r\n        return run.info.run_id\r\n\r\n\r\n@workflow\r\ndef train() -> None:\r\n    # Download dataset\r\n    data = download_mnist()\r\n    # Fit model\r\n    run_id = fit(data=data)\r\n```\r\n\r\nExecute code with:\r\n```\r\n> pyflyte run main.py train\r\n```\r\n\r\n### Stack trace\r\n\r\n2022/11/04 09:58:08 WARNING mlflow.utils.environment: Encountered an unexpected error while inferring pip requirements (model URI: /tmp/tmp3k6c3_ff/model/data, flavor: pytorch), fall back to return ['torch==1.13.0', 'cloudpickle==2.2.0']. Set logging level to DEBUG to see the full traceback.\r\n/$HOME/.local/share/virtualenvs/ai-template-ekyeoNrO/lib/python3.10/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils.\r\n  warnings.warn(\"Setuptools is replacing distutils.\")\r\n\r\n\r\n### Other info / logs\r\n\r\n_No response_\r\n\r\n### What component(s) does this bug affect?\r\n\r\n- [X] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [X] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/recipes`: Recipes, Recipe APIs, Recipe configs, Recipe Templates\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\n### What interface(s) does this bug affect?\r\n\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\n### What language(s) does this bug affect?\r\n\r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\n### What integration(s) does this bug affect?\r\n\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":{"login":"BenWilson2","id":39283302,"node_id":"MDQ6VXNlcjM5MjgzMzAy","avatar_url":"https://avatars.githubusercontent.com/u/39283302?v=4","gravatar_id":"","url":"https://api.github.com/users/BenWilson2","html_url":"https://github.com/BenWilson2","followers_url":"https://api.github.com/users/BenWilson2/followers","following_url":"https://api.github.com/users/BenWilson2/following{/other_user}","gists_url":"https://api.github.com/users/BenWilson2/gists{/gist_id}","starred_url":"https://api.github.com/users/BenWilson2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BenWilson2/subscriptions","organizations_url":"https://api.github.com/users/BenWilson2/orgs","repos_url":"https://api.github.com/users/BenWilson2/repos","events_url":"https://api.github.com/users/BenWilson2/events{/privacy}","received_events_url":"https://api.github.com/users/BenWilson2/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/7252/timeline","performed_via_github_app":null,"state_reason":"completed"}