{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5233","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5233/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5233/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5233/events","html_url":"https://github.com/mlflow/mlflow/issues/5233","id":1096128259,"node_id":"I_kwDOCB5Jx85BVZcD","number":5233,"title":"[FR] Make autogenerated model prediction code snippet adaptable","user":{"login":"kevinkleinQC","id":43778085,"node_id":"MDQ6VXNlcjQzNzc4MDg1","avatar_url":"https://avatars.githubusercontent.com/u/43778085?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinkleinQC","html_url":"https://github.com/kevinkleinQC","followers_url":"https://api.github.com/users/kevinkleinQC/followers","following_url":"https://api.github.com/users/kevinkleinQC/following{/other_user}","gists_url":"https://api.github.com/users/kevinkleinQC/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinkleinQC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinkleinQC/subscriptions","organizations_url":"https://api.github.com/users/kevinkleinQC/orgs","repos_url":"https://api.github.com/users/kevinkleinQC/repos","events_url":"https://api.github.com/users/kevinkleinQC/events{/privacy}","received_events_url":"https://api.github.com/users/kevinkleinQC/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-07T09:15:29Z","updated_at":"2022-01-07T09:16:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [X] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nThe browser overview of a single run comes with the displayal of artifcats - one of them being the 'model' artifact. Conveniently, this also comes with code snippets on how to use the model at hand for predictions. As of now, these code snippets [seem hard to adapt](https://github.com/mlflow/mlflow/blob/master/mlflow/server/js/src/experiment-tracking/components/artifact-view-components/ShowArtifactLoggedModelView.js#L90-L121). For some users, the currently generated code snippets are not applicable and it would be desirable to change the snippets to custom code.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nA priori, a user will believe the code snippets to be correct and applicable - in some scenarios, e.g. when there are further dependencies for prediction such as a chaining of models, it doesn't. In these cases, it would be desirable to overwrite the generated code snippets. Moreover, other aspects, such as data loading, could be included if desired.\r\n- Why is this use case valuable to support for MLflow users in general?\r\nBeing able to customize these snippets could e.g. also allow to allow for some lines on data loading to be included. This, in turn, would make the snippets more complete and valuable.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nFor new team members especially, it can be quite confusing to display and advertise code snippets which are not applicable for the setup at hand since the mistake is easily assumed to lie on the user end. Independently of that, it seems undesirable to suggest approaches which are not applicable or simply 'don't work' due to particularities of the use case.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nMy understanding is that these code snippets are more or less hardcoded in javascript on the server side and not able to be defined via the python interface on the client side. See https://github.com/mlflow/mlflow/blob/master/mlflow/server/js/src/experiment-tracking/components/artifact-view-components/ShowArtifactLoggedModelView.js#L90-L121\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [X] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [X] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nThe section at hand can be seen in the screenshot below:\r\n![Screenshot 2022-01-07 095232](https://user-images.githubusercontent.com/43778085/148520178-8fd8c275-c2e6-460e-baf7-e0187148bc11.png)\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5233/timeline","performed_via_github_app":null,"state_reason":null}