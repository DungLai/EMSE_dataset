{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2458","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2458/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2458/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2458/events","html_url":"https://github.com/mlflow/mlflow/issues/2458","id":569228082,"node_id":"MDU6SXNzdWU1NjkyMjgwODI=","number":2458,"title":"[FR] MLServe Support AWS multiple accounts for S3","user":{"login":"weldpua2008","id":5720601,"node_id":"MDQ6VXNlcjU3MjA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/5720601?v=4","gravatar_id":"","url":"https://api.github.com/users/weldpua2008","html_url":"https://github.com/weldpua2008","followers_url":"https://api.github.com/users/weldpua2008/followers","following_url":"https://api.github.com/users/weldpua2008/following{/other_user}","gists_url":"https://api.github.com/users/weldpua2008/gists{/gist_id}","starred_url":"https://api.github.com/users/weldpua2008/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weldpua2008/subscriptions","organizations_url":"https://api.github.com/users/weldpua2008/orgs","repos_url":"https://api.github.com/users/weldpua2008/repos","events_url":"https://api.github.com/users/weldpua2008/events{/privacy}","received_events_url":"https://api.github.com/users/weldpua2008/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"},{"id":2022865338,"node_id":"MDU6TGFiZWwyMDIyODY1MzM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-longterm","name":"priority/important-longterm","color":"534cb5","default":false,"description":"Important over the long term, but may not be staffed or may need multiple releases to complete."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-02-21T23:04:31Z","updated_at":"2020-07-18T08:32:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Dear all,\r\n\r\n\r\nWe are using MLFlow with artifact store on S3. We have several AWS accounts (e.g. data science, production) to collaborate from. Also, we allow anonymous access to the models via VPN.\r\nBecause of how S3 is working [Why can't I access an object that was uploaded to my Amazon S3 bucket by another AWS account?](https://aws.amazon.com/premiumsupport/knowledge-center/s3-bucket-owner-access/): \r\n\r\n> By default, an S3 object is owned by the AWS account that uploaded it. This is true even when the bucket is owned by another account. To get access to the object, the object owner must explicitly grant you (the bucket owner) access.\r\n> \r\n> The object owner can grant the bucket owner full control of the object by updating the access control list (ACL) of the object. The object owner can update the ACL either during a put or copy operation, or after the object is added to the bucket.\r\n\r\n\r\nObviously we have the issue with access to the tracked models updated from different accounts. \r\n\r\nThe solution is to allow the bucket owner to have full or partial access to the objects in  `upload_file` via `(boto3.s3.transfer.TransferConfig)` ([boto3](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/s3.html#boto3.s3.transfer.S3Transfer.ALLOWED_UPLOAD_ARGS))\r\n\r\nThe ``upload_file`` and ``download_file`` methods also accept\r\n``**kwargs``, which will be forwarded through to the corresponding\r\nclient operation.  Here are a few examples using ``upload_file``::\r\n```\r\n    # Making the object public\r\n    transfer.upload_file('/tmp/myfile', 'bucket', 'key',\r\n                         extra_args={'ACL': 'bucket-owner-full-control'})\r\n\r\n```\r\nfor put_object it's easy\r\n```\r\nresponse = client.put_object(\r\n    ACL=''bucket-owner-read'|'bucket-owner-full-control',\r\n    Bucket='string',\r\n``` \r\n\r\n### Proposed Changes\r\nAdd bypass ACL from CLI/environment \r\n to `log_artifacts` at https://github.com/mlflow/mlflow/blob/master/mlflow/store/artifact/s3_artifact_repo.py#L53\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2458/reactions","total_count":10,"+1":10,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2458/timeline","performed_via_github_app":null,"state_reason":null}