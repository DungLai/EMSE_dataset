{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2499","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2499/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2499/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2499/events","html_url":"https://github.com/mlflow/mlflow/issues/2499","id":571858419,"node_id":"MDU6SXNzdWU1NzE4NTg0MTk=","number":2499,"title":"[BUG] sklearn w/onnx fails inference due to input format (list vs numpy)","user":{"login":"Infinity1008","id":41328399,"node_id":"MDQ6VXNlcjQxMzI4Mzk5","avatar_url":"https://avatars.githubusercontent.com/u/41328399?v=4","gravatar_id":"","url":"https://api.github.com/users/Infinity1008","html_url":"https://github.com/Infinity1008","followers_url":"https://api.github.com/users/Infinity1008/followers","following_url":"https://api.github.com/users/Infinity1008/following{/other_user}","gists_url":"https://api.github.com/users/Infinity1008/gists{/gist_id}","starred_url":"https://api.github.com/users/Infinity1008/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Infinity1008/subscriptions","organizations_url":"https://api.github.com/users/Infinity1008/orgs","repos_url":"https://api.github.com/users/Infinity1008/repos","events_url":"https://api.github.com/users/Infinity1008/events{/privacy}","received_events_url":"https://api.github.com/users/Infinity1008/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1893057631,"node_id":"MDU6TGFiZWwxODkzMDU3NjMx","url":"https://api.github.com/repos/mlflow/mlflow/labels/Acknowledged","name":"Acknowledged","color":"f9d0c4","default":false,"description":"This issue has been read and acknowledged by the MLflow admins."}],"state":"closed","locked":false,"assignee":{"login":"andychow-db","id":58712524,"node_id":"MDQ6VXNlcjU4NzEyNTI0","avatar_url":"https://avatars.githubusercontent.com/u/58712524?v=4","gravatar_id":"","url":"https://api.github.com/users/andychow-db","html_url":"https://github.com/andychow-db","followers_url":"https://api.github.com/users/andychow-db/followers","following_url":"https://api.github.com/users/andychow-db/following{/other_user}","gists_url":"https://api.github.com/users/andychow-db/gists{/gist_id}","starred_url":"https://api.github.com/users/andychow-db/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andychow-db/subscriptions","organizations_url":"https://api.github.com/users/andychow-db/orgs","repos_url":"https://api.github.com/users/andychow-db/repos","events_url":"https://api.github.com/users/andychow-db/events{/privacy}","received_events_url":"https://api.github.com/users/andychow-db/received_events","type":"User","site_admin":false},"assignees":[{"login":"andychow-db","id":58712524,"node_id":"MDQ6VXNlcjU4NzEyNTI0","avatar_url":"https://avatars.githubusercontent.com/u/58712524?v=4","gravatar_id":"","url":"https://api.github.com/users/andychow-db","html_url":"https://github.com/andychow-db","followers_url":"https://api.github.com/users/andychow-db/followers","following_url":"https://api.github.com/users/andychow-db/following{/other_user}","gists_url":"https://api.github.com/users/andychow-db/gists{/gist_id}","starred_url":"https://api.github.com/users/andychow-db/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andychow-db/subscriptions","organizations_url":"https://api.github.com/users/andychow-db/orgs","repos_url":"https://api.github.com/users/andychow-db/repos","events_url":"https://api.github.com/users/andychow-db/events{/privacy}","received_events_url":"https://api.github.com/users/andychow-db/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-02-27T06:43:38Z","updated_at":"2020-04-23T23:56:57Z","closed_at":"2020-04-23T23:56:57Z","author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting an issue. Please refer to our [issue policy](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md)\r\nfor information on what types of issues we address. For help with debugging your code, please refer to [Stack Overflow](https://stackoverflow.com/questions/tagged/mlflow).\r\n\r\nPlease fill in this template and do not delete it unless you are sure your issue is outside its scope.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 18.04 Bionic\r\n- **MLflow installed from (source or binary)**: Conda install mlflow\r\n- **MLflow version (run ``mlflow --version``)**: 1.6.0\r\n- **Python version**: 3.7.6\r\n- **npm version, if running the dev UI**:\r\n- **Exact command to reproduce**:\r\n\r\n# onnx\r\nloaded_model = onnx.load('Path to a sklearn_converted_to_onnx_model_file.onnx')\r\n\r\n# Saving the model in mlflow\r\nmlflow.onnx.save_model(onnx_model=loaded_model, path=\"path for the saved model\")\r\n\r\n# Loading the model in its pyfunc flavour\r\nsk_model = mlflow.pyfunc.load_model(\"path for the saved model\")\r\n\r\n# Logging the model\r\nmlflow.onnx.log_model(loaded_model, \"sk_models\")\r\nprint(\"Model saved in run %s\" % mlflow.active_run().info.run_uuid)\r\n\r\ncurrent_model_id = mlflow.active_run().info.run_uuid\r\nprint(mlflow.register_model(\"runs:/\" + current_model_id + \"/sk_models\", name))\r\n\r\nclient = mlflow.tracking.MlflowClient()\r\nclient.update_model_version(name = name, version = 1, stage = \"Production\")\r\n\r\n# Now that the model is ready and in production, we're going to serve it with docker\r\nos.system(\"mlflow models build-docker -m model_path)\r\n\r\n# Docker Image made successfully with the previous command, now running the container on port 6001\r\nos.system(\"docker run -p 6001:8080 \" + name)\r\n# Docker container Successfully ran\r\n\r\n# Now while trying to acess the endpoint with curl\r\ncurl http://endpoint/invocations -H 'Content-Type: application/json' -d Output of (df.to_json(orient='split')) here \r\n\r\n# The error is this \r\n{\"error_code\": \"BAD_REQUEST\", \"message\": \"Encountered an unexpected error while evaluating the model. Verify that the serialized input Dataframe is compatible with the model for inference.\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/miniconda/envs/custom_env/lib/python3.7/site-packages/mlflow/pyfunc/scoring_server/__init__.py\\\", line 196, in transformation\\n    raw_predictions = model.predict(data)\\n  File \\\"/miniconda/envs/custom_env/lib/python3.7/site-packages/mlflow/onnx.py\\\", line 176, in predict\\n    {c: p.reshape(-1) for (c, p) in zip(self.output_names, predicted)})\\n  File \\\"/miniconda/envs/custom_env/lib/python3.7/site-packages/mlflow/onnx.py\\\", line 176, in <dictcomp>\\n    {c: p.reshape(-1) for (c, p) in zip(self.output_names, predicted)})\\nAttributeError: 'list' object has no attribute 'reshape'\\n\"}\r\n\r\n\r\n### Describe the problem\r\nTo describe the issue verbally, I have a sklearn model which has been converted to an onnx model.\r\nNow i want to serve this onnx model, i have done exactly that as per documentation and everything went smoothly and the endpoint was created. My problem arises when accessing  the model, I am doing as per documentation instruction, which is df.to_json(orient='split') and then sending the output of that curl like this ( curl http://endpoint/invocations -H 'Content-Type: application/json' -d Output of (df.to_json(orient='split')) here  ), this is where i am getting this error described above.\r\n\r\nNow just to be sure if i was doing everything correctly, i copied the same steps for a (keras model converted to onnx) and to my surprise, that WORKS !!. The same damm code, same everything. The only thing i changed in my code is the model path (From sklearn.onnx to keras.onnx) and it works. I did some reseach and have some clue as to what is causing the issue, please have a look at other info section for that  \r\n\r\n### Code to reproduce issue\r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n\r\n### Other info / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks,\r\nplease include the full traceback. Large logs and files should be attached.\r\n\r\n# Traceback\r\n{\"error_code\": \"BAD_REQUEST\", \"message\": \"Encountered an unexpected error while evaluating the model. Verify that the serialized input Dataframe is compatible with the model for inference.\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/miniconda/envs/custom_env/lib/python3.7/site-packages/mlflow/pyfunc/scoring_server/__init__.py\\\", line 196, in transformation\\n    raw_predictions = model.predict(data)\\n  File \\\"/miniconda/envs/custom_env/lib/python3.7/site-packages/mlflow/onnx.py\\\", line 176, in predict\\n    {c: p.reshape(-1) for (c, p) in zip(self.output_names, predicted)})\\n  File \\\"/miniconda/envs/custom_env/lib/python3.7/site-packages/mlflow/onnx.py\\\", line 176, in <dictcomp>\\n    {c: p.reshape(-1) for (c, p) in zip(self.output_names, predicted)})\\nAttributeError: 'list' object has no attribute 'reshape'\\n\"}\r\n\r\n# My research into what is wrong\r\n\r\n###################### Code for sklearn to onnx and prediction ####################\r\n# This peice of code is copied from http://onnx.ai/sklearn-onnx/tutorial.html\r\n\r\n# Train a model using your favorite framework\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.model_selection import train_test_split\r\niris = load_iris()\r\nX, y = iris.data, iris.target\r\nX_train, X_test, y_train, y_test = train_test_split(X, y)\r\n\r\nfrom sklearn.linear_model import LogisticRegression\r\nclr = LogisticRegression()\r\nclr.fit(X_train, y_train)\r\n\r\n\r\n# Step 2: Convert or export the model into ONNX format\r\nfrom skl2onnx import convert_sklearn\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\n\r\ninitial_type = [('float_input', FloatTensorType([None, 4]))]\r\nonx = convert_sklearn(clr, initial_types=initial_type)\r\nwith open(\"logreg_iris.onnx\", \"wb\") as f:\r\n    f.write(onx.SerializeToString())\r\n\r\n# Load and run the model using ONNX Runtime\r\nimport onnxruntime as rt\r\nsess = rt.InferenceSession(\"logreg_iris.onnx\")\r\ninput_name = sess.get_inputs()[0].name\r\n\r\npred_onx = sess.run([label_name], {input_name: X_test.astype(numpy.float32)})[0]\r\n\r\n############################# END CODE ############################\r\nNow in this code, what you'll see is that the model is trained with numpy arrays and not pd.Dataframe/Series which is fine, what is not fine is that while making the prediction, it EXPLICITLY asks for a numpy array and a numpy arrays only, no pd.Dataframe/Series, if you try pd.Dataframe it will throw an error. \r\n\r\nThe reason i think this is a problem is that, mlflow while exposing a model as an endpoint only accepts a serialized Dataframe, or a CSV.\r\nThe out put of df.to_JSON(orient='split') lookis something like this\r\n'{\"columns\":[\"SepalLengthCm\",\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\"index\":[73,18,118,78,76,31]}'\r\nwhich you can see comprises of lists.\r\nIf you would look at the error, the error arises when we are trying to reshape a list with .reshape() which is a numpy method not a python list method.\r\n\r\nSo summarizing up ONNX prediction wants numpy array and mlflow does not accept numpy array directly by Serialized Pandas Dataframe or csv and in internally not making a conversion in source code.\r\n\r\nPlease have a look \r\nWarm regards \r\nSiddharth Kothotya\r\n\r\n\r\n\r\n\r\n","closed_by":{"login":"andychow-db","id":58712524,"node_id":"MDQ6VXNlcjU4NzEyNTI0","avatar_url":"https://avatars.githubusercontent.com/u/58712524?v=4","gravatar_id":"","url":"https://api.github.com/users/andychow-db","html_url":"https://github.com/andychow-db","followers_url":"https://api.github.com/users/andychow-db/followers","following_url":"https://api.github.com/users/andychow-db/following{/other_user}","gists_url":"https://api.github.com/users/andychow-db/gists{/gist_id}","starred_url":"https://api.github.com/users/andychow-db/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andychow-db/subscriptions","organizations_url":"https://api.github.com/users/andychow-db/orgs","repos_url":"https://api.github.com/users/andychow-db/repos","events_url":"https://api.github.com/users/andychow-db/events{/privacy}","received_events_url":"https://api.github.com/users/andychow-db/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2499/timeline","performed_via_github_app":null,"state_reason":"completed"}