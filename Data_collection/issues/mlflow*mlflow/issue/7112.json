{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7112","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/7112/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/7112/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/7112/events","html_url":"https://github.com/mlflow/mlflow/issues/7112","id":1415619554,"node_id":"I_kwDOCB5Jx85UYKPi","number":7112,"title":"[FR] Ability to define order of columns in Experiment screens","user":{"login":"arees88","id":60096624,"node_id":"MDQ6VXNlcjYwMDk2NjI0","avatar_url":"https://avatars.githubusercontent.com/u/60096624?v=4","gravatar_id":"","url":"https://api.github.com/users/arees88","html_url":"https://github.com/arees88","followers_url":"https://api.github.com/users/arees88/followers","following_url":"https://api.github.com/users/arees88/following{/other_user}","gists_url":"https://api.github.com/users/arees88/gists{/gist_id}","starred_url":"https://api.github.com/users/arees88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arees88/subscriptions","organizations_url":"https://api.github.com/users/arees88/orgs","repos_url":"https://api.github.com/users/arees88/repos","events_url":"https://api.github.com/users/arees88/events{/privacy}","received_events_url":"https://api.github.com/users/arees88/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":1893072438,"node_id":"MDU6TGFiZWwxODkzMDcyNDM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":"We would like help from the community to add this support"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/mlflow/mlflow/milestones/3","html_url":"https://github.com/mlflow/mlflow/milestone/3","labels_url":"https://api.github.com/repos/mlflow/mlflow/milestones/3/labels","id":7155995,"node_id":"MI_kwDOCB5Jx84AbTEb","number":3,"title":"MLflow Roadmap","description":"We are looking for help from the community to implement many of these features and bug fixes, which are annotated with the ``help wanted`` label. If you are interested in contributing to the implementation of one or more of these roadmap items, please leave a comment on the corresponding GitHub issue and we will assign a maintainer to support your development (if needed) efforts and aid in getting this feature merged.\r\nPlease carefully review the details within the issue and understand the scope of the implementation as marked within the issue prior to agreeing to take on the implementation work.","creator":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"open_issues":11,"closed_issues":21,"state":"open","created_at":"2021-09-15T20:15:38Z","updated_at":"2023-01-09T04:13:10Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2022-10-19T21:44:36Z","updated_at":"2022-10-27T16:48:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\n\nNo. I cannot contribute this feature at this time.\n\n### Proposal Summary\n\n### Ability to define order of columns in Experiment screens\r\n\r\nIn earlier versions of MLflow there were two dialog boxes:\r\n\r\n**Filter Params\r\nFilter Metrics**\r\n\r\nThese filters provided a simple way to specify the list of desired columns + preserved the order of the columns in the list. \r\n\r\nThe **Filter** lists were easily copied from one experiment to another making it very convenient to have consistent view across the experiments. It worked very well, and I have used this feature a lot.\r\n\r\nIn the recent version of MLflow (**1.28**) I can see the **Columns** dialog that allows to select columns to be displayed, but it does not seem to allow changing the order of these columns. \r\n\r\nAlso, I don't think there is a way to save the **Columns** selection as \"view\" to be reused in other experiments.\r\n\r\nIs it possible to have the old-style **Filter Params** and **Filter Metrics** functionality added to experiments, please?\r\n\r\nMany thanks,\r\nA Rees\n\n### Motivation\n\n> #### What is the use case for this feature?\r\n\r\nThe user can specify the list of parameters and list of metrics to be displayed in Experiment screen, in their chosen order.\r\n\r\nOnce the lists are defined, they can be reused in other experiments giving a consistent “view” across Experiment screens.\r\n\r\nPlease see the example screen shots in the **Details** section.\r\n\r\n\r\n> #### Why is this use case valuable to support for MLflow users in general?\r\n\r\nIt allows the users to define columns to be displayed in the order specific to their needs, even repeat columns if desired (!)\r\n\r\nIt also gives a very simple, yet very powerful mechanism, to define “views” that can be shared across the Experiments. \r\n\r\nThe feature was available in the early versions of MLflow as **Filter Params** and **Filter Metrics** and worked very well.\r\n\r\n\r\n> #### Why is this use case valuable to support for your project(s) or organization?\r\n\r\nIt gives a very convenient way to define the model parameters and metrics of interest, in a specific user defined order.\r\n\r\nExperiment “view” can be defined once and reused, instead of having to define it again and again for each Experiment.\r\n\r\n\r\n> #### Why is it currently difficult to achieve this use case?\r\n\r\nCannot change the order of columns in Experiment screens.\r\n\r\nCannot copy the **Columns** selection from one Experiment to another - have to select them again from scratch.\r\n\r\n\n\n### Details\n\n### **Filter Params** - Usage examples\r\n\r\nBelow are a couple of screen shots showing the old-style **Filter Params** usage examples:\r\n\r\n\r\n**Example 1 – `Exec` param as 1st column**\r\n\r\n![Filter_Params_Example_1](https://user-images.githubusercontent.com/60096624/196472994-43200530-2f0a-4774-afa6-b229b4edc350.png)\r\n\r\n\r\n**Example 2 – `Exec` param as last column**\r\n\r\n![Filter_Params_Example_2](https://user-images.githubusercontent.com/60096624/196472995-dd6dee70-9e1e-47df-b3fd-df0f9cd58385.png)\n\n### What component(s) does this bug affect?\n\n- [ ] `area/artifacts`: Artifact stores and artifact logging\n- [ ] `area/build`: Build and test infrastructure for MLflow\n- [ ] `area/docs`: MLflow documentation pages\n- [ ] `area/examples`: Example code\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\n- [ ] `area/pipelines`: Pipelines, Pipeline APIs, Pipeline configs, Pipeline Templates\n- [ ] `area/projects`: MLproject format, project running backends\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\n- [ ] `area/server-infra`: MLflow Tracking server backend\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\n\n### What interface(s) does this bug affect?\n\n- [X] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\n- [ ] `area/windows`: Windows support\n\n### What language(s) does this bug affect?\n\n- [ ] `language/r`: R APIs and clients\n- [ ] `language/java`: Java APIs and clients\n- [ ] `language/new`: Proposals for new client languages\n\n### What integration(s) does this bug affect?\n\n- [ ] `integrations/azure`: Azure and Azure ML integrations\n- [ ] `integrations/sagemaker`: SageMaker integrations\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/7112/timeline","performed_via_github_app":null,"state_reason":null}