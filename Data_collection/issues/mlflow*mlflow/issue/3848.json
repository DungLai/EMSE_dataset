{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3848","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3848/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3848/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3848/events","html_url":"https://github.com/mlflow/mlflow/issues/3848","id":767431520,"node_id":"MDU6SXNzdWU3Njc0MzE1MjA=","number":3848,"title":"[FR] Enable multi-step pipelines with a kubernetes backend","user":{"login":"fg91","id":36511035,"node_id":"MDQ6VXNlcjM2NTExMDM1","avatar_url":"https://avatars.githubusercontent.com/u/36511035?v=4","gravatar_id":"","url":"https://api.github.com/users/fg91","html_url":"https://github.com/fg91","followers_url":"https://api.github.com/users/fg91/followers","following_url":"https://api.github.com/users/fg91/following{/other_user}","gists_url":"https://api.github.com/users/fg91/gists{/gist_id}","starred_url":"https://api.github.com/users/fg91/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fg91/subscriptions","organizations_url":"https://api.github.com/users/fg91/orgs","repos_url":"https://api.github.com/users/fg91/repos","events_url":"https://api.github.com/users/fg91/events{/privacy}","received_events_url":"https://api.github.com/users/fg91/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848510,"node_id":"MDU6TGFiZWwyMDIyODQ4NTEw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/projects","name":"area/projects","color":"48eabc","default":false,"description":"MLproject format, project running backends"},{"id":2022851725,"node_id":"MDU6TGFiZWwyMDIyODUxNzI1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docker","name":"area/docker","color":"ede978","default":false,"description":"Docker use anywhere, such as MLprojects and MLmodels"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-15T10:24:35Z","updated_at":"2021-01-04T10:01:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\nCurrently, we are running multi-step pipelines with a kubernetes backend where a \"master\" pod executes the pipeline and starts the respective jobs. To do so, we mounted the docker socket of the host machine in order to be able to execute `mlflow.projects.run`. Since kubernetes is deprecating docker, executing multi-step pipelines with mlflow on kubernetes will not be possible in the future.\r\n\r\nWe propose to enable multi-step pipelines with a kubernetes backend also in the future after kubernetes deprecates docker by either 1) enabling building the image also without docker, e.g. with containerd or 2) by optionally allowing to execute `mlflow.projects.run` with a fixed imaged tag argument which would mean that no new images would be built for the individual pipeline steps that all require the same version of the code as already used by the \"pipeline master pod\".\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n- Why is this use case valuable to support for MLflow users in general?\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nRunning multi-step pipelines with a kubernetes backend fully remotely is a central feature for us in our workflows - presumably also for many other users. It is thus important for us to enable this ability also after kubernetes deprecates docker. \r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [x] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [x] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nThe best option would be to optionally enable `mlflow.projects.run` to build the new image also without docker, e.g. with containerd. Another and much easier option would be to add a new argument `image_tag` to `mlflow.projects.run` which would mean that no new image is built and that all steps of the pipeline could be executed with the same version of the code as the \"pipeline master\" but with different entry points.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3848/reactions","total_count":12,"+1":12,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3848/timeline","performed_via_github_app":null,"state_reason":null}