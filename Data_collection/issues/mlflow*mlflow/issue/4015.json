{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4015","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4015/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4015/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4015/events","html_url":"https://github.com/mlflow/mlflow/issues/4015","id":792298315,"node_id":"MDU6SXNzdWU3OTIyOTgzMTU=","number":4015,"title":"[FR] SHAP Explainer Integration","user":{"login":"vivekchettiar","id":68928670,"node_id":"MDQ6VXNlcjY4OTI4Njcw","avatar_url":"https://avatars.githubusercontent.com/u/68928670?v=4","gravatar_id":"","url":"https://api.github.com/users/vivekchettiar","html_url":"https://github.com/vivekchettiar","followers_url":"https://api.github.com/users/vivekchettiar/followers","following_url":"https://api.github.com/users/vivekchettiar/following{/other_user}","gists_url":"https://api.github.com/users/vivekchettiar/gists{/gist_id}","starred_url":"https://api.github.com/users/vivekchettiar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vivekchettiar/subscriptions","organizations_url":"https://api.github.com/users/vivekchettiar/orgs","repos_url":"https://api.github.com/users/vivekchettiar/repos","events_url":"https://api.github.com/users/vivekchettiar/events{/privacy}","received_events_url":"https://api.github.com/users/vivekchettiar/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-01-22T20:53:14Z","updated_at":"2021-01-23T03:35:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [X] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nAddition of 'SHAP' model flavor, Ability to log/load SHAP explainers.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n    **ANS:** Enable users of SHAP to log and load explainers.\r\n- Why is this use case valuable to support for MLflow users in general?\r\n    **ANS:** Currently only explanations can be logged, allowing users to log the explainer itself can allow them to track and deploy them.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n   **ANS:** No support for logging a explainer object as is.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [X] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nLink to PR: https://github.com/mlflow/mlflow/pull/3989\r\n\r\n# Relevant Background \r\n\r\n## Current Support \r\n\r\nCurrently MLFlow supports log_explanation which saves the output of the explainer as an artifact (NumPy array). This is useful if the user wants to store the actual explanation once the explainer has run locally but does not allow for tracking of the explainer and deployment of the explainer. \r\n\r\n \r\n\r\n## Brief overview of SHAP ( https://github.com/slundberg/shap )  \r\n\r\nSHAP is a model-agnostic explainer of ML Models. \r\n\r\nContents of SHAP explainer: \r\n\r\n1) Underlying Model: This is the model SHAP is trying to explain. \r\n2) Masker: A function (explicit or inferred from data) that SHAP explainer uses to perturb and mask inputs. \r\n3) Other Parameters \r\n\r\nFunctionally a SHAP explainer takes in a particular sample that needs to be explained and outputs an explanation of the prediction. \r\n\r\n1) model input ---> underlying_model ---> prediction (NumPy array) \r\n2) model input ---> explainer ---> explanation of prediction (NumPy array) \r\n\r\n\r\nHence once the explainer is constructed it can be thought of as a python function that takes in input like the underlying model (same dimension as input) and output explanation (with a larger dimension than model output). \r\n\r\n \r\n## Recent Changes to SHAP \r\n\r\nIn Fall-2020 we added support for explainer serialization for few of the explainer types within SHAP (Some of this work is under review). This allows users to call explainer.save(out_file) and shap.explainer.load(in_file) to save and load the explainer to disk, respectively. \r\n\r\nAs a part of the serialization process SHAP tries to serialize the underlying model, currently it does cloudpickle.dump() on the model object. Since This might not always work for all model types, SHAP allows users to override the serialization used for models. \r\n\r\nPRs:\r\nhttps://github.com/slundberg/shap/pull/1660\r\nhttps://github.com/slundberg/shap/pull/1681\r\nhttps://github.com/slundberg/shap/pull/1748\r\n\r\n# Proposed Changes to MLFlow \r\n\r\n## ‘SHAP’ model flavor \r\n\r\nSince a SHAP explainer can be thought of as a python function (As mentioned above) we can think of it as a ML Model that takes in standard inputs and outputs explanations as ‘predictions’. Hence, we add an official ‘SHAP’ model flavor.  \r\n\r\nWith support for: \r\n\r\n1) log_explainer (similar to log_model) - logs explainer in current run \r\n2) load_explainer (similar to load_model) - loads explainer given URI\r\n3) save_model - saves explainer to disk in the MLFlow format (with MLModel file, conda.yaml ) \r\n4) _load_pyfunc – to make SHAP explainer model compliant with MLFlow standard \r\n\r\n \r\n## mlflow.shap.save_model() process \r\n\r\n\r\n![save_model](https://user-images.githubusercontent.com/68928670/105544176-a6684d00-5cc8-11eb-8592-d274ecbe6f06.png)\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4015/timeline","performed_via_github_app":null,"state_reason":null}