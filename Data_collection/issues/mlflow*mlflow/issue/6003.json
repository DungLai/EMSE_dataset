{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6003","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/6003/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/6003/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/6003/events","html_url":"https://github.com/mlflow/mlflow/issues/6003","id":1253508363,"node_id":"I_kwDOCB5Jx85KtwUL","number":6003,"title":"Show more actionable annotation for python formatting issues","user":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"labels":[{"id":955449436,"node_id":"MDU6TGFiZWw5NTU0NDk0MzY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"}],"state":"closed","locked":false,"assignee":{"login":"subramaniam02","id":1637727,"node_id":"MDQ6VXNlcjE2Mzc3Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1637727?v=4","gravatar_id":"","url":"https://api.github.com/users/subramaniam02","html_url":"https://github.com/subramaniam02","followers_url":"https://api.github.com/users/subramaniam02/followers","following_url":"https://api.github.com/users/subramaniam02/following{/other_user}","gists_url":"https://api.github.com/users/subramaniam02/gists{/gist_id}","starred_url":"https://api.github.com/users/subramaniam02/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/subramaniam02/subscriptions","organizations_url":"https://api.github.com/users/subramaniam02/orgs","repos_url":"https://api.github.com/users/subramaniam02/repos","events_url":"https://api.github.com/users/subramaniam02/events{/privacy}","received_events_url":"https://api.github.com/users/subramaniam02/received_events","type":"User","site_admin":false},"assignees":[{"login":"subramaniam02","id":1637727,"node_id":"MDQ6VXNlcjE2Mzc3Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1637727?v=4","gravatar_id":"","url":"https://api.github.com/users/subramaniam02","html_url":"https://github.com/subramaniam02","followers_url":"https://api.github.com/users/subramaniam02/followers","following_url":"https://api.github.com/users/subramaniam02/following{/other_user}","gists_url":"https://api.github.com/users/subramaniam02/gists{/gist_id}","starred_url":"https://api.github.com/users/subramaniam02/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/subramaniam02/subscriptions","organizations_url":"https://api.github.com/users/subramaniam02/orgs","repos_url":"https://api.github.com/users/subramaniam02/repos","events_url":"https://api.github.com/users/subramaniam02/events{/privacy}","received_events_url":"https://api.github.com/users/subramaniam02/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-05-31T08:23:37Z","updated_at":"2022-06-04T04:01:37Z","closed_at":"2022-06-04T04:01:37Z","author_association":"MEMBER","active_lock_reason":null,"body":"We use [problem matchers](https://github.com/actions/toolkit/blob/main/docs/problem-matchers.md) to surface python code formatting issues detected by `black` on GitHub UI as shown in the screenshot below:\r\n\r\n<img width=\"716\" alt=\"Screen Shot 2022-05-31 at 17 05 14\" src=\"https://user-images.githubusercontent.com/17039389/171125367-455afb86-31b9-484b-a5c1-84c8ee2f4ce5.png\">\r\n\r\nWe want to replace `would reformat` with a more actionable message. To achieve this, we need to make the following changes:\r\n\r\n1. Modify the output of `black` with `sed`:\r\n\r\n```diff\r\ndiff --git a/dev/lint.sh b/dev/lint.sh\r\nindex 972bffe32..dc26a0a9e 100755\r\n--- a/dev/lint.sh\r\n+++ b/dev/lint.sh\r\n@@ -7,14 +7,7 @@ trap 'err=1' ERR\r\n-black --check .\r\n-\r\n-if [ $? -ne 0 ]; then\r\n-  echo '\r\n-To apply black foramtting, do one of the following:\r\n-- Run `pip install $(cat requirements/lint-requirements.txt | grep \"^black==\") && black .`\r\n-- Comment `autoformat` on the PR'\r\n-fi\r\n+black --check . 2>&1 | sed 's/would reformat/Run `black .` or comment `autoformat` on the PR to format this file:/g'\r\n```\r\n\r\nWith this change, the output of `black` should look like this:\r\n\r\n```bash\r\nSkipping .ipynb files as Jupyter dependencies are not installed.\r\nYou can fix this by running ``pip install black[jupyter]``\r\nRun `black .` or comment `autoformat` on the PR to format this file: tests/pyfunc/test_spark.py\r\n\r\nOh no! ðŸ’¥ ðŸ’” ðŸ’¥\r\n1 file would be reformatted, 608 files would be left unchanged.\r\n\r\n# Original output:\r\n# Skipping .ipynb files as Jupyter dependencies are not installed.\r\n# You can fix this by running ``pip install black[jupyter]``\r\n# would reformat tests/pyfunc/test_spark.py\r\n#\r\n# Oh no! ðŸ’¥ ðŸ’” ðŸ’¥\r\n# 1 file would be reformatted, 608 files would be left unchanged.\r\n```\r\n\r\n2. Fix `/.github/workflows/matchers/black.json` to capture the new message.\r\n\r\n```diff\r\ndiff --git a/.github/workflows/matchers/black.json b/.github/workflows/matchers/black.json\r\nindex 605f10c27..aab652465 100644\r\n--- a/.github/workflows/matchers/black.json\r\n+++ b/.github/workflows/matchers/black.json\r\n@@ -5,7 +5,7 @@\r\n       \"severity\": \"error\",\r\n       \"pattern\": [\r\n         {\r\n-          \"regexp\": \"^(would reformat) (.+)$\",\r\n+          \"regexp\": \"^(Run `black \\.`.+): (.+)$\",\r\n           \"file\": 2,\r\n           \"message\": 1\r\n         }\r\n```\r\n\r\nIf you want to work on this task, please ping me first.","closed_by":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/6003/timeline","performed_via_github_app":null,"state_reason":"completed"}