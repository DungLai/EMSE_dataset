{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6797","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/6797/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/6797/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/6797/events","html_url":"https://github.com/mlflow/mlflow/issues/6797","id":1373463580,"node_id":"I_kwDOCB5Jx85R3WQc","number":6797,"title":"[BUG] pos_label param in mlflow.sklearn.autolog not working properly","user":{"login":"nelsoncardenas","id":18086414,"node_id":"MDQ6VXNlcjE4MDg2NDE0","avatar_url":"https://avatars.githubusercontent.com/u/18086414?v=4","gravatar_id":"","url":"https://api.github.com/users/nelsoncardenas","html_url":"https://github.com/nelsoncardenas","followers_url":"https://api.github.com/users/nelsoncardenas/followers","following_url":"https://api.github.com/users/nelsoncardenas/following{/other_user}","gists_url":"https://api.github.com/users/nelsoncardenas/gists{/gist_id}","starred_url":"https://api.github.com/users/nelsoncardenas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nelsoncardenas/subscriptions","organizations_url":"https://api.github.com/users/nelsoncardenas/orgs","repos_url":"https://api.github.com/users/nelsoncardenas/repos","events_url":"https://api.github.com/users/nelsoncardenas/events{/privacy}","received_events_url":"https://api.github.com/users/nelsoncardenas/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2022-09-14T19:11:30Z","updated_at":"2022-09-30T14:29:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\r\n\r\nYes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n\r\n### MLflow version\r\n\r\n1.28.0\r\n\r\n### System information\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS Monterrey 12.5.1 (chip Apple M1 Pro)\r\n- **Python version**: 3.8.13\r\n- **yarn version, if running the dev UI**: \r\n\r\n#### Folder structure\r\n\r\n```\r\n./\r\n📄 conda.yml\r\n📁 bug_report/\r\n├── 📄 MLproject\r\n├── 📄 conda.yml\r\n├── 📄 run.py\r\n└── 📄 sample.csv\r\n```\r\n\r\n#### command to execute the code\r\n\r\n`mlflow run -e bug_report/run.py --experiment-name bug_report  .`\r\n\r\n\r\n#### main `conda.yml` file to execute run command:\r\n\r\n```yaml\r\nname: env_main\r\nchannels:\r\n  - conda-forge\r\n  - defaults\r\ndependencies:\r\n  - python=3.10.6\r\n  - pip=22.2.2\r\n  - hydra-core=1.2.0\r\n  - dask=2022.8.1\r\n  - black=22.6.0\r\n  - flake8=5.0.4\r\n  - jupyter=1.0.0\r\n  - scikit-learn=1.1.2\r\n  - seaborn=0.12.0\r\n  - pip:\r\n      - mlflow==1.28.0\r\n      - dvc==2.23.0\r\n      - dvc-s3==2.19.0\r\n\r\n```\r\n\r\n#### `bug_report/conda.yml` file:\r\n\r\n```yaml\r\nname: env_bug_report\r\nchannels:\r\n  - conda-forge\r\n  - defaults\r\ndependencies:\r\n  - python=3.8.13\r\n  - pip=22.2.2\r\n  - pandas=1.2.5\r\n  - dask=2021.10.0\r\n  - typer=0.6.1\r\n  - scikit-learn=1.1.2\r\n  - matplotlib=3.5.3\r\n  - pip:\r\n      - mlflow==1.28.0\r\n\r\n```\r\n\r\n#### `bug_report/MLproject`\r\n\r\n```MLproject\r\nname: bug_report\r\nconda_env: conda.yml\r\n\r\nentry_points:\r\n  main:\r\n    parameters:\r\n      path-train:\r\n        type: str\r\n\r\n    command: >-\r\n      python run.py --path-train {path-train}\r\n\r\n```\r\n\r\n#### `bug_report/run.py`\r\n\r\n```python\r\nimport logging\r\n\r\nimport mlflow.sklearn\r\nfrom sklearn.linear_model import LogisticRegression\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\nlogging.basicConfig(level=logging.INFO, format=\"%(asctime)-15s %(message)s\")\r\nlogger = logging.getLogger()\r\n\r\n##### BAD EXAMPLE #####\r\n# - contains two distinct values in y_train: `Charged off` and `Fully Paid`\r\n# - autolog has parameter `pos_label=\"Charged Off\"`\r\n# - detects pos_label as `Fully Paid`.\r\nlogger.info(\"Bad example\")\r\nlogger.info(\"Training model with error in pos_label\")\r\n\r\ndf_train = pd.read_csv(\"bug_report/sample.csv\")\r\nX_train = df_train.drop(columns=[\"loan_status\"])\r\ny_train = np.array(df_train[\"loan_status\"])\r\nlogger.info(f\"...unique values in y_train {np.unique(y_train)}\")\r\nmodel = LogisticRegression()\r\n\r\nmlflow.sklearn.autolog(pos_label=\"Charged Off\")\r\nwith mlflow.start_run() as _:\r\n    model.fit(X_train, y_train)\r\n\r\n##### GOOD EXAMPLE #####\r\n# - contains two distinct values in y_train: `Negative_label` and `Positive_label`\r\n# - autolog has parameter `pos_label=\"Positive_label\"`\r\n# - detects pos_label as `Positive_label`.\r\nlogger.info(\"Good example\")\r\nlogger.info(\"Training model without error in pos_label\")\r\nX_train_2 = np.array([[1, 0], [0, 1], [1, 0], [1, 1], [1, 1], [1, 2]])\r\ny_train_2 = np.array(\r\n    [\r\n        \"Negative_label\",\r\n        \"Negative_label\",\r\n        \"Negative_label\",\r\n        \"Negative_label\",\r\n        \"Positive_label\",\r\n        \"Positive_label\",\r\n    ]\r\n)\r\nlogger.info(f\"...unique values in y_train {np.unique(y_train_2)}\")\r\n\r\nmodel = LogisticRegression()\r\n\r\nmlflow.sklearn.autolog(pos_label=\"Positive_label\")\r\nwith mlflow.start_run() as _:\r\n    model.fit(X_train_2, y_train_2)\r\n\r\n```\r\n\r\n#### `bug_report/sample.csv` file\r\n\r\nI let the data in Google Drive to repeat the mistake.\r\n\r\nhttps://drive.google.com/file/d/1kH-i1_y2B-2vV0KJhpT52vhDs7IpZA3B/view?usp=sharing\r\n\r\n### Describe the problem\r\n\r\nI use the line `mlflow.sklearn.autolog(pos_label=\"Charged Off\")` to define the positive label (this is the minority class), but the positive label reported in the plots from the mlflow server is `\"Fully Paid\"`.\r\n\r\nEvidence:\r\n![image](https://user-images.githubusercontent.com/18086414/190238008-335221c4-965a-48c0-8b7d-03367e66a048.png)\r\n\r\nI created dummy samples to detect the problem, but the error didn't happen again. I let the data in Google Drive to repeat the mistake.\r\n\r\nhttps://drive.google.com/file/d/1kH-i1_y2B-2vV0KJhpT52vhDs7IpZA3B/view?usp=sharing\r\n\r\n\r\n### Tracking information\r\n\r\n_No response_\r\n\r\n### Code to reproduce issue\r\n\r\nmore info in `### System information`\r\n\r\n```python\r\nimport logging\r\n\r\nimport mlflow.sklearn\r\nfrom sklearn.linear_model import LogisticRegression\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\nlogging.basicConfig(level=logging.INFO, format=\"%(asctime)-15s %(message)s\")\r\nlogger = logging.getLogger()\r\n\r\n##### BAD EXAMPLE #####\r\n# - contains two distinct values in y_train: `Charged off` and `Fully Paid`\r\n# - autolog has parameter `pos_label=\"Charged Off\"`\r\n# - detects pos_label as `Fully Paid`.\r\nlogger.info(\"Bad example\")\r\nlogger.info(\"Training model with error in pos_label\")\r\n\r\ndf_train = pd.read_csv(\"bug_report/sample.csv\")\r\nX_train = df_train.drop(columns=[\"loan_status\"])\r\ny_train = np.array(df_train[\"loan_status\"])\r\nlogger.info(f\"...unique values in y_train {np.unique(y_train)}\")\r\nmodel = LogisticRegression()\r\n\r\nmlflow.sklearn.autolog(pos_label=\"Charged Off\")\r\nwith mlflow.start_run() as _:\r\n    model.fit(X_train, y_train)\r\n\r\n##### GOOD EXAMPLE #####\r\n# - contains two distinct values in y_train: `Negative_label` and `Positive_label`\r\n# - autolog has parameter `pos_label=\"Positive_label\"`\r\n# - detects pos_label as `Positive_label`.\r\nlogger.info(\"Good example\")\r\nlogger.info(\"Training model without error in pos_label\")\r\nX_train_2 = np.array([[1, 0], [0, 1], [1, 0], [1, 1], [1, 1], [1, 2]])\r\ny_train_2 = np.array(\r\n    [\r\n        \"Negative_label\",\r\n        \"Negative_label\",\r\n        \"Negative_label\",\r\n        \"Negative_label\",\r\n        \"Positive_label\",\r\n        \"Positive_label\",\r\n    ]\r\n)\r\nlogger.info(f\"...unique values in y_train {np.unique(y_train_2)}\")\r\n\r\nmodel = LogisticRegression()\r\n\r\nmlflow.sklearn.autolog(pos_label=\"Positive_label\")\r\nwith mlflow.start_run() as _:\r\n    model.fit(X_train_2, y_train_2)\r\n\r\n```\r\n\r\n### Stack trace\r\n\r\n```python\r\n# by executing this command mlflow run -e bug_report/run.py --experiment-name bug_repor\r\n```\r\n\r\n```python\r\n2022/09/14 14:07:33 INFO mlflow.utils.conda: Conda environment mlflow-63e1d0b383727eeea5bafbfa5e13d4e3c832be77 already exists.\r\n2022/09/14 14:07:33 INFO mlflow.projects.utils: === Created directory /var/folders/nt/w74p_l0x1h1g63lfz0ybhrdr0000gp/T/tmptrl1l7j8 for downloading remote URIs passed to arguments of type 'path' ===\r\n2022/09/14 14:07:33 INFO mlflow.projects.backend.local: === Running command 'source /Users/nelsoncardenas/opt/miniconda3/bin/../etc/profile.d/conda.sh && conda activate mlflow-63e1d0b383727eeea5bafbfa5e13d4e3c832be77 1>&2 && python bug_report/run.py' in run with ID 'ec5922588def43dea40f502f5482245a' === \r\n2022-09-14 14:07:37,424 Bad example\r\n2022-09-14 14:07:37,424 Training model with error in pos_label\r\n2022-09-14 14:07:37,457 ...unique values in y_train ['Charged Off' 'Fully Paid']\r\n2022/09/14 14:07:44 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: \"/Users/nelsoncardenas/opt/miniconda3/envs/mlflow-63e1d0b383727eeea5bafbfa5e13d4e3c832be77/lib/python3.10/site-packages/mlflow/models/signature.py:129: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.\"\r\n2022/09/14 14:07:45 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: \"/Users/nelsoncardenas/opt/miniconda3/envs/mlflow-63e1d0b383727eeea5bafbfa5e13d4e3c832be77/lib/python3.10/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils.\"\r\n2022-09-14 14:07:45,745 Good example\r\n2022-09-14 14:07:45,745 Training model without error in pos_label\r\n2022-09-14 14:07:45,745 ...unique values in y_train ['Negative_label' 'Positive_label']\r\n2022/09/14 14:07:47 INFO mlflow.projects: === Run (ID 'ec5922588def43dea40f502f5482245a') succeeded ===\r\n```\r\n\r\n### Other info / logs\r\n\r\n_No response_\r\n\r\n### What component(s) does this bug affect?\r\n\r\n- [X] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/pipelines`: Pipelines, Pipeline APIs, Pipeline configs, Pipeline Templates\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\n### What interface(s) does this bug affect?\r\n\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\n### What language(s) does this bug affect?\r\n\r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\n### What integration(s) does this bug affect?\r\n\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/6797/timeline","performed_via_github_app":null,"state_reason":null}