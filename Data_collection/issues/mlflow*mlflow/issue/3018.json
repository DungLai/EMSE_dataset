{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3018","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3018/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3018/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3018/events","html_url":"https://github.com/mlflow/mlflow/issues/3018","id":647557135,"node_id":"MDU6SXNzdWU2NDc1NTcxMzU=","number":3018,"title":"[FR] Sort/Filter Registered Models in GUI","user":{"login":"gtadamson","id":41924842,"node_id":"MDQ6VXNlcjQxOTI0ODQy","avatar_url":"https://avatars.githubusercontent.com/u/41924842?v=4","gravatar_id":"","url":"https://api.github.com/users/gtadamson","html_url":"https://github.com/gtadamson","followers_url":"https://api.github.com/users/gtadamson/followers","following_url":"https://api.github.com/users/gtadamson/following{/other_user}","gists_url":"https://api.github.com/users/gtadamson/gists{/gist_id}","starred_url":"https://api.github.com/users/gtadamson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gtadamson/subscriptions","organizations_url":"https://api.github.com/users/gtadamson/orgs","repos_url":"https://api.github.com/users/gtadamson/repos","events_url":"https://api.github.com/users/gtadamson/events{/privacy}","received_events_url":"https://api.github.com/users/gtadamson/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":1893072438,"node_id":"MDU6TGFiZWwxODkzMDcyNDM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":"We would like help from the community to add this support"},{"id":2022865338,"node_id":"MDU6TGFiZWwyMDIyODY1MzM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-longterm","name":"priority/important-longterm","color":"534cb5","default":false,"description":"Important over the long term, but may not be staffed or may need multiple releases to complete."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-29T17:49:16Z","updated_at":"2020-07-17T10:47:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [X] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nIn the Registered Models summary web page and the individual registered model's pages, it would be nice to be able to filter on or sort by model stage. For example, in the summary if I wanted to see all production models I could click on the Production column and only Production models would be shown (or shown first). Name and Last Modified already are sortable. Similarly for each model there is the ability to select \"Active\", but more fine grained filtering/sorting would be nice\r\n\r\n## Motivation\r\n- What is the use case for this feature? Seeing at a glance all models in a stage\r\n- Why is this use case valuable to support for MLflow users in general? As you have more registered models, it becomes difficult to track which ones are in which stage (this affects this issue too: https://github.com/mlflow/mlflow/issues/3017).\r\n- Why is this use case valuable to support for your project(s) or organization? We have a lot of registered models in various stages. It would be helpful to be able to better see which ones are in each stage all at once.\r\n- Why is it currently difficult to achieve this use case? Pagination plus the lack of filter/sort causes many clicks to determine the state of the system.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [X] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3018/timeline","performed_via_github_app":null,"state_reason":null}