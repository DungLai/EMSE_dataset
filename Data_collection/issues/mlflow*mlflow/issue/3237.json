{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3237","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3237/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3237/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3237/events","html_url":"https://github.com/mlflow/mlflow/issues/3237","id":674570176,"node_id":"MDU6SXNzdWU2NzQ1NzAxNzY=","number":3237,"title":"[FR] Log metrics with confidence intervals and include them in plots","user":{"login":"mauvilsa","id":5780272,"node_id":"MDQ6VXNlcjU3ODAyNzI=","avatar_url":"https://avatars.githubusercontent.com/u/5780272?v=4","gravatar_id":"","url":"https://api.github.com/users/mauvilsa","html_url":"https://github.com/mauvilsa","followers_url":"https://api.github.com/users/mauvilsa/followers","following_url":"https://api.github.com/users/mauvilsa/following{/other_user}","gists_url":"https://api.github.com/users/mauvilsa/gists{/gist_id}","starred_url":"https://api.github.com/users/mauvilsa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mauvilsa/subscriptions","organizations_url":"https://api.github.com/users/mauvilsa/orgs","repos_url":"https://api.github.com/users/mauvilsa/repos","events_url":"https://api.github.com/users/mauvilsa/events{/privacy}","received_events_url":"https://api.github.com/users/mauvilsa/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2022866842,"node_id":"MDU6TGFiZWwyMDIyODY2ODQy","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/awaiting-more-evidence","name":"priority/awaiting-more-evidence","color":"534cb5","default":false,"description":"Lowest priority. Possibly useful, but not yet enough support to actually get it done."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-06T20:07:15Z","updated_at":"2020-08-07T08:46:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [X] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nConfidence intervals (most commonly 95%) can be considered a best practice when comparing metrics to determine which models are better than others, or that the estimation of the metrics are too uncertain to be able to conclude anything. Honestly it puzzles me why the support for confidence intervals is not more widespread in machine learning logging frameworks.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nThe results of any experiment can benefit by logging both point estimates of performance metrics along with confidence intervals to be able to interpret the uncertainty of the metrics.\r\n- Why is this use case valuable to support for MLflow users in general?\r\nSupport confidence intervals allows a good practice any mlflow user.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nWe routinely run experiments computing confidence intervals for the metrics. We also use mlflow, but it is quite frustrating that it does not support confidence intervals because we can't use mlflow to visualize the results that we get.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nConfidence intervals are best used when the are included in plots as error bars which allows easy comparison between different models. Including the low and high values of the intervals as different metrics is not useful because it makes the plots confusing. The error bars are actually important to ease the interpretation of the results.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [X] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [X] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nImplementing this feature would require:\r\n- Extend the log-metric functions in all APIs to support optional lower and upper limits of the confidence intervals.\r\n- Extend the storage of metrics so that it can optionally include the intervals.\r\n- Extend plotting functionalities in the ui so that if confidence intervals are available the user can choose to display them or not.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3237/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3237/timeline","performed_via_github_app":null,"state_reason":null}