{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4668","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4668/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4668/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4668/events","html_url":"https://github.com/mlflow/mlflow/issues/4668","id":962777346,"node_id":"MDU6SXNzdWU5NjI3NzczNDY=","number":4668,"title":"[BUG] S3 Artifact Downloading is Slow due to Multiple Client Verificiations","user":{"login":"Samreay","id":6748505,"node_id":"MDQ6VXNlcjY3NDg1MDU=","avatar_url":"https://avatars.githubusercontent.com/u/6748505?v=4","gravatar_id":"","url":"https://api.github.com/users/Samreay","html_url":"https://github.com/Samreay","followers_url":"https://api.github.com/users/Samreay/followers","following_url":"https://api.github.com/users/Samreay/following{/other_user}","gists_url":"https://api.github.com/users/Samreay/gists{/gist_id}","starred_url":"https://api.github.com/users/Samreay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Samreay/subscriptions","organizations_url":"https://api.github.com/users/Samreay/orgs","repos_url":"https://api.github.com/users/Samreay/repos","events_url":"https://api.github.com/users/Samreay/events{/privacy}","received_events_url":"https://api.github.com/users/Samreay/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-08-06T14:14:24Z","updated_at":"2021-12-02T12:00:53Z","closed_at":"2021-12-02T12:00:53Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting an issue. Please refer to our [issue policy](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md) for additional information about bug reports. For help with debugging your code, please refer to [Stack Overflow](https://stackoverflow.com/questions/tagged/mlflow).\r\n\r\n**Please fill in this bug report template to ensure a timely and thorough response.**\r\n\r\n### Willingness to contribute\r\nThe MLflow Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the MLflow code base?\r\n\r\n- [x] Yes. I can contribute a fix for this bug independently.\r\n- [ ] Yes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute a bug fix at this time.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS, Linux\r\n- **MLflow installed from (source or binary)**:  pip installed\r\n- **MLflow version (run ``mlflow --version``)**:  1.18.0 (applies to master)\r\n- **Python version**: 3.8.5\r\n- **npm version, if running the dev UI**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nMlflow is very slow when downloading complex models that have many artifacts. Investigations show that this is because every single file downloaded via `S3ArtifactRepository._download_file` generates a *brand new* client using `_get_s3_client`, which includes verification. \r\n\r\n\r\nHaving verification is good, but if I am downloading 100 files, making 100 clients and verifying the same details 100 times seems like a bug.\r\n\r\n\r\n\r\n### Code to reproduce issue\r\n\r\nAny code which invokes `_download_file`, such as using `mlflow.pyfunc.load_model`\r\n\r\n\r\n### Other info / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [x] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterface \r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguage \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n### Other info\r\n\r\nTo debug this, I added a `print` statement both to download_file and to the get_s3_client methods in `S3ArtifactRepository`.\r\n\r\nHere is a snippet:\r\n\r\n```\r\nVerifying new client\r\nVerifying new client\r\nDownloaded URI model/artifacts/model11/MLmodel\r\nVerifying new client\r\nDownloaded URI model/artifacts/model11/conda.yaml\r\nVerifying new client\r\nVerifying new client\r\nDownloaded URI model/artifacts/model11/data/custom_objects.cloudpickle\r\nVerifying new client\r\nDownloaded URI model/artifacts/model11/data/keras_module.txt\r\nVerifying new client\r\nVerifying new client\r\nDownloaded URI model/artifacts/model11/data/model/saved_model.pb\r\n```\r\n\r\nWith a simple `lru_cache` added to the `_get_s3_client`, the output became the following (snippet):\r\n\r\n```\r\nVerifying new client\r\nDownloaded URI model/MLmodel\r\nDownloaded URI model/artifacts/model0/MLmodel\r\nDownloaded URI model/artifacts/model0/conda.yaml\r\nDownloaded URI model/artifacts/model0/data/custom_objects.cloudpickle\r\nDownloaded URI model/artifacts/model0/data/keras_module.txt\r\nDownloaded URI model/artifacts/model0/data/model/saved_model.pb\r\nDownloaded URI model/artifacts/model0/data/model/variables/variables.data-00000-of-00001\r\nDownloaded URI model/artifacts/model0/data/model/variables/variables.index\r\nDownloaded URI model/artifacts/model0/data/save_format.txt\r\n```\r\n\r\nIt was also approximately three times faster to download the resources when the repeated verification was removed.\r\n\r\nI can see a few potential solutions:\r\n\r\n1. Adding something like`lru_cache` to the `S3ArtifactRepository._get_s3_client` method\r\n2. Lazy client loading. Aka saving the client into `self` such that `_get_s3_client` is only invoked when the client is None. However it does seem that the class is meant to be effectively stateless so this might not be desired\r\n3. Instead of one client per file, we could make it one client per tree, but this would require changes to the parent `ArtifactRepository.download_artifacts` which is probably not desired \r\n4. Creating a cache specifically around the boto3.client invocation, such that line 60 is separated out into a separate cachable function:\r\n\r\n```python\r\n    def _get_s3_client(self):\r\n        import boto3\r\n        from botocore.client import Config\r\n\r\n        s3_endpoint_url = os.environ.get(\"MLFLOW_S3_ENDPOINT_URL\")\r\n        ignore_tls = os.environ.get(\"MLFLOW_S3_IGNORE_TLS\")\r\n\r\n        do_verify = True\r\n        if ignore_tls:\r\n            do_verify = ignore_tls.lower() not in [\"true\", \"yes\", \"1\"]\r\n\r\n        # The valid verify argument value is None/False/path to cert bundle file, See\r\n        # https://github.com/boto/boto3/blob/73865126cad3938ca80a2f567a1c79cb248169a7/\r\n        # boto3/session.py#L212\r\n        verify = None if do_verify else False\r\n\r\n        # NOTE: If you need to specify this env variable, please file an issue at\r\n        # https://github.com/mlflow/mlflow/issues so we know your use-case!\r\n        signature_version = os.environ.get(\"MLFLOW_EXPERIMENTAL_S3_SIGNATURE_VERSION\", \"s3v4\")\r\n\r\n        return self._get_boto3(signature_version, s3_endpoint_url, verify)\r\n\r\n    @lru_cache()\r\n    def _get_boto3(signature_version, s3_endpoint_url, verify):\r\n        return boto3.client(\r\n            \"s3\",\r\n            config=Config(signature_version=signature_version),\r\n            endpoint_url=s3_endpoint_url,\r\n            verify=verify,\r\n        )\r\n```\r\n\r\n5. Add time expiring cache to the above solution such that a new client is generated every minute or similar. Theres `from cachetools import TTLCache` but this may add an unwanted dependency, so we could simply add an extra time based hash input to `_get_boto3`. If something like `time.time() / some_num` is used as input then it wouldn't guarantee any one TTL expiry, but would give at most 2 client verifications in any `some_num` time range, which is still a large performance gain given the use case is downloading one or more models sequentially which contain many files.\r\n\r\nHappy to implement any of these if a dev can provide guidance on the desired solution.","closed_by":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4668/timeline","performed_via_github_app":null,"state_reason":"completed"}