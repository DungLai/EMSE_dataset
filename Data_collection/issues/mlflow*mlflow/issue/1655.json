{"url":"https://api.github.com/repos/mlflow/mlflow/issues/1655","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/1655/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/1655/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/1655/events","html_url":"https://github.com/mlflow/mlflow/issues/1655","id":471949569,"node_id":"MDU6SXNzdWU0NzE5NDk1Njk=","number":1655,"title":"[Feature Request] Passing additional POST information to scoring_server","user":{"login":"LarsDu","id":17152264,"node_id":"MDQ6VXNlcjE3MTUyMjY0","avatar_url":"https://avatars.githubusercontent.com/u/17152264?v=4","gravatar_id":"","url":"https://api.github.com/users/LarsDu","html_url":"https://github.com/LarsDu","followers_url":"https://api.github.com/users/LarsDu/followers","following_url":"https://api.github.com/users/LarsDu/following{/other_user}","gists_url":"https://api.github.com/users/LarsDu/gists{/gist_id}","starred_url":"https://api.github.com/users/LarsDu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LarsDu/subscriptions","organizations_url":"https://api.github.com/users/LarsDu/orgs","repos_url":"https://api.github.com/users/LarsDu/repos","events_url":"https://api.github.com/users/LarsDu/events{/privacy}","received_events_url":"https://api.github.com/users/LarsDu/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848902,"node_id":"MDU6TGFiZWwyMDIyODQ4OTAy","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/scoring","name":"area/scoring","color":"48eabc","default":false,"description":"MLflow Model server, model deployment tools, Spark UDFs"},{"id":2022866026,"node_id":"MDU6TGFiZWwyMDIyODY2MDI2","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/backlog","name":"priority/backlog","color":"534cb5","default":false,"description":"We believe it is useful, but donâ€™t see it being prioritized in the next few months."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-07-23T21:08:31Z","updated_at":"2022-03-17T14:17:31Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**:\r\n- **Linux Ubuntu 18.04**:\r\n- **MLflow installed from (source or binary)**: \r\n- **MLflow version 1.0.0**:\r\n- **Python 3.7**: \r\n- **`mlflow models serve`**:\r\n\r\n### Describe the problem\r\nRight now when using `mlflow models serve`, we can pass data to the service using a command like:\r\n`curl -X POST -H 'Content-Type: application/json; format=pandas-records' --data '{}' http://127.0.0.1:5000/invocations`\r\n\r\nWhere the \"--data\" has to be of type pandas.DataFrame, pandas.Series, or numpy array.\r\n\r\nI was interested in sending additional data to mlflow.pyfunc.PythonModel.predict() method. For example, a string flag on what type of thresholding should be used for the .predict() output.\r\n\r\nAt the moment, it seems there is no way to do this (correct me if I am wrong). I believe it would be nice to be able to extract the header data directly in PythonModel, or provide means to pass additional flags.\r\n\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/1655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/1655/timeline","performed_via_github_app":null,"state_reason":null}