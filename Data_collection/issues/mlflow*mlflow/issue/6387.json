{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6387","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/6387/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/6387/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/6387/events","html_url":"https://github.com/mlflow/mlflow/issues/6387","id":1326158045,"node_id":"I_kwDOCB5Jx85PC5Dd","number":6387,"title":"I make a request to the databricks api, but I don't have the schema return of the model signature.","user":{"login":"thiagogualberto","id":38990721,"node_id":"MDQ6VXNlcjM4OTkwNzIx","avatar_url":"https://avatars.githubusercontent.com/u/38990721?v=4","gravatar_id":"","url":"https://api.github.com/users/thiagogualberto","html_url":"https://github.com/thiagogualberto","followers_url":"https://api.github.com/users/thiagogualberto/followers","following_url":"https://api.github.com/users/thiagogualberto/following{/other_user}","gists_url":"https://api.github.com/users/thiagogualberto/gists{/gist_id}","starred_url":"https://api.github.com/users/thiagogualberto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thiagogualberto/subscriptions","organizations_url":"https://api.github.com/users/thiagogualberto/orgs","repos_url":"https://api.github.com/users/thiagogualberto/repos","events_url":"https://api.github.com/users/thiagogualberto/events{/privacy}","received_events_url":"https://api.github.com/users/thiagogualberto/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"assignees":[{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-08-02T17:24:18Z","updated_at":"2023-01-02T16:19:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\n\nNo. I cannot contribute a bug fix at this time.\n\n### MLflow version\n\n1.26.0\n\n### System information\n\n- Fedora 3.38.5\r\n- Python 3.8.10\r\n\n\n### Describe the problem\n\nAs can be seen in the implementation (View **Code to reproduce issue**), I did the insertion of signatures in my model. Also, I deployed it to MLflow (The images below confirm this).\r\n![image](https://user-images.githubusercontent.com/38990721/182432175-e9b4d658-9e22-43ae-ba97-5703fa04e03e.png)\r\n\r\n![image](https://user-images.githubusercontent.com/38990721/182432341-0fe98774-fad6-442f-80b6-a73d8ccce45d.png)\r\n\r\nAt the moment, my objective is to test if, when requesting versions of a model, the signature information is contained in it. For that, I made a **GET** request to the endpoint below and got the json of the Insomnia tool figure. Schema information does not appear.\r\n`https://eastus.azuredatabricks.net/api/2.0/mlflow/databricks/registered-models/get?name=classification_extractor`\r\n\r\n![image](https://user-images.githubusercontent.com/38990721/182432542-6c0d51eb-cba8-4c61-948a-df6a1fb07e30.png)\r\n\r\nI looked in the MLflow documentation ([link](https://mlflow.org/docs/latest/rest-api.html#mlflowmodelversion)) and noticed that it uses the **ModelVersion** object. However, it does not return the schema in the model register. How do I see the subscription information in this request I made?\r\n\n\n### Tracking information\n\n_No response_\n\n### Code to reproduce issue\n\n```\r\n\"\"\"\r\nExample of a custom python function implementing image classifier with\r\nimage preprocessing embedded in the model.\r\n\"\"\"\r\n\r\nimport os\r\nimport pickle\r\n\r\nimport mlflow\r\nfrom mlflow.utils.file_utils import TempDir\r\n\r\nfrom mlflow.models.signature import ModelSignature\r\nfrom mlflow.types.schema import Schema, ColSpec\r\n\r\nMODEL_PATH = \"model\"\r\nUTIL_PATH = \"util\"\r\nRGX = r'[^\\d\\s\\wáéíóúàãõêâôîûç]'  # Regex para remoção de caracteres\r\nRGX_SPACES = r'\\s+'  # Regex de remoção de espaços em excesso\r\n\r\n\r\ndef create_signature():\r\n    input_schema = Schema([\r\n        ColSpec(\"string\", \"name\"),\r\n        ColSpec(\"string\", \"structured_metadata\"),\r\n        ColSpec(\"string\", \"raw_metadata\"),\r\n    ])\r\n    output_schema = Schema([ColSpec(\"string\", \"classification\")])\r\n    signature = ModelSignature(inputs=input_schema, outputs=output_schema)\r\n    return signature\r\n\r\n\r\ndef extract_classification(infantil_tokens, bebe_tokens, adulto_tokens):\r\n    \"\"\"\r\n    Extrai o gênero a partir dos campos convencionais de extração.\r\n    Ordem dos textos informados influencia na prioridade de extração:\r\n        O primeiro texto, se conter um dos tokens, será considerado extraído.\r\n        Senão, pula para o próximo.\r\n\r\n    - Textos input precisam estar em lower case.\r\n    - Textos input precisam ter passado pela seguinte substituição de regex:\r\n        r'[^\\d\\s\\wáéíóúàãõêâôîûç]' -> ' '\r\n    - Textos input precisam ter remoção de espaços em excesso\r\n    \"\"\"\r\n\r\n    def _ext(*texts):\r\n        def comp(t, tokens):\r\n            return any(x in t for x in tokens)\r\n\r\n        for text in texts:\r\n            _text = set(text.split())\r\n            infantil = comp(_text, infantil_tokens)\r\n            bebe_intersection = _text.intersection(bebe_tokens)\r\n            bebe = bool(bebe_intersection)\r\n            adulto = comp(_text, adulto_tokens)\r\n\r\n            if infantil and adulto:\r\n                return None\r\n            if infantil:\r\n                return 'Infantil'\r\n            if adulto:\r\n                return 'Adulto'\r\n            if bebe:\r\n                # se a única interseção for \"baby\", precisamos garantir que o termo \"baby look\"\r\n                # não se encontra no texto. Se não for a única interseção, é sinal de que\r\n                # existem mais tokens de bebê, então deixa a coisa acontecer\r\n                if (\r\n                    len(bebe_intersection) == 1 and\r\n                    list(bebe_intersection)[0] == \"baby\" and\r\n                    \"baby look\" in text\r\n                ):\r\n                    continue\r\n                return 'Bebê'\r\n\r\n        return None\r\n    return _ext\r\n\r\n\r\nclass TemplateClassifierPyfunc(object):\r\n\r\n    def __init__(self, artifact_path, infantil_tokens, bebe_tokens,\r\n                 adulto_tokens, params=None):\r\n        \"\"\"Constructor.\"\"\"\r\n\r\n        self.artifact_path = artifact_path\r\n        self.infantil_tokens = infantil_tokens\r\n        self.bebe_tokens = bebe_tokens\r\n        self.adulto_tokens = adulto_tokens\r\n        self.params = params\r\n\r\n        self.func = extract_classification(infantil_tokens, bebe_tokens, adulto_tokens)\r\n\r\n    def predict(self, df):\r\n        cols = ['name', 'structured_metadata', 'raw_metadata']\r\n\r\n        # parse necessário das colunas: lower case e regex\r\n        for c in cols:\r\n            df[c] = df[c].str.lower().str.replace(RGX, ' ', regex=True)\r\n            df[c] = df[c].str.replace(RGX_SPACES, ' ', regex=True)\r\n        result = df.apply(lambda x: self.func(*x[cols].values), axis=1).tolist()\r\n\r\n        return {'classification': x for x in result}\r\n\r\n\r\ndef log_model_custom(infantil_tokens, bebe_tokens, adulto_tokens, **kwargs):\r\n    with TempDir() as tmp:\r\n        data_path = tmp.path(UTIL_PATH)\r\n        os.mkdir(data_path)\r\n\r\n        requirements_file = \"../requirements.txt\"\r\n        conda_env_file = \"../conda.yaml\"\r\n        requirements_path = os.path.join(\r\n            os.path.dirname(os.path.realpath(__file__)), requirements_file)\r\n        conda_env_path = os.path.join(\r\n            os.path.dirname(os.path.realpath(__file__)), conda_env_file)\r\n\r\n        with open(os.path.join(data_path, 'infantil_tokens.pkl'), 'wb') as handle:\r\n            pickle.dump(infantil_tokens, handle, protocol=pickle.HIGHEST_PROTOCOL)\r\n\r\n        with open(os.path.join(data_path, 'bebe_tokens.pkl'), 'wb') as handle:\r\n            pickle.dump(bebe_tokens, handle, protocol=pickle.HIGHEST_PROTOCOL)\r\n\r\n        with open(os.path.join(data_path, 'adulto_tokens.pkl'), 'wb') as handle:\r\n            pickle.dump(adulto_tokens, handle, protocol=pickle.HIGHEST_PROTOCOL)\r\n\r\n        if kwargs:\r\n            with open(os.path.join(data_path, 'params.pkl'), 'wb') as handle:\r\n                pickle.dump(kwargs, handle, protocol=pickle.HIGHEST_PROTOCOL)\r\n\r\n        signature = create_signature()\r\n\r\n        mlflow.pyfunc.log_model(\r\n            artifact_path=MODEL_PATH,\r\n            loader_module=__name__,\r\n            code_path=[__file__],\r\n            data_path=os.path.join(data_path),\r\n            conda_env=conda_env_path,\r\n            signature=signature\r\n        )\r\n\r\n        mlflow.log_params(kwargs)\r\n        mlflow.log_artifact(requirements_path, MODEL_PATH)\r\n\r\n\r\ndef _load_pyfunc(path):\r\n\r\n    with open(os.path.join(path, 'infantil_tokens.pkl'), 'rb') as handle:\r\n        infantil_tokens = pickle.load(handle)\r\n\r\n    with open(os.path.join(path, 'bebe_tokens.pkl'), 'rb') as handle:\r\n        bebe_tokens = pickle.load(handle)\r\n\r\n    with open(os.path.join(path, 'adulto_tokens.pkl'), 'rb') as handle:\r\n        adulto_tokens = pickle.load(handle)\r\n\r\n    params = None\r\n    paramspath = os.path.join(path, 'params.pkl')\r\n    if os.path.exists(paramspath):\r\n        with open(paramspath, 'rb') as handle:\r\n            params = pickle.load(handle)\r\n\r\n    _obj = TemplateClassifierPyfunc(path, infantil_tokens, bebe_tokens,\r\n                                    adulto_tokens, params)\r\n\r\n    return _obj\r\n```\n\n### Stack trace\n\nThe code snippets referring to the model signature are in the lines:\r\n12\r\n13\r\n21-29\r\n129\r\n137\n\n### Other info / logs\n\n_No response_\n\n### What component(s) does this bug affect?\n\n- [ ] `area/artifacts`: Artifact stores and artifact logging\n- [ ] `area/build`: Build and test infrastructure for MLflow\n- [ ] `area/docs`: MLflow documentation pages\n- [ ] `area/examples`: Example code\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\n- [ ] `area/pipelines`: Pipelines, Pipeline APIs, Pipeline configs, Pipeline Templates\n- [ ] `area/projects`: MLproject format, project running backends\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\n- [ ] `area/server-infra`: MLflow Tracking server backend\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\n\n### What interface(s) does this bug affect?\n\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\n- [ ] `area/windows`: Windows support\n\n### What language(s) does this bug affect?\n\n- [ ] `language/r`: R APIs and clients\n- [ ] `language/java`: Java APIs and clients\n- [ ] `language/new`: Proposals for new client languages\n\n### What integration(s) does this bug affect?\n\n- [ ] `integrations/azure`: Azure and Azure ML integrations\n- [ ] `integrations/sagemaker`: SageMaker integrations\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/6387/timeline","performed_via_github_app":null,"state_reason":null}