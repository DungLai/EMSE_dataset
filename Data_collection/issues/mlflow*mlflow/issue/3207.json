{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3207","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3207/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3207/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3207/events","html_url":"https://github.com/mlflow/mlflow/issues/3207","id":669803648,"node_id":"MDU6SXNzdWU2Njk4MDM2NDg=","number":3207,"title":"How to create logging from a custom mlflow.pyfunc.PythonModel from \"mlflow models build-docker\"","user":{"login":"bobdemp","id":38502893,"node_id":"MDQ6VXNlcjM4NTAyODkz","avatar_url":"https://avatars.githubusercontent.com/u/38502893?v=4","gravatar_id":"","url":"https://api.github.com/users/bobdemp","html_url":"https://github.com/bobdemp","followers_url":"https://api.github.com/users/bobdemp/followers","following_url":"https://api.github.com/users/bobdemp/following{/other_user}","gists_url":"https://api.github.com/users/bobdemp/gists{/gist_id}","starred_url":"https://api.github.com/users/bobdemp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobdemp/subscriptions","organizations_url":"https://api.github.com/users/bobdemp/orgs","repos_url":"https://api.github.com/users/bobdemp/repos","events_url":"https://api.github.com/users/bobdemp/events{/privacy}","received_events_url":"https://api.github.com/users/bobdemp/received_events","type":"User","site_admin":false},"labels":[{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022851725,"node_id":"MDU6TGFiZWwyMDIyODUxNzI1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docker","name":"area/docker","color":"ede978","default":false,"description":"Docker use anywhere, such as MLprojects and MLmodels"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2020-07-31T13:12:43Z","updated_at":"2020-08-04T10:48:46Z","closed_at":"2020-08-04T10:29:27Z","author_association":"NONE","active_lock_reason":null,"body":"Hi\r\n\r\nNot sure were to ask this.\r\n\r\nI have a custom mlflow.pyfunc.PythonModel model that I build into a docker container using mlflow models build-docker.  The problem I am encountering is how to get the logging into the container stdout.  Nothing appears.\r\n\r\nWhen I use the model from a notebook \r\n\r\n```\r\nartifact_path = mlflow.search_runs(order_by=[\"attributes.start_time DESC\"])['artifact_uri'].iloc[0]\r\nloaded_model  = mlflow.pyfunc.load_model(artifact_path + \"/\" + mlflow_pyfunc_model_path)\r\nloaded_model.predict(...)\r\n```\r\n\r\nI get output.  I also get output when I use mlflow serve the output appears as well\r\n\r\nMy custom mlflow.pyfunc.PythonModel model\r\n\r\n```\r\nimport logging\r\n\r\n_logger = logging.getLogger(\"e ml\")\r\n_logger.setLevel(logging.INFO)\r\n\r\nartifacts = {\r\n    \"embedded_model\" : model_pickle_file,\r\n}\r\n\r\nclass ModelWrapper(mlflow.pyfunc.PythonModel):\r\n\r\n    def __init__(self, version):      \r\n        self.version = version\r\n        \r\n    def load_context(self, context):\r\n      \r\n        import cloudpickle\r\n        \r\n        self.embedded_model = cloudpickle.load(open(context.artifacts['embedded_model'], 'rb'))\r\n          \r\n    def predict(self, context, model_input):\r\n                        \r\n        health_check = model_input.iloc[0][0]\r\n        api_uuid     = model_input.iloc[0][1]\r\n        env          = model_input.iloc[0][2]\r\n        df           = model_input.drop(model_input.columns[[0,1,2]], axis=1)     \r\n               \r\n        if health_check.upper() == 'Y':\r\n          \r\n           # K8 health check\r\n          \r\n           _logger.info(\"K8 Health check found\")\r\n          \r\n           return {'calling_api_uid' : api_uuid,\r\n                    'Status'          : 'OK'}\r\n\r\n        else:\r\n          \r\n           _logger.info(\"Starting api_uuid  - [%s]\" % api_uuid)\r\n\r\n           start_time       = datetime.datetime.now()\r\n\r\n           predictions      = self.embedded_model.predict(df)\r\n\r\n           end_time         = datetime.datetime.now()        \r\n           time_diff        = end_time-start_time        \r\n           output_time_diff = str(time_diff.seconds) + \".\" + str(time_diff.microseconds)\r\n\r\n           _logger.info(\"Model Runtime Info - [%s][%s][%s][%s]\" % (api_uuid, start_time.isoformat(), end_time.isoformat(), output_time_diff))\r\n\r\n           return {                                                                                                                                                                                         }, \r\n                 \"data\"               : {\"model_inputs\"           : (df.values), \r\n                                         \"model_prediction\"       : predictions[0]\r\n                                        }\r\n                  }  \r\n```\r\n\r\nAny help would be much appreciated\r\n\r\nThanks\r\n\r\nBob","closed_by":{"login":"bobdemp","id":38502893,"node_id":"MDQ6VXNlcjM4NTAyODkz","avatar_url":"https://avatars.githubusercontent.com/u/38502893?v=4","gravatar_id":"","url":"https://api.github.com/users/bobdemp","html_url":"https://github.com/bobdemp","followers_url":"https://api.github.com/users/bobdemp/followers","following_url":"https://api.github.com/users/bobdemp/following{/other_user}","gists_url":"https://api.github.com/users/bobdemp/gists{/gist_id}","starred_url":"https://api.github.com/users/bobdemp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobdemp/subscriptions","organizations_url":"https://api.github.com/users/bobdemp/orgs","repos_url":"https://api.github.com/users/bobdemp/repos","events_url":"https://api.github.com/users/bobdemp/events{/privacy}","received_events_url":"https://api.github.com/users/bobdemp/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3207/timeline","performed_via_github_app":null,"state_reason":"completed"}