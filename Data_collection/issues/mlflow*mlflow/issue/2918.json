{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2918","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2918/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2918/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2918/events","html_url":"https://github.com/mlflow/mlflow/issues/2918","id":635459441,"node_id":"MDU6SXNzdWU2MzU0NTk0NDE=","number":2918,"title":"[FR] Save optimizer state_dict with mlflow.pytorch.save_model() with a dictionary ","user":{"login":"Haxxardoux","id":59566611,"node_id":"MDQ6VXNlcjU5NTY2NjEx","avatar_url":"https://avatars.githubusercontent.com/u/59566611?v=4","gravatar_id":"","url":"https://api.github.com/users/Haxxardoux","html_url":"https://github.com/Haxxardoux","followers_url":"https://api.github.com/users/Haxxardoux/followers","following_url":"https://api.github.com/users/Haxxardoux/following{/other_user}","gists_url":"https://api.github.com/users/Haxxardoux/gists{/gist_id}","starred_url":"https://api.github.com/users/Haxxardoux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Haxxardoux/subscriptions","organizations_url":"https://api.github.com/users/Haxxardoux/orgs","repos_url":"https://api.github.com/users/Haxxardoux/repos","events_url":"https://api.github.com/users/Haxxardoux/events{/privacy}","received_events_url":"https://api.github.com/users/Haxxardoux/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022865338,"node_id":"MDU6TGFiZWwyMDIyODY1MzM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-longterm","name":"priority/important-longterm","color":"534cb5","default":false,"description":"Important over the long term, but may not be staffed or may need multiple releases to complete."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-09T14:03:20Z","updated_at":"2021-02-01T13:53:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [X] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\nTorch's torch.save method currently allows you to pass the model instance as the first argument, _or_ a dictionary (see picture below). This dictionary is very important when multiple training sessions are required, since it is also of interest to save epoch number and optimizer configuration (particularly when using momentum/decay). I suggest that this functionality be extended to mlflow.pytorch.log_model() or an additional function\r\n\r\n![image](https://user-images.githubusercontent.com/59566611/84154067-9c912280-aa34-11ea-80cc-6b93a8216730.png)\r\n\r\n source: https://pytorch.org/tutorials/beginner/saving_loading_models.html\r\n## Motivation\r\nThe primary usage of this feature would be cases where multiple training sessions are required, and it is very important to keep track of the state_dict of the optimizer as well of the model. Currently, it is _possible_ to save the optimizer state_dict locally, and use log_artifact to move it to artifact file, but it can cause local files to accumulate and it is also somewhat difficult to later reference this artifact. If model state_dicts _and_ optimizer state_dicts could be stored as a dictionary in the same place, and could be loaded with mlflow.pytorch.load_model, it would remove lots of extra steps currently required to facilitate multiple training sessions accurately. \r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\nSince what i am suggesting is similar to the functionality of a torch function, here is a link to that function. Optionally passing a dictionary to save_model() should be backwards compatible and in general make it much easier to save certain artifacts.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/4ec86ca5ba273dfc350446fc469e6a840c176351/torch/serialization.py#L330\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2918/timeline","performed_via_github_app":null,"state_reason":null}