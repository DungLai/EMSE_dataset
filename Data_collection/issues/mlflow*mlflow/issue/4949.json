{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4949","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4949/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4949/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4949/events","html_url":"https://github.com/mlflow/mlflow/issues/4949","id":1036686793,"node_id":"I_kwDOCB5Jx849ypXJ","number":4949,"title":"[FR] model serving for image inference","user":{"login":"mmaitre314","id":8584604,"node_id":"MDQ6VXNlcjg1ODQ2MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/8584604?v=4","gravatar_id":"","url":"https://api.github.com/users/mmaitre314","html_url":"https://github.com/mmaitre314","followers_url":"https://api.github.com/users/mmaitre314/followers","following_url":"https://api.github.com/users/mmaitre314/following{/other_user}","gists_url":"https://api.github.com/users/mmaitre314/gists{/gist_id}","starred_url":"https://api.github.com/users/mmaitre314/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmaitre314/subscriptions","organizations_url":"https://api.github.com/users/mmaitre314/orgs","repos_url":"https://api.github.com/users/mmaitre314/repos","events_url":"https://api.github.com/users/mmaitre314/events{/privacy}","received_events_url":"https://api.github.com/users/mmaitre314/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848902,"node_id":"MDU6TGFiZWwyMDIyODQ4OTAy","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/scoring","name":"area/scoring","color":"48eabc","default":false,"description":"MLflow Model server, model deployment tools, Spark UDFs"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-10-26T19:58:02Z","updated_at":"2021-10-26T19:58:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nWe are trying to use MLFlow model REST serving to run image inference. Images are typically sent with content types like `application/octet-stream`, `multipart/form-data`, `image/jpeg`, etc. Going through the MLFlow docs it does not look like those content types are supported and instead images need to be base64-encoded as part of a JSON payload:\r\nhttps://github.com/mlflow/mlflow/tree/master/examples/flower_classifier#how-to-train-and-deploy-image-classifier-with-mlflow-and-keras\r\nAdding support for binary HTTP payload would be more client friendly and increase performance.\r\n\r\n## Motivation\r\n- What is the use case for this feature? Realtime image inference\r\n- Why is this use case valuable to support for MLflow users in general? It would bring MLFlow serving on par with production-level services like Azure Cognitive Services [[API doc](https://southcentralus.dev.cognitive.microsoft.com/docs/services/Custom_Vision_Prediction_3.1/operations/5eb37d24548b571998fde5f3)]\r\n- Why is this use case valuable to support for your project(s) or organization? It would provide a uniform way to manage models and endpoints, whether they deal with JSON, images, audio, etc.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient) Base64-encoding-in-JSON of images is an unusual way for REST APIs to handle images.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [x] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n\r\nOne option could be for the server to expand its supported content types and use Pillow to convert images to Pandas. Ideally this would integrate with transform pipelines in PyTorch, Tensforflow, etc. to avoid drift between training and inference (ex: scaling color channels by 1/255, etc.).\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4949/timeline","performed_via_github_app":null,"state_reason":null}