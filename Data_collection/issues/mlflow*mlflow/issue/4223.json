{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4223","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4223/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4223/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4223/events","html_url":"https://github.com/mlflow/mlflow/issues/4223","id":849327642,"node_id":"MDU6SXNzdWU4NDkzMjc2NDI=","number":4223,"title":"[BUG] Using a signature in a Tensorflow model throws an exception","user":{"login":"saschaschramm","id":26352322,"node_id":"MDQ6VXNlcjI2MzUyMzIy","avatar_url":"https://avatars.githubusercontent.com/u/26352322?v=4","gravatar_id":"","url":"https://api.github.com/users/saschaschramm","html_url":"https://github.com/saschaschramm","followers_url":"https://api.github.com/users/saschaschramm/followers","following_url":"https://api.github.com/users/saschaschramm/following{/other_user}","gists_url":"https://api.github.com/users/saschaschramm/gists{/gist_id}","starred_url":"https://api.github.com/users/saschaschramm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saschaschramm/subscriptions","organizations_url":"https://api.github.com/users/saschaschramm/orgs","repos_url":"https://api.github.com/users/saschaschramm/repos","events_url":"https://api.github.com/users/saschaschramm/events{/privacy}","received_events_url":"https://api.github.com/users/saschaschramm/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022848902,"node_id":"MDU6TGFiZWwyMDIyODQ4OTAy","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/scoring","name":"area/scoring","color":"48eabc","default":false,"description":"MLflow Model server, model deployment tools, Spark UDFs"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-04-02T16:36:10Z","updated_at":"2021-06-18T06:12:11Z","closed_at":"2021-06-18T06:12:11Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting an issue. Please refer to our [issue policy](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md) for additional information about bug reports. For help with debugging your code, please refer to [Stack Overflow](https://stackoverflow.com/questions/tagged/mlflow).\r\n\r\n**Please fill in this bug report template to ensure a timely and thorough response.**\r\n\r\n### Willingness to contribute\r\nThe MLflow Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the MLflow code base?\r\n\r\n- [ ] Yes. I can contribute a fix for this bug independently.\r\n- [ ] Yes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n- [ X] No. I cannot contribute a bug fix at this time.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: Custom\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS Big Sur 11.2.3\r\n- **MLflow installed from (source or binary)**: binary\r\n- **MLflow version (run ``mlflow --version``)**: 1.15.0\r\n- **Python version**: 3.8.8\r\n- **npm version, if running the dev UI**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n**Actual behavior:**\r\n\r\nWhen a TensorFlow model with a signature is serialized and used for a prediction the MLflow predict method throws an exception.\r\n\r\nModel with signature being saved (this works):\r\n\r\n```python\r\n@tf.function(input_signature=[tf.TensorSpec(shape=[1, 1], dtype=tf.float32, name='input')])\r\n        def serve_fn(example):\r\n            outputs = model(example)\r\n            return outputs\r\n\r\ntf.saved_model.save(model, TF_MODEL_DIR,\r\n                            signatures={'serving_default': serve_fn.get_concrete_function()})\r\n\r\nmlflow.tensorflow.log_model(\r\n                tf_saved_model_dir=TF_MODEL_DIR,\r\n                tf_meta_graph_tags=['serve'],\r\n                tf_signature_def_key='serving_default',\r\n                artifact_path='mlflow_model'\r\n            )\r\n\r\n```\r\n\r\nThis throws an exception:\r\n```python\r\nmlflow_model = mlflow.pyfunc.load_model(model_uri)\r\nprediction = mlflow_model.predict(feed_dict)\r\n```\r\n\r\nInterestingly an exception is not thrown when the TF2Wrapper is instantiated directly:\r\n``` python\r\nloaded_model = tf.saved_model.load(\r\n                export_dir=f'mlruns/0/{run.info.run_id}/artifacts/mlflow_model/tfmodel',\r\n                tags=['serve']\r\n            )\r\ntf2_wrapper = _TF2Wrapper(infer=loaded_model.signatures['serving_default'])\r\nprediction = tf2_wrapper.predict(feed_dict)\r\n```\r\n\r\n**Expected behavior:** \r\n`mlflow_model.predict(feed_dict)` shouldn't throw an exception when using a signature.\r\n\r\n### Code to reproduce issue\r\n\r\n```python\r\nimport unittest\r\n\r\nimport mlflow\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom mlflow.tensorflow import _TF2Wrapper\r\n\r\n\r\nclass TestTfModelPredict(unittest.TestCase):\r\n\r\n    def test_tf_model_predict(self):\r\n        tf.random.set_seed(1337)\r\n        TF_MODEL_DIR = \"model\"\r\n\r\n        # Build model\r\n        inputs = tf.keras.layers.Input(shape=1, name='input', dtype=tf.float32)\r\n        outputs = tf.keras.layers.Dense(1)(inputs)\r\n        model = tf.keras.Model(inputs=inputs, outputs=[outputs])\r\n\r\n        # Compile model\r\n        model.compile(\r\n            optimizer='rmsprop',\r\n            loss='categorical_crossentropy',\r\n            metrics=['accuracy'])\r\n\r\n        # Serving signature\r\n        @tf.function(input_signature=[tf.TensorSpec(shape=[1, 1], dtype=tf.float32, name='input')])\r\n        def serve_fn(example):\r\n            outputs = model(example)\r\n            return outputs\r\n\r\n        # Save model with serving signature\r\n        tf.saved_model.save(model, TF_MODEL_DIR,\r\n                            signatures={'serving_default': serve_fn.get_concrete_function()})\r\n\r\n        feed_dict = {\"input\": tf.constant([[2.0]])}\r\n        loaded_model = tf.saved_model.load(TF_MODEL_DIR)\r\n\r\n        infer = loaded_model.signatures['serving_default']\r\n        prediction = infer(**feed_dict)\r\n\r\n        # This works as expected\r\n        np.testing.assert_allclose(prediction['output_0'], np.asarray([[-0.09599352]]))\r\n\r\n        # Save as mlflow model\r\n        with mlflow.start_run() as run:\r\n            mlflow.tensorflow.log_model(\r\n                tf_saved_model_dir=TF_MODEL_DIR,\r\n                tf_meta_graph_tags=['serve'],\r\n                tf_signature_def_key='serving_default',\r\n                artifact_path='mlflow_model'\r\n            )\r\n\r\n            loaded_model = tf.saved_model.load(\r\n                export_dir=f'mlruns/0/{run.info.run_id}/artifacts/mlflow_model/tfmodel',\r\n                tags=['serve']\r\n            )\r\n\r\n            tf2_wrapper = _TF2Wrapper(infer=loaded_model.signatures['serving_default'])\r\n            prediction = tf2_wrapper.predict(feed_dict)\r\n\r\n            # This works as expected\r\n            np.testing.assert_allclose(prediction['output_0'], np.asarray([-0.09599352]))\r\n            model_uri = f'mlruns/0/{run.info.run_id}/artifacts/mlflow_model'\r\n            mlflow_model = mlflow.pyfunc.load_model(model_uri)\r\n\r\n            # This doesn't work (!!!)\r\n            prediction = mlflow_model.predict(feed_dict)\r\n            np.testing.assert_allclose(prediction['output_0'], np.asarray([-0.09599352]))\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n\r\n```\r\n\r\n\r\n### Other info / logs\r\nError\r\nTraceback (most recent call last):\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/unittest/case.py\", line 60, in testPartExecutor\r\n    yield\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/unittest/case.py\", line 676, in run\r\n    self._callTestMethod(testMethod)\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/unittest/case.py\", line 633, in _callTestMethod\r\n    method()\r\n  File \"/Users/schramm/PycharmProjects/kiwi/test-mlflow2/tensorflow/test.py\", line 62, in test_tf_model_predict\r\n    prediction = mlflow_model.predict(feed_dict)\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/mlflow/pyfunc/__init__.py\", line 575, in predict\r\n    return self._model_impl.predict(data)\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/mlflow/tensorflow.py\", line 582, in predict\r\n    raw_preds = self.infer(**feed_dict)\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/tensorflow/python/eager/function.py\", line 1669, in __call__\r\n    return self._call_impl(args, kwargs)\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/tensorflow/python/eager/function.py\", line 1678, in _call_impl\r\n    return self._call_with_structured_signature(args, kwargs,\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/tensorflow/python/eager/function.py\", line 1759, in _call_with_structured_signature\r\n    return self._call_flat(\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py\", line 115, in _call_flat\r\n    return super(_WrapperFunction, self)._call_flat(args, captured_inputs,\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/tensorflow/python/eager/function.py\", line 1918, in _call_flat\r\n    return self._build_call_outputs(self._inference_function.call(\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/tensorflow/python/eager/function.py\", line 555, in call\r\n    outputs = execute.execute(\r\n  File \"/usr/local/anaconda3/envs/test-mlflow2/lib/python3.8/site-packages/tensorflow/python/eager/execute.py\", line 59, in quick_execute\r\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\r\ntensorflow.python.framework.errors_impl.FailedPreconditionError:  Error while reading resource variable _AnonymousVar15 from Container: localhost. This could mean that the variable was uninitialized. Not found: Resource localhost/_AnonymousVar15/N10tensorflow3VarE does not exist.\r\n\t [[{{node StatefulPartitionedCall/model/dense/BiasAdd/ReadVariableOp}}]] [Op:__inference_signature_wrapper_932]\r\n\r\nFunction call stack:\r\nsignature_wrapper\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [X ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ X] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterface \r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguage \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n","closed_by":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4223/timeline","performed_via_github_app":null,"state_reason":"completed"}