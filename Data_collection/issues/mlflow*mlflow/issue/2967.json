{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2967","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2967/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2967/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2967/events","html_url":"https://github.com/mlflow/mlflow/issues/2967","id":641616572,"node_id":"MDU6SXNzdWU2NDE2MTY1NzI=","number":2967,"title":"If main.py exists but MLProject does not, use main.py as default entry point [FR]","user":{"login":"andyk","id":228998,"node_id":"MDQ6VXNlcjIyODk5OA==","avatar_url":"https://avatars.githubusercontent.com/u/228998?v=4","gravatar_id":"","url":"https://api.github.com/users/andyk","html_url":"https://github.com/andyk","followers_url":"https://api.github.com/users/andyk/followers","following_url":"https://api.github.com/users/andyk/following{/other_user}","gists_url":"https://api.github.com/users/andyk/gists{/gist_id}","starred_url":"https://api.github.com/users/andyk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andyk/subscriptions","organizations_url":"https://api.github.com/users/andyk/orgs","repos_url":"https://api.github.com/users/andyk/repos","events_url":"https://api.github.com/users/andyk/events{/privacy}","received_events_url":"https://api.github.com/users/andyk/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022848510,"node_id":"MDU6TGFiZWwyMDIyODQ4NTEw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/projects","name":"area/projects","color":"48eabc","default":false,"description":"MLproject format, project running backends"},{"id":2022866026,"node_id":"MDU6TGFiZWwyMDIyODY2MDI2","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/backlog","name":"priority/backlog","color":"534cb5","default":false,"description":"We believe it is useful, but donâ€™t see it being prioritized in the next few months."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-19T00:01:27Z","updated_at":"2020-07-20T21:25:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [x] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n\r\n## Proposal Summary\r\n\r\nToday, if I execute `mlflow run .` in a directory where an `MLProject` file does *not* exist but a `main.py` file does exist, MLflow does returns an error that it cannot find the default entry point \"main\" (since no entry points are defined anywhere).\r\n\r\nThus, I have to use the entry-point flag in this case, as in `mlflow run . --entry-point main.py`. \r\n\r\nI propose that if a file named `main.py` exists and one named `MLProject` does not, then MLflow run should run `python main.py` instead of returning an error.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n\r\nThis would make it easier to use the MLflow CLI to run projects that don't want to take the relatively heavy weight step of adding an MLProject file to their source repo.\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\n\r\nThis provides an extremely light weight path for folks to make their project/git repo a runnable entity via MLflow: just add main.py to your project, or if you already have one, you're already done.\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n\r\nI'm writing a tool that treats directories as runnable things, and I'm using MLflow to do that but I don't want to force people who use my tool to learn about MLflow in order to start using it! So I don't want to force them to add an MLProject file to their project directory, I'd rather tell them they can simply create a main.py and then MLflow (and my tool) will run their project automatically. And then I can point to the parameter handling flags as the standard way to handle passing params.\r\n\r\nThis feature lowers the friction to having many more projects become runnable by MLflow, which might spread the word and adoption of MLflow!\r\n\r\nThen, since they are already using MLflow for the default case, they can upgrade to an MLProject file + conda or docker later when they need the extra power/flexibility of those heavier weight options (e.g., when they want to benefit from MLflow automatically creating and re-using conda envs that have their requirements installed).\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nThis isn't much code, I think it would be a few lines of code [here](https://github.com/mlflow/mlflow/blob/4f576bbcb889275fda303fe531344ff6bb160c9d/mlflow/projects/_project_spec.py#L99) plus some tweaks to the docs and CLI doc strings.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n\r\n- [x] `area/projects`: MLproject format, project running backends\r\n\r\nInterfaces\r\n- [x] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2967/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2967/timeline","performed_via_github_app":null,"state_reason":null}