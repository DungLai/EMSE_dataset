{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4078","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4078/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4078/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4078/events","html_url":"https://github.com/mlflow/mlflow/issues/4078","id":803814984,"node_id":"MDU6SXNzdWU4MDM4MTQ5ODQ=","number":4078,"title":"[FR] Increase max logged parameter size (currently 500 bytes)","user":{"login":"AlbertPlaPlanas","id":38904278,"node_id":"MDQ6VXNlcjM4OTA0Mjc4","avatar_url":"https://avatars.githubusercontent.com/u/38904278?v=4","gravatar_id":"","url":"https://api.github.com/users/AlbertPlaPlanas","html_url":"https://github.com/AlbertPlaPlanas","followers_url":"https://api.github.com/users/AlbertPlaPlanas/followers","following_url":"https://api.github.com/users/AlbertPlaPlanas/following{/other_user}","gists_url":"https://api.github.com/users/AlbertPlaPlanas/gists{/gist_id}","starred_url":"https://api.github.com/users/AlbertPlaPlanas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlbertPlaPlanas/subscriptions","organizations_url":"https://api.github.com/users/AlbertPlaPlanas/orgs","repos_url":"https://api.github.com/users/AlbertPlaPlanas/repos","events_url":"https://api.github.com/users/AlbertPlaPlanas/events{/privacy}","received_events_url":"https://api.github.com/users/AlbertPlaPlanas/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022847714,"node_id":"MDU6TGFiZWwyMDIyODQ3NzE0","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/model-registry","name":"area/model-registry","color":"48eabc","default":false,"description":"Model registry, model registry APIs, and the fluent client calls for model registry"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2114036915,"node_id":"MDU6TGFiZWwyMTE0MDM2OTE1","url":"https://api.github.com/repos/mlflow/mlflow/labels/integrations/databricks","name":"integrations/databricks","color":"ffbce5","default":false,"description":"Databricks integrations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-08T18:26:45Z","updated_at":"2021-03-01T13:09:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [X] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nIncrease logged parameter size limit. \r\nIn MLFlow the logged params can have a maximum size of 500 bytes. This limit can a blocker when the tracked parameter value is a list of strings (for instance, the list of all of the features to be considered in a model can often surpass 500 bytes). We request this limit to be increased. \r\n \r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nWhen storing parameters in the form of a list (for instance the results of feature selection optimization) the 500 bytes limit can be easily exceeded and then MLFlow fails. \r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\nIncreasing the parameter size limit would allow to log complex objects like lists, which would allow to easily include feature selection into the model tracking.\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nWe are working on a forecasting use-case where we have hundreds of potential external regressors that can serve as proxy for the forecast. We use MLFflow to track all the models that are trained and validated in a gridsearch or hyperopt parameter optimization. In this step, we also include feature selection (we evaluate different combination of external regressors and track the performance when including a particular combination of regressors in the model).\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nWe are thinking on saving the list of regressors as artefacts, but then they cannot be used in the MLFlow server interface to filter results (we use Databricks for that purpose). Saving the results as artefacts is not visually helpful for the users.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [X] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [X] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [X] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4078/timeline","performed_via_github_app":null,"state_reason":null}