{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6566","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/6566/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/6566/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/6566/events","html_url":"https://github.com/mlflow/mlflow/issues/6566","id":1348714696,"node_id":"I_kwDOCB5Jx85QY8DI","number":6566,"title":"Repalce `unittest.TestCase.assesrtTrue` with plain `assert`","user":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"labels":[{"id":955449436,"node_id":"MDU6TGFiZWw5NTU0NDk0MzY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":4300304016,"node_id":"LA_kwDOCB5Jx88AAAABAFFukA","url":"https://api.github.com/repos/mlflow/mlflow/labels/has-closing-pr","name":"has-closing-pr","color":"fef2c0","default":false,"description":"This issue has a closing PR"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-24T01:18:06Z","updated_at":"2022-08-24T10:26:22Z","closed_at":"2022-08-24T10:26:22Z","author_association":"MEMBER","active_lock_reason":null,"body":"`unittest.TestCase.assesrtTrue` should be replaced with `assert` to get more detailed test failure information.\r\n\r\n### Example:\r\n\r\n```python\r\n# test.py\r\n\r\nimport unittest\r\n\r\n\r\nclass TestRunStatus(unittest.TestCase):\r\n    def test_assert_true_1(self):\r\n        x = \"a\"\r\n        y = \"b\"\r\n        self.assertTrue(x == y)\r\n\r\n    def test_assert_true_2(self):\r\n        x = \"a\"\r\n        y = [\"b\", \"c\"]\r\n        self.assertTrue(x in y)\r\n\r\n    def test_assert_1(self):\r\n        x = \"a\"\r\n        y = \"b\"\r\n        assert x == y\r\n\r\n    def test_assert_2(self):\r\n        x = \"a\"\r\n        y = [\"b\", \"c\"]\r\n        assert x in y\r\n\r\n```\r\n\r\n```\r\npytest test.py\r\n```\r\n\r\n```\r\n__________________________________________________________________________________________________________________________________________________________ TestRunStatus.test_assert_1 __________________________________________________________________________________________________________________________________________________________\r\n\r\nself = <test_a.TestRunStatus testMethod=test_assert_1>\r\n\r\n    def test_assert_1(self):\r\n        x = \"a\"\r\n        y = \"b\"\r\n>       assert x == y\r\nE       AssertionError: assert 'a' == 'b'\r\nE         - b\r\nE         + a\r\n\r\nself       = <test_a.TestRunStatus testMethod=test_assert_1>\r\nx          = 'a'\r\ny          = 'b'\r\n\r\ntest_a.py:18: AssertionError\r\n__________________________________________________________________________________________________________________________________________________________ TestRunStatus.test_assert_2 __________________________________________________________________________________________________________________________________________________________\r\n\r\nself = <test_a.TestRunStatus testMethod=test_assert_2>\r\n\r\n    def test_assert_2(self):\r\n        x = \"a\"\r\n        y = [\"b\", \"c\"]\r\n>       assert x in y\r\nE       AssertionError: assert 'a' in ['b', 'c']\r\n\r\nself       = <test_a.TestRunStatus testMethod=test_assert_2>\r\nx          = 'a'\r\ny          = ['b', 'c']\r\n\r\ntest_a.py:23: AssertionError\r\n_______________________________________________________________________________________________________________________________________________________ TestRunStatus.test_assert_true_1 ________________________________________________________________________________________________________________________________________________________\r\n\r\nself = <test_a.TestRunStatus testMethod=test_assert_true_1>\r\n\r\n    def test_assert_true_1(self):\r\n        x = \"a\"\r\n        y = \"b\"\r\n>       self.assertTrue(x == y)\r\nE       AssertionError: False is not true\r\n\r\nself       = <test_a.TestRunStatus testMethod=test_assert_true_1>\r\nx          = 'a'\r\ny          = 'b'\r\n\r\ntest_a.py:8: AssertionError\r\n_______________________________________________________________________________________________________________________________________________________ TestRunStatus.test_assert_true_2 ________________________________________________________________________________________________________________________________________________________\r\n\r\nself = <test_a.TestRunStatus testMethod=test_assert_true_2>\r\n\r\n    def test_assert_true_2(self):\r\n        x = \"a\"\r\n        y = [\"b\", \"c\"]\r\n>       self.assertTrue(x in y)\r\nE       AssertionError: False is not true\r\n\r\nself       = <test_a.TestRunStatus testMethod=test_assert_true_2>\r\nx          = 'a'\r\ny          = ['b', 'c']\r\n\r\ntest_a.py:13: AssertionError\r\n```\r\n\r\n- `assertTrue` only tells us `True` or `False`.\r\n- `assert` (rewritten by pytest) tells us what's different.\r\n","closed_by":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/6566/timeline","performed_via_github_app":null,"state_reason":"completed"}