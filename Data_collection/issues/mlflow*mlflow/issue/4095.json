{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4095","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4095/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4095/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4095/events","html_url":"https://github.com/mlflow/mlflow/issues/4095","id":806740438,"node_id":"MDU6SXNzdWU4MDY3NDA0Mzg=","number":4095,"title":"[FR] Use run_id passed to mlflow.projects.run for backends \"kubernetes\" (and \"databricks\")","user":{"login":"jcasse","id":6751943,"node_id":"MDQ6VXNlcjY3NTE5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6751943?v=4","gravatar_id":"","url":"https://api.github.com/users/jcasse","html_url":"https://github.com/jcasse","followers_url":"https://api.github.com/users/jcasse/followers","following_url":"https://api.github.com/users/jcasse/following{/other_user}","gists_url":"https://api.github.com/users/jcasse/gists{/gist_id}","starred_url":"https://api.github.com/users/jcasse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcasse/subscriptions","organizations_url":"https://api.github.com/users/jcasse/orgs","repos_url":"https://api.github.com/users/jcasse/repos","events_url":"https://api.github.com/users/jcasse/events{/privacy}","received_events_url":"https://api.github.com/users/jcasse/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":978584226,"node_id":"MDU6TGFiZWw5Nzg1ODQyMjY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docs","name":"area/docs","color":"48eabc","default":false,"description":"Documentation issues"},{"id":2022848510,"node_id":"MDU6TGFiZWwyMDIyODQ4NTEw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/projects","name":"area/projects","color":"48eabc","default":false,"description":"MLproject format, project running backends"},{"id":2022851725,"node_id":"MDU6TGFiZWwyMDIyODUxNzI1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docker","name":"area/docker","color":"ede978","default":false,"description":"Docker use anywhere, such as MLprojects and MLmodels"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-11T21:05:52Z","updated_at":"2021-02-11T21:06:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [x] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\n(In a few sentences, provide a clear, high-level description of the feature request)\r\n\r\nCurrently, the API `mlflow.projects.run` only uses the passed `run_id` argument when the backend is `local`.\r\nAllow the use of `run_id` for backends `kubernetes` and `databricks`.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n- Why is this use case valuable to support for MLflow users in general?\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nWhen `mlflow.projects.run` fails to start a Kubernetes pod (e.g., due to limited resources), it raises an exception. However, it still creates an MLflow run. But, the client does not have the MLflow Run ID and thus cannot take action on the created MLflow run, such as deleting it. To solve this, first create an MLflow run via `mlflow.tracking.MlflowClient().create_run` and then pass the `run_id` of the created run to `mlflow.projects.run`.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [x] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [x] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [x] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n- [x] `language/python`: Python APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n- [x] `integrations/kubernetes`: Kubernetes integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n\r\nGiven that the API `mlflow.projects.run` already accepts the argument `run_id`, the implementation of this feature is trivial.\r\nThe following changes are made to `mlflow/projects/__init__.py`:\r\n1. Add `run_id=run_id` as the last argument in the call to `_run` on line 309 in the definition of `run`.\r\n2. Add `run_id` as the last argument in the function signature of `run` on line 86.\r\n3. Replace `None` with `run_id` in the call to `get_or_create_run` in line 120.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4095/timeline","performed_via_github_app":null,"state_reason":null}