{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3431","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3431/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3431/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3431/events","html_url":"https://github.com/mlflow/mlflow/issues/3431","id":703912967,"node_id":"MDU6SXNzdWU3MDM5MTI5Njc=","number":3431,"title":"[FR] MLflow should pass parameters to underlying stores as kwargs in MlflowClient to simplify plugin forward/backward compatibility","user":{"login":"eedeleon","id":31962564,"node_id":"MDQ6VXNlcjMxOTYyNTY0","avatar_url":"https://avatars.githubusercontent.com/u/31962564?v=4","gravatar_id":"","url":"https://api.github.com/users/eedeleon","html_url":"https://github.com/eedeleon","followers_url":"https://api.github.com/users/eedeleon/followers","following_url":"https://api.github.com/users/eedeleon/following{/other_user}","gists_url":"https://api.github.com/users/eedeleon/gists{/gist_id}","starred_url":"https://api.github.com/users/eedeleon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eedeleon/subscriptions","organizations_url":"https://api.github.com/users/eedeleon/orgs","repos_url":"https://api.github.com/users/eedeleon/repos","events_url":"https://api.github.com/users/eedeleon/events{/privacy}","received_events_url":"https://api.github.com/users/eedeleon/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-17T21:11:07Z","updated_at":"2020-09-18T20:35:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n### The proposal is to expand arguments in calls to internal clients as kwargs to allow for easier plugin backward/forward compatibility.\r\n\r\nExample for MlflowClient.list_run_infos:\r\n```\r\n    def list_run_infos(\r\n        self,\r\n        experiment_id,\r\n        run_view_type=ViewType.ACTIVE_ONLY,\r\n        max_results=SEARCH_MAX_RESULTS_DEFAULT,\r\n        order_by=None,\r\n        page_token=None,\r\n    ):\r\n        \"\"\":return: List of :py:class:`mlflow.entities.RunInfo`\"\"\"\r\n        return **self._tracking_client.list_run_infos(\r\n            experiment_id=experiment_id, run_view_type=run_view_type, max_results=max_results, order_by=order_by, page_token=page_token**\r\n        )\r\n```\r\n\r\n### MlflowClient currently calls the internal store with positional arguments for list_run_infos and a few other functions:\r\n```\r\n\r\n    def list_run_infos(\r\n        self,\r\n        experiment_id,\r\n        run_view_type=ViewType.ACTIVE_ONLY,\r\n        max_results=SEARCH_MAX_RESULTS_DEFAULT,\r\n        order_by=None,\r\n        page_token=None,\r\n    ):\r\n        \"\"\":return: List of :py:class:`mlflow.entities.RunInfo`\"\"\"\r\n        return **self._tracking_client.list_run_infos(\r\n            experiment_id, run_view_type, max_results, order_by, page_token**\r\n        )\r\n```\r\n#### current plugin requirement:\r\n```\r\ndef list_run_infos(self, *args, **kwargs):\r\n     custom code that uses args[0]\r\n     return super().list_run_infos(self, *args, **kwargs)\r\n```\r\n\r\nif args is not passed there is a failure for extra parameters. If kwargs is passed, there is also a failure for extra parameters.\r\n\r\nThis requires that plugins pass *args through function calls to avoid new parameters causing failures in function calls.\r\n\r\n\r\n#### future plugin requirement:\r\n```\r\ndef list_run_infos(self, experiment_id=None, **kwargs):\r\n     custom code that uses experiment_id\r\n     return super().list_run_infos(self, experiment_id=experiment_id, **kwargs)\r\n\r\n```\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nReduce surface area for plugins to break for newly introduced functionality.\r\n- Why is this use case valuable to support for MLflow users in general?\r\nThis allows users of plugins to have a more stable experience with new mlflow releases while also expanding the flexibility of plugin implementations.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nOur plugin broke on the August 31st release because of the new parameters passed to list_run_infos and a few other model registry functions. We were passing kwargs for thelist_run_infos call but it did not protect us against the break which caused our model registry and search runs functions to fail before reaching our service.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nCurrently plugins need to expand both args and maintain their order if they utilize super methods. This programming paradigm is more fickle than kwargs passing for extras since positional arguments can be interleaved incorrectly unlike kwargs.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3431/timeline","performed_via_github_app":null,"state_reason":null}