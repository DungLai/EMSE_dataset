{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4210","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4210/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4210/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4210/events","html_url":"https://github.com/mlflow/mlflow/issues/4210","id":843391996,"node_id":"MDU6SXNzdWU4NDMzOTE5OTY=","number":4210,"title":"[FR] Add in the tracking API a decorator to log all function arguments as MLFlow params","user":{"login":"corradomonti","id":2077346,"node_id":"MDQ6VXNlcjIwNzczNDY=","avatar_url":"https://avatars.githubusercontent.com/u/2077346?v=4","gravatar_id":"","url":"https://api.github.com/users/corradomonti","html_url":"https://github.com/corradomonti","followers_url":"https://api.github.com/users/corradomonti/followers","following_url":"https://api.github.com/users/corradomonti/following{/other_user}","gists_url":"https://api.github.com/users/corradomonti/gists{/gist_id}","starred_url":"https://api.github.com/users/corradomonti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/corradomonti/subscriptions","organizations_url":"https://api.github.com/users/corradomonti/orgs","repos_url":"https://api.github.com/users/corradomonti/repos","events_url":"https://api.github.com/users/corradomonti/events{/privacy}","received_events_url":"https://api.github.com/users/corradomonti/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-03-29T13:51:29Z","updated_at":"2021-04-07T16:54:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [X] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nIntroduce a Python decorator `log_arguments` in the tracking API, so that the decorated function will register all of its arguments as MLFlow parameters when called. Working example:\r\n\r\n```\r\nimport mlflow\r\n\r\n@mlflow.log_arguments\r\ndef my_experiment(learning_rate, n_estimators=10):\r\n    pass\r\n        \r\nwith mlflow.start_run():\r\n    my_experiment(0.1) # This will log params learning_rate as 0.1 and n_estimators as 10.\r\n```\r\n\r\n## Motivation\r\n\r\n- What is the use case for this feature?\r\n\r\nThis decorator would streamline using the arguments of functions as source for MLFlow parameters.\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nCurrently, my personal use case involves long sequences of `mlflow.log_param` at the beginning of some functions, basically repeating the function arguments. This is a burden to maintain and very error-prone. It could be easily done programmatically instead.\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\n\r\n0. If other people use MLFlow tracking in a similar way, it would streamline their parameters logging.\r\n1. it could make the integration of new frameworks easier and more compact.\r\n2. it would make it easier for new users to integrate their custom functions into the MLFlow workflow, even if they are not using any supported machine learning framework.\r\n\r\nOf course this comes at the expense of added complexity in MLFlow, one more Tracking API function to maintain, and inspection being introduced. I would perfectly understand if this forbids this feature to be added, and will continue to use it only in my personal projects. I am creating this issue just to check whether is there any interest from the community in merging this.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [X] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\n## Details\r\n\r\nI have already implemented this function in a personal fork using Python [inspect.BoundArguments](https://docs.python.org/3/library/inspect.html#inspect.BoundArguments) object. The implementation seems to be easy and short (<10 lines). I will be glad to prepare a PR right away if there is interest.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4210/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4210/timeline","performed_via_github_app":null,"state_reason":null}