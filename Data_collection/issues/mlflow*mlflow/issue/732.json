{"url":"https://api.github.com/repos/mlflow/mlflow/issues/732","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/732/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/732/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/732/events","html_url":"https://github.com/mlflow/mlflow/issues/732","id":385077258,"node_id":"MDU6SXNzdWUzODUwNzcyNTg=","number":732,"title":"ftp store something wrong","user":{"login":"suzhenyu22","id":26854721,"node_id":"MDQ6VXNlcjI2ODU0NzIx","avatar_url":"https://avatars.githubusercontent.com/u/26854721?v=4","gravatar_id":"","url":"https://api.github.com/users/suzhenyu22","html_url":"https://github.com/suzhenyu22","followers_url":"https://api.github.com/users/suzhenyu22/followers","following_url":"https://api.github.com/users/suzhenyu22/following{/other_user}","gists_url":"https://api.github.com/users/suzhenyu22/gists{/gist_id}","starred_url":"https://api.github.com/users/suzhenyu22/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/suzhenyu22/subscriptions","organizations_url":"https://api.github.com/users/suzhenyu22/orgs","repos_url":"https://api.github.com/users/suzhenyu22/repos","events_url":"https://api.github.com/users/suzhenyu22/events{/privacy}","received_events_url":"https://api.github.com/users/suzhenyu22/received_events","type":"User","site_admin":false},"labels":[{"id":1554650079,"node_id":"MDU6TGFiZWwxNTU0NjUwMDc5","url":"https://api.github.com/repos/mlflow/mlflow/labels/stale","name":"stale","color":"828282","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-11-28T02:48:39Z","updated_at":"2020-04-28T05:16:49Z","closed_at":"2019-12-20T01:35:16Z","author_association":"NONE","active_lock_reason":null,"body":"mlflow.store.ftp_artifact_repo.py\r\n\r\n1. def _mkdir: at lint 49\r\nmkdir dir not work , please use this:\r\n```\r\ndef _mkdir(self, artifact_dir):\r\n    \"\"\" like os.makedirs \"\"\"\r\n    # artifact_dir = 'a/b/c'\r\n    dest_dirname = artifact_dir.split('/')  # split to sub_dir ('a','b','c')\r\n    with self.get_ftp_client() as ftp:\r\n        for subdir in dest_dirname:\r\n            try:\r\n                ftp.cwd(subdir)  # cd to dir_a \r\n            except ftplib.error_perm:\r\n                ftp.mkd(subdir)  # if can't cd to dir_a, make it\r\n                ftp.cwd(subdir)  # cd dir_a, then try cd dir_b or create dir_b\r\n```\r\n\r\n2. def download_files: at line 65-79\r\ndownload file from ftp,\r\n`ftp.retrbinary(\"RETR \" + ftp_file, f)` not work, \r\nuse this code:\r\n`ftp.retrbinary(\"RETR \" + ftp_file, f.write)`\r\n\r\ntest on python 3.6, win10.\r\n\r\n3. def log_artifacts: at line 90-109\r\nwhen log_sklearn_model, when param artifact_path not None, it build twice the path (build_path), \r\nesult remote path like '/0/runid/model/0/runid/model...`\r\ndelete code like:\r\n```\r\n    def log_artifacts(self, local_dir, artifact_path=None):\r\n        if artifact_path:\r\n            dest_path_re = artifact_path\r\n        local_dir = os.path.abspath(local_dir)\r\n        for (root, _, filenames) in os.walk(local_dir):\r\n            upload_path = dest_path_re\r\n            if root != local_dir:\r\n                rel_path = get_relative_path(local_dir, root)\r\n                upload_path = build_path(dest_path_re, rel_path)\r\n            if not filenames:\r\n                self._mkdir(build_path(self.path, upload_path))\r\n            for f in filenames:\r\n                if os.path.isfile(build_path(root, f)):\r\n                    self.log_artifact(build_local_path(root, f), upload_path)\r\n```\r\nbuild_local_path function because work on win10, if use build_path result like '/aaa/bbb\\ccc\\ddd', the correct is `c:\\aaa\\bbb\\ccc\\ddd`, not important.\r\n\r\n```\r\ndef build_local_path(*paths):\r\n    return os.path.join(*paths)\r\n\r\n\r\ndef build_path(*path_segments):\r\n    \"\"\"then remote path generate on win10, if use os.path.join ,the path like '/0/runid\\model\\Project\"\"\"\r\n    # if platform is windows, change remote path to linux format \r\n    if system_type().lower() == 'windows':\r\n        return '/'.join(path_segments).replace('//', '/')\r\n    else:\r\n        return os.path.join(*path_segments).replace('//', '/')\r\n```\r\n\r\n\r\n4. _download_file: at line 144\r\nmlflow ui, cat not show txt content, wrong with _download_file function,\r\n`ftp.retrbinary('RETR ' + remote_full_path, f)`\r\nchange to \r\n`ftp.retrbinary('RETR ' + remote_full_path, f.write)`\r\n\r\nalso download_artifacts function at line 140,\r\n`ftp.retrbinary('RETR ' + full_path, f)` \r\nchange to \r\n`ftp.retrbinary('RETR ' + full_path, f.write)`\r\n\r\n\r\n\r\nall test mlflow server on centos, mlflow client on win10.\r\nall test done.\r\n\r\n","closed_by":{"login":"suzhenyu22","id":26854721,"node_id":"MDQ6VXNlcjI2ODU0NzIx","avatar_url":"https://avatars.githubusercontent.com/u/26854721?v=4","gravatar_id":"","url":"https://api.github.com/users/suzhenyu22","html_url":"https://github.com/suzhenyu22","followers_url":"https://api.github.com/users/suzhenyu22/followers","following_url":"https://api.github.com/users/suzhenyu22/following{/other_user}","gists_url":"https://api.github.com/users/suzhenyu22/gists{/gist_id}","starred_url":"https://api.github.com/users/suzhenyu22/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/suzhenyu22/subscriptions","organizations_url":"https://api.github.com/users/suzhenyu22/orgs","repos_url":"https://api.github.com/users/suzhenyu22/repos","events_url":"https://api.github.com/users/suzhenyu22/events{/privacy}","received_events_url":"https://api.github.com/users/suzhenyu22/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/732/timeline","performed_via_github_app":null,"state_reason":"completed"}