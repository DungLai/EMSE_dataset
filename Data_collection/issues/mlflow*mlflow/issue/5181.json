{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5181","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5181/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5181/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5181/events","html_url":"https://github.com/mlflow/mlflow/issues/5181","id":1084226138,"node_id":"I_kwDOCB5Jx85An_pa","number":5181,"title":"[FR] [R] Add support for {sparklyr} models","user":{"login":"zacdav-db","id":80654433,"node_id":"MDQ6VXNlcjgwNjU0NDMz","avatar_url":"https://avatars.githubusercontent.com/u/80654433?v=4","gravatar_id":"","url":"https://api.github.com/users/zacdav-db","html_url":"https://github.com/zacdav-db","followers_url":"https://api.github.com/users/zacdav-db/followers","following_url":"https://api.github.com/users/zacdav-db/following{/other_user}","gists_url":"https://api.github.com/users/zacdav-db/gists{/gist_id}","starred_url":"https://api.github.com/users/zacdav-db/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zacdav-db/subscriptions","organizations_url":"https://api.github.com/users/zacdav-db/orgs","repos_url":"https://api.github.com/users/zacdav-db/repos","events_url":"https://api.github.com/users/zacdav-db/events{/privacy}","received_events_url":"https://api.github.com/users/zacdav-db/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":978584226,"node_id":"MDU6TGFiZWw5Nzg1ODQyMjY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docs","name":"area/docs","color":"48eabc","default":false,"description":"Documentation issues"},{"id":1041183632,"node_id":"MDU6TGFiZWwxMDQxMTgzNjMy","url":"https://api.github.com/repos/mlflow/mlflow/labels/language/r","name":"language/r","color":"349cd8","default":false,"description":"R APIs and clients"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"},{"id":2022847277,"node_id":"MDU6TGFiZWwyMDIyODQ3Mjc3","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/examples","name":"area/examples","color":"48eabc","default":false,"description":"Example code"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-20T00:00:19Z","updated_at":"2021-12-22T03:11:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nThe mlflow R package has dropped support for `{mleap}` (https://github.com/mlflow/mlflow/pull/5166) which will become problematic as people who've depended on this have no alternative flavor to use. `{carrier}` package will not work for these cases.\r\n\r\nPropose that we either add `{mleap}` support back and help maintain `{mleap}` as it will continue to be the method used via python.\r\n\r\nAlternatively we can add a flavour specific to `{sparklyr}` but it will break more supporting functions (I've got a half-working prototype).\r\n\r\n\r\n\r\n## Motivation\r\nCurrently there is no supported flavor for models trained via `{sparklyr}` and it will become a barrier for existing users as they upgrade.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [x] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [x] `area/docs`: MLflow documentation pages\r\n- [x] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [x] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nCode that could be basis of an alternative to `{mleap}`, I don't think we should pursue this but just incase I tested it.\r\n\r\n```\r\nmlflow_save_model.ml_pipeline_model <- function(model,\r\n                                       path,\r\n                                       model_spec = list(),\r\n                                       conda_env = NULL,\r\n                                       ...) {\r\n  \r\n  mlflow:::assert_pkg_installed(\"sparklyr\")\r\n  if (dir.exists(path)) unlink(path, recursive = TRUE)\r\n  dir.create(path)\r\n  \r\n  model_data_subpath <- \"sparklyr\"\r\n  dir.create(file.path(path, model_data_subpath))\r\n  \r\n  # sparklyr::ml_save uses `invoke(\"save\", path)` so we add `file:/` to path (avoid writing to DBFS on Databricks)\r\n  destination <- sparklyr::ml_save(model, path = file.path(\"file:///\", path, model_data_subpath), overwrite = TRUE)\r\n  \r\n  conda_env <- mlflow:::create_default_conda_env_if_absent(\r\n    path, conda_env, default_pip_deps = list(\"mlflow\", paste0(\"sparklyr==\", as.character(utils::packageVersion(\"sparklyr\"))))\r\n  )\r\n  \r\n  sparklyr_conf <- list(\r\n    ml_pipeline_model = list(sparklyr_version = version, model_data = model_data_subpath)\r\n  )\r\n  \r\n  pyfunc_conf <- mlflow:::create_pyfunc_conf(\r\n    loader_module = \"mlflow.ml_pipeline_model\",\r\n    data = model_data_subpath,\r\n    env = conda_env\r\n  )\r\n  \r\n  model_spec$flavors <- c(model_spec$flavors, sparklyr_conf, pyfunc_conf)\r\n  mlflow:::mlflow_write_model_spec(path, model_spec)\r\n}\r\n\r\n\r\nmlflow_load_flavor.mlflow_flavor_ml_pipeline_model <- function(flavor, model_path) {\r\n  mlflow:::assert_pkg_installed(\"sparklyr\")\r\n  # `mlflow::mlflow_load_model()` does not have `...` we return a function that can be used with sparkContext \r\n  fn <- rlang::new_function(\r\n    args = rlang::exprs(sc =),\r\n    rlang::expr(sparklyr::ml_load(sc, file.path(\"file:///\", !!model_path, \"sparklyr\")))\r\n   )\r\n  return(fn)\r\n}\r\n\r\nmlflow_predict.ml_pipeline_model <- function(sc, model, data, ...) {\r\n  mlflow:::assert_pkg_installed(\"sparklyr\")\r\n  sparklyr::ml_transform(model, data)\r\n}\r\n\r\n# ----------------------------------------\r\n# override mlflow function\r\nR.utils::reassignInPackage(\r\n  \"mlflow_save_model.ml_pipeline_model\",\r\n  pkgName = \"mlflow\",\r\n  value = mlflow_save_model.ml_pipeline_model\r\n)\r\n\r\n```\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5181/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5181/timeline","performed_via_github_app":null,"state_reason":null}