{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7514","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/7514/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/7514/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/7514/events","html_url":"https://github.com/mlflow/mlflow/issues/7514","id":1492973670,"node_id":"I_kwDOCB5Jx85Y_Phm","number":7514,"title":"[FR] Add REST API endpoint to retrieve all unique experiment tags","user":{"login":"ddl-ebrown","id":111539728,"node_id":"U_kgDOBqX2EA","avatar_url":"https://avatars.githubusercontent.com/u/111539728?v=4","gravatar_id":"","url":"https://api.github.com/users/ddl-ebrown","html_url":"https://github.com/ddl-ebrown","followers_url":"https://api.github.com/users/ddl-ebrown/followers","following_url":"https://api.github.com/users/ddl-ebrown/following{/other_user}","gists_url":"https://api.github.com/users/ddl-ebrown/gists{/gist_id}","starred_url":"https://api.github.com/users/ddl-ebrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddl-ebrown/subscriptions","organizations_url":"https://api.github.com/users/ddl-ebrown/orgs","repos_url":"https://api.github.com/users/ddl-ebrown/repos","events_url":"https://api.github.com/users/ddl-ebrown/events{/privacy}","received_events_url":"https://api.github.com/users/ddl-ebrown/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2022852620,"node_id":"MDU6TGFiZWwyMDIyODUyNjIw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/sqlalchemy","name":"area/sqlalchemy","color":"ede978","default":false,"description":"Use of SQL alchemy in tracking service or model registry"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-12-12T23:21:15Z","updated_at":"2022-12-20T18:17:01Z","closed_at":"2022-12-20T03:56:39Z","author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\n\nYes. I would be willing to contribute this feature with guidance from the MLflow community.\n\n### Proposal Summary\n\nGetting a list of tags across all runs for an experiment is helpful when building tooling to add new tags to a given experiment / experiment run. When adding tags through a user interface, having an autocomplete type list of existing tags can help prevent the addition of misspelled or otherwise similar, but mismatched tags.\r\n\r\nFurthermore, when providing tooling to search through experiment runs for runs with a specific tag, it's necessary to know the tag values in use.\r\n\r\nAn API to retrieve all new unique tag names is necessary to support either of these scenarios.\n\n### Motivation\n\n> #### What is the use case for this feature?\r\n\r\nWe're providing tooling on top of mlflow APIs and the current method for adding tags is error-prone without having a list of in-use tags. Similarly, auto-completing search criteria for tags is impractical over large sets of runs (that include many duplicates)\r\n\r\n> #### Why is this use case valuable to support for MLflow users in general?\r\n\r\nI suspect the MLflow UI has similar needs\r\n\r\n> #### Why is this use case valuable to support for your project(s) or organization?\r\n\r\nThis would prevent tagging errors from the UI. This would also improve the latency / performance of building an autocomplete list for searching against existing tags.\r\n\r\n> #### Why is it currently difficult to achieve this use case?\r\n\r\nCurrently the only way to build this list is to return all runs for an experiment to a client, merge all the tags together, then remove duplicates. This is quite expensive compared to returning a unique list directly from the database.\n\n### Details\n\n_No response_\n\n### What component(s) does this bug affect?\n\n- [ ] `area/artifacts`: Artifact stores and artifact logging\n- [ ] `area/build`: Build and test infrastructure for MLflow\n- [ ] `area/docs`: MLflow documentation pages\n- [ ] `area/examples`: Example code\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\n- [ ] `area/recipes`: Recipes, Recipe APIs, Recipe configs, Recipe Templates\n- [ ] `area/projects`: MLproject format, project running backends\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\n- [ ] `area/server-infra`: MLflow Tracking server backend\n- [X] `area/tracking`: Tracking Service, tracking client APIs, autologging\n\n### What interface(s) does this bug affect?\n\n- [X] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\n- [X] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\n- [ ] `area/windows`: Windows support\n\n### What language(s) does this bug affect?\n\n- [ ] `language/r`: R APIs and clients\n- [ ] `language/java`: Java APIs and clients\n- [ ] `language/new`: Proposals for new client languages\n\n### What integration(s) does this bug affect?\n\n- [ ] `integrations/azure`: Azure and Azure ML integrations\n- [ ] `integrations/sagemaker`: SageMaker integrations\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":{"login":"WeichenXu123","id":19235986,"node_id":"MDQ6VXNlcjE5MjM1OTg2","avatar_url":"https://avatars.githubusercontent.com/u/19235986?v=4","gravatar_id":"","url":"https://api.github.com/users/WeichenXu123","html_url":"https://github.com/WeichenXu123","followers_url":"https://api.github.com/users/WeichenXu123/followers","following_url":"https://api.github.com/users/WeichenXu123/following{/other_user}","gists_url":"https://api.github.com/users/WeichenXu123/gists{/gist_id}","starred_url":"https://api.github.com/users/WeichenXu123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WeichenXu123/subscriptions","organizations_url":"https://api.github.com/users/WeichenXu123/orgs","repos_url":"https://api.github.com/users/WeichenXu123/repos","events_url":"https://api.github.com/users/WeichenXu123/events{/privacy}","received_events_url":"https://api.github.com/users/WeichenXu123/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/7514/timeline","performed_via_github_app":null,"state_reason":"completed"}