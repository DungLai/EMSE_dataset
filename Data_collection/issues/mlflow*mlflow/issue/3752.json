{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3752","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3752/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3752/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3752/events","html_url":"https://github.com/mlflow/mlflow/issues/3752","id":753638592,"node_id":"MDU6SXNzdWU3NTM2Mzg1OTI=","number":3752,"title":"[BUG] - Logging a metric with a boolean value freezes the UI with no error when logging","user":{"login":"Galileo-Galilei","id":29451317,"node_id":"MDQ6VXNlcjI5NDUxMzE3","avatar_url":"https://avatars.githubusercontent.com/u/29451317?v=4","gravatar_id":"","url":"https://api.github.com/users/Galileo-Galilei","html_url":"https://github.com/Galileo-Galilei","followers_url":"https://api.github.com/users/Galileo-Galilei/followers","following_url":"https://api.github.com/users/Galileo-Galilei/following{/other_user}","gists_url":"https://api.github.com/users/Galileo-Galilei/gists{/gist_id}","starred_url":"https://api.github.com/users/Galileo-Galilei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Galileo-Galilei/subscriptions","organizations_url":"https://api.github.com/users/Galileo-Galilei/orgs","repos_url":"https://api.github.com/users/Galileo-Galilei/repos","events_url":"https://api.github.com/users/Galileo-Galilei/events{/privacy}","received_events_url":"https://api.github.com/users/Galileo-Galilei/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":955449436,"node_id":"MDU6TGFiZWw5NTU0NDk0MzY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-11-30T16:51:38Z","updated_at":"2020-12-14T00:10:57Z","closed_at":"2020-12-14T00:10:57Z","author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\r\nThe MLflow Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the MLflow code base?\r\n\r\n- [ ] Yes. I can contribute a fix for this bug independently.\r\n- [X] Yes. I would be willing to contribute a fix for this bug with guidance from the MLflow community. -> I can give a try to fix the bug, but I can't give a timeline.\r\n- [ ] No. I cannot contribute a bug fix at this time.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux, CENTOS 7.5 \r\n- **MLflow installed from (source or binary)**: source\r\n- **MLflow version (run ``mlflow --version``)**: mlflow 1.11.0\r\n- **Python version**: Python 3.6.8 :: Anaconda, Inc.\r\n- **npm version, if running the dev UI**: N/A\r\n\r\n### Describe the problem\r\n\r\nWhen a **boolean** value is logged as a metric, no warning is raised and the metric is stored. \r\n\r\nWhen you want to do anything which involves this run you got a very bad error message:\r\n- INTERNAL_SERVER_ERROR when opening the UI. I could not make it work until I edited manually the database to remove the faulty metric in the faulty run\r\n- a `ValueError: could not convert string to float: 'True'` error  when trying to manipulate the run with the python API (e.g. retrieving the run, logging a model...)\r\n\r\nThis is really painful that this errors occurs at retrieving time and not at logging time: \r\n- if logging a boolean as a metric is forbidden, it should be checked at logging time. Currently, the error occur far too late in the process (and actually, may hurts someone else, e.g. someone using the same database fot the UI, that the person who logged the faulty metric). The UI suddenly does not work with a very bad INTERNAL_SERVER_ERROR  and no informative message, as well as no possibility to clean up easily the database.\r\n- Actually, I don't really see why logging boolean should avoided absolutely. The use case I encountered was someone logging a metric to know whether the training of his DL model early_stopped. This is a state which varies across the model training, and this may be useful to decide whether the training was \"sufficient enough\" to trust the model, so it does not seem to be total nonsense. I understand that it may be much harder to support this use case and have much more side effects than checking at logtime whether the metric value is a bool or not.\r\n\r\n### Code to reproduce issue\r\n```python \r\n# exploratory.py\r\nfrom mlflow.tracking import MlflowClient\r\nfrom pathlib import Path\r\n\r\nmlflow_tracking_uri=Path(\"mlruns\").resolve().as_uri()\r\nmlflow.set_tracking_uri(mlflow_tracking_uri)\r\nwith mlflow.start_run():\r\n    run_id=mlflow.active_run().info.run_id\r\n    mlflow.log_metric(\"metric\", True) # logging is ok, no warning\r\n\r\n# You can either open the UI and enjoy the \"INTERNAL_SERVER_ERROR\"\r\n# or try to retrieve the run for instance:\r\nMlflowClient(mlflow_tracking_uri).get_run(run_id) # an error is raised\r\n```\r\n\r\n### Other info / logs\r\n```console\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<xxx>/exploratory.py in \r\n----> 266 MlflowClient(mlflow_tracking_uri).get_run(run_id)\r\n\r\n<xxx>/lib/python3.6/site-packages/mlflow/tracking/client.py in get_run(self, run_id)\r\n    108                  raises an exception.\r\n    109         \"\"\"\r\n--> 110         return self._tracking_client.get_run(run_id)\r\n    111 \r\n    112     def get_metric_history(self, run_id, key):\r\n\r\n<xxx>/lib/python3.6/site-packages/mlflow/tracking/_tracking_service/client.py in get_run(self, run_id)\r\n     54         \"\"\"\r\n     55         _validate_run_id(run_id)\r\n---> 56         return self.store.get_run(run_id)\r\n     57 \r\n     58     def get_metric_history(self, run_id, key):\r\n\r\n<xxx>/lib/python3.6/site-packages/mlflow/store/tracking/file_store.py in get_run(self, run_id)\r\n    502                 \"Run '%s' metadata is in invalid state.\" % run_id, databricks_pb2.INVALID_STATE\r\n    503             )\r\n--> 504         return self._get_run_from_info(run_info)\r\n    505 \r\n    506     def _get_run_from_info(self, run_info):\r\n\r\n<xxx>/lib/python3.6/site-packages/mlflow/store/tracking/file_store.py in _get_run_from_info(self, run_info)\r\n    505 \r\n    506     def _get_run_from_info(self, run_info):\r\n--> 507         metrics = self._get_all_metrics(run_info)\r\n    508         params = self._get_all_params(run_info)\r\n    509         tags = self._get_all_tags(run_info)\r\n\r\n<xxx>/lib/python3.6/site-packages/mlflow/store/tracking/file_store.py in _get_all_metrics(self, run_info)\r\n    592         metrics = []\r\n    593         for metric_file in metric_files:\r\n--> 594             metrics.append(self._get_metric_from_file(parent_path, metric_file))\r\n    595         return metrics\r\n    596 \r\n\r\n<xxx>/lib/python3.6/site-packages/mlflow/store/tracking/file_store.py in _get_metric_from_file(parent_path, metric_name)\r\n    573         metric_objs = [\r\n    574             FileStore._get_metric_from_line(metric_name, line)\r\n--> 575             for line in read_file_lines(parent_path, metric_name)\r\n    576         ]\r\n    577         if len(metric_objs) == 0:\r\n\r\n<xxx>/lib/python3.6/site-packages/mlflow/store/tracking/file_store.py in (.0)\r\n    573         metric_objs = [\r\n    574             FileStore._get_metric_from_line(metric_name, line)\r\n--> 575             for line in read_file_lines(parent_path, metric_name)\r\n    576         ]\r\n    577         if len(metric_objs) == 0:\r\n\r\n<xxx>/lib/python3.6/site-packages/mlflow/store/tracking/file_store.py in _get_metric_from_line(metric_name, metric_line)\r\n    605             )\r\n    606         ts = int(metric_parts[0])\r\n--> 607         val = float(metric_parts[1])\r\n    608         step = int(metric_parts[2]) if len(metric_parts) == 3 else 0\r\n    609         return Metric(key=metric_name, value=val, timestamp=ts, step=step)\r\n\r\nValueError: could not convert string to float: 'True'\r\n```\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [X] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterface \r\n- [] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguage \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n","closed_by":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3752/timeline","performed_via_github_app":null,"state_reason":"completed"}