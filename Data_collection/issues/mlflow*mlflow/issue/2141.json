{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2141","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2141/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2141/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2141/events","html_url":"https://github.com/mlflow/mlflow/issues/2141","id":528689703,"node_id":"MDU6SXNzdWU1Mjg2ODk3MDM=","number":2141,"title":"[BUG]","user":{"login":"rashmeetmalik","id":54629045,"node_id":"MDQ6VXNlcjU0NjI5MDQ1","avatar_url":"https://avatars.githubusercontent.com/u/54629045?v=4","gravatar_id":"","url":"https://api.github.com/users/rashmeetmalik","html_url":"https://github.com/rashmeetmalik","followers_url":"https://api.github.com/users/rashmeetmalik/followers","following_url":"https://api.github.com/users/rashmeetmalik/following{/other_user}","gists_url":"https://api.github.com/users/rashmeetmalik/gists{/gist_id}","starred_url":"https://api.github.com/users/rashmeetmalik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rashmeetmalik/subscriptions","organizations_url":"https://api.github.com/users/rashmeetmalik/orgs","repos_url":"https://api.github.com/users/rashmeetmalik/repos","events_url":"https://api.github.com/users/rashmeetmalik/events{/privacy}","received_events_url":"https://api.github.com/users/rashmeetmalik/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1554650079,"node_id":"MDU6TGFiZWwxNTU0NjUwMDc5","url":"https://api.github.com/repos/mlflow/mlflow/labels/stale","name":"stale","color":"828282","default":false,"description":""},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022863969,"node_id":"MDU6TGFiZWwyMDIyODYzOTY5","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-soon","name":"priority/important-soon","color":"534cb5","default":false,"description":"The issue is worked on by the community currently or will be very soon, ideally in time for the"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-11-26T12:21:26Z","updated_at":"2022-06-02T01:31:11Z","closed_at":"2022-06-02T01:31:11Z","author_association":"NONE","active_lock_reason":null,"body":"### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: **Yes**\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: **Ubuntu 16.04**\r\n- **MLflow installed from (source or binary)**: **binary**\r\n- **MLflow version (run ``mlflow --version``)**: **1.2.0**\r\n- **Python version**: **3.7**\r\n- **npm version, if running the dev UI**: **NA**\r\n- **Exact command to reproduce**: **NA**\r\n\r\n### Describe the problem\r\nPredict operation is not working for the spark models that are deployed as REST end point using mlflow serve command and have prediction column name other than \"prediction\".  For instance, I have attached the code snippet to build a GBTClassifier on IRIS dataset and deploy it as REST endpoint using mlflow. Now when I pass the model some sample data using curl command to see the predictions, I am getting the mentioned error:\r\n\r\n### Code to reproduce issue\r\nfrom pyspark.ml import Pipeline\r\nfrom pyspark.ml.classification import GBTClassifier\r\nfrom pyspark.ml.feature import StringIndexer, VectorAssembler\r\nfrom pyspark.context import SparkContext\r\nfrom pyspark.sql.session import SparkSession\r\nimport mlflow\r\nimport mlflow.spark\r\n# Load and parse the data file, converting it to a DataFrame.\r\nsc = SparkContext('local')\r\nspark = SparkSession(sc)\r\n\r\n# Training DataFrame\r\ntraining = spark.createDataFrame([\r\n(5.1,3.5,1.4,0.2,\"setosa\"),\r\n(4.9,3.0,1.4,0.2,\"setosa\"),\r\n(4.7,3.2,1.3,0.2,\"setosa\"),\r\n(4.6,3.1,1.5,0.2,\"setosa\"),\r\n(5.0,3.6,1.4,0.2,\"setosa\"),\r\n(5.1,3.5,1.4,0.3,\"setosa\"),\r\n(5.7,3.8,1.7,0.3,\"setosa\"),\r\n(5.1,3.8,1.5,0.3,\"setosa\"),\r\n(5.4,3.4,1.7,0.2,\"setosa\"),\r\n(5.1,3.7,1.5,0.4,\"setosa\"),\r\n(7.0,3.2,4.7,1.4,\"versicolor\"),\r\n(6.4,3.2,4.5,1.5,\"versicolor\"),\r\n(6.9,3.1,4.9,1.5,\"versicolor\"),\r\n(5.5,2.3,4.0,1.3,\"versicolor\"),\r\n(6.5,2.8,4.6,1.5,\"versicolor\"),\r\n(6.8,2.8,4.8,1.4,\"versicolor\"),\r\n(6.7,3.0,5.0,1.7,\"versicolor\"),\r\n(6.0,2.9,4.5,1.5,\"versicolor\"),\r\n(5.7,2.6,3.5,1.0,\"versicolor\"),\r\n(5.5,2.4,3.8,1.1,\"versicolor\")], [\"SepalWidth\",\"SepalLength\",\"PetalWidth\",\"PetalLength\",\"Species\"])\r\n\r\nlabelIndexer = StringIndexer(inputCol=\"Species\", outputCol=\"indexedSpecies\")\r\n\r\nassembler = VectorAssembler(\r\n    inputCols=[\"SepalWidth\", \"SepalLength\", \"PetalWidth\", \"PetalLength\"],\r\n    outputCol=\"features\")\r\n\r\ngbt = GBTClassifier(labelCol=\"indexedSpecies\", featuresCol=\"features\", maxIter=10)\r\ngbt.setPredictionCol(\"predictionCol\")\r\npipeline = Pipeline(stages=[labelIndexer, assembler, gbt])\r\nmodel = pipeline.fit(training)\r\nmlflow.spark.log_model(model, <some_path>)\r\n\r\nprint('deploying model as a service')\r\ncmd = 'nohup mlflow models serve -m ' + '<path_to_model>'+ ' -p 7534 -h 0.0.0.0 --no-conda &'\r\npopen_obj = subprocess.Popen(cmd, shell=True)\r\npopen_obj.communicate()\r\n\r\n### Other info / logs\r\n\"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/usr/hdp/current/spark2-client/python/lib/pyspark.zip/pyspark/sql/utils.py\\\", line 63, in deco\\n    return f(*a, **kw)\\n  File \\\"/usr/hdp/current/spark2-client/python/lib/py4j-0.10.7-src.zip/py4j/protocol.py\\\", line 328, in get_return_value\\n    format(target_id, \\\".\\\", name), value)\\npy4j.protocol.Py4JJavaError: An error occurred while calling o373.select.\\n: org.apache.spark.sql.AnalysisException: cannot resolve '`prediction`' given input columns: [PetalWidth, probability, features, SepalWidth, predictionCol, SepalLength, PetalLength, rawPrediction];;\\n'Project [features#58, 'prediction]\\n+- Project [SepalWidth#10, SepalLength#11, PetalWidth#12, PetalLength#13, features#58, rawPrediction#64, probability#71, UDF(rawPrediction#64) AS predictionCol#79]\\n   +- Project [SepalWidth#10, SepalLength#11, PetalWidth#12, PetalLength#13, features#58, rawPrediction#64, UDF(rawPrediction#64) AS probability#71]\\n      +- Project [SepalWidth#10, SepalLength#11, PetalWidth#12, PetalLength#13, features#58, UDF(features#58) AS rawPrediction#64]\\n         +- Project [SepalWidth#10, SepalLength#11, PetalWidth#12, PetalLength#13, UDF(named_struct(SepalWidth, SepalWidth#10, SepalLength, SepalLength#11, PetalWidth, PetalWidth#12, PetalLength, PetalLength#13)) AS features#58]\\n            +- LogicalRDD [SepalWidth#10, SepalLength#11, PetalWidth#12, PetalLength#13], false\\n\\n\\n\\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\\n\\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:92)\\n\\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:89)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\\n\\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:288)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:95)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:95)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:107)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:107)\\n\\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:106)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:118)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$1.apply(QueryPlan.scala:122)\\n\\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\\n\\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\\n\\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\\n\\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\\n\\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\\n\\tat scala.collection.AbstractTraversable.map(Traversable.scala:104)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:122)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:127)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:127)\\n\\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:95)\\n\\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:89)\\n\\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:84)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)","closed_by":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2141/timeline","performed_via_github_app":null,"state_reason":"completed"}