{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5680","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5680/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5680/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5680/events","html_url":"https://github.com/mlflow/mlflow/issues/5680","id":1201969867,"node_id":"I_kwDOCB5Jx85HpJrL","number":5680,"title":"Replace `unittest.TestCase.assertRaises` with `unittest.TestCase.assertRaisesRegex`","user":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"labels":[{"id":955449436,"node_id":"MDU6TGFiZWw5NTU0NDk0MzY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2022-04-12T14:51:59Z","updated_at":"2022-05-23T06:26:32Z","closed_at":"2022-05-20T11:27:23Z","author_association":"MEMBER","active_lock_reason":null,"body":"Some tests use `unittest.TestCase.assertRaises` to test an exception is raised for illegal operations, but they need to be replaces with `unittest.TestCase.assertRaisesRegex`.\r\n\r\n### Why do we need this change?\r\n\r\nLet's say we have a function that raises an exception:\r\n\r\n```python\r\ndef throw_exception(...):\r\n    if condition_1:\r\n        raise TypeError(\"condition_1\")\r\n    if condition_2:\r\n        raise TypeError(\"condition_2\")\r\n    ...\r\n```\r\n\r\nIf we test this function using `assertRaises`:\r\n\r\n```python\r\nclass MyTest(unittest.TestCase):\r\n    def test_throw_exception(self):\r\n        # Does `throw_exception` really raise the second TypeError?\r\n        # It might throw the first TypeError, then the test will pass.\r\n        with self.assertRaises(TypeError):\r\n            throw_exception(...)  # should raise TypeError(\"condition_2\")\r\n```\r\n\r\nIf we test this function using `assertRaisesRegex`:\r\n\r\n```python\r\nclass MyTest(unittest.TestCase):\r\n    def test_throw_exception(self):\r\n        # This test fails when `throw_exception` raises the first TypeError.\r\n        with self. assertRaisesRegex(TypeError, \"condition_b\"):\r\n            throw_exception(...)  # should raise TypeError(\"condition_2\")\r\n```\r\n\r\n### Example\r\n\r\nhttps://github.com/mlflow/mlflow/blob/fe6618823a2e6038149ee0da675503d2764552ca/tests/store/tracking/test_sqlalchemy_store.py#L107\r\n\r\nThe code above needs to be fixed to the following:\r\n\r\n```python\r\n # \"<string that matches the error message>\" must be replaced\r\n with self.assertRaisesRegex(MlflowException, \"<string that matches the error message>\") as e:\r\n```\r\n\r\n### References\r\n\r\n- https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises\r\n- https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex\r\n\r\n### Instructions\r\n\r\nhttps://github.com/mlflow/mlflow/blob/101ad6e8eb383c769178df0df83d1d2a1cea6b4a/pylint_plugins/assert_raises_without_msg.py#L20-L33\r\n\r\nPing me with the file you want to work on :)\r\n\r\n| File                                                  | Assignee    | PR    | Done |\r\n| :---------------------------------------------------- | :---------- | :---- | :--- |\r\n| `tests/entities/test_run_status.py`                   | @Sumanth077 |       |      |\r\n| `tests/store/model_registry/test_sqlalchemy_store.py` | @ognis1205  | #5875 | ✅   |\r\n| `tests/store/db/test_utils.py`                        | @erich-db   |       |      |\r\n| `tests/store/tracking/__init__.py`                    | @Sumanth077 |       |      |\r\n| `tests/store/tracking/test_file_store.py`             | @andy1122   |       |      |\r\n| `tests/store/tracking/test_sqlalchemy_store.py`       | @ognis1205  | #5875 | ✅   |\r\n","closed_by":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5680/timeline","performed_via_github_app":null,"state_reason":"completed"}