{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3961","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3961/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3961/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3961/events","html_url":"https://github.com/mlflow/mlflow/issues/3961","id":782302955,"node_id":"MDU6SXNzdWU3ODIzMDI5NTU=","number":3961,"title":"[FR] Kubernetes CRD support","user":{"login":"gbrener","id":2840348,"node_id":"MDQ6VXNlcjI4NDAzNDg=","avatar_url":"https://avatars.githubusercontent.com/u/2840348?v=4","gravatar_id":"","url":"https://api.github.com/users/gbrener","html_url":"https://github.com/gbrener","followers_url":"https://api.github.com/users/gbrener/followers","following_url":"https://api.github.com/users/gbrener/following{/other_user}","gists_url":"https://api.github.com/users/gbrener/gists{/gist_id}","starred_url":"https://api.github.com/users/gbrener/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gbrener/subscriptions","organizations_url":"https://api.github.com/users/gbrener/orgs","repos_url":"https://api.github.com/users/gbrener/repos","events_url":"https://api.github.com/users/gbrener/events{/privacy}","received_events_url":"https://api.github.com/users/gbrener/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":978584226,"node_id":"MDU6TGFiZWw5Nzg1ODQyMjY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docs","name":"area/docs","color":"48eabc","default":false,"description":"Documentation issues"},{"id":2022848510,"node_id":"MDU6TGFiZWwyMDIyODQ4NTEw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/projects","name":"area/projects","color":"48eabc","default":false,"description":"MLproject format, project running backends"},{"id":2022851725,"node_id":"MDU6TGFiZWwyMDIyODUxNzI1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docker","name":"area/docker","color":"ede978","default":false,"description":"Docker use anywhere, such as MLprojects and MLmodels"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-01-08T18:05:14Z","updated_at":"2021-05-10T08:04:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [x] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nExtend Kubernetes project backend to support Kubernetes [Custom Resource Definitions](https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/) (aka \"CRDs\") in addition to the existing [Kubernetes Jobs](https://kubernetes.io/docs/concepts/workloads/controllers/job/).\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n  Kubernetes CRDs allow additional flexibility in ML training network architectures, such as for those that require closely-communicating parallel processes.\r\n- Why is this use case valuable to support for MLflow users in general?\r\n  Many Kubernetes users already rely on CRDs to train ML models, and may find it difficult to migrate their workflows to MLflow. Existing MLflow users may want additional functionality that Jobs alone cannot provide.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n  Same as above.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n  Many use-cases are not covered by Kubernetes Jobs. CRDs are more flexible - can create Jobs, StatefulSets, ConfigMaps, RBAC resources, and other objects - with custom controller logic to reconcile the states of these objects.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [x] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [x] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [x] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nChanges required to implement this feature (mostly in [mlflow/projects/kubernetes.py](https://github.com/mlflow/mlflow/blob/v1.13.1/mlflow/projects/kubernetes.py)):\r\n\r\n1. `_run_kubernetes_job()` checks the \"kind\" field of the job template, retaining backwards-compatibility if the object's \"kind\" field is \"Job\". Otherwise, a CRD is assumed, i.e. `api_instance = kubernetes.client.CustomObjectsApi()` rather than `kubernetes.client.BatchV1Api()`, `api_instance.create_namespaced_custom_object()` rather than `api_instance.create_namespaced_job()`, etc...\r\n\r\n1. `_get_kubernetes_job_definition()`: renders the job YAML as a template with access to MLProject information, similar to how MLProject [entry_point commands are rendered](https://github.com/mlflow/mlflow/blob/v1.13.1/mlflow/projects/_project_spec.py#L190).\r\n\r\n1. `KubernetesSubmittedRun`: constructor (`__init__`) accepts the rendered job template, parses out additional variables (kind, apiVersion, namespace, etc). The `wait`, `_update_status`, and `cancel` methods are updated similarly to `_run_kubernetes_job()` (step 1 above).\r\n\r\n1. Documentation and testing updates to reflect the template rendering changes and CRD support.\r\n\r\nOpen to feedback/suggestions here or on the Slack channel.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3961/reactions","total_count":18,"+1":13,"-1":0,"laugh":0,"hooray":5,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3961/timeline","performed_via_github_app":null,"state_reason":null}