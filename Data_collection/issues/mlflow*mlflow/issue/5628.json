{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5628","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5628/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5628/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5628/events","html_url":"https://github.com/mlflow/mlflow/issues/5628","id":1196254918,"node_id":"I_kwDOCB5Jx85HTWbG","number":5628,"title":"[FR] MLflow pyfunc accept `application/jsonlines` for SageMaker Batch Transform deploy","user":{"login":"alexdivet","id":5271800,"node_id":"MDQ6VXNlcjUyNzE4MDA=","avatar_url":"https://avatars.githubusercontent.com/u/5271800?v=4","gravatar_id":"","url":"https://api.github.com/users/alexdivet","html_url":"https://github.com/alexdivet","followers_url":"https://api.github.com/users/alexdivet/followers","following_url":"https://api.github.com/users/alexdivet/following{/other_user}","gists_url":"https://api.github.com/users/alexdivet/gists{/gist_id}","starred_url":"https://api.github.com/users/alexdivet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexdivet/subscriptions","organizations_url":"https://api.github.com/users/alexdivet/orgs","repos_url":"https://api.github.com/users/alexdivet/repos","events_url":"https://api.github.com/users/alexdivet/events{/privacy}","received_events_url":"https://api.github.com/users/alexdivet/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022860064,"node_id":"MDU6TGFiZWwyMDIyODYwMDY0","url":"https://api.github.com/repos/mlflow/mlflow/labels/integrations/sagemaker","name":"integrations/sagemaker","color":"ffbce5","default":false,"description":"Sagemaker integrations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-04-07T16:02:51Z","updated_at":"2022-05-02T09:05:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nMLflow pyfunc models deployed to SageMaker only accept `text/csv`, `application/json` and `application/json-numpy-split`, however when deploying to a SageMaker Batch Transform job (using `mlflow.sagemaker.deploy_transform_job()`) [it is recommended to format](https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-inference.html) your inputs as `application/jsonlines`\r\n\r\nSee error log below\r\n```\r\nThis predictor only supports the following content types and formats: Types: ['text/csv', 'application/json', 'application/json-numpy-split']; Formats: ['pandas-records', 'pandas-split']. Got 'application/jsonlines'.\r\n```\r\n\r\nCould we add support for line-delimited JSON to MLflow pyfunc format?\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nDeploy MLflow pyfunc to SageMaker Batch Transform\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\nAny user who wants to deploy MLflow pyfunc to run SageMaker Batch Transform jobs will see benefits\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nWe want to wrap all our models as MLflow pyfunc and make them deployable either to SageMaker real-time endpoints or SageMaker Batch Transform jobs\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nThe supported content types aren't useful for large Batch Transform jobs\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [x] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\nI assume it could be implemented by just adding another elif statement to parse `jsonlines` here\r\n\r\nhttps://github.com/mlflow/mlflow/blob/3984c2c9a536505eabd183a04467ab52a80127db/mlflow/pyfunc/scoring_server/__init__.py#L261-L301","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5628/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5628/timeline","performed_via_github_app":null,"state_reason":null}