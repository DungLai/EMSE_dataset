{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2664","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2664/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2664/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2664/events","html_url":"https://github.com/mlflow/mlflow/issues/2664","id":593599159,"node_id":"MDU6SXNzdWU1OTM1OTkxNTk=","number":2664,"title":"[BUG] Numeric parameter with value >= 1'000 can't be supplied in R mlflow::mlflow_run()","user":{"login":"lorenzwalthert","id":10477073,"node_id":"MDQ6VXNlcjEwNDc3MDcz","avatar_url":"https://avatars.githubusercontent.com/u/10477073?v=4","gravatar_id":"","url":"https://api.github.com/users/lorenzwalthert","html_url":"https://github.com/lorenzwalthert","followers_url":"https://api.github.com/users/lorenzwalthert/followers","following_url":"https://api.github.com/users/lorenzwalthert/following{/other_user}","gists_url":"https://api.github.com/users/lorenzwalthert/gists{/gist_id}","starred_url":"https://api.github.com/users/lorenzwalthert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lorenzwalthert/subscriptions","organizations_url":"https://api.github.com/users/lorenzwalthert/orgs","repos_url":"https://api.github.com/users/lorenzwalthert/repos","events_url":"https://api.github.com/users/lorenzwalthert/events{/privacy}","received_events_url":"https://api.github.com/users/lorenzwalthert/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1893057631,"node_id":"MDU6TGFiZWwxODkzMDU3NjMx","url":"https://api.github.com/repos/mlflow/mlflow/labels/Acknowledged","name":"Acknowledged","color":"f9d0c4","default":false,"description":"This issue has been read and acknowledged by the MLflow admins."}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-04-03T19:40:23Z","updated_at":"2020-04-04T21:20:07Z","closed_at":"2020-04-03T22:54:25Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### System information\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow): Yes.**\r\n- macOS 10.15.3.\r\n- **MLflow installed from source (GitHub)**:\r\n- **MLflow version 1.7.3 (dev)**:\r\n- **Python version: 3.6**:\r\n- **Exact command to reproduce**:\r\n\r\n```r\r\nmlflow::mlflow_run('.', entry_point = 'R/script.R', parameters = list(\r\n  large_dbl = 1000000,\r\n  other = 3\r\n))\r\n```\r\n\r\n### Describe the problem\r\n\r\nIt's impossible to supply a parameter value larger or equal to 1'000 by default in R mlflow when running `mlflow::mlflow_run()` because the scientific formatting will kick in and the number won't be recognised as numeric anymore somewhere downstream. The root of the problem can be observed in the R console:\r\n\r\n```r\r\n10000000\r\n#> [1] 1e+07\r\n```\r\n\r\nWith the above command, I get the following error:\r\n\r\n```\r\n2020/04/03 18:03:13 INFO mlflow.projects: === Created directory /var/folders/6g/bg5mcmsj7s51r33snbxhm1400000gn/T/tmp1zqfgvss for downloading remote URIs passed to arguments of type 'path' ===\r\n2020/04/03 18:03:13 INFO mlflow.projects: === Running command 'source /Users/lorenz/opt/miniconda3/bin/../etc/profile.d/conda.sh && conda activate mlflow-da39a3ee5e6b4b0d3255bfef95601890afd80709 1>&2 && Rscript -e \"mlflow::mlflow_source('R/script.R')\" --args --large_dbl 1e+06 --other 3' in run with ID '6e1420faad164528b654a16b08c2da80' ===\r\n\r\nError: Provided value for `large_dbl` cannot be casted to type numeric: `x` cannot be casted to a double vector.\r\n```\r\n\r\nThis is what happens: When any number is supplied to `mlflow::mlflow_run()`, it may be displayed in scientific notation, remains of class numeric. Then, to prepare the call to `mlflow::mlflow_source()`, it's `paste0()`d and hence converted to character. Like all other numbers. Then, it is passed to `mlflow::mlflow_source()` as command line arguments. The difference to \"normal\" numbers is that in `parse_command_line()`,where `yaml::yaml.load()` is used, strings like \"3\" will be turned into numeric again, but not scientific notation. I see two solutions:\r\n\r\n- convert all numeric input to non-scientific before passing it to `mlflow::mlflow_source()`. Drawback: If a user supplies 1e6, it will be logged  as 1000000. This may take a lot of space, in particular in the UI when comparing many runs with big numers.\r\n\r\n- recover scientific notation in `parse_command_line()`. Drawback: We might turn  a parameter that was supplied as string into numeric, i.e. when you supplied  \"1e3\" initially, this will be turned into 1000 and the user has to see how to  turn that back into 1e3.\r\n\r\nI think the second approach is preferred and I submited #2665 to implement it.\r\n### Code to reproduce issue\r\n\r\nRun the above command in [this](https://github.com/lorenzwalthert/mlflow-r-casting-bug/tree/master/R) minimally reproducible git repo, file `R/runner.R`.\r\n","closed_by":{"login":"tomasatdatabricks","id":33237569,"node_id":"MDQ6VXNlcjMzMjM3NTY5","avatar_url":"https://avatars.githubusercontent.com/u/33237569?v=4","gravatar_id":"","url":"https://api.github.com/users/tomasatdatabricks","html_url":"https://github.com/tomasatdatabricks","followers_url":"https://api.github.com/users/tomasatdatabricks/followers","following_url":"https://api.github.com/users/tomasatdatabricks/following{/other_user}","gists_url":"https://api.github.com/users/tomasatdatabricks/gists{/gist_id}","starred_url":"https://api.github.com/users/tomasatdatabricks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomasatdatabricks/subscriptions","organizations_url":"https://api.github.com/users/tomasatdatabricks/orgs","repos_url":"https://api.github.com/users/tomasatdatabricks/repos","events_url":"https://api.github.com/users/tomasatdatabricks/events{/privacy}","received_events_url":"https://api.github.com/users/tomasatdatabricks/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2664/timeline","performed_via_github_app":null,"state_reason":"completed"}