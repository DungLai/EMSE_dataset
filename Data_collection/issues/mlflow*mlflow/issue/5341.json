{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5341","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5341/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5341/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5341/events","html_url":"https://github.com/mlflow/mlflow/issues/5341","id":1121895746,"node_id":"I_kwDOCB5Jx85C3sVC","number":5341,"title":"MLflow does not return an error when sorting on non-existing metrics","user":{"login":"jpc","id":107984,"node_id":"MDQ6VXNlcjEwNzk4NA==","avatar_url":"https://avatars.githubusercontent.com/u/107984?v=4","gravatar_id":"","url":"https://api.github.com/users/jpc","html_url":"https://github.com/jpc","followers_url":"https://api.github.com/users/jpc/followers","following_url":"https://api.github.com/users/jpc/following{/other_user}","gists_url":"https://api.github.com/users/jpc/gists{/gist_id}","starred_url":"https://api.github.com/users/jpc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpc/subscriptions","organizations_url":"https://api.github.com/users/jpc/orgs","repos_url":"https://api.github.com/users/jpc/repos","events_url":"https://api.github.com/users/jpc/events{/privacy}","received_events_url":"https://api.github.com/users/jpc/received_events","type":"User","site_admin":false},"labels":[{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2022852620,"node_id":"MDU6TGFiZWwyMDIyODUyNjIw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/sqlalchemy","name":"area/sqlalchemy","color":"ede978","default":false,"description":"Use of SQL alchemy in tracking service or model registry"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-02-02T12:57:49Z","updated_at":"2022-03-15T09:54:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\r\n\r\n- [x] Yes. I can contribute a fix for this bug independently.\r\n\r\n### System information\r\n- **MLflow installed from (source or binary)**: binary\r\n- **MLflow version (run ``mlflow --version``)**: 1.22.0\r\n\r\n### Describe the problem\r\n\r\nWhen searching for runs using the `search_runs` API:\r\n\r\n```\r\nmlflow.search_runs([experiment_id], order_by=[\"metrics.m DESC\"])\r\n```\r\n\r\nThe given metric name in the `order_by` clause is not validated in any way. If it starts with `metrics.` and is properly quoted then using a non-existing metric name will happily return the list sorted by the default ordering (date).\r\n\r\n### Code to reproduce issue\r\n\r\n```\r\nmlflow.search_runs([experiment_id], order_by=[\"metrics.this_is_an_invalid_metric DESC\"])\r\n```\r\n\r\n### Other info / logs\r\n\r\nThese seem to be the only places where the search clauses are validated and the current code only checks the syntax of clauses about `metrics`:\r\n\r\nhttps://github.com/mlflow/mlflow/blob/HEAD/mlflow/utils/search_utils.py#L153-L170\r\nhttps://github.com/mlflow/mlflow/blob/HEAD/mlflow/utils/search_utils.py#L461-L480\r\n\r\nIf testing the available metrics is difficult then maybe it's worth validating the results to make sure the at least one of the returned rows has a metric with the given name.\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterface \r\n- [x] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5341/timeline","performed_via_github_app":null,"state_reason":null}