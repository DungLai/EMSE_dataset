{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7642","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/7642/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/7642/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/7642/events","html_url":"https://github.com/mlflow/mlflow/issues/7642","id":1518873355,"node_id":"I_kwDOCB5Jx85aiCsL","number":7642,"title":"[FR] Add support for more column-based signature input types in mlflow.models.infer_signature","user":{"login":"mbignotti","id":58811790,"node_id":"MDQ6VXNlcjU4ODExNzkw","avatar_url":"https://avatars.githubusercontent.com/u/58811790?v=4","gravatar_id":"","url":"https://api.github.com/users/mbignotti","html_url":"https://github.com/mbignotti","followers_url":"https://api.github.com/users/mbignotti/followers","following_url":"https://api.github.com/users/mbignotti/following{/other_user}","gists_url":"https://api.github.com/users/mbignotti/gists{/gist_id}","starred_url":"https://api.github.com/users/mbignotti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbignotti/subscriptions","organizations_url":"https://api.github.com/users/mbignotti/orgs","repos_url":"https://api.github.com/users/mbignotti/repos","events_url":"https://api.github.com/users/mbignotti/events{/privacy}","received_events_url":"https://api.github.com/users/mbignotti/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-01-04T12:14:35Z","updated_at":"2023-01-12T01:07:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\n\nNo. I cannot contribute this feature at this time.\n\n### Proposal Summary\n\nThe utility function `mlflow.models.infer_signature` should be able to infer the schema from more python objects, in addition to those currently supported. \r\nExamples might be Polars DataFrames and Pyarrow Tables and Tabular Datasets.\n\n### Motivation\n\n> #### What is the use case for this feature?\r\nCurrently, the function `mlflow.models.infer_signature` supports the following types for columnar-based signatures:\r\n- pandas.DataFrame\r\n- dictionary of { name -> numpy.ndarray}\r\n- numpy.ndarray\r\n- pyspark.sql.DataFrame\r\n\r\nHowever, there might be cases where the input type to a model is different. In particular, I am thinking about [Polars DataFrames](https://github.com/pola-rs/polars/) and [Pyarrow Tables](https://arrow.apache.org/docs/python/data.html#tables). \r\nWith this feature, it would be possible to use these tools without any conversion.\r\n\r\n> #### Why is this use case valuable to support for MLflow users in general?\r\nAs the ecosystem of data-related tools moves on, I believe MLflow would benefit from giving more flexibility in the choice to its users, all while retaining adherence to the MLflow development workflow.\r\n\r\n> #### Why is this use case valuable to support for your project(s) or organization?\r\nPolars DataFrames and Pyarrow tables offer several advantages compared to Pandas and dictionaries, like OOC processing on a single laptop, increased speed, lower memory footprint, and others. This makes it appealing to use these data structures as input to machine learning pipelines.\r\n\r\n> #### Why is it currently difficult to achieve this use case?\r\nThe function `mlflow.types.utils._infer_schema` strictly checks the input type with `isinstance()` calls. This makes it impossible to use other dataframe libraries.\r\n\n\n### Details\n\n_No response_\n\n### What component(s) does this bug affect?\n\n- [ ] `area/artifacts`: Artifact stores and artifact logging\n- [ ] `area/build`: Build and test infrastructure for MLflow\n- [ ] `area/docs`: MLflow documentation pages\n- [ ] `area/examples`: Example code\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\n- [X] `area/models`: MLmodel format, model serialization/deserialization, flavors\n- [ ] `area/recipes`: Recipes, Recipe APIs, Recipe configs, Recipe Templates\n- [ ] `area/projects`: MLproject format, project running backends\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\n- [ ] `area/server-infra`: MLflow Tracking server backend\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\n\n### What interface(s) does this bug affect?\n\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\n- [ ] `area/windows`: Windows support\n\n### What language(s) does this bug affect?\n\n- [ ] `language/r`: R APIs and clients\n- [ ] `language/java`: Java APIs and clients\n- [ ] `language/new`: Proposals for new client languages\n\n### What integration(s) does this bug affect?\n\n- [ ] `integrations/azure`: Azure and Azure ML integrations\n- [ ] `integrations/sagemaker`: SageMaker integrations\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/7642/timeline","performed_via_github_app":null,"state_reason":null}