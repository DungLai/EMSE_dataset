{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3415","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3415/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3415/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3415/events","html_url":"https://github.com/mlflow/mlflow/issues/3415","id":699599567,"node_id":"MDU6SXNzdWU2OTk1OTk1Njc=","number":3415,"title":"[FR] Allow plugin support for tracking_uris that are only the schema mlflow.set_tracking_uri(\"plugin_schema\")","user":{"login":"eedeleon","id":31962564,"node_id":"MDQ6VXNlcjMxOTYyNTY0","avatar_url":"https://avatars.githubusercontent.com/u/31962564?v=4","gravatar_id":"","url":"https://api.github.com/users/eedeleon","html_url":"https://github.com/eedeleon","followers_url":"https://api.github.com/users/eedeleon/followers","following_url":"https://api.github.com/users/eedeleon/following{/other_user}","gists_url":"https://api.github.com/users/eedeleon/gists{/gist_id}","starred_url":"https://api.github.com/users/eedeleon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eedeleon/subscriptions","organizations_url":"https://api.github.com/users/eedeleon/orgs","repos_url":"https://api.github.com/users/eedeleon/repos","events_url":"https://api.github.com/users/eedeleon/events{/privacy}","received_events_url":"https://api.github.com/users/eedeleon/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-11T18:07:20Z","updated_at":"2020-09-18T03:44:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ x ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nPlugins currently require a tracking_uri with a registered schema. However, if the tracking_uri is only the schema, it is registered as a FileStore(\"plugin_schema\"). \r\n\r\nTo circumvent this plugin providers need to use a uri \"plugin_schema:\" to avoid this issue. However, users are then susceptible to forgetting the extra \":\" and losing some of their log calls to ./mlruns/.\r\n\r\nThe proposal is for mlflow.set_tracking_uri(\"plugin_schema\")  to validate as the specified plugin instead of FileStore(\"plugin_schema\").\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nThis allows plugin writers to have a more seamless user experience since users would only have to remember the plugin name in prepared environments. It also allows plugins to be more consistent with the databricks plugin's user experience.\r\n- Why is this use case valuable to support for MLflow users in general?\r\nIt provides a more robust code path for users that try to leverage a schema based tracking_uri.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nOur organization would like to have a tracking uri of \"azureml\", however, currently our plugin is not reached by mlflow so we are unable to do so.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nWe would need to have \"azureml:\", however, that solution is not consistent with other plugins and, as mentioned before has a failure mode that tracks to a local FileStore when \":\" is omitted.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ x ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3415/timeline","performed_via_github_app":null,"state_reason":null}