{"url":"https://api.github.com/repos/mlflow/mlflow/issues/183","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/183/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/183/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/183/events","html_url":"https://github.com/mlflow/mlflow/issues/183","id":343314205,"node_id":"MDU6SXNzdWUzNDMzMTQyMDU=","number":183,"title":"about mlflow.sklearn.***_model report an error","user":{"login":"panxuexue","id":41239150,"node_id":"MDQ6VXNlcjQxMjM5MTUw","avatar_url":"https://avatars.githubusercontent.com/u/41239150?v=4","gravatar_id":"","url":"https://api.github.com/users/panxuexue","html_url":"https://github.com/panxuexue","followers_url":"https://api.github.com/users/panxuexue/followers","following_url":"https://api.github.com/users/panxuexue/following{/other_user}","gists_url":"https://api.github.com/users/panxuexue/gists{/gist_id}","starred_url":"https://api.github.com/users/panxuexue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/panxuexue/subscriptions","organizations_url":"https://api.github.com/users/panxuexue/orgs","repos_url":"https://api.github.com/users/panxuexue/repos","events_url":"https://api.github.com/users/panxuexue/events{/privacy}","received_events_url":"https://api.github.com/users/panxuexue/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-07-21T09:46:25Z","updated_at":"2019-08-02T17:38:10Z","closed_at":"2019-08-02T17:38:10Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n### Describe the problem\r\nwhen I exec about mlflow.sklearn.log_model or mlflow.sklearn.save_model,will report an error\r\n\r\n![2018-07-21 17-40-42](https://user-images.githubusercontent.com/41239150/43034363-b8068032-8d0d-11e8-989e-87bf994c6d16.png)\r\n\r\n\r\n\r\n\r\n\r\n### Source code / logs\r\nimport numpy as np\r\n\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Dense\r\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\r\nimport mlflow.sklearn\r\nimport sys\r\nreload(sys)\r\nsys.setdefaultencoding('utf8')\r\nnp.random.seed(1337)  # for reproducibility\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    X = np.linspace(-1, 1, 200)\r\n    np.random.shuffle(X)  # randomize the data\r\n    Y = 0.5 * X + 2 + np.random.normal(0, 0.05, (200,))\r\n    # plot data\r\n    # plt.scatter(X, Y)\r\n    # plt.show()\r\n    X_train, Y_train = X[:160], Y[:160]  # first 160 data points\r\n    X_test, Y_test = X[160:], Y[160:]  # last 40 data points\r\n\r\n    # build a neural network from the 1st layer to the last layer\r\n    with mlflow.start_run():\r\n        # build a neural network from the 1st layer to the last layer\r\n        model = Sequential()\r\n        model.add(Dense(output_dim=1, input_dim=1))\r\n\r\n        # choose loss function and optimizing method\r\n        loss = str(sys.argv[1]) if len(sys.argv) > 1 else 'mse'\r\n        optimizer = str(sys.argv[2]) if len(sys.argv) > 2 else 'sgd'\r\n\r\n        model.compile(loss=loss, optimizer=optimizer)\r\n\r\n        # training\r\n        print('Training -----------')\r\n        for step in range(301):\r\n            cost = model.train_on_batch(X_train, Y_train)\r\n            if step % 100 == 0:\r\n                print('train cost: ', cost)\r\n\r\n        # test\r\n        print('\\nTesting ------------')\r\n        cost = model.evaluate(X_test, Y_test, batch_size=40)\r\n        print('test cost:', cost)\r\n        W, b = model.layers[0].get_weights()\r\n        print('Weights=', W, '\\nbiases=', b)\r\n        Y_pred = model.predict(X_test)\r\n\r\n        rmse = np.sqrt(mean_squared_error(Y_test, Y_pred))\r\n\r\n        mae = mean_absolute_error(Y_test, Y_pred)\r\n\r\n        r2 = r2_score(Y_test, Y_pred)\r\n\r\n        # plotting the prediction\r\n\r\n        # plt.scatter(X_test, Y_test)\r\n        #\r\n        # plt.plot(X_test, Y_pred)\r\n\r\n        # plt.show()\r\n\r\n        print(\"Sequential model (loss=%s, optimizer=%s):\" % (loss, optimizer))\r\n        mlflow.log_param(\"loss\", loss)\r\n        mlflow.log_param(\"optimizer\", optimizer)\r\n        mlflow.log_metric(\"rmse\", rmse)\r\n        mlflow.log_metric(\"r2\", r2)\r\n        mlflow.log_metric(\"mae\", mae)\r\n        mlflow.log_metric(\"weight\", W)\r\n        mlflow.log_metric(\"biases\", b)\r\n        # mlflow.sklearn.log_model(model, \"model\")\r\n        mlflow.sklearn.save_model(model, \"/home/panxue/mm\", conda_env=None, mlflow_model=None)\r\n","closed_by":{"login":"ankit-db","id":52183359,"node_id":"MDQ6VXNlcjUyMTgzMzU5","avatar_url":"https://avatars.githubusercontent.com/u/52183359?v=4","gravatar_id":"","url":"https://api.github.com/users/ankit-db","html_url":"https://github.com/ankit-db","followers_url":"https://api.github.com/users/ankit-db/followers","following_url":"https://api.github.com/users/ankit-db/following{/other_user}","gists_url":"https://api.github.com/users/ankit-db/gists{/gist_id}","starred_url":"https://api.github.com/users/ankit-db/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankit-db/subscriptions","organizations_url":"https://api.github.com/users/ankit-db/orgs","repos_url":"https://api.github.com/users/ankit-db/repos","events_url":"https://api.github.com/users/ankit-db/events{/privacy}","received_events_url":"https://api.github.com/users/ankit-db/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/183/timeline","performed_via_github_app":null,"state_reason":"completed"}