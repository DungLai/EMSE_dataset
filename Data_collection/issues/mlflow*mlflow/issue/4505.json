{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4505","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4505/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4505/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4505/events","html_url":"https://github.com/mlflow/mlflow/issues/4505","id":929952109,"node_id":"MDU6SXNzdWU5Mjk5NTIxMDk=","number":4505,"title":"Remote target (TensorFlow Lite & Micro)","user":{"login":"onyx22574","id":84866154,"node_id":"MDQ6VXNlcjg0ODY2MTU0","avatar_url":"https://avatars.githubusercontent.com/u/84866154?v=4","gravatar_id":"","url":"https://api.github.com/users/onyx22574","html_url":"https://github.com/onyx22574","followers_url":"https://api.github.com/users/onyx22574/followers","following_url":"https://api.github.com/users/onyx22574/following{/other_user}","gists_url":"https://api.github.com/users/onyx22574/gists{/gist_id}","starred_url":"https://api.github.com/users/onyx22574/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onyx22574/subscriptions","organizations_url":"https://api.github.com/users/onyx22574/orgs","repos_url":"https://api.github.com/users/onyx22574/repos","events_url":"https://api.github.com/users/onyx22574/events{/privacy}","received_events_url":"https://api.github.com/users/onyx22574/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-25T08:20:38Z","updated_at":"2021-06-25T08:20:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I wonder if there is the possibility to use mlflow for embedded machine learning where ml-models are trained and afterward optimized with certain quantization methods with the use of e.g. TensorFlow-Lite Converter and are deployed to remote target (bare-metal or embedded Linux device). I am looking to track their accuracy vs. the original floating-point model (reference) and its latency. I'd like to monitor this over time and improve it by retraining, acquiring more real-time data, and its use case deployment as well there are multiple remote target scenarios to execute (so-called delegates - TensorFlow terminology) \r\nI'd like to have it distinguishable (configurable) within or per mlflow project.\r\n\r\nIs it possible to use mlflow to deploy, monitor, and track ml-model over full ml life-cycle for remote embedded devices (e.g. RPi-class, bare-metal device, freeRTOS, etc..)?\r\nIs it possible to start off with pre-trained models (e.g. tfhub)?\r\n\r\nIf so, can you refer to some mlflow examples on embedded machine learning and its deployment for embedded remote target?\r\n\r\nThank you.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4505/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":2},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4505/timeline","performed_via_github_app":null,"state_reason":null}