{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3031","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3031/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3031/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3031/events","html_url":"https://github.com/mlflow/mlflow/issues/3031","id":648909570,"node_id":"MDU6SXNzdWU2NDg5MDk1NzA=","number":3031,"title":"Accessing model context for pyfunc packaged model in mlflow >= 1.9","user":{"login":"mapa17","id":1401861,"node_id":"MDQ6VXNlcjE0MDE4NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1401861?v=4","gravatar_id":"","url":"https://api.github.com/users/mapa17","html_url":"https://github.com/mapa17","followers_url":"https://api.github.com/users/mapa17/followers","following_url":"https://api.github.com/users/mapa17/following{/other_user}","gists_url":"https://api.github.com/users/mapa17/gists{/gist_id}","starred_url":"https://api.github.com/users/mapa17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mapa17/subscriptions","organizations_url":"https://api.github.com/users/mapa17/orgs","repos_url":"https://api.github.com/users/mapa17/repos","events_url":"https://api.github.com/users/mapa17/events{/privacy}","received_events_url":"https://api.github.com/users/mapa17/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022863969,"node_id":"MDU6TGFiZWwyMDIyODYzOTY5","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-soon","name":"priority/important-soon","color":"534cb5","default":false,"description":"The issue is worked on by the community currently or will be very soon, ideally in time for the"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-07-01T11:33:19Z","updated_at":"2022-04-29T08:11:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\ni am not sure if this is considered a feature request or a bug, but this might be an particular issue based on the way I use mlflow.\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\nChanges in mlflow 1.9 make it impossible to access the model context of a model saved and loaded using the pyfunc api directly.\r\n\r\nAn working example in mlflow 1.8 example would be \r\n```\r\nmodel = mlflow.pyfunc.load_model(package_folder)\r\n\r\n# Load package metadata\r\nwith open(model.context.artifacts[\"meta\"], 'rb') as handle:\r\n    meta = pickle.load(handle\r\n```\r\n\r\nSince mlflow 1.9 this is not possible anymore, as the object returned by mlflow.pyfunc.load_model() is not an instance of _PythonModelPyfuncWrapper anymore, but wrapped by a call of PyFuncModel.\r\n\r\nIn mlflow 1.8:\r\nhttps://github.com/mlflow/mlflow/blob/cf3b4e190612add14df99bb1036f1b5bfe775ba6/mlflow/pyfunc/__init__.py#L296-L297\r\n\r\nIn mlflow 1.9:\r\nhttps://github.com/mlflow/mlflow/blob/29d61687b378dcb06154df4c4750bbe6cf1081bb/mlflow/pyfunc/__init__.py#L465-L467\r\n\r\nFor mlflow >= 1.9 my current work around is to use the **_model_impl** reference as a helper.\r\n```\r\nmodel._model_impl.context\r\n```\r\n\r\nAm I abusing the API; I mean is this not the way to access meata information packaged with a model? \r\nI have a simple example [here](https://github.com/mapa17/air-de-jeux/blob/master/mlflow/pack.py)\r\n\r\nIf this is not good practise, one should obviously discard this issue.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3031/timeline","performed_via_github_app":null,"state_reason":null}