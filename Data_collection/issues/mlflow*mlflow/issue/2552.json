{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2552","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2552/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2552/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2552/events","html_url":"https://github.com/mlflow/mlflow/issues/2552","id":576521659,"node_id":"MDU6SXNzdWU1NzY1MjE2NTk=","number":2552,"title":"[BUG] Logged tf.keras model in TF 1.X not running properly","user":{"login":"lukemerrick","id":8729935,"node_id":"MDQ6VXNlcjg3Mjk5MzU=","avatar_url":"https://avatars.githubusercontent.com/u/8729935?v=4","gravatar_id":"","url":"https://api.github.com/users/lukemerrick","html_url":"https://github.com/lukemerrick","followers_url":"https://api.github.com/users/lukemerrick/followers","following_url":"https://api.github.com/users/lukemerrick/following{/other_user}","gists_url":"https://api.github.com/users/lukemerrick/gists{/gist_id}","starred_url":"https://api.github.com/users/lukemerrick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukemerrick/subscriptions","organizations_url":"https://api.github.com/users/lukemerrick/orgs","repos_url":"https://api.github.com/users/lukemerrick/repos","events_url":"https://api.github.com/users/lukemerrick/events{/privacy}","received_events_url":"https://api.github.com/users/lukemerrick/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022848902,"node_id":"MDU6TGFiZWwyMDIyODQ4OTAy","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/scoring","name":"area/scoring","color":"48eabc","default":false,"description":"MLflow Model server, model deployment tools, Spark UDFs"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-03-05T20:48:22Z","updated_at":"2020-05-04T18:47:55Z","closed_at":"2020-05-04T18:47:55Z","author_association":"NONE","active_lock_reason":null,"body":"### System information\r\n- Linux PopOS (essentially Ubuntu) 19.10\r\n- MLFlow from binary 1.7.0\r\n- Python 3.7.5\r\n- Happens in TF 1.14 and 1.15\r\n\r\n\r\n### Describe the problem\r\nUnder the above configuration, saved/logged `tf.keras` models don't seem to run properly as `pyfunc` flavored models. It seems that there is some odd interplay between the way that MLFlow manages the session/graph and the way that `tf.keras` manages things, since after successfully invoking the model by hand the MLFlow code starts working.\r\n\r\n### Code to reproduce issue\r\n```Python\r\nimport collections\r\nimport io\r\nimport os\r\nimport pathlib\r\nimport shutil\r\nimport zipfile\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nimport requests\r\nimport sklearn.metrics\r\nimport sklearn.preprocessing\r\nimport tensorflow as tf\r\n\r\nimport mlflow\r\nimport mlflow.keras\r\nimport mlflow.pyfunc\r\nimport mlflow.tensorflow\r\n\r\n\r\ndef get_data():\r\n    \"\"\"Gets a named tuple of train-test-split bikeshare data via download.\"\"\"\r\n    zip_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/00275/Bike-Sharing-Dataset.zip'\r\n    z = zipfile.ZipFile(io.BytesIO(requests.get(zip_url).content))\r\n    # here we pre-configure the datatypes for our dataframe\r\n    # so it doesn't require any datatype modification after import\r\n    bikeshare_dtypes = dict(season='category', holiday='bool',\r\n                            workingday='bool', weathersit='category')\r\n    bikeshare_datetime_columns = ['dteday']\r\n    bikeshare_index_column = 'instant'\r\n    with z.open('hour.csv') as csv:\r\n        df = pd.read_csv(csv, \r\n                         dtype=bikeshare_dtypes, \r\n                         parse_dates=bikeshare_datetime_columns,\r\n                         index_col=bikeshare_index_column)\r\n        \r\n    # drop categorical features\r\n    df.drop(columns=df.select_dtypes('category').columns, inplace=True)\r\n    \r\n    # split train/test by year\r\n    is_2011 = df['yr'] == 0\r\n    df_2011 = df[is_2011].reset_index(drop=True)\r\n    df_2012 = df[~is_2011].reset_index(drop=True)\r\n    # specify which columns are features and which are not\r\n    target = 'cnt'\r\n    not_used_as_features = ['dteday', 'yr', 'casual', 'registered']\r\n    non_feature_columns = [target] + not_used_as_features\r\n    # split our data into features and targets\r\n    x_train = df_2011.drop(columns=non_feature_columns)\r\n    x_test = df_2012.drop(columns=non_feature_columns)\r\n    y_train = df_2011[target]\r\n    y_test = df_2012[target]\r\n    return collections.namedtuple('Data', ['x_train', 'y_train', 'x_test', 'y_test'])(\r\n        x_train=x_train, x_test=x_test, y_train=y_train, y_test=y_test)\r\n    \r\n# get data\r\ndata = get_data()\r\npreprocessor = sklearn.preprocessing.StandardScaler()\r\npreprocessor.fit(data.x_train)\r\nx_train_processed = preprocessor.transform(data.x_train)\r\nx_test_processed = preprocessor.transform(data.x_test)\r\n\r\n\r\n# Construct a 2-layer MLP model\r\nmodel = tf.keras.models.Sequential([\r\n    tf.keras.layers.Dense(128, activation=tf.nn.relu),\r\n    tf.keras.layers.Dense(128, activation=tf.nn.relu),\r\n    tf.keras.layers.Dense(1)\r\n])\r\nmodel.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.003), loss='mse')\r\n\r\n# train with mlflow\r\nepoch_number = 1\r\nwith mlflow.start_run() as run:\r\n    for _ in range(2):\r\n        model.fit(x_train_processed, data.y_train.values, batch_size=16)\r\n        r2 = sklearn.metrics.r2_score(data.y_test, model.predict(x_test_processed))\r\n        mlflow.log_metric('r2', r2, step=epoch_number)\r\n        epoch_number += 1\r\n    model.optimizer.learning_rate = 0.01\r\n    for _ in range(3, 10):\r\n        model.fit(x_train_processed, data.y_train.values, batch_size=32)\r\n        r2 = sklearn.metrics.r2_score(data.y_test, model.predict(x_test_processed))\r\n        mlflow.log_metric('r2', r2, step=epoch_number)\r\n        epoch_number += 1\r\n    # log the model\r\n    mlflow.keras.log_model(model, 'keras_model', include_optimizer=False)\r\n\r\nlast_run_id = mlflow.search_runs().iat[0, 0]\r\nmlf_model = mlflow.pyfunc.load_model(f'runs:/{last_run_id}/keras_model')\r\ntest_input = pd.DataFrame(x_train_processed[:3])\r\n\r\n# this breaks when run first\r\ntry:\r\n    print(mlf_model.predict(test_input))\r\nexcept ValueError as e:\r\n    print(e)\r\n\r\n# this works, though!\r\nwith mlf_model._graph.as_default():\r\n    with mlf_model._sess.as_default():\r\n        print(pd.DataFrame(mlf_model.keras_model.predict(test_input.values),\r\n                           index=test_input.index))\r\n        \r\n# once we've run on the DataFrame.values, the original call suddenly works?\r\nprint(mlf_model.predict(test_input))\r\n```\r\n\r\n### Other info\r\nThe issue happens when serving the model using `mlflow models serve -m ....` and letting MLFlow build a clean Conda environment for the model, too.\r\n","closed_by":{"login":"juntai-zheng","id":39497939,"node_id":"MDQ6VXNlcjM5NDk3OTM5","avatar_url":"https://avatars.githubusercontent.com/u/39497939?v=4","gravatar_id":"","url":"https://api.github.com/users/juntai-zheng","html_url":"https://github.com/juntai-zheng","followers_url":"https://api.github.com/users/juntai-zheng/followers","following_url":"https://api.github.com/users/juntai-zheng/following{/other_user}","gists_url":"https://api.github.com/users/juntai-zheng/gists{/gist_id}","starred_url":"https://api.github.com/users/juntai-zheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juntai-zheng/subscriptions","organizations_url":"https://api.github.com/users/juntai-zheng/orgs","repos_url":"https://api.github.com/users/juntai-zheng/repos","events_url":"https://api.github.com/users/juntai-zheng/events{/privacy}","received_events_url":"https://api.github.com/users/juntai-zheng/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2552/timeline","performed_via_github_app":null,"state_reason":"completed"}