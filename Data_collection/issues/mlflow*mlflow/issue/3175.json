{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3175","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3175/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3175/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3175/events","html_url":"https://github.com/mlflow/mlflow/issues/3175","id":666018042,"node_id":"MDU6SXNzdWU2NjYwMTgwNDI=","number":3175,"title":"[FR] Block registered models from being updated","user":{"login":"danielvdende","id":4234426,"node_id":"MDQ6VXNlcjQyMzQ0MjY=","avatar_url":"https://avatars.githubusercontent.com/u/4234426?v=4","gravatar_id":"","url":"https://api.github.com/users/danielvdende","html_url":"https://github.com/danielvdende","followers_url":"https://api.github.com/users/danielvdende/followers","following_url":"https://api.github.com/users/danielvdende/following{/other_user}","gists_url":"https://api.github.com/users/danielvdende/gists{/gist_id}","starred_url":"https://api.github.com/users/danielvdende/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielvdende/subscriptions","organizations_url":"https://api.github.com/users/danielvdende/orgs","repos_url":"https://api.github.com/users/danielvdende/repos","events_url":"https://api.github.com/users/danielvdende/events{/privacy}","received_events_url":"https://api.github.com/users/danielvdende/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1893072438,"node_id":"MDU6TGFiZWwxODkzMDcyNDM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":"We would like help from the community to add this support"},{"id":2022847714,"node_id":"MDU6TGFiZWwyMDIyODQ3NzE0","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/model-registry","name":"area/model-registry","color":"48eabc","default":false,"description":"Model registry, model registry APIs, and the fluent client calls for model registry"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2022886708,"node_id":"MDU6TGFiZWwyMDIyODg2NzA4","url":"https://api.github.com/repos/mlflow/mlflow/labels/needs%20design","name":"needs design","color":"006b75","default":false,"description":"This feature requires design and design review before starting coding"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2020-07-27T06:37:00Z","updated_at":"2020-09-15T06:51:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [X] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nEditing/updating of an experiment run should not be possible if the run has been registered in the model registry.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nCurrently you can edit/update an existing experiment run after it has been registered as a model in the model registry. This makes it possible to break the traceability of registered models, making models possibly less reliable.\r\n- Why is this use case valuable to support for MLflow users in general?\r\nOnce a model is registered MLflow users should be able to assume that it is \"frozen\" in place, and cannot be changed anymore.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [X] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [X] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\n\r\nMy 2cts on what the solution to this should be: once an experiment run is registered as a model, it should be marked as \"frozen\". This would allow non-registered experiment runs to still be updated, while protecting registered models from changing/breaking. This would probably mean a change to the tracking API as it should reject changes to an experiment run that has a model registered to it.\r\nI think this issue is related to #3160. I'm happy to help out implementing this, if this is deemed a valid approach to resolving the problem.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3175/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3175/timeline","performed_via_github_app":null,"state_reason":null}