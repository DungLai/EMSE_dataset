{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4595","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4595/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4595/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4595/events","html_url":"https://github.com/mlflow/mlflow/issues/4595","id":951827362,"node_id":"MDU6SXNzdWU5NTE4MjczNjI=","number":4595,"title":"[FR] Experiments folder structure","user":{"login":"erikjandevries","id":7033953,"node_id":"MDQ6VXNlcjcwMzM5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/7033953?v=4","gravatar_id":"","url":"https://api.github.com/users/erikjandevries","html_url":"https://github.com/erikjandevries","followers_url":"https://api.github.com/users/erikjandevries/followers","following_url":"https://api.github.com/users/erikjandevries/following{/other_user}","gists_url":"https://api.github.com/users/erikjandevries/gists{/gist_id}","starred_url":"https://api.github.com/users/erikjandevries/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikjandevries/subscriptions","organizations_url":"https://api.github.com/users/erikjandevries/orgs","repos_url":"https://api.github.com/users/erikjandevries/repos","events_url":"https://api.github.com/users/erikjandevries/events{/privacy}","received_events_url":"https://api.github.com/users/erikjandevries/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-07-23T19:00:58Z","updated_at":"2022-08-12T08:55:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\nI have little experience in coding UI, though.\r\n\r\n## Proposal Summary\r\n\r\nIn the MLflow UI allow experiments to be grouped together in a folder structure, preferably multiple levels deep, which can be collapsed and expanded, so that experiments can be grouped together and sorted easily.\r\n\r\nPreferably, sort the experiments by name as well for clarity.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n- Why is this use case valuable to support for MLflow users in general?\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nWe have so many different experiments (with many training runs in each) that it becomes difficult to manage the list and keep an overview of the experiments. Being able to sort and group them would make it much simpler to manage them.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [x] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [x] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n\r\nI would like to be able to name my experiments\r\n```Project 1/model 1.1\r\nProject 1/model 1.2\r\nProject 1/model 1.3\r\nProject 2/model 2.1\r\nProject 2/model 2.2\r\netc.\r\n```\r\n\r\nwhich would be rendered in the UI as collapsible and expandable folders:\r\n\r\n**Experiments**\r\n- Project 1\r\n    - model 1.1\r\n    - model 1.2\r\n    - model 1.3\r\n- Project 2\r\n    - model 2.1\r\n    - model 2.2\r\n- etc.\r\n\r\nMultiple levels of folders would be greatly appreciated, e.g. `Program X/Project 3/Component B/model 1`","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4595/reactions","total_count":7,"+1":7,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4595/timeline","performed_via_github_app":null,"state_reason":null}