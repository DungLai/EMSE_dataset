{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3934","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3934/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3934/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3934/events","html_url":"https://github.com/mlflow/mlflow/issues/3934","id":777543397,"node_id":"MDU6SXNzdWU3Nzc1NDMzOTc=","number":3934,"title":"[FR] Configure Different Backends for Experiment Tracking and Model Registry","user":{"login":"garretthoffman","id":8371004,"node_id":"MDQ6VXNlcjgzNzEwMDQ=","avatar_url":"https://avatars.githubusercontent.com/u/8371004?v=4","gravatar_id":"","url":"https://api.github.com/users/garretthoffman","html_url":"https://github.com/garretthoffman","followers_url":"https://api.github.com/users/garretthoffman/followers","following_url":"https://api.github.com/users/garretthoffman/following{/other_user}","gists_url":"https://api.github.com/users/garretthoffman/gists{/gist_id}","starred_url":"https://api.github.com/users/garretthoffman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/garretthoffman/subscriptions","organizations_url":"https://api.github.com/users/garretthoffman/orgs","repos_url":"https://api.github.com/users/garretthoffman/repos","events_url":"https://api.github.com/users/garretthoffman/events{/privacy}","received_events_url":"https://api.github.com/users/garretthoffman/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022847714,"node_id":"MDU6TGFiZWwyMDIyODQ3NzE0","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/model-registry","name":"area/model-registry","color":"48eabc","default":false,"description":"Model registry, model registry APIs, and the fluent client calls for model registry"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-01-02T23:41:22Z","updated_at":"2021-01-03T02:35:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [X] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nConfigure different backends for experiment tracking and model registration. \r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n\r\nUsing the same backend for experiment tracking and model registration places limitations on custom plugins. For instance, a user may want to create a custom model registration plugin to use something like Zookeeper for model registration but continue to use the OOB Postgres backend for experiment tracking.\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\n\r\nThis would decouple the implementation of the experiment tracking backend and the model registration backend, ultimately providing more flexibility around what custom plugins can be utilized for each backend. \r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n\r\nWe are currently looking for a way to have centralized live model configuration for a distributed system used for model deployments and inference. We are trying to prototype this with Zookeeper and want to experiment with using Zookeeper as the backend store for model registration without impacting the experiment tracking backend.\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nCurrently users can only specify a single backend that is shared by both the experiment tracking and model registration components.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [X] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [X] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [x] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nMy initial thoughts around this is to just decouple the shared dependency of the experiment tracking and model registration backends into independent backends. The server would be started with the following command\r\n\r\n```bash\r\nmlfow server --tracking-backend-store-uri <PATH> --model-registry-backend-store-uri <PATH>\r\n```\r\n\r\nA user can continue to specify a shared backend with `--backend-store-uri` which will maintain backwards compatibility.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3934/timeline","performed_via_github_app":null,"state_reason":null}