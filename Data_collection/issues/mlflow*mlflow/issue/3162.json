{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3162","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3162/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3162/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3162/events","html_url":"https://github.com/mlflow/mlflow/issues/3162","id":664785932,"node_id":"MDU6SXNzdWU2NjQ3ODU5MzI=","number":3162,"title":"[FR] Add 'use_conda' parameter to MLflow projects backend plugin","user":{"login":"karishmadaga","id":24258992,"node_id":"MDQ6VXNlcjI0MjU4OTky","avatar_url":"https://avatars.githubusercontent.com/u/24258992?v=4","gravatar_id":"","url":"https://api.github.com/users/karishmadaga","html_url":"https://github.com/karishmadaga","followers_url":"https://api.github.com/users/karishmadaga/followers","following_url":"https://api.github.com/users/karishmadaga/following{/other_user}","gists_url":"https://api.github.com/users/karishmadaga/gists{/gist_id}","starred_url":"https://api.github.com/users/karishmadaga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karishmadaga/subscriptions","organizations_url":"https://api.github.com/users/karishmadaga/orgs","repos_url":"https://api.github.com/users/karishmadaga/repos","events_url":"https://api.github.com/users/karishmadaga/events{/privacy}","received_events_url":"https://api.github.com/users/karishmadaga/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848510,"node_id":"MDU6TGFiZWwyMDIyODQ4NTEw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/projects","name":"area/projects","color":"48eabc","default":false,"description":"MLproject format, project running backends"},{"id":2022859639,"node_id":"MDU6TGFiZWwyMDIyODU5NjM5","url":"https://api.github.com/repos/mlflow/mlflow/labels/integrations/azure","name":"integrations/azure","color":"ffbce5","default":false,"description":"Azure and Azure ML integrations"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-07-23T21:48:25Z","updated_at":"2020-07-24T16:02:00Z","closed_at":"2020-07-24T16:02:00Z","author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\nThe addition of 'use_conda' parameter in MLflow Project backend plugins would support end-to-end data science workflows for customers using a backend plugin for their project execution. It would allow them to test their conda environment and MLproject locally with the plugin before using compute resources for remote execution.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nData scientists can quickly test if their project works locally with their specified conda environment (either local or from mlproject) with their backend plugin before remote execution. \r\n- Why is this use case valuable to support for MLflow users in general?\r\nAdding use_conda would make it possible for a smooth, end-to-end experience for data scientists using a backend plugin for their training and execution. This would also save time and allow all artifacts and metrics from an experiment to be stored in the plugin's tracking store instead of in two locations. \r\n- Why is this use case valuable to support for your project(s) or organization?\r\nMy project involves creating an AzureML integration with MLflow Projects. Adding this feature would support a full workflow experience for data scientists using AzureML for their backend service.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nCurrently use_conda is not passed to backend plugins, so there is no reliable way to infer in the plugin if a user wants to run their project with their local conda environment or the environment specified in MLproject. \r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [x] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [x] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\nThese are the main details for the feature!\r\n","closed_by":{"login":"karishmadaga","id":24258992,"node_id":"MDQ6VXNlcjI0MjU4OTky","avatar_url":"https://avatars.githubusercontent.com/u/24258992?v=4","gravatar_id":"","url":"https://api.github.com/users/karishmadaga","html_url":"https://github.com/karishmadaga","followers_url":"https://api.github.com/users/karishmadaga/followers","following_url":"https://api.github.com/users/karishmadaga/following{/other_user}","gists_url":"https://api.github.com/users/karishmadaga/gists{/gist_id}","starred_url":"https://api.github.com/users/karishmadaga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karishmadaga/subscriptions","organizations_url":"https://api.github.com/users/karishmadaga/orgs","repos_url":"https://api.github.com/users/karishmadaga/repos","events_url":"https://api.github.com/users/karishmadaga/events{/privacy}","received_events_url":"https://api.github.com/users/karishmadaga/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3162/timeline","performed_via_github_app":null,"state_reason":"completed"}