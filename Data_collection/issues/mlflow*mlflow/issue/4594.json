{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4594","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4594/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4594/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4594/events","html_url":"https://github.com/mlflow/mlflow/issues/4594","id":951817897,"node_id":"MDU6SXNzdWU5NTE4MTc4OTc=","number":4594,"title":"[FR] Server version number (REST API / Python API / UI)","user":{"login":"erikjandevries","id":7033953,"node_id":"MDQ6VXNlcjcwMzM5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/7033953?v=4","gravatar_id":"","url":"https://api.github.com/users/erikjandevries","html_url":"https://github.com/erikjandevries","followers_url":"https://api.github.com/users/erikjandevries/followers","following_url":"https://api.github.com/users/erikjandevries/following{/other_user}","gists_url":"https://api.github.com/users/erikjandevries/gists{/gist_id}","starred_url":"https://api.github.com/users/erikjandevries/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikjandevries/subscriptions","organizations_url":"https://api.github.com/users/erikjandevries/orgs","repos_url":"https://api.github.com/users/erikjandevries/repos","events_url":"https://api.github.com/users/erikjandevries/events{/privacy}","received_events_url":"https://api.github.com/users/erikjandevries/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":978584226,"node_id":"MDU6TGFiZWw5Nzg1ODQyMjY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docs","name":"area/docs","color":"48eabc","default":false,"description":"Documentation issues"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2237250735,"node_id":"MDU6TGFiZWwyMjM3MjUwNzM1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/server-infra","name":"area/server-infra","color":"48eabc","default":false,"description":"MLflow Tracking server backend"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-23T18:44:26Z","updated_at":"2022-11-07T21:03:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\nI'd like to be able to identify an MLflow Server's version as a client.\r\n- In the REST API\r\n- In the Python API\r\n- In the user interface\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n- Why is this use case valuable to support for MLflow users in general?\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nIn many companies the team responsible for maintaining the MLflow Server is a different team from the people using the server. As a data scientist I'm tracking and registering models to the server, but I'm not (always) informed when the server gets upgraded to a new version, and which version is being installed. I would like to make sure my client scripts/programs use the correct MLflow version matching the server, so there are no problems in the client-server communication.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [?] `area/build`: Build and test infrastructure for MLflow\r\n- [x] `area/docs`: MLflow documentation pages\r\n- [?] `area/examples`: Example code\r\n- [?] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [x] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [x] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nCan I add...?\r\n- [x] `language/python`: Python APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n\r\n**REST API**:\r\n\r\nIt would be nice to have an endpoint\r\n```2.0/mlflow/server/version```\r\nfor the HTTP method GET which would return a string with the server's version number.\r\n\r\n**Python API**:\r\n\r\nIn my scripts I'd like to be able to run:\r\n```import mlflow\r\nclient = mlflow.tracking.MlflowClient()\r\nserver_version = client.get_server_version()\r\n```\r\n\r\nor, perhaps better:\r\n\r\n```import mlflow\r\nclient = mlflow.tracking.MlflowClient()\r\nserver = client.get_server()\r\nserver_info = server.info\r\nserver_version = server_info.version\r\n```\r\n\r\nI think it would make sense to add `mlflow.entities.Server` and `mlflow.entities.ServerInfo` to the object model, which could in principle be expanded in the future with additional functionalities.\r\n\r\n**User interface**:\r\n\r\nWe could add an \"About\" section to the top menu bar, which can display a page with server information, including the version number. The link to the Docs could be changed to refer not to the latest documentation, but to the documentation corresponding to the current MLflow version number.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4594/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4594/timeline","performed_via_github_app":null,"state_reason":null}