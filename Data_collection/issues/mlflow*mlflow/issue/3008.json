{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3008","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3008/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3008/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3008/events","html_url":"https://github.com/mlflow/mlflow/issues/3008","id":645728363,"node_id":"MDU6SXNzdWU2NDU3MjgzNjM=","number":3008,"title":"[FR] allow kwarg passing to MLmodel for pyfunc loader_module paradigm","user":{"login":"wamartin-aml","id":42586848,"node_id":"MDQ6VXNlcjQyNTg2ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/42586848?v=4","gravatar_id":"","url":"https://api.github.com/users/wamartin-aml","html_url":"https://github.com/wamartin-aml","followers_url":"https://api.github.com/users/wamartin-aml/followers","following_url":"https://api.github.com/users/wamartin-aml/following{/other_user}","gists_url":"https://api.github.com/users/wamartin-aml/gists{/gist_id}","starred_url":"https://api.github.com/users/wamartin-aml/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wamartin-aml/subscriptions","organizations_url":"https://api.github.com/users/wamartin-aml/orgs","repos_url":"https://api.github.com/users/wamartin-aml/repos","events_url":"https://api.github.com/users/wamartin-aml/events{/privacy}","received_events_url":"https://api.github.com/users/wamartin-aml/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022863969,"node_id":"MDU6TGFiZWwyMDIyODYzOTY5","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-soon","name":"priority/important-soon","color":"534cb5","default":false,"description":"The issue is worked on by the community currently or will be very soon, ideally in time for the"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-06-25T17:19:35Z","updated_at":"2020-07-22T17:09:08Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [x] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nIdeally, `pyfunc.log_model` would directly support passing kwargs that will be included in the MLmodel file while using the loader_module paradigm. The documentation suggests that this is the existing implementation. \r\n\r\nhttps://www.mlflow.org/docs/latest/python_api/mlflow.pyfunc.html#mlmodel-configuration\r\n\"Optionally, any additional parameters necessary for interpreting the serialized model in pyfunc format\"\r\n\r\nThe main request here is for a change to the pyfunc module, but an update to the documentation to explain addition of custom parameters would be very helpful as well.\r\n\r\n## Motivation\r\n- What is the use case for this feature? \r\nIn general, users with varied python function models may not want to or be able to use the PythonModel option and may have additional important information for rehydrating their models that should go into the MLmodel config.\r\n- Why is this use case valuable to support for MLflow users in general? \r\nIt expands the usability of pyfunc models to a greater diversity of model serialization formats.\r\n- Why is this use case valuable to support for your project(s) or organization? \r\nWe're working on logging model evaluations, which follow a similar format to models. In particular, they are collections of artifacts with metadata that is useful for efficient deserialization.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nTo start with, `pyfunc.log_model` just doesn't take kwargs to pass along to `Model.log`. Beyond that, even if trying to use `Model.log` directly with the `python_function` flavor, `Model.log` will pass those kwargs to `pyfunc.save_model`, but `pyfunc.save_model` throws away any kwargs other than `model`.\r\n\r\n``` python\r\nmlflow_model = kwargs.pop('model', mlflow_model)\r\n    if len(kwargs) > 0:\r\n        raise TypeError(\"save_model() got unexpected keyword arguments: {}\".format(kwargs))\r\n```\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n\r\nThe main proposal is to add a `**kwargs` parameter to `pyfunc.log_model`, which would be passed through `Model.log` to the kwargs of `pyfunc.save_model`. `pyfunc.save_model` would then pass all kwargs other than `model` through to `_save_model_with_loader_module_and_data_path` (probably to the artifact-based function as well), which would in turn pass them to `pyfunc.add_to_model`. Once given as input there, they will automatically be added to the MLmodel config by existing code.\r\n\r\nIf changing the high-usage `log_model` function is considered too risky or might cause confusion for users, a compromise would be to at least update the function signatures from `pyfunc.save_model` and lower so that the useful pyfunc internals are still accessible from `Model.log` with kwargs. This would enable lower level development but leave the most visible piece unchanged.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3008/timeline","performed_via_github_app":null,"state_reason":null}