{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2925","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2925/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2925/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2925/events","html_url":"https://github.com/mlflow/mlflow/issues/2925","id":637452863,"node_id":"MDU6SXNzdWU2Mzc0NTI4NjM=","number":2925,"title":"ValueError: Anonymous credentials cannot be refreshed","user":{"login":"MotiBaadror","id":28961913,"node_id":"MDQ6VXNlcjI4OTYxOTEz","avatar_url":"https://avatars.githubusercontent.com/u/28961913?v=4","gravatar_id":"","url":"https://api.github.com/users/MotiBaadror","html_url":"https://github.com/MotiBaadror","followers_url":"https://api.github.com/users/MotiBaadror/followers","following_url":"https://api.github.com/users/MotiBaadror/following{/other_user}","gists_url":"https://api.github.com/users/MotiBaadror/gists{/gist_id}","starred_url":"https://api.github.com/users/MotiBaadror/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MotiBaadror/subscriptions","organizations_url":"https://api.github.com/users/MotiBaadror/orgs","repos_url":"https://api.github.com/users/MotiBaadror/repos","events_url":"https://api.github.com/users/MotiBaadror/events{/privacy}","received_events_url":"https://api.github.com/users/MotiBaadror/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-06-12T03:14:15Z","updated_at":"2020-09-05T03:20:51Z","closed_at":"2020-06-16T09:38:46Z","author_association":"NONE","active_lock_reason":null,"body":"I am using MLFLOW in colab notebook. I have set up tracking uri (google cloud bucket) . When I try to log params it works fine. But when I try to log a file it gives the following error. \r\nI have set a value for the variable\r\n```\r\n!export GOOGLE_APPLICATION_CREDENTIALS='path/credential.json'\r\n``` \r\n```\r\nwith mlflow.start_run(run_name='nuclei') as run:\r\n  mlflow.log_artifact('/output/metrics.json')\r\n  mlflow.end_run()\r\n```\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-14-6b242a16bd91> in <module>()\r\n      2 with mlflow.start_run(run_name='nuclei-1') as run:\r\n      3   # mlflow.log_artifacts('output', artifact_path=\"events\")\r\n----> 4   mlflow.log_artifact('/content/drive/My Drive/collab/data/nuclei-v1/output/metrics.json')\r\n      5   mlflow.end_run()\r\n\r\n12 frames\r\n/usr/local/lib/python3.6/dist-packages/mlflow/tracking/fluent.py in log_artifact(local_path, artifact_path)\r\n    309     \"\"\"\r\n    310     run_id = _get_or_start_run().info.run_id\r\n--> 311     MlflowClient().log_artifact(run_id, local_path, artifact_path)\r\n    312 \r\n    313 \r\n\r\n/usr/local/lib/python3.6/dist-packages/mlflow/tracking/client.py in log_artifact(self, run_id, local_path, artifact_path)\r\n    256         :param artifact_path: If provided, the directory in ``artifact_uri`` to write to.\r\n    257         \"\"\"\r\n--> 258         self._tracking_client.log_artifact(run_id, local_path, artifact_path)\r\n    259 \r\n    260     def log_artifacts(self, run_id, local_dir, artifact_path=None):\r\n\r\n/usr/local/lib/python3.6/dist-packages/mlflow/tracking/_tracking_service/client.py in log_artifact(self, run_id, local_path, artifact_path)\r\n    255             artifact_repo.log_artifacts(local_path, path_name)\r\n    256         else:\r\n--> 257             artifact_repo.log_artifact(local_path, artifact_path)\r\n    258 \r\n    259     def log_artifacts(self, run_id, local_dir, artifact_path=None):\r\n\r\n/usr/local/lib/python3.6/dist-packages/mlflow/store/artifact/gcs_artifact_repo.py in log_artifact(self, local_file, artifact_path)\r\n     54         gcs_bucket = self._get_bucket(bucket)\r\n     55         blob = gcs_bucket.blob(dest_path)\r\n---> 56         blob.upload_from_filename(local_file)\r\n     57 \r\n     58     def log_artifacts(self, local_dir, artifact_path=None):\r\n\r\n/usr/local/lib/python3.6/dist-packages/google/cloud/storage/blob.py in upload_from_filename(self, filename, content_type, client, predefined_acl)\r\n   1211                 client=client,\r\n   1212                 size=total_bytes,\r\n-> 1213                 predefined_acl=predefined_acl,\r\n   1214             )\r\n   1215 \r\n\r\n/usr/local/lib/python3.6/dist-packages/google/cloud/storage/blob.py in upload_from_file(self, file_obj, rewind, size, content_type, num_retries, client, predefined_acl)\r\n   1156         try:\r\n   1157             created_json = self._do_upload(\r\n-> 1158                 client, file_obj, content_type, size, num_retries, predefined_acl\r\n   1159             )\r\n   1160             self._set_properties(created_json)\r\n\r\n/usr/local/lib/python3.6/dist-packages/google/cloud/storage/blob.py in _do_upload(self, client, stream, content_type, size, num_retries, predefined_acl)\r\n   1062         if size is not None and size <= _MAX_MULTIPART_SIZE:\r\n   1063             response = self._do_multipart_upload(\r\n-> 1064                 client, stream, content_type, size, num_retries, predefined_acl\r\n   1065             )\r\n   1066         else:\r\n\r\n/usr/local/lib/python3.6/dist-packages/google/cloud/storage/blob.py in _do_multipart_upload(self, client, stream, content_type, size, num_retries, predefined_acl)\r\n    856             )\r\n    857 \r\n--> 858         response = upload.transmit(transport, data, object_metadata, content_type)\r\n    859 \r\n    860         return response\r\n\r\n/usr/local/lib/python3.6/dist-packages/google/resumable_media/requests/upload.py in transmit(self, transport, data, metadata, content_type)\r\n    104             data=payload,\r\n    105             headers=headers,\r\n--> 106             retry_strategy=self._retry_strategy,\r\n    107         )\r\n    108         self._process_response(response)\r\n\r\n/usr/local/lib/python3.6/dist-packages/google/resumable_media/requests/_helpers.py in http_request(transport, method, url, data, headers, retry_strategy, **transport_kwargs)\r\n    114         transport.request, method, url, data=data, headers=headers, **transport_kwargs\r\n    115     )\r\n--> 116     return _helpers.wait_and_retry(func, RequestsMixin._get_status_code, retry_strategy)\r\n\r\n/usr/local/lib/python3.6/dist-packages/google/resumable_media/_helpers.py in wait_and_retry(func, get_status_code, retry_strategy)\r\n    148         object: The return value of ``func``.\r\n    149     \"\"\"\r\n--> 150     response = func()\r\n    151     if get_status_code(response) not in RETRYABLE:\r\n    152         return response\r\n\r\n/usr/local/lib/python3.6/dist-packages/google/auth/transport/requests.py in request(self, method, url, data, headers, **kwargs)\r\n    237                 self._auth_request, timeout=self._refresh_timeout\r\n    238             )\r\n--> 239             self.credentials.refresh(auth_request_with_timeout)\r\n    240 \r\n    241             # Recurse. Pass in the original headers, not our modified set.\r\n\r\n/usr/local/lib/python3.6/dist-packages/google/auth/credentials.py in refresh(self, request)\r\n    146         \"\"\"Raises :class:`ValueError``, anonymous credentials cannot be\r\n    147         refreshed.\"\"\"\r\n--> 148         raise ValueError(\"Anonymous credentials cannot be refreshed.\")\r\n    149 \r\n    150     def apply(self, headers, token=None):\r\n\r\nValueError: Anonymous credentials cannot be refreshed.\r\n```","closed_by":{"login":"MotiBaadror","id":28961913,"node_id":"MDQ6VXNlcjI4OTYxOTEz","avatar_url":"https://avatars.githubusercontent.com/u/28961913?v=4","gravatar_id":"","url":"https://api.github.com/users/MotiBaadror","html_url":"https://github.com/MotiBaadror","followers_url":"https://api.github.com/users/MotiBaadror/followers","following_url":"https://api.github.com/users/MotiBaadror/following{/other_user}","gists_url":"https://api.github.com/users/MotiBaadror/gists{/gist_id}","starred_url":"https://api.github.com/users/MotiBaadror/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MotiBaadror/subscriptions","organizations_url":"https://api.github.com/users/MotiBaadror/orgs","repos_url":"https://api.github.com/users/MotiBaadror/repos","events_url":"https://api.github.com/users/MotiBaadror/events{/privacy}","received_events_url":"https://api.github.com/users/MotiBaadror/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2925/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2925/timeline","performed_via_github_app":null,"state_reason":"completed"}