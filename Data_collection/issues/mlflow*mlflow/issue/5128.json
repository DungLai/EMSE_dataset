{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5128","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5128/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5128/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5128/events","html_url":"https://github.com/mlflow/mlflow/issues/5128","id":1067117920,"node_id":"I_kwDOCB5Jx84_mu1g","number":5128,"title":"[FR] Folow best practices for REST API","user":{"login":"mohammedi-haroune","id":23096288,"node_id":"MDQ6VXNlcjIzMDk2Mjg4","avatar_url":"https://avatars.githubusercontent.com/u/23096288?v=4","gravatar_id":"","url":"https://api.github.com/users/mohammedi-haroune","html_url":"https://github.com/mohammedi-haroune","followers_url":"https://api.github.com/users/mohammedi-haroune/followers","following_url":"https://api.github.com/users/mohammedi-haroune/following{/other_user}","gists_url":"https://api.github.com/users/mohammedi-haroune/gists{/gist_id}","starred_url":"https://api.github.com/users/mohammedi-haroune/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mohammedi-haroune/subscriptions","organizations_url":"https://api.github.com/users/mohammedi-haroune/orgs","repos_url":"https://api.github.com/users/mohammedi-haroune/repos","events_url":"https://api.github.com/users/mohammedi-haroune/events{/privacy}","received_events_url":"https://api.github.com/users/mohammedi-haroune/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2237250735,"node_id":"MDU6TGFiZWwyMjM3MjUwNzM1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/server-infra","name":"area/server-infra","color":"48eabc","default":false,"description":"MLflow Tracking server backend"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-11-30T11:24:22Z","updated_at":"2021-12-12T22:51:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\nMany tutorials suggests a set of best practices to follow when designing REST APIs:\r\n- https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/\r\n- https://docs.microsoft.com/en-us/azure/architecture/best-practices/api-design\r\n- https://www.freecodecamp.org/news/rest-api-best-practices-rest-endpoint-design-examples/\r\n- https://restfulapi.net/rest-api-design-tutorial-with-example/#model-uris\r\n\r\nThey have common practices:\r\n- Use plural nouns and avoid verbs in endpoints\r\n- Conform to HTTP semantics\r\n- Use Nesting on Endpoints to Show Relationships\r\n- Allow filtering, sorting, and pagination\r\n\r\nMLFlow REST API violates most theses practices:\r\n- it uses nouns in endpoint like `2.0/mlflow/runs/get`\r\n- it  uses the HTTP request data to send resource id like `experiment_id` for [`UpdateExeperiment`](https://www.mlflow.org/docs/latest/rest-api.html#update-experiment)\r\n- it uses `POST` to delete resources\r\n\r\nThis issue is about making the MLFlow REST API more standard by following the best practices.\r\n\r\nIf we do that, we'll have endpoints like:\r\n- `/api/experiments`, `GET` to list the experiments `POST` to create a new experiment\r\n- `/api/experiments/:id`, `GET` to get the experiment metadata, `PUT`/`PATCH` to update it, `DELETE` to delete it\r\n- `/api/experiments/:id/runs`,  `GET` to list the runs of the experiment, `POST` to create a new run \r\n- `/api/runs/:id`, `GET` to get the run metadata, `PUT`/`PATCH` to update it, `DELETE` to delete it\r\n- `/api/runs/:id/parameters`,  `GET` to get the parameters logged during that run, `POST` to log a new parameter\r\n- `/api/runs/:id/parameters/:name`, `GET` to get the value of the parameter, `DELETE` to delete it\r\n- `/api/runs/:id/metrics`, `GET` to get the metrics logged during that run, `POST` to log a new metric\r\n- `/api/runs/:id/metric/:name`, `GET` to get the value of the metric, `DELETE` to delete it\r\n- `/api/runs/:id/tags`, `GET` to get the tags logged during that run, `POST` to log new tag\r\n\r\n## Motivation\r\n- This will make working with the REST API intuitive and easy to understand\r\n- It'll make it possible to use Nginx's `request_auth` feature to implement authorization over MLFlow requests, it's not possible right now becuase Nginx `auth_request` erases the data before sending `/authorize` requests and MLFlow sends the `experiment_id/run_id` in the data of `POST` and `UPDATE` requests instead of the URL (POST /tracking/experiments/1), this makes it impossible to authorize such requests, see this comment: https://github.com/mlflow/mlflow/issues/761#issuecomment-981738147\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [x] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5128/timeline","performed_via_github_app":null,"state_reason":null}