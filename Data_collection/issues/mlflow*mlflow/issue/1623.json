{"url":"https://api.github.com/repos/mlflow/mlflow/issues/1623","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/1623/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/1623/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/1623/events","html_url":"https://github.com/mlflow/mlflow/issues/1623","id":469888344,"node_id":"MDU6SXNzdWU0Njk4ODgzNDQ=","number":1623,"title":"Under what circumstances, hyperopt will be __exit__() after a round of max-runs, not the next round of trainingï¼Ÿ","user":{"login":"lyw615","id":32604809,"node_id":"MDQ6VXNlcjMyNjA0ODA5","avatar_url":"https://avatars.githubusercontent.com/u/32604809?v=4","gravatar_id":"","url":"https://api.github.com/users/lyw615","html_url":"https://github.com/lyw615","followers_url":"https://api.github.com/users/lyw615/followers","following_url":"https://api.github.com/users/lyw615/following{/other_user}","gists_url":"https://api.github.com/users/lyw615/gists{/gist_id}","starred_url":"https://api.github.com/users/lyw615/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lyw615/subscriptions","organizations_url":"https://api.github.com/users/lyw615/orgs","repos_url":"https://api.github.com/users/lyw615/repos","events_url":"https://api.github.com/users/lyw615/events{/privacy}","received_events_url":"https://api.github.com/users/lyw615/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-07-18T17:10:12Z","updated_at":"2019-07-19T08:01:19Z","closed_at":"2019-07-19T08:01:19Z","author_association":"NONE","active_lock_reason":null,"body":"### Describe the problem\r\nAll followings  are the log of pdb debug,  and I can't find out which part of the link has caused the error. The value of metrics are normal. There is no error report during training.\r\n/home/do/lyw/mlflow_x/Semantic-Segmentation-Suite-master/seg_search.py(69)run()\r\n-> max_evals=max_runs)\r\n(Pdb) n\r\n--Return--\r\n> /home/do/lyw/mlflow_x/Semantic-Segmentation-Suite-master/seg_search.py(69)run()->None\r\n-> max_evals=max_runs)\r\n(Pdb) n\r\n--Call--\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(348)__exit__()\r\n-> def __exit__(self, exc_type, exc_value, tb):\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(349)__exit__()\r\n-> self._depth -= 1\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(350)__exit__()\r\n-> if self._depth == 0:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(352)__exit__()\r\n-> pop_context()\r\n(Pdb) n\r\n--Return--\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(352)__exit__()->None\r\n-> pop_context()\r\n(Pdb) n\r\n--Call--\r\n> /software/conda/lib/python3.6/contextlib.py(85)__exit__()\r\n-> def __exit__(self, type, value, traceback):\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(86)__exit__()\r\n-> if type is None:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(94)__exit__()\r\n-> if value is None:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(98)__exit__()\r\n-> try:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(99)__exit__()\r\n-> self.gen.throw(type, value, traceback)\r\n(Pdb) n\r\nWarning: Unknown argument(s): {'postfix': 'best loss: ?'}\r\n> /software/conda/lib/python3.6/contextlib.py(99)__exit__()\r\n-> self.gen.throw(type, value, traceback)\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(100)__exit__()\r\n-> except StopIteration as exc:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(105)__exit__()\r\n-> except RuntimeError as exc:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(115)__exit__()\r\n-> except:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(123)__exit__()\r\n-> if sys.exc_info()[1] is value:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/contextlib.py(124)__exit__()\r\n-> return False\r\n(Pdb) n\r\n--Return--\r\n> /software/conda/lib/python3.6/contextlib.py(124)__exit__()->False\r\n-> return False\r\n(Pdb) n\r\n--Call--\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(348)__exit__()\r\n-> def __exit__(self, exc_type, exc_value, tb):\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(349)__exit__()\r\n-> self._depth -= 1\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(350)__exit__()\r\n-> if self._depth == 0:\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(351)__exit__()\r\n-> self.close()\r\n(Pdb) n\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(352)__exit__()\r\n-> pop_context()\r\n(Pdb) n\r\n--Return--\r\n> /software/conda/lib/python3.6/site-packages/click/core.py(352)__exit__()->None\r\n-> pop_context()\r\n(Pdb) \r\nWarning: Unknown argument(s): {'postfix': 'best loss: ?'}\r\n> /home/do/lyw/mlflow_x/Semantic-Segmentation-Suite-master/seg_search.py(91)<module>()\r\n-> run()\r\n(Pdb) n\r\n--Return--\r\n> /home/do/lyw/mlflow_x/Semantic-Segmentation-Suite-master/seg_search.py(91)<module>()->None\r\n-> run()\r\n(Pdb) n\r\nWarning: Unknown argument(s): {'postfix': 'best loss: ?'}\r\n> <string>(1)<module>()->None\r\n(Pdb) n\r\n--Return--\r\n> <string>(1)<module>()->None\r\n(Pdb) n\r\nTraceback (most recent call last):\r\n  File \"/software/conda/lib/python3.6/pdb.py\", line 1667, in main\r\n    pdb._runscript(mainpyfile)\r\n  File \"/software/conda/lib/python3.6/pdb.py\", line 1548, in _runscript\r\n    self.run(statement)\r\n  File \"/software/conda/lib/python3.6/bdb.py\", line 431, in run\r\n    exec(cmd, globals, locals)\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/do/lyw/mlflow_x/Semantic-Segmentation-Suite-master/seg_search.py\", line 91, in <module>\r\n    run()\r\n  File \"/software/conda/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/software/conda/lib/python3.6/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/software/conda/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/software/conda/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/do/lyw/mlflow_x/Semantic-Segmentation-Suite-master/seg_search.py\", line 69, in run\r\n    max_evals=max_runs)\r\n  File \"/software/conda/lib/python3.6/site-packages/hyperopt/fmin.py\", line 407, in fmin\r\n    rval.exhaust()\r\n  File \"/software/conda/lib/python3.6/site-packages/hyperopt/fmin.py\", line 262, in exhaust\r\n    self.run(self.max_evals - n_done, block_until_done=self.asynchronous)\r\n  File \"/software/conda/lib/python3.6/site-packages/hyperopt/fmin.py\", line 198, in run\r\n    disable=not self.show_progressbar, dynamic_ncols=True,\r\n  File \"/software/conda/lib/python3.6/site-packages/tqdm-4.7.2-py3.6.egg/tqdm/_tqdm.py\", line 427, in __init__\r\n    Warning(\"Unknown argument(s): \" + str(kwargs)))\r\nWarning: Unknown argument(s): {'postfix': 'best loss: ?'}\r\nUncaught exception. Entering post mortem debugging\r\nRunning 'cont' or 'step' will restart the program\r\n> /software/conda/lib/python3.6/site-packages/tqdm-4.7.2-py3.6.egg/tqdm/_tqdm.py(427)__init__()\r\n-> Warning(\"Unknown argument(s): \" + str(kwargs)))\r\n\r\n\r\n### Source code / logs\r\n ```python\r\ndef run(training_data,max_runs,epochs,metric,algo):#params in evaluate process\r\n    tracking_client=mlflow.tracking.MlflowClient()#a manage client\r\n    def new_eval(nepochs,experiment_id,\r\n                 null_valid_loss,null_test_loss,return_all=False):#target function,input params\r\n        def eval(params):\r\n            import mlflow.tracking\r\n            learning_rate,decay_p=params\r\n            with mlflow.start_run(nested=True) as child_run:\r\n                p=mlflow.projects.run(uri='.',entry_point='train',\r\n                    run_id=child_run.info.run_id,\r\n                    parameters={'training_data':training_data,'epochs':str(nepochs),'learning_rate':str(learning_rate),\r\n                                'decay_p':str(decay_p)},experiment_id=experiment_id,use_conda=False)\r\n                succeded=p.wait()\r\n            if succeded:\r\n                training_run=tracking_client.get_run(p.run_id)\r\n                metrics=training_run.data.metrics\r\n                #due to  the data.metrics format,notice minus,all of this value should be negative number except first epoch\r\n                #train_loss=min(null_train_loss,metrics['train_{}'.format(metric)])\r\n                valid_loss=min(null_valid_loss,metrics['val_{}'.format(metric)])\r\n                test_loss=min(null_test_loss,metrics['test_{}'.format(metric)])\r\n                if valid_loss<0:\r\n                    valid_loss=-valid_loss\r\n                if test_loss<0:\r\n                    test_loss=-test_loss\r\n            else:\r\n                tracking_client.set_terminated(p.run_id,'FAILED')\r\n                #train_loss=null_train_loss\r\n                valid_loss=null_valid_loss\r\n                test_loss=null_test_loss\r\n            mlflow.log_metrics({\r\n                #'train_{}'.format(metric):train_loss,\r\n                'val_{}'.format(metric):valid_loss,\r\n                'test_{}'.format(metric):test_loss\r\n            })\r\n            if return_all:\r\n                return valid_loss,test_loss\r\n            else:\r\n                return valid_loss\r\n        return eval\r\n    #find the best group for such hyperparams in specify space\r\n    space=[hp.uniform('learning_rate',1e-5,1e-1),\r\n           hp.uniform('decay_p',.0,1.0)]\r\n    with mlflow.start_run() as run:#parent run\r\n        experiment_id=run.info.experiment_id\r\n        #evaluate null model first\r\n        valid_null_loss,test_null_loss=new_eval(1,experiment_id,_inf,_inf,True)(params=[1e-3,0.995])\r\n        best=fmin(fn=new_eval(epochs,experiment_id,valid_null_loss,test_null_loss),\r\n                  space=space,algo=tpe.suggest if algo== 'tpe.suggest' else  rand.suggest,\r\n                  max_evals=max_runs)\r\n        mlflow.set_tag('best params',str(best))\r\n        client=MlflowClient()\r\n        runs=client.search_runs([experiment_id],\"tags.mlflow.parentRrunId='{run_id}'\".format(\r\n            run_id=run.info.run_id\r\n        ))\r\n        #best_val_train=_inf\r\n        best_val_valid=_inf\r\n        best_val_test=_inf\r\n        best_run=None\r\n        for r in runs:\r\n            if r.data.metrics['val_avg_precision']<best_val_valid:\r\n                best_run=r\r\n                #best_val_train=r.data.metrics['train_avg_precision']\r\n                best_val_valid=r.data.metrics['val_avg_precision']\r\n                best_val_test=r.data.metrics['test_avg_precision']\r\n        mlflow.set_tag('best_run',best_run.info.run_id)\r\n        mlflow.log_metrics({\r\n            'train_{}'.format(metric):best_val_valid,\r\n            'val_{}'.format(metric):best_val_test\r\n        })\r\nif __name__=='__main__':\r\n    run()\r\n```\r\n","closed_by":{"login":"lyw615","id":32604809,"node_id":"MDQ6VXNlcjMyNjA0ODA5","avatar_url":"https://avatars.githubusercontent.com/u/32604809?v=4","gravatar_id":"","url":"https://api.github.com/users/lyw615","html_url":"https://github.com/lyw615","followers_url":"https://api.github.com/users/lyw615/followers","following_url":"https://api.github.com/users/lyw615/following{/other_user}","gists_url":"https://api.github.com/users/lyw615/gists{/gist_id}","starred_url":"https://api.github.com/users/lyw615/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lyw615/subscriptions","organizations_url":"https://api.github.com/users/lyw615/orgs","repos_url":"https://api.github.com/users/lyw615/repos","events_url":"https://api.github.com/users/lyw615/events{/privacy}","received_events_url":"https://api.github.com/users/lyw615/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/1623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/1623/timeline","performed_via_github_app":null,"state_reason":"completed"}