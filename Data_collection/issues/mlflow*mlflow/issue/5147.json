{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5147","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5147/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5147/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5147/events","html_url":"https://github.com/mlflow/mlflow/issues/5147","id":1072382187,"node_id":"I_kwDOCB5Jx84_60Dr","number":5147,"title":"[FR] Specify model environment with a docker image instead of a conda yaml","user":{"login":"pascal-schetelat","id":4366344,"node_id":"MDQ6VXNlcjQzNjYzNDQ=","avatar_url":"https://avatars.githubusercontent.com/u/4366344?v=4","gravatar_id":"","url":"https://api.github.com/users/pascal-schetelat","html_url":"https://github.com/pascal-schetelat","followers_url":"https://api.github.com/users/pascal-schetelat/followers","following_url":"https://api.github.com/users/pascal-schetelat/following{/other_user}","gists_url":"https://api.github.com/users/pascal-schetelat/gists{/gist_id}","starred_url":"https://api.github.com/users/pascal-schetelat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pascal-schetelat/subscriptions","organizations_url":"https://api.github.com/users/pascal-schetelat/orgs","repos_url":"https://api.github.com/users/pascal-schetelat/repos","events_url":"https://api.github.com/users/pascal-schetelat/events{/privacy}","received_events_url":"https://api.github.com/users/pascal-schetelat/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022851725,"node_id":"MDU6TGFiZWwyMDIyODUxNzI1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docker","name":"area/docker","color":"ede978","default":false,"description":"Docker use anywhere, such as MLprojects and MLmodels"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-06T17:02:53Z","updated_at":"2022-05-12T14:52:13Z","closed_at":"2021-12-10T14:58:38Z","author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [x] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nAdd docker image as a dependancy when logging custom flavor model using `ml_pyfunc.log_model` instead of a conda yaml.\r\n\r\nFor instance : \r\n\r\n```python\r\n ml_pyfunc.log_model(\r\n        artifact_path=\"xxx\",\r\n        loader_module='my_module.my_pipeline',\r\n        data_path='./xyz',\r\n        docker_env=\"my_base_image:my_tag\",\r\n    )\r\n```\r\n\r\n## Motivation\r\n\r\n- What is the use case for this feature?\r\n\r\nConda environement are slow to build and cannot easily handle custom dependancies, especially private repositiories that would require ssh keys of token. By specifying a base image, model would be quicker to build, deploy and serve.\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\nIt would allow mlflow user to specify custom image build around specific requirement that are hard to specify using the current work flow.  \r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nWe use mlflow to log and serve models inherinting from the custom python flavor. Our model is using in house libs stored in private gitlab repostiories. We are currently building a gitlab pipeline that takes a run-id and build an mlflow serving image. To achieve this, we side-stepped the `mlflow models build-docker` to use our own base image. This workflow is also faster, since dependancies doesn't need to be rebuilt every time.\r\n \r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nWhen using `mlflow models build-docker`, one cannot specify any sort of credential for private repositories.\r\nOne would need to put credentials in clear in the conda env yaml \r\n\r\n```yaml\r\nname: xxx\r\nchannels:\r\n  - conda-forge\r\ndependencies:\r\n - python==3.9\r\n  - pip\r\n  - geopandas\r\n  - pip : \r\n    - mlflow\r\n    -   -e git+https://${gitlab_token_name}:${gitlab_token}@gitlab.com/{repo}.git@{branch}#egg={module}\r\n\r\n```\r\nAnd even this insecure workflow is hard to get working.\r\n\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [x] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [x ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [x] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nIn https://github.com/mlflow/mlflow/blob/master/mlflow/models/docker_utils.py\r\n\r\nModify _DOCKERFILE_TEMPLATE in order to allow something like :\r\n\r\n\r\n````dockerfile\r\nFROM {{base_image}}\r\n\r\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\r\nENV GUNICORN_CMD_ARGS=\"--timeout 60 -k gevent\"\r\n\r\nWORKDIR /opt/mlflow\r\n\r\nCOPY {{model_dir}} /opt/ml/model\r\nRUN source activate qiriel && python -c \\\r\n'from mlflow.models.container import _install_pyfunc_deps;\\\r\n_install_pyfunc_deps(\\\r\n    \"/opt/ml/model\", \\\r\n    install_mlflow={{install_mlflow}}, \\\r\n    enable_mlserver={{enable_mlserver}})'\r\nENV {{disable_env}}=\"true\"\r\nENV {{ENABLE_MLSERVER}}={{enable_mlserver}}\r\n\r\n\r\n{{entrypoint}}\r\n```\r\n\r\nwhere base_image is directly taken from docker_env argument in log_model\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n","closed_by":{"login":"pascal-schetelat","id":4366344,"node_id":"MDQ6VXNlcjQzNjYzNDQ=","avatar_url":"https://avatars.githubusercontent.com/u/4366344?v=4","gravatar_id":"","url":"https://api.github.com/users/pascal-schetelat","html_url":"https://github.com/pascal-schetelat","followers_url":"https://api.github.com/users/pascal-schetelat/followers","following_url":"https://api.github.com/users/pascal-schetelat/following{/other_user}","gists_url":"https://api.github.com/users/pascal-schetelat/gists{/gist_id}","starred_url":"https://api.github.com/users/pascal-schetelat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pascal-schetelat/subscriptions","organizations_url":"https://api.github.com/users/pascal-schetelat/orgs","repos_url":"https://api.github.com/users/pascal-schetelat/repos","events_url":"https://api.github.com/users/pascal-schetelat/events{/privacy}","received_events_url":"https://api.github.com/users/pascal-schetelat/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5147/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5147/timeline","performed_via_github_app":null,"state_reason":"completed"}