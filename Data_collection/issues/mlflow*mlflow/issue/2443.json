{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2443","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2443/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2443/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2443/events","html_url":"https://github.com/mlflow/mlflow/issues/2443","id":567657793,"node_id":"MDU6SXNzdWU1Njc2NTc3OTM=","number":2443,"title":"[BUG] mlflow.spark Model predictions cannot reliably be matched to the input data","user":{"login":"djrscally","id":4592235,"node_id":"MDQ6VXNlcjQ1OTIyMzU=","avatar_url":"https://avatars.githubusercontent.com/u/4592235?v=4","gravatar_id":"","url":"https://api.github.com/users/djrscally","html_url":"https://github.com/djrscally","followers_url":"https://api.github.com/users/djrscally/followers","following_url":"https://api.github.com/users/djrscally/following{/other_user}","gists_url":"https://api.github.com/users/djrscally/gists{/gist_id}","starred_url":"https://api.github.com/users/djrscally/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djrscally/subscriptions","organizations_url":"https://api.github.com/users/djrscally/orgs","repos_url":"https://api.github.com/users/djrscally/repos","events_url":"https://api.github.com/users/djrscally/events{/privacy}","received_events_url":"https://api.github.com/users/djrscally/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022863969,"node_id":"MDU6TGFiZWwyMDIyODYzOTY5","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-soon","name":"priority/important-soon","color":"534cb5","default":false,"description":"The issue is worked on by the community currently or will be very soon, ideally in time for the"}],"state":"open","locked":false,"assignee":{"login":"tomasatdatabricks","id":33237569,"node_id":"MDQ6VXNlcjMzMjM3NTY5","avatar_url":"https://avatars.githubusercontent.com/u/33237569?v=4","gravatar_id":"","url":"https://api.github.com/users/tomasatdatabricks","html_url":"https://github.com/tomasatdatabricks","followers_url":"https://api.github.com/users/tomasatdatabricks/followers","following_url":"https://api.github.com/users/tomasatdatabricks/following{/other_user}","gists_url":"https://api.github.com/users/tomasatdatabricks/gists{/gist_id}","starred_url":"https://api.github.com/users/tomasatdatabricks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomasatdatabricks/subscriptions","organizations_url":"https://api.github.com/users/tomasatdatabricks/orgs","repos_url":"https://api.github.com/users/tomasatdatabricks/repos","events_url":"https://api.github.com/users/tomasatdatabricks/events{/privacy}","received_events_url":"https://api.github.com/users/tomasatdatabricks/received_events","type":"User","site_admin":false},"assignees":[{"login":"tomasatdatabricks","id":33237569,"node_id":"MDQ6VXNlcjMzMjM3NTY5","avatar_url":"https://avatars.githubusercontent.com/u/33237569?v=4","gravatar_id":"","url":"https://api.github.com/users/tomasatdatabricks","html_url":"https://github.com/tomasatdatabricks","followers_url":"https://api.github.com/users/tomasatdatabricks/followers","following_url":"https://api.github.com/users/tomasatdatabricks/following{/other_user}","gists_url":"https://api.github.com/users/tomasatdatabricks/gists{/gist_id}","starred_url":"https://api.github.com/users/tomasatdatabricks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomasatdatabricks/subscriptions","organizations_url":"https://api.github.com/users/tomasatdatabricks/orgs","repos_url":"https://api.github.com/users/tomasatdatabricks/repos","events_url":"https://api.github.com/users/tomasatdatabricks/events{/privacy}","received_events_url":"https://api.github.com/users/tomasatdatabricks/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-02-19T16:01:04Z","updated_at":"2020-11-09T18:54:44Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Databricks, which I think is ubuntu 18.04\r\n- **MLflow installed from (source or binary)**: Pip, so binary\r\n- **MLflow version (run ``mlflow --version``)**: 1.3.0\r\n- **Python version**: 3.7.3\r\n\r\n### Describe the problem\r\nMLflow's spark models just return the prediction column of a transformed spark dataframe. This would be fine, except Spark's ALS algorithm turns out to be annoying, and changes the order of the rows in the input DataFrame when it performs `.transform()`. Worse, it doesn't even change them to a sensible order that I can discern, so you cannot reconcile them after the fact.\r\n\r\nThis is a major problem for MLFlow's current implementation, because the way the `.predict()` function is [defined](https://github.com/mlflow/mlflow/blob/master/mlflow/spark.py#L472) means that it's impossible to tie back the output against the input:\r\n\r\n```Python\r\n    def predict(self, pandas_df):\r\n        \"\"\"\r\n        Generate predictions given input data in a pandas DataFrame.\r\n        :param pandas_df: pandas DataFrame containing input data.\r\n        :return: List with model predictions.\r\n        \"\"\"\r\n        spark_df = self.spark.createDataFrame(pandas_df)\r\n        return [x.prediction for x in\r\n                self.spark_model.transform(spark_df).select(\"prediction\").collect()]\r\n```\r\n\r\nFor instance, I have an ALS model trained and saved using `mlflow.spark.log_model()`. It's then hosted in Azure Container Instances. I can POST some data off for inference like so: \r\n\r\n```Python\r\nimport requests\r\nheaders = {'Content-Type':'application/json'}\r\ninputs = '{\"columns\":[\"Customer_Key\", \"Item_Key\"], \"data\":[[3108376, 5404708], [3108376,5195688],[3108376,4973619],[3108376,5198076],[3108376,4978723],[3108376,5004878],[3108376,5033426],[3108376,5116142],[3108376,5097183]]}'\r\n\r\nprint(requests.post(endpoint_url, headers=headers, data=inputs).text)\r\n```\r\n\r\nand I get back...\r\n\r\n> [nan, 2.3523123672930524e-05, 6.751884939149022e-06, 0.0024953146930783987, 0.0008189469808712602, 0.00013733138621319085, 0.0005776321049779654, 2.1697404008591548e-05, 0.0004996642819605768]\r\n\r\nBut if I only POST `'...\"data\":[[3108376, 5195688]]}'` (being 2nd Item_Key in the above example) the returned value is `[0.0005776321049779654]` (which is not the second predicted value). \r\n\r\nWalking back through things, I can import the Model into a notebook and try things there:\r\n\r\n```\r\nmodel = mlflow.spark.load_model('runs:/b77ef701adf14af8b62f6eddec5b60ea/Model'.format(run_id))\r\n\r\ninputs = spark.createDataFrame([\r\n(3108376,5404708),\r\n(3108376,5195688),\r\n(3108376,4973619),\r\n(3108376,5198076),\r\n(3108376,4978723),\r\n(3108376,5004878),\r\n(3108376,5033426),\r\n(3108376,5116142),\r\n(3108376,5097183)\r\n], schema=['Customer_Key', 'Item_Key'])\r\n\r\nmodel.transform(inputs).show()\r\n```\r\n\r\nand immediately the problem is clear:\r\n```\r\n+------------+--------+------------+\r\n|Customer_Key|Item_Key|  prediction|\r\n+------------+--------+------------+\r\n|     3108376| 5404708|         NaN|\r\n|     3108376| 4973619|2.3523124E-5|\r\n|     3108376| 5198076| 6.751885E-6|\r\n|     3108376| 5004878|0.0024953147|\r\n|     3108376| 4978723|  8.18947E-4|\r\n|     3108376| 5097183|1.3733139E-4|\r\n|     3108376| 5195688| 5.776321E-4|\r\n|     3108376| 5033426|2.1697404E-5|\r\n|     3108376| 5116142| 4.996643E-4|\r\n+------------+--------+------------+\r\n```\r\n\r\nThe order of the items has changed. `5195688` is no longer the 2nd Item_Key in the list. \r\n\r\nAt the moment, the only workaround I can think of is to create a Python Function flavoured model instead and manually force it to return the Customer_Key and Item_Key columns, but that's a bit less than ideal","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2443/timeline","performed_via_github_app":null,"state_reason":null}