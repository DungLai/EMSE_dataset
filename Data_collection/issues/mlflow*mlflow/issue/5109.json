{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5109","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5109/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5109/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5109/events","html_url":"https://github.com/mlflow/mlflow/issues/5109","id":1064504920,"node_id":"I_kwDOCB5Jx84_cw5Y","number":5109,"title":"[FR] Support downloading object versions in S3ArtifactRepository","user":{"login":"alexandraabbas","id":32793463,"node_id":"MDQ6VXNlcjMyNzkzNDYz","avatar_url":"https://avatars.githubusercontent.com/u/32793463?v=4","gravatar_id":"","url":"https://api.github.com/users/alexandraabbas","html_url":"https://github.com/alexandraabbas","followers_url":"https://api.github.com/users/alexandraabbas/followers","following_url":"https://api.github.com/users/alexandraabbas/following{/other_user}","gists_url":"https://api.github.com/users/alexandraabbas/gists{/gist_id}","starred_url":"https://api.github.com/users/alexandraabbas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexandraabbas/subscriptions","organizations_url":"https://api.github.com/users/alexandraabbas/orgs","repos_url":"https://api.github.com/users/alexandraabbas/repos","events_url":"https://api.github.com/users/alexandraabbas/events{/privacy}","received_events_url":"https://api.github.com/users/alexandraabbas/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-26T13:57:46Z","updated_at":"2021-11-26T13:58:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [x] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nAt my company we make use of object versioning in S3 buckets to avoid accidental overwrites of model objects. By using a specific object version we can be sure that we're using the correct model in our serving container but in the same time give the flexibility to data scientists to have read/write (but not delete) access to the S3 bucket where we store model objects. I propose a new feature to support downloading object versions from S3 buckets in `S3ArtifactRepository`.\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n\r\nMany companies make use of S3 bucket versioning to avoid accidental overwrites of objects. `S3ArtifactRepository` could conform to this best practice by accepting an optional version id when downloading objects from S3 buckets.\r\n\r\n```python\r\ndef _download_file(self, remote_file_path, local_path, version_id=None):\r\n        \"\"\"\r\n        Download a version of an object from S3. If version_id is not specified,\r\n        it downloads the latest version.\r\n        \"\"\"\r\n        (bucket, s3_root_path) = data.parse_s3_uri(self.artifact_uri)\r\n        s3_full_path = posixpath.join(s3_root_path, remote_file_path)\r\n        s3_client = self._get_s3_client()\r\n\r\n        extra_args = {}\r\n        if version_id:\r\n            extra_args = {'VersionId': version_id}\r\n\r\n        s3_client.download_file(bucket, s3_full_path, local_path, ExtraArgs=extra_args)\r\n```\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\n\r\nThis feature could help teams operating MLflow repositories on S3 buckets by allowing them to make use of bucket versioning.\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n\r\nAt my company we rely on bucket versioning to guarantee availability of models and in the same time give the flexibility to users to read/write in buckets where the models are stored. By using this feature we wouldn't have to worry about accidental overwriting of objects.\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\nAs of now MLflow doesn't support downloading object versions from S3 buckets in `S3ArtifactRepository`. We currently achieve this by using an MLflow plugin that subclasses `S3ArtifactRepository` and adds the functionality for object versions. If object versions are not supported by `S3ArtifactRepository` then a bucket (or bucket prefix) where model objects are stored has to be read only for data scientist users to avoid accidental overwrites. We believe that read only permission is not flexible enough and support for object versions can improve the user experience.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [x] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n\r\nI propose updating the following functions/classes:\r\n* `mlflow.<model>.load_model`: Accept version id when using S3 to download model artefacts\r\n* `mlflow.tracking.artifact_utils._download_artifact_from_uri`: Accept version id when using S3 to download model artefacts\r\n* `mlflow.store.artifact.artifact_repo.ArtifactRepository.download_artifacts`: Accept version id when using S3 to download model artefacts\r\n* `mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository._download_file`:  Use optional version id to download file from S3\r\n\r\n### Considerations\r\n\r\nVersioning S3 \"folders\"/prefixes can be hideous since version id is assigned to objects, not prefixes. We solve this by compressing MLflow model folders to ZIP files and storing those on S3 buckets. This makes object versioning much easier. We could add this functionality too to `S3ArtifactRepository`.\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5109/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5109/timeline","performed_via_github_app":null,"state_reason":null}