{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2954","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2954/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2954/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2954/events","html_url":"https://github.com/mlflow/mlflow/issues/2954","id":640646499,"node_id":"MDU6SXNzdWU2NDA2NDY0OTk=","number":2954,"title":"[BUG] Higher-order function causes crash when pickling MlFlowClient","user":{"login":"kcetskcaz","id":16691849,"node_id":"MDQ6VXNlcjE2NjkxODQ5","avatar_url":"https://avatars.githubusercontent.com/u/16691849?v=4","gravatar_id":"","url":"https://api.github.com/users/kcetskcaz","html_url":"https://github.com/kcetskcaz","followers_url":"https://api.github.com/users/kcetskcaz/followers","following_url":"https://api.github.com/users/kcetskcaz/following{/other_user}","gists_url":"https://api.github.com/users/kcetskcaz/gists{/gist_id}","starred_url":"https://api.github.com/users/kcetskcaz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kcetskcaz/subscriptions","organizations_url":"https://api.github.com/users/kcetskcaz/orgs","repos_url":"https://api.github.com/users/kcetskcaz/repos","events_url":"https://api.github.com/users/kcetskcaz/events{/privacy}","received_events_url":"https://api.github.com/users/kcetskcaz/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-06-17T18:16:24Z","updated_at":"2020-06-20T04:45:00Z","closed_at":"2020-06-20T04:44:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Willingness to contribute\r\nThe MLflow Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the MLflow code base?\r\n\r\n- [x] Yes. I can contribute a fix for this bug independently.\r\n- [x] Yes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute a bug fix at this time.\r\n\r\n### System information\r\nI'm running on MLFlow installed from PyPi, but more relevant env info can be found below:\r\n\r\n```\r\nLinux Pop!_OS 20.04\r\nPython 3.6.10 :: Anaconda, Inc.\r\n\r\nmlflow==1.8.0\r\npytorch-lightning==0.7.6\r\ntorch==1.5.0\r\ntorchvision==0.2.1\r\n```\r\n\r\n### Describe the problem\r\nThis problem arises when pickling `MlFlowClient` objects and results in a pickling error due to the use of a higher order function within `mlflow/tracking/_tracking_service/utils.py` in the `_get_rest_store(store_uri, **_)` function. There are other implementations of pickle that can handle lambda/higher order functions (e.g. Dill, CloudPickle), but  Python's built-in pickle library can not handle these methods. \r\n\r\nThis becomes _extremely_ problematic when using MLFlow in conjunction with 3rd party packages. One such example is Pytorch-Lightning, where they have implemented a [wrapper](https://github.com/PyTorchLightning/pytorch-lightning/issues/630) for the MlFlowClient that ends up getting pickled during distributed applications (specifically using the DistributedDataParallel or `DDP` torch backend).\r\n\r\n### Code to reproduce issue\r\nA minimal example for reproducing this issue that mirrors how Pytorch-Lightning configured their wrapper can be found in this [gist](https://gist.github.com/Polyphenolx/1b3970fe10ba70748204cd45b0f75139). Of course, wrapping the `MlFlowClient` is completely unnecessary for the reproduction of this bug- simply pickle and `MlFlowClient` object.\r\n\r\n### Other info / logs\r\n```\r\n>> python mlflow_pickle_error.py\r\nTraceback (most recent call last):\r\n  File \"mlflow_test.py\", line 14, in <module>\r\n    pickle.dump(cls, open('test_dump.pkl', 'wb'))\r\nAttributeError: Can't pickle local object '_get_rest_store.<locals>.get_default_host_creds'\r\n```\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterface \r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguage \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n### Proposed Solution\r\n\r\nThe pickle issue can be resolved by modifying `_get_rest_store` and removing/renaming the higher-order function, and using a partial to wrap the function call (Note: This requires adding `from functools import partial`). After making the changes below, the gist can run without issue. I'd be more than happy to open a PR and follow the proper protocols to contribute this fix if it is deemed acceptable.\r\n\r\n```\r\ndef _get_default_host_creds(store_uri):\r\n    return rest_utils.MlflowHostCreds(\r\n        host=store_uri,\r\n        username=os.environ.get(_TRACKING_USERNAME_ENV_VAR),\r\n        password=os.environ.get(_TRACKING_PASSWORD_ENV_VAR),\r\n        token=os.environ.get(_TRACKING_TOKEN_ENV_VAR),\r\n        ignore_tls_verification=os.environ.get(_TRACKING_INSECURE_TLS_ENV_VAR) == 'true',\r\n        client_cert_path=os.environ.get(_TRACKING_CLIENT_CERT_PATH_ENV_VAR),\r\n        server_cert_path=os.environ.get(_TRACKING_SERVER_CERT_PATH_ENV_VAR),\r\n    )\r\n\r\ndef _get_rest_store(store_uri, **_):\r\n    return RestStore(partial(_get_default_host_creds, store_uri))\r\n```\r\n\r\n#### Output After Implementing Proposed Solution\r\n\r\n```\r\n>> python mlflow_pickle_error.py\r\n\r\nProcess finished with exit code 0\r\n```","closed_by":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2954/timeline","performed_via_github_app":null,"state_reason":"completed"}