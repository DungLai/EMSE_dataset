{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5376","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5376/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5376/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5376/events","html_url":"https://github.com/mlflow/mlflow/issues/5376","id":1137183207,"node_id":"I_kwDOCB5Jx85DyAnn","number":5376,"title":"ModelInfo should contain registered model version[FR]","user":{"login":"stianmikelsen","id":37293403,"node_id":"MDQ6VXNlcjM3MjkzNDAz","avatar_url":"https://avatars.githubusercontent.com/u/37293403?v=4","gravatar_id":"","url":"https://api.github.com/users/stianmikelsen","html_url":"https://github.com/stianmikelsen","followers_url":"https://api.github.com/users/stianmikelsen/followers","following_url":"https://api.github.com/users/stianmikelsen/following{/other_user}","gists_url":"https://api.github.com/users/stianmikelsen/gists{/gist_id}","starred_url":"https://api.github.com/users/stianmikelsen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stianmikelsen/subscriptions","organizations_url":"https://api.github.com/users/stianmikelsen/orgs","repos_url":"https://api.github.com/users/stianmikelsen/repos","events_url":"https://api.github.com/users/stianmikelsen/events{/privacy}","received_events_url":"https://api.github.com/users/stianmikelsen/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2022-02-14T11:44:46Z","updated_at":"2022-02-21T19:05:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\nI apologise in advance as I am probably just using MLFlow wrong, so please educate me if there are better ways of achieving my goal :)\r\n\r\nMy goal is to register a Model with both Schema and custom Tags.\r\n\r\nI have been using `create_model_version` using the example from [here](https://www.mlflow.org/docs/latest/python_api/mlflow.tracking.html#mlflow.tracking.MlflowClient.create_model_version). The problem is I do not get the Schema even though I set signature in `mlflow.sklearn.log_model`.\r\n\r\nI am able to get the Schema set when I register the model using `mlflow.sklearn.log_model` by setting `registered_model_name`, however then I cannot find an elegant way of setting the tags.\r\nWhen running log_model it prints the resulting version number, but it does not return it in the modelInfo object, so I cannot find an elegant solution to how to set the tags afterwards using `set_model_version_tag`, I currently use `get_registered_model` and just assume the latest is the one I just registered.\r\n\r\nIf this is just not me using MLFlow wrong I believe this can be solved in two ways:\r\n- tags added as a parameter to all log_model functions\r\n- registered_model_version returned as part of ModelInfo when setting `registered_model_name` in `log_model`\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\nAbility to elegantly both set both Schema and tags on a registered model\r\n- Why is this use case valuable to support for MLflow users in general?\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5376/timeline","performed_via_github_app":null,"state_reason":null}