{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4911","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4911/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4911/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4911/events","html_url":"https://github.com/mlflow/mlflow/issues/4911","id":1031135455,"node_id":"I_kwDOCB5Jx849deDf","number":4911,"title":"[FR] gRPC grammar generation for MLflow models","user":{"login":"generoso","id":4248665,"node_id":"MDQ6VXNlcjQyNDg2NjU=","avatar_url":"https://avatars.githubusercontent.com/u/4248665?v=4","gravatar_id":"","url":"https://api.github.com/users/generoso","html_url":"https://github.com/generoso","followers_url":"https://api.github.com/users/generoso/followers","following_url":"https://api.github.com/users/generoso/following{/other_user}","gists_url":"https://api.github.com/users/generoso/gists{/gist_id}","starred_url":"https://api.github.com/users/generoso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/generoso/subscriptions","organizations_url":"https://api.github.com/users/generoso/orgs","repos_url":"https://api.github.com/users/generoso/repos","events_url":"https://api.github.com/users/generoso/events{/privacy}","received_events_url":"https://api.github.com/users/generoso/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-10-20T08:39:53Z","updated_at":"2022-01-04T04:34:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n \r\n- [x] Yes. We can contribute this feature independently within the @AmadeusITGroup/mlflow-contributors team.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n \r\n## Proposal Summary\r\n \r\nAs of today, MLflow enables serving an ML model as a REST API endpoint for inference.\r\nThere are cases where a REST API is not suitable, and a gRPC API would be preferable instead.\r\nAs a building block for providing a gRPC inference server, the gRPC grammar corresponding to a given MLflow model is needed.\r\nThe grammar would easily allow the generation of both client and server code.\r\n \r\n## Motivation\r\n- What is the use case for this feature?\r\nServing and consuming an MLflow model through a gRPC channel.\r\n- Why is this use case valuable to support for MLflow users in general?\r\nBecause of the advantages of the gRPC protocol related to performance (e.g., smaller binary payload) and to the native code generation.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nTo leverage gRPC performance in the context of serving a model within an Amadeus Fast Data microservice architecture.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nCurrently, to have a gRPC inference server/client, the grammar has to be generated manually or with custom tooling.\r\n \r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents\r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n \r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n \r\nLanguages\r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n \r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n \r\n## Details\r\n \r\nThe gRPC grammar seems to be tightly related to the model signature. Therefore a first proposal would be to add a new `grpc` module, within the `models` package, handling the generation of the grammar. It would be then possible to leverage the existing `mlflow.log_text()` API to materialize the gRPC grammar as an experiment run artifact.\r\n \r\nExample of usage:\r\n \r\n```\r\nimport mlflow.models.signature as signature\r\nimport mlflow.models.grpc as grpc\r\n \r\n...\r\n\r\nmodel_signature = signature.infer_signature(...)\r\ngrpc_grammar = grpc.generate_grammar(model_signature)\r\nmlflow.log_text(grpc_grammar, \"grpc_grammar.proto\")\r\n \r\n...\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4911/reactions","total_count":6,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4911/timeline","performed_via_github_app":null,"state_reason":null}