{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3873","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3873/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3873/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3873/events","html_url":"https://github.com/mlflow/mlflow/issues/3873","id":771272208,"node_id":"MDU6SXNzdWU3NzEyNzIyMDg=","number":3873,"title":"[BUG] Pytorch Lightning Autologging fails with older Cloudpickle version","user":{"login":"amogkam","id":8068268,"node_id":"MDQ6VXNlcjgwNjgyNjg=","avatar_url":"https://avatars.githubusercontent.com/u/8068268?v=4","gravatar_id":"","url":"https://api.github.com/users/amogkam","html_url":"https://github.com/amogkam","followers_url":"https://api.github.com/users/amogkam/followers","following_url":"https://api.github.com/users/amogkam/following{/other_user}","gists_url":"https://api.github.com/users/amogkam/gists{/gist_id}","starred_url":"https://api.github.com/users/amogkam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amogkam/subscriptions","organizations_url":"https://api.github.com/users/amogkam/orgs","repos_url":"https://api.github.com/users/amogkam/repos","events_url":"https://api.github.com/users/amogkam/events{/privacy}","received_events_url":"https://api.github.com/users/amogkam/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-19T01:32:19Z","updated_at":"2020-12-19T01:32:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting an issue. Please refer to our [issue policy](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md) for additional information about bug reports. For help with debugging your code, please refer to [Stack Overflow](https://stackoverflow.com/questions/tagged/mlflow).\r\n\r\n**Please fill in this bug report template to ensure a timely and thorough response.**\r\n\r\n### Willingness to contribute\r\nThe MLflow Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the MLflow code base?\r\n\r\n- [ ] Yes. I can contribute a fix for this bug independently.\r\n- [x] Yes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute a bug fix at this time.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 18.04\r\n- **MLflow installed from (source or binary)**: Binary (pip install mlflow)\r\n- **MLflow version (run ``mlflow --version``)**: 1.12.1\r\n- **Python version**: 3.7.7\r\n- **npm version, if running the dev UI**: No UI\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nPytorch Lightning autologging fails on older versions of cloudpickle. It looks like MLflow is simply importing cloudpickle and using it as the pickle_module for `torch.save`, and this fails for certain cloudpickle versions. I think quick fix would be to just pin a minimum cloudpickle version in `setup.py`.\r\n\r\n### Code to reproduce issue\r\nFirst `pip install cloudpickle==1.1.1`.\r\n\r\nThen run the following simple example, with the Pytorch Lightning code taken straight from their guide:\r\n```\r\nimport torch\r\nfrom torch.nn import functional as F\r\nfrom torch import nn\r\nfrom pytorch_lightning.core.lightning import LightningModule\r\n\r\nclass LitMNIST(LightningModule):\r\n\r\n  def __init__(self):\r\n    super().__init__()\r\n\r\n    # mnist images are (1, 28, 28) (channels, width, height)\r\n    self.layer_1 = torch.nn.Linear(28 * 28, 128)\r\n    self.layer_2 = torch.nn.Linear(128, 256)\r\n    self.layer_3 = torch.nn.Linear(256, 10)\r\n\r\n  def forward(self, x):\r\n    batch_size, channels, width, height = x.size()\r\n\r\n    # (b, 1, 28, 28) -> (b, 1*28*28)\r\n    x = x.view(batch_size, -1)\r\n    x = self.layer_1(x)\r\n    x = F.relu(x)\r\n    x = self.layer_2(x)\r\n    x = F.relu(x)\r\n    x = self.layer_3(x)\r\n\r\n    x = F.log_softmax(x, dim=1)\r\n    return x\r\n\r\n  def training_step(self, batch, batch_idx):\r\n    x, y = batch\r\n    logits = self(x)\r\n    loss = F.nll_loss(logits, y)\r\n    return loss\r\n\r\n  def configure_optimizers(self):\r\n    return torch.optim.Adam(self.parameters(), lr=0.01)\r\n\r\nmodel = LitMNIST()\r\n\r\nfrom torch.utils.data import DataLoader, random_split\r\nfrom torchvision.datasets import MNIST\r\nimport os\r\nfrom torchvision import datasets, transforms\r\n\r\n# transforms\r\n# prepare transforms standard to MNIST\r\ntransform=transforms.Compose([transforms.ToTensor(),\r\n                              transforms.Normalize((0.1307,), (0.3081,))])\r\n\r\n# data\r\nmnist_train = MNIST(os.getcwd(), train=True, download=True, transform=transform)\r\nmnist_train = DataLoader(mnist_train, batch_size=64)\r\n\r\nfrom pytorch_lightning import Trainer\r\n\r\nimport mlflow\r\nmlflow.set_experiment(\"ptl_test\")\r\n\r\nmlflow.pytorch.autolog()\r\ntrainer = Trainer(max_steps=10)\r\ntrainer.fit(model, mnist_train)\r\n```\r\n### Other info / logs\r\nStack trace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 62, in <module>\r\n    trainer.fit(model, mnist_train)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/mlflow/pytorch/_pytorch_autolog.py\", line 216, in fit\r\n    return _run_and_log_function(self, original, args, kwargs)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/mlflow/pytorch/_pytorch_autolog.py\", line 205, in _run_and_log_function\r\n    result = original(self, *args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py\", line 439, in fit\r\n    results = self.accelerator_backend.train()\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/pytorch_lightning/accelerators/cpu_accelerator.py\", line 48, in train\r\n    results = self.train_or_test()\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/pytorch_lightning/accelerators/accelerator.py\", line 66, in train_or_test\r\n    results = self.trainer.train()\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py\", line 487, in train\r\n    self.train_loop.on_train_end()\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/training_loop.py\", line 182, in on_train_end\r\n    self.trainer.call_hook('on_train_end')\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py\", line 822, in call_hook\r\n    trainer_hook(*args, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/callback_hook.py\", line 117, in on_train_end\r\n    callback.on_train_end(self, self.get_model())\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/mlflow/pytorch/_pytorch_autolog.py\", line 124, in on_train_end\r\n    mlflow.pytorch.log_model(pytorch_model=trainer.model, artifact_path=\"model\")\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/mlflow/pytorch/__init__.py\", line 239, in log_model\r\n    **kwargs,\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/mlflow/models/model.py\", line 172, in log\r\n    flavor.save_model(path=local_path, mlflow_model=mlflow_model, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/mlflow/pytorch/__init__.py\", line 405, in save_model\r\n    torch.save(pytorch_model, model_path, pickle_module=pickle_module, **kwargs)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/torch/serialization.py\", line 372, in save\r\n    _save(obj, opened_zipfile, pickle_module, pickle_protocol)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/torch/serialization.py\", line 476, in _save\r\n    pickler.dump(obj)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/cloudpickle/cloudpickle.py\", line 357, in dump\r\n    return Pickler.dump(self, obj)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/pickle.py\", line 437, in dump\r\n    self.save(obj)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/pickle.py\", line 549, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/pickle.py\", line 662, in save_reduce\r\n    save(state)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/pickle.py\", line 504, in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/pickle.py\", line 859, in save_dict\r\n    self._batch_setitems(obj.items())\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/pickle.py\", line 885, in _batch_setitems\r\n    save(v)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/pickle.py\", line 535, in save\r\n    self.save_global(obj, rv)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.7/site-packages/cloudpickle/cloudpickle.py\", line 837, in save_global\r\n    if obj.__module__ == \"__main__\":\r\nAttributeError: 'torch.dtype' object has no attribute '__module__'\r\n```\r\n\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterface \r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguage \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3873/timeline","performed_via_github_app":null,"state_reason":null}