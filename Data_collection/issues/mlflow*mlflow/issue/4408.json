{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4408","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4408/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4408/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4408/events","html_url":"https://github.com/mlflow/mlflow/issues/4408","id":905965097,"node_id":"MDU6SXNzdWU5MDU5NjUwOTc=","number":4408,"title":"[FR] Make log_param() return the passed parameter value (expression for functional use)","user":{"login":"plaurent","id":1526749,"node_id":"MDQ6VXNlcjE1MjY3NDk=","avatar_url":"https://avatars.githubusercontent.com/u/1526749?v=4","gravatar_id":"","url":"https://api.github.com/users/plaurent","html_url":"https://github.com/plaurent","followers_url":"https://api.github.com/users/plaurent/followers","following_url":"https://api.github.com/users/plaurent/following{/other_user}","gists_url":"https://api.github.com/users/plaurent/gists{/gist_id}","starred_url":"https://api.github.com/users/plaurent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/plaurent/subscriptions","organizations_url":"https://api.github.com/users/plaurent/orgs","repos_url":"https://api.github.com/users/plaurent/repos","events_url":"https://api.github.com/users/plaurent/events{/privacy}","received_events_url":"https://api.github.com/users/plaurent/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":955449436,"node_id":"MDU6TGFiZWw5NTU0NDk0MzY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":4300304016,"node_id":"LA_kwDOCB5Jx88AAAABAFFukA","url":"https://api.github.com/repos/mlflow/mlflow/labels/has-closing-pr","name":"has-closing-pr","color":"fef2c0","default":false,"description":"This issue has a closing PR"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/mlflow/mlflow/milestones/3","html_url":"https://github.com/mlflow/mlflow/milestone/3","labels_url":"https://api.github.com/repos/mlflow/mlflow/milestones/3/labels","id":7155995,"node_id":"MI_kwDOCB5Jx84AbTEb","number":3,"title":"MLflow Roadmap","description":"We are looking for help from the community to implement many of these features and bug fixes, which are annotated with the ``help wanted`` label. If you are interested in contributing to the implementation of one or more of these roadmap items, please leave a comment on the corresponding GitHub issue and we will assign a maintainer to support your development (if needed) efforts and aid in getting this feature merged.\r\nPlease carefully review the details within the issue and understand the scope of the implementation as marked within the issue prior to agreeing to take on the implementation work.","creator":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"open_issues":11,"closed_issues":21,"state":"open","created_at":"2021-09-15T20:15:38Z","updated_at":"2023-01-09T04:13:10Z","due_on":null,"closed_at":null},"comments":4,"created_at":"2021-05-28T19:51:44Z","updated_at":"2022-08-18T06:16:28Z","closed_at":"2022-08-18T05:18:38Z","author_association":"NONE","active_lock_reason":null,"body":"## MLflow Roadmap Item\r\n\r\nThis is an MLflow Roadmap item that has been prioritized by the MLflow maintainers. We’ve identified this feature as a highly requested addition to the MLflow package based on community feedback. \r\nWe're seeking a community contribution for the implementation of this feature and will enthusiastically support the development and review of a submitted PR for this.\r\n\r\n## Feature scope\r\n\r\nThis roadmap feature’s complexity is classified as:\r\n\r\n- [X] `good-first-issue`: This feature is limited in complexity and effort required to implement.\r\n\r\n## Feature Request\r\n\r\nThis proposal is to make `mlflow.log_param()` return the passed parameter value so it can be used in a functional way, as an expression.  This will reduce the likelihood of usage errors and increase the speed of development for machine learning practitioners.\r\n\r\n## Proposal Summary\r\n\r\nThis feature will allow `mlflow.log_param()` to return the logged parameter value.  This would allow the in-line use of `log_param`, ensuring that the logged value is actually identical to the value used in the model or process.  \r\n\r\n## Motivation\r\n**- What is the use case for this feature?**\r\n\r\nThis feature can be used in machine learning experiments to ensure that the parameter value used is the same as the value that is logged.\r\n\r\n**- Why is this use case valuable to support for MLflow users in general?**\r\n\r\nThis use case is valuable because it enables rapid, agile development while reducing the likelihood of errors.  It's also backwards compatible.\r\n\r\n**- Why is this use case valuable to support for your project(s) or organization?**\r\n\r\nThis use case supports all data science efforts across our companies' projects.\r\n\r\n**- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)**\r\n\r\nCurrently this use case cannot be achieved as `mlflow.log_param()` is imperative and does not currently return the value.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nCurrently `mlflow.log_param()` is an imperative statement. Because of this, multiple lines of code are needed to use `log_param` and parametrize a model. In particular:\r\n\r\n1. A variable must be created and set to the desired value (ideally a constant, which isn't really supported in Python)\r\n2. The machine learning model is parametrized with that variable's value\r\n3. `mlflow.log_param()` is called using that variable's value\r\n\r\nFor example:\r\n```python\r\nNUM_HIDDEN = 30\r\nmodel.add(Dense(NUM_HIDDEN))\r\nmlflow.log_param(\"NUM_HIDDEN\", NUM_HIDDEN)  # Current MLflow usage pattern\r\n```\r\n\r\nSeveral things can go wrong when an implementer uses the current interface:\r\n- the implementer might inadvertently use a different variable **name** from the name used in the `log_param` call.  This could cause confusion in interpreting the logged parameters w.r.t. the source code (e.g., `mlflow.log_param(\"NUM_HIDDEN_UNITS\", NUM_HIDDEN)`).\r\n- the implementer might inadvertently change the **value** of `NUM_HIDDEN` between steps 2 and 3.  This would result in the wrong value being logged.\r\n- the implementer might inadvertently **omit** or **skip** step 3, resulting in the model running but no value being logged for that parameter.\r\n\r\nIf the proposal describe in this issue is adopted, the 3 lines of Python above could be rewritten as:\r\n\r\n```python\r\nmodel.add(Dense(mlflow.log_param(\"NUM_HIDDEN\", 30)))   # Proposed MLflow usage pattern\r\n```\r\n\r\nThis would greatly reduce the possibility of errors in the use of MLflow.\r\n","closed_by":{"login":"harupy","id":17039389,"node_id":"MDQ6VXNlcjE3MDM5Mzg5","avatar_url":"https://avatars.githubusercontent.com/u/17039389?v=4","gravatar_id":"","url":"https://api.github.com/users/harupy","html_url":"https://github.com/harupy","followers_url":"https://api.github.com/users/harupy/followers","following_url":"https://api.github.com/users/harupy/following{/other_user}","gists_url":"https://api.github.com/users/harupy/gists{/gist_id}","starred_url":"https://api.github.com/users/harupy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harupy/subscriptions","organizations_url":"https://api.github.com/users/harupy/orgs","repos_url":"https://api.github.com/users/harupy/repos","events_url":"https://api.github.com/users/harupy/events{/privacy}","received_events_url":"https://api.github.com/users/harupy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4408/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4408/timeline","performed_via_github_app":null,"state_reason":"completed"}