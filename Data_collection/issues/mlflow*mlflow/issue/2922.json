{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2922","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2922/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2922/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2922/events","html_url":"https://github.com/mlflow/mlflow/issues/2922","id":636847196,"node_id":"MDU6SXNzdWU2MzY4NDcxOTY=","number":2922,"title":"[FR] Ability to search for missing values/NAs using search_runs","user":{"login":"andycraig","id":23294156,"node_id":"MDQ6VXNlcjIzMjk0MTU2","avatar_url":"https://avatars.githubusercontent.com/u/23294156?v=4","gravatar_id":"","url":"https://api.github.com/users/andycraig","html_url":"https://github.com/andycraig","followers_url":"https://api.github.com/users/andycraig/followers","following_url":"https://api.github.com/users/andycraig/following{/other_user}","gists_url":"https://api.github.com/users/andycraig/gists{/gist_id}","starred_url":"https://api.github.com/users/andycraig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andycraig/subscriptions","organizations_url":"https://api.github.com/users/andycraig/orgs","repos_url":"https://api.github.com/users/andycraig/repos","events_url":"https://api.github.com/users/andycraig/events{/privacy}","received_events_url":"https://api.github.com/users/andycraig/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2022866026,"node_id":"MDU6TGFiZWwyMDIyODY2MDI2","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/backlog","name":"priority/backlog","color":"534cb5","default":false,"description":"We believe it is useful, but donâ€™t see it being prioritized in the next few months."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-06-11T09:01:04Z","updated_at":"2021-05-24T11:30:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\nMaybe. I would need to discuss with my organisation.\r\n\r\n## Proposal Summary\r\n\r\nA way to search for missing values/NAs using the `MlflowClient().search_runs()` parameter `filter_string`.\r\n\r\n## Motivation\r\n\r\nMy use case is searching for runs completed before a parameter was added.\r\n\r\nRuns completed before adding the parameter 'my_new_param' show a '-' under 'my_new_param' in the Parameters section of the UI. I would like to search for these runs programmatically. I cannot see a way to do it using https://github.com/mlflow/mlflow/blob/4ceeb45b3a72b6ae596a017d031cfa816098986b/mlflow/utils/search_utils.py I have tried using a `filter_string` containing `\"params.my_new_param = '-'\"` and `\"params.my_new_param = ''\"` but they do not seem to work.\r\n\r\nMy current workaround is to export a CSV with `mlflow experiments csv`, read it back in and filter using `isna()` from pandas.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\n\r\nApologies in advance if this is already possible and I have missed it, or if my 'use case' is actually the result of a bad MLflow workflow. In either of these cases, I'd be very pleased to hear what I should be doing instead!\r\n\r\nThank you.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2922/timeline","performed_via_github_app":null,"state_reason":null}