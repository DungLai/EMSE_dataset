{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4299","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4299/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4299/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4299/events","html_url":"https://github.com/mlflow/mlflow/issues/4299","id":870078773,"node_id":"MDU6SXNzdWU4NzAwNzg3NzM=","number":4299,"title":"[FR] SqlAlchemyStore.log_batch should really write in batches","user":{"login":"simonhessner","id":29107077,"node_id":"MDQ6VXNlcjI5MTA3MDc3","avatar_url":"https://avatars.githubusercontent.com/u/29107077?v=4","gravatar_id":"","url":"https://api.github.com/users/simonhessner","html_url":"https://github.com/simonhessner","followers_url":"https://api.github.com/users/simonhessner/followers","following_url":"https://api.github.com/users/simonhessner/following{/other_user}","gists_url":"https://api.github.com/users/simonhessner/gists{/gist_id}","starred_url":"https://api.github.com/users/simonhessner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonhessner/subscriptions","organizations_url":"https://api.github.com/users/simonhessner/orgs","repos_url":"https://api.github.com/users/simonhessner/repos","events_url":"https://api.github.com/users/simonhessner/events{/privacy}","received_events_url":"https://api.github.com/users/simonhessner/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1893072438,"node_id":"MDU6TGFiZWwxODkzMDcyNDM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":"We would like help from the community to add this support"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2022852620,"node_id":"MDU6TGFiZWwyMDIyODUyNjIw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/sqlalchemy","name":"area/sqlalchemy","color":"ede978","default":false,"description":"Use of SQL alchemy in tracking service or model registry"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-04-28T15:30:09Z","updated_at":"2022-06-16T17:44:55Z","closed_at":"2022-04-14T22:27:48Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## MLflow Roadmap Item\r\n\r\nThis is an MLflow Roadmap item that has been prioritized by the MLflow maintainers. We're seeking help with the implementation of roadmap items tagged with the `help wanted` label.\r\n\r\nFor requirements clarifications and implementation questions, or to request a PR review, please tag @WeichenXu123 in your communications related to this issue.\r\n\r\n## Proposal Summary\r\nSince MLFlow can easily get really slow, it would be great if the log_batch method really would log in batches. This method currently only iterates over all metrics, params and tags and then calls the log_metric/param/tag methods on each. In my understanding each of these calls opens a new database connection which is very slow. It seriously slows down my training loop when I log the losses in each batch of each epoch.\r\n\r\n## Motivation\r\nSee the following snippet from `sqlalchemy_store.py`:\r\n\r\n```python\r\ndef log_batch(self, run_id, metrics, params, tags):\r\n    _validate_run_id(run_id)\r\n    _validate_batch_log_data(metrics, params, tags)\r\n    _validate_batch_log_limits(metrics, params, tags)\r\n    with self.ManagedSessionMaker() as session:\r\n        run = self._get_run(run_uuid=run_id, session=session)\r\n        self._check_run_is_active(run)\r\n    try:\r\n        for param in params:\r\n            self.log_param(run_id, param)\r\n        for metric in metrics:\r\n            self.log_metric(run_id, metric)\r\n        for tag in tags:\r\n            self.set_tag(run_id, tag)\r\n    except MlflowException as e:\r\n        raise e\r\n    except Exception as e:\r\n        raise MlflowException(e, INTERNAL_ERROR)\r\n```\r\n\r\n- What is the use case for this feature?\r\nImagine you are doing a hyperparameter search (e.g. using hyperopt or optuna) and you want to log each of the trials in detail. In my example I am traning 20 models in parallel on 4 GPUs and I want to log the losses. When using the default file storage (mlruns folder), this works very well, but then the UI gets extremely slow. Therefore I am switching to a database backend which makes the UI really fast, but unfortunately the logging very slow.\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\nPerformance is always important and I have already seen many questions about performance issues in MLFlow.\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nSame as above.\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nLogging slows down my training loop a lot. Logging should be highly optimized and the number of DB transactions should be as low as possible.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [x] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n","closed_by":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4299/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4299/timeline","performed_via_github_app":null,"state_reason":"completed"}