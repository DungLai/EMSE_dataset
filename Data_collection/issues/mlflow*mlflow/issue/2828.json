{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2828","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2828/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2828/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2828/events","html_url":"https://github.com/mlflow/mlflow/issues/2828","id":618525858,"node_id":"MDU6SXNzdWU2MTg1MjU4NTg=","number":2828,"title":"[FR] Adding custom API endpoints to mlflow prediction based services","user":{"login":"LarsDu","id":17152264,"node_id":"MDQ6VXNlcjE3MTUyMjY0","avatar_url":"https://avatars.githubusercontent.com/u/17152264?v=4","gravatar_id":"","url":"https://api.github.com/users/LarsDu","html_url":"https://github.com/LarsDu","followers_url":"https://api.github.com/users/LarsDu/followers","following_url":"https://api.github.com/users/LarsDu/following{/other_user}","gists_url":"https://api.github.com/users/LarsDu/gists{/gist_id}","starred_url":"https://api.github.com/users/LarsDu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LarsDu/subscriptions","organizations_url":"https://api.github.com/users/LarsDu/orgs","repos_url":"https://api.github.com/users/LarsDu/repos","events_url":"https://api.github.com/users/LarsDu/events{/privacy}","received_events_url":"https://api.github.com/users/LarsDu/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848902,"node_id":"MDU6TGFiZWwyMDIyODQ4OTAy","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/scoring","name":"area/scoring","color":"48eabc","default":false,"description":"MLflow Model server, model deployment tools, Spark UDFs"},{"id":2022866842,"node_id":"MDU6TGFiZWwyMDIyODY2ODQy","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/awaiting-more-evidence","name":"priority/awaiting-more-evidence","color":"534cb5","default":false,"description":"Lowest priority. Possibly useful, but not yet enough support to actually get it done."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-05-14T20:48:03Z","updated_at":"2022-12-01T14:17:35Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [x] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nRight now mlflow based scoring servers have a set of RESTful api endpoints that are quite generic, but for production model deployments, very often greater flexibility is required. Users may want to pass information to deployed models as well as retrieve certain types of data such as model version, or data that is very particular to certain types of use cases.\r\n\r\nMlflow right now obscures the backend flask architecture that could be used by end users to create their own API endpoints, but I was wondering if there is a set way to allow developers to create custom endpoints without replacing mlflow.\r\n\r\n\r\n## Motivation\r\n- What is the use case for this feature? Allow greater flexibility to end-users.\r\n\r\n- Why is this use case valuable to support for MLflow users in general? Passing data to things like PythonModels is currently limited to inference data (pandas dataframes and numpy arrays), but for non-inference data, engineers and software development teams expect adherence to RESTful API design patterns.\r\n\r\n- Why is this use case valuable to support for your project(s) or organization? Our organization can facilitate better communication and code reusability by communicating with deployed services using RESTful APIs.\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient) No documentation exists on how to swap out mlflow's default flask backend for something that can be modified to include additional api endpoints.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [x] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\n\r\n(Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please refer to the [Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst#contribution-guidelines).)\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2828/timeline","performed_via_github_app":null,"state_reason":null}