{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4123","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4123/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4123/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4123/events","html_url":"https://github.com/mlflow/mlflow/issues/4123","id":812176928,"node_id":"MDU6SXNzdWU4MTIxNzY5Mjg=","number":4123,"title":"How to start simulataneous runs in the same experiment without some of them tripping over experiment creation?","user":{"login":"Antymon","id":641005,"node_id":"MDQ6VXNlcjY0MTAwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/641005?v=4","gravatar_id":"","url":"https://api.github.com/users/Antymon","html_url":"https://github.com/Antymon","followers_url":"https://api.github.com/users/Antymon/followers","following_url":"https://api.github.com/users/Antymon/following{/other_user}","gists_url":"https://api.github.com/users/Antymon/gists{/gist_id}","starred_url":"https://api.github.com/users/Antymon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Antymon/subscriptions","organizations_url":"https://api.github.com/users/Antymon/orgs","repos_url":"https://api.github.com/users/Antymon/repos","events_url":"https://api.github.com/users/Antymon/events{/privacy}","received_events_url":"https://api.github.com/users/Antymon/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-02-19T16:50:42Z","updated_at":"2022-02-19T19:05:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\r\nThe MLflow Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the MLflow code base?\r\n\r\n- [ ] Yes. I can contribute a fix for this bug independently.\r\n- [ ] Yes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n- [x] No. I cannot contribute a bug fix at this time.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: CentOS 3.10.0-1160.11.1.el7.x86_64\r\n- **MLflow installed from (source or binary)**: binary\r\n- **MLflow version (run ``mlflow --version``)**: 1.13.1\r\n- **Python version**: 3.8.5\r\n- **npm version, if running the dev UI**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nIf naively starting multiple processes, each of them creating the same experiment conditionally on a response if experiment already exists I quickly get into race condition:\r\n\r\n```mlflow.exceptions.RestException: RESOURCE_ALREADY_EXISTS: Experiment(name=/zejml/test_sz) already exists. Error: (raised as a result of Query-invoked autoflush; consider using a session.no_autoflush block if this flush is occurring prematurely)\r\n(MySQLdb._exceptions.IntegrityError) (1062, \"Duplicate entry '/zejml/test_sz' for key 'name'\")\r\n[SQL: INSERT INTO experiments (name, artifact_location, lifecycle_stage) VALUES (%s, %s, %s)]\r\n[parameters: ('/zejml/test_sz', '', 'active')]\r\n(Background on this error at: http://sqlalche.me/e/13/gkpj)\r\n```\r\n\r\nNow, what is the recommended way to handle this problem in MLFlow? \r\nWould it be safe to catch this error and proceed, assuming the experiment exists? \r\nOr perhaps I would have to create something more sophisticated like master and slave processes, with creation being the master's responsibility?\r\nOr anything else?\r\n\r\nI need to assume that processes are started separately, i.e., they cannot be spawned by some root process that could also deal with the experiment creation. This is because I am trying to add MLFLow on top of an existing infra that works in such a way.\r\n\r\n### Code to reproduce issue\r\nRun simultaneously multiple processes for the same experiment, calling into:\r\n```\r\n    def _get_or_create_experiment(self, experiment_name: str):\r\n        experiment = self._client.get_experiment_by_name(experiment_name)\r\n        if experiment is None:\r\n            logger.info(f\"Creating experiment {experiment_name}...\")\r\n            return self._client.create_experiment(experiment_name)\r\n        else:\r\n            return self._get_experiment(experiment)\r\n```\r\n\r\n### Other info / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterface \r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguage \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4123/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4123/timeline","performed_via_github_app":null,"state_reason":null}