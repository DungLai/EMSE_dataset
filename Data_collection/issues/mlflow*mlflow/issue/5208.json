{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5208","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5208/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5208/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5208/events","html_url":"https://github.com/mlflow/mlflow/issues/5208","id":1090735322,"node_id":"I_kwDOCB5Jx85BA0za","number":5208,"title":"[FR] Validate request JSON with JSON schema or similar","user":{"login":"mrkaye97","id":44219491,"node_id":"MDQ6VXNlcjQ0MjE5NDkx","avatar_url":"https://avatars.githubusercontent.com/u/44219491?v=4","gravatar_id":"","url":"https://api.github.com/users/mrkaye97","html_url":"https://github.com/mrkaye97","followers_url":"https://api.github.com/users/mrkaye97/followers","following_url":"https://api.github.com/users/mrkaye97/following{/other_user}","gists_url":"https://api.github.com/users/mrkaye97/gists{/gist_id}","starred_url":"https://api.github.com/users/mrkaye97/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrkaye97/subscriptions","organizations_url":"https://api.github.com/users/mrkaye97/orgs","repos_url":"https://api.github.com/users/mrkaye97/repos","events_url":"https://api.github.com/users/mrkaye97/events{/privacy}","received_events_url":"https://api.github.com/users/mrkaye97/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2237250735,"node_id":"MDU6TGFiZWwyMjM3MjUwNzM1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/server-infra","name":"area/server-infra","color":"48eabc","default":false,"description":"MLflow Tracking server backend"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-12-29T20:29:31Z","updated_at":"2022-04-19T05:26:05Z","closed_at":"2022-04-19T05:26:05Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Thank you for submitting a feature request. **Before proceeding, please review MLflow's [Issue Policy for feature requests](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md#feature-requests) and the [MLflow Contributing Guide](https://github.com/mlflow/mlflow/blob/master/CONTRIBUTING.rst)**.\r\n\r\n**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nAPI calls should return `HTTP 400` when the parameters (e.g.) don't match expected data types instead of failing with a `500`. Creating a JSON schema -- using [jsonschema](https://github.com/Julian/jsonschema), for example -- for the MLFlow REST API to check requests against would fix these issues. This would result in far friendlier UX, easier debugging, more predictable responses, and a generally more RESTful API.\r\n\r\n## Motivation\r\n\r\nI keep getting `500` errors for things like supplying a parameter to an API call that's the wrong data type. See [this issue](https://github.com/mlflow/mlflow/issues/5199) for an example. This has also happened with calls to logging parameters (both individually and in batches) and all kinds of other functions.\r\n\r\nRight now, this means that an end user of a running MLFlow service get an error message like this back when something goes wrong:\r\n\r\n```\r\nResponse [https://<<host>>/api/2.0/mlflow/runs/log-batch]\r\n  Date: 2021-12-29 20:15\r\n  Status: 500\r\n  Content-Type: text/html; charset=utf-8\r\n  Size: 290 B\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n```\r\n\r\nThis error was caused by providing a `timestamp` value to `log-batch` that was a character string as opposed to a numeric timestamp.\r\n\r\nObviously, this error is unhelpful. There's no indication of what went wrong or how to fix the issue. More importantly, the `500` is a hint that the client actually _did not do anything wrong_, and that there was a legitimate issue on the server side. For bad parameters (e.g.), this is obviously not the case, and the client should be seeing an error message with information about the incorrect parameter type and what type was expected, not a cryptic `500` with `Unable to complete your request`.\r\n\r\nThe value prop here should be relatively obvious, so I won't write too much beyond just saying that validating requests against a JSON schema would let users of the MLFlow REST API (in other words, every MLFlow user) more easily and reliably use MLFlow, develop wrappers for the MLFlow API, debug their code when things go wrong, etc. etc. etc.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [x] `area/server-infra`: MLflow Tracking server backend\r\n- [x] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nI haven't written any JSON schema for Python, but in R I know it's easy to just set up a function to validate requests and then use that function to validate the JSON body of any requests that come in before doing any actual work. If a request fails the JSON validation checks, you can easily return an `HTTP 400 -- JSON validation failed with << some error >>`.\r\n\r\nLet me know if I can help with this improvement! I think it'd be a major step forward for everyone using MLFlow and for the project in general.\r\n","closed_by":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5208/timeline","performed_via_github_app":null,"state_reason":"completed"}