{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7548","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/7548/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/7548/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/7548/events","html_url":"https://github.com/mlflow/mlflow/issues/7548","id":1500788382,"node_id":"I_kwDOCB5Jx85ZdDae","number":7548,"title":"[FR] Properly support content-type negotiation for artifacts","user":{"login":"ddl-ebrown","id":111539728,"node_id":"U_kgDOBqX2EA","avatar_url":"https://avatars.githubusercontent.com/u/111539728?v=4","gravatar_id":"","url":"https://api.github.com/users/ddl-ebrown","html_url":"https://github.com/ddl-ebrown","followers_url":"https://api.github.com/users/ddl-ebrown/followers","following_url":"https://api.github.com/users/ddl-ebrown/following{/other_user}","gists_url":"https://api.github.com/users/ddl-ebrown/gists{/gist_id}","starred_url":"https://api.github.com/users/ddl-ebrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddl-ebrown/subscriptions","organizations_url":"https://api.github.com/users/ddl-ebrown/orgs","repos_url":"https://api.github.com/users/ddl-ebrown/repos","events_url":"https://api.github.com/users/ddl-ebrown/events{/privacy}","received_events_url":"https://api.github.com/users/ddl-ebrown/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":955449436,"node_id":"MDU6TGFiZWw5NTU0NDk0MzY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":1893072438,"node_id":"MDU6TGFiZWwxODkzMDcyNDM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":"We would like help from the community to add this support"},{"id":2022845866,"node_id":"MDU6TGFiZWwyMDIyODQ1ODY2","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/artifacts","name":"area/artifacts","color":"48eabc","default":false,"description":"Artifact stores and artifact logging"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-12-16T20:01:05Z","updated_at":"2022-12-27T18:33:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\n\nNo. I cannot contribute this feature at this time.\n\n### Proposal Summary\n\nWhen mlflow returns artifacts, it should properly send the HTTP `Content-Type` header. As it stands, accessing the endpoints for artifact retrieval always return `text/html` and leave it up to the mlflow UI to peek at the file extension to determine how to preview the file. Ideally this should be instead handled by returning the files mime type.\r\n\r\nThere are a number of ways this could be handled from recording initial upload content-types when artifacts are uploaded (which may prove difficult depending on the backend artifact store), to mapping extensions to content-type return values.\n\n### Motivation\n\n> #### What is the use case for this feature?\r\n\r\nProper implementation of the HTTP spec / supporting clients other than browsers for artifact retrieval.\r\n\r\n> #### Why is this use case valuable to support for MLflow users in general?\r\n\r\nIt depends on how generally useful this might be -- it's more of a plumbing change useful to integrators.\r\n\r\n> #### Why is this use case valuable to support for your project(s) or organization?\r\n\r\nWhen building out tools that retrieve files from MLflow artifact storage, content-type negotiation is considered a more reliable way of identifying bytestreams than using file extensions.\r\n\r\n> #### Why is it currently difficult to achieve this use case?\r\n\r\nIt's tedious because the client must currently maintain an exhaustive list of file types, when the server should correctly return a files mime type. Furthermore, when files don't have extensions, they may not be identifiable at all to clients.\n\n### Details\n\n_No response_\n\n### What component(s) does this bug affect?\n\n- [X] `area/artifacts`: Artifact stores and artifact logging\n- [ ] `area/build`: Build and test infrastructure for MLflow\n- [ ] `area/docs`: MLflow documentation pages\n- [ ] `area/examples`: Example code\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\n- [ ] `area/recipes`: Recipes, Recipe APIs, Recipe configs, Recipe Templates\n- [ ] `area/projects`: MLproject format, project running backends\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\n- [ ] `area/server-infra`: MLflow Tracking server backend\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\n\n### What interface(s) does this bug affect?\n\n- [X] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\n- [ ] `area/windows`: Windows support\n\n### What language(s) does this bug affect?\n\n- [ ] `language/r`: R APIs and clients\n- [ ] `language/java`: Java APIs and clients\n- [ ] `language/new`: Proposals for new client languages\n\n### What integration(s) does this bug affect?\n\n- [ ] `integrations/azure`: Azure and Azure ML integrations\n- [ ] `integrations/sagemaker`: SageMaker integrations\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/7548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/7548/timeline","performed_via_github_app":null,"state_reason":null}