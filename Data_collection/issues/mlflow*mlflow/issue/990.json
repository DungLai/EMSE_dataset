{"url":"https://api.github.com/repos/mlflow/mlflow/issues/990","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/990/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/990/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/990/events","html_url":"https://github.com/mlflow/mlflow/issues/990","id":420013602,"node_id":"MDU6SXNzdWU0MjAwMTM2MDI=","number":990,"title":"Confirmation of tag / metric / param logic","user":{"login":"acroz","id":1584318,"node_id":"MDQ6VXNlcjE1ODQzMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1584318?v=4","gravatar_id":"","url":"https://api.github.com/users/acroz","html_url":"https://github.com/acroz","followers_url":"https://api.github.com/users/acroz/followers","following_url":"https://api.github.com/users/acroz/following{/other_user}","gists_url":"https://api.github.com/users/acroz/gists{/gist_id}","starred_url":"https://api.github.com/users/acroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acroz/subscriptions","organizations_url":"https://api.github.com/users/acroz/orgs","repos_url":"https://api.github.com/users/acroz/repos","events_url":"https://api.github.com/users/acroz/events{/privacy}","received_events_url":"https://api.github.com/users/acroz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-03-12T14:21:20Z","updated_at":"2019-03-27T16:57:16Z","closed_at":"2019-03-27T16:57:15Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We (@facultyai) are implementing our own tracking store backend and want to make sure we get the logic right when updating tags, metrics and params on runs.\r\n\r\nI've been discussing this already with @smurching in #955, but since that PR's closed and this discussion is only tangentially related to it, I've opened this issue.\r\n\r\nCan someone (@smurching or otherwise) confirm that the following logic is correct so we get the right implementation of our backend:\r\n\r\n1. When updating a tag, any existing value is overwritten.\r\n2. When updating a param:\r\n  * If the 'new' value is the same as the 'old' one, do not complain.\r\n  * If the 'new' value is different from the 'old' one, this represents an error case.\r\n3. When updating a metric, always append an additional row (i.e. there is no uniqueness constraint on `(key, timestamp)`) (see also relevant discussion in #955).\r\n4. When determining the 'latest' metrics for a run, if there are duplicate timestamps within a metric, the one with the largest value is considered the 'latest' (as described in #972).\r\n\r\nI also have a couple of follow up questions:\r\n\r\n* Is the logic of doing a batch update expect to be the same as applying its contents sequentially? e.g. does a payload with the same tag being updated multiple times result the right-most tag getting set?\r\n* Does (4) imply that we should sort by `(timestamp, value)` when returning the history for a metric?","closed_by":{"login":"acroz","id":1584318,"node_id":"MDQ6VXNlcjE1ODQzMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1584318?v=4","gravatar_id":"","url":"https://api.github.com/users/acroz","html_url":"https://github.com/acroz","followers_url":"https://api.github.com/users/acroz/followers","following_url":"https://api.github.com/users/acroz/following{/other_user}","gists_url":"https://api.github.com/users/acroz/gists{/gist_id}","starred_url":"https://api.github.com/users/acroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acroz/subscriptions","organizations_url":"https://api.github.com/users/acroz/orgs","repos_url":"https://api.github.com/users/acroz/repos","events_url":"https://api.github.com/users/acroz/events{/privacy}","received_events_url":"https://api.github.com/users/acroz/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/990/timeline","performed_via_github_app":null,"state_reason":"completed"}