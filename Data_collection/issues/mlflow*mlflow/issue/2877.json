{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2877","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/2877/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/2877/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/2877/events","html_url":"https://github.com/mlflow/mlflow/issues/2877","id":623604297,"node_id":"MDU6SXNzdWU2MjM2MDQyOTc=","number":2877,"title":"[FR] - option to specify conda / docker environments per entry point","user":{"login":"jkthompson","id":5998549,"node_id":"MDQ6VXNlcjU5OTg1NDk=","avatar_url":"https://avatars.githubusercontent.com/u/5998549?v=4","gravatar_id":"","url":"https://api.github.com/users/jkthompson","html_url":"https://github.com/jkthompson","followers_url":"https://api.github.com/users/jkthompson/followers","following_url":"https://api.github.com/users/jkthompson/following{/other_user}","gists_url":"https://api.github.com/users/jkthompson/gists{/gist_id}","starred_url":"https://api.github.com/users/jkthompson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkthompson/subscriptions","organizations_url":"https://api.github.com/users/jkthompson/orgs","repos_url":"https://api.github.com/users/jkthompson/repos","events_url":"https://api.github.com/users/jkthompson/events{/privacy}","received_events_url":"https://api.github.com/users/jkthompson/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":978584226,"node_id":"MDU6TGFiZWw5Nzg1ODQyMjY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/docs","name":"area/docs","color":"48eabc","default":false,"description":"Documentation issues"},{"id":1893072438,"node_id":"MDU6TGFiZWwxODkzMDcyNDM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":"We would like help from the community to add this support"},{"id":2022848510,"node_id":"MDU6TGFiZWwyMDIyODQ4NTEw","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/projects","name":"area/projects","color":"48eabc","default":false,"description":"MLproject format, project running backends"},{"id":2022863969,"node_id":"MDU6TGFiZWwyMDIyODYzOTY5","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/important-soon","name":"priority/important-soon","color":"534cb5","default":false,"description":"The issue is worked on by the community currently or will be very soon, ideally in time for the"},{"id":2022886708,"node_id":"MDU6TGFiZWwyMDIyODg2NzA4","url":"https://api.github.com/repos/mlflow/mlflow/labels/needs%20design","name":"needs design","color":"006b75","default":false,"description":"This feature requires design and design review before starting coding"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-05-23T07:51:39Z","updated_at":"2022-04-23T18:23:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Please fill in this feature request template to ensure a timely and thorough response.**\r\n\r\n## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [x] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\nI would like the option to specify a different environment for some or all of the entry points in my mlflow project.  Currently I can only specify a single environment per mlflow project.  \r\n\r\n## Motivation\r\n- What is the use case for this feature?  \r\nI have a multi-step workflow with at least two steps: 1) data prep and 2) model training.  Both steps are fairly complex, developed by different teams, and have different overlapping dependencies.  I would like the teams to be able to manage their conda environments independently without having to reach consensus on specific versions of overlapping dependencies.\r\n- Why is this use case valuable to support for MLflow users in general?\r\nI imagine this is a common pain point in developing multi-step workflows when there are multiple developers working on different parts of the workflow.\r\n- Why is this use case valuable to support for your project(s) or organization?\r\nIt would make our ml pipeline code more modular and easier to maintain.\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nBest I can tell, the only way to achieve multiple environments per entry point is to set up multiple mlflow projects for each each step.  However this makes the code more complex to understand what is going on.  I would like to specify all of my entry points in a single MLProject file.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [x] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for\r\nModel Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [x] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n\r\n## Details\r\nAllow user to specify conda_env or docker_env within an entry point in the MLProject file. Add env member variables ('docker_env', 'conda_env_path') to EntryPoint class.  In project._run() check for entry_point env variables.  If env variables are set, override project env before launching run.\r\n\r\n```yaml\r\nname: My Project\r\n\r\nconda_env: my_env.yaml\r\n\r\nentry_points:\r\n  main:\r\n    parameters:\r\n      data_file: path\r\n      regularization: {type: float, default: 0.1}\r\n    command: \"python train.py -r {regularization} {data_file}\"\r\n  validate:\r\n    conda_env: my_validate_env.yaml\r\n    parameters:\r\n      data_file: path\r\n    command: \"python validate.py {data_file}\"\r\n```\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/2877/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/2877/timeline","performed_via_github_app":null,"state_reason":null}