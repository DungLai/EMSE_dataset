{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5251","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5251/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5251/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5251/events","html_url":"https://github.com/mlflow/mlflow/issues/5251","id":1099187621,"node_id":"I_kwDOCB5Jx85BhEWl","number":5251,"title":"[BUG] - Error on load_model registered from MlFlow CLI","user":{"login":"liviaciabati","id":1108284,"node_id":"MDQ6VXNlcjExMDgyODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1108284?v=4","gravatar_id":"","url":"https://api.github.com/users/liviaciabati","html_url":"https://github.com/liviaciabati","followers_url":"https://api.github.com/users/liviaciabati/followers","following_url":"https://api.github.com/users/liviaciabati/following{/other_user}","gists_url":"https://api.github.com/users/liviaciabati/gists{/gist_id}","starred_url":"https://api.github.com/users/liviaciabati/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liviaciabati/subscriptions","organizations_url":"https://api.github.com/users/liviaciabati/orgs","repos_url":"https://api.github.com/users/liviaciabati/repos","events_url":"https://api.github.com/users/liviaciabati/events{/privacy}","received_events_url":"https://api.github.com/users/liviaciabati/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022847714,"node_id":"MDU6TGFiZWwyMDIyODQ3NzE0","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/model-registry","name":"area/model-registry","color":"48eabc","default":false,"description":"Model registry, model registry APIs, and the fluent client calls for model registry"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-11T13:56:02Z","updated_at":"2022-01-11T18:00:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Willingness to contribute\r\nThe MLflow Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the MLflow code base?\r\n\r\n- [ ] Yes. I can contribute a fix for this bug independently.\r\n- [X] Yes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute a bug fix at this time.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: docker image python:3.8-slim-buster\r\n- **MLflow installed from (source or binary)**: binary\r\n- **MLflow version (run ``mlflow --version``)**: 1.22 for the client and server\r\n- **Python version**: 3.8\r\n- **npm version, if running the dev UI**: \r\n- **Exact command to reproduce**: \r\n```\r\nmodel = load_model(\"models:/{}/Production\".format(name_registry_model))\r\n```\r\n\r\n### Describe the problem\r\nI am having a weird problem trying to load a model from the uri \"models:/{}/Production\" after register the trained model **using the python mlflow cli register_model**.\r\nThe weird part is that when I register the model using the mlflow visual interface, I don't have any problem with it.\r\n\r\n### Code to reproduce issue\r\n```\r\nimport mlflow\r\nfrom kedro_mlflow.config import get_mlflow_config\r\n\r\nmlflow_config = get_mlflow_config()\r\nid_experiment = 0 ##any id you have\r\nname_registry_model = '' ##any registered model you have\r\n\r\n\r\nmlflow_cli = mlflow.tracking.MlflowClient(tracking_uri=mlflow_config.mlflow_tracking_uri)\r\nlast_run = mlflow_cli.search_runs(\r\n                id_experiment , \r\n                run_view_type=mlflow.entities.ViewType.ACTIVE_ONLY, \r\n                order_by=['attribute.start_time DESC'], \r\n                max_results=1)[0]\r\n\r\nmlflow_cli = mlflow.tracking.MlflowClient(tracking_uri=mlflow_config.mlflow_tracking_uri)\r\nmodel_updated_uri = \"runs:/{}/{}\".format(last_run.info.run_id, name_experiment)\r\n    new_registry = mlflow.register_model(\r\n    model_updated_uri,\r\n    name_registry_model, \r\n    await_registration_for = 0\r\n)\r\nmlflow_cli.transition_model_version_stage(name_registry_model, new_registry.version, 'production', archive_existing_versions=True)\r\n\r\nmodel = load_model(\"models:/{}/Production\".format(name_registry_model))\r\n```\r\n\r\n### Other info / logs / error message\r\n```\r\nClientError                               Traceback (most recent call last)\r\n~\\AppData\\Local\\Temp/ipykernel_20040/3865171810.py in <module>\r\n----> 1 modelo = load_model(\"models:/{}/Production\")\r\n      2 modelo\r\n\r\n~\\miniconda3\\envs\\env-dona-herminia\\lib\\site-packages\\mlflow\\pyfunc\\_init_.py in load_model(model_uri, suppress_warnings)\r\n    649                               messages will be emitted.\r\n    650     :param dst_path: The local filesystem path to which to download the model artifact.\r\n--> 651                      This directory must already exist. If unspecified, a local output\r\n    652                      path will be created.\r\n    653     \"\"\"\r\n\r\n~\\miniconda3\\envs\\env-dona-herminia\\lib\\site-packages\\mlflow\\tracking\\artifact_utils.py in _download_artifact_from_uri(artifact_uri, output_path)\r\n     82         prefix = parsed_uri.scheme + \":\"\r\n     83         parsed_uri = parsed_uri._replace(scheme=\"\")\r\n---> 84 \r\n     85     # For models:/ URIs, it doesn't make sense to initialize a ModelsArtifactRepository with only\r\n     86     # the model name portion of the URI, then call download_artifacts with the version info.\r\n\r\n~\\miniconda3\\envs\\env-dona-herminia\\lib\\site-packages\\mlflow\\store\\artifact\\models_artifact_repo.py in download_artifacts(self, artifact_path, dst_path)\r\n    108         :return: Absolute path of the local filesystem location containing the desired artifacts.\r\n    109         \"\"\"\r\n--> 110         return self.repo.download_artifacts(artifact_path, dst_path)\r\n    111 \r\n    112     def _download_file(self, remote_file_path, local_path):\r\n\r\n~\\miniconda3\\envs\\env-dona-herminia\\lib\\site-packages\\mlflow\\store\\artifact\\artifact_repo.py in download_artifacts(self, artifact_path, dst_path)\r\n    182             )\r\n    183         else:\r\n--> 184             return download_artifact(src_artifact_path=artifact_path, dst_local_dir_path=dst_path)\r\n    185 \r\n    186     @abstractmethod\r\n\r\n~\\miniconda3\\envs\\env-dona-herminia\\lib\\site-packages\\mlflow\\store\\artifact\\artifact_repo.py in download_artifact(src_artifact_path, dst_local_dir_path)\r\n    128             )\r\n    129             self._download_file(\r\n--> 130                 remote_file_path=src_artifact_path, local_path=local_destination_file_path\r\n    131             )\r\n    132             return local_destination_file_path\r\n\r\n~\\miniconda3\\envs\\env-dona-herminia\\lib\\site-packages\\mlflow\\store\\artifact\\s3_artifact_repo.py in _download_file(self, remote_file_path, local_path)\r\n    156         s3_full_path = posixpath.join(s3_root_path, remote_file_path)\r\n    157         s3_client = self._get_s3_client()\r\n--> 158         s3_client.download_file(bucket, s3_full_path, local_path)\r\n    159 \r\n    160     def delete_artifacts(self, artifact_path=None):\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\boto3\\s3\\inject.py in download_file(self, Bucket, Key, Filename, ExtraArgs, Callback, Config)\r\n    170         return transfer.download_file(\r\n    171             bucket=Bucket, key=Key, filename=Filename,\r\n--> 172             extra_args=ExtraArgs, callback=Callback)\r\n    173 \r\n    174 \r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\boto3\\s3\\transfer.py in download_file(self, bucket, key, filename, extra_args, callback)\r\n    305             bucket, key, filename, extra_args, subscribers)\r\n    306         try:\r\n--> 307             future.result()\r\n    308         # This is for backwards compatibility where when retries are\r\n    309         # exceeded we need to throw the same error from boto3 instead of\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\s3transfer\\futures.py in result(self)\r\n    104             # however if a KeyboardInterrupt is raised we want want to exit\r\n    105             # out of this and propogate the exception.\r\n--> 106             return self._coordinator.result()\r\n    107         except KeyboardInterrupt as e:\r\n    108             self.cancel()\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\s3transfer\\futures.py in result(self)\r\n    263         # final result.\r\n    264         if self._exception:\r\n--> 265             raise self._exception\r\n    266         return self._result\r\n    267 \r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\s3transfer\\tasks.py in _main(self, transfer_future, **kwargs)\r\n    253             # Call the submit method to start submitting tasks to execute the\r\n    254             # transfer.\r\n--> 255             self._submit(transfer_future=transfer_future, **kwargs)\r\n    256         except BaseException as e:\r\n    257             # If there was an exception raised during the submission of task\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\s3transfer\\download.py in _submit(self, client, config, osutil, request_executor, io_executor, transfer_future, bandwidth_limiter)\r\n    341                 Bucket=transfer_future.meta.call_args.bucket,\r\n    342                 Key=transfer_future.meta.call_args.key,\r\n--> 343                 **transfer_future.meta.call_args.extra_args\r\n    344             )\r\n    345             transfer_future.meta.provide_transfer_size(\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\botocore\\client.py in _api_call(self, *args, **kwargs)\r\n    384                     \"%s() only accepts keyword arguments.\" % py_operation_name)\r\n    385             # The \"self\" in this scope is referring to the BaseClient.\r\n--> 386             return self._make_api_call(operation_name, kwargs)\r\n    387 \r\n    388         _api_call._name_ = str(py_operation_name)\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\botocore\\client.py in _make_api_call(self, operation_name, api_params)\r\n    703             error_code = parsed_response.get(\"Error\", {}).get(\"Code\")\r\n    704             error_class = self.exceptions.from_code(error_code)\r\n--> 705             raise error_class(parsed_response, operation_name)\r\n    706         else:\r\n    707             return parsed_response\r\n\r\nClientError: An error occurred (404) when calling the HeadObject operation: Not Found\r\n```\r\n\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [X] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\n\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5251/timeline","performed_via_github_app":null,"state_reason":null}