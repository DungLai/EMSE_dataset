{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3230","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/3230/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/3230/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/3230/events","html_url":"https://github.com/mlflow/mlflow/issues/3230","id":673229449,"node_id":"MDU6SXNzdWU2NzMyMjk0NDk=","number":3230,"title":"[FR] Enhance Pytorch autologging support to extend to other higher-level frameworks (e.g. Pytorch lightning, etc)","user":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"},{"id":2317074151,"node_id":"MDU6TGFiZWwyMzE3MDc0MTUx","url":"https://api.github.com/repos/mlflow/mlflow/labels/integrations/pytorch","name":"integrations/pytorch","color":"ffbce5","default":false,"description":"MLflow x Pytorch integrations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-05T03:42:55Z","updated_at":"2020-09-01T18:52:08Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [x] No. I cannot contribute this feature at this time --> but happy to help review!\r\n\r\n## Proposal Summary\r\n\r\nIn #2087, we concluded that it's currently difficult to implement MLflow autologging for Pytorch directly due to the flexible structure of Pytorch training code (i.e. there's no Callback API for us to plug into, and users define training code via custom Python functions), opting instead for adding autologging for fastai, a higher-level framework built on top of Pytorch. In a similar vein, we should consider supporting autologging for other popular frameworks that build atop Pytorch, e.g. Pytorch Lightning.\r\n\r\n## Motivation\r\n- What is the use case for this feature? Users of Pytorch Lightning, a popular higher-level library that simply prescribes a structure for Pytorch code\r\n- Why is this use case valuable to support for MLflow users in general? Users of Pytorch Lightning will find it easier to onboard to using MLflow\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\nIt's currently possible to manually log metrics, params, and models trained using Pytorch Lightning (& other higher-level frameworks based on Pytorch) to MLflow, but autologging support will make it easier & less intrusive to introduce MLflow tracking to training code.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nWe should consider putting this new API under a module namespace like `mlflow.pytorch.autolog` or `mlflow.pl.autolog` etc.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/3230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/3230/timeline","performed_via_github_app":null,"state_reason":null}