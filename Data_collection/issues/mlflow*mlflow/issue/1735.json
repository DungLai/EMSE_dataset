{"url":"https://api.github.com/repos/mlflow/mlflow/issues/1735","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/1735/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/1735/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/1735/events","html_url":"https://github.com/mlflow/mlflow/issues/1735","id":480437671,"node_id":"MDU6SXNzdWU0ODA0Mzc2NzE=","number":1735,"title":"[FR] Method for identifying best-performing model","user":{"login":"jwpestrak","id":3246445,"node_id":"MDQ6VXNlcjMyNDY0NDU=","avatar_url":"https://avatars.githubusercontent.com/u/3246445?v=4","gravatar_id":"","url":"https://api.github.com/users/jwpestrak","html_url":"https://github.com/jwpestrak","followers_url":"https://api.github.com/users/jwpestrak/followers","following_url":"https://api.github.com/users/jwpestrak/following{/other_user}","gists_url":"https://api.github.com/users/jwpestrak/gists{/gist_id}","starred_url":"https://api.github.com/users/jwpestrak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwpestrak/subscriptions","organizations_url":"https://api.github.com/users/jwpestrak/orgs","repos_url":"https://api.github.com/users/jwpestrak/repos","events_url":"https://api.github.com/users/jwpestrak/events{/privacy}","received_events_url":"https://api.github.com/users/jwpestrak/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022849295,"node_id":"MDU6TGFiZWwyMDIyODQ5Mjk1","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/tracking","name":"area/tracking","color":"48eabc","default":false,"description":"Tracking service, tracking client APIs, autologging"},{"id":2022866842,"node_id":"MDU6TGFiZWwyMDIyODY2ODQy","url":"https://api.github.com/repos/mlflow/mlflow/labels/priority/awaiting-more-evidence","name":"priority/awaiting-more-evidence","color":"534cb5","default":false,"description":"Lowest priority. Possibly useful, but not yet enough support to actually get it done."}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-08-14T01:18:44Z","updated_at":"2022-06-02T01:54:25Z","closed_at":"2022-06-02T01:54:25Z","author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting an issue. Please refer to our [issue policy](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md)\r\nfor information on what types of issues we address.\r\n  \r\nPlease do not delete this template unless you are sure your issue is outside its scope.\r\n\r\n-------\r\n## Guidelines\r\n\r\nFeature requests typically go through the following lifecycle:\r\n\r\n1. Submit feature request with high-level description on GitHub issues (this is what you're doing now)\r\n2. Discuss feature request with a committer, who may ask for a more detailed design\r\n3. After discussion & agreement on feature request, start implementation\r\n\r\n\r\n## Describe the proposal\r\nI propose the addition of functionality to identify the best-performing (by user-specified metric).\r\nFor example, consider the code used for model training at `examples/sklearn_elasticnet_wine/train.py`; it would be helpful to have use a function to identify the best-performing model - `my_best_model = mlflow.fetch_best_model(metric=rmse, minimum=True)` - so that I can then pass the model to `log_model()` for future use. \r\n\r\n### Motivation\r\nThe motivation is that implementation of a simple search based on metric would promote automation of identification of the best-performing model (instead of having the user manually viewing the tracking UI and specifying the model to pass to `log_model()`).\r\n\r\n### Proposed Changes\r\nI propose adding a (admittedly, simplistic) best model identification API to correspond with all `log_model` APIs.","closed_by":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/1735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/1735/timeline","performed_via_github_app":null,"state_reason":"completed"}