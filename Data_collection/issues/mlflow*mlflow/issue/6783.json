{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6783","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/6783/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/6783/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/6783/events","html_url":"https://github.com/mlflow/mlflow/issues/6783","id":1371879589,"node_id":"I_kwDOCB5Jx85RxTil","number":6783,"title":"[FR] Increase model signature flexibility to allow for occasionally missing fields while retaining datatype enforcement","user":{"login":"nfarley-soaren","id":92752316,"node_id":"U_kgDOBYdJvA","avatar_url":"https://avatars.githubusercontent.com/u/92752316?v=4","gravatar_id":"","url":"https://api.github.com/users/nfarley-soaren","html_url":"https://github.com/nfarley-soaren","followers_url":"https://api.github.com/users/nfarley-soaren/followers","following_url":"https://api.github.com/users/nfarley-soaren/following{/other_user}","gists_url":"https://api.github.com/users/nfarley-soaren/gists{/gist_id}","starred_url":"https://api.github.com/users/nfarley-soaren/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfarley-soaren/subscriptions","organizations_url":"https://api.github.com/users/nfarley-soaren/orgs","repos_url":"https://api.github.com/users/nfarley-soaren/repos","events_url":"https://api.github.com/users/nfarley-soaren/events{/privacy}","received_events_url":"https://api.github.com/users/nfarley-soaren/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2022848902,"node_id":"MDU6TGFiZWwyMDIyODQ4OTAy","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/scoring","name":"area/scoring","color":"48eabc","default":false,"description":"MLflow Model server, model deployment tools, Spark UDFs"},{"id":2022886708,"node_id":"MDU6TGFiZWwyMDIyODg2NzA4","url":"https://api.github.com/repos/mlflow/mlflow/labels/needs%20design","name":"needs design","color":"006b75","default":false,"description":"This feature requires design and design review before starting coding"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-09-13T18:56:49Z","updated_at":"2022-09-22T16:50:29Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Willingness to contribute\n\nNo. I cannot contribute this feature at this time.\n\n### Proposal Summary\n\nWhen creating a model signature, it would helpful to have the option to allow certain fields to be missing in incoming data while retaining the datatype check functionality when they are present.  Currently, all fields must be present in the model signature and all of those features must be passed to the model or an error will be thrown.  Additionally, extra fields, while they will not cause an error, are not passed through to the model so simply excluding these fields from the signature itself so they can optionally be used in scoring is not possible.  \n\n### Motivation\n\n> #### What is the use case for this feature?\r\nThis would be helpful in cases when incoming scoring data might not always be complete but one wishes to enforce data typing on specified fields when they are present so as not to lose information.  \r\n\r\n> #### Why is this use case valuable to support for MLflow users in general?\r\nIt provides greater flexibility for using the model signature.  To work around this issue currently requires one to exclude the signature completely.\r\n\r\n> #### Why is this use case valuable to support for your project(s) or organization?\r\nOur raw scoring data is passed as a json that occasionally has some missing fields.  Data formatting can also be variable so it is important for us to be able to retain the datatype enforcement functionality.\r\n\r\n> #### Why is it currently difficult to achieve this use case?\r\nThe only way to do this requires that the model signature is excluded which means losing the datatyping functionality which results in potential loss of information.\n\n### Details\n\n_No response_\n\n### What component(s) does this bug affect?\n\n- [ ] `area/artifacts`: Artifact stores and artifact logging\n- [ ] `area/build`: Build and test infrastructure for MLflow\n- [ ] `area/docs`: MLflow documentation pages\n- [ ] `area/examples`: Example code\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\n- [ ] `area/pipelines`: Pipelines, Pipeline APIs, Pipeline configs, Pipeline Templates\n- [ ] `area/projects`: MLproject format, project running backends\n- [X] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\n- [ ] `area/server-infra`: MLflow Tracking server backend\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\n\n### What interface(s) does this bug affect?\n\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\n- [ ] `area/windows`: Windows support\n\n### What language(s) does this bug affect?\n\n- [ ] `language/r`: R APIs and clients\n- [ ] `language/java`: Java APIs and clients\n- [ ] `language/new`: Proposals for new client languages\n\n### What integration(s) does this bug affect?\n\n- [ ] `integrations/azure`: Azure and Azure ML integrations\n- [ ] `integrations/sagemaker`: SageMaker integrations\n- [ ] `integrations/databricks`: Databricks integrations","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/6783/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/6783/timeline","performed_via_github_app":null,"state_reason":null}