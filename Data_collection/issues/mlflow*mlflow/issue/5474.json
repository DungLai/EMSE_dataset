{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5474","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5474/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5474/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5474/events","html_url":"https://github.com/mlflow/mlflow/issues/5474","id":1164029387,"node_id":"I_kwDOCB5Jx85FYa3L","number":5474,"title":"[BUG] A problem with type checking for string objects (MLflow-deployed model in SageMaker)","user":{"login":"AlxndrMlk","id":28199898,"node_id":"MDQ6VXNlcjI4MTk5ODk4","avatar_url":"https://avatars.githubusercontent.com/u/28199898?v=4","gravatar_id":"","url":"https://api.github.com/users/AlxndrMlk","html_url":"https://github.com/AlxndrMlk","followers_url":"https://api.github.com/users/AlxndrMlk/followers","following_url":"https://api.github.com/users/AlxndrMlk/following{/other_user}","gists_url":"https://api.github.com/users/AlxndrMlk/gists{/gist_id}","starred_url":"https://api.github.com/users/AlxndrMlk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlxndrMlk/subscriptions","organizations_url":"https://api.github.com/users/AlxndrMlk/orgs","repos_url":"https://api.github.com/users/AlxndrMlk/repos","events_url":"https://api.github.com/users/AlxndrMlk/events{/privacy}","received_events_url":"https://api.github.com/users/AlxndrMlk/received_events","type":"User","site_admin":false},"labels":[{"id":955449428,"node_id":"MDU6TGFiZWw5NTU0NDk0Mjg=","url":"https://api.github.com/repos/mlflow/mlflow/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2022860064,"node_id":"MDU6TGFiZWwyMDIyODYwMDY0","url":"https://api.github.com/repos/mlflow/mlflow/labels/integrations/sagemaker","name":"integrations/sagemaker","color":"ffbce5","default":false,"description":"Sagemaker integrations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2022-03-09T14:42:51Z","updated_at":"2022-04-17T10:18:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for submitting an issue. Please refer to our [issue policy](https://www.github.com/mlflow/mlflow/blob/master/ISSUE_POLICY.md) for additional information about bug reports. For help with debugging your code, please refer to [Stack Overflow](https://stackoverflow.com/questions/tagged/mlflow).\r\n\r\n**Please fill in this bug report template to ensure a timely and thorough response.**\r\n\r\n### Willingness to contribute\r\nThe MLflow Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the MLflow code base?\r\n\r\n- [ ] Yes. I can contribute a fix for this bug independently.\r\n- [x] Yes. I would be willing to contribute a fix for this bug with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute a bug fix at this time.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in MLflow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 'Linux', '4.14.252-131.483.amzn1.x86_64'\r\n- **MLflow installed from (source or binary)**: `pip`\r\n- **MLflow version (run ``mlflow --version``)**: `mlflow==1.22.0`\r\n- **Python version**: `python=3.6.10`\r\n- **npm version, if running the dev UI**: -\r\n- **Exact command to reproduce**: -\r\n\r\n\r\n\r\n### Describe the problem\r\n\r\nI deployed a Huggingface Transformer model in SageMaker using MLflow's `sagemaker.deploy()`.\r\n\r\nThe model had been tested after training (using the same test example that was used in the code that led to the described bug).\r\n\r\nWhen logging the model I used `infer_signature(np.array(test_example), loaded_model.predict(test_example))` to infer input and output signatures.\r\n\r\nModel is deployed successfully. When trying to query the model I get `ModelError` (full traceback below).\r\n\r\nTo query the model, I am using precisely the same test_example that I used for `infer_signature()`:\r\n\r\n`test_example = [['This is the subject', 'This is the body']]`\r\n\r\nThe only difference is that when querying the deployed model, I am not wrapping the test example in `np.array()` as that is not `json`-serializeable.\r\n\r\nTo query the model I tried two different approaches:\r\n\r\n```python\r\nimport json\r\nimport boto3\r\nimport pandas as pd\r\n\r\nSAGEMAKER_REGION = 'us-west-2'\r\nMODEL_NAME = '...'\r\n\r\nclient = boto3.client(\"sagemaker-runtime\", region_name=SAGEMAKER_REGION)\r\n\r\ntest_example = [['This is the subject', 'This is the body']]\r\n\r\n# Approach 1\r\nclient.invoke_endpoint(\r\n                EndpointName=MODEL_NAME,\r\n                Body=json.dumps(test_example),\r\n                ContentType=\"application/json\",\r\n            )\r\n\r\n# Approach 2\r\nclient.invoke_endpoint(\r\n                EndpointName=MODEL_NAME,\r\n                Body=pd.DataFrame(test_example).to_json(orient=\"split\"),\r\n                ContentType=\"application/json; format=pandas-split\",\r\n            )\r\n```\r\n            \r\nbut they result in the same error.\r\n\r\nTo check if the problem is not in the model itself or in other components, I built a simple workaround. \r\n\r\nI encoded strings into numbers (using `ord()`) and then decoded them back to strings (using `chr()`) inside the model wrapper. This solved the issue. \r\n\r\nSummarizing, the same code worked for integer data, but not for string data.\r\n\r\n### Code to reproduce issue\r\n---\r\n\r\n### Other info / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nModelError                                Traceback (most recent call last)\r\n<ipython-input-89-d09862a5f494> in <module>\r\n      2                 EndpointName=MODEL_NAME,\r\n      3                 Body=test_example,\r\n----> 4                 ContentType=\"application/json; format=pandas-split\",\r\n      5             )\r\n\r\n~/anaconda3/envs/amazonei_tensorflow_p36/lib/python3.6/site-packages/botocore/client.py in _api_call(self, *args, **kwargs)\r\n    393                     \"%s() only accepts keyword arguments.\" % py_operation_name)\r\n    394             # The \"self\" in this scope is referring to the BaseClient.\r\n--> 395             return self._make_api_call(operation_name, kwargs)\r\n    396 \r\n    397         _api_call.__name__ = str(py_operation_name)\r\n\r\n~/anaconda3/envs/amazonei_tensorflow_p36/lib/python3.6/site-packages/botocore/client.py in _make_api_call(self, operation_name, api_params)\r\n    723             error_code = parsed_response.get(\"Error\", {}).get(\"Code\")\r\n    724             error_class = self.exceptions.from_code(error_code)\r\n--> 725             raise error_class(parsed_response, operation_name)\r\n    726         else:\r\n    727             return parsed_response\r\n\r\nModelError: An error occurred (ModelError) when calling the InvokeEndpoint operation: Received client error (400) from primary with message \"{\"error_code\": \"BAD_REQUEST\", \"message\": \"dtype of input object does not match expected dtype <U0\"}\". See https://us-west-2.console.aws.amazon.com/cloudwatch/home?region=us-west-2#logEventViewer:group=/aws/sagemaker/Endpoints/bec-sagemaker-model-test-app in account 543052680787 for more information.\r\n```\r\n\r\nEnvironment info:\r\n```\r\n{'channels': ['defaults', 'conda-forge', 'pytorch'],\r\n 'dependencies': ['python=3.6.10',\r\n  'pip==21.3.1',\r\n  'pytorch=1.10.2',\r\n  'cudatoolkit=10.2',\r\n  {'pip': ['mlflow==1.22.0',\r\n    'transformers==4.17.0',\r\n    'datasets==1.18.4',\r\n    'cloudpickle==1.3.0']}],\r\n 'name': 'bert_bec_test_env'}\r\n```\r\n\r\n### What component(s), interfaces, languages, and integrations does this bug affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterface \r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguage \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [x] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5474/timeline","performed_via_github_app":null,"state_reason":null}