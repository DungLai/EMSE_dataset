{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5706","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/5706/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/5706/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/5706/events","html_url":"https://github.com/mlflow/mlflow/issues/5706","id":1206200419,"node_id":"I_kwDOCB5Jx85H5Shj","number":5706,"title":"[FR] Support to custom tags at AWS resources on Sagemaker deploy","user":{"login":"rafa-am","id":19506374,"node_id":"MDQ6VXNlcjE5NTA2Mzc0","avatar_url":"https://avatars.githubusercontent.com/u/19506374?v=4","gravatar_id":"","url":"https://api.github.com/users/rafa-am","html_url":"https://github.com/rafa-am","followers_url":"https://api.github.com/users/rafa-am/followers","following_url":"https://api.github.com/users/rafa-am/following{/other_user}","gists_url":"https://api.github.com/users/rafa-am/gists{/gist_id}","starred_url":"https://api.github.com/users/rafa-am/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafa-am/subscriptions","organizations_url":"https://api.github.com/users/rafa-am/orgs","repos_url":"https://api.github.com/users/rafa-am/repos","events_url":"https://api.github.com/users/rafa-am/events{/privacy}","received_events_url":"https://api.github.com/users/rafa-am/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":955449436,"node_id":"MDU6TGFiZWw5NTU0NDk0MzY=","url":"https://api.github.com/repos/mlflow/mlflow/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":1893072438,"node_id":"MDU6TGFiZWwxODkzMDcyNDM4","url":"https://api.github.com/repos/mlflow/mlflow/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":"We would like help from the community to add this support"},{"id":2022848902,"node_id":"MDU6TGFiZWwyMDIyODQ4OTAy","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/scoring","name":"area/scoring","color":"48eabc","default":false,"description":"MLflow Model server, model deployment tools, Spark UDFs"},{"id":2022860064,"node_id":"MDU6TGFiZWwyMDIyODYwMDY0","url":"https://api.github.com/repos/mlflow/mlflow/labels/integrations/sagemaker","name":"integrations/sagemaker","color":"ffbce5","default":false,"description":"Sagemaker integrations"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-04-16T19:37:40Z","updated_at":"2022-08-12T20:25:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [x] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [ ] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nAdd support to pass custom tags to AWS resources provisioned on endpoint deploy action (using `mlflow.sagemaker.deploy` interface).\r\n\r\n## Motivation\r\n- What is the use case for this feature?\r\n**To governance policy propose, it's essential to adopt a good set of tags on cloud resources. In particular cases, it's mandatory, and the actual `mlflow` interface doesn't enable to apply that tags at AWS provider.**\r\n\r\n- Why is this use case valuable to support for MLflow users in general?\r\n**I think using right and fully tags is fundamentally a good practice and should be incorporated in our recurrent deployments. Every so often we avoid because the process isn't easy.**\r\n\r\n- Why is this use case valuable to support for your project(s) or organization?\r\n**My organization is applying a governance policy which requires that every deployed resource at AWS should go up with mandatory tags. Otherwise, the policy blocks the deployment of the resource on the fly. Nowadays, we are deploying Sagemaker endpoints using `mlflow.sagemaker.deploy` interface (because it facilitates our lives) but applying custom tags after the procedure end.**\r\n\r\n- Why is it currently difficult to achieve this use case? (please be as specific as possible about why related MLflow features and components are insufficient)\r\n**To customize tags, I need to call the same boto3 APIs that `mlflow.sagemaker.deploy` calls just after the deployment process finishes. That APIs already bring native support to tag fields on interface arguments.**\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [ ] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [ ] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [x] `area/scoring`: MLflow Model server, model deployment tools, Spark UDFs\r\n- [ ] `area/server-infra`: MLflow Tracking server backend\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [ ] `area/uiux`: Front-end, user experience, plotting, JavaScript, JavaScript dev server\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [x] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n\r\n## Details\r\n\r\nThe current `mlflow.sagemaker.deploy(...)` interface ([link](https://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/__init__.py#L163)) doesn't offer a way to customize tags on AWS resources associated to Sagemaker endpoint deployment.\r\n\r\nFor example, the deployment process calls a lot of boto3 APIs and almost all their arguments accept tags parameter customization:\r\n\r\n[1] at [_upload_s3(...)](https://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/__init__.py#L1205):\r\n\r\nhttps://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/__init__.py#L1225\r\n\r\n[2] at [_create_sagemaker_model(...)](https://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/__init__.py#L1637):\r\n\r\nhttps://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/__init__.py#L1661-L1666\r\n\r\n(in case, specific and static tags `[{\"Key\": \"model_uri\", \"Value\": str(model_uri)}]` are passed to `sage_client.create_model`)\r\n\r\n[3] at [_create_sagemaker_endpoint(...)](https://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/__init__.py#L1398):\r\n\r\nhttps://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/__init__.py#L1448-L1452\r\n\r\n(in case, specific and static tags `[{\"Key\": \"app_name\", \"Value\": endpoint_name}]` are passed to `sage_client.create_endpoint_config`)\r\n\r\nand\r\n\r\nhttps://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/__init__.py#L1457-L1461\r\n\r\n(in case, empty tags `[]` are passed to `sage_client.create_endpoint`).\r\n\r\nThe idea is adding a **tag custom input parameter** to `mlflow.sagemaker.deploy(..., custom_tags=...)` signature. That tags could be joined to that currently in use and passed to boto3 API calls too.\r\n\r\nA possible strategy could define a dictionary structure to address specific tags to specific resources (or APIs). Otherwise, a unique set of tags could be applied to all ones.\r\n\r\n```json\r\n{\r\n  \"Tags\": {\r\n    \"model_object_tags\": [{...}],\r\n    \"endpoint_config_tags\": [{...}],\r\n    \"endpoint_tags\": [{...}],\r\n    ...\r\n  }\r\n}\r\n```\r\n```json\r\n{\r\n  \"Tags\": {[...]}\r\n}\r\n```\r\n\r\nOf course, the custom tags would be optional and a format checker required. Additional adjustments would be necessary to deploy CLI command ([link](https://github.com/mlflow/mlflow/blob/8bc6b36150f1dd11f5c550c4aba9a3003bc4cc85/mlflow/sagemaker/cli.py#L25)).\r\n\r\n---\r\nThe proposed feature could inspire an extensible approach to other interfaces of the module to which custom tags can be applied.\r\n\r\n---","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/5706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/5706/timeline","performed_via_github_app":null,"state_reason":null}