{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4578","repository_url":"https://api.github.com/repos/mlflow/mlflow","labels_url":"https://api.github.com/repos/mlflow/mlflow/issues/4578/labels{/name}","comments_url":"https://api.github.com/repos/mlflow/mlflow/issues/4578/comments","events_url":"https://api.github.com/repos/mlflow/mlflow/issues/4578/events","html_url":"https://github.com/mlflow/mlflow/issues/4578","id":947661831,"node_id":"MDU6SXNzdWU5NDc2NjE4MzE=","number":4578,"title":"[FR] Support for optional columns and sequential data types in MLflow Signature","user":{"login":"jan920","id":38770318,"node_id":"MDQ6VXNlcjM4NzcwMzE4","avatar_url":"https://avatars.githubusercontent.com/u/38770318?v=4","gravatar_id":"","url":"https://api.github.com/users/jan920","html_url":"https://github.com/jan920","followers_url":"https://api.github.com/users/jan920/followers","following_url":"https://api.github.com/users/jan920/following{/other_user}","gists_url":"https://api.github.com/users/jan920/gists{/gist_id}","starred_url":"https://api.github.com/users/jan920/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jan920/subscriptions","organizations_url":"https://api.github.com/users/jan920/orgs","repos_url":"https://api.github.com/users/jan920/repos","events_url":"https://api.github.com/users/jan920/events{/privacy}","received_events_url":"https://api.github.com/users/jan920/received_events","type":"User","site_admin":false},"labels":[{"id":955449434,"node_id":"MDU6TGFiZWw5NTU0NDk0MzQ=","url":"https://api.github.com/repos/mlflow/mlflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1470945519,"node_id":"MDU6TGFiZWwxNDcwOTQ1NTE5","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/uiux","name":"area/uiux","color":"ede978","default":false,"description":"Front-end, user experience, plotting, JavaScript, JavaScript dev server"},{"id":2022847714,"node_id":"MDU6TGFiZWwyMDIyODQ3NzE0","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/model-registry","name":"area/model-registry","color":"48eabc","default":false,"description":"Model registry, model registry APIs, and the fluent client calls for model registry"},{"id":2022848043,"node_id":"MDU6TGFiZWwyMDIyODQ4MDQz","url":"https://api.github.com/repos/mlflow/mlflow/labels/area/models","name":"area/models","color":"48eabc","default":false,"description":"MLmodel format, model serialization/deserialization, flavors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-19T13:35:27Z","updated_at":"2022-12-07T12:48:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Willingness to contribute\r\nThe MLflow Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature (either as an MLflow Plugin or an enhancement to the MLflow code base)?\r\n\r\n- [ ] Yes. I can contribute this feature independently.\r\n- [ ] Yes. I would be willing to contribute this feature with guidance from the MLflow community.\r\n- [x] No. I cannot contribute this feature at this time.\r\n\r\n## Proposal Summary\r\n\r\nIf I understand correctly, [MLflow Signature](https://www.mlflow.org/docs/latest/models.html#model-signature) does not support optional columns or columns containing sequential data (columns containing lists etc...). For example following dataframe has column `list_column` inferred as `string` instead of something like `List[string]`.\r\n\r\n```\r\nfrom mlflow.models.signature import infer_signature\r\ninfer_signature(pd.DataFrame([{'list_column': [1, 2, 3]}]), None)\r\n```\r\n\r\nMy proposal is to add support for those use cases / for at least one of them.\r\n\r\n## Motivation\r\n\r\nRight now we have use cases where model to make a prediction requires a dataframe with some specific columns but also can use some additional ones if they are present. For example `modelA` requires dataframe only with column 'b' but if `c` is present it'll also be used. The missing support for this is stopping us from using MLflow Signature. In addition to, this we're a bit worried about no support for sequential data types (`list` etc..) in MLflow signature. I believe those two features could make MLFlow Signature more flexible.\r\n\r\n### What component(s), interfaces, languages, and integrations does this feature affect?\r\nComponents \r\n- [ ] `area/artifacts`: Artifact stores and artifact logging\r\n- [ ] `area/build`: Build and test infrastructure for MLflow\r\n- [ ] `area/docs`: MLflow documentation pages\r\n- [ ] `area/examples`: Example code\r\n- [x] `area/model-registry`: Model Registry service, APIs, and the fluent client calls for Model Registry\r\n- [x] `area/models`: MLmodel format, model serialization/deserialization, flavors\r\n- [ ] `area/projects`: MLproject format, project running backends\r\n- [ ] `area/scoring`: Local serving, model deployment tools, spark UDFs\r\n- [ ] `area/server-infra`: MLflow server, JavaScript dev server\r\n- [ ] `area/tracking`: Tracking Service, tracking client APIs, autologging\r\n\r\nInterfaces\r\n- [x] `area/uiux`: Front-end, user experience, JavaScript, plotting\r\n- [ ] `area/docker`: Docker use across MLflow's components, such as MLflow Projects and MLflow Models\r\n- [ ] `area/sqlalchemy`: Use of SQLAlchemy in the Tracking Service or Model Registry\r\n- [ ] `area/windows`: Windows support\r\n\r\nLanguages \r\n- [ ] `language/r`: R APIs and clients\r\n- [ ] `language/java`: Java APIs and clients\r\n- [ ] `language/new`: Proposals for new client languages\r\n\r\nIntegrations\r\n- [ ] `integrations/azure`: Azure and Azure ML integrations\r\n- [ ] `integrations/sagemaker`: SageMaker integrations\r\n- [ ] `integrations/databricks`: Databricks integrations\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/4578/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/mlflow/mlflow/issues/4578/timeline","performed_via_github_app":null,"state_reason":null}