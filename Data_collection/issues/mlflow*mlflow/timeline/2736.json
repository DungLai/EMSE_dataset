[{"id":3252639664,"node_id":"MDEyOkxhYmVsZWRFdmVudDMyNTI2Mzk2NjQ=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/3252639664","actor":{"login":"praateekmahajan","id":7589415,"node_id":"MDQ6VXNlcjc1ODk0MTU=","avatar_url":"https://avatars.githubusercontent.com/u/7589415?v=4","gravatar_id":"","url":"https://api.github.com/users/praateekmahajan","html_url":"https://github.com/praateekmahajan","followers_url":"https://api.github.com/users/praateekmahajan/followers","following_url":"https://api.github.com/users/praateekmahajan/following{/other_user}","gists_url":"https://api.github.com/users/praateekmahajan/gists{/gist_id}","starred_url":"https://api.github.com/users/praateekmahajan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praateekmahajan/subscriptions","organizations_url":"https://api.github.com/users/praateekmahajan/orgs","repos_url":"https://api.github.com/users/praateekmahajan/repos","events_url":"https://api.github.com/users/praateekmahajan/events{/privacy}","received_events_url":"https://api.github.com/users/praateekmahajan/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2020-04-20T16:45:56Z","label":{"name":"enhancement","color":"a2eeef"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/618467559","html_url":"https://github.com/mlflow/mlflow/issues/2736#issuecomment-618467559","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2736","id":618467559,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODQ2NzU1OQ==","user":{"login":"edgBR","id":14976422,"node_id":"MDQ6VXNlcjE0OTc2NDIy","avatar_url":"https://avatars.githubusercontent.com/u/14976422?v=4","gravatar_id":"","url":"https://api.github.com/users/edgBR","html_url":"https://github.com/edgBR","followers_url":"https://api.github.com/users/edgBR/followers","following_url":"https://api.github.com/users/edgBR/following{/other_user}","gists_url":"https://api.github.com/users/edgBR/gists{/gist_id}","starred_url":"https://api.github.com/users/edgBR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgBR/subscriptions","organizations_url":"https://api.github.com/users/edgBR/orgs","repos_url":"https://api.github.com/users/edgBR/repos","events_url":"https://api.github.com/users/edgBR/events{/privacy}","received_events_url":"https://api.github.com/users/edgBR/received_events","type":"User","site_admin":false},"created_at":"2020-04-23T15:32:54Z","updated_at":"2020-04-23T15:32:54Z","author_association":"NONE","body":"Hi!\r\n\r\nTotally supporting this enhancement!\r\n","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/618467559/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"edgBR","id":14976422,"node_id":"MDQ6VXNlcjE0OTc2NDIy","avatar_url":"https://avatars.githubusercontent.com/u/14976422?v=4","gravatar_id":"","url":"https://api.github.com/users/edgBR","html_url":"https://github.com/edgBR","followers_url":"https://api.github.com/users/edgBR/followers","following_url":"https://api.github.com/users/edgBR/following{/other_user}","gists_url":"https://api.github.com/users/edgBR/gists{/gist_id}","starred_url":"https://api.github.com/users/edgBR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgBR/subscriptions","organizations_url":"https://api.github.com/users/edgBR/orgs","repos_url":"https://api.github.com/users/edgBR/repos","events_url":"https://api.github.com/users/edgBR/events{/privacy}","received_events_url":"https://api.github.com/users/edgBR/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/618711910","html_url":"https://github.com/mlflow/mlflow/issues/2736#issuecomment-618711910","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2736","id":618711910,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODcxMTkxMA==","user":{"login":"tallen94","id":9397454,"node_id":"MDQ6VXNlcjkzOTc0NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9397454?v=4","gravatar_id":"","url":"https://api.github.com/users/tallen94","html_url":"https://github.com/tallen94","followers_url":"https://api.github.com/users/tallen94/followers","following_url":"https://api.github.com/users/tallen94/following{/other_user}","gists_url":"https://api.github.com/users/tallen94/gists{/gist_id}","starred_url":"https://api.github.com/users/tallen94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tallen94/subscriptions","organizations_url":"https://api.github.com/users/tallen94/orgs","repos_url":"https://api.github.com/users/tallen94/repos","events_url":"https://api.github.com/users/tallen94/events{/privacy}","received_events_url":"https://api.github.com/users/tallen94/received_events","type":"User","site_admin":false},"created_at":"2020-04-23T22:53:26Z","updated_at":"2020-04-23T22:53:26Z","author_association":"CONTRIBUTOR","body":"Could this be achieved by setting the `--mode ` flag when calling `mlflow sagemaker deploy` to `add`? Their docs says it will add a new model to an existing endpoint rather than `create`.\r\n\r\nhttps://www.mlflow.org/docs/latest/python_api/mlflow.sagemaker.html#mlflow.sagemaker.deploy ","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/618711910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"tallen94","id":9397454,"node_id":"MDQ6VXNlcjkzOTc0NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9397454?v=4","gravatar_id":"","url":"https://api.github.com/users/tallen94","html_url":"https://github.com/tallen94","followers_url":"https://api.github.com/users/tallen94/followers","following_url":"https://api.github.com/users/tallen94/following{/other_user}","gists_url":"https://api.github.com/users/tallen94/gists{/gist_id}","starred_url":"https://api.github.com/users/tallen94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tallen94/subscriptions","organizations_url":"https://api.github.com/users/tallen94/orgs","repos_url":"https://api.github.com/users/tallen94/repos","events_url":"https://api.github.com/users/tallen94/events{/privacy}","received_events_url":"https://api.github.com/users/tallen94/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/620173980","html_url":"https://github.com/mlflow/mlflow/issues/2736#issuecomment-620173980","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2736","id":620173980,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDE3Mzk4MA==","user":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T19:04:03Z","updated_at":"2020-04-27T19:04:03Z","author_association":"COLLABORATOR","body":"Hi @praateekmahajan this sounds like a nice feature to support in the sagemaker deployment API and we'd be more than happy to review a proposal for implementing it.\r\n\r\n@tallen94 The current `--mode add` option unfortunately does not support multi-model endpoints on the same instance: each new model that is added to an endpoint is currently delegated a new instance","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/620173980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false}},{"id":3277190034,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MzI3NzE5MDAzNA==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/3277190034","actor":{"login":"praateekmahajan","id":7589415,"node_id":"MDQ6VXNlcjc1ODk0MTU=","avatar_url":"https://avatars.githubusercontent.com/u/7589415?v=4","gravatar_id":"","url":"https://api.github.com/users/praateekmahajan","html_url":"https://github.com/praateekmahajan","followers_url":"https://api.github.com/users/praateekmahajan/followers","following_url":"https://api.github.com/users/praateekmahajan/following{/other_user}","gists_url":"https://api.github.com/users/praateekmahajan/gists{/gist_id}","starred_url":"https://api.github.com/users/praateekmahajan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praateekmahajan/subscriptions","organizations_url":"https://api.github.com/users/praateekmahajan/orgs","repos_url":"https://api.github.com/users/praateekmahajan/repos","events_url":"https://api.github.com/users/praateekmahajan/events{/privacy}","received_events_url":"https://api.github.com/users/praateekmahajan/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-04-27T19:04:03Z","performed_via_github_app":null},{"id":3277190037,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDMyNzcxOTAwMzc=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/3277190037","actor":{"login":"praateekmahajan","id":7589415,"node_id":"MDQ6VXNlcjc1ODk0MTU=","avatar_url":"https://avatars.githubusercontent.com/u/7589415?v=4","gravatar_id":"","url":"https://api.github.com/users/praateekmahajan","html_url":"https://github.com/praateekmahajan","followers_url":"https://api.github.com/users/praateekmahajan/followers","following_url":"https://api.github.com/users/praateekmahajan/following{/other_user}","gists_url":"https://api.github.com/users/praateekmahajan/gists{/gist_id}","starred_url":"https://api.github.com/users/praateekmahajan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praateekmahajan/subscriptions","organizations_url":"https://api.github.com/users/praateekmahajan/orgs","repos_url":"https://api.github.com/users/praateekmahajan/repos","events_url":"https://api.github.com/users/praateekmahajan/events{/privacy}","received_events_url":"https://api.github.com/users/praateekmahajan/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-04-27T19:04:03Z","performed_via_github_app":null},{"id":3277190042,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MzI3NzE5MDA0Mg==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/3277190042","actor":{"login":"tallen94","id":9397454,"node_id":"MDQ6VXNlcjkzOTc0NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9397454?v=4","gravatar_id":"","url":"https://api.github.com/users/tallen94","html_url":"https://github.com/tallen94","followers_url":"https://api.github.com/users/tallen94/followers","following_url":"https://api.github.com/users/tallen94/following{/other_user}","gists_url":"https://api.github.com/users/tallen94/gists{/gist_id}","starred_url":"https://api.github.com/users/tallen94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tallen94/subscriptions","organizations_url":"https://api.github.com/users/tallen94/orgs","repos_url":"https://api.github.com/users/tallen94/repos","events_url":"https://api.github.com/users/tallen94/events{/privacy}","received_events_url":"https://api.github.com/users/tallen94/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-04-27T19:04:03Z","performed_via_github_app":null},{"id":3277190047,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDMyNzcxOTAwNDc=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/3277190047","actor":{"login":"tallen94","id":9397454,"node_id":"MDQ6VXNlcjkzOTc0NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9397454?v=4","gravatar_id":"","url":"https://api.github.com/users/tallen94","html_url":"https://github.com/tallen94","followers_url":"https://api.github.com/users/tallen94/followers","following_url":"https://api.github.com/users/tallen94/following{/other_user}","gists_url":"https://api.github.com/users/tallen94/gists{/gist_id}","starred_url":"https://api.github.com/users/tallen94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tallen94/subscriptions","organizations_url":"https://api.github.com/users/tallen94/orgs","repos_url":"https://api.github.com/users/tallen94/repos","events_url":"https://api.github.com/users/tallen94/events{/privacy}","received_events_url":"https://api.github.com/users/tallen94/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-04-27T19:04:03Z","performed_via_github_app":null},{"id":3277874509,"node_id":"MDEyOkxhYmVsZWRFdmVudDMyNzc4NzQ1MDk=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/3277874509","actor":{"login":"tomasatdatabricks","id":33237569,"node_id":"MDQ6VXNlcjMzMjM3NTY5","avatar_url":"https://avatars.githubusercontent.com/u/33237569?v=4","gravatar_id":"","url":"https://api.github.com/users/tomasatdatabricks","html_url":"https://github.com/tomasatdatabricks","followers_url":"https://api.github.com/users/tomasatdatabricks/followers","following_url":"https://api.github.com/users/tomasatdatabricks/following{/other_user}","gists_url":"https://api.github.com/users/tomasatdatabricks/gists{/gist_id}","starred_url":"https://api.github.com/users/tomasatdatabricks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomasatdatabricks/subscriptions","organizations_url":"https://api.github.com/users/tomasatdatabricks/orgs","repos_url":"https://api.github.com/users/tomasatdatabricks/repos","events_url":"https://api.github.com/users/tomasatdatabricks/events{/privacy}","received_events_url":"https://api.github.com/users/tomasatdatabricks/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2020-04-27T22:39:15Z","label":{"name":"Acknowledged","color":"f9d0c4"},"performed_via_github_app":null},{"id":3504512515,"node_id":"MDEyOkxhYmVsZWRFdmVudDM1MDQ1MTI1MTU=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/3504512515","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2020-07-01T22:46:48Z","label":{"name":"integrations/sagemaker","color":"ffbce5"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/782327444","html_url":"https://github.com/mlflow/mlflow/issues/2736#issuecomment-782327444","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2736","id":782327444,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjMyNzQ0NA==","user":{"login":"MarkAWard","id":3188305,"node_id":"MDQ6VXNlcjMxODgzMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3188305?v=4","gravatar_id":"","url":"https://api.github.com/users/MarkAWard","html_url":"https://github.com/MarkAWard","followers_url":"https://api.github.com/users/MarkAWard/followers","following_url":"https://api.github.com/users/MarkAWard/following{/other_user}","gists_url":"https://api.github.com/users/MarkAWard/gists{/gist_id}","starred_url":"https://api.github.com/users/MarkAWard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarkAWard/subscriptions","organizations_url":"https://api.github.com/users/MarkAWard/orgs","repos_url":"https://api.github.com/users/MarkAWard/repos","events_url":"https://api.github.com/users/MarkAWard/events{/privacy}","received_events_url":"https://api.github.com/users/MarkAWard/received_events","type":"User","site_admin":false},"created_at":"2021-02-19T20:33:56Z","updated_at":"2021-02-19T20:33:56Z","author_association":"NONE","body":"This is a feature that I'm very interested in having and willing to work on. We don't use Sagemaker for deployment so will take some time for me to research how that works, but I have been playing around with my fork trying to get it working running a the container locally. \r\n\r\n@dbczumar let me know what you think and if you want a more formal proposal doc or if I should just push some code once it's cleaned up\r\n\r\n1. To avoid changing the request data format or request routing the model you want to predict for would be placed in a request header such as `ModelURI: s3::/path/to/model`\r\n2. The flask app can use a `@app.before_request` handler to fetch the model and set in the context `flask.g`, would want to add caching as well for future requests\r\n3. Then the `/invocations` handler function will access the model stored in the request context `flask.g[\"model\"]`\r\n4. At this point you can fetch additional metadata such as `model.metadata.get_input_schema()`. \r\n5. Run the prediction\r\n6. Profit! (through massive cost savings 😃 )\r\n\r\nRight now I'm using `mlflow models build-docker -m ./local/path` to build the docker image so there's one MLmodel baked in there that the image is built from and specifies the environment. Since that model can already be used for serving in the docker container I was adding an env variable `MULTI_MODEL_SERVER` that would determine if the request context would set the model to the model baked in to the image or check the request header for the model. \r\n\r\nQ: Does `pyfunc.load_pyfunc` provide sufficient checks for if the conda env matches? Or what else would need to be done here? Are there existing utils for this to compare the incoming models environment spec to the one stored in the image?\r\n\r\nsample (incomplete untested) code:\r\n\r\nEnvironment variable dictating which run mode to use and setting the model\r\n```\r\ndef init(model: PyFuncModel):\r\n\r\n    \"\"\"\r\n    Initialize the server. Loads pyfunc model from the path.\r\n    \"\"\"\r\n\r\n    app = flask.Flask(__name__)\r\n    MULTI_MODEL_SERVER = os.environ.get(\"MULTI_MODEL_SERVER\", False)\r\n\r\n    @app.before_request\r\n    def before_request():\r\n        if MULTI_MODEL_SERVER:\r\n            model_uri = flask.headers.get(\"ModelURI\", type=str)\r\n            flask.g[\"model\"] = pyfunc.load_pyfunc(model_uri)            \r\n        else:\r\n            flask.g[\"model\"] = model\r\n```\r\n\r\nperforming predictions\r\n```\r\n    @app.route(\"/invocations\", methods=[\"POST\"])\r\n    @catch_mlflow_exception\r\n    def transformation():  # pylint: disable=unused-variable\r\n        \"\"\"\r\n        Do an inference on a single batch of data. In this sample server,\r\n        we take data as CSV or json, convert it to a Pandas DataFrame or Numpy,\r\n        generate predictions and convert them back to json.\r\n        \"\"\"\r\n        current_model = flask.g[\"model\"]\r\n        input_schema = current_model.metadata.get_input_schema()\r\n        ....\r\n        try:\r\n            raw_predictions = current_model.predict(data)\r\n```","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/782327444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"MarkAWard","id":3188305,"node_id":"MDQ6VXNlcjMxODgzMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3188305?v=4","gravatar_id":"","url":"https://api.github.com/users/MarkAWard","html_url":"https://github.com/MarkAWard","followers_url":"https://api.github.com/users/MarkAWard/followers","following_url":"https://api.github.com/users/MarkAWard/following{/other_user}","gists_url":"https://api.github.com/users/MarkAWard/gists{/gist_id}","starred_url":"https://api.github.com/users/MarkAWard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarkAWard/subscriptions","organizations_url":"https://api.github.com/users/MarkAWard/orgs","repos_url":"https://api.github.com/users/MarkAWard/repos","events_url":"https://api.github.com/users/MarkAWard/events{/privacy}","received_events_url":"https://api.github.com/users/MarkAWard/received_events","type":"User","site_admin":false}},{"id":4353961328,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDM1Mzk2MTMyOA==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/4353961328","actor":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-02-19T20:33:56Z","performed_via_github_app":null},{"id":4353961335,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQzNTM5NjEzMzU=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/4353961335","actor":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-02-19T20:33:56Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/783087097","html_url":"https://github.com/mlflow/mlflow/issues/2736#issuecomment-783087097","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2736","id":783087097,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MzA4NzA5Nw==","user":{"login":"MarkAWard","id":3188305,"node_id":"MDQ6VXNlcjMxODgzMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3188305?v=4","gravatar_id":"","url":"https://api.github.com/users/MarkAWard","html_url":"https://github.com/MarkAWard","followers_url":"https://api.github.com/users/MarkAWard/followers","following_url":"https://api.github.com/users/MarkAWard/following{/other_user}","gists_url":"https://api.github.com/users/MarkAWard/gists{/gist_id}","starred_url":"https://api.github.com/users/MarkAWard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarkAWard/subscriptions","organizations_url":"https://api.github.com/users/MarkAWard/orgs","repos_url":"https://api.github.com/users/MarkAWard/repos","events_url":"https://api.github.com/users/MarkAWard/events{/privacy}","received_events_url":"https://api.github.com/users/MarkAWard/received_events","type":"User","site_admin":false},"created_at":"2021-02-22T05:14:02Z","updated_at":"2021-02-22T05:14:02Z","author_association":"NONE","body":"Using `before_request` seems unnecessary and just complicates the logic requiring a check on what route was being requested. Should be fine to simplify do something like\r\n\r\n```\r\n    @app.route(\"/invocations\", methods=[\"POST\"])\r\n    @catch_mlflow_exception\r\n    def transformation():  # pylint: disable=unused-variable\r\n        \"\"\"\r\n        Do an inference on a single batch of data. In this sample server,\r\n        we take data as CSV or json, convert it to a Pandas DataFrame or Numpy,\r\n        generate predictions and convert them back to json.\r\n        \"\"\"\r\n        if MULTI_MODEL_SERVER:\r\n            model_uri = flask.request.headers.get(\"ModelURI\", type=str)\r\n            try:\r\n                current_model = load_model(model_uri)\r\n            except Exception as e:\r\n                json_err = {\r\n                    \"error_code\": \"RESOURCE_DOES_NOT_EXIST\",\r\n                    \"message\": str(e)\r\n                }\r\n                raise RestException(json_err) from e\r\n        else:\r\n            current_model = model\r\n        input_schema = current_model.metadata.get_input_schema()\r\n```\r\n\r\nI could use guidance on how we want to do error handling/raising and any other model checks that should be performed (or place trust in the user?)","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/783087097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"MarkAWard","id":3188305,"node_id":"MDQ6VXNlcjMxODgzMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3188305?v=4","gravatar_id":"","url":"https://api.github.com/users/MarkAWard","html_url":"https://github.com/MarkAWard","followers_url":"https://api.github.com/users/MarkAWard/followers","following_url":"https://api.github.com/users/MarkAWard/following{/other_user}","gists_url":"https://api.github.com/users/MarkAWard/gists{/gist_id}","starred_url":"https://api.github.com/users/MarkAWard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarkAWard/subscriptions","organizations_url":"https://api.github.com/users/MarkAWard/orgs","repos_url":"https://api.github.com/users/MarkAWard/repos","events_url":"https://api.github.com/users/MarkAWard/events{/privacy}","received_events_url":"https://api.github.com/users/MarkAWard/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/783456603","html_url":"https://github.com/mlflow/mlflow/issues/2736#issuecomment-783456603","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2736","id":783456603,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MzQ1NjYwMw==","user":{"login":"AndersonReyes","id":13670774,"node_id":"MDQ6VXNlcjEzNjcwNzc0","avatar_url":"https://avatars.githubusercontent.com/u/13670774?v=4","gravatar_id":"","url":"https://api.github.com/users/AndersonReyes","html_url":"https://github.com/AndersonReyes","followers_url":"https://api.github.com/users/AndersonReyes/followers","following_url":"https://api.github.com/users/AndersonReyes/following{/other_user}","gists_url":"https://api.github.com/users/AndersonReyes/gists{/gist_id}","starred_url":"https://api.github.com/users/AndersonReyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndersonReyes/subscriptions","organizations_url":"https://api.github.com/users/AndersonReyes/orgs","repos_url":"https://api.github.com/users/AndersonReyes/repos","events_url":"https://api.github.com/users/AndersonReyes/events{/privacy}","received_events_url":"https://api.github.com/users/AndersonReyes/received_events","type":"User","site_admin":false},"created_at":"2021-02-22T15:30:00Z","updated_at":"2021-02-22T15:30:00Z","author_association":"CONTRIBUTOR","body":"> This is a feature that I'm very interested in having and willing to work on. We don't use Sagemaker for deployment so will take some time for me to research how that works, but I have been playing around with my fork trying to get it working running a the container locally.\r\n> \r\n> @dbczumar let me know what you think and if you want a more formal proposal doc or if I should just push some code once it's cleaned up\r\n> \r\n> 1. To avoid changing the request data format or request routing the model you want to predict for would be placed in a request header such as `ModelURI: s3::/path/to/model`\r\n> 2. The flask app can use a `@app.before_request` handler to fetch the model and set in the context `flask.g`, would want to add caching as well for future requests\r\n> 3. Then the `/invocations` handler function will access the model stored in the request context `flask.g[\"model\"]`\r\n> 4. At this point you can fetch additional metadata such as `model.metadata.get_input_schema()`.\r\n> 5. Run the prediction\r\n> 6. Profit! (through massive cost savings 😃 )\r\n> \r\n> Right now I'm using `mlflow models build-docker -m ./local/path` to build the docker image so there's one MLmodel baked in there that the image is built from and specifies the environment. Since that model can already be used for serving in the docker container I was adding an env variable `MULTI_MODEL_SERVER` that would determine if the request context would set the model to the model baked in to the image or check the request header for the model.\r\n> \r\n> Q: Does `pyfunc.load_pyfunc` provide sufficient checks for if the conda env matches? Or what else would need to be done here? Are there existing utils for this to compare the incoming models environment spec to the one stored in the image?\r\n> \r\n> sample (incomplete untested) code:\r\n> \r\n> Environment variable dictating which run mode to use and setting the model\r\n> \r\n> ```\r\n> def init(model: PyFuncModel):\r\n> \r\n>     \"\"\"\r\n>     Initialize the server. Loads pyfunc model from the path.\r\n>     \"\"\"\r\n> \r\n>     app = flask.Flask(__name__)\r\n>     MULTI_MODEL_SERVER = os.environ.get(\"MULTI_MODEL_SERVER\", False)\r\n> \r\n>     @app.before_request\r\n>     def before_request():\r\n>         if MULTI_MODEL_SERVER:\r\n>             model_uri = flask.headers.get(\"ModelURI\", type=str)\r\n>             flask.g[\"model\"] = pyfunc.load_pyfunc(model_uri)            \r\n>         else:\r\n>             flask.g[\"model\"] = model\r\n> ```\r\n> \r\n> performing predictions\r\n> \r\n> ```\r\n>     @app.route(\"/invocations\", methods=[\"POST\"])\r\n>     @catch_mlflow_exception\r\n>     def transformation():  # pylint: disable=unused-variable\r\n>         \"\"\"\r\n>         Do an inference on a single batch of data. In this sample server,\r\n>         we take data as CSV or json, convert it to a Pandas DataFrame or Numpy,\r\n>         generate predictions and convert them back to json.\r\n>         \"\"\"\r\n>         current_model = flask.g[\"model\"]\r\n>         input_schema = current_model.metadata.get_input_schema()\r\n>         ....\r\n>         try:\r\n>             raw_predictions = current_model.predict(data)\r\n> ```\r\n\r\nThis might still be useful, maybe not in the before request but in the outer init function, to preload models into the Multi model container, maybe using an envar with comma seaprated URIs ","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/783456603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"AndersonReyes","id":13670774,"node_id":"MDQ6VXNlcjEzNjcwNzc0","avatar_url":"https://avatars.githubusercontent.com/u/13670774?v=4","gravatar_id":"","url":"https://api.github.com/users/AndersonReyes","html_url":"https://github.com/AndersonReyes","followers_url":"https://api.github.com/users/AndersonReyes/followers","following_url":"https://api.github.com/users/AndersonReyes/following{/other_user}","gists_url":"https://api.github.com/users/AndersonReyes/gists{/gist_id}","starred_url":"https://api.github.com/users/AndersonReyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndersonReyes/subscriptions","organizations_url":"https://api.github.com/users/AndersonReyes/orgs","repos_url":"https://api.github.com/users/AndersonReyes/repos","events_url":"https://api.github.com/users/AndersonReyes/events{/privacy}","received_events_url":"https://api.github.com/users/AndersonReyes/received_events","type":"User","site_admin":false}},{"id":4360347182,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50NDM2MDM0NzE4Mg==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/4360347182","actor":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2021-02-22T15:30:00Z","performed_via_github_app":null},{"id":4360347187,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDQzNjAzNDcxODc=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/4360347187","actor":{"login":"dbczumar","id":39497902,"node_id":"MDQ6VXNlcjM5NDk3OTAy","avatar_url":"https://avatars.githubusercontent.com/u/39497902?v=4","gravatar_id":"","url":"https://api.github.com/users/dbczumar","html_url":"https://github.com/dbczumar","followers_url":"https://api.github.com/users/dbczumar/followers","following_url":"https://api.github.com/users/dbczumar/following{/other_user}","gists_url":"https://api.github.com/users/dbczumar/gists{/gist_id}","starred_url":"https://api.github.com/users/dbczumar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbczumar/subscriptions","organizations_url":"https://api.github.com/users/dbczumar/orgs","repos_url":"https://api.github.com/users/dbczumar/repos","events_url":"https://api.github.com/users/dbczumar/events{/privacy}","received_events_url":"https://api.github.com/users/dbczumar/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2021-02-22T15:30:01Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/854609348","html_url":"https://github.com/mlflow/mlflow/issues/2736#issuecomment-854609348","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2736","id":854609348,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NDYwOTM0OA==","user":{"login":"litty-tt","id":52400178,"node_id":"MDQ6VXNlcjUyNDAwMTc4","avatar_url":"https://avatars.githubusercontent.com/u/52400178?v=4","gravatar_id":"","url":"https://api.github.com/users/litty-tt","html_url":"https://github.com/litty-tt","followers_url":"https://api.github.com/users/litty-tt/followers","following_url":"https://api.github.com/users/litty-tt/following{/other_user}","gists_url":"https://api.github.com/users/litty-tt/gists{/gist_id}","starred_url":"https://api.github.com/users/litty-tt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/litty-tt/subscriptions","organizations_url":"https://api.github.com/users/litty-tt/orgs","repos_url":"https://api.github.com/users/litty-tt/repos","events_url":"https://api.github.com/users/litty-tt/events{/privacy}","received_events_url":"https://api.github.com/users/litty-tt/received_events","type":"User","site_admin":false},"created_at":"2021-06-04T10:43:05Z","updated_at":"2021-06-04T10:43:05Z","author_association":"NONE","body":"Looking out for multi-model endpoints feature in Mlflow-Sagemaker. Any update on the enhancement?","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/854609348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"litty-tt","id":52400178,"node_id":"MDQ6VXNlcjUyNDAwMTc4","avatar_url":"https://avatars.githubusercontent.com/u/52400178?v=4","gravatar_id":"","url":"https://api.github.com/users/litty-tt","html_url":"https://github.com/litty-tt","followers_url":"https://api.github.com/users/litty-tt/followers","following_url":"https://api.github.com/users/litty-tt/following{/other_user}","gists_url":"https://api.github.com/users/litty-tt/gists{/gist_id}","starred_url":"https://api.github.com/users/litty-tt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/litty-tt/subscriptions","organizations_url":"https://api.github.com/users/litty-tt/orgs","repos_url":"https://api.github.com/users/litty-tt/repos","events_url":"https://api.github.com/users/litty-tt/events{/privacy}","received_events_url":"https://api.github.com/users/litty-tt/received_events","type":"User","site_admin":false}}]