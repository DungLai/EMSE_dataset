[{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/493777471","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-493777471","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":493777471,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Mzc3NzQ3MQ==","user":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"created_at":"2019-05-19T17:53:17Z","updated_at":"2019-05-19T17:53:17Z","author_association":"CONTRIBUTOR","body":"Yes, we'd love to add at least one binary format that preserves types better in addition to JSON. Have you looked into these and do you have a preference? One other thing we were thinking is to change the server to use gRPC, so it would be nice if we pick a format that works with that.\r\n\r\nOn a related note, we also need to decide whether we want models to declare a schema for their inputs or we want to leave it undeclared, as it is today. Asking them to declare a schema would create extra work for users, so it would be nice to support at least a couple of formats that don't need that.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/493777471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false}},{"id":2351896325,"node_id":"MDEyOkxhYmVsZWRFdmVudDIzNTE4OTYzMjU=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2351896325","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-05-20T04:03:57Z","label":{"name":"enhancement","color":"a2eeef"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/497203662","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-497203662","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":497203662,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIwMzY2Mg==","user":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true},"created_at":"2019-05-30T05:03:58Z","updated_at":"2019-05-30T05:03:58Z","author_association":"CONTRIBUTOR","body":"@mateiz I did some preliminary research on the different serialization types for dataframes taking into account the following features: 1) binary vs text, 2) schema-first or not, and 3) compatibility with gRPC. Pandas dataframes has built-in support for converting dataframes to JSON, HDF5, parquet and CSV. It seems to me that using a self-describing binary file format such as HDF5 might be a good approach for serializing dataframes assuming we want to use one of the built-in serializers that pandas provides. Note that HDF5 is not schema-first (like protobufs) and preserves data types across serialization/deserialization.  \r\n\r\nConnection to gRPC might be tricky as gRPC works mainly with protobufs and JSON. \r\nHowever, we can always serialize the dataframe in HDF5 (or any other self-describing binary format) , wrap it around a protobuf object with a fixed/immutable schema (e.g., 'data': bytes) and send it to the server through gRPC. Any thoughts?","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/497203662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true}},{"id":2377096742,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjM3NzA5Njc0Mg==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2377096742","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-05-30T05:03:58Z","performed_via_github_app":null},{"id":2377096744,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDIzNzcwOTY3NDQ=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2377096744","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-05-30T05:03:58Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/497212262","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-497212262","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":497212262,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIxMjI2Mg==","user":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"created_at":"2019-05-30T05:51:10Z","updated_at":"2019-05-30T05:51:10Z","author_association":"CONTRIBUTOR","body":"OK, makes sense. Another approach I've seen is to use protobuf but let the format within the protobuf itself be dynamic using enums (for example, see the data fields in https://github.com/SeldonIO/seldon-core/blob/master/proto/prediction.proto). Then it's compatible with gRPC and other libraries, but you can still have a mix of types of data. It would be good to do something simple here and not have to add lots of data types later. I'll see whether we can get some input from Seldon on this too.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/497212262/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/497442611","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-497442611","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":497442611,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ0MjYxMQ==","user":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true},"created_at":"2019-05-30T18:50:32Z","updated_at":"2019-05-30T18:50:32Z","author_association":"CONTRIBUTOR","body":"I'm not sure I understand what the end goal is. Is the intention for the server to process not only dataframes but other types of data as well? If yes, then I can see how the enums would be useful in this context. \r\n\r\nBut, if the server will only process pandas dataframes, then there are 3 possible approaches: 1) serialize the dataframe as a whole using one of the serialization methods that pandas provides, 2) serialize the dataframe column-by-column, 3) serialize the dataframe row-by-row. I can see the protobuf/enum approach being useful in 2 and 3 but I wonder what are the pros of this approach compared to 1.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/497442611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/503905129","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-503905129","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":503905129,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzkwNTEyOQ==","user":{"login":"andremoeller","id":5501191,"node_id":"MDQ6VXNlcjU1MDExOTE=","avatar_url":"https://avatars.githubusercontent.com/u/5501191?v=4","gravatar_id":"","url":"https://api.github.com/users/andremoeller","html_url":"https://github.com/andremoeller","followers_url":"https://api.github.com/users/andremoeller/followers","following_url":"https://api.github.com/users/andremoeller/following{/other_user}","gists_url":"https://api.github.com/users/andremoeller/gists{/gist_id}","starred_url":"https://api.github.com/users/andremoeller/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andremoeller/subscriptions","organizations_url":"https://api.github.com/users/andremoeller/orgs","repos_url":"https://api.github.com/users/andremoeller/repos","events_url":"https://api.github.com/users/andremoeller/events{/privacy}","received_events_url":"https://api.github.com/users/andremoeller/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T07:07:34Z","updated_at":"2019-06-20T07:07:34Z","author_association":"NONE","body":"Another option: dataframes can be serialized to NPY or NPZ format, which preserves dtype:\r\nhttps://docs.scipy.org/doc/numpy/reference/generated/numpy.asarray.html\r\nhttps://www.numpy.org/devdocs/reference/generated/numpy.lib.format.html\r\n\r\nThis fits binary and schema-less requirements, but I do not know about gRPC support, other than wrapping serialized array in protobuf","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/503905129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"andremoeller","id":5501191,"node_id":"MDQ6VXNlcjU1MDExOTE=","avatar_url":"https://avatars.githubusercontent.com/u/5501191?v=4","gravatar_id":"","url":"https://api.github.com/users/andremoeller","html_url":"https://github.com/andremoeller","followers_url":"https://api.github.com/users/andremoeller/followers","following_url":"https://api.github.com/users/andremoeller/following{/other_user}","gists_url":"https://api.github.com/users/andremoeller/gists{/gist_id}","starred_url":"https://api.github.com/users/andremoeller/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andremoeller/subscriptions","organizations_url":"https://api.github.com/users/andremoeller/orgs","repos_url":"https://api.github.com/users/andremoeller/repos","events_url":"https://api.github.com/users/andremoeller/events{/privacy}","received_events_url":"https://api.github.com/users/andremoeller/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511611094","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-511611094","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":511611094,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMTYxMTA5NA==","user":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false},"created_at":"2019-07-15T23:53:02Z","updated_at":"2019-07-15T23:53:02Z","author_association":"NONE","body":"> On a related note, we also need to decide whether we want models to declare a schema for their inputs or we want to leave it undeclared, as it is today.\r\n\r\nHaving at least an *optional* schema in the metadata of the model would be awesome for tooling: Imagine dropping a MLFlow model into your IDE of choice, and having datatypes for input and output auto-created for you. I believe CoreML enables this in XCode, and it removes a barrier of ML adoption by devs.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511611094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511611876","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-511611876","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":511611876,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMTYxMTg3Ng==","user":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"created_at":"2019-07-15T23:57:08Z","updated_at":"2019-07-15T23:57:08Z","author_association":"CONTRIBUTOR","body":"Yup, it definitely makes sense to add an optional one. What data types do you think should be allowed in the schema btw?","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511611876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511612773","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-511612773","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":511612773,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMTYxMjc3Mw==","user":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false},"created_at":"2019-07-16T00:01:41Z","updated_at":"2019-07-16T00:01:41Z","author_association":"NONE","body":"> On a related note, we also need to decide whether we want models to declare a schema for their inputs or we want to leave it undeclared, as it is today.\r\n\r\nIdeally, we allow all the base types, and a \"record\" type for composition. That way, code generation can happen at the level of generating classes for the composite type, and don't require a method with dozens of parameters.\r\n\r\nI actually think that the DDL of protobuf / gRPC could be a good fit here: Code generators for many languages already exist, the DDL is expressive, there is little chance for support for it to disappear, ...\r\n\r\nAnother potential source of inspiration could be the Apache Arrow type system, as it seems to gain traction across different data science systems.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511612773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511613819","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-511613819","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":511613819,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMTYxMzgxOQ==","user":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"created_at":"2019-07-16T00:07:16Z","updated_at":"2019-07-16T00:07:16Z","author_association":"CONTRIBUTOR","body":"Both (nested) record types and Arrow are pretty complex, so I was hoping for something simpler. For example, maybe make the type be a record with named fields, which can be one of {int, double, double[], byte[], string} or something like that. Then these can be represented in many ML libraries and many existing data formats. I noticed that TF Serving and Seldon only have very simple types too, and people seem to be doing fine with those (at least for deep learning).","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511613819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511614195","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-511614195","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":511614195,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMTYxNDE5NQ==","user":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false},"created_at":"2019-07-16T00:09:06Z","updated_at":"2019-07-16T00:09:06Z","author_association":"NONE","body":"Yes, but deep learning is much simpler than full pipelines in terms of the data types involved. I believe we can get away without nested records. But a single *named* record would be required. That way, the codegen knows what to call the generated type.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/511614195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/523920433","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-523920433","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":523920433,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzkyMDQzMw==","user":{"login":"nicocti","id":15033773,"node_id":"MDQ6VXNlcjE1MDMzNzcz","avatar_url":"https://avatars.githubusercontent.com/u/15033773?v=4","gravatar_id":"","url":"https://api.github.com/users/nicocti","html_url":"https://github.com/nicocti","followers_url":"https://api.github.com/users/nicocti/followers","following_url":"https://api.github.com/users/nicocti/following{/other_user}","gists_url":"https://api.github.com/users/nicocti/gists{/gist_id}","starred_url":"https://api.github.com/users/nicocti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicocti/subscriptions","organizations_url":"https://api.github.com/users/nicocti/orgs","repos_url":"https://api.github.com/users/nicocti/repos","events_url":"https://api.github.com/users/nicocti/events{/privacy}","received_events_url":"https://api.github.com/users/nicocti/received_events","type":"User","site_admin":false},"created_at":"2019-08-22T14:03:26Z","updated_at":"2019-08-22T14:14:19Z","author_association":"NONE","body":"gRPC / protobuf makes more sense than serializing JSON. I also think that static typing cannot be avoided for both reliability of the model server, and performance tuning of serialization. AFAIK tensorflow serving is using it (google stuff obviously...).\r\n\r\nThis article can be a first benchmark: https://medium.com/@avidaneran/tensorflow-serving-rest-vs-grpc-e8cef9d4ff62 (beware it's local so doesn't account for bandwith...)","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/523920433/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"nicocti","id":15033773,"node_id":"MDQ6VXNlcjE1MDMzNzcz","avatar_url":"https://avatars.githubusercontent.com/u/15033773?v=4","gravatar_id":"","url":"https://api.github.com/users/nicocti","html_url":"https://github.com/nicocti","followers_url":"https://api.github.com/users/nicocti/followers","following_url":"https://api.github.com/users/nicocti/following{/other_user}","gists_url":"https://api.github.com/users/nicocti/gists{/gist_id}","starred_url":"https://api.github.com/users/nicocti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicocti/subscriptions","organizations_url":"https://api.github.com/users/nicocti/orgs","repos_url":"https://api.github.com/users/nicocti/repos","events_url":"https://api.github.com/users/nicocti/events{/privacy}","received_events_url":"https://api.github.com/users/nicocti/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/524798398","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-524798398","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":524798398,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDc5ODM5OA==","user":{"login":"nicocti","id":15033773,"node_id":"MDQ6VXNlcjE1MDMzNzcz","avatar_url":"https://avatars.githubusercontent.com/u/15033773?v=4","gravatar_id":"","url":"https://api.github.com/users/nicocti","html_url":"https://github.com/nicocti","followers_url":"https://api.github.com/users/nicocti/followers","following_url":"https://api.github.com/users/nicocti/following{/other_user}","gists_url":"https://api.github.com/users/nicocti/gists{/gist_id}","starred_url":"https://api.github.com/users/nicocti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicocti/subscriptions","organizations_url":"https://api.github.com/users/nicocti/orgs","repos_url":"https://api.github.com/users/nicocti/repos","events_url":"https://api.github.com/users/nicocti/events{/privacy}","received_events_url":"https://api.github.com/users/nicocti/received_events","type":"User","site_admin":false},"created_at":"2019-08-26T09:52:07Z","updated_at":"2019-08-26T09:52:07Z","author_association":"NONE","body":"Apache Arrow Flight could also be investigated. I need to dig a bit on my side to get the ins ant outs of it but it seems to offer a standard data-oriented gRPC protocol (+ using arrow so compatible with pandas). https://www.dremio.com/understanding-apache-arrow-flight/","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/524798398/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"nicocti","id":15033773,"node_id":"MDQ6VXNlcjE1MDMzNzcz","avatar_url":"https://avatars.githubusercontent.com/u/15033773?v=4","gravatar_id":"","url":"https://api.github.com/users/nicocti","html_url":"https://github.com/nicocti","followers_url":"https://api.github.com/users/nicocti/followers","following_url":"https://api.github.com/users/nicocti/following{/other_user}","gists_url":"https://api.github.com/users/nicocti/gists{/gist_id}","starred_url":"https://api.github.com/users/nicocti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicocti/subscriptions","organizations_url":"https://api.github.com/users/nicocti/orgs","repos_url":"https://api.github.com/users/nicocti/repos","events_url":"https://api.github.com/users/nicocti/events{/privacy}","received_events_url":"https://api.github.com/users/nicocti/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525785708","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-525785708","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":525785708,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTc4NTcwOA==","user":{"login":"nicocti","id":15033773,"node_id":"MDQ6VXNlcjE1MDMzNzcz","avatar_url":"https://avatars.githubusercontent.com/u/15033773?v=4","gravatar_id":"","url":"https://api.github.com/users/nicocti","html_url":"https://github.com/nicocti","followers_url":"https://api.github.com/users/nicocti/followers","following_url":"https://api.github.com/users/nicocti/following{/other_user}","gists_url":"https://api.github.com/users/nicocti/gists{/gist_id}","starred_url":"https://api.github.com/users/nicocti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicocti/subscriptions","organizations_url":"https://api.github.com/users/nicocti/orgs","repos_url":"https://api.github.com/users/nicocti/repos","events_url":"https://api.github.com/users/nicocti/events{/privacy}","received_events_url":"https://api.github.com/users/nicocti/received_events","type":"User","site_admin":false},"created_at":"2019-08-28T15:01:23Z","updated_at":"2019-08-28T15:01:33Z","author_association":"NONE","body":"@wesm would you recommend trying to implement Arrow Flight as a new API protocol for MLFlow model serving besides the json-based rest api ?\r\n","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525785708/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"nicocti","id":15033773,"node_id":"MDQ6VXNlcjE1MDMzNzcz","avatar_url":"https://avatars.githubusercontent.com/u/15033773?v=4","gravatar_id":"","url":"https://api.github.com/users/nicocti","html_url":"https://github.com/nicocti","followers_url":"https://api.github.com/users/nicocti/followers","following_url":"https://api.github.com/users/nicocti/following{/other_user}","gists_url":"https://api.github.com/users/nicocti/gists{/gist_id}","starred_url":"https://api.github.com/users/nicocti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicocti/subscriptions","organizations_url":"https://api.github.com/users/nicocti/orgs","repos_url":"https://api.github.com/users/nicocti/repos","events_url":"https://api.github.com/users/nicocti/events{/privacy}","received_events_url":"https://api.github.com/users/nicocti/received_events","type":"User","site_admin":false}},{"id":2590877778,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjU5MDg3Nzc3OA==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2590877778","actor":{"login":"wesm","id":329591,"node_id":"MDQ6VXNlcjMyOTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/329591?v=4","gravatar_id":"","url":"https://api.github.com/users/wesm","html_url":"https://github.com/wesm","followers_url":"https://api.github.com/users/wesm/followers","following_url":"https://api.github.com/users/wesm/following{/other_user}","gists_url":"https://api.github.com/users/wesm/gists{/gist_id}","starred_url":"https://api.github.com/users/wesm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wesm/subscriptions","organizations_url":"https://api.github.com/users/wesm/orgs","repos_url":"https://api.github.com/users/wesm/repos","events_url":"https://api.github.com/users/wesm/events{/privacy}","received_events_url":"https://api.github.com/users/wesm/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-08-28T15:01:24Z","performed_via_github_app":null},{"id":2590877781,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI1OTA4Nzc3ODE=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2590877781","actor":{"login":"wesm","id":329591,"node_id":"MDQ6VXNlcjMyOTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/329591?v=4","gravatar_id":"","url":"https://api.github.com/users/wesm","html_url":"https://github.com/wesm","followers_url":"https://api.github.com/users/wesm/followers","following_url":"https://api.github.com/users/wesm/following{/other_user}","gists_url":"https://api.github.com/users/wesm/gists{/gist_id}","starred_url":"https://api.github.com/users/wesm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wesm/subscriptions","organizations_url":"https://api.github.com/users/wesm/orgs","repos_url":"https://api.github.com/users/wesm/repos","events_url":"https://api.github.com/users/wesm/events{/privacy}","received_events_url":"https://api.github.com/users/wesm/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-08-28T15:01:24Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525810889","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-525810889","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":525810889,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTgxMDg4OQ==","user":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true},"created_at":"2019-08-28T16:01:04Z","updated_at":"2019-08-28T16:01:04Z","author_association":"CONTRIBUTOR","body":"Hi all, @markusweimer and I are also working on a proposal to use protobufs for serialization. We are planning to share a short document describing the design in the next couple of days. It would be great if we can all discuss it as I think it is simple to implement and compatible with many of the requirements mentioned in this thread. ","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525810889/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true}},{"id":2591083993,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjU5MTA4Mzk5Mw==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2591083993","actor":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-08-28T16:01:04Z","performed_via_github_app":null},{"id":2591084000,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI1OTEwODQwMDA=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2591084000","actor":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-08-28T16:01:04Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525817762","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-525817762","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":525817762,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTgxNzc2Mg==","user":{"login":"wesm","id":329591,"node_id":"MDQ6VXNlcjMyOTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/329591?v=4","gravatar_id":"","url":"https://api.github.com/users/wesm","html_url":"https://github.com/wesm","followers_url":"https://api.github.com/users/wesm/followers","following_url":"https://api.github.com/users/wesm/following{/other_user}","gists_url":"https://api.github.com/users/wesm/gists{/gist_id}","starred_url":"https://api.github.com/users/wesm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wesm/subscriptions","organizations_url":"https://api.github.com/users/wesm/orgs","repos_url":"https://api.github.com/users/wesm/repos","events_url":"https://api.github.com/users/wesm/events{/privacy}","received_events_url":"https://api.github.com/users/wesm/received_events","type":"User","site_admin":false},"created_at":"2019-08-28T16:18:40Z","updated_at":"2019-08-28T16:18:40Z","author_association":"NONE","body":"I would recommend looking at the Arrow protocol and Arrow Flight (if you're interested in using both gRPC and Arrow protocol) if you're looking for the ultimate performance. It will significantly outperform protocol buffers or other data serialization tools that require parsing.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525817762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"wesm","id":329591,"node_id":"MDQ6VXNlcjMyOTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/329591?v=4","gravatar_id":"","url":"https://api.github.com/users/wesm","html_url":"https://github.com/wesm","followers_url":"https://api.github.com/users/wesm/followers","following_url":"https://api.github.com/users/wesm/following{/other_user}","gists_url":"https://api.github.com/users/wesm/gists{/gist_id}","starred_url":"https://api.github.com/users/wesm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wesm/subscriptions","organizations_url":"https://api.github.com/users/wesm/orgs","repos_url":"https://api.github.com/users/wesm/repos","events_url":"https://api.github.com/users/wesm/events{/privacy}","received_events_url":"https://api.github.com/users/wesm/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525844115","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-525844115","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":525844115,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTg0NDExNQ==","user":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false},"created_at":"2019-08-28T17:30:21Z","updated_at":"2019-08-28T17:30:21Z","author_association":"NONE","body":"I believe we are starting to discuss two aspects of this problem space:\r\n\r\n  1. The physical representation of the data sent to the server. There is a desire / need to make that more efficient than the combo of HTTP & JSON.\r\n  2. A schema representation for the inputs and outputs of the model, to facilitate code gen for client code as well as early schema validation when the model is e.g. invoked from a database query.\r\n\r\nI introduced that second question, I believe. While not completely decoupled from the first, I wonder whether we should move that discussion to its own thread?","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525844115/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525855716","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-525855716","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":525855716,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTg1NTcxNg==","user":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true},"created_at":"2019-08-28T17:59:19Z","updated_at":"2019-08-28T17:59:37Z","author_association":"CONTRIBUTOR","body":"@markusweimer for the 2nd we could discuss incorporating the schema as part of the model flavors API (aka, Model.save) and capture the schema in the generated .yaml file. I think it makes sense to move this discussion to a separate thread.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525855716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true}},{"id":2591436522,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjU5MTQzNjUyMg==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2591436522","actor":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-08-28T17:59:20Z","performed_via_github_app":null},{"id":2591436523,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI1OTE0MzY1MjM=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2591436523","actor":{"login":"markusweimer","id":502371,"node_id":"MDQ6VXNlcjUwMjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/502371?v=4","gravatar_id":"","url":"https://api.github.com/users/markusweimer","html_url":"https://github.com/markusweimer","followers_url":"https://api.github.com/users/markusweimer/followers","following_url":"https://api.github.com/users/markusweimer/following{/other_user}","gists_url":"https://api.github.com/users/markusweimer/gists{/gist_id}","starred_url":"https://api.github.com/users/markusweimer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markusweimer/subscriptions","organizations_url":"https://api.github.com/users/markusweimer/orgs","repos_url":"https://api.github.com/users/markusweimer/repos","events_url":"https://api.github.com/users/markusweimer/events{/privacy}","received_events_url":"https://api.github.com/users/markusweimer/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-08-28T17:59:20Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525861959","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-525861959","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":525861959,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTg2MTk1OQ==","user":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"created_at":"2019-08-28T18:15:37Z","updated_at":"2019-08-28T18:15:37Z","author_association":"CONTRIBUTOR","body":"Yup, I think we should separate several discussions.\r\n\r\n1. We need to decide on the data types that can be passed to models. For example, maybe the input is a set of records with fields of type int32/64, float32/64, vector<int32/64>, vector<float32/64>, string or bytes.\r\n2. We want a way for models to declare their schema, once we've figured out the data types.\r\n3. We need to decide on supported encoding formats for the data.\r\n\r\nOne of my concerns with the formats is backward compatibility. Do Arrow and Arrow Flight guarantee compatibility with old clients/servers going forward? Since our goal is to let people archive and reproducibly run models, we don't want MLflow to stop working with old models in some future release. This is a little bit different from RPC within a system, where you can just upgrade the whole system at once.\r\n\r\nIt might be easiest to start by discussion question 1 first: are people okay with the types I listed there or should we have more, fewer, etc? Then we can create a new issue for question 2 and we can discuss encoding formats here.","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525861959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525866599","html_url":"https://github.com/mlflow/mlflow/issues/1286#issuecomment-525866599","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/1286","id":525866599,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTg2NjU5OQ==","user":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true},"created_at":"2019-08-28T18:27:26Z","updated_at":"2019-08-28T18:27:44Z","author_association":"CONTRIBUTOR","body":"@mateiz regarding the data types, I think it makes sense to have the simple ones you mentioned. Another way to represent the data is to say it consists of a list of features and each feature has a name and a type of FloatVector, IntVector, ByteVector etc similar to [tfexample.proto](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/example/example.proto). ","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/525866599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"avflor","id":18666312,"node_id":"MDQ6VXNlcjE4NjY2MzEy","avatar_url":"https://avatars.githubusercontent.com/u/18666312?v=4","gravatar_id":"","url":"https://api.github.com/users/avflor","html_url":"https://github.com/avflor","followers_url":"https://api.github.com/users/avflor/followers","following_url":"https://api.github.com/users/avflor/following{/other_user}","gists_url":"https://api.github.com/users/avflor/gists{/gist_id}","starred_url":"https://api.github.com/users/avflor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avflor/subscriptions","organizations_url":"https://api.github.com/users/avflor/orgs","repos_url":"https://api.github.com/users/avflor/repos","events_url":"https://api.github.com/users/avflor/events{/privacy}","received_events_url":"https://api.github.com/users/avflor/received_events","type":"User","site_admin":true}},{"id":2591516116,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjU5MTUxNjExNg==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2591516116","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-08-28T18:27:26Z","performed_via_github_app":null},{"id":2591516117,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI1OTE1MTYxMTc=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2591516117","actor":{"login":"mateiz","id":228859,"node_id":"MDQ6VXNlcjIyODg1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/228859?v=4","gravatar_id":"","url":"https://api.github.com/users/mateiz","html_url":"https://github.com/mateiz","followers_url":"https://api.github.com/users/mateiz/followers","following_url":"https://api.github.com/users/mateiz/following{/other_user}","gists_url":"https://api.github.com/users/mateiz/gists{/gist_id}","starred_url":"https://api.github.com/users/mateiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mateiz/subscriptions","organizations_url":"https://api.github.com/users/mateiz/orgs","repos_url":"https://api.github.com/users/mateiz/repos","events_url":"https://api.github.com/users/mateiz/events{/privacy}","received_events_url":"https://api.github.com/users/mateiz/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-08-28T18:27:26Z","performed_via_github_app":null}]