[{"id":2930614130,"node_id":"MDEyOkxhYmVsZWRFdmVudDI5MzA2MTQxMzA=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2930614130","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2020-01-08T10:19:13Z","label":{"name":"enhancement","color":"a2eeef"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/572428359","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-572428359","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":572428359,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjQyODM1OQ==","user":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"created_at":"2020-01-09T07:26:12Z","updated_at":"2020-01-09T07:26:25Z","author_association":"COLLABORATOR","body":"Thanks @hhsecond for filing this, it'd be great to make MLflow model deployment more pluggable. \r\n\r\nIt'd be helpful to fully list out the options & tradeoffs (pros/cons) for the CLI & programmatic API.\r\n\r\nFor example, another option to consider is exposing pluggable deployment functionality under the `mlflow models` CLI (e.g. `mlflow models deploy ...` and `mlflow.models.deploy(...)`), for ease of discoverability given that we already have `mlflow models serve` and `mlflow models predict` CLI commands. We could also consider exposing deploy functionality through `mlflow models serve` (currently deploys a model for local serving but could be extended to deploy elsewhere), although I think users might be confused by the name.\r\n\r\nWe should also explicitly write out answers to the following\r\n* How will developers write/specify plugins (likely via a similar mechanism to [existing tracking/artifact plugins](https://github.com/smurching/mlflow/blob/contributor-guide-plugins/docs/source/plugins.rst), i.e. using the [Python entry-point mechanism](https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins))? How will plugin names like “redisai” be mapped to deployment logic (Python entry-points should make this easy)?\r\n* What is the interface I implement as a plugin developer? A Python module with a `deploy(model_uri)` method? What does the API return? \r\n* Is the deploy functionality synchronous or asynchronous by default? What (if any) options and arguments should we expose?\r\n\r\n\r\nAnother question is how the deployment target (local vs redisai vs sagemaker etc) should be specified. When using the CLI, the target necessarily must be specified as a string. In code, we could start by specifying the target as a string, and maybe later allow users to alternatively pass a Python module containing a `deploy` method. The ability to specify a module explicitly might enable e.g. writing an MLflow script with self-contained deployment logic, but seems reasonable to start with a string in the CLI/API for consistency\r\n","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/572428359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false}},{"id":2933875395,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjkzMzg3NTM5NQ==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2933875395","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-01-09T07:26:12Z","performed_via_github_app":null},{"id":2933875399,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI5MzM4NzUzOTk=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2933875399","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-01-09T07:26:12Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/572433722","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-572433722","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":572433722,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjQzMzcyMg==","user":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"created_at":"2020-01-09T07:43:01Z","updated_at":"2020-01-09T07:43:17Z","author_association":"COLLABORATOR","body":"FWIW, I think the simple answer of \"mimic the existing tracking & artifact plugin mechanisms to make model deployment pluggable\" gets us pretty far, but would be good to just write out answers to the above questions - thanks :)","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/572433722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/573180947","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-573180947","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":573180947,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE4MDk0Nw==","user":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"created_at":"2020-01-10T19:50:54Z","updated_at":"2020-01-11T05:37:34Z","author_association":"CONTRIBUTOR","body":"`mlflow models deploy` (and `mlflow.models.deploy(...)` from the program seems to be the best way to go, IMO. Now, let me try answer your queries\r\n1. Yes, we can use the same entry point mechanism with {`group`: `key` = `value`} where, group could be `mlflow.deployment`, key is the name of the plugin (or the target i.e `redisai`) and value is the module that has required functions  defined (such as `deploy` or `delete`)\r\n2. Two API methods I consider to implement are `deploy` and `delete`. I think it has to be a class (inherited from our plugin metaclass) that defines two abstract methods for `deploy` and `delete`. We should consider the possibility of other API methods such as `deploy-local` in the future. About what these APIs should return; I don't think anything but raise exceptions in case of failures. What do you think?\r\n3. I like the approach of what the current sagemaker API follows for synchronous/asynchronous decision i.e passing `synchronous=True` as an argument\r\n4. I think we should not do local vs others where local means `pyfunc`-based. Although local vs sagemaker make sense because sagemaker is remote only, however, deployment tools like redisai, tensorflow serving can run locally as well. So what I'd say is to make `run-local` an API method that could be defined in the plugin if local deployment is possible for that particular plugin. For answering your question, I think passing string should be the way to go now. From program, we could do something like `mlflow.models.deploy(targe='redisai')` or `mlflow.models.deploy(plugin='redisai')` or something similar. This would avoid the need of passing `deploy` function and let `mlflow` pick the plugin's `deploy` function. Did I process your thought correctly here or am I missing something obvious?\r\n\r\nLet me know what do you think","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/573180947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/573466582","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-573466582","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":573466582,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzQ2NjU4Mg==","user":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"created_at":"2020-01-12T22:53:57Z","updated_at":"2020-01-12T22:57:00Z","author_association":"COLLABORATOR","body":"@hhsecond that sounds reasonable to me. I have a couple of additional questions, largely aimed at fully fleshing out the CLI & API interface.\r\n\r\nFor 2 (which API methods to implement), you bring up a good point that there are multiple API methods (`deploy`, `delete`) we may want to require. In fact, looking at the `sagemaker` & `azureml` CLIs it seems reasonable that we'd want to allow plugins to define custom deployment subcommands in addition to `deploy` and `delete`.\r\n\r\nGiven that, I wonder if it makes sense to expose deployment functionality under `mlflow models deploy` after all. There are a few considerations here:\r\n\r\n## Question 1: What's the user workflow for running deployment CLI commands?\r\nFor example, assuming we go with `mlflow models deploy ...` we might have something like:\r\n\r\nFinding commands under top-level MLflow namespace:\r\n\r\n```\r\nmlflow --help\r\n* run\r\n* server\r\n* ui\r\n* models\r\n* sagemaker [deprecated, see models CLI instead]\r\n* azureml [deprecated, see models CLI instead]\r\n...\r\n```\r\n\r\nFinding subcommands under models CLI\r\n```\r\nmlflow models --help\r\n* deploy\r\n* serve\r\n* predict\r\n```\r\n\r\nFinding subcommands under `deploy` CLI (maybe this is where plugins are exposed?)\r\n```\r\nmlflow models deploy --help\r\n* sagemaker\r\n* azureml\r\n\r\nNo plugins detected. Additional model deployment targets (e.g. redisai) can be made available by installing the appropriate plugin. See mlflow.org/docs/latest/plugins.html for more information\r\n```\r\n\r\nLooking up subcommands (including custom subcommands) within individual deployment targets:\r\n```\r\nmlflow models deploy sagemaker --help\r\n* create\r\n* delete\r\n* run-local\r\n* build-and-push-container\r\n````\r\n\r\nActually deploy a model:\r\n\r\n```\r\nmlflow models deploy sagemaker create runs:/myrunid/mymodel\r\n```\r\n\r\nNote that the CLI command ends up being pretty unwieldy - maybe if we exposed the commands under e.g. an `mlflow deploy` namespace it'd be slightly better (e.g. `mlflow deploy sagemaker create runs:/myrunid/mymodel`). I'd hesitate to just directly expose the subcommands under the top-level `mlflow` namespace as `mlflow redisai deploy` etc as this could lead to collisions with other non-model-deployment CLI functionality we add to the project later on. \r\n\r\n## Question 2: What does the programmatic workflow look like for calling custom deployment subcommands?\r\n\r\n### Option 1: Initially, don't allow calling programmatically calling custom subcommands \r\n\r\nIn this option, MLflow provides no Python API for calling custom deployment plugin subcommands, like Sagemaker's `run_local` or `build_and_push_container`, and instead just exposes APIs for standard subcommands like `create` & `deploy`:\r\n\r\n```\r\nmlflow.models.deploy.create(model_uri=\"...\", target=\"redisai\", *args, **kwargs)\r\nmlflow.models.deploy.delete(target=\"redisai\", *args, **kwargs)\r\n```\r\n\r\nIf users want to call custom subcommands, they should directly import the plugin & invoke its methods:\r\n```\r\nfrom redis_mlflow_plugin import run_local\r\nrun_local(model_uri=\"...\", *args, **kwargs)\r\n```\r\n\r\n### Option 2: Allow users to programmatically call custom subcommands\r\n\r\nThis seems difficult to achieve in a clean/Pythonic way, at least AFAICT. We could dynamically discover these custom subcommands (e.g. expose a function like `mlflow.models.deploy.run_local` if the `redisai` plugin is installed), but users would be confused about where this function comes from/surprised that simply installing MLflow is insufficient for calling it.\r\n\r\n## Question 3: How should users pass plugin-specific arguments to deployment APIs?\r\n\r\n### Option 1: Via a dictionary of plugin-specific keyword arguments\r\n\r\nFor example (if `target_config` is the argument name):\r\n```\r\nmlflow.models.deploy.create(model_uri=\"...\", target=\"sagemaker\", target_config={\"name\": \"mySagemakerDeployment\", \"instance_type\": \"i3.xlarge\"}\r\n```\r\n\r\n### Option 2: Via extra keyword args\r\nThe example in option 1 now becomes:\r\n```\r\nmlflow.models.deploy.create(model_uri=\"...\", target=\"sagemaker\", name=\"mySagemakerDeployment\", instance_type=\"i3.xlarge\")\r\n```\r\n\r\nIMO the main tradeoff here is extensibility to adding new cross-plugin arguments to model-deployment methods, e.g. a `synchronous` argument, vs ease of use (it's easier to pass keyword arguments than a dictionary IMO). Will ask other committers for thoughts - I lean towards the keyword argument approach, as I feel it's unlikely we'd add more cross-plugin deployment arguments.\r\n","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/573466582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false}},{"id":2941564764,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50Mjk0MTU2NDc2NA==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2941564764","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-01-12T22:53:57Z","performed_via_github_app":null},{"id":2941564766,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI5NDE1NjQ3NjY=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2941564766","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-01-12T22:53:57Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/573466813","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-573466813","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":573466813,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzQ2NjgxMw==","user":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"created_at":"2020-01-12T22:56:14Z","updated_at":"2020-01-12T22:56:14Z","author_association":"COLLABORATOR","body":"Sorry, I know that was a lot of text, but would welcome your thoughts. I'll schedule a review of this design w/ other committers early this coming week. Given your deadline, if you want to get started with an initial implementation (by assuming specific answers to the questions above), feel free to do so - the only caveat is we may end up having to refactor it depending on the outcome of the design review","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/573466813/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/573532555","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-573532555","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":573532555,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzUzMjU1NQ==","user":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"created_at":"2020-01-13T07:02:06Z","updated_at":"2020-01-13T07:02:06Z","author_association":"CONTRIBUTOR","body":"@smurching Thanks a ton for the extensive review. Here are my thoughts\r\n### Question 1\r\nI have been assuming all the deployment tools such as sagemaker & azureml would go out of the core of MLFlow and become a plugin as per the comment from Paul (in slack). If that is the case, what would be the most used workflow here.\r\n- User doesn't have any plugin installed initially\r\n- User installs the plugin he/she needs i.e They'll mostly have only one plugin installed. If this is the case, `mlflow models deploy` can pick it up magically without user specifying the target name in the command at all. User can specify plugin specific commands as CLI options which is then passed to the plugin as `**kwargs`. So the `host`, `port` and `username` arguments from below would go to `redisai`'s deploy function as keyword arguments.\r\n```\r\nmlflow models deploy <model uri> --host my_redisai_server --port 6379 --username myname\r\nmlflow models delete <name/key pointing to the deployed model>\r\n```\r\nOne caveat I see here is `mlflow models deploy --help` would not bring any information about plugin specific arguments and users should rely completely on the plugin's documentation\r\n\r\n- If User installs multiple plugins, let's say one for `redisai` and another for `sagemaker`. We can make the target as an option and user could specify which target to pick by `mlflow models deploy --target redisai`. We can even go ahead and make the MLModel file keeps the default deployment option for each flavor as well (thinking aloud here)\r\n\r\nGiving flexibility to plugin developers to create their own command (like given below) is not something I'd prefer because plugin developers could mess up the UI and make really bad CLIs. \r\n```\r\nmlflow models deploy sagemaker --help\r\n* create\r\n* delete\r\n* run-local\r\n* build-and-push-container\r\n```\r\nMy thought is to keep few commands we know they need for sure and let them do any operations under those command - like deploying to docker hub can execute under `deploy` itself instead of `dockerhub-push` or something similar. Also, if plugin developers wants their own CLI, they can expose that as part of their package. \r\n```\r\nmlflow_redisai crazy command\r\n```\r\nBut you know your community way better than me :)\r\nSo if I failed to convince you above limiting the CLI options, then `deploy` itself is not required and we could group it under `serve` as you were initially suggesting.\r\n```\r\nmlflow models serve sagemaker --help\r\n* create\r\n* delete\r\n* run-local\r\n* build-and-push-container\r\n```\r\n\r\n### Question 2\r\nI like the option 1 here and that sort of goes hand in hand with my suggestion above about Question 1. \r\n\r\n### Question 3\r\nI like the second option here but I don't think we should limit the extensibility here in anyways. Can't we take any keyword arguments users pass under `**kwargs` and pass it downstream for the plugins to process? Or am I missing something?\r\n\r\n\r\nI have the basic version of what I had suggested initially coded up already and will wait for the final design before I make any intensive efforts. Also, I assume I beat you with the quantity of the text here, sorry about that too","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/573532555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false}},{"id":2942049669,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50Mjk0MjA0OTY2OQ==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2942049669","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-01-13T07:02:06Z","performed_via_github_app":null},{"id":2942049674,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI5NDIwNDk2NzQ=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2942049674","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-01-13T07:02:06Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/574031822","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-574031822","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":574031822,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDAzMTgyMg==","user":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"created_at":"2020-01-14T06:56:37Z","updated_at":"2020-01-14T07:00:05Z","author_association":"COLLABORATOR","body":"Thanks @hhsecond, some more thoughts inline:\r\n\r\n### Question 1\r\n\r\n> User installs the plugin he/she needs i.e They'll mostly have only one plugin installed. If this is the case, mlflow models deploy can pick it up magically without user specifying the target name in the command at all. User can specify plugin specific commands as CLI options which is then passed to the plugin as **kwargs. So the host, port and username arguments from below would go to redisai's deploy function as keyword arguments.\r\n>\r\n> ```mlflow models deploy <model uri> --host my_redisai_server --port 6379 --username myname```\r\n\r\n\r\n:) this is a creative way to simplify the CLI (& I agree often users won't install many different plugins), but I think we should avoid this as it'll make it hard for users to reproduce deployment commands, since the behavior of the same deployment command may differ across machines/environments based on which plugins are installed. Personally I'd prefer a command like ```mlflow models deploy redisai <model uri> --host my_redisai_server --port 6379 --username myname``` as it's clear from reading the command how it'll behave, but will check this with the other committers tomorrow.\r\n\r\nI'll also ask about the ideal end state for the `sagemaker` and `azureml` deploy functionality, but agree that at least initially we don't need to reimplement/refactor them to use the deployment plugin.\r\n\r\n> If User installs multiple plugins, let's say one for redisai and another for sagemaker. We can make the target as an option and user could specify which target to pick by mlflow models deploy --target redisai. We can even go ahead and make the MLModel file keeps the default deployment option for each flavor as well (thinking aloud here)\r\n\r\nIf possible (I think `click`, the Python library we use for our CLI, probably allows dynamically registering subcommands & command groups?), it'd be nice to drop the `--target` from the command, & just be able to invoke `mlflow models deploy redisai <model-uri> --host ...`. It's a good point that we may not want plugin authors to write their own CLIs, & I'm ok with disallowing custom CLI commands at least initially.\r\n\r\nMaybe the approach we take could be to dynamically register a command group with the name of the plugin (e.g. \"redisai\", resulting in a `mlflow deploy redisai` command group), and then expose the `create` & `delete` functions of the plugin module as `create` & `delete` CLIs. Let me know if that makes sense\r\n\r\n### Question 3\r\n\r\n> I like the second option here but I don't think we should limit the extensibility here in anyways. Can't we take any keyword arguments users pass under **kwargs and pass it downstream for the plugins to process? Or am I missing something?\r\n\r\nYep, forwarding keyword arguments under **kwargs to the plugin is what we'd do with the keyword-argument approach (option 2). The only limitation of option 2 is exactly this - that we must forward all keyword arguments to the plugin & can't add new arguments that are handled by MLflow / not exposed to the plugin.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/574031822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false}},{"id":2945881405,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50Mjk0NTg4MTQwNQ==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2945881405","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-01-14T06:56:37Z","performed_via_github_app":null},{"id":2945881406,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI5NDU4ODE0MDY=","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/2945881406","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-01-14T06:56:37Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/574040830","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-574040830","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":574040830,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDA0MDgzMA==","user":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"created_at":"2020-01-14T07:26:03Z","updated_at":"2020-01-14T11:13:43Z","author_association":"CONTRIBUTOR","body":"All of these were the answers I was looking for. I think I am in good position to start the development effort. Just to collate the whole discussion output here and what I'll be working on.\r\n\r\n## CLI\r\nA note here: Since we would group the CLI from plugins using click's `add_commands`, we won't be able to control the command options from the plugin i.e. plugin developer could create any optional commands along with `create` and `delete`\r\n```\r\nmlflow models serve/deploy <target> create <model-uri> [plugin specific options]\r\nmlflow models serve/deploy <target> delete <key-to-model> [plugin specific options]\r\n```\r\n\r\n\r\n## Python API\r\nAll the custom arguments to the plugin would be passed as keyword arguments through `**kwargs` downstream\r\n```\r\nmlflow.models.deploy.create(model_uri=\"...\", target=\"redisai\", *args, **kwargs)\r\nmlflow.models.deploy.delete(key=\"...\", target=\"redisai\", *args, **kwargs)\r\n```\r\n\r\n##### For custom API interfaces\r\n```\r\nfrom redis_mlflow_plugin import run_local\r\nrun_local(model_uri=\"...\", *args, **kwargs)\r\n```\r\n\r\n## Plugin's structure\r\n- Each plugin needs to inherit from the metaclass we define\r\n- The plugin class should expose the functionalities we defined as class methods i.e. `deploy` & `delete` (and perhaps some utility functions and property attributes) for now\r\n\r\n\r\nWe use the entry point mechanism to pick up the plugins with {`group`: `key` = `value`} where, group could be `mlflow.deployment`, key is the name of the plugin (or the target i.e `redisai`) and value is the module that has required functions  defined (such as `deploy` or `delete`)","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/574040830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/612176593","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-612176593","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":612176593,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMjE3NjU5Mw==","user":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false},"created_at":"2020-04-10T19:11:23Z","updated_at":"2020-04-10T19:11:23Z","author_association":"COLLABORATOR","body":"For linking purposes, mentioning #2327 here","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/612176593/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"smurching","id":2358483,"node_id":"MDQ6VXNlcjIzNTg0ODM=","avatar_url":"https://avatars.githubusercontent.com/u/2358483?v=4","gravatar_id":"","url":"https://api.github.com/users/smurching","html_url":"https://github.com/smurching","followers_url":"https://api.github.com/users/smurching/followers","following_url":"https://api.github.com/users/smurching/following{/other_user}","gists_url":"https://api.github.com/users/smurching/gists{/gist_id}","starred_url":"https://api.github.com/users/smurching/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smurching/subscriptions","organizations_url":"https://api.github.com/users/smurching/orgs","repos_url":"https://api.github.com/users/smurching/repos","events_url":"https://api.github.com/users/smurching/events{/privacy}","received_events_url":"https://api.github.com/users/smurching/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/643399211","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-643399211","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":643399211,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzM5OTIxMQ==","user":{"login":"dmatrix","id":1117597,"node_id":"MDQ6VXNlcjExMTc1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1117597?v=4","gravatar_id":"","url":"https://api.github.com/users/dmatrix","html_url":"https://github.com/dmatrix","followers_url":"https://api.github.com/users/dmatrix/followers","following_url":"https://api.github.com/users/dmatrix/following{/other_user}","gists_url":"https://api.github.com/users/dmatrix/gists{/gist_id}","starred_url":"https://api.github.com/users/dmatrix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dmatrix/subscriptions","organizations_url":"https://api.github.com/users/dmatrix/orgs","repos_url":"https://api.github.com/users/dmatrix/repos","events_url":"https://api.github.com/users/dmatrix/events{/privacy}","received_events_url":"https://api.github.com/users/dmatrix/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T17:34:25Z","updated_at":"2020-06-12T17:34:45Z","author_association":"CONTRIBUTOR","body":"This will serve as an exemplary document and discussion for future pluggable PRs for others to follow and read!","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/643399211/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dmatrix","id":1117597,"node_id":"MDQ6VXNlcjExMTc1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1117597?v=4","gravatar_id":"","url":"https://api.github.com/users/dmatrix","html_url":"https://github.com/dmatrix","followers_url":"https://api.github.com/users/dmatrix/followers","following_url":"https://api.github.com/users/dmatrix/following{/other_user}","gists_url":"https://api.github.com/users/dmatrix/gists{/gist_id}","starred_url":"https://api.github.com/users/dmatrix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dmatrix/subscriptions","organizations_url":"https://api.github.com/users/dmatrix/orgs","repos_url":"https://api.github.com/users/dmatrix/repos","events_url":"https://api.github.com/users/dmatrix/events{/privacy}","received_events_url":"https://api.github.com/users/dmatrix/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/645770403","html_url":"https://github.com/mlflow/mlflow/issues/2274#issuecomment-645770403","issue_url":"https://api.github.com/repos/mlflow/mlflow/issues/2274","id":645770403,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTc3MDQwMw==","user":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"created_at":"2020-06-18T04:49:47Z","updated_at":"2020-06-18T04:49:47Z","author_association":"CONTRIBUTOR","body":"This is implemented and merged to master","reactions":{"url":"https://api.github.com/repos/mlflow/mlflow/issues/comments/645770403/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false}},{"id":3456339210,"node_id":"MDExOkNsb3NlZEV2ZW50MzQ1NjMzOTIxMA==","url":"https://api.github.com/repos/mlflow/mlflow/issues/events/3456339210","actor":{"login":"hhsecond","id":13761737,"node_id":"MDQ6VXNlcjEzNzYxNzM3","avatar_url":"https://avatars.githubusercontent.com/u/13761737?v=4","gravatar_id":"","url":"https://api.github.com/users/hhsecond","html_url":"https://github.com/hhsecond","followers_url":"https://api.github.com/users/hhsecond/followers","following_url":"https://api.github.com/users/hhsecond/following{/other_user}","gists_url":"https://api.github.com/users/hhsecond/gists{/gist_id}","starred_url":"https://api.github.com/users/hhsecond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hhsecond/subscriptions","organizations_url":"https://api.github.com/users/hhsecond/orgs","repos_url":"https://api.github.com/users/hhsecond/repos","events_url":"https://api.github.com/users/hhsecond/events{/privacy}","received_events_url":"https://api.github.com/users/hhsecond/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-06-18T04:49:47Z","state_reason":null,"performed_via_github_app":null}]