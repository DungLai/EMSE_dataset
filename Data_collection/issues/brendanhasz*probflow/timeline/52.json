[{"id":4159145309,"node_id":"MDEyOkxhYmVsZWRFdmVudDQxNTkxNDUzMDk=","url":"https://api.github.com/repos/brendanhasz/probflow/issues/events/4159145309","actor":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2020-12-31T07:40:57Z","label":{"name":"examples","color":"42ed17"},"performed_via_github_app":null},{"id":4159145324,"node_id":"MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQ0MTU5MTQ1MzI0","url":"https://api.github.com/repos/brendanhasz/probflow/issues/events/4159145324","actor":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"event":"added_to_project","commit_id":null,"commit_url":null,"created_at":"2020-12-31T07:40:57Z","project_card":{"id":52013569,"url":"https://api.github.com/projects/columns/cards/52013569","project_id":4889252,"project_url":"https://api.github.com/projects/4889252","column_name":"To do"},"performed_via_github_app":null},{"actor":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"created_at":"2020-12-31T07:41:21Z","updated_at":"2020-12-31T07:41:21Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/51","repository_url":"https://api.github.com/repos/brendanhasz/probflow","labels_url":"https://api.github.com/repos/brendanhasz/probflow/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/brendanhasz/probflow/issues/51/comments","events_url":"https://api.github.com/repos/brendanhasz/probflow/issues/51/events","html_url":"https://github.com/brendanhasz/probflow/pull/51","id":776851835,"node_id":"MDExOlB1bGxSZXF1ZXN0NTQ3MjczNjA5","number":51,"title":"Static posterior sampling","user":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-31T07:31:58Z","updated_at":"2021-01-01T02:36:46Z","closed_at":"2021-01-01T02:36:45Z","author_association":"OWNER","active_lock_reason":null,"draft":false,"repository":{"id":164249963,"node_id":"MDEwOlJlcG9zaXRvcnkxNjQyNDk5NjM=","name":"probflow","full_name":"brendanhasz/probflow","private":false,"owner":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"html_url":"https://github.com/brendanhasz/probflow","description":"A Python package for building Bayesian models with TensorFlow or PyTorch","fork":false,"url":"https://api.github.com/repos/brendanhasz/probflow","forks_url":"https://api.github.com/repos/brendanhasz/probflow/forks","keys_url":"https://api.github.com/repos/brendanhasz/probflow/keys{/key_id}","collaborators_url":"https://api.github.com/repos/brendanhasz/probflow/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/brendanhasz/probflow/teams","hooks_url":"https://api.github.com/repos/brendanhasz/probflow/hooks","issue_events_url":"https://api.github.com/repos/brendanhasz/probflow/issues/events{/number}","events_url":"https://api.github.com/repos/brendanhasz/probflow/events","assignees_url":"https://api.github.com/repos/brendanhasz/probflow/assignees{/user}","branches_url":"https://api.github.com/repos/brendanhasz/probflow/branches{/branch}","tags_url":"https://api.github.com/repos/brendanhasz/probflow/tags","blobs_url":"https://api.github.com/repos/brendanhasz/probflow/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/brendanhasz/probflow/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/brendanhasz/probflow/git/refs{/sha}","trees_url":"https://api.github.com/repos/brendanhasz/probflow/git/trees{/sha}","statuses_url":"https://api.github.com/repos/brendanhasz/probflow/statuses/{sha}","languages_url":"https://api.github.com/repos/brendanhasz/probflow/languages","stargazers_url":"https://api.github.com/repos/brendanhasz/probflow/stargazers","contributors_url":"https://api.github.com/repos/brendanhasz/probflow/contributors","subscribers_url":"https://api.github.com/repos/brendanhasz/probflow/subscribers","subscription_url":"https://api.github.com/repos/brendanhasz/probflow/subscription","commits_url":"https://api.github.com/repos/brendanhasz/probflow/commits{/sha}","git_commits_url":"https://api.github.com/repos/brendanhasz/probflow/git/commits{/sha}","comments_url":"https://api.github.com/repos/brendanhasz/probflow/comments{/number}","issue_comment_url":"https://api.github.com/repos/brendanhasz/probflow/issues/comments{/number}","contents_url":"https://api.github.com/repos/brendanhasz/probflow/contents/{+path}","compare_url":"https://api.github.com/repos/brendanhasz/probflow/compare/{base}...{head}","merges_url":"https://api.github.com/repos/brendanhasz/probflow/merges","archive_url":"https://api.github.com/repos/brendanhasz/probflow/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/brendanhasz/probflow/downloads","issues_url":"https://api.github.com/repos/brendanhasz/probflow/issues{/number}","pulls_url":"https://api.github.com/repos/brendanhasz/probflow/pulls{/number}","milestones_url":"https://api.github.com/repos/brendanhasz/probflow/milestones{/number}","notifications_url":"https://api.github.com/repos/brendanhasz/probflow/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/brendanhasz/probflow/labels{/name}","releases_url":"https://api.github.com/repos/brendanhasz/probflow/releases{/id}","deployments_url":"https://api.github.com/repos/brendanhasz/probflow/deployments","created_at":"2019-01-05T20:46:44Z","updated_at":"2022-11-16T14:31:26Z","pushed_at":"2022-08-10T20:50:04Z","git_url":"git://github.com/brendanhasz/probflow.git","ssh_url":"git@github.com:brendanhasz/probflow.git","clone_url":"https://github.com/brendanhasz/probflow.git","svn_url":"https://github.com/brendanhasz/probflow","homepage":"http://probflow.readthedocs.io","size":3387,"stargazers_count":152,"watchers_count":152,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":16,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":22,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["bayesian","bayesian-inference","bayesian-methods","bayesian-neural-networks","bayesian-statistics","data-science","machine-learning","python","pytorch","statistics","tensorflow"],"visibility":"public","forks":16,"open_issues":22,"watchers":152,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/brendanhasz/probflow/pulls/51","html_url":"https://github.com/brendanhasz/probflow/pull/51","diff_url":"https://github.com/brendanhasz/probflow/pull/51.diff","patch_url":"https://github.com/brendanhasz/probflow/pull/51.patch","merged_at":"2021-01-01T02:36:45Z"},"body":"This adds what I'm calling \"static posterior sampling\" (can't think of a better name for it... I believe Pyro calls it \"interception\", but that's even less clear...).  Basically, it lets you take repeated random samples from the posterior - but they're the same random sample!  For example, normally getting posterior samples gets you, you know, *samples* (i.e. they're different):\r\n\r\n```python\r\nparam = pf.Parameter()\r\nx1 = param.posterior_sample()\r\nx2 = param.posterior_sample()\r\nassert x1 != x2  # they're not the same!  obviously!\r\n```\r\n\r\nBut using the new `pf.Sampling(static=True)` context manager:\r\n\r\n```python\r\nx1 = param.posterior_sample()\r\nwith pf.Sampling(static=True):\r\n    x2 = param.posterior_sample()\r\n    x3 = param.posterior_sample()\r\nassert x1 != x2  # we are taking a random sample (i.e. it's different from MAP)\r\nassert x2 == x3  # but those samples are the same w/i context manager!\r\n```\r\n\r\nThis was inspired by some reinforcement learning applications: when we're doing Thompson sampling, we want to take the *same* posterior sample over the course of a trial, even though we have to take multiple samples and can't just do it in one big batch (b/c we have to take the sample, then run the environment simulation / actually see what happens before taking the next sample).  For example,\r\n\r\n```python\r\nfor i in range(n_trials):\r\n\r\n    # Take the same posterior sample at each timestep in this trial\r\n    # even though we're calling epistemic_sample multiple times!\r\n    with pf.Sampling(static=True):\r\n\r\n        for t in range(n_timesteps):\r\n\r\n            r_hat = model.epistemic_sample(state_action_pairs)\r\n\r\n            # select action w/ best r_hat\r\n\r\n            # update state/reward according to action\r\n\r\n    # update model\r\n```","reactions":{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/51/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/brendanhasz/probflow/issues/51/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"}]