{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/18","repository_url":"https://api.github.com/repos/brendanhasz/probflow","labels_url":"https://api.github.com/repos/brendanhasz/probflow/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/brendanhasz/probflow/issues/18/comments","events_url":"https://api.github.com/repos/brendanhasz/probflow/issues/18/events","html_url":"https://github.com/brendanhasz/probflow/issues/18","id":654485112,"node_id":"MDU6SXNzdWU2NTQ0ODUxMTI=","number":18,"title":"Probabilistic option for Dense, DenseNetwork, Embedding, and BatchNormalization","user":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"labels":[{"id":1181357314,"node_id":"MDU6TGFiZWwxMTgxMzU3MzE0","url":"https://api.github.com/repos/brendanhasz/probflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"assignees":[{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-07-10T03:36:53Z","updated_at":"2020-12-23T10:09:32Z","closed_at":"2020-12-23T09:51:57Z","author_association":"OWNER","active_lock_reason":null,"body":"Add a `probabilistic` kwarg (True or False) to Dense, DenseNetwork, Embedding, and BatchNormalization modules. \r\n\r\nThat way you can pretty easily do, say, a non-probabilistic net with a probabilistic linear layer on top (see [Snoek et al., 2015](https://arxiv.org/abs/1502.05700) and [Riquelme et al. 2018](https://arxiv.org/abs/1802.09127)):\r\n\r\n```python\r\nclass NeuralLinear(pf.ContinuousModel):\r\n\r\n    def __init__(self, units):\r\n        self.net = pf.DenseNetwork(units, probabilistic=False)\r\n        self.linear = pf.Dense(units[-1], 2, probabilistic=True)\r\n\r\n    def __call__(self, x):\r\n        a = self.linear(tf.math.relu(self.net(x)))\r\n        return pf.Normal(a[..., 0], tf.exp(a[..., 1]))\r\n```\r\n\r\nAnd, set whether you want your embeddings to be probabilistic or not (for Embedding).\r\n\r\n- [x] `probabilistic` kwarg for Dense\r\n- [x] tests\r\n- [x] `probabilistic` kwarg for DenseNetwork\r\n- [x] tests\r\n- [x] `probabilistic` kwarg for Embedding\r\n- [x] tests\r\n- [x] Add a “Neural Linear Model” section to the examples with the `NeuralLinear` example above.","closed_by":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/18/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/brendanhasz/probflow/issues/18/timeline","performed_via_github_app":null,"state_reason":"completed"}