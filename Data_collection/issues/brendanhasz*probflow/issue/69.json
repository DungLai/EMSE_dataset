{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/69","repository_url":"https://api.github.com/repos/brendanhasz/probflow","labels_url":"https://api.github.com/repos/brendanhasz/probflow/issues/69/labels{/name}","comments_url":"https://api.github.com/repos/brendanhasz/probflow/issues/69/comments","events_url":"https://api.github.com/repos/brendanhasz/probflow/issues/69/events","html_url":"https://github.com/brendanhasz/probflow/issues/69","id":995466064,"node_id":"I_kwDOCcpBa847VZtQ","number":69,"title":"Bayesian Network Implementation?","user":{"login":"vahndi","id":8841674,"node_id":"MDQ6VXNlcjg4NDE2NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/8841674?v=4","gravatar_id":"","url":"https://api.github.com/users/vahndi","html_url":"https://github.com/vahndi","followers_url":"https://api.github.com/users/vahndi/followers","following_url":"https://api.github.com/users/vahndi/following{/other_user}","gists_url":"https://api.github.com/users/vahndi/gists{/gist_id}","starred_url":"https://api.github.com/users/vahndi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vahndi/subscriptions","organizations_url":"https://api.github.com/users/vahndi/orgs","repos_url":"https://api.github.com/users/vahndi/repos","events_url":"https://api.github.com/users/vahndi/events{/privacy}","received_events_url":"https://api.github.com/users/vahndi/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-09-14T00:40:55Z","updated_at":"2021-09-14T00:40:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi Brendan, thanks for the library - really nice.\r\n\r\nI'm wondering if there's a way to construct a simple Bayes Net with mixed data types using `probflow`. The model I'm thinking of would look something like:\r\n* `A` -> `B`\r\n* `A` -> `C`\r\n* `B` -> `C`\r\n* \r\nwhere:\r\n* `A` is a Categorical Distribution (~5 categories)\r\n* `B` is a Continuous Distribution (probably Exponential but can be Normal)\r\n* `C` is a Bernoulli which takes A and C and classifies as a 1 or a 0\r\n\r\nI realize this looks a lot like a standard Logistic Regression model, but the difference is: \r\n* the inputs aren't independent (`A` -> `B`)\r\n* I'd like to use a Categorical Distribution for `A` instead of creating dummy variables\r\n\r\nDo you think this is possible by inheriting from `pf.CategoricalModel`? If so, any pointers on building it?\r\n\r\nCheers,\r\n\r\nVahndi","closed_by":null,"reactions":{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/69/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/brendanhasz/probflow/issues/69/timeline","performed_via_github_app":null,"state_reason":null}