{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/8","repository_url":"https://api.github.com/repos/brendanhasz/probflow","labels_url":"https://api.github.com/repos/brendanhasz/probflow/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/brendanhasz/probflow/issues/8/comments","events_url":"https://api.github.com/repos/brendanhasz/probflow/issues/8/events","html_url":"https://github.com/brendanhasz/probflow/issues/8","id":522662954,"node_id":"MDU6SXNzdWU1MjI2NjI5NTQ=","number":8,"title":"PyTorch distribution.mean() is weird for InverseGamma, Bernoulli, Categorical, and OneHotCategorical","user":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"labels":[{"id":1675951724,"node_id":"MDU6TGFiZWwxNjc1OTUxNzI0","url":"https://api.github.com/repos/brendanhasz/probflow/labels/PyTorch","name":"PyTorch","color":"f9b1bb","default":false,"description":"PyTorch-specific issues"},{"id":1675956977,"node_id":"MDU6TGFiZWwxNjc1OTU2OTc3","url":"https://api.github.com/repos/brendanhasz/probflow/labels/distributions","name":"distributions","color":"95e89d","default":false,"description":""}],"state":"open","locked":false,"assignee":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"assignees":[{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2019-11-14T06:54:23Z","updated_at":"2019-11-14T06:54:23Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"Some of PyTorch's distributions have weird `mean` behavior:\r\n\r\n* InverseGamma - PyTorch doesn't have an InverseGamma dist, so I created one using a TransformedDistribution, but then `mean` isn't implemented.  This means if you call `pf.Model.predict()` on a model w/ an InverseGamma parameter, it crashes.\r\n* Bernoulli - `mean` returns the actual mean (continuous between 0 and 1) but we'd want it to return the mode when using that dist as the observation distribution (can't really use it as the variational posterior b/c can't prop gradients short of [something like this](https://arxiv.org/abs/1611.01144)).  TFP's Bernoulli throws an error w/ mean, so ProbFlow is able to catch it and return the mode.\r\n* Categorical - `mean` returns `NaN`, and doesn't throw an error...  But again we'd want the mode when calling mean on it, when it's used as the observation distribution during `predict()`.\r\n\r\nProbably the only way to fix all these is to re-implement those distributions (in `probflow.utils.torch_distributions`), implementing or overriding the mean/mode properties so as to give the desired behavior.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/8/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/brendanhasz/probflow/issues/8/timeline","performed_via_github_app":null,"state_reason":null}