{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/25","repository_url":"https://api.github.com/repos/brendanhasz/probflow","labels_url":"https://api.github.com/repos/brendanhasz/probflow/issues/25/labels{/name}","comments_url":"https://api.github.com/repos/brendanhasz/probflow/issues/25/comments","events_url":"https://api.github.com/repos/brendanhasz/probflow/issues/25/events","html_url":"https://github.com/brendanhasz/probflow/issues/25","id":654519369,"node_id":"MDU6SXNzdWU2NTQ1MTkzNjk=","number":25,"title":"Convolutional modules","user":{"login":"brendanhasz","id":3465846,"node_id":"MDQ6VXNlcjM0NjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/3465846?v=4","gravatar_id":"","url":"https://api.github.com/users/brendanhasz","html_url":"https://github.com/brendanhasz","followers_url":"https://api.github.com/users/brendanhasz/followers","following_url":"https://api.github.com/users/brendanhasz/following{/other_user}","gists_url":"https://api.github.com/users/brendanhasz/gists{/gist_id}","starred_url":"https://api.github.com/users/brendanhasz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brendanhasz/subscriptions","organizations_url":"https://api.github.com/users/brendanhasz/orgs","repos_url":"https://api.github.com/users/brendanhasz/repos","events_url":"https://api.github.com/users/brendanhasz/events{/privacy}","received_events_url":"https://api.github.com/users/brendanhasz/received_events","type":"User","site_admin":false},"labels":[{"id":1181357314,"node_id":"MDU6TGFiZWwxMTgxMzU3MzE0","url":"https://api.github.com/repos/brendanhasz/probflow/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-07-10T05:23:54Z","updated_at":"2020-07-10T05:23:54Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"Add Bayesian `Conv1D` and `Conv2D` modules.\r\n\r\nLooks like maybe you can just get a sample from the filter's variational posteriors, then just pass the data and the sampled tensor through [`tf.ops.nn_ops.convolution`](https://github.com/tensorflow/tensorflow/blob/2b96f3662bd776e277f86997659e61046b56c315/tensorflow/python/ops/nn_ops.py#L925).","closed_by":null,"reactions":{"url":"https://api.github.com/repos/brendanhasz/probflow/issues/25/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/brendanhasz/probflow/issues/25/timeline","performed_via_github_app":null,"state_reason":null}