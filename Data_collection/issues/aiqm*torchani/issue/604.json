{"url":"https://api.github.com/repos/aiqm/torchani/issues/604","repository_url":"https://api.github.com/repos/aiqm/torchani","labels_url":"https://api.github.com/repos/aiqm/torchani/issues/604/labels{/name}","comments_url":"https://api.github.com/repos/aiqm/torchani/issues/604/comments","events_url":"https://api.github.com/repos/aiqm/torchani/issues/604/events","html_url":"https://github.com/aiqm/torchani/issues/604","id":1073235205,"node_id":"I_kwDOB5237M4_-EUF","number":604,"title":"Can't Allocate Memory Issue","user":{"login":"bartdemooij","id":71223233,"node_id":"MDQ6VXNlcjcxMjIzMjMz","avatar_url":"https://avatars.githubusercontent.com/u/71223233?v=4","gravatar_id":"","url":"https://api.github.com/users/bartdemooij","html_url":"https://github.com/bartdemooij","followers_url":"https://api.github.com/users/bartdemooij/followers","following_url":"https://api.github.com/users/bartdemooij/following{/other_user}","gists_url":"https://api.github.com/users/bartdemooij/gists{/gist_id}","starred_url":"https://api.github.com/users/bartdemooij/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bartdemooij/subscriptions","organizations_url":"https://api.github.com/users/bartdemooij/orgs","repos_url":"https://api.github.com/users/bartdemooij/repos","events_url":"https://api.github.com/users/bartdemooij/events{/privacy}","received_events_url":"https://api.github.com/users/bartdemooij/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-12-07T11:23:01Z","updated_at":"2021-12-17T14:25:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Dear,\r\n\r\nWhat would be the best way to perform high-performance molecular dynamics with ANI on a cluster? We run torchANI in combination with ASE. Currently, when running a box of 1000 ethanol molecules gives the following error when performing the BFGS optimisation:\r\n\r\n`\r\nwarnings.warn(\r\nTraceback (most recent call last):\r\n  File \"/home/bmooij/ANI_quality_check/MD_ethanol_quality_check_ANI.py\", line 49, in <module>\r\n    opt.run(fmax=1.0)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/ase/optimize/optimize.py\", line 269, in run\r\n    return Dynamics.run(self)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/ase/optimize/optimize.py\", line 156, in run\r\n    for converged in Dynamics.irun(self):\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/ase/optimize/optimize.py\", line 122, in irun\r\n    self.atoms.get_forces()\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/ase/atoms.py\", line 788, in get_forces\r\n    forces = self._calc.get_forces(self)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/ase/calculators/abc.py\", line 23, in get_forces\r\n    return self.get_property('forces', atoms)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/ase/calculators/calculator.py\", line 737, in get_property\r\n    self.calculate(atoms, [name], system_changes)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/torchani/ase.py\", line 82, in calculate\r\n    energy = self.model((species, coordinates), cell=cell, pbc=pbc).energies\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/torch/nn/modules/module.py\", line 1051, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/torchani/models.py\", line 106, in forward\r\n    species_aevs = self.aev_computer(species_coordinates, cell=cell, pbc=pbc)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/torch/nn/modules/module.py\", line 1051, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/torchani/aev.py\", line 533, in forward\r\n    aev = compute_aev(species, coordinates, self.triu_index, self.constants(), self.sizes, (cell, shifts))\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/torchani/aev.py\", line 288, in compute_aev\r\n    atom_index12, shifts = neighbor_pairs(species == -1, coordinates_, cell, shifts, Rcr)\r\n  File \"/home/bmooij/.conda/envs/py9/lib/python3.9/site-packages/torchani/aev.py\", line 171, in neighbor_pairs\r\n    shifts_all = torch.cat([shifts_center, shifts_outside])\r\nRuntimeError: [enforce fail at CPUAllocator.cpp:71] . DefaultCPUAllocator: can't allocate memory: you tried to allocate 26243892000 bytes. Error code 12 (Cannot allocate memory)\r\n`\r\n\r\n\r\nIt works fine if the box has few molecules in it (i.e. 125 ethanol), but starts to give this error for larger systems (i.e. 750 or 1000 ethanol). A system of 500 ethanol also seems to work, but is terribly slow.\r\n\r\nSome reproducible code (where file 'ethanol_1000.pdb' is a box of 1000 ethanol made with packmol):\r\n\r\n```\r\nfrom ase import Atoms\r\nfrom ase.optimize import BFGS\r\nimport torch\r\nimport torchani\r\nfrom Bio import PDB\r\n\r\n#Load box of ethanol\r\nparser = PDB.PDBParser()\r\nio = PDB.PDBIO()\r\nstruct = parser.get_structure('ethanol_1000', 'ethanol_1000.pdb')\r\npos = []\r\nfor model in struct:\r\n    for chain in model:\r\n        for residue in chain:\r\n            for atom in residue:\r\n                x,y,z = atom.get_coord()\r\n                pos.append([x,y,z])\r\nethanol = Atoms(1000*\"COH3CH3\", positions=pos)\r\nethanol.set_cell((46, 46, 46))\r\nethanol.set_pbc(True)\r\n\r\n#Setup calculator\r\ncalculator = torchani.models.ANI1ccx().ase()\r\nethanol.set_calculator(calculator)\r\n\r\n#Minimize the structure\r\nprint(\"Begin minimizing...\")\r\nopt = BFGS(ethanol)\r\nopt.run(fmax=1.0)\r\nprint()\r\n```\r\n\r\n\r\n\r\nBest regards,\r\n\r\nBart\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/aiqm/torchani/issues/604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/aiqm/torchani/issues/604/timeline","performed_via_github_app":null,"state_reason":null}