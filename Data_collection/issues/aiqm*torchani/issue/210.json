{"url":"https://api.github.com/repos/aiqm/torchani/issues/210","repository_url":"https://api.github.com/repos/aiqm/torchani","labels_url":"https://api.github.com/repos/aiqm/torchani/issues/210/labels{/name}","comments_url":"https://api.github.com/repos/aiqm/torchani/issues/210/comments","events_url":"https://api.github.com/repos/aiqm/torchani/issues/210/events","html_url":"https://github.com/aiqm/torchani/issues/210","id":433437551,"node_id":"MDU6SXNzdWU0MzM0Mzc1NTE=","number":210,"title":"Implement analytical stress inside ASE interface","user":{"login":"zasdfgbnm","id":1032377,"node_id":"MDQ6VXNlcjEwMzIzNzc=","avatar_url":"https://avatars.githubusercontent.com/u/1032377?v=4","gravatar_id":"","url":"https://api.github.com/users/zasdfgbnm","html_url":"https://github.com/zasdfgbnm","followers_url":"https://api.github.com/users/zasdfgbnm/followers","following_url":"https://api.github.com/users/zasdfgbnm/following{/other_user}","gists_url":"https://api.github.com/users/zasdfgbnm/gists{/gist_id}","starred_url":"https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zasdfgbnm/subscriptions","organizations_url":"https://api.github.com/users/zasdfgbnm/orgs","repos_url":"https://api.github.com/users/zasdfgbnm/repos","events_url":"https://api.github.com/users/zasdfgbnm/events{/privacy}","received_events_url":"https://api.github.com/users/zasdfgbnm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-04-15T19:15:55Z","updated_at":"2019-05-21T19:07:12Z","closed_at":"2019-05-21T19:07:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Numerical stress could be computed as in https://wiki.fysik.dtu.dk/ase/_modules/ase/calculators/calculator.html#Calculator.calculate_numerical_stress\r\n\r\n```python\r\n    def calculate_numerical_stress(self, atoms, d=1e-6, voigt=True):\r\n        \"\"\"Calculate numerical stress using finite difference.\"\"\"\r\n\r\n        stress = np.zeros((3, 3), dtype=float)\r\n\r\n        cell = atoms.cell.copy()\r\n        V = atoms.get_volume()\r\n        for i in range(3):\r\n            x = np.eye(3)\r\n            x[i, i] += d\r\n            atoms.set_cell(np.dot(cell, x), scale_atoms=True)\r\n            eplus = atoms.get_potential_energy(force_consistent=True)\r\n\r\n            x[i, i] -= 2 * d\r\n            atoms.set_cell(np.dot(cell, x), scale_atoms=True)\r\n            eminus = atoms.get_potential_energy(force_consistent=True)\r\n\r\n            stress[i, i] = (eplus - eminus) / (2 * d * V)\r\n            x[i, i] += d\r\n\r\n            j = i - 2\r\n            x[i, j] = d\r\n            x[j, i] = d\r\n            atoms.set_cell(np.dot(cell, x), scale_atoms=True)\r\n            eplus = atoms.get_potential_energy(force_consistent=True)\r\n\r\n            x[i, j] = -d\r\n            x[j, i] = -d\r\n            atoms.set_cell(np.dot(cell, x), scale_atoms=True)\r\n            eminus = atoms.get_potential_energy(force_consistent=True)\r\n\r\n            stress[i, j] = (eplus - eminus) / (4 * d * V)\r\n            stress[j, i] = stress[i, j]\r\n        atoms.set_cell(cell, scale_atoms=True)\r\n\r\n        if voigt:\r\n            return stress.flat[[0, 4, 8, 5, 2, 1]]\r\n        else:\r\n            return stress\r\n```","closed_by":{"login":"zasdfgbnm","id":1032377,"node_id":"MDQ6VXNlcjEwMzIzNzc=","avatar_url":"https://avatars.githubusercontent.com/u/1032377?v=4","gravatar_id":"","url":"https://api.github.com/users/zasdfgbnm","html_url":"https://github.com/zasdfgbnm","followers_url":"https://api.github.com/users/zasdfgbnm/followers","following_url":"https://api.github.com/users/zasdfgbnm/following{/other_user}","gists_url":"https://api.github.com/users/zasdfgbnm/gists{/gist_id}","starred_url":"https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zasdfgbnm/subscriptions","organizations_url":"https://api.github.com/users/zasdfgbnm/orgs","repos_url":"https://api.github.com/users/zasdfgbnm/repos","events_url":"https://api.github.com/users/zasdfgbnm/events{/privacy}","received_events_url":"https://api.github.com/users/zasdfgbnm/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/aiqm/torchani/issues/210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/aiqm/torchani/issues/210/timeline","performed_via_github_app":null,"state_reason":"completed"}