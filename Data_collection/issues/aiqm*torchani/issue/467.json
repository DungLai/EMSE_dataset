{"url":"https://api.github.com/repos/aiqm/torchani/issues/467","repository_url":"https://api.github.com/repos/aiqm/torchani","labels_url":"https://api.github.com/repos/aiqm/torchani/issues/467/labels{/name}","comments_url":"https://api.github.com/repos/aiqm/torchani/issues/467/comments","events_url":"https://api.github.com/repos/aiqm/torchani/issues/467/events","html_url":"https://github.com/aiqm/torchani/issues/467","id":622447523,"node_id":"MDU6SXNzdWU2MjI0NDc1MjM=","number":467,"title":"An error with nnp_traing.py","user":{"login":"hjh19970102","id":63036927,"node_id":"MDQ6VXNlcjYzMDM2OTI3","avatar_url":"https://avatars.githubusercontent.com/u/63036927?v=4","gravatar_id":"","url":"https://api.github.com/users/hjh19970102","html_url":"https://github.com/hjh19970102","followers_url":"https://api.github.com/users/hjh19970102/followers","following_url":"https://api.github.com/users/hjh19970102/following{/other_user}","gists_url":"https://api.github.com/users/hjh19970102/gists{/gist_id}","starred_url":"https://api.github.com/users/hjh19970102/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hjh19970102/subscriptions","organizations_url":"https://api.github.com/users/hjh19970102/orgs","repos_url":"https://api.github.com/users/hjh19970102/repos","events_url":"https://api.github.com/users/hjh19970102/events{/privacy}","received_events_url":"https://api.github.com/users/hjh19970102/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-05-21T11:50:22Z","updated_at":"2020-06-23T00:02:00Z","closed_at":"2020-06-23T00:02:00Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nDear developers,when I run the nn_training.py that you supplied in the content \"examples\" and get this error.\r\nIndexError: tensors used as indices must be long, byte or bool tensors.\r\nHere are the output:\r\nPython 3.7.3 (default, Mar 27 2019, 17:13:21) [MSC v.1915 64 bit (AMD64)]\r\nType \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\nIPython 7.4.0 -- An enhanced Interactive Python.\r\n\r\nrunfile('C:/Users/john/Desktop/ML/torchani-master/torchani/examples/nnp_training.py', wdir='C:/Users/john/Desktop/ML/torchani-master/torchani/examples')\r\nSelf atomic energies:  tensor([ -0.6078, -38.0497, -54.7041, -75.1696], dtype=torch.float64)\r\nANIModel(\r\n  (0): Sequential(\r\n    (0): Linear(in_features=384, out_features=160, bias=True)\r\n    (1): CELU(alpha=0.1)\r\n    (2): Linear(in_features=160, out_features=128, bias=True)\r\n    (3): CELU(alpha=0.1)\r\n    (4): Linear(in_features=128, out_features=96, bias=True)\r\n    (5): CELU(alpha=0.1)\r\n    (6): Linear(in_features=96, out_features=1, bias=True)\r\n  )\r\n  (1): Sequential(\r\n    (0): Linear(in_features=384, out_features=144, bias=True)\r\n    (1): CELU(alpha=0.1)\r\n    (2): Linear(in_features=144, out_features=112, bias=True)\r\n    (3): CELU(alpha=0.1)\r\n    (4): Linear(in_features=112, out_features=96, bias=True)\r\n    (5): CELU(alpha=0.1)\r\n    (6): Linear(in_features=96, out_features=1, bias=True)\r\n  )\r\n  (2): Sequential(\r\n    (0): Linear(in_features=384, out_features=128, bias=True)\r\n    (1): CELU(alpha=0.1)\r\n    (2): Linear(in_features=128, out_features=112, bias=True)\r\n    (3): CELU(alpha=0.1)\r\n    (4): Linear(in_features=112, out_features=96, bias=True)\r\n    (5): CELU(alpha=0.1)\r\n    (6): Linear(in_features=96, out_features=1, bias=True)\r\n  )\r\n  (3): Sequential(\r\n    (0): Linear(in_features=384, out_features=128, bias=True)\r\n    (1): CELU(alpha=0.1)\r\n    (2): Linear(in_features=128, out_features=112, bias=True)\r\n    (3): CELU(alpha=0.1)\r\n    (4): Linear(in_features=112, out_features=96, bias=True)\r\n    (5): CELU(alpha=0.1)\r\n    (6): Linear(in_features=96, out_features=1, bias=True)\r\n  )\r\n)\r\ntraining starting from epoch 1\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-1-2cb1151f51e5>\", line 1, in <module>\r\n    runfile('C:/Users/john/Desktop/ML/torchani-master/torchani/examples/nnp_training.py', wdir='C:/Users/john/Desktop/ML/torchani-master/torchani/examples')\r\n\r\n  File \"C:\\Users\\john\\Anaconda3\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 786, in runfile\r\n    execfile(filename, namespace)\r\n\r\n  File \"C:\\Users\\john\\Anaconda3\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 110, in execfile\r\n    exec(compile(f.read(), filename, 'exec'), namespace)\r\n\r\n  File \"C:/Users/john/Desktop/ML/torchani-master/torchani/examples/nnp_training.py\", line 289, in <module>\r\n    rmse = validate()\r\n\r\n  File \"C:/Users/john/Desktop/ML/torchani-master/torchani/examples/nnp_training.py\", line 265, in validate\r\n    _, predicted_energies = model((species, coordinates))\r\n\r\n  File \"C:\\Users\\john\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 541, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n\r\n  File \"C:\\Users\\john\\Anaconda3\\lib\\site-packages\\torchani\\nn.py\", line 100, in forward\r\n    input_ = module(input_, cell=cell, pbc=pbc)\r\n\r\n  File \"C:\\Users\\john\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 541, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n\r\n  File \"C:\\Users\\john\\Anaconda3\\lib\\site-packages\\torchani\\aev.py\", line 438, in forward\r\n    aev = compute_aev(species, coordinates, self.triu_index, self.constants(), self.sizes, None)\r\n\r\n  File \"C:\\Users\\john\\Anaconda3\\lib\\site-packages\\torchani\\aev.py\", line 309, in compute_aev\r\n    index = central_atom_index * num_species_pairs + triu_index[species12_[0], species12_[1]]\r\n\r\nIndexError: tensors used as indices must be long, byte or bool tensors\r\n\r\ncould you please give me some suggestions to solve that?Thanks a lot.","closed_by":{"login":"IgnacioJPickering","id":34223426,"node_id":"MDQ6VXNlcjM0MjIzNDI2","avatar_url":"https://avatars.githubusercontent.com/u/34223426?v=4","gravatar_id":"","url":"https://api.github.com/users/IgnacioJPickering","html_url":"https://github.com/IgnacioJPickering","followers_url":"https://api.github.com/users/IgnacioJPickering/followers","following_url":"https://api.github.com/users/IgnacioJPickering/following{/other_user}","gists_url":"https://api.github.com/users/IgnacioJPickering/gists{/gist_id}","starred_url":"https://api.github.com/users/IgnacioJPickering/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IgnacioJPickering/subscriptions","organizations_url":"https://api.github.com/users/IgnacioJPickering/orgs","repos_url":"https://api.github.com/users/IgnacioJPickering/repos","events_url":"https://api.github.com/users/IgnacioJPickering/events{/privacy}","received_events_url":"https://api.github.com/users/IgnacioJPickering/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/aiqm/torchani/issues/467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/aiqm/torchani/issues/467/timeline","performed_via_github_app":null,"state_reason":"completed"}