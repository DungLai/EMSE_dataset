{"url":"https://api.github.com/repos/aiqm/torchani/issues/616","repository_url":"https://api.github.com/repos/aiqm/torchani","labels_url":"https://api.github.com/repos/aiqm/torchani/issues/616/labels{/name}","comments_url":"https://api.github.com/repos/aiqm/torchani/issues/616/comments","events_url":"https://api.github.com/repos/aiqm/torchani/issues/616/events","html_url":"https://github.com/aiqm/torchani/issues/616","id":1190993837,"node_id":"I_kwDOB5237M5G_R-t","number":616,"title":"Unsupported atoms are simply ignored?","user":{"login":"RMeli","id":11348981,"node_id":"MDQ6VXNlcjExMzQ4OTgx","avatar_url":"https://avatars.githubusercontent.com/u/11348981?v=4","gravatar_id":"","url":"https://api.github.com/users/RMeli","html_url":"https://github.com/RMeli","followers_url":"https://api.github.com/users/RMeli/followers","following_url":"https://api.github.com/users/RMeli/following{/other_user}","gists_url":"https://api.github.com/users/RMeli/gists{/gist_id}","starred_url":"https://api.github.com/users/RMeli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RMeli/subscriptions","organizations_url":"https://api.github.com/users/RMeli/orgs","repos_url":"https://api.github.com/users/RMeli/repos","events_url":"https://api.github.com/users/RMeli/events{/privacy}","received_events_url":"https://api.github.com/users/RMeli/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-04-03T17:29:35Z","updated_at":"2022-04-03T21:32:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I would expect the following code to fail\r\n```python\r\nimport torch\r\nimport torchani\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\n\r\nmodel = torchani.models.ANI2x(periodic_table_index=True).to(device)\r\n\r\ncoordinates = torch.tensor([[[0.03192167, 0.00638559, 0.01301679],\r\n                             [-0.83140486, 0.39370209, -0.26395324],\r\n                             [-0.66518241, -0.84461308, 0.20759389],\r\n                             [0.45554739, 0.54289633, 0.81170881],\r\n                             [0.66091919, -0.16799635, -0.91037834]]],\r\n                           requires_grad=True, device=device)\r\n\r\n# Species with unsupported atomic number 42\r\nspecies = torch.tensor([[42, 1, 1, 1, 1]], device=device)\r\n\r\nenergy = model((species, coordinates)).energies\r\n```\r\nbut it works without error/warnings despite the unsupported atom\r\n```\r\nIn [12]: energy.item()\r\nOut[12]: -2.1059779035978243\r\n```\r\n\r\nIs this intended? I understand the need to ignore atoms internally due to padding, but ignoring input atoms silently feels very error-prone to me (from an user perspective).\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/aiqm/torchani/issues/616/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/aiqm/torchani/issues/616/timeline","performed_via_github_app":null,"state_reason":null}