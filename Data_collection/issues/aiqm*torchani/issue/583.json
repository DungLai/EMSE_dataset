{"url":"https://api.github.com/repos/aiqm/torchani/issues/583","repository_url":"https://api.github.com/repos/aiqm/torchani","labels_url":"https://api.github.com/repos/aiqm/torchani/issues/583/labels{/name}","comments_url":"https://api.github.com/repos/aiqm/torchani/issues/583/comments","events_url":"https://api.github.com/repos/aiqm/torchani/issues/583/events","html_url":"https://github.com/aiqm/torchani/issues/583","id":829557549,"node_id":"MDU6SXNzdWU4Mjk1NTc1NDk=","number":583,"title":"Loading the TorchAni model in c++  gives runtime error ","user":{"login":"ndonyapour","id":31333163,"node_id":"MDQ6VXNlcjMxMzMzMTYz","avatar_url":"https://avatars.githubusercontent.com/u/31333163?v=4","gravatar_id":"","url":"https://api.github.com/users/ndonyapour","html_url":"https://github.com/ndonyapour","followers_url":"https://api.github.com/users/ndonyapour/followers","following_url":"https://api.github.com/users/ndonyapour/following{/other_user}","gists_url":"https://api.github.com/users/ndonyapour/gists{/gist_id}","starred_url":"https://api.github.com/users/ndonyapour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ndonyapour/subscriptions","organizations_url":"https://api.github.com/users/ndonyapour/orgs","repos_url":"https://api.github.com/users/ndonyapour/repos","events_url":"https://api.github.com/users/ndonyapour/events{/privacy}","received_events_url":"https://api.github.com/users/ndonyapour/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-03-11T22:02:17Z","updated_at":"2021-10-29T20:30:09Z","closed_at":"2021-10-29T20:30:09Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, \r\nI'm trying to load the TorchAni model (`compiled_model.pt') in the c++ using libtorch however, it gives the following error\r\n\r\n```\r\nsuccessfully loaded the model\r\nlibc++abi.dylib: terminating with uncaught exception of type std::runtime_error: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript, serialized code (most recent call last):\r\n  File \"code/__torch__/torchani/aev.py\", line 53, in forward\r\n      _5, cell0 = False, unchecked_cast(Tensor, cell)\r\n    if _5:\r\n      aev0 = __torch__.torchani.aev.compute_aev(species, coordinates, self.triu_index, (self).constants(), (4, 16, 64, 32, 320), None, )\r\n             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n      aev = aev0\r\n    else:\r\n  File \"code/__torch__/torchani/aev.py\", line 119, in compute_aev\r\n  radial_aev = torch.new_zeros(radial_terms_, [_20, radial_sublength], dtype=None, layout=None, device=None, pin_memory=None)\r\n  index12 = torch.add(torch.mul(atom_index12, num_species), torch.flip(species12, [0]), alpha=1)\r\n  _21 = torch.index_add_(radial_aev, 0, torch.select(index12, 0, 0), radial_terms_)\r\n        ~~~~~~~~~~~~~~~~ <--- HERE\r\n  _22 = torch.index_add_(radial_aev, 0, torch.select(index12, 0, 1), radial_terms_)\r\n  _23 = [num_molecules, num_atoms, radial_length]\r\n\r\nTraceback of TorchScript, original code (most recent call last):\r\n  File \"/Users/nazanin/programs/torchani/torchani/aev.py\", line 302, in compute_aev\r\n    radial_aev = radial_terms_.new_zeros((num_molecules * num_atoms * num_species, radial_sublength))\r\n    index12 = atom_index12 * num_species + species12.flip(0)\r\n    radial_aev.index_add_(0, index12[0], radial_terms_)\r\n    ~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n    radial_aev.index_add_(0, index12[1], radial_terms_)\r\n    radial_aev = radial_aev.reshape(num_molecules, num_atoms, radial_length)\r\nRuntimeError: index_add_(): Expected dtype int32/int64 for index\r\n```\r\nHere is my code \r\n```\r\nint main(int argc, const char* argv[]) {\r\n\r\n  // Get the path of model\r\n  if (argc != 2) {\r\n\tstd::cerr << \"usage: test_model <path-to-exported-script-module>\\n\";\r\n\treturn -1;\r\n  }\r\n\r\n  torch::jit::script::Module model;\r\n  torch::Device device(torch::kCPU);\r\n  try {\r\n\t// Deserialize the ScriptModule from a file using torch::jit::load().\r\n\tmodel = torch::jit::load(argv[1]);\r\n\tstd::cout << \"successfully loaded the model\\n\";\r\n  }\r\n\r\n  catch (const c10::Error& e) {\r\n\tstd::cerr << \"error loading the model\\n\";\r\n\treturn -1;\r\n  }\r\n\r\n   // Set the model properties\r\n   model.to(device);\r\n   model.to(torch::kDouble);\r\n\r\n   // Define the input variables\r\n   std::vector<torch::jit::IValue> inputs;\r\n\r\n   std::tuple<torch::Tensor, torch::Tensor> in={species, positions};\r\n   inputs.push_back(in);\r\n   //inputs.push_back(species);\r\n\r\n   // Run the model\r\n   torch::Tensor output = model.forward(inputs).toTensor();\r\n\r\n }\r\n```","closed_by":{"login":"yueyericardo","id":9999318,"node_id":"MDQ6VXNlcjk5OTkzMTg=","avatar_url":"https://avatars.githubusercontent.com/u/9999318?v=4","gravatar_id":"","url":"https://api.github.com/users/yueyericardo","html_url":"https://github.com/yueyericardo","followers_url":"https://api.github.com/users/yueyericardo/followers","following_url":"https://api.github.com/users/yueyericardo/following{/other_user}","gists_url":"https://api.github.com/users/yueyericardo/gists{/gist_id}","starred_url":"https://api.github.com/users/yueyericardo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yueyericardo/subscriptions","organizations_url":"https://api.github.com/users/yueyericardo/orgs","repos_url":"https://api.github.com/users/yueyericardo/repos","events_url":"https://api.github.com/users/yueyericardo/events{/privacy}","received_events_url":"https://api.github.com/users/yueyericardo/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/aiqm/torchani/issues/583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/aiqm/torchani/issues/583/timeline","performed_via_github_app":null,"state_reason":"completed"}