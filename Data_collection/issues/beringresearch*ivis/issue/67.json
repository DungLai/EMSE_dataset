{"url":"https://api.github.com/repos/beringresearch/ivis/issues/67","repository_url":"https://api.github.com/repos/beringresearch/ivis","labels_url":"https://api.github.com/repos/beringresearch/ivis/issues/67/labels{/name}","comments_url":"https://api.github.com/repos/beringresearch/ivis/issues/67/comments","events_url":"https://api.github.com/repos/beringresearch/ivis/issues/67/events","html_url":"https://github.com/beringresearch/ivis/issues/67","id":607564279,"node_id":"MDU6SXNzdWU2MDc1NjQyNzk=","number":67,"title":"Distance-weighted random sampling of non-neighbor negatives","user":{"login":"sheffe","id":3778733,"node_id":"MDQ6VXNlcjM3Nzg3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/3778733?v=4","gravatar_id":"","url":"https://api.github.com/users/sheffe","html_url":"https://github.com/sheffe","followers_url":"https://api.github.com/users/sheffe/followers","following_url":"https://api.github.com/users/sheffe/following{/other_user}","gists_url":"https://api.github.com/users/sheffe/gists{/gist_id}","starred_url":"https://api.github.com/users/sheffe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheffe/subscriptions","organizations_url":"https://api.github.com/users/sheffe/orgs","repos_url":"https://api.github.com/users/sheffe/repos","events_url":"https://api.github.com/users/sheffe/events{/privacy}","received_events_url":"https://api.github.com/users/sheffe/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-04-27T13:46:13Z","updated_at":"2020-04-28T16:01:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Not a fully-baked feature request, just a directional hunch. I've found the conclusions from this paper [Sampling Matters in Deep Embedding Learning](https://arxiv.org/abs/1706.07567) pretty intuitive -- (1) the method for choosing negative samples is critical to the overall embedding, maybe more than the specific loss function, and (2) a distance-weighted sampling of negatives had some nice properties during training and better results compared to uniform random sampling or oversampling hard cases.\r\n\r\nI'm brand-new to Annoy, not confident on the implementation details or performance changes here, but I suspect that the prebuilt index could be used for both positive and negative sampling. An example: the current approach draws random negatives in sequence and chooses the first index not in a neighbor list. A distance-weighted approach for choosing a negative for each triplet might work like this:\r\n- Draw a random set of _candidate_ negatives\r\n- Drop any candidate negatives already in the neighbor list\r\n- Choose from the remaining set of candidates with probabilities proportional to `1/f(dist(i, j))`, where `f(dist)` could be just `1/dist`, `1/sqrt(dist)`, etc\r\n\r\nAnnoy gives us the `dist(i, j)` without much of a performance hit. Weighted choice of the candidate negatives puts a (tunable) thumb on the scale for triplets that contain closer/harder-negative matches.\r\n\r\nThis idea probably does increase some hyperparameter selection headaches. I think the impactful choices here are the size of the initial set of candidate negatives and (especially) `f(dist)`. ","closed_by":null,"reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/67/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/beringresearch/ivis/issues/67/timeline","performed_via_github_app":null,"state_reason":null}