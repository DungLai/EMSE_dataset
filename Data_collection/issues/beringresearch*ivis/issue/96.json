{"url":"https://api.github.com/repos/beringresearch/ivis/issues/96","repository_url":"https://api.github.com/repos/beringresearch/ivis","labels_url":"https://api.github.com/repos/beringresearch/ivis/issues/96/labels{/name}","comments_url":"https://api.github.com/repos/beringresearch/ivis/issues/96/comments","events_url":"https://api.github.com/repos/beringresearch/ivis/issues/96/events","html_url":"https://github.com/beringresearch/ivis/issues/96","id":906860430,"node_id":"MDU6SXNzdWU5MDY4NjA0MzA=","number":96,"title":"Ivis seems to provoke errors when composing a sklearn.pipeline.Pipeline passed to sklearn.model_selection.GridSearchCV and executed in parallel","user":{"login":"imatheussm","id":4311541,"node_id":"MDQ6VXNlcjQzMTE1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/4311541?v=4","gravatar_id":"","url":"https://api.github.com/users/imatheussm","html_url":"https://github.com/imatheussm","followers_url":"https://api.github.com/users/imatheussm/followers","following_url":"https://api.github.com/users/imatheussm/following{/other_user}","gists_url":"https://api.github.com/users/imatheussm/gists{/gist_id}","starred_url":"https://api.github.com/users/imatheussm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imatheussm/subscriptions","organizations_url":"https://api.github.com/users/imatheussm/orgs","repos_url":"https://api.github.com/users/imatheussm/repos","events_url":"https://api.github.com/users/imatheussm/events{/privacy}","received_events_url":"https://api.github.com/users/imatheussm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-05-30T19:34:47Z","updated_at":"2021-06-03T05:50:38Z","closed_at":"2021-06-03T05:50:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# The problem\r\nI noticed that when Ivis compose a `sklearn.pipeline.Pipeline` which is passed to `sklearn.model_selection.GridSearch` to fine-tune hyper-parameters across all estimators/transformers, and `GridSearch` has `n_jobs=-1` (i.e., when executions within `GridSearch` are parallel), errors are thrown. This does not happen when `n_jobs=1` (i.e., when the executions within `GridSearch` are sequential).\r\n\r\nSince `Pipeline` globally regulates the `n_jobs` parameter, thus not supporting the parallelization of only specific steps, this problem forces the global use of `n_jobs=1`, which sensibly slows down the fine-tuning process by underusing the computational power of the setup in which the script is being executed (even in parts where `n_jobs=-1` would work).\r\n\r\n## Environment\r\nA virtual environment was created specifically to this repository, wherein all modules described in `requirements.txt` were installed. My setup runs an up-to-date version of Windows 10 (no WSL).\r\n\r\n### Runtime\r\n```\r\npython=3.8.4\r\n```\r\n\r\n### Relevant modules\r\n```\r\nivis=2.0.3\r\ntensorflow=2.5.0\r\n```\r\n\r\n## Minimal reproducible example\r\n### Code\r\n```\r\nif __name__ == \"__main__\":\r\n    import tempfile\r\n    import ivis\r\n\r\n    from sklearn import datasets, ensemble, model_selection, pipeline, preprocessing\r\n    from os import environ\r\n\r\n    environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"3\"\r\n\r\n    X, y = datasets.load_iris(return_X_y=True)\r\n\r\n    pipeline_with_ivis = pipeline.Pipeline([\r\n        (\"normalize\", preprocessing.MinMaxScaler()),\r\n        (\"project\", ivis.Ivis()),\r\n        (\"classify\", ensemble.RandomForestClassifier()),\r\n    ], memory=tempfile.mkdtemp())\r\n\r\n    parameter_grid = {\r\n        \"project__k\": (15,),\r\n        \"project__verbose\": (True,),\r\n\r\n        \"classify__random_state\": (2021,)\r\n    }\r\n\r\n    grid_search = model_selection.GridSearchCV(pipeline_with_ivis, parameter_grid, scoring=\"accuracy\", cv=10, n_jobs=-1,\r\n                                               return_train_score=True, verbose=3).fit(X, y)\r\n```\r\n\r\n### Error\r\n```\r\n<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\model_selection\\_validation.py:615: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: \r\nTraceback (most recent call last):\r\n  File \"<REPOSITORY_ROOT>\\ivis\\data\\neighbour_retrieval\\knn.py\", line 212, in extract_knn\r\n    process.start()\r\n  File \"C:\\Python38\\lib\\multiprocessing\\process.py\", line 121, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Python38\\lib\\multiprocessing\\context.py\", line 224, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\backend\\process.py\", line 39, in _Popen\r\n    return Popen(process_obj)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\backend\\popen_loky_win32.py\", line 70, in __init__\r\n    child_env.update(process_obj.env)\r\nAttributeError: 'KnnWorker' object has no attribute 'env'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\model_selection\\_validation.py\", line 598, in _fit_and_score\r\n    estimator.fit(X_train, y_train, **fit_params)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\pipeline.py\", line 341, in fit\r\n    Xt = self._fit(X, y, **fit_params_steps)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\pipeline.py\", line 303, in _fit\r\n    X, fitted_transformer = fit_transform_one_cached(\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\memory.py\", line 591, in __call__\r\n    return self._cached_call(args, kwargs)[0]\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\memory.py\", line 534, in _cached_call\r\n    out, metadata = self.call(*args, **kwargs)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\memory.py\", line 761, in call\r\n    output = self.func(*args, **kwargs)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\pipeline.py\", line 754, in _fit_transform_one\r\n    res = transformer.fit_transform(X, y, **fit_params)\r\n  File \"<REPOSITORY_ROOT>\\ivis\\ivis.py\", line 350, in fit_transform\r\n    self.fit(X, Y, shuffle_mode)\r\n  File \"<REPOSITORY_ROOT>\\ivis\\ivis.py\", line 328, in fit\r\n    self._fit(X, Y, shuffle_mode)\r\n  File \"<REPOSITORY_ROOT>\\ivis\\ivis.py\", line 190, in _fit\r\n    self.neighbour_matrix = AnnoyKnnMatrix.build(X, path=self.annoy_index_path,\r\n  File \"<REPOSITORY_ROOT>\\ivis\\data\\neighbour_retrieval\\knn.py\", line 63, in build\r\n    return cls(index, X.shape, path, k, search_k, precompute, include_distances, verbose)\r\n  File \"<REPOSITORY_ROOT>\\ivis\\data\\neighbour_retrieval\\knn.py\", line 48, in __init__\r\n    self.precomputed_neighbours = self.get_neighbour_indices()\r\n  File \"<REPOSITORY_ROOT>\\ivis\\data\\neighbour_retrieval\\knn.py\", line 96, in get_neighbour_indices\r\n    return extract_knn(\r\n  File \"<REPOSITORY_ROOT>\\ivis\\data\\neighbour_retrieval\\knn.py\", line 236, in extract_knn\r\n    process.terminate()\r\n  File \"C:\\Python38\\lib\\multiprocessing\\process.py\", line 133, in terminate\r\n    self._popen.terminate()\r\nAttributeError: 'NoneType' object has no attribute 'terminate'\r\n  warnings.warn(\"Estimator fit failed. The score on this train-test\"\r\n\r\n[...]\r\n\r\n<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\model_selection\\_search.py:922: UserWarning: One or more of the test scores are non-finite: [nan]\r\n  warnings.warn(\r\n```\r\n\r\n# Discussion\r\nBy coding and playing with the example above, I acquired the understanding that, since both `sklearn` uses `joblib` and `ivis` uses `multiprocessing`, these modules might not be playing well with each other for some reason.\r\n\r\nI would discard the understanding that nested estimators/transformers with parallel routines would be the problem: estimators like `sklearn.ensemble.RandomForestClassifier` can be set to have `n_jobs=-1` without problem within the `Pipeline` passed to `GridSearchCV`.\r\n\r\nI am particularly affected by this issue because I want to employ `ivis` in projects that involve hyper-parameter fine-tuning using cross-validation via `GridSearchCV` with concurrent executions. I attempted to diagnose the problem, but to no avail, which is why I bring this issue to your attention.\r\n\r\n**Observation:** another part of this problem is a design choice that is not adherent to the `sklearn` API guidelines, whose solution I propose and detail in #95. This issue does not cause the aforementioned error, but might cause other errors that could affect the same use scenario (`Pipeline` in `GridSearchCV` running in parallel).","closed_by":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/96/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/beringresearch/ivis/issues/96/timeline","performed_via_github_app":null,"state_reason":"completed"}