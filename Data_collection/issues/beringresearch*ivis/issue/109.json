{"url":"https://api.github.com/repos/beringresearch/ivis/issues/109","repository_url":"https://api.github.com/repos/beringresearch/ivis","labels_url":"https://api.github.com/repos/beringresearch/ivis/issues/109/labels{/name}","comments_url":"https://api.github.com/repos/beringresearch/ivis/issues/109/comments","events_url":"https://api.github.com/repos/beringresearch/ivis/issues/109/events","html_url":"https://github.com/beringresearch/ivis/issues/109","id":1044312374,"node_id":"I_kwDOCJ2sz84-PvE2","number":109,"title":"`KeyError` followed by `joblib.externals.loky.process_executor.BrokenProcessPool` when using `sklearn.model_selection.GridSearchCV` with `n_jobs != 1`","user":{"login":"imatheussm","id":4311541,"node_id":"MDQ6VXNlcjQzMTE1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/4311541?v=4","gravatar_id":"","url":"https://api.github.com/users/imatheussm","html_url":"https://github.com/imatheussm","followers_url":"https://api.github.com/users/imatheussm/followers","following_url":"https://api.github.com/users/imatheussm/following{/other_user}","gists_url":"https://api.github.com/users/imatheussm/gists{/gist_id}","starred_url":"https://api.github.com/users/imatheussm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imatheussm/subscriptions","organizations_url":"https://api.github.com/users/imatheussm/orgs","repos_url":"https://api.github.com/users/imatheussm/repos","events_url":"https://api.github.com/users/imatheussm/events{/privacy}","received_events_url":"https://api.github.com/users/imatheussm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-11-04T02:56:38Z","updated_at":"2021-11-08T17:09:49Z","closed_at":"2021-11-08T17:09:49Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# The issue\r\n\r\nWhenever using `sklearn.model_selection.GridSearch` with a `sklearn.pipeline.Pipeline` containing `ivis.Ivis` and `GridSearch` is set with `n_jobs != -1` (e.g., `n_jobs = 2`), errors happen. When `n_jobs = 1`, no errors occur.\r\n\r\n# Minimal reproducible example\r\n\r\n## Environment\r\n\r\nA virtual environment was created specifically for this project, wherein all modules specified in `requirements.txt` were installed. My setup runs an up-to-date version of Windows 10 (no WSL).  My local repository was based on a50b196735eecc2afc63423fe99b803107048572.\r\n\r\n### Runtime\r\n\r\n```\r\npython=3.9.5\r\n```\r\n\r\n### Relevant modules\r\n\r\n```\r\nivis=2.0.6\r\ntensorflow=2.6.0\r\n```\r\n\r\n## Example with `sklearn.pipeline.Pipeline`\r\n\r\n### Script\r\n\r\n```\r\nimport tempfile\r\nimport ivis\r\n\r\nfrom sklearn import datasets, ensemble, model_selection, pipeline, preprocessing, svm\r\n\r\n\r\nX, y = datasets.load_iris(return_X_y=True)\r\n\r\npipeline_with_ivis = pipeline.Pipeline([\r\n    (\"normalize\", preprocessing.MinMaxScaler()),\r\n    (\"project\", None),\r\n    (\"classify\", None),\r\n], memory=tempfile.mkdtemp())\r\n\r\nparameter_grid = {\r\n    \"project\": (ivis.Ivis(verbose=0),),\r\n    \"project__k\": (15,),\r\n\r\n    \"classify\": (ensemble.RandomForestClassifier(), svm.SVC()),\r\n    \"classify__random_state\": (2021,)\r\n}\r\n\r\ngrid_search = model_selection.GridSearchCV(pipeline_with_ivis, parameter_grid, scoring=\"accuracy\", cv=10, verbose=3,\r\n                                           return_train_score=True, error_score='raise', n_jobs=2).fit(X, y)\r\n```\r\n\r\n### Log with errors\r\n\r\n```\r\nFitting 10 folds for each of 2 candidates, totalling 20 fits\r\nexception calling callback for <Future at 0x29b2a280ca0 state=finished raised BrokenProcessPool>\r\njoblib.externals.loky.process_executor._RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\process_executor.py\", line 404, in _process_worker\r\n    call_item = call_queue.get(block=True, timeout=timeout)\r\n  File \"<USER_FOLDER>\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\queues.py\", line 122, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"<REPOSITORY_ROOT>\\ivis\\ivis.py\", line 211, in __setstate__\r\n    if state[key] is not None:\r\nKeyError: 'ivis_params_'\r\n\"\"\"\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\_base.py\", line 625, in _invoke_callbacks\r\n    callback(self)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 359, in __call__\r\n    self.parallel.dispatch_next()\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 792, in dispatch_next\r\n    if not self.dispatch_one_batch(self._original_iterator):\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 859, in dispatch_one_batch\r\n    self._dispatch(tasks)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 777, in _dispatch\r\n    job = self._backend.apply_async(batch, callback=cb)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\_parallel_backends.py\", line 531, in apply_async\r\n    future = self._workers.submit(SafeFunction(func))\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\reusable_executor.py\", line 177, in submit\r\n    return super(_ReusablePoolExecutor, self).submit(\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\process_executor.py\", line 1102, in submit\r\n    raise self._flags.broken\r\njoblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.\r\nERROR: The process with PID 29140 (child process of PID 27848) could not be terminated.\r\nReason: There is no running instance of the task.\r\njoblib.externals.loky.process_executor._RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\process_executor.py\", line 404, in _process_worker\r\n    call_item = call_queue.get(block=True, timeout=timeout)\r\n  File \"<USER_FOLDER>\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\queues.py\", line 122, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"<REPOSITORY_ROOT>\\ivis\\ivis.py\", line 211, in __setstate__\r\n    if state[key] is not None:\r\nKeyError: 'ivis_params_'\r\n\"\"\"\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"<USER_FOLDER>\\AppData\\Local\\JetBrains\\Toolbox\\apps\\PyCharm-P\\ch-0\\212.5284.44\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_umd.py\", line 198, in runfile\r\n    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script\r\n  File \"<USER_FOLDER>\\AppData\\Local\\JetBrains\\Toolbox\\apps\\PyCharm-P\\ch-0\\212.5284.44\\plugins\\python\\helpers\\pydev\\_pydev_imps\\_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"<REPOSITORY_ROOT>/playground.py\", line 74, in <module>\r\n    grid_search = model_selection.GridSearchCV(pipeline_with_ivis, parameter_grid, scoring=\"accuracy\", cv=10, verbose=3,\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\model_selection\\_search.py\", line 891, in fit\r\n    self._run_search(evaluate_candidates)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\model_selection\\_search.py\", line 1392, in _run_search\r\n    evaluate_candidates(ParameterGrid(self.param_grid))\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\sklearn\\model_selection\\_search.py\", line 838, in evaluate_candidates\r\n    out = parallel(\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 1054, in __call__\r\n    self.retrieve()\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 933, in retrieve\r\n    self._output.extend(job.get(timeout=self.timeout))\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\_parallel_backends.py\", line 542, in wrap_future_result\r\n    return future.result(timeout=timeout)\r\n  File \"<USER_FOLDER>\\AppData\\Local\\Programs\\Python\\Python39\\lib\\concurrent\\futures\\_base.py\", line 445, in result\r\n    return self.__get_result()\r\n  File \"<USER_FOLDER>\\AppData\\Local\\Programs\\Python\\Python39\\lib\\concurrent\\futures\\_base.py\", line 390, in __get_result\r\n    raise self._exception\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\_base.py\", line 625, in _invoke_callbacks\r\n    callback(self)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 359, in __call__\r\n    self.parallel.dispatch_next()\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 792, in dispatch_next\r\n    if not self.dispatch_one_batch(self._original_iterator):\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 859, in dispatch_one_batch\r\n    self._dispatch(tasks)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\parallel.py\", line 777, in _dispatch\r\n    job = self._backend.apply_async(batch, callback=cb)\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\_parallel_backends.py\", line 531, in apply_async\r\n    future = self._workers.submit(SafeFunction(func))\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\reusable_executor.py\", line 177, in submit\r\n    return super(_ReusablePoolExecutor, self).submit(\r\n  File \"<REPOSITORY_ROOT>\\venv\\lib\\site-packages\\joblib\\externals\\loky\\process_executor.py\", line 1102, in submit\r\n    raise self._flags.broken\r\njoblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.\r\n```\r\n\r\n# Discussion\r\n\r\nTo the best of my knowledge and local testing, this issue seems to appear after the resolution of #101 with #106. Since the logic for pickling and unpickling `Ivis` instances was improved, my belief is that this particular use case was not covered neither by the new implementation, nor by the newly added test cases. I reserved some time today to investigate this further, but so far, I was out of luck. Do you have any thoughts on this? Perhaps we could also create additional tests covering scenarios wherein `Pipeline` and `GridSearchCV` are used. Does this make sense?\r\n\r\nThank you beforehand for your support.","closed_by":{"login":"Szubie","id":13461031,"node_id":"MDQ6VXNlcjEzNDYxMDMx","avatar_url":"https://avatars.githubusercontent.com/u/13461031?v=4","gravatar_id":"","url":"https://api.github.com/users/Szubie","html_url":"https://github.com/Szubie","followers_url":"https://api.github.com/users/Szubie/followers","following_url":"https://api.github.com/users/Szubie/following{/other_user}","gists_url":"https://api.github.com/users/Szubie/gists{/gist_id}","starred_url":"https://api.github.com/users/Szubie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Szubie/subscriptions","organizations_url":"https://api.github.com/users/Szubie/orgs","repos_url":"https://api.github.com/users/Szubie/repos","events_url":"https://api.github.com/users/Szubie/events{/privacy}","received_events_url":"https://api.github.com/users/Szubie/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/beringresearch/ivis/issues/109/timeline","performed_via_github_app":null,"state_reason":"completed"}