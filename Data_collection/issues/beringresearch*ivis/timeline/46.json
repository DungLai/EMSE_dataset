[{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533872845","html_url":"https://github.com/beringresearch/ivis/issues/46#issuecomment-533872845","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/46","id":533872845,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzg3Mjg0NQ==","user":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"created_at":"2019-09-22T11:17:02Z","updated_at":"2019-09-22T11:17:02Z","author_association":"COLLABORATOR","body":"Hi - I think that it should be possible, as long as the data is appropriately shaped. Would you be able to provide a toy example?","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533872845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533918774","html_url":"https://github.com/beringresearch/ivis/issues/46#issuecomment-533918774","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/46","id":533918774,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzkxODc3NA==","user":{"login":"mojovski","id":90824,"node_id":"MDQ6VXNlcjkwODI0","avatar_url":"https://avatars.githubusercontent.com/u/90824?v=4","gravatar_id":"","url":"https://api.github.com/users/mojovski","html_url":"https://github.com/mojovski","followers_url":"https://api.github.com/users/mojovski/followers","following_url":"https://api.github.com/users/mojovski/following{/other_user}","gists_url":"https://api.github.com/users/mojovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mojovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mojovski/subscriptions","organizations_url":"https://api.github.com/users/mojovski/orgs","repos_url":"https://api.github.com/users/mojovski/repos","events_url":"https://api.github.com/users/mojovski/events{/privacy}","received_events_url":"https://api.github.com/users/mojovski/received_events","type":"User","site_admin":false},"created_at":"2019-09-22T21:06:38Z","updated_at":"2019-09-22T21:07:35Z","author_association":"NONE","body":"Hi @idroz ,\r\nthank you for your prompt response!\r\nI have uploaded the file to \r\nhttps://drive.google.com/open?id=1qo2R8Rz4dWvX9nMLQc50AVc1tb-PCZPg\r\n\r\nIt is a pickle file, with a dictionary inside `{'X':[...], 'Y':[...]}`\r\nX has dimensions (N, T, f) with N as the number of samples, T: number of time steps, f: as the feature dimension at a time stamp.\r\n\r\nHere is the file I am using right now to read the data and to apply ivis on a concatenated version.\r\n```py\r\n\"\"\"\r\nexperiments with ivis\r\n\"\"\"\r\nimport sys\r\nimport numpy as np\r\nimport matplotlib\r\n##set headless mode\r\n#matplotlib.use('Agg')\r\nfrom sklearn.manifold import TSNE\r\nfrom sklearn.manifold import LocallyLinearEmbedding\r\nfrom sklearn.manifold import SpectralEmbedding\r\nfrom sklearn.decomposition import PCA\r\nfrom sklearn.decomposition import KernelPCA\r\n\r\nimport pickle\r\nimport matplotlib.pyplot as plt\r\nimport time\r\nfrom sklearn.preprocessing import StandardScaler\r\nfrom sklearn.preprocessing import MaxAbsScaler\r\nfrom sklearn.preprocessing import MinMaxScaler\r\nfrom sklearn.externals import joblib\r\nimport logging\r\nimport argparse\r\n\r\nfrom sklearn.preprocessing import MinMaxScaler\r\nfrom collections.abc import Iterable\r\n\r\nrecfmt = '(%(threadName)s) %(asctime)s.%(msecs)03d %(levelname)s %(filename)s:%(lineno)d %(message)s'\r\ntimefmt = '%y%m%d_%H:%M:%S'\r\nlogging.basicConfig(filename=time.strftime(\"log/visualize_embedding.log\"), #%y%m%d_%H%M%S.log\"),\r\n                        filemode=\"w\",\r\n                        level=logging.INFO,\r\n                        format=recfmt, datefmt=timefmt)\r\n\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument(\"xy_file\", help=\"The X and Y data to be used. X:[[...], [...], ...], Y:[...]\")\r\nargs = parser.parse_args()\r\n\r\n\r\n\r\n\r\ndef binarizeY(y):\r\n\tyc=[]\r\n\tfor yi in y:\r\n\t\tif yi<0.1:\r\n\t\t\tyc.append(False)\r\n\t\telse:\r\n\t\t\tyc.append(True)\r\n\treturn np.array(yc)\r\n\r\ndef embedClassical(x,ygt, do_scaling=True, ndim=2):\r\n\r\n\txi=x\r\n\tif do_scaling:\r\n\t\txi= MinMaxScaler().fit_transform(x)\r\n\r\n\t\r\n\tygt=np.array(ygt)\r\n\r\n\tprint(\"x.shape: \"+str(xi.shape))\r\n\tprint(\"y.shape: \"+str(ygt.shape))\r\n\tprint(\"starting embedding process\")\r\n\r\n\t#X_embedded = TSNE(n_components=2).fit_transform(x, ygt)\r\n\t#X_embedded = LocallyLinearEmbedding(n_neighbors=5, method='modified').fit_transform(x,ygt)\r\n\t#X_embedded = SpectralEmbedding().fit_transform(x, ygt)\r\n\t#pca=PCA(n_components=2).fit(xi, ygt)\r\n\t#print(\"pca explains: \"+str(pca.explained_variance_))\r\n\tX_embedded = PCA(n_components=ndim).fit_transform(xi, ygt)\r\n\r\n\treturn X_embedded\r\n\r\ndef embedDeep(x,ygt, ndim=2, do_scaling=False, epochs=400):\r\n\tfrom tensorflow.python.keras import utils\r\n\tfrom ivis import Ivis\r\n\txi=x\r\n\t#print(\"x: \"+str(x))\r\n\tif do_scaling:\r\n\t\txi= MinMaxScaler().fit_transform(x)\r\n\r\n\t#see https://keras.io/metrics/ for more supervision metrics\r\n\tmodel = Ivis(embedding_dims=ndim, k=5, epochs=epochs)#, supervision_weight=0.01)#,  supervision_metric='mae')\r\n\tmodel.fit(xi, ygt)\r\n\tembeddings=model.transform(xi)\r\n\t\r\n\ty_pred = model.score_samples(xi)\r\n\tprint(\"pred err mean: \"+str(np.mean(y_pred)))\r\n\treturn embeddings\r\n\r\n\r\n\r\ndef plotEmbedding(X_embedded, ygt, title=\"\", bin_colors=True, colormap_name=\"jet\"):\r\n\ty_colors=ygt#binarizeY(ygt)\r\n\tif bin_colors:\r\n\t\ty_colors=binarizeY(ygt)\r\n\tprint(\"x_e.shape:\"+str(X_embedded.shape))\r\n\tprint(\"y_c.shape: \"+str(y_colors.shape))\r\n\r\n\tsc=plt.scatter(X_embedded[:,0], X_embedded[:,1], c=y_colors, cmap= plt.get_cmap(colormap_name))#, y_colors)\r\n\tplt.grid()\r\n\tplt.colorbar(sc)\r\n\t#plt.savefig(\"./log/vis_embedded.pdf\", bbox_inches='tight', format='pdf')\r\n\tplt.savefig(\"./log/vis_embedded_\"+title+\".png\", bbox_inches='tight')\r\n\tplt.show()\r\n\r\n\r\n\r\ndef classificationTest(x,y, do_scaling=False):\r\n\tfrom sklearn.linear_model import LogisticRegression\r\n\tfrom sklearn import tree, svm\r\n\r\n\tfrom sklearn.metrics import confusion_matrix, average_precision_score, roc_auc_score, classification_report\r\n\r\n\txe=embedDeep(x,y, do_scaling= do_scaling, epochs=500)\r\n\ty_bin=binarizeY(y)\r\n\t#clf=LogisticRegression(solver=\"lbfgs\").fit(xe, y_bin)\r\n\t#clf=tree.DecisionTreeClassifier(min_samples_split=10).fit(xe,y_bin)\r\n\tclf = svm.SVC(probability=True).fit(xe, y_bin)\r\n\r\n\tpred_labels = clf.predict(xe)\r\n\tproba = clf.predict_proba(xe)\r\n\t\r\n\tprint(classification_report(y_bin, pred_labels))\r\n\r\n\tprint('Confusion Matrix')\r\n\tprint(confusion_matrix(y_bin, pred_labels))\r\n\tprint('Average Precision: '+str(average_precision_score(y_bin, proba[:, 1])))\r\n\tprint('ROC AUC: '+str(roc_auc_score(y_bin, pred_labels)))\r\n\r\n\tplotSamples(xe, y, title=\"classification\")\r\n\r\n\tgenerateRegressionField(xe, y, clf, n=350, title=\"classification\")\r\n\r\n\r\ndef flatten1(lst):\r\n\tout=[]\r\n\tfor li in lst:\r\n\t\tif not isinstance(li, Iterable):\r\n\t\t\tout.append(li)\r\n\t\telse:\r\n\t\t\tfor lii in li:\r\n\t\t\t\tout.append(lii)\r\n\treturn out\r\n\r\n\r\ndef treeRegressionTest(x,y, do_scaling=False):\r\n\tfrom sklearn import tree\r\n\tfrom sklearn import linear_model\r\n\tfrom sklearn import svm\r\n\txe=embedDeep(x,y, ndim=2, do_scaling= do_scaling, epochs=305)\r\n\t#xe=embedClassical(x,y, ndim=2, do_scaling= do_scaling)\r\n\tclf = tree.DecisionTreeRegressor(min_samples_split=10)#max_depth=4)\r\n\t#clf=linear_model.Ridge(alpha=.5)\r\n\t#clf = svm.SVR()\r\n\r\n\tn2=int(len(xe)/2)\r\n\txe1=xe[:n2]\r\n\ty1=y[:n2]\r\n\r\n\txe2=xe[n2:]\r\n\ty2=y[n2:]\r\n\tclf = clf.fit(xe1, y1)\r\n\tscore=clf.score(xe2, y2)\r\n\t\r\n\tprint(\"Score with split: \"+str(score))\r\n\r\n\tclf = clf.fit(xe, y)\r\n\tscore=clf.score(xe, y)\r\n\tprint(\"Score w/o split: \"+str(score))\r\n\r\n\tmnx=np.min(xe[:,0])\r\n\tmxx=np.max(xe[:,0])\r\n\txnoisy=xe+np.random.rand(*xe.shape)*0.05*(mxx-mnx)\r\n\tscore=clf.score(xnoisy, y)\r\n\tprint(\"Score w/o split on xnoisy: \"+str(score))\r\n\r\n\tplotSamples(xe, y, title=\"regression\")\r\n\r\n\tgenerateRegressionField(xe, y, clf, n=350, title=\"regression\")\r\n\r\ndef plotSamples(x,y, title=\"\"):\r\n\tplt.scatter(x[:,0], x[:,1], c=y)\r\n\tplt.colorbar()\r\n\tplt.savefig(\"./log/vis_xy_embedding_scatter\"+title+\".png\")\r\n\tplt.show()\r\n\r\n\r\ndef generateRegressionField(x,y, clf, n, title=\"\"):\r\n\t\"\"\"\r\n\tgenerates an image of the regression results of the clf\r\n\t\"\"\"\r\n\tdata=np.zeros((n,n))\r\n\tmnx=np.min(x[:,0])\r\n\tmxx=np.max(x[:,0])\r\n\txnoisy=x+np.random.rand(*x.shape)*0.05*(mxx-mnx)\r\n\t\r\n\r\n\tmny=np.min(x[:,1])\r\n\tmxy=np.max(x[:,1])\r\n\t\r\n\tidr=-1\r\n\tfor ri in np.linspace(mny, mxy, n):\r\n\t\tidr+=1\r\n\t\tidc=-1\r\n\t\tfor ci in np.linspace(mnx, mxx, n):\r\n\t\t\tidc+=1\r\n\t\t\tvi=clf.predict_proba([[ri,ci]])[0][0]\r\n\t\t\tdata[idr, idc]=vi\r\n\r\n\tfig, (ax, ax2) = plt.subplots(2, sharex=False, sharey=False, figsize=(12, 5))\r\n\r\n\tax.imshow(np.flip(data, axis=0), alpha=1.0)\r\n\tax.set_title(\"regression reproduced\")\r\n\t#plt.colorbar()\r\n\t#plt.scatter((x[:,0]-mnx)/(mxx-mnx)*n, (x[:,1]-mny)/(mxy-mny)*n, c=y)\r\n\t#plt.show()\r\n\r\n\tax2.plot(y, color=\"black\")\r\n\typred=clf.predict(xnoisy)\r\n\tax2.plot(ypred, color=\"green\")\r\n\tax2.set_title(\"y\")\r\n\tax2.grid()\r\n\tplt.savefig(\"./log/vis_xy_embedding_space\"+title+\".png\")\r\n\r\n\tplt.show()\r\n\r\n\r\n\r\ndef seq2vec(x):\r\n\t\"\"\"\r\n\tproduces a single vector from F=(f[0], ... f[k]...f[T]) by concatenation\r\n\t:param x: a 3d list (N,T,f) with N: number of samples, T: number of time steps, f: feature dim\r\n\t:return: 2d list\r\n\t\"\"\"\r\n\tout=[]\r\n\tfor xi in x: #N\r\n\t\tvt=flatten1(xi)\r\n\t\tout.append(vt)\r\n\treturn out\r\n\r\n\r\nprint(\"Loading file: \"+str(args.xy_file))\r\ndata=pickle.load( open( args.xy_file, \"rb\" ) )\r\nygt  = np.array(data['Y'])\r\n\r\nx=seq2vec(data['X'])\r\n#x=np.array([np.array(xi) for xi in x]) #this does not work if the sublists have varying lengths\r\n#enforce same length of features. there is still something dirty..\r\nlength = max(map(len, x))\r\nif length!=min(map(len,x)):\r\n\tprint(\"WARNING! The sublists have varying lengths!\")\r\nx=np.array([xi+[0.]*(length-len(xi)) for xi in x])\r\n\r\n#pure embedding\r\n#----------------\r\n#x_embedded=embedClassical(x, ygt,  do_scaling=False)\r\n#x_embedded=embedDeep(x,ygt, do_scaling=True)\r\n#plotEmbedding(x_embedded, ygt)\r\n\r\n\r\n#embedding + some classification\r\n#--------------\r\nclassificationTest(x, ygt, do_scaling=True)\r\n#treeRegressionTest(x,ygt, do_scaling=True)\r\n```\r\n\r\nsorry, for the long file paste. The project in not on github...\r\n\r\nAnd thanks alot for your support.\r\n","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533918774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mojovski","id":90824,"node_id":"MDQ6VXNlcjkwODI0","avatar_url":"https://avatars.githubusercontent.com/u/90824?v=4","gravatar_id":"","url":"https://api.github.com/users/mojovski","html_url":"https://github.com/mojovski","followers_url":"https://api.github.com/users/mojovski/followers","following_url":"https://api.github.com/users/mojovski/following{/other_user}","gists_url":"https://api.github.com/users/mojovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mojovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mojovski/subscriptions","organizations_url":"https://api.github.com/users/mojovski/orgs","repos_url":"https://api.github.com/users/mojovski/repos","events_url":"https://api.github.com/users/mojovski/events{/privacy}","received_events_url":"https://api.github.com/users/mojovski/received_events","type":"User","site_admin":false}},{"id":2652895586,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjY1Mjg5NTU4Ng==","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2652895586","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-09-22T21:06:38Z","performed_via_github_app":null},{"id":2652895587,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI2NTI4OTU1ODc=","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2652895587","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-09-22T21:06:38Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533955710","html_url":"https://github.com/beringresearch/ivis/issues/46#issuecomment-533955710","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/46","id":533955710,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzk1NTcxMA==","user":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"created_at":"2019-09-23T04:23:27Z","updated_at":"2019-09-23T04:37:25Z","author_association":"COLLABORATOR","body":"Thanks for the code - it's pretty cool that you're using ivis as a classifier/regressor!\r\n\r\nThere are only a few tweaks that need to be done to get ivis to train on your data.\r\n\r\n**1. Classification vs. Regression**\r\nSupervised ivis doesn't impose a format on the response variable Y. Instead, the default option is to run a classifier. If you specify `supervision_metric='mae'` (or some other regression loss supported by keras), ivis will run in regression mode. The `embedDeep` method can be modified as:\r\n\r\n```py\r\ndef embedDeep(x, ygt, ndim=2, do_scaling=False, method='classification'):\r\n    from tensorflow.python.keras import utils\r\n    from ivis import Ivis\r\n    xi=x\r\n    #print(\"x: \"+str(x))\r\n    if do_scaling:\r\n        xi= MinMaxScaler().fit_transform(x)\r\n\r\n    #see https://keras.io/metrics/ for more supervision metrics\r\n    if method=='classification':\r\n        model = Ivis(embedding_dims=ndim, k=5, n_epochs_without_progress=5)\r\n    else:\r\n        model = Ivis(embedding_dims=ndim, k=5, n_epochs_without_progress=5, supervision_metric='mae', supervision_weight=0.9)\r\n    \r\n    model.fit(xi, ygt)\r\n    embeddings=model.transform(xi)\r\n    \r\n    y_pred = model.score_samples(xi)\r\n    print(\"pred err mean: \"+str(np.mean(y_pred)))\r\n    return embeddings\r\n```\r\n\r\n**2. Label binarisation**\r\nivis works with numpy arrays, and we can binarise Y as:\r\n\r\n```py\r\ndef binarizeY(y):    \r\n    return np.where(np.array(y)<0.1, 0, 1)\r\n```\r\nRun your binariser before invoking `ivis.fit` method in `classificationTest`:\r\n\r\n```py\r\ny_bin=binarizeY(y)\r\nxe=embedDeep(x, y_bin, do_scaling= do_scaling)\r\n```\r\n\r\n**3. Hyperparameter tuning**\r\nI would recommend changing default ivis parameters to:\r\n`k=15`, `model='maaten'`, and `n_epochs_without_progress=5`\r\n\r\nThis will converge a lot faster and won't overfit the data. We generally recommend leaving the `epochs` parameter set to the default value and tuning the early stopping parameter via `n_epochs_without_progress`\r\n\r\n`supervision_weight` is also a very interesting parameter as it controls the degree to which classifier focuses on supervision vs. unsupervised dimensionality reduction. Setting this value higher, e.g. 0.90 or 0.95 will produce desirable classifiers.\r\n\r\nIf you're interested in classification rather than visualisation, increasing `embedding_dims` could also be useful. Increasing dimensionality to 50 produces a reasonable AUC:\r\n\r\n>               precision    recall  f1-score   support\r\n> \r\n>            0       0.85      0.92      0.89       222\r\n>            1       0.92      0.85      0.88       233\r\n> \r\n>     accuracy                           0.88       455\r\n>    macro avg       0.89      0.88      0.88       455\r\n> weighted avg       0.89      0.88      0.88       455\r\n> \r\n> Confusion Matrix\r\n> [[205  17]\r\n>  [ 36 197]]\r\n> Average Precision: 0.966985040236684\r\n> ROC AUC: 0.8844584928275915\r\n\r\nThe jury is still out a little bit on how to best scale the data - MinMaxScaler, StandardScaler, or no scaling seem to work well depending on the dataset!\r\n","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533955710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false}},{"id":2653222207,"node_id":"MDEyOkxhYmVsZWRFdmVudDI2NTMyMjIyMDc=","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2653222207","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-09-23T05:00:55Z","label":{"name":"discussion","color":"f9b6b8"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533965610","html_url":"https://github.com/beringresearch/ivis/issues/46#issuecomment-533965610","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/46","id":533965610,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzk2NTYxMA==","user":{"login":"mojovski","id":90824,"node_id":"MDQ6VXNlcjkwODI0","avatar_url":"https://avatars.githubusercontent.com/u/90824?v=4","gravatar_id":"","url":"https://api.github.com/users/mojovski","html_url":"https://github.com/mojovski","followers_url":"https://api.github.com/users/mojovski/followers","following_url":"https://api.github.com/users/mojovski/following{/other_user}","gists_url":"https://api.github.com/users/mojovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mojovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mojovski/subscriptions","organizations_url":"https://api.github.com/users/mojovski/orgs","repos_url":"https://api.github.com/users/mojovski/repos","events_url":"https://api.github.com/users/mojovski/events{/privacy}","received_events_url":"https://api.github.com/users/mojovski/received_events","type":"User","site_admin":false},"created_at":"2019-09-23T05:40:25Z","updated_at":"2019-09-23T05:40:25Z","author_association":"NONE","body":"Thank you very much for your comments! They are very valuable to me.\n\nRegrading the sequence: would you concatenate the sequence data to a vector\nas it is done in my script?\n\nBest\n\n\nIgnat Drozdov <notifications@github.com> schrieb am Mo., 23. Sep. 2019,\n06:23:\n\n> Thanks for the code - it's pretty cool that you're using ivis as a\n> classifier/regressor!\n>\n> There are only a few tweaks that need to be done to get ivis to train on\n> your data.\n>\n> *1. Classification vs. Regression*\n> Supervised ivis doesn't impose format on the response variable Y. Instead,\n> the default option is to run a classifier. If you specify\n> supervision_metric='mae' (or some other regression loss supported by\n> keras), ivis will run in regression mode. The embedDeep method can be\n> modified as:\n>\n> def embedDeep(x, ygt, ndim=2, do_scaling=False, method='classification'):\n>     from tensorflow.python.keras import utils\n>     from ivis import Ivis\n>     xi=x\n>     #print(\"x: \"+str(x))\n>     if do_scaling:\n>         xi= MinMaxScaler().fit_transform(x)\n>\n>     #see https://keras.io/metrics/ for more supervision metrics\n>     if method=='classification':\n>         model = Ivis(embedding_dims=ndim, k=5, n_epochs_without_progress=5)\n>     else:\n>         model = Ivis(embedding_dims=ndim, k=5, n_epochs_without_progress=5, supervision_metric='mae', supervision_weight=0.9)\n>\n>     model.fit(xi, ygt)\n>     embeddings=model.transform(xi)\n>\n>     y_pred = model.score_samples(xi)\n>     print(\"pred err mean: \"+str(np.mean(y_pred)))\n>     return embeddings\n>\n> *2. Label binarisation*\n> ivis works with numpy arrays, and we can binarise Y as:\n>\n> def binarizeY(y):\n>     return np.where(np.array(y)<0.1, 0, 1)\n>\n> Run your binariser before invoking ivis.fit method in classificationTest:\n>\n> y_bin=binarizeY(y)\n> xe=embedDeep(x, y_bin, do_scaling= do_scaling)\n>\n> *3. Hyperparameter tuning*\n> I would recommend changing default ivis parameters to:\n> k=15, model='maaten', and n_epochs_without_progress=5\n>\n> This will converge a lot faster and won't overfit the data. We generally\n> recommend leaving the epochs parameter set to the default value and\n> tuning the early stopping parameter via n_epochs_without_progress\n>\n> supervision_weight is also a very interesting parameter as it controls\n> the degree to which classifier focuses on supervision vs. unsupervised\n> dimensionality reduction. Setting this value higher, e.g. 0.90 or 0.95 will\n> produce desirable classifiers.\n>\n> If you're interested in classification rather than visualisation,\n> increasing embedding_dims could also be useful.\n>\n> The jury is still out a little bit on how to best scale the data -\n> MinMaxScaler, StandardScaler, or no scaling seem to work well depending on\n> the dataset!\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/beringresearch/ivis/issues/46?email_source=notifications&email_token=AAAWFSB3N5DSOMXCSMWJ7HLQLBAEBA5CNFSM4IZCDTL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7JYI7Q#issuecomment-533955710>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAAWFSCQQITARWP4SEUIUKLQLBAEBANCNFSM4IZCDTLQ>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533965610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mojovski","id":90824,"node_id":"MDQ6VXNlcjkwODI0","avatar_url":"https://avatars.githubusercontent.com/u/90824?v=4","gravatar_id":"","url":"https://api.github.com/users/mojovski","html_url":"https://github.com/mojovski","followers_url":"https://api.github.com/users/mojovski/followers","following_url":"https://api.github.com/users/mojovski/following{/other_user}","gists_url":"https://api.github.com/users/mojovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mojovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mojovski/subscriptions","organizations_url":"https://api.github.com/users/mojovski/orgs","repos_url":"https://api.github.com/users/mojovski/repos","events_url":"https://api.github.com/users/mojovski/events{/privacy}","received_events_url":"https://api.github.com/users/mojovski/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533967148","html_url":"https://github.com/beringresearch/ivis/issues/46#issuecomment-533967148","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/46","id":533967148,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMzk2NzE0OA==","user":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"created_at":"2019-09-23T05:50:17Z","updated_at":"2019-09-23T05:50:17Z","author_association":"COLLABORATOR","body":"I think what you have is fine. You could also look into Keras' `pad_sequences` method, which I think does pretty much what you've written.\r\n\r\nIvis uses KNN retrieval as the first step in the algorithm, which relies on a 2-D array and doesn't support nested multidimensional lists.\r\n\r\nTheoretically, you could write your own base neural network using Keras layers and pass that into `model` hyperparameter. Something like:\r\n\r\n> Input -> Reshape -> 1DConv -> MaxPooling -> Dense\r\n\r\nYou could then pass the 2D array into ivis and let your base network do the rest. It may be an overkill, as `maaten` architecture (3 Dense layers 500-500-2000) will work well in most cases.","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/533967148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/534916123","html_url":"https://github.com/beringresearch/ivis/issues/46#issuecomment-534916123","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/46","id":534916123,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNDkxNjEyMw==","user":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"created_at":"2019-09-25T08:37:10Z","updated_at":"2019-09-25T08:37:10Z","author_association":"COLLABORATOR","body":"@mojovski Hope this helped you a bit. Will close the issue, but feel free to re-open if anything else is outstanding.","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/534916123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false}},{"id":2660792711,"node_id":"MDExOkNsb3NlZEV2ZW50MjY2MDc5MjcxMQ==","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2660792711","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2019-09-25T08:37:10Z","state_reason":null,"performed_via_github_app":null},{"id":2660792724,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjY2MDc5MjcyNA==","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2660792724","actor":{"login":"mojovski","id":90824,"node_id":"MDQ6VXNlcjkwODI0","avatar_url":"https://avatars.githubusercontent.com/u/90824?v=4","gravatar_id":"","url":"https://api.github.com/users/mojovski","html_url":"https://github.com/mojovski","followers_url":"https://api.github.com/users/mojovski/followers","following_url":"https://api.github.com/users/mojovski/following{/other_user}","gists_url":"https://api.github.com/users/mojovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mojovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mojovski/subscriptions","organizations_url":"https://api.github.com/users/mojovski/orgs","repos_url":"https://api.github.com/users/mojovski/repos","events_url":"https://api.github.com/users/mojovski/events{/privacy}","received_events_url":"https://api.github.com/users/mojovski/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-09-25T08:37:10Z","performed_via_github_app":null},{"id":2660792725,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI2NjA3OTI3MjU=","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2660792725","actor":{"login":"mojovski","id":90824,"node_id":"MDQ6VXNlcjkwODI0","avatar_url":"https://avatars.githubusercontent.com/u/90824?v=4","gravatar_id":"","url":"https://api.github.com/users/mojovski","html_url":"https://github.com/mojovski","followers_url":"https://api.github.com/users/mojovski/followers","following_url":"https://api.github.com/users/mojovski/following{/other_user}","gists_url":"https://api.github.com/users/mojovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mojovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mojovski/subscriptions","organizations_url":"https://api.github.com/users/mojovski/orgs","repos_url":"https://api.github.com/users/mojovski/repos","events_url":"https://api.github.com/users/mojovski/events{/privacy}","received_events_url":"https://api.github.com/users/mojovski/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-09-25T08:37:10Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/535169471","html_url":"https://github.com/beringresearch/ivis/issues/46#issuecomment-535169471","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/46","id":535169471,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNTE2OTQ3MQ==","user":{"login":"mojovski","id":90824,"node_id":"MDQ6VXNlcjkwODI0","avatar_url":"https://avatars.githubusercontent.com/u/90824?v=4","gravatar_id":"","url":"https://api.github.com/users/mojovski","html_url":"https://github.com/mojovski","followers_url":"https://api.github.com/users/mojovski/followers","following_url":"https://api.github.com/users/mojovski/following{/other_user}","gists_url":"https://api.github.com/users/mojovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mojovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mojovski/subscriptions","organizations_url":"https://api.github.com/users/mojovski/orgs","repos_url":"https://api.github.com/users/mojovski/repos","events_url":"https://api.github.com/users/mojovski/events{/privacy}","received_events_url":"https://api.github.com/users/mojovski/received_events","type":"User","site_admin":false},"created_at":"2019-09-25T19:13:02Z","updated_at":"2019-09-25T19:13:02Z","author_association":"NONE","body":"Thanks a lot! Will be able to continue the work on this in 2 weeks and, if appropriate, post some results.","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/535169471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mojovski","id":90824,"node_id":"MDQ6VXNlcjkwODI0","avatar_url":"https://avatars.githubusercontent.com/u/90824?v=4","gravatar_id":"","url":"https://api.github.com/users/mojovski","html_url":"https://github.com/mojovski","followers_url":"https://api.github.com/users/mojovski/followers","following_url":"https://api.github.com/users/mojovski/following{/other_user}","gists_url":"https://api.github.com/users/mojovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mojovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mojovski/subscriptions","organizations_url":"https://api.github.com/users/mojovski/orgs","repos_url":"https://api.github.com/users/mojovski/repos","events_url":"https://api.github.com/users/mojovski/events{/privacy}","received_events_url":"https://api.github.com/users/mojovski/received_events","type":"User","site_admin":false}}]