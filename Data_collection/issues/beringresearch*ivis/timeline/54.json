[{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/562527979","html_url":"https://github.com/beringresearch/ivis/issues/54#issuecomment-562527979","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/54","id":562527979,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjUyNzk3OQ==","user":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"created_at":"2019-12-06T10:55:53Z","updated_at":"2019-12-06T10:59:31Z","author_association":"COLLABORATOR","body":"Hi there - you can create an index first and then pass it to ivis. For example:\r\n\r\n```python\r\nfrom ivis import Ivis\r\nfrom ivis.data.knn import build_annoy_index\r\n\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.preprocessing import StandardScaler\r\n\r\ndata = load_iris()['data']\r\nX = StandardScaler().fit_transform(data)\r\n\r\n# Build the index here before initialising Ivis class\r\nbuild_annoy_index(X, 'some_other_annoy_index_name.index')\r\n\r\nivis = Ivis(annoy_index_path='some_other_annoy_index_name.index', k=15)\r\nxy = ivis.fit_transform(X)\r\n```\r\n\r\nThis is actually a preferred approach if you're running ivis on the same dataset multiple times - you only have to build the index once and then experiment with hyperparameters in the constructor.\r\n\r\nWe'll have a look at ``build_index_on_disk`` option.\r\n\r\nThanks for flagging this!","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/562527979/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/562778304","html_url":"https://github.com/beringresearch/ivis/issues/54#issuecomment-562778304","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/54","id":562778304,"node_id":"MDEyOklzc3VlQ29tbWVudDU2Mjc3ODMwNA==","user":{"login":"ForrestCKoch","id":13082844,"node_id":"MDQ6VXNlcjEzMDgyODQ0","avatar_url":"https://avatars.githubusercontent.com/u/13082844?v=4","gravatar_id":"","url":"https://api.github.com/users/ForrestCKoch","html_url":"https://github.com/ForrestCKoch","followers_url":"https://api.github.com/users/ForrestCKoch/followers","following_url":"https://api.github.com/users/ForrestCKoch/following{/other_user}","gists_url":"https://api.github.com/users/ForrestCKoch/gists{/gist_id}","starred_url":"https://api.github.com/users/ForrestCKoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ForrestCKoch/subscriptions","organizations_url":"https://api.github.com/users/ForrestCKoch/orgs","repos_url":"https://api.github.com/users/ForrestCKoch/repos","events_url":"https://api.github.com/users/ForrestCKoch/events{/privacy}","received_events_url":"https://api.github.com/users/ForrestCKoch/received_events","type":"User","site_admin":false},"created_at":"2019-12-06T23:20:01Z","updated_at":"2019-12-06T23:20:01Z","author_association":"NONE","body":"Thanks for the solution -- this will work well for me. I might suggest adding a note in your documentation, however, as it was not clear to me that I could not train the model on two different datasets simultaneously.  No warnings were thrown, and nothing crashed, so I might not have realized that my results were corrupted.\r\n\r\nI haven't found the overhead of creating the knn-index to be too bad, so I will probably just use a temp file for this.\r\n\r\nRegarding the `build_index_on_disk` issue, I should have given you some more information about my system:\r\n- CentOS Linux release 7.4.1708\r\n- Python version 3.6.6\r\n- Ivis version 1.6.0\r\n- Annoy version 1.16.2\r\n\r\nThanks for your help -- other than this it's been a very straightforward package to use.  I especially appreciate the scikit-learn style design!","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/562778304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"ForrestCKoch","id":13082844,"node_id":"MDQ6VXNlcjEzMDgyODQ0","avatar_url":"https://avatars.githubusercontent.com/u/13082844?v=4","gravatar_id":"","url":"https://api.github.com/users/ForrestCKoch","html_url":"https://github.com/ForrestCKoch","followers_url":"https://api.github.com/users/ForrestCKoch/followers","following_url":"https://api.github.com/users/ForrestCKoch/following{/other_user}","gists_url":"https://api.github.com/users/ForrestCKoch/gists{/gist_id}","starred_url":"https://api.github.com/users/ForrestCKoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ForrestCKoch/subscriptions","organizations_url":"https://api.github.com/users/ForrestCKoch/orgs","repos_url":"https://api.github.com/users/ForrestCKoch/repos","events_url":"https://api.github.com/users/ForrestCKoch/events{/privacy}","received_events_url":"https://api.github.com/users/ForrestCKoch/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/562853370","html_url":"https://github.com/beringresearch/ivis/issues/54#issuecomment-562853370","issue_url":"https://api.github.com/repos/beringresearch/ivis/issues/54","id":562853370,"node_id":"MDEyOklzc3VlQ29tbWVudDU2Mjg1MzM3MA==","user":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false},"created_at":"2019-12-07T13:57:17Z","updated_at":"2019-12-07T14:02:52Z","author_association":"COLLABORATOR","body":"Glad it works for you.\r\n\r\n``build_index_on_disk``\r\nThis option allows ivis to build annoy index directly to disk rather than RAM (as such, it is not used as a flag to save or not to save the index to disk). This is especially useful for datasets that don't fit into RAM. In both cases, an index file will be saved to disk. This was an initial design concept as it has several advantages:\r\n\r\n- You can actually interrupt and restart model training. Ivis will carry on from the point where it was interrupted\r\n- Building an index for very large files can take a long time (on some our datasets, as much as 24 hours). This was our own use case and hence the decision to save the index once and train from that\r\n- Saved model is reproducible. Given that annoy uses random projection trees, results are stochastic.\r\n\r\nI think you bring up an important point. Perhaps we could save an index as a temporary file, as that will potentially ensure its uniqueness. In either case, I've documented ``build_annoy_index`` method in library API (https://bering-ivis.readthedocs.io/en/latest/api.html#module-ivis.data.knn).\r\n\r\n@Szubie \r\nIndex naming logic could be:\r\n\r\n- if ``annoy_index_path`` == None\r\nCreate a temporary file name and save annoy index there.\r\n\r\n- if ``annoy_index_path`` == ``str``\r\nCheck if ``str`` exists on disk. If yes, load that index and use it. If not, create an index file with name ``str``.\r\n","reactions":{"url":"https://api.github.com/repos/beringresearch/ivis/issues/comments/562853370/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"idroz","id":12413294,"node_id":"MDQ6VXNlcjEyNDEzMjk0","avatar_url":"https://avatars.githubusercontent.com/u/12413294?v=4","gravatar_id":"","url":"https://api.github.com/users/idroz","html_url":"https://github.com/idroz","followers_url":"https://api.github.com/users/idroz/followers","following_url":"https://api.github.com/users/idroz/following{/other_user}","gists_url":"https://api.github.com/users/idroz/gists{/gist_id}","starred_url":"https://api.github.com/users/idroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idroz/subscriptions","organizations_url":"https://api.github.com/users/idroz/orgs","repos_url":"https://api.github.com/users/idroz/repos","events_url":"https://api.github.com/users/idroz/events{/privacy}","received_events_url":"https://api.github.com/users/idroz/received_events","type":"User","site_admin":false}},{"id":2863539390,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50Mjg2MzUzOTM5MA==","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2863539390","actor":{"login":"Szubie","id":13461031,"node_id":"MDQ6VXNlcjEzNDYxMDMx","avatar_url":"https://avatars.githubusercontent.com/u/13461031?v=4","gravatar_id":"","url":"https://api.github.com/users/Szubie","html_url":"https://github.com/Szubie","followers_url":"https://api.github.com/users/Szubie/followers","following_url":"https://api.github.com/users/Szubie/following{/other_user}","gists_url":"https://api.github.com/users/Szubie/gists{/gist_id}","starred_url":"https://api.github.com/users/Szubie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Szubie/subscriptions","organizations_url":"https://api.github.com/users/Szubie/orgs","repos_url":"https://api.github.com/users/Szubie/repos","events_url":"https://api.github.com/users/Szubie/events{/privacy}","received_events_url":"https://api.github.com/users/Szubie/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-12-07T14:02:22Z","performed_via_github_app":null},{"id":2863539391,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDI4NjM1MzkzOTE=","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2863539391","actor":{"login":"Szubie","id":13461031,"node_id":"MDQ6VXNlcjEzNDYxMDMx","avatar_url":"https://avatars.githubusercontent.com/u/13461031?v=4","gravatar_id":"","url":"https://api.github.com/users/Szubie","html_url":"https://github.com/Szubie","followers_url":"https://api.github.com/users/Szubie/followers","following_url":"https://api.github.com/users/Szubie/following{/other_user}","gists_url":"https://api.github.com/users/Szubie/gists{/gist_id}","starred_url":"https://api.github.com/users/Szubie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Szubie/subscriptions","organizations_url":"https://api.github.com/users/Szubie/orgs","repos_url":"https://api.github.com/users/Szubie/repos","events_url":"https://api.github.com/users/Szubie/events{/privacy}","received_events_url":"https://api.github.com/users/Szubie/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-12-07T14:02:22Z","performed_via_github_app":null},{"id":2863969995,"node_id":"MDExOkNsb3NlZEV2ZW50Mjg2Mzk2OTk5NQ==","url":"https://api.github.com/repos/beringresearch/ivis/issues/events/2863969995","actor":{"login":"ForrestCKoch","id":13082844,"node_id":"MDQ6VXNlcjEzMDgyODQ0","avatar_url":"https://avatars.githubusercontent.com/u/13082844?v=4","gravatar_id":"","url":"https://api.github.com/users/ForrestCKoch","html_url":"https://github.com/ForrestCKoch","followers_url":"https://api.github.com/users/ForrestCKoch/followers","following_url":"https://api.github.com/users/ForrestCKoch/following{/other_user}","gists_url":"https://api.github.com/users/ForrestCKoch/gists{/gist_id}","starred_url":"https://api.github.com/users/ForrestCKoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ForrestCKoch/subscriptions","organizations_url":"https://api.github.com/users/ForrestCKoch/orgs","repos_url":"https://api.github.com/users/ForrestCKoch/repos","events_url":"https://api.github.com/users/ForrestCKoch/events{/privacy}","received_events_url":"https://api.github.com/users/ForrestCKoch/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2019-12-08T05:07:10Z","state_reason":null,"performed_via_github_app":null}]