{"url":"https://api.github.com/repos/NLPatVCU/medaCy/issues/119","repository_url":"https://api.github.com/repos/NLPatVCU/medaCy","labels_url":"https://api.github.com/repos/NLPatVCU/medaCy/issues/119/labels{/name}","comments_url":"https://api.github.com/repos/NLPatVCU/medaCy/issues/119/comments","events_url":"https://api.github.com/repos/NLPatVCU/medaCy/issues/119/events","html_url":"https://github.com/NLPatVCU/medaCy/issues/119","id":424527121,"node_id":"MDU6SXNzdWU0MjQ1MjcxMjE=","number":119,"title":"Bad input array shape","user":{"login":"sarthak-tg","id":43419974,"node_id":"MDQ6VXNlcjQzNDE5OTc0","avatar_url":"https://avatars.githubusercontent.com/u/43419974?v=4","gravatar_id":"","url":"https://api.github.com/users/sarthak-tg","html_url":"https://github.com/sarthak-tg","followers_url":"https://api.github.com/users/sarthak-tg/followers","following_url":"https://api.github.com/users/sarthak-tg/following{/other_user}","gists_url":"https://api.github.com/users/sarthak-tg/gists{/gist_id}","starred_url":"https://api.github.com/users/sarthak-tg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sarthak-tg/subscriptions","organizations_url":"https://api.github.com/users/sarthak-tg/orgs","repos_url":"https://api.github.com/users/sarthak-tg/repos","events_url":"https://api.github.com/users/sarthak-tg/events{/privacy}","received_events_url":"https://api.github.com/users/sarthak-tg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-03-23T17:52:23Z","updated_at":"2019-03-24T18:06:04Z","closed_at":"2019-03-24T17:59:57Z","author_association":"NONE","active_lock_reason":null,"body":"#### Description\r\nI'm getting a error called could not broadcast input array from shape (96) into shape (128)\r\n#### Steps/Code to Reproduce\r\nimport medacy_model_clinical_notes\r\nfrom medacy.model import Model\r\nmodel = Model.load_external('medacy_model_clinical_notes')\r\nannotations = model.predict(\"The patient took 5 mg of aspirin.\")\r\n#### Expected Results\r\n{\r\n    'entities': {\r\n        'T3': ('Drug', 40, 45, 'Advil'),\r\n        'T1': ('Dosage', 27, 28, '1'), \r\n        'T2': ('Form', 29, 36, 'capsule'),\r\n        'T4': ('Duration', 46, 56, 'for 5 days')\r\n     },\r\n     'relations': []\r\n}\r\n#### Actual Results\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-49-1ddde9c61ed4> in <module>\r\n      6 #model = Model(pipeline)\r\n      7 f = open('/usr/local/lib/python3.6/dist-packages/medacy_model_clinical_notes/model/n2c2_2018_no_metamap_2018_12_22_16.49.17.pkl','rb')\r\n----> 8 model1 = medacy_model_clinical_notes.load()\r\n      9 #model = Model.load_external('medacy_model_clinical_notes')\r\n     10 f.close()\r\n\r\n/usr/local/lib/python3.6/dist-packages/medacy_model_clinical_notes/medacy_model_clinical_notes.py in load()\r\n      6 def load():\r\n      7     entities = ['Drug', 'Form', 'Route', 'ADE', 'Reason', 'Frequency', 'Duration', 'Dosage', 'Strength']\r\n----> 8     pipeline = ClinicalPipeline(entities=entities)\r\n      9     model = Model(pipeline, n_jobs=1)\r\n     10     model_directory = resource_filename('medacy_model_clinical_notes', 'model')\r\n\r\n/usr/local/lib/python3.6/dist-packages/medacy/pipelines/clinical_pipeline.py in __init__(self, metamap, entities)\r\n     22         description=\"\"\"Pipeline tuned for the extraction of ADE related entities from the 2018 N2C2 Shared Task\"\"\"\r\n     23         super().__init__(\"clinical_pipeline\",\r\n---> 24                          spacy_pipeline=spacy.load(\"en_core_web_sm\"),\r\n     25                          description=description,\r\n     26                          creators=\"Andriy Mulyar (andriymulyar.com)\", #append if multiple creators\r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/__init__.py in load(name, **overrides)\r\n     16     if depr_path not in (True, False, None):\r\n     17         deprecation_warning(Warnings.W001.format(path=depr_path))\r\n---> 18     return util.load_model(name, **overrides)\r\n     19 \r\n     20 \r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/util.py in load_model(name, **overrides)\r\n    112             return load_model_from_link(name, **overrides)\r\n    113         if is_package(name):  # installed as package\r\n--> 114             return load_model_from_package(name, **overrides)\r\n    115         if Path(name).exists():  # path to model data directory\r\n    116             return load_model_from_path(Path(name), **overrides)\r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/util.py in load_model_from_package(name, **overrides)\r\n    133     \"\"\"Load a model from an installed package.\"\"\"\r\n    134     cls = importlib.import_module(name)\r\n--> 135     return cls.load(**overrides)\r\n    136 \r\n    137 \r\n\r\n/usr/local/lib/python3.6/dist-packages/en_core_web_sm/__init__.py in load(**overrides)\r\n     10 \r\n     11 def load(**overrides):\r\n---> 12     return load_model_from_init_py(__file__, **overrides)\r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/util.py in load_model_from_init_py(init_file, **overrides)\r\n    171     if not model_path.exists():\r\n    172         raise IOError(Errors.E052.format(path=path2str(data_path)))\r\n--> 173     return load_model_from_path(data_path, meta, **overrides)\r\n    174 \r\n    175 \r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/util.py in load_model_from_path(model_path, meta, **overrides)\r\n    154             component = nlp.create_pipe(name, config=config)\r\n    155             nlp.add_pipe(component, name=name)\r\n--> 156     return nlp.from_disk(model_path)\r\n    157 \r\n    158 \r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/language.py in from_disk(self, path, disable)\r\n    645         if not (path / 'vocab').exists():\r\n    646             exclude['vocab'] = True\r\n--> 647         util.from_disk(path, deserializers, exclude)\r\n    648         self._path = path\r\n    649         return self\r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/util.py in from_disk(path, readers, exclude)\r\n    509     for key, reader in readers.items():\r\n    510         if key not in exclude:\r\n--> 511             reader(path / key)\r\n    512     return path\r\n    513 \r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/language.py in <lambda>(p, proc)\r\n    641             if not hasattr(proc, 'to_disk'):\r\n    642                 continue\r\n--> 643             deserializers[name] = lambda p, proc=proc: proc.from_disk(p, vocab=False)\r\n    644         exclude = {p: False for p in disable}\r\n    645         if not (path / 'vocab').exists():\r\n\r\npipeline.pyx in spacy.pipeline.Tagger.from_disk()\r\n\r\n/usr/local/lib/python3.6/dist-packages/spacy/util.py in from_disk(path, readers, exclude)\r\n    509     for key, reader in readers.items():\r\n    510         if key not in exclude:\r\n--> 511             reader(path / key)\r\n    512     return path\r\n    513 \r\n\r\npipeline.pyx in spacy.pipeline.Tagger.from_disk.load_model()\r\n\r\npipeline.pyx in spacy.pipeline.Tagger.from_disk.load_model()\r\n\r\n/usr/local/lib/python3.6/dist-packages/thinc/neural/_classes/model.py in from_bytes(self, bytes_data)\r\n    350                         name = name.decode('utf8')\r\n    351                     dest = getattr(layer, name)\r\n--> 352                     copy_array(dest, param[b'value'])\r\n    353                 i += 1\r\n    354             if hasattr(layer, '_layers'):\r\n\r\n/usr/local/lib/python3.6/dist-packages/thinc/neural/util.py in copy_array(dst, src, casting, where)\r\n     46 def copy_array(dst, src, casting='same_kind', where=None):\r\n     47     if isinstance(dst, numpy.ndarray) and isinstance(src, numpy.ndarray):\r\n---> 48         dst[:] = src\r\n     49     elif isinstance(dst, cupy.ndarray):\r\n     50         src = cupy.array(src, copy=False)\r\n\r\nValueError: could not broadcast input array from shape (96) into shape (128)\r\n#### Versions\r\n<!--\r\nPlease run the following snippet and paste the output below.\r\nimport platform; print(platform.platform())\r\nimport sys; print(\"Python\", 3.6)\r\nimport numpy; print(\"NumPy\", numpy.__1.16.1__)\r\nimport scipy; print(\"SciPy\", scipy.__1.1.0__)\r\nimport medacy; print(\"medacy\", medacy.__0.0.9__)\r\n-->\r\n\r\n\r\n<!-- Thanks for contributing! -->\r\n","closed_by":{"login":"sarthak-tg","id":43419974,"node_id":"MDQ6VXNlcjQzNDE5OTc0","avatar_url":"https://avatars.githubusercontent.com/u/43419974?v=4","gravatar_id":"","url":"https://api.github.com/users/sarthak-tg","html_url":"https://github.com/sarthak-tg","followers_url":"https://api.github.com/users/sarthak-tg/followers","following_url":"https://api.github.com/users/sarthak-tg/following{/other_user}","gists_url":"https://api.github.com/users/sarthak-tg/gists{/gist_id}","starred_url":"https://api.github.com/users/sarthak-tg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sarthak-tg/subscriptions","organizations_url":"https://api.github.com/users/sarthak-tg/orgs","repos_url":"https://api.github.com/users/sarthak-tg/repos","events_url":"https://api.github.com/users/sarthak-tg/events{/privacy}","received_events_url":"https://api.github.com/users/sarthak-tg/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/NLPatVCU/medaCy/issues/119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NLPatVCU/medaCy/issues/119/timeline","performed_via_github_app":null,"state_reason":"completed"}