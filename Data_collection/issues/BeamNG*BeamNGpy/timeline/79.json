[{"id":3893507635,"node_id":"MDEzOkFzc2lnbmVkRXZlbnQzODkzNTA3NjM1","url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/events/3893507635","actor":{"login":"pascale-commits","id":69152944,"node_id":"MDQ6VXNlcjY5MTUyOTQ0","avatar_url":"https://avatars.githubusercontent.com/u/69152944?v=4","gravatar_id":"","url":"https://api.github.com/users/pascale-commits","html_url":"https://github.com/pascale-commits","followers_url":"https://api.github.com/users/pascale-commits/followers","following_url":"https://api.github.com/users/pascale-commits/following{/other_user}","gists_url":"https://api.github.com/users/pascale-commits/gists{/gist_id}","starred_url":"https://api.github.com/users/pascale-commits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pascale-commits/subscriptions","organizations_url":"https://api.github.com/users/pascale-commits/orgs","repos_url":"https://api.github.com/users/pascale-commits/repos","events_url":"https://api.github.com/users/pascale-commits/events{/privacy}","received_events_url":"https://api.github.com/users/pascale-commits/received_events","type":"User","site_admin":false},"event":"assigned","commit_id":null,"commit_url":null,"created_at":"2020-10-19T13:43:52Z","assignee":{"login":"Palculator","id":37553150,"node_id":"MDQ6VXNlcjM3NTUzMTUw","avatar_url":"https://avatars.githubusercontent.com/u/37553150?v=4","gravatar_id":"","url":"https://api.github.com/users/Palculator","html_url":"https://github.com/Palculator","followers_url":"https://api.github.com/users/Palculator/followers","following_url":"https://api.github.com/users/Palculator/following{/other_user}","gists_url":"https://api.github.com/users/Palculator/gists{/gist_id}","starred_url":"https://api.github.com/users/Palculator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Palculator/subscriptions","organizations_url":"https://api.github.com/users/Palculator/orgs","repos_url":"https://api.github.com/users/Palculator/repos","events_url":"https://api.github.com/users/Palculator/events{/privacy}","received_events_url":"https://api.github.com/users/Palculator/received_events","type":"User","site_admin":false},"performed_via_github_app":null},{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments/712751839","html_url":"https://github.com/BeamNG/BeamNGpy/issues/79#issuecomment-712751839","issue_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/79","id":712751839,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMjc1MTgzOQ==","user":{"login":"Palculator","id":37553150,"node_id":"MDQ6VXNlcjM3NTUzMTUw","avatar_url":"https://avatars.githubusercontent.com/u/37553150?v=4","gravatar_id":"","url":"https://api.github.com/users/Palculator","html_url":"https://github.com/Palculator","followers_url":"https://api.github.com/users/Palculator/followers","following_url":"https://api.github.com/users/Palculator/following{/other_user}","gists_url":"https://api.github.com/users/Palculator/gists{/gist_id}","starred_url":"https://api.github.com/users/Palculator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Palculator/subscriptions","organizations_url":"https://api.github.com/users/Palculator/orgs","repos_url":"https://api.github.com/users/Palculator/repos","events_url":"https://api.github.com/users/Palculator/events{/privacy}","received_events_url":"https://api.github.com/users/Palculator/received_events","type":"User","site_admin":false},"created_at":"2020-10-20T10:23:07Z","updated_at":"2020-10-20T10:23:07Z","author_association":"CONTRIBUTOR","body":"Hey, Linux support for academia & research is something we are planning since, as you point out, it's a more natural fit there, but no promises or an ETA yet. Regarding memory mapping, I reckon it boils down to the C/C++ side of things relying on Windows-specific functions to do that, namely `OpenFileMappingA` and `MapViewOfFile` which I guess are not properly supported by Wine/Proton (?). Depending on how important performance in your particular case is, we could re-introduce the old way of transferring large data between Python and BeamNG: the sockets. I switched to shared memory because it's **a lot** faster but good old robust sockets could be supported as a fallback option.","reactions":{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments/712751839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"Palculator","id":37553150,"node_id":"MDQ6VXNlcjM3NTUzMTUw","avatar_url":"https://avatars.githubusercontent.com/u/37553150?v=4","gravatar_id":"","url":"https://api.github.com/users/Palculator","html_url":"https://github.com/Palculator","followers_url":"https://api.github.com/users/Palculator/followers","following_url":"https://api.github.com/users/Palculator/following{/other_user}","gists_url":"https://api.github.com/users/Palculator/gists{/gist_id}","starred_url":"https://api.github.com/users/Palculator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Palculator/subscriptions","organizations_url":"https://api.github.com/users/Palculator/orgs","repos_url":"https://api.github.com/users/Palculator/repos","events_url":"https://api.github.com/users/Palculator/events{/privacy}","received_events_url":"https://api.github.com/users/Palculator/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments/714207761","html_url":"https://github.com/BeamNG/BeamNGpy/issues/79#issuecomment-714207761","issue_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/79","id":714207761,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNDIwNzc2MQ==","user":{"login":"Seiwert","id":4229602,"node_id":"MDQ6VXNlcjQyMjk2MDI=","avatar_url":"https://avatars.githubusercontent.com/u/4229602?v=4","gravatar_id":"","url":"https://api.github.com/users/Seiwert","html_url":"https://github.com/Seiwert","followers_url":"https://api.github.com/users/Seiwert/followers","following_url":"https://api.github.com/users/Seiwert/following{/other_user}","gists_url":"https://api.github.com/users/Seiwert/gists{/gist_id}","starred_url":"https://api.github.com/users/Seiwert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Seiwert/subscriptions","organizations_url":"https://api.github.com/users/Seiwert/orgs","repos_url":"https://api.github.com/users/Seiwert/repos","events_url":"https://api.github.com/users/Seiwert/events{/privacy}","received_events_url":"https://api.github.com/users/Seiwert/received_events","type":"User","site_admin":false},"created_at":"2020-10-22T04:04:00Z","updated_at":"2020-10-22T04:04:00Z","author_association":"NONE","body":"I don't know if I necessarily follow what you're referring to with \"OpenFileMappingA\" and \"MapViewOfFile\". I'm assuming this is pertaining more to how you're doing this on the game engine side of things (CryEngine?). \r\n\r\nI guess what I was trying to point to with the memory mapping issue was pertaining more to the exact API difference between Windows and Unix. From the docs:\r\n\r\n> (Windows version) Maps length bytes from the file specified **by the file handle fileno,** and creates a mmap object\r\n> (Unix version) Maps length bytes from the file specified **by the file descriptor fileno**, and returns a mmap object. \r\n\r\nSo referring [back to the code I linked](https://github.com/BeamNG/BeamNGpy/blob/master/src/beamngpy/sensors.py#L439), it seems as though within BeamNGpy the fileno is set to 0 which indicates a max length map correlating to the size of the file (Windows based). So this leads me to believe the mapping is created using the tagname parameter. This in turn leads to the issue I'm seeing and which the Python docs calls out:\r\n> Avoiding the use of the tag parameter will assist in keeping your code portable between Unix and Windows.\r\n\r\nSo I guess my initial statement was more or less banking on the hope of some easy interface from the engine back to this memory map without relying upon the tag parameter.\r\n\r\n\r\nReferencing to your statement about socket usage though, I think that could also be a good solution. From what I've seen so far, this is actually more common than any type of memory sharing (e.g. Gazebo, AirSim, Isaac, etc..). Is the socket interface something that is available now or in a previous release?\r\n","reactions":{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments/714207761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"Seiwert","id":4229602,"node_id":"MDQ6VXNlcjQyMjk2MDI=","avatar_url":"https://avatars.githubusercontent.com/u/4229602?v=4","gravatar_id":"","url":"https://api.github.com/users/Seiwert","html_url":"https://github.com/Seiwert","followers_url":"https://api.github.com/users/Seiwert/followers","following_url":"https://api.github.com/users/Seiwert/following{/other_user}","gists_url":"https://api.github.com/users/Seiwert/gists{/gist_id}","starred_url":"https://api.github.com/users/Seiwert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Seiwert/subscriptions","organizations_url":"https://api.github.com/users/Seiwert/orgs","repos_url":"https://api.github.com/users/Seiwert/repos","events_url":"https://api.github.com/users/Seiwert/events{/privacy}","received_events_url":"https://api.github.com/users/Seiwert/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments/715341969","html_url":"https://github.com/BeamNG/BeamNGpy/issues/79#issuecomment-715341969","issue_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/79","id":715341969,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNTM0MTk2OQ==","user":{"login":"Palculator","id":37553150,"node_id":"MDQ6VXNlcjM3NTUzMTUw","avatar_url":"https://avatars.githubusercontent.com/u/37553150?v=4","gravatar_id":"","url":"https://api.github.com/users/Palculator","html_url":"https://github.com/Palculator","followers_url":"https://api.github.com/users/Palculator/followers","following_url":"https://api.github.com/users/Palculator/following{/other_user}","gists_url":"https://api.github.com/users/Palculator/gists{/gist_id}","starred_url":"https://api.github.com/users/Palculator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Palculator/subscriptions","organizations_url":"https://api.github.com/users/Palculator/orgs","repos_url":"https://api.github.com/users/Palculator/repos","events_url":"https://api.github.com/users/Palculator/events{/privacy}","received_events_url":"https://api.github.com/users/Palculator/received_events","type":"User","site_admin":false},"created_at":"2020-10-23T13:30:36Z","updated_at":"2020-10-23T13:30:36Z","author_association":"CONTRIBUTOR","body":"Yo, the game engine side of things relies on functions that in turn rely on those tag names and not `fileno`, that's what's probably breaking things since I'm not sure how Wine handles that. I've committed a simple change that creates tempfiles backing the shmems to get a valid `fileno` in a `mmap_tempfiles` branch you can give a go, maybe that's enough to make it work under Wine/Proton: https://github.com/BeamNG/BeamNGpy/tree/mmap_tempfiles\r\n\r\nSimilarly, for socket communication there's a test branch here: https://github.com/BeamNG/BeamNGpy/tree/puresockets\r\nIt's kind of hacky right now as I simply rewrote existing code to use some of the older functions that haven't been in use for ages. The basic unit tests work, but to make it cleaner and a proper fallback feature I'd like to do some restructuring in all components (C++, Lua, and Python.) Let's see if it's worth it by checking if it even works first. Fair warning: the reason I switched to shared memory back then was sockets being too slow to transfer in bulk like that, especially for the Lidar.\r\n\r\nPS: The engine hasn't been CryEngine since the very early stages of the project. It was later switched to be based on Torque3D but has now been ship-of-theseus'd into its own thing, pretty much. 😉","reactions":{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments/715341969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"Palculator","id":37553150,"node_id":"MDQ6VXNlcjM3NTUzMTUw","avatar_url":"https://avatars.githubusercontent.com/u/37553150?v=4","gravatar_id":"","url":"https://api.github.com/users/Palculator","html_url":"https://github.com/Palculator","followers_url":"https://api.github.com/users/Palculator/followers","following_url":"https://api.github.com/users/Palculator/following{/other_user}","gists_url":"https://api.github.com/users/Palculator/gists{/gist_id}","starred_url":"https://api.github.com/users/Palculator/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Palculator/subscriptions","organizations_url":"https://api.github.com/users/Palculator/orgs","repos_url":"https://api.github.com/users/Palculator/repos","events_url":"https://api.github.com/users/Palculator/events{/privacy}","received_events_url":"https://api.github.com/users/Palculator/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments/775706151","html_url":"https://github.com/BeamNG/BeamNGpy/issues/79#issuecomment-775706151","issue_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/79","id":775706151,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NTcwNjE1MQ==","user":{"login":"Seiwert","id":4229602,"node_id":"MDQ6VXNlcjQyMjk2MDI=","avatar_url":"https://avatars.githubusercontent.com/u/4229602?v=4","gravatar_id":"","url":"https://api.github.com/users/Seiwert","html_url":"https://github.com/Seiwert","followers_url":"https://api.github.com/users/Seiwert/followers","following_url":"https://api.github.com/users/Seiwert/following{/other_user}","gists_url":"https://api.github.com/users/Seiwert/gists{/gist_id}","starred_url":"https://api.github.com/users/Seiwert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Seiwert/subscriptions","organizations_url":"https://api.github.com/users/Seiwert/orgs","repos_url":"https://api.github.com/users/Seiwert/repos","events_url":"https://api.github.com/users/Seiwert/events{/privacy}","received_events_url":"https://api.github.com/users/Seiwert/received_events","type":"User","site_admin":false},"created_at":"2021-02-09T06:32:57Z","updated_at":"2021-02-09T06:32:57Z","author_association":"NONE","body":"Hey! I'm so so sorry on the delayed response here. Definitely still interested and will try to be more responsive.\r\n\r\nSo to address the tempfiles test, I ran that branch and saw the following error:\r\n```bash\r\n2021-02-08 21:26:59,787 ERROR    Uncaught exception: \r\nTraceback (most recent call last):\r\n  File \"../examples/lidar_tour.py\", line 95, in <module>\r\n    main()\r\n  File \"../examples/lidar_tour.py\", line 57, in main\r\n    vehicle.attach_sensor('lidar', lidar)\r\n  File \"/home/adam/Documents/git/BeamNGpy/src/beamngpy/vehicle.py\", line 161, in attach_sensor\r\n    sensor.attach(self, name)\r\n  File \"/home/adam/Documents/git/BeamNGpy/src/beamngpy/sensors.py\", line 456, in attach\r\n    Lidar.shmem_size, self.handle)\r\nTypeError: an integer is required (got type str)\r\n2021-02-08 21:26:59,795 WARNING  sys:1: ResourceWarning: unclosed file <_io.BufferedRandom name=4>\r\n```\r\nThis makes sense given the reference to [self.handle in the mmap call](https://github.com/BeamNG/BeamNGpy/blob/mmap_tempfiles/src/beamngpy/sensors.py#L456). Adjusting to the Linux happy version of mmap call with this -> \r\n```python\r\nself.shmem = mmap.mmap(self.file.fileno(),0)\r\n```\r\n\r\nthen led to this error ->\r\n\r\n```bash\r\n2021-02-08 21:36:44,121 ERROR    Uncaught exception: \r\nTraceback (most recent call last):\r\n  File \"../examples/lidar_tour.py\", line 95, in <module>\r\n    main()\r\n  File \"../examples/lidar_tour.py\", line 57, in main\r\n    vehicle.attach_sensor('lidar', lidar)\r\n  File \"/home/adam/Documents/git/BeamNGpy/src/beamngpy/vehicle.py\", line 161, in attach_sensor\r\n    sensor.attach(self, name)\r\n  File \"/home/adam/Documents/git/BeamNGpy/src/beamngpy/sensors.py\", line 455, in attach\r\n    self.shmem = mmap.mmap(self.file.fileno(),0)\r\nValueError: cannot mmap an empty file\r\n2021-02-08 21:36:44,130 WARNING  sys:1: ResourceWarning: unclosed file <_io.BufferedRandom name=4>\r\n```\r\nSo unless you have some additional ideas here this may be a dead end.\r\n\r\n===========================================================\r\nMoving onto the PureSocket branch that appeared as though it was going to work. However, apparently since I've last worked on this I've managed to somehow nuke my Wine installation or Nvidia driver or who knows what else and I keep seeing this error over and over again with just a black screen\r\n```bash\r\n00c4:fixme:d3d11:d3d11_immediate_context_VSGetShader Dynamic linking not implemented yet.\r\n00c4:fixme:d3d11:d3d11_immediate_context_PSSetShader Dynamic linking is not implemented yet.\r\n```\r\nThis is probably something just on my system and I'm still debugging this. \r\n\r\nBut while we're talking about bringing back socket communication and shared memory, if I could make a future development suggestion, I would recommend you align to a more common middleware so that you don't have to worry about any of it. One really nice pairing potential in my opinion would be to follow suite with the Robot Operating System and utilize DDS https://design.ros2.org/articles/ros_on_dds.html\r\nI won't go into too much more detail right now but if you're curious I could talk with you more about it.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments/775706151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"Seiwert","id":4229602,"node_id":"MDQ6VXNlcjQyMjk2MDI=","avatar_url":"https://avatars.githubusercontent.com/u/4229602?v=4","gravatar_id":"","url":"https://api.github.com/users/Seiwert","html_url":"https://github.com/Seiwert","followers_url":"https://api.github.com/users/Seiwert/followers","following_url":"https://api.github.com/users/Seiwert/following{/other_user}","gists_url":"https://api.github.com/users/Seiwert/gists{/gist_id}","starred_url":"https://api.github.com/users/Seiwert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Seiwert/subscriptions","organizations_url":"https://api.github.com/users/Seiwert/orgs","repos_url":"https://api.github.com/users/Seiwert/repos","events_url":"https://api.github.com/users/Seiwert/events{/privacy}","received_events_url":"https://api.github.com/users/Seiwert/received_events","type":"User","site_admin":false}},{"actor":{"login":"naughtyStark","id":24889667,"node_id":"MDQ6VXNlcjI0ODg5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/24889667?v=4","gravatar_id":"","url":"https://api.github.com/users/naughtyStark","html_url":"https://github.com/naughtyStark","followers_url":"https://api.github.com/users/naughtyStark/followers","following_url":"https://api.github.com/users/naughtyStark/following{/other_user}","gists_url":"https://api.github.com/users/naughtyStark/gists{/gist_id}","starred_url":"https://api.github.com/users/naughtyStark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naughtyStark/subscriptions","organizations_url":"https://api.github.com/users/naughtyStark/orgs","repos_url":"https://api.github.com/users/naughtyStark/repos","events_url":"https://api.github.com/users/naughtyStark/events{/privacy}","received_events_url":"https://api.github.com/users/naughtyStark/received_events","type":"User","site_admin":false},"created_at":"2022-12-07T02:20:15Z","updated_at":"2022-12-07T02:20:15Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/198","repository_url":"https://api.github.com/repos/BeamNG/BeamNGpy","labels_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/198/labels{/name}","comments_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/198/comments","events_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/198/events","html_url":"https://github.com/BeamNG/BeamNGpy/issues/198","id":1480727674,"node_id":"I_kwDOCEke6s5YQhx6","number":198,"title":"camera/lidar fails to instantiate on linux","user":{"login":"naughtyStark","id":24889667,"node_id":"MDQ6VXNlcjI0ODg5NjY3","avatar_url":"https://avatars.githubusercontent.com/u/24889667?v=4","gravatar_id":"","url":"https://api.github.com/users/naughtyStark","html_url":"https://github.com/naughtyStark","followers_url":"https://api.github.com/users/naughtyStark/followers","following_url":"https://api.github.com/users/naughtyStark/following{/other_user}","gists_url":"https://api.github.com/users/naughtyStark/gists{/gist_id}","starred_url":"https://api.github.com/users/naughtyStark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naughtyStark/subscriptions","organizations_url":"https://api.github.com/users/naughtyStark/orgs","repos_url":"https://api.github.com/users/naughtyStark/repos","events_url":"https://api.github.com/users/naughtyStark/events{/privacy}","received_events_url":"https://api.github.com/users/naughtyStark/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-12-07T02:20:15Z","updated_at":"2023-01-10T11:14:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"repository":{"id":139009770,"node_id":"MDEwOlJlcG9zaXRvcnkxMzkwMDk3NzA=","name":"BeamNGpy","full_name":"BeamNG/BeamNGpy","private":false,"owner":{"login":"BeamNG","id":6404024,"node_id":"MDEyOk9yZ2FuaXphdGlvbjY0MDQwMjQ=","avatar_url":"https://avatars.githubusercontent.com/u/6404024?v=4","gravatar_id":"","url":"https://api.github.com/users/BeamNG","html_url":"https://github.com/BeamNG","followers_url":"https://api.github.com/users/BeamNG/followers","following_url":"https://api.github.com/users/BeamNG/following{/other_user}","gists_url":"https://api.github.com/users/BeamNG/gists{/gist_id}","starred_url":"https://api.github.com/users/BeamNG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BeamNG/subscriptions","organizations_url":"https://api.github.com/users/BeamNG/orgs","repos_url":"https://api.github.com/users/BeamNG/repos","events_url":"https://api.github.com/users/BeamNG/events{/privacy}","received_events_url":"https://api.github.com/users/BeamNG/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/BeamNG/BeamNGpy","description":"Python API for BeamNG.tech","fork":false,"url":"https://api.github.com/repos/BeamNG/BeamNGpy","forks_url":"https://api.github.com/repos/BeamNG/BeamNGpy/forks","keys_url":"https://api.github.com/repos/BeamNG/BeamNGpy/keys{/key_id}","collaborators_url":"https://api.github.com/repos/BeamNG/BeamNGpy/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/BeamNG/BeamNGpy/teams","hooks_url":"https://api.github.com/repos/BeamNG/BeamNGpy/hooks","issue_events_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/events{/number}","events_url":"https://api.github.com/repos/BeamNG/BeamNGpy/events","assignees_url":"https://api.github.com/repos/BeamNG/BeamNGpy/assignees{/user}","branches_url":"https://api.github.com/repos/BeamNG/BeamNGpy/branches{/branch}","tags_url":"https://api.github.com/repos/BeamNG/BeamNGpy/tags","blobs_url":"https://api.github.com/repos/BeamNG/BeamNGpy/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/BeamNG/BeamNGpy/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/BeamNG/BeamNGpy/git/refs{/sha}","trees_url":"https://api.github.com/repos/BeamNG/BeamNGpy/git/trees{/sha}","statuses_url":"https://api.github.com/repos/BeamNG/BeamNGpy/statuses/{sha}","languages_url":"https://api.github.com/repos/BeamNG/BeamNGpy/languages","stargazers_url":"https://api.github.com/repos/BeamNG/BeamNGpy/stargazers","contributors_url":"https://api.github.com/repos/BeamNG/BeamNGpy/contributors","subscribers_url":"https://api.github.com/repos/BeamNG/BeamNGpy/subscribers","subscription_url":"https://api.github.com/repos/BeamNG/BeamNGpy/subscription","commits_url":"https://api.github.com/repos/BeamNG/BeamNGpy/commits{/sha}","git_commits_url":"https://api.github.com/repos/BeamNG/BeamNGpy/git/commits{/sha}","comments_url":"https://api.github.com/repos/BeamNG/BeamNGpy/comments{/number}","issue_comment_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/comments{/number}","contents_url":"https://api.github.com/repos/BeamNG/BeamNGpy/contents/{+path}","compare_url":"https://api.github.com/repos/BeamNG/BeamNGpy/compare/{base}...{head}","merges_url":"https://api.github.com/repos/BeamNG/BeamNGpy/merges","archive_url":"https://api.github.com/repos/BeamNG/BeamNGpy/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/BeamNG/BeamNGpy/downloads","issues_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues{/number}","pulls_url":"https://api.github.com/repos/BeamNG/BeamNGpy/pulls{/number}","milestones_url":"https://api.github.com/repos/BeamNG/BeamNGpy/milestones{/number}","notifications_url":"https://api.github.com/repos/BeamNG/BeamNGpy/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/BeamNG/BeamNGpy/labels{/name}","releases_url":"https://api.github.com/repos/BeamNG/BeamNGpy/releases{/id}","deployments_url":"https://api.github.com/repos/BeamNG/BeamNGpy/deployments","created_at":"2018-06-28T11:35:18Z","updated_at":"2023-01-16T14:45:59Z","pushed_at":"2023-01-16T07:55:37Z","git_url":"git://github.com/BeamNG/BeamNGpy.git","ssh_url":"git@github.com:BeamNG/BeamNGpy.git","clone_url":"https://github.com/BeamNG/BeamNGpy.git","svn_url":"https://github.com/BeamNG/BeamNGpy","homepage":"https://beamng.tech","size":99843,"stargazers_count":161,"watchers_count":161,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":32,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":21,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["ai","autonomous-driving","autonomous-vehicles","beamng","driving","python","simulator","simulator-api"],"visibility":"public","forks":32,"open_issues":21,"watchers":161,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"Hi,\r\n\r\nthe game crashes when I instantiate(not even poll) either a camera or a lidar and set the use_shared_mem=False (meaning that I'm using sockets). I'm using sockets because when running with shared memory python throws the mmap error talked about in this [issue](https://github.com/BeamNG/BeamNGpy/issues/79).\r\nThe game runs fine if I don't instantiate either camera or lidar and just poll the state sensors and electrics (script not shown).\r\n\r\nbeamng.tech version: 0.26\r\nbeamngpy version: 1.24\r\nOperating system: ubuntu 20.04\r\nGraphics card: 4x GTX1080Tis\r\nCPU: intel i7 6850 3.6 Ghz 12 core\r\nram: 62.7 GB\r\n\r\nThe code runs fine on windows with or without shared memory, so it is likely a Linux compatibility issue. Is there a fix for this yet?\r\ncode:\r\n```\r\nimport time\r\nfrom beamngpy import BeamNGpy, Scenario, Vehicle\r\nfrom beamngpy.sensors import Lidar\r\n\r\ndef main():\r\n    bng = BeamNGpy('localhost', 64256, home='/home/username/BeamNG/BeamNG', user='/home/username/BeamNG/BeamNG/userfolder')\r\n    bng.open()\r\n    scenario = Scenario('small_island', name=\"test integration\")\r\n    vehicle = Vehicle('ego_vehicle', model='sunburst', partConfig='vehicles/sunburst/race_M.pc')\r\n    scenario.add_vehicle(vehicle, pos=(-67, 336, 34.5), rot_quat=(0, 0, 0.3826834, 0.9238795))\r\n    scenario.make(bng)\r\n    bng.load_scenario(scenario)\r\n    bng.start_scenario()\r\n    time.sleep(10)  # give the game time to load/do its thing\r\n    # NOTE: Create sensor after scenario has started.\r\n    lidar = Lidar('lidar', bng, vehicle, requested_update_time=0.1, is_using_shared_memory=False)     # Send data via shared memory.\r\n\r\n    print(\"starting\")\r\n    while True:\r\n        time.sleep()\r\n\r\n    lidar1.remove()\r\n    bng.close()\r\nif __name__ == '__main__':\r\n    main()\r\n```","reactions":{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/198/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"}]