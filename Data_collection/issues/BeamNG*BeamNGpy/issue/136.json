{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/136","repository_url":"https://api.github.com/repos/BeamNG/BeamNGpy","labels_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/136/labels{/name}","comments_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/136/comments","events_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/136/events","html_url":"https://github.com/BeamNG/BeamNGpy/issues/136","id":951770626,"node_id":"MDU6SXNzdWU5NTE3NzA2MjY=","number":136,"title":"vehicle.poll_sensors keeps throwing up AssertionError when used in glutIdleFunc()","user":{"login":"Hamza-B1","id":66087630,"node_id":"MDQ6VXNlcjY2MDg3NjMw","avatar_url":"https://avatars.githubusercontent.com/u/66087630?v=4","gravatar_id":"","url":"https://api.github.com/users/Hamza-B1","html_url":"https://github.com/Hamza-B1","followers_url":"https://api.github.com/users/Hamza-B1/followers","following_url":"https://api.github.com/users/Hamza-B1/following{/other_user}","gists_url":"https://api.github.com/users/Hamza-B1/gists{/gist_id}","starred_url":"https://api.github.com/users/Hamza-B1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hamza-B1/subscriptions","organizations_url":"https://api.github.com/users/Hamza-B1/orgs","repos_url":"https://api.github.com/users/Hamza-B1/repos","events_url":"https://api.github.com/users/Hamza-B1/events{/privacy}","received_events_url":"https://api.github.com/users/Hamza-B1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"pascale-commits","id":69152944,"node_id":"MDQ6VXNlcjY5MTUyOTQ0","avatar_url":"https://avatars.githubusercontent.com/u/69152944?v=4","gravatar_id":"","url":"https://api.github.com/users/pascale-commits","html_url":"https://github.com/pascale-commits","followers_url":"https://api.github.com/users/pascale-commits/followers","following_url":"https://api.github.com/users/pascale-commits/following{/other_user}","gists_url":"https://api.github.com/users/pascale-commits/gists{/gist_id}","starred_url":"https://api.github.com/users/pascale-commits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pascale-commits/subscriptions","organizations_url":"https://api.github.com/users/pascale-commits/orgs","repos_url":"https://api.github.com/users/pascale-commits/repos","events_url":"https://api.github.com/users/pascale-commits/events{/privacy}","received_events_url":"https://api.github.com/users/pascale-commits/received_events","type":"User","site_admin":false},"assignees":[{"login":"pascale-commits","id":69152944,"node_id":"MDQ6VXNlcjY5MTUyOTQ0","avatar_url":"https://avatars.githubusercontent.com/u/69152944?v=4","gravatar_id":"","url":"https://api.github.com/users/pascale-commits","html_url":"https://github.com/pascale-commits","followers_url":"https://api.github.com/users/pascale-commits/followers","following_url":"https://api.github.com/users/pascale-commits/following{/other_user}","gists_url":"https://api.github.com/users/pascale-commits/gists{/gist_id}","starred_url":"https://api.github.com/users/pascale-commits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pascale-commits/subscriptions","organizations_url":"https://api.github.com/users/pascale-commits/orgs","repos_url":"https://api.github.com/users/pascale-commits/repos","events_url":"https://api.github.com/users/pascale-commits/events{/privacy}","received_events_url":"https://api.github.com/users/pascale-commits/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-07-23T17:24:59Z","updated_at":"2021-08-04T06:21:42Z","closed_at":"2021-08-04T06:21:42Z","author_association":"NONE","active_lock_reason":null,"body":"# Info\r\nI am using `beamngpy 1.20` with `BeamNG.tech v0.22.2.0` and I have installed an unofficial PyOpenGL binary (`PyOpenGL-3.1.5-cp39-cp39-win_amd64.whl` from [here](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopengl)) as the one installed by pip was causing another error (`OpenGL.error.NullFunctionError`). I am using the code from the examples in the repository [here](https://github.com/BeamNG/BeamNGpy/blob/master/examples/lidar_tour.py)\r\n\r\n# Code\r\n```py\r\nimport mmap\r\nimport random\r\nimport sys\r\nfrom time import sleep\r\nfrom OpenGL.GL import *\r\nfrom OpenGL.GLU import *\r\nfrom OpenGL.GLUT import *\r\nimport numpy as np\r\nfrom beamngpy import BeamNGpy, Scenario, Vehicle, setup_logging\r\nfrom beamngpy.sensors import Lidar\r\nfrom beamngpy.visualiser import LidarVisualiser\r\n\r\nSIZE = 1024\r\n\r\n\r\ndef lidar_resize(width, height):\r\n    if height == 0:\r\n        height = 1\r\n\r\n    glViewport(0, 0, width, height)\r\n\r\n\r\ndef open_window(width, height):\r\n    glutInit()\r\n    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE)\r\n    glutInitWindowSize(width, height)\r\n    window = glutCreateWindow(b'Lidar Tour')\r\n    lidar_resize(width, height)\r\n    return window\r\n\r\n\r\ndef main():\r\n    random.seed(1703)\r\n    setup_logging()\r\n\r\n    beamng = BeamNGpy('localhost', 64256, home=r\"C:\\BeamNG.tech\")\r\n    bng = beamng.open(launch=True)\r\n\r\n    scenario = Scenario('west_coast_usa', name=\"Example\")\r\n\r\n    vehicle = Vehicle('ego_vehicle', model='etk800')\r\n\r\n    lidar = Lidar(offset=(0, 0, 1.6))\r\n    vehicle.attach_sensor('lidar', lidar)\r\n\r\n    scenario.add_vehicle(vehicle, pos=(-717.121, 101, 118.675),\r\n                         rot=None, rot_quat=(0, 0, 0.3826834, 0.9238795))\r\n    scenario.make(bng)\r\n\r\n    window = open_window(SIZE, SIZE)\r\n    lidar_vis = LidarVisualiser(Lidar.max_points)\r\n    lidar_vis.open(SIZE, SIZE)\r\n\r\n    bng.set_deterministic()\r\n    bng.set_steps_per_second(60)\r\n\r\n    bng.load_scenario(scenario)\r\n    bng.hide_hud()\r\n    bng.start_scenario()\r\n\r\n    vehicle.ai_set_mode('span')\r\n    vehicle.ai_drive_in_lane(True)\r\n\r\n    def update():\r\n        vehicle.poll_sensors()\r\n        points = lidar.data['points']\r\n        bng.step(3, wait=False)\r\n        lidar_vis.update_points(points, vehicle.state)\r\n        glutPostRedisplay()\r\n\r\n    glutReshapeFunc(lidar_resize)\r\n    glutIdleFunc(update)\r\n    glutMainLoop()\r\n    sleep(60)\r\n    bng.close()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\nWhen I run this, I get an error: \r\n```diff\r\n- Traceback (most recent call last):\r\n-  File \"C:\\dev\\Projects\\pydrive\\venv\\lib\\site-packages\\OpenGL\\GLUT\\special.py\", line 130, in safeCall\r\n-   return function( *args, **named )\r\n-  File \"C:\\dev\\Projects\\pydrive\\main.py\", line 65, in update\r\n-    vehicle.poll_sensors()\r\n-  File \"C:\\dev\\Projects\\pydrive\\venv\\lib\\site-packages\\beamngpy\\vehicle.py\", line 347, in poll_sensors\r\n-    assert response['type'] == 'SensorData'\r\n-AssertionError\r\n-GLUT Idle callback <function main.<locals>.update at 0x00000214CF2E4670> with (),{} failed: returning None \r\n\r\n-Process finished with exit code 1\r\n````\r\nI have tried downgrading to beamngpy 1.19 and have had the same issue. I am using Pycharm Professional with `Python 3.9` and a virtual environment set up by the IDE.","closed_by":{"login":"pascale-commits","id":69152944,"node_id":"MDQ6VXNlcjY5MTUyOTQ0","avatar_url":"https://avatars.githubusercontent.com/u/69152944?v=4","gravatar_id":"","url":"https://api.github.com/users/pascale-commits","html_url":"https://github.com/pascale-commits","followers_url":"https://api.github.com/users/pascale-commits/followers","following_url":"https://api.github.com/users/pascale-commits/following{/other_user}","gists_url":"https://api.github.com/users/pascale-commits/gists{/gist_id}","starred_url":"https://api.github.com/users/pascale-commits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pascale-commits/subscriptions","organizations_url":"https://api.github.com/users/pascale-commits/orgs","repos_url":"https://api.github.com/users/pascale-commits/repos","events_url":"https://api.github.com/users/pascale-commits/events{/privacy}","received_events_url":"https://api.github.com/users/pascale-commits/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/BeamNG/BeamNGpy/issues/136/timeline","performed_via_github_app":null,"state_reason":"completed"}