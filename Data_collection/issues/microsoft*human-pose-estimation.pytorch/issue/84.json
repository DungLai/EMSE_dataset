{"url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/84","repository_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch","labels_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/84/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/84/comments","events_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/84/events","html_url":"https://github.com/microsoft/human-pose-estimation.pytorch/issues/84","id":403759724,"node_id":"MDU6SXNzdWU0MDM3NTk3MjQ=","number":84,"title":"poor performance of mobilenetv1,v2 and mnasnet as backbone ???","user":{"login":"hengck23","id":5112846,"node_id":"MDQ6VXNlcjUxMTI4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/5112846?v=4","gravatar_id":"","url":"https://api.github.com/users/hengck23","html_url":"https://github.com/hengck23","followers_url":"https://api.github.com/users/hengck23/followers","following_url":"https://api.github.com/users/hengck23/following{/other_user}","gists_url":"https://api.github.com/users/hengck23/gists{/gist_id}","starred_url":"https://api.github.com/users/hengck23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hengck23/subscriptions","organizations_url":"https://api.github.com/users/hengck23/orgs","repos_url":"https://api.github.com/users/hengck23/repos","events_url":"https://api.github.com/users/hengck23/events{/privacy}","received_events_url":"https://api.github.com/users/hengck23/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-01-28T11:05:39Z","updated_at":"2021-05-03T11:41:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I experiment your framework with different backbone. Surprisingly, the performance of resnet34 is quite close to resnet50. Renest34 have mAP of about 0.705 (and 0.893 AP@0.5) on 2017 coco keypoints for 256x192, tested using ground truth box as input and without flip.\r\n\r\nHowever, for mobilenetv1,v2 and mnasnet, their results are very bad, even worse then resnet18. Do you have any idea why this is so? \r\n\r\nmobilenetv1,v2 and mnasnet has only mAP of about 0.648 on coco keypoint. Resnet18 is about 0. 657.\r\n\r\nOn imagenet, mobilenetv2(top-1 28%) and mnasnet  (top-1 26%) has performance much better than resnet18 (top-1 30%), and is comparable to Resnet 34(top-1 27%) . Resnet50 is top-1 24%\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/84/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/84/timeline","performed_via_github_app":null,"state_reason":null}