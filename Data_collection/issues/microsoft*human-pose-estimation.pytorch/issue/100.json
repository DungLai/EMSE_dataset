{"url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/100","repository_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch","labels_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/100/comments","events_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/100/events","html_url":"https://github.com/microsoft/human-pose-estimation.pytorch/issues/100","id":420771656,"node_id":"MDU6SXNzdWU0MjA3NzE2NTY=","number":100,"title":"Intuition of the `target_weight` in the loss","user":{"login":"anuar12","id":8140620,"node_id":"MDQ6VXNlcjgxNDA2MjA=","avatar_url":"https://avatars.githubusercontent.com/u/8140620?v=4","gravatar_id":"","url":"https://api.github.com/users/anuar12","html_url":"https://github.com/anuar12","followers_url":"https://api.github.com/users/anuar12/followers","following_url":"https://api.github.com/users/anuar12/following{/other_user}","gists_url":"https://api.github.com/users/anuar12/gists{/gist_id}","starred_url":"https://api.github.com/users/anuar12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anuar12/subscriptions","organizations_url":"https://api.github.com/users/anuar12/orgs","repos_url":"https://api.github.com/users/anuar12/repos","events_url":"https://api.github.com/users/anuar12/events{/privacy}","received_events_url":"https://api.github.com/users/anuar12/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-03-13T23:54:00Z","updated_at":"2020-11-22T13:49:05Z","closed_at":"2020-11-22T13:49:05Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, thank you for the great code!\r\n\r\nI like the simplicity of the loss, however I don't understand one specific case when:\r\n- the joint is not visible in the object patch AND there is a wrong prediction (FP), then the loss will be zero because the `target_weight=0`. Shouldn't one want to penalize such a case of FPs?\r\n\r\nWhy wouldn't you not use target_weight, then both FPs and FNs would be penalized which is good.","closed_by":{"login":"anuar12","id":8140620,"node_id":"MDQ6VXNlcjgxNDA2MjA=","avatar_url":"https://avatars.githubusercontent.com/u/8140620?v=4","gravatar_id":"","url":"https://api.github.com/users/anuar12","html_url":"https://github.com/anuar12","followers_url":"https://api.github.com/users/anuar12/followers","following_url":"https://api.github.com/users/anuar12/following{/other_user}","gists_url":"https://api.github.com/users/anuar12/gists{/gist_id}","starred_url":"https://api.github.com/users/anuar12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anuar12/subscriptions","organizations_url":"https://api.github.com/users/anuar12/orgs","repos_url":"https://api.github.com/users/anuar12/repos","events_url":"https://api.github.com/users/anuar12/events{/privacy}","received_events_url":"https://api.github.com/users/anuar12/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/100/timeline","performed_via_github_app":null,"state_reason":"completed"}