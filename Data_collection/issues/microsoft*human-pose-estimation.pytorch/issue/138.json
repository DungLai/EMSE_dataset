{"url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/138","repository_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch","labels_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/138/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/138/comments","events_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/138/events","html_url":"https://github.com/microsoft/human-pose-estimation.pytorch/issues/138","id":547583729,"node_id":"MDU6SXNzdWU1NDc1ODM3Mjk=","number":138,"title":"Intuition behind the choice of ConvTranspose2D (deconvolution)?","user":{"login":"anuar12","id":8140620,"node_id":"MDQ6VXNlcjgxNDA2MjA=","avatar_url":"https://avatars.githubusercontent.com/u/8140620?v=4","gravatar_id":"","url":"https://api.github.com/users/anuar12","html_url":"https://github.com/anuar12","followers_url":"https://api.github.com/users/anuar12/followers","following_url":"https://api.github.com/users/anuar12/following{/other_user}","gists_url":"https://api.github.com/users/anuar12/gists{/gist_id}","starred_url":"https://api.github.com/users/anuar12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anuar12/subscriptions","organizations_url":"https://api.github.com/users/anuar12/orgs","repos_url":"https://api.github.com/users/anuar12/repos","events_url":"https://api.github.com/users/anuar12/events{/privacy}","received_events_url":"https://api.github.com/users/anuar12/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-01-09T16:26:00Z","updated_at":"2020-03-18T14:27:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thanks for great repo!\r\n\r\nI noticed the spatial resolution is reduced by large factor (in one network it's 32) with MaxPooling and Conv(stride>1) which decreases the spatial resolution to less than the output map resolution, this then \"upsampled\" with transposed convolution. What is the reasoning behind this? Was this method induced purely from empirical methods?\r\nIn practice one forces the network to store spatial resolution in the feature dimension, why not just downsample less with maxpooling and less stride instead of adding transposed convolution at the end?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/138/reactions","total_count":6,"+1":1,"-1":1,"laugh":1,"hooray":1,"confused":1,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/138/timeline","performed_via_github_app":null,"state_reason":null}