{"url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/76","repository_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch","labels_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/76/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/76/comments","events_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/76/events","html_url":"https://github.com/microsoft/human-pose-estimation.pytorch/issues/76","id":397717298,"node_id":"MDU6SXNzdWUzOTc3MTcyOTg=","number":76,"title":"setting output=target in validation does not give AP=1.0","user":{"login":"hengck23","id":5112846,"node_id":"MDQ6VXNlcjUxMTI4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/5112846?v=4","gravatar_id":"","url":"https://api.github.com/users/hengck23","html_url":"https://github.com/hengck23","followers_url":"https://api.github.com/users/hengck23/followers","following_url":"https://api.github.com/users/hengck23/following{/other_user}","gists_url":"https://api.github.com/users/hengck23/gists{/gist_id}","starred_url":"https://api.github.com/users/hengck23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hengck23/subscriptions","organizations_url":"https://api.github.com/users/hengck23/orgs","repos_url":"https://api.github.com/users/hengck23/repos","events_url":"https://api.github.com/users/hengck23/events{/privacy}","received_events_url":"https://api.github.com/users/hengck23/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-01-10T08:18:06Z","updated_at":"2019-01-10T08:18:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"this is not an issue but rather an observation. What i did:\r\n\r\n- use ground truth box in json as input instance box\r\n- disable flip test\r\n- disable oks_nms instance re-scoring\r\n- simply set output=target in def validate(config, val_loader, val_dataset, ...) in function.py\r\n\r\ni get the results:\r\n\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] = 0.975\r\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] = 0.990\r\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] = 0.988\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = 0.971\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] = 0.980\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] = 0.988\r\n Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] = 0.999\r\n Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] = 0.996\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = 0.984\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] = 0.996\r\n\r\n\r\n---\r\nthis represent results of a perfect convolution net which have predictions same as the target ground truth. Even so, there is a drop of 0.025 in AP.\r\n\r\nThis shows that there is some still room of improvement if you have better post processing methods or better target definition.\r\n \r\n \r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/76/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/human-pose-estimation.pytorch/issues/76/timeline","performed_via_github_app":null,"state_reason":null}