{"url":"https://api.github.com/repos/kamenbliznashki/normalizing_flows/issues/7","repository_url":"https://api.github.com/repos/kamenbliznashki/normalizing_flows","labels_url":"https://api.github.com/repos/kamenbliznashki/normalizing_flows/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/kamenbliznashki/normalizing_flows/issues/7/comments","events_url":"https://api.github.com/repos/kamenbliznashki/normalizing_flows/issues/7/events","html_url":"https://github.com/kamenbliznashki/normalizing_flows/issues/7","id":598258956,"node_id":"MDU6SXNzdWU1OTgyNTg5NTY=","number":7,"title":"GLOW: Training for mnist with more levels does not work","user":{"login":"nikste","id":11996097,"node_id":"MDQ6VXNlcjExOTk2MDk3","avatar_url":"https://avatars.githubusercontent.com/u/11996097?v=4","gravatar_id":"","url":"https://api.github.com/users/nikste","html_url":"https://github.com/nikste","followers_url":"https://api.github.com/users/nikste/followers","following_url":"https://api.github.com/users/nikste/following{/other_user}","gists_url":"https://api.github.com/users/nikste/gists{/gist_id}","starred_url":"https://api.github.com/users/nikste/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikste/subscriptions","organizations_url":"https://api.github.com/users/nikste/orgs","repos_url":"https://api.github.com/users/nikste/repos","events_url":"https://api.github.com/users/nikste/events{/privacy}","received_events_url":"https://api.github.com/users/nikste/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-11T12:44:53Z","updated_at":"2020-04-11T12:58:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"--n_levels 5 results in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 744, in <module>\r\n    data_dependent_init(model, args)\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/autograd/grad_mode.py\", line 49, in decorate_no_grad\r\n    return func(*args, **kwargs)\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 469, in data_dependent_init\r\n    model(next(iter(dataloader))[0].requires_grad_(True if args.checkpoint_grads else False).to(args.device))\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 532, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py\", line 150, in forward\r\n    return self.module(*inputs[0], **kwargs[0])\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 532, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 422, in forward\r\n    x = self.squeeze(x)\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 532, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 252, in forward\r\n    x = x.reshape(B, C, H//2, 2, W//2, 2)   # factor spatial dim\r\nRuntimeError: shape '[256, 96, 0, 2, 0, 2]' is invalid for input of size 24576\r\n```\r\n\r\n--n_levels 4\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 745, in <module>\r\n    train_and_evaluate(model, train_dataloader, test_dataloader, optimizer, writer, args)\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 562, in train_and_evaluate\r\n    train_epoch(model, train_dataloader, optimizer, writer, epoch, args)\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 515, in train_epoch\r\n    samples = generate(model, n_samples=4, z_stds=[0., 0.25, 0.7, 1.0])\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/autograd/grad_mode.py\", line 49, in decorate_no_grad\r\n    return func(*args, **kwargs)\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 551, in generate\r\n    sample, _ = model.inverse(batch_size=n_samples, z_std=z_std)\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 437, in inverse\r\n    z, sum_logdets = self.gaussianize.inverse(torch.zeros_like(zs[-1]), zs[-1])\r\n  File \"/home/nsteenbergen/workspace-python/glow-pytorch/normalizing_flows/glow.py\", line 309, in inverse\r\n    h = self.net(x1) * self.log_scale_factor.exp()\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 532, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/nn/modules/conv.py\", line 345, in forward\r\n    return self.conv2d_forward(input, self.weight)\r\n  File \"/home/nsteenbergen/miniconda3/envs/torch/lib/python3.8/site-packages/torch/nn/modules/conv.py\", line 341, in conv2d_forward\r\n    return F.conv2d(input, weight, self.bias, self.stride,\r\nRuntimeError: Expected 4-dimensional input for 4-dimensional weight 384 192 3 3, but got 2-dimensional input of size [4, 192] instead\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/kamenbliznashki/normalizing_flows/issues/7/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kamenbliznashki/normalizing_flows/issues/7/timeline","performed_via_github_app":null,"state_reason":null}