[{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1336346878","html_url":"https://github.com/lfortran/lfortran/issues/1063#issuecomment-1336346878","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1063","id":1336346878,"node_id":"IC_kwDOCpMuHc5Ppwj-","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2022-12-04T08:15:09Z","updated_at":"2022-12-04T08:15:09Z","author_association":"CONTRIBUTOR","body":"Awesome, thanks for reporting this! Let's work to fix that.\r\n\r\nAre you thinking a good error message will list the declarations of all generic procedures available for `shiftl` ?\r\n\r\nWhat would be a good format for that? In C++ / Rust, one has the argument types in the same line, such a `int64_t shiftl(int64_t i, int64_t shift)`, but in Fortran it would be just `integer function shiftl(i, shift)`, which is not clear. One option would be to just list the types using a different syntax, say: `(integer, integer) -> integer`. Another alternative is to do something like:\r\n```\r\ninteger function shiftl(i, shift)\r\ninteger, intent(in) :: i, shift\r\nend function\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1336346878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1336349031","html_url":"https://github.com/lfortran/lfortran/issues/1063#issuecomment-1336349031","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1063","id":1336349031,"node_id":"IC_kwDOCpMuHc5PpxFn","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2022-12-04T08:28:58Z","updated_at":"2022-12-04T08:28:58Z","author_association":"CONTRIBUTOR","body":"Let's take the `sin` example: https://github.com/lfortran/lfortran/blob/35055ba10299b2561759152a963e9754983868e0/src/runtime/impure/lfortran_intrinsic_math.f90#L493\r\n\r\nSay you call it like `sin(\"x\")`, so you get an error message. LFortran should list the available types that you *can* use.\r\n\r\nThe full correct (minimal) Fortran syntax to specify the argument types is:\r\n```fortran\r\ninterface sin\r\n    elemental real(sp) function ssin(x)\r\n    real(sp), intent(in) :: x\r\n    end function\r\n    \r\n    elemental real(dp) function dsin(x)\r\n    real(dp), intent(in) :: x\r\n    end function\r\n    \r\n    elemental complex(sp) function csin(x)\r\n    complex(sp), intent(in) :: x\r\n    end function\r\n    \r\n    elemental complex(dp) function zsin(x)\r\n    complex(dp), intent(in) :: x\r\n    end function\r\nend interface\r\n```\r\n\r\nWhich is quite verbose. But it's a start. Here is one alternative, that we could use, but it's different syntax:\r\n```\r\nsin(real(sp)) -> real(sp)\r\nsin(real(dp)) -> real(dp)\r\nsin(complex(sp)) -> real(sp)\r\nsin(complex(dp)) -> complex(dp)\r\n```\r\n\r\nWe can also consider just using 4 and 8 instead of `sp` and `dp`.\r\n\r\nHere is another alternative:\r\n```\r\nelemental function sin\r\n[real(sp)] -> real(sp)\r\n[real(dp)] -> real(dp)\r\n[complex(sp)] -> real(sp)\r\n[complex(dp)] -> complex(dp)\r\n```\r\n\r\nOr for shiftl:\r\n```\r\nfunction shiftl\r\n[integer(4), integer(4)] -> integer(4)\r\n[integer(8), integer(4)] -> integer(8)\r\n```\r\n\r\nAn example of a full message:\r\n```\r\nsemantic error: Arguments do not match for any generic procedure, shiftl\r\n  --> input:11:18\r\n   |\r\n11 |         output = SHIFTL(1, pri)\r\n   |                  ^^^^^^^^^^^^^^ \r\n\r\nThe implemented types for shiftl are:\r\n\r\n[integer(4), integer(4)] -> integer(4)\r\n[integer(8), integer(4)] -> integer(8)\r\n\r\nNote: if any of the above error or warning messages are not clear or are lacking\r\ncontext please report it to us (we consider that a bug that needs to be fixed).\r\n```\r\n\r\n\r\nThe approach can be that if the types can be written in a simple form, such as `integer(8)` then we can do this. If they are complicated, such as `integer, intent(inout), allocatable, dimension(a, size(B,3)) :: X`, then it might be more complicated, although maybe possible:\r\n```\r\n[integer, intent(inout), allocatable, dimension(a, size(B,3)); real, intent(out), pointer, allocatable] -> real, allocatable, dimension(size(A))\r\n```\r\nBut we would have to use `;` instead of `,` as the delimiter, and also the names of the other variables A, B are not there.... So probably for more complicated things we would just use the actual verbose Fortran syntax.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1336349031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}}]