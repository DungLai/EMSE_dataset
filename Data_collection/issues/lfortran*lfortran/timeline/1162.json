[{"actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-05T15:59:07Z","updated_at":"2023-01-05T15:59:07Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/487","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/487/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/487/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/487/events","html_url":"https://github.com/lfortran/lfortran/issues/487","id":1338779416,"node_id":"I_kwDOCpMuHc5PzCcY","number":487,"title":"ASR design improvements","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:56:15Z","updated_at":"2023-01-05T15:59:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"repository":{"id":177417757,"node_id":"MDEwOlJlcG9zaXRvcnkxNzc0MTc3NTc=","name":"lfortran","full_name":"lfortran/lfortran","private":false,"owner":{"login":"lfortran","id":40613057,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQwNjEzMDU3","avatar_url":"https://avatars.githubusercontent.com/u/40613057?v=4","gravatar_id":"","url":"https://api.github.com/users/lfortran","html_url":"https://github.com/lfortran","followers_url":"https://api.github.com/users/lfortran/followers","following_url":"https://api.github.com/users/lfortran/following{/other_user}","gists_url":"https://api.github.com/users/lfortran/gists{/gist_id}","starred_url":"https://api.github.com/users/lfortran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfortran/subscriptions","organizations_url":"https://api.github.com/users/lfortran/orgs","repos_url":"https://api.github.com/users/lfortran/repos","events_url":"https://api.github.com/users/lfortran/events{/privacy}","received_events_url":"https://api.github.com/users/lfortran/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/lfortran/lfortran","description":"Official main repository for LFortran","fork":false,"url":"https://api.github.com/repos/lfortran/lfortran","forks_url":"https://api.github.com/repos/lfortran/lfortran/forks","keys_url":"https://api.github.com/repos/lfortran/lfortran/keys{/key_id}","collaborators_url":"https://api.github.com/repos/lfortran/lfortran/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/lfortran/lfortran/teams","hooks_url":"https://api.github.com/repos/lfortran/lfortran/hooks","issue_events_url":"https://api.github.com/repos/lfortran/lfortran/issues/events{/number}","events_url":"https://api.github.com/repos/lfortran/lfortran/events","assignees_url":"https://api.github.com/repos/lfortran/lfortran/assignees{/user}","branches_url":"https://api.github.com/repos/lfortran/lfortran/branches{/branch}","tags_url":"https://api.github.com/repos/lfortran/lfortran/tags","blobs_url":"https://api.github.com/repos/lfortran/lfortran/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/lfortran/lfortran/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/lfortran/lfortran/git/refs{/sha}","trees_url":"https://api.github.com/repos/lfortran/lfortran/git/trees{/sha}","statuses_url":"https://api.github.com/repos/lfortran/lfortran/statuses/{sha}","languages_url":"https://api.github.com/repos/lfortran/lfortran/languages","stargazers_url":"https://api.github.com/repos/lfortran/lfortran/stargazers","contributors_url":"https://api.github.com/repos/lfortran/lfortran/contributors","subscribers_url":"https://api.github.com/repos/lfortran/lfortran/subscribers","subscription_url":"https://api.github.com/repos/lfortran/lfortran/subscription","commits_url":"https://api.github.com/repos/lfortran/lfortran/commits{/sha}","git_commits_url":"https://api.github.com/repos/lfortran/lfortran/git/commits{/sha}","comments_url":"https://api.github.com/repos/lfortran/lfortran/comments{/number}","issue_comment_url":"https://api.github.com/repos/lfortran/lfortran/issues/comments{/number}","contents_url":"https://api.github.com/repos/lfortran/lfortran/contents/{+path}","compare_url":"https://api.github.com/repos/lfortran/lfortran/compare/{base}...{head}","merges_url":"https://api.github.com/repos/lfortran/lfortran/merges","archive_url":"https://api.github.com/repos/lfortran/lfortran/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/lfortran/lfortran/downloads","issues_url":"https://api.github.com/repos/lfortran/lfortran/issues{/number}","pulls_url":"https://api.github.com/repos/lfortran/lfortran/pulls{/number}","milestones_url":"https://api.github.com/repos/lfortran/lfortran/milestones{/number}","notifications_url":"https://api.github.com/repos/lfortran/lfortran/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/lfortran/lfortran/labels{/name}","releases_url":"https://api.github.com/repos/lfortran/lfortran/releases{/id}","deployments_url":"https://api.github.com/repos/lfortran/lfortran/deployments","created_at":"2019-03-24T13:22:20Z","updated_at":"2023-01-19T07:32:40Z","pushed_at":"2023-01-19T19:07:25Z","git_url":"git://github.com/lfortran/lfortran.git","ssh_url":"git@github.com:lfortran/lfortran.git","clone_url":"https://github.com/lfortran/lfortran.git","svn_url":"https://github.com/lfortran/lfortran","homepage":"https://lfortran.org/","size":19098,"stargazers_count":504,"watchers_count":504,"language":"C++","has_issues":true,"has_projects":false,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":52,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":582,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["compiler","fortran","interactive","jupyter","jupyter-kernels","jupyter-notebook","library","repl"],"visibility":"public","forks":52,"open_issues":582,"watchers":504,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/636\r\n\r\nHere are some design improvements/simplifications/generalizations that I think we should consider for ASR and either implement, or reject and document why not:\r\n\r\n* [x] Unify Subroutine/Function into just Function, that has return_type optional (if null, it is a subroutine) (https://gitlab.com/lfortran/lfortran/-/issues/703)\r\n* [ ] Unify stmt and expr into just expr (might actually make things more complex, so might not be worth it..)\r\n* [ ] Unify Explicit/ImplicitCast into just Cast\r\n* [x] https://gitlab.com/lfortran/lfortran/-/issues/637: Add builtin functions `size`, `len`, `u/lbound`, `shape`, `allocated` into ASR itself (one way or another) to make ASR self contained (similar to the string // operation already in ASR)\r\n* [ ] Implement lambda function node, with closures (environment), then make Subroutine/Function just use it (empty environment = no closure), and nested functions might have non empty environment. The LLVM backend then just needs to implement closures in a clean way as a first class feature (currently it is a bit complicated and maybe not fully general). For Fortran only a subset would be used, but for Python (or Scheme) frontends this would be used fully.\r\n* [ ] Function type (signature) should probably be a first class type (helpful for `type(procedure)`) (https://github.com/lfortran/lfortran/issues/1162)\r\n* [ ] Implement generics/templates\r\n* [ ] Brainstorm how dimension/arrays are implemented in the type system\r\n* [ ] Add a tuple type (where each element is typed), allow to return it from functions\r\n* [ ] Add a dictionary type (the key/value are both typed), allow to return it from functions\r\n* [ ] Add a set type, allow to return it from functions\r\n* [ ] See if we can add a DataFrame (R/Panda/Apache Arrow style)\r\n* [ ] Masked arrays to represent missing values (related to data frame also)\r\n* [ ] Efficient \"push_back\" for 1D arrays, just like `std::vector::push_back()` with efficient doubling of internal allocated memory as needed\r\n* [ ] Each type has associated intrinsic functions that operate on it: complex has %re and %im; array has `size`, `shape`, `u/lbound`. String has `len`, `concat`. Dictionary has element access and appending, etc. Set has element access and appending.\r\n* [ ] Besides parallel loops and coarrays, also implement task based parallelism\r\n* [ ] Consider adding unsigned integers (for C interoperability and interacting with binary data formats that may store data in unsigned types)","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/487/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-05T15:59:54Z","updated_at":"2023-01-05T15:59:54Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1153","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/1153/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/1153/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/1153/events","html_url":"https://github.com/lfortran/lfortran/pull/1153","id":1517240830,"node_id":"PR_kwDOCpMuHc5GiGmb","number":1153,"title":"[Sprint] Bug fixes for AST->ASR transition to compile FPM","user":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false},"labels":[{"id":4854986878,"node_id":"LA_kwDOCpMuHc8AAAABIWE4fg","url":"https://api.github.com/repos/lfortran/lfortran/labels/stf","name":"stf","color":"C5DEF5","default":false,"description":"Part of the Sovereign Tech Fund project"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2023-01-03T11:08:47Z","updated_at":"2023-01-19T18:48:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"repository":{"id":177417757,"node_id":"MDEwOlJlcG9zaXRvcnkxNzc0MTc3NTc=","name":"lfortran","full_name":"lfortran/lfortran","private":false,"owner":{"login":"lfortran","id":40613057,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQwNjEzMDU3","avatar_url":"https://avatars.githubusercontent.com/u/40613057?v=4","gravatar_id":"","url":"https://api.github.com/users/lfortran","html_url":"https://github.com/lfortran","followers_url":"https://api.github.com/users/lfortran/followers","following_url":"https://api.github.com/users/lfortran/following{/other_user}","gists_url":"https://api.github.com/users/lfortran/gists{/gist_id}","starred_url":"https://api.github.com/users/lfortran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfortran/subscriptions","organizations_url":"https://api.github.com/users/lfortran/orgs","repos_url":"https://api.github.com/users/lfortran/repos","events_url":"https://api.github.com/users/lfortran/events{/privacy}","received_events_url":"https://api.github.com/users/lfortran/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/lfortran/lfortran","description":"Official main repository for LFortran","fork":false,"url":"https://api.github.com/repos/lfortran/lfortran","forks_url":"https://api.github.com/repos/lfortran/lfortran/forks","keys_url":"https://api.github.com/repos/lfortran/lfortran/keys{/key_id}","collaborators_url":"https://api.github.com/repos/lfortran/lfortran/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/lfortran/lfortran/teams","hooks_url":"https://api.github.com/repos/lfortran/lfortran/hooks","issue_events_url":"https://api.github.com/repos/lfortran/lfortran/issues/events{/number}","events_url":"https://api.github.com/repos/lfortran/lfortran/events","assignees_url":"https://api.github.com/repos/lfortran/lfortran/assignees{/user}","branches_url":"https://api.github.com/repos/lfortran/lfortran/branches{/branch}","tags_url":"https://api.github.com/repos/lfortran/lfortran/tags","blobs_url":"https://api.github.com/repos/lfortran/lfortran/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/lfortran/lfortran/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/lfortran/lfortran/git/refs{/sha}","trees_url":"https://api.github.com/repos/lfortran/lfortran/git/trees{/sha}","statuses_url":"https://api.github.com/repos/lfortran/lfortran/statuses/{sha}","languages_url":"https://api.github.com/repos/lfortran/lfortran/languages","stargazers_url":"https://api.github.com/repos/lfortran/lfortran/stargazers","contributors_url":"https://api.github.com/repos/lfortran/lfortran/contributors","subscribers_url":"https://api.github.com/repos/lfortran/lfortran/subscribers","subscription_url":"https://api.github.com/repos/lfortran/lfortran/subscription","commits_url":"https://api.github.com/repos/lfortran/lfortran/commits{/sha}","git_commits_url":"https://api.github.com/repos/lfortran/lfortran/git/commits{/sha}","comments_url":"https://api.github.com/repos/lfortran/lfortran/comments{/number}","issue_comment_url":"https://api.github.com/repos/lfortran/lfortran/issues/comments{/number}","contents_url":"https://api.github.com/repos/lfortran/lfortran/contents/{+path}","compare_url":"https://api.github.com/repos/lfortran/lfortran/compare/{base}...{head}","merges_url":"https://api.github.com/repos/lfortran/lfortran/merges","archive_url":"https://api.github.com/repos/lfortran/lfortran/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/lfortran/lfortran/downloads","issues_url":"https://api.github.com/repos/lfortran/lfortran/issues{/number}","pulls_url":"https://api.github.com/repos/lfortran/lfortran/pulls{/number}","milestones_url":"https://api.github.com/repos/lfortran/lfortran/milestones{/number}","notifications_url":"https://api.github.com/repos/lfortran/lfortran/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/lfortran/lfortran/labels{/name}","releases_url":"https://api.github.com/repos/lfortran/lfortran/releases{/id}","deployments_url":"https://api.github.com/repos/lfortran/lfortran/deployments","created_at":"2019-03-24T13:22:20Z","updated_at":"2023-01-19T07:32:40Z","pushed_at":"2023-01-19T19:07:25Z","git_url":"git://github.com/lfortran/lfortran.git","ssh_url":"git@github.com:lfortran/lfortran.git","clone_url":"https://github.com/lfortran/lfortran.git","svn_url":"https://github.com/lfortran/lfortran","homepage":"https://lfortran.org/","size":19098,"stargazers_count":504,"watchers_count":504,"language":"C++","has_issues":true,"has_projects":false,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":52,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":582,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["compiler","fortran","interactive","jupyter","jupyter-kernels","jupyter-notebook","library","repl"],"visibility":"public","forks":52,"open_issues":582,"watchers":504,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/lfortran/lfortran/pulls/1153","html_url":"https://github.com/lfortran/lfortran/pull/1153","diff_url":"https://github.com/lfortran/lfortran/pull/1153.diff","patch_url":"https://github.com/lfortran/lfortran/pull/1153.patch","merged_at":null},"body":"Continues https://github.com/lfortran/lfortran/pull/1109\r\n\r\nCommits to be added in `main`,\r\n\r\n- [ ] 8b34b51d444e88cb86092ea3406048a411e97af1 - 0de922b827b60746f802eb12ac0408cc3afcc4fe\r\n- [ ] 4db142668676aae870c671865ee5a75410459e69 - https://github.com/lfortran/lfortran/pull/1197\r\n- [ ] fc54bcecfda693310106fd2294d99f28144ded79 (removed the changes: 32e41478d5823ecfdbb77a1e93483f6dc6cd6ccf)\r\n- [ ] ea574ec99628644dc11d32cccafec7cfb591fdf1 (removed the changes: 32e41478d5823ecfdbb77a1e93483f6dc6cd6ccf)\r\n- [ ] 4fa15b3654743edb1ab7a1ab6378156df8a4127f - https://github.com/lfortran/lfortran/pull/1186 \r\n- [ ] 7b1c2acaa5db4141aed45d7bc4c3bc857833ddd6 - https://github.com/lfortran/lfortran/pull/1186\r\n- [ ] e96bf68ebc0d545bbc6312d00dd13b8a8cc17ef4 - https://github.com/lfortran/lfortran/pull/1188\r\n- [ ] 10887d7aaefcb839ef32fa682b772f6325ac859f -  https://github.com/lfortran/lfortran/pull/1188\r\n- [ ] 45c1fea9302983a6fc11c5534ac2882b1db6bc7c - https://github.com/lfortran/lfortran/pull/1187 \r\n- [ ] d361811b0d504daecef983a11cf633b3c06778c1 - https://github.com/lfortran/lfortran/pull/1189\r\n- [ ] 9bd752f45518c6f447d43422f415dc2360fc1b01 - https://github.com/lfortran/lfortran/pull/1189 \r\n- [ ] d6b3c61941dead75d44979c6a3b81da919a58754 - https://github.com/lfortran/lfortran/pull/1188\r\n- [ ] 851f9d027d150432a78ed272ec316da4e8e75aa4 - https://github.com/lfortran/lfortran/pull/1188\r\n- [ ] 9219c45abf51dfbb8551b528e1e5accbd5857c3b - https://github.com/lfortran/lfortran/pull/1188  \r\n- [ ] 1483018001f30645d29be7e8750fa4d26a197edc - https://github.com/lfortran/lfortran/pull/1188  \r\n- [ ] 27a4d6107c2db87d5d3a235427a0b3e3a938bbd2 - https://github.com/lfortran/lfortran/pull/1188 \r\n- [ ] c9e9dfb858464d77d4b4104c09ad038737797c9a - N/A \r\n- [ ] 72f0bbaeaa5ab675037945f4f747110b5db6b1d0 - https://github.com/lfortran/lfortran/pull/1188\r\n- [ ] 424e685a003bce22e57ece1ce51e4d5597776cda - https://github.com/lfortran/lfortran/pull/1188\r\n- [ ] 6f5dcab8f3757eaebe06d41b46d2122891ba5844 - https://github.com/lfortran/lfortran/pull/1188 \r\n- [ ] fa328760ea896157df5cce0941f276413fc51d30 - https://github.com/lfortran/lfortran/pull/1188\r\n- [ ] 5143dd57c638dea6281a7aba586a9627f01c17ea - @czgdp1807 \r\n- [ ] 58616599bb3e519cff887001e894c07adff878f9 - https://github.com/lfortran/lfortran/pull/1187\r\n- [ ] f7e4fd860284b41449f03e7d03a471885dbc0470 - https://github.com/lfortran/lfortran/pull/1188 \r\n- [ ] 07fee24495e49d78753bc75c0ab1aaf2ab8fb29b - https://github.com/lfortran/lfortran/pull/1187\r\n- [ ] 50d5ed8a890f7be1f8e4cbcaef602b0f9b62d61d - @Smit-create \r\n\r\n@Thirumalai-Shaktivel Please continue your sprint here. Also please **do not rebase on top of `main` branch**. I need the commits to cherry-pick in future, so please **do not change the git history of the PR**. Just add new commits and push.\r\n\r\nProgress:\r\n```zsh\r\n% FPM_FC=lfortran fpm build\r\nfilesystem_utilities.c                 done.\r\nfpm_strings.f90                        done.\r\nfpm_backend_console.f90                done.\r\niscygpty.c                             done.\r\nisatty.c                               done.\r\nconstants.f90                          done.\r\nversion.f90                            done.\r\nM_CLI2.F90                             done.\r\nerror.f90                              done.\r\nerror.f90                              done.\r\ndatetime.f90                           done.\r\nverify.f90                             done.\r\nfpm_environment.f90                    done.\r\nfpm_os.F90                             done.\r\nversioning.f90                         done.\r\nconvert.f90                            done.\r\nfpm_filesystem.F90                     done.\r\nutils.f90                              done.\r\nfpm_command_line.f90                   done.\r\ninstaller.f90                          done.\r\ngit.f90                                done.\r\nvalue.f90                              done.\r\nsort.f90                               done.\r\nkeyval.f90                             done.\r\nbase.f90                               done.\r\nvector.f90                             done.\r\nstructure.f90                          done.\r\ntable.f90                              done.\r\narray.f90                              done.\r\ntype.f90                               done.\r\nser.f90                                done.\r\ntokenizer.f90                          done.\r\nmerge.f90                              done.\r\nkeyval.f90                             done.\r\ncharacter.f90                          failed.\r\n[ 52%] Compiling...\r\nTraceback (most recent call last):\r\n  File \"/Users/thebigbool/repos2/lfortran/src/bin/lfortran.cpp\", line 1901\r\n    return compile_to_object_file(arg_file, outfile, false,\r\n  File \"/Users/thebigbool/repos2/lfortran/src/bin/lfortran.cpp\", line 833\r\n    result = fe.get_asr2(input, lm, diagnostics);\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/fortran_evaluator.cpp\", line 240\r\n    Result<ASR::TranslationUnit_t*> res2 = get_asr3(*ast, diagnostics);\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/fortran_evaluator.cpp\", line 263\r\n    if (res.ok) {\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/semantics/ast_to_asr.cpp\", line 49\r\n    if (res.ok) {\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 1772\r\n    v.visit_TranslationUnit(ast);\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 113\r\n    visit_ast(*x.m_items[i]);\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/ast.h\", line 4764\r\n    void visit_ast(const ast_t &b) { visit_ast_t(b, self()); }\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/ast.h\", line 4722\r\n    case astType::mod: { v.visit_mod((const mod_t &)x); return; }\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/ast.h\", line 4767\r\n    void visit_mod(const mod_t &b) { visit_mod_t(b, self()); }\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/ast.h\", line 4362\r\n    case modType::Module: { v.visit_Module((const Module_t &)x); return; }\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 275\r\n    in_module = false;\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 250\r\n    visit_program_unit(*x.m_contains[i]);\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/ast.h\", line 4772\r\n    void visit_program_unit(const program_unit_t &b) { visit_program_unit_t(b, self()); }\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/ast.h\", line 4373\r\n    case program_unitType::Subroutine: { v.visit_Subroutine((const Subroutine_t &)x); return; }\r\n  File \"/Users/thebigbool/repos2/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 508\r\n    f2->m_abi == ASR::abiType::Interactive) {\r\n  Binary file \"/usr/lib/system/libsystem_platform.dylib\", local address: 0x7ff8003f5c1c\r\nSegfault: Signal SIGSEGV (segmentation fault) received\r\n<ERROR> Compilation failed for object \" build_dependencies_toml-f_src_tomlf_de_character.f90.o \"\r\n<ERROR>stopping due to failed compilation\r\nSTOP 1\r\n```","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1153/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/1153/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-05T16:57:18Z","updated_at":"2023-01-05T16:57:18Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/certik/minpack/issues/13","repository_url":"https://api.github.com/repos/certik/minpack","labels_url":"https://api.github.com/repos/certik/minpack/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/certik/minpack/issues/13/comments","events_url":"https://api.github.com/repos/certik/minpack/issues/13/events","html_url":"https://github.com/certik/minpack/issues/13","id":1506044841,"node_id":"I_kwDOADYLGs5ZxGup","number":13,"title":"ASR verify pass error: example_primes","user":{"login":"Pranavchiku","id":85227306,"node_id":"MDQ6VXNlcjg1MjI3MzA2","avatar_url":"https://avatars.githubusercontent.com/u/85227306?v=4","gravatar_id":"","url":"https://api.github.com/users/Pranavchiku","html_url":"https://github.com/Pranavchiku","followers_url":"https://api.github.com/users/Pranavchiku/followers","following_url":"https://api.github.com/users/Pranavchiku/following{/other_user}","gists_url":"https://api.github.com/users/Pranavchiku/gists{/gist_id}","starred_url":"https://api.github.com/users/Pranavchiku/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Pranavchiku/subscriptions","organizations_url":"https://api.github.com/users/Pranavchiku/orgs","repos_url":"https://api.github.com/users/Pranavchiku/repos","events_url":"https://api.github.com/users/Pranavchiku/events{/privacy}","received_events_url":"https://api.github.com/users/Pranavchiku/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-12-21T10:08:52Z","updated_at":"2023-01-05T18:30:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"repository":{"id":3541786,"node_id":"MDEwOlJlcG9zaXRvcnkzNTQxNzg2","name":"minpack","full_name":"certik/minpack","private":false,"owner":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"html_url":"https://github.com/certik/minpack","description":"Library for solving nonlinear equations and nonlinear least squares problems","fork":false,"url":"https://api.github.com/repos/certik/minpack","forks_url":"https://api.github.com/repos/certik/minpack/forks","keys_url":"https://api.github.com/repos/certik/minpack/keys{/key_id}","collaborators_url":"https://api.github.com/repos/certik/minpack/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/certik/minpack/teams","hooks_url":"https://api.github.com/repos/certik/minpack/hooks","issue_events_url":"https://api.github.com/repos/certik/minpack/issues/events{/number}","events_url":"https://api.github.com/repos/certik/minpack/events","assignees_url":"https://api.github.com/repos/certik/minpack/assignees{/user}","branches_url":"https://api.github.com/repos/certik/minpack/branches{/branch}","tags_url":"https://api.github.com/repos/certik/minpack/tags","blobs_url":"https://api.github.com/repos/certik/minpack/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/certik/minpack/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/certik/minpack/git/refs{/sha}","trees_url":"https://api.github.com/repos/certik/minpack/git/trees{/sha}","statuses_url":"https://api.github.com/repos/certik/minpack/statuses/{sha}","languages_url":"https://api.github.com/repos/certik/minpack/languages","stargazers_url":"https://api.github.com/repos/certik/minpack/stargazers","contributors_url":"https://api.github.com/repos/certik/minpack/contributors","subscribers_url":"https://api.github.com/repos/certik/minpack/subscribers","subscription_url":"https://api.github.com/repos/certik/minpack/subscription","commits_url":"https://api.github.com/repos/certik/minpack/commits{/sha}","git_commits_url":"https://api.github.com/repos/certik/minpack/git/commits{/sha}","comments_url":"https://api.github.com/repos/certik/minpack/comments{/number}","issue_comment_url":"https://api.github.com/repos/certik/minpack/issues/comments{/number}","contents_url":"https://api.github.com/repos/certik/minpack/contents/{+path}","compare_url":"https://api.github.com/repos/certik/minpack/compare/{base}...{head}","merges_url":"https://api.github.com/repos/certik/minpack/merges","archive_url":"https://api.github.com/repos/certik/minpack/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/certik/minpack/downloads","issues_url":"https://api.github.com/repos/certik/minpack/issues{/number}","pulls_url":"https://api.github.com/repos/certik/minpack/pulls{/number}","milestones_url":"https://api.github.com/repos/certik/minpack/milestones{/number}","notifications_url":"https://api.github.com/repos/certik/minpack/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/certik/minpack/labels{/name}","releases_url":"https://api.github.com/repos/certik/minpack/releases{/id}","deployments_url":"https://api.github.com/repos/certik/minpack/deployments","created_at":"2012-02-25T02:25:56Z","updated_at":"2022-10-06T16:34:33Z","pushed_at":"2023-01-17T22:32:43Z","git_url":"git://github.com/certik/minpack.git","ssh_url":"git@github.com:certik/minpack.git","clone_url":"https://github.com/certik/minpack.git","svn_url":"https://github.com/certik/minpack","homepage":"http://www.netlib.org/minpack/","size":260,"stargazers_count":31,"watchers_count":31,"language":"Fortran","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":11,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":5,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":11,"open_issues":5,"watchers":31,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"```console\r\nASR verify pass error: ASR verify: Function find_fit depends on expr but isn't found in its dependency list.\r\n  --> /home/pranavchiku/minpack/examples/example_primes.f90:23:1 - 63:1\r\n   |\r\n23 |    subroutine find_fit(data_x, data_y, expr, pars)\r\n   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...\r\n...\r\n   |\r\n63 |    \r\n   | ...^ failed here\r\n```\r\nI am trying to have a minimal reproducible error, so that it can be easy to debug.","reactions":{"url":"https://api.github.com/repos/certik/minpack/issues/13/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/certik/minpack/issues/13/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372487399","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1372487399","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1372487399,"node_id":"IC_kwDOCpMuHc5Rzn7n","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-05T17:06:04Z","updated_at":"2023-01-05T17:21:41Z","author_association":"CONTRIBUTOR","body":"Here is one idea to get started:\r\n```diff\r\ndiff --git a/src/libasr/ASR.asdl b/src/libasr/ASR.asdl\r\nindex 450004d0a..8af10a9c0 100644\r\n--- a/src/libasr/ASR.asdl\r\n+++ b/src/libasr/ASR.asdl\r\n@@ -84,10 +84,7 @@ symbol\r\n         stmt* body)\r\n     | Module(symbol_table symtab, identifier name, identifier* dependencies,\r\n         bool loaded_from_mod, bool intrinsic)\r\n-    | Function(symbol_table symtab, identifier name, identifier* dependencies, expr* args, stmt* body,\r\n-        expr? return_var, abi abi, access access, deftype deftype,\r\n-        string? bindc_name, bool elemental, bool pure, bool module, bool inline,\r\n-        bool static, ttype* type_params, symbol* restrictions, bool is_restriction)\r\n+    | Function(symbol_table symtab, ttype function_signature, stmt* body)\r\n     | GenericProcedure(symbol_table parent_symtab, identifier name,\r\n         symbol* procs, access access)\r\n     | CustomOperator(symbol_table parent_symtab, identifier name,\r\n@@ -98,6 +95,10 @@ symbol\r\n     | StructType(symbol_table symtab, identifier name, identifier* dependencies,\r\n         identifier* members, abi abi, access access, bool is_packed,\r\n         expr? alignment, symbol? parent)\r\n+    | FunctionType(symbol_table symtab, identifier name, identifier* dependencies, expr* args,\r\n+        expr? return_var, abi abi, access access, deftype deftype,\r\n+        string? bindc_name, bool elemental, bool pure, bool module, bool inline,\r\n+        bool static, ttype* type_params, symbol* restrictions, bool is_restriction)\r\n     | EnumType(symbol_table symtab, identifier name, identifier* dependencies,\r\n         identifier* members, abi abi, access access, enumtype enum_value_type,\r\n         ttype type, symbol? parent)\r\n@@ -355,6 +356,7 @@ ttype\r\n     | Const(ttype type)\r\n     | CPtr()\r\n     | TypeParameter(identifier param, dimension* dims)\r\n+    | Function2(symbol function_type)\r\n \r\n restriction_arg = RestrictionArg(identifier restriction_name, symbol restriction_func)\r\n\r\n```\r\n\r\nI am not happy with this, but it's a start. Issues:\r\n\r\n* I had to use `Function2` since `Function` is already taken.\r\n* I am confused what should be a `symbol` and what should be a `ttype`. But something along the lines above.\r\n* where should the function name be stored, in `Function` or `FunctionType`?\r\n\r\nHow should the following declaration be handled in ASR:\r\n```\r\nsubroutine find_fit(x, expr)\r\n    real :: x\r\n    interface\r\n        function expr(x) result(y)\r\n            real, intent(in) :: x\r\n            real :: y\r\n        end function\r\n    end interface\r\nend subroutine\r\n```\r\nIn here, the `expr` is a name of an argument (callback), so it probably has to be a Variable of type \"Function2\". The variable should be called \"expr\", so then Function2 or FunctionType should not have a \"name\"?\r\n\r\nWhat about this example:\r\n```\r\nsubroutine find_fit(x, expr_var)\r\n    real :: x\r\n    interface\r\n        function expr(x) result(y)\r\n            real, intent(in) :: x\r\n            real :: y\r\n        end function\r\n    end interface\r\n    procedure(expr) :: expr_var\r\nend subroutine\r\n```\r\nIn here, the `expr` is a function type, the type itself has a name `expr`, and then it is used to define a variable `expr_var` of this type `expr`.\r\n\r\n\r\nLambda functions do not have a name, they can be \"bind\" to a name (like `fn = lambda x: x+1`), but don't have to (as in `my_func(lambda x: x+1)`). So it seems `FunctionType` above should not have a name. This design would then look like this:\r\n```diff\r\ndiff --git a/src/libasr/ASR.asdl b/src/libasr/ASR.asdl\r\nindex 450004d0a..15368c45c 100644\r\n--- a/src/libasr/ASR.asdl\r\n+++ b/src/libasr/ASR.asdl\r\n@@ -84,10 +84,7 @@ symbol\r\n         stmt* body)\r\n     | Module(symbol_table symtab, identifier name, identifier* dependencies,\r\n         bool loaded_from_mod, bool intrinsic)\r\n-    | Function(symbol_table symtab, identifier name, identifier* dependencies, expr* args, stmt* body,\r\n-        expr? return_var, abi abi, access access, deftype deftype,\r\n-        string? bindc_name, bool elemental, bool pure, bool module, bool inline,\r\n-        bool static, ttype* type_params, symbol* restrictions, bool is_restriction)\r\n+    | Function(symbol_table symtab, identifier name, ttype function_signature, stmt* body)\r\n     | GenericProcedure(symbol_table parent_symtab, identifier name,\r\n         symbol* procs, access access)\r\n     | CustomOperator(symbol_table parent_symtab, identifier name,\r\n@@ -355,6 +352,10 @@ ttype\r\n     | Const(ttype type)\r\n     | CPtr()\r\n     | TypeParameter(identifier param, dimension* dims)\r\n+    | FunctionType(symbol_table symtab, identifier* dependencies, expr* args,\r\n+        expr? return_var, abi abi, access access, deftype deftype,\r\n+        string? bindc_name, bool elemental, bool pure, bool module, bool inline,\r\n+        bool static, ttype* type_params, symbol* restrictions, bool is_restriction)\r\n \r\n restriction_arg = RestrictionArg(identifier restriction_name, symbol restriction_func)\r\n \r\n```\r\n\r\nThis design seems better and it would be able to represent `fn = lambda x: x+1` (a Variable of ttype FunctionType). There is problem with `my_func(lambda x: x+1)`: the function would be declared with an argument of symbol Variable of ttype FunctionType; but the FunctionCall would have an expression, most likely Var, of ttype FunctionType, but Var points to a Variable which must have a name). Also what about:\r\n```\r\n    interface\r\n        function expr(x) result(y)\r\n            real, intent(in) :: x\r\n            real :: y\r\n        end function\r\n    end interface\r\n    procedure(expr) :: expr_var\r\n```\r\nThe `expr_var` would be a variable of ttype FunctionType. But how would \"expr\" be represented?\r\n\r\nHere is one idea, let's add a `NamedFunctionType` symbol, like this:\r\n```diff\r\ndiff --git a/src/libasr/ASR.asdl b/src/libasr/ASR.asdl\r\nindex 450004d0a..a2542ce57 100644\r\n--- a/src/libasr/ASR.asdl\r\n+++ b/src/libasr/ASR.asdl\r\n@@ -84,10 +84,8 @@ symbol\r\n         stmt* body)\r\n     | Module(symbol_table symtab, identifier name, identifier* dependencies,\r\n         bool loaded_from_mod, bool intrinsic)\r\n-    | Function(symbol_table symtab, identifier name, identifier* dependencies, expr* args, stmt* body,\r\n-        expr? return_var, abi abi, access access, deftype deftype,\r\n-        string? bindc_name, bool elemental, bool pure, bool module, bool inline,\r\n-        bool static, ttype* type_params, symbol* restrictions, bool is_restriction)\r\n+    | Function(symbol_table symtab, identifier name, ttype function_signature, stmt* body)\r\n+    | NamedFunctionType(symbol_table parent_symtab, identifier name, ttype function_signature)\r\n     | GenericProcedure(symbol_table parent_symtab, identifier name,\r\n         symbol* procs, access access)\r\n     | CustomOperator(symbol_table parent_symtab, identifier name,\r\n@@ -355,6 +353,10 @@ ttype\r\n     | Const(ttype type)\r\n     | CPtr()\r\n     | TypeParameter(identifier param, dimension* dims)\r\n+    | FunctionType(symbol_table symtab, identifier* dependencies, expr* args,\r\n+        expr? return_var, abi abi, access access, deftype deftype,\r\n+        string? bindc_name, bool elemental, bool pure, bool module, bool inline,\r\n+        bool static, ttype* type_params, symbol* restrictions, bool is_restriction)\r\n \r\n restriction_arg = RestrictionArg(identifier restriction_name, symbol restriction_func)\r\n \r\n```\r\nThen the `expr` would become part of the symbol table, represented using the `NamedFunctionType` node.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372487399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372510120","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1372510120","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1372510120,"node_id":"IC_kwDOCpMuHc5Rzteo","user":{"login":"rebcabin","id":207047,"node_id":"MDQ6VXNlcjIwNzA0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/207047?v=4","gravatar_id":"","url":"https://api.github.com/users/rebcabin","html_url":"https://github.com/rebcabin","followers_url":"https://api.github.com/users/rebcabin/followers","following_url":"https://api.github.com/users/rebcabin/following{/other_user}","gists_url":"https://api.github.com/users/rebcabin/gists{/gist_id}","starred_url":"https://api.github.com/users/rebcabin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebcabin/subscriptions","organizations_url":"https://api.github.com/users/rebcabin/orgs","repos_url":"https://api.github.com/users/rebcabin/repos","events_url":"https://api.github.com/users/rebcabin/events{/privacy}","received_events_url":"https://api.github.com/users/rebcabin/received_events","type":"User","site_admin":false},"created_at":"2023-01-05T17:22:46Z","updated_at":"2023-01-05T17:22:46Z","author_association":"NONE","body":"(written before your input above ... which I'm reading now):\r\n\r\nUse it to represent a function type, in callbacks like procedure(my_funtion_type). Probably Function should just reference this FunctionType as well.\r\n\r\nSome details to figure out:\r\n\r\n>    What should be part of FunctionType: probably arguments and\r\n>    return value (as well as type_params and restrictions ?)\r\n\r\n## Parameter Tuples\r\n\r\nParameter types must be part of the function signature. Argument\r\ntypes only pertain to call expressions, not to function\r\nsignatures. Python literature often conflates \"parameter\" and\r\n\"argument.\" We must always be clear about the difference.\r\n\r\nA function of `n > 1` fixed, positional, mandatory, non-defaulted\r\nparameters may be modeled as a function of one parameter of tuple\r\ntype, or as a Curried function that returns Curried functions\r\nuntil the parameters run out. The first is written\r\n\r\n`fn : (S0, S1, ..., Sn_1) -> T`\r\n\r\nthe second is written\r\n\r\n`fn : S0 -> S1 -> ... -> Sn_1 -> T`\r\n\r\nwhere `Si` are the types of the parameters and `(S0, S1, ...)` is\r\nthe type of a tuple of parameters of given types.\r\n\r\nThe two representations above are isomorphic. I recommend the\r\ntuple representation; it makes Python easy but Haskell requires a\r\nsecond step. That's the right trade-off.\r\n\r\nIn modeling Haskell functions with parameter tuples, a\r\n\"restriction\" must be recorded because Haskell automatically\r\nCurries all function types and partially evaluates all function\r\ninvocations.\r\n\r\n## Metadata (Restrictions):\r\n\r\nFunction types should include an extendible metadata attribute.\r\nClojure's design is State-of-the-Art:\r\nhttps://clojure.org/reference/metadata.\r\n\r\nIn short, \"metadata\" is a dictionary of symbols to values. Some of\r\nthe symbols and values will be defined in ASR and well known.\r\nOthers will be language-specific or back-end-specific. All\r\nwell-known symbols must have default values, which pertain when\r\nmetadata is absent or partial. Implementations shall ignore\r\nsymbols and values it cannot parse or interpret.\r\n\r\n## Optional, Defaulted, and Keyword parameters:\r\n\r\nPython leads the way in specification of parameter lists with\r\nnon-positional, optional, defaulted, and keyword parameters (and\r\narguments). See (e.g.)\r\nhttps://docs.python.org/3.11/reference/compound_stmts.html#function-definitions.\r\nI believe that if we can handle all the Python cases, we can\r\nhandle the cases for any other front-end language of interest.\r\n\r\n\r\n>    What about side-effect-free / deterministic, and other flags\r\n>    like inline, static, abi, access, bindc, elemental, pure,\r\n>    module ?\r\n\r\nWhy not make them members of the \"metadata\" with defaulted values\r\n\r\n```\r\ninline=false\r\n\r\nstatic=false (does this just mean \"non-linkable?\" or does it have\r\nimplications about memory allocation?)\r\n\r\nabi=false (not sure what this means)\r\n\r\nbindc=false (not sure what this means)\r\n\r\nelemental=false (not sure what this means)\r\n\r\npure=false (set true if ASR guarantees no side effects; also\r\nimplies the function can be auto-memoized)\r\n\r\nmodule=false (is this about namespaces? or something deeper,\r\nsomething else?)\r\n```\r\n\r\n>    When does a given function satisfy the type, say for a\r\n>    callback: arguments must exactly match. Does \"elemental\" have\r\n>    to match? What about other flags?\r\n\r\n## Subtypes\r\n\r\nAn actual argument of type `TA` should match a parameter of type\r\n`TB` if `TA` is a sub-type of `TB`. This is a big topic with\r\nramifications in ASRs assumed \"numeric tower\" (i.e., is \"real\" a\r\nsubtype of \"complex?\") if there is a numeric tower. Also, consider\r\n\"exact\" versus \"inexact,\" precision specifications, and, for\r\ncollection types, covariance (in output positions) and\r\ncontravariance (in input positions)\r\n\r\n>    Name probably should not be part of it, so that FunctionType can be used for lambda functions as well (that do not have a name)\r\n\r\n\"Name\" is not part of the type, proper, but it's helpful\r\n(mandatory?) metadata.\r\n\r\n\"Name\" can help with overload resolution. In practice, lambda\r\nfunctions often get secret gensymmed names (perhaps just hashes)\r\nso the compiler can coalesce and track them.\r\n\r\n>    How to represent the name of the type ? I think FunctionType\r\n>    would be a ttype, like Integer. Then we need to add a\r\n>    \"symbol\", like Variable, that would represent the named\r\n>    function type as a variable that you can reference in\r\n>    procedure(my_function_type), or something like that.\r\n\r\nYes, this gets into the \"Kind\" space of type theory: a meta-type\r\nsystem about types. Helps when reasoning about subtypes, Liskov\r\nsubstitution, covariance, etc. Function types have non-commutative\r\nalgebraic structure, though not very rich. Function types are not\r\njust atomic names.\r\n","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372510120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"rebcabin","id":207047,"node_id":"MDQ6VXNlcjIwNzA0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/207047?v=4","gravatar_id":"","url":"https://api.github.com/users/rebcabin","html_url":"https://github.com/rebcabin","followers_url":"https://api.github.com/users/rebcabin/followers","following_url":"https://api.github.com/users/rebcabin/following{/other_user}","gists_url":"https://api.github.com/users/rebcabin/gists{/gist_id}","starred_url":"https://api.github.com/users/rebcabin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebcabin/subscriptions","organizations_url":"https://api.github.com/users/rebcabin/orgs","repos_url":"https://api.github.com/users/rebcabin/repos","events_url":"https://api.github.com/users/rebcabin/events{/privacy}","received_events_url":"https://api.github.com/users/rebcabin/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372515447","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1372515447","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1372515447,"node_id":"IC_kwDOCpMuHc5Rzux3","user":{"login":"rebcabin","id":207047,"node_id":"MDQ6VXNlcjIwNzA0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/207047?v=4","gravatar_id":"","url":"https://api.github.com/users/rebcabin","html_url":"https://github.com/rebcabin","followers_url":"https://api.github.com/users/rebcabin/followers","following_url":"https://api.github.com/users/rebcabin/following{/other_user}","gists_url":"https://api.github.com/users/rebcabin/gists{/gist_id}","starred_url":"https://api.github.com/users/rebcabin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebcabin/subscriptions","organizations_url":"https://api.github.com/users/rebcabin/orgs","repos_url":"https://api.github.com/users/rebcabin/repos","events_url":"https://api.github.com/users/rebcabin/events{/privacy}","received_events_url":"https://api.github.com/users/rebcabin/received_events","type":"User","site_admin":false},"created_at":"2023-01-05T17:26:42Z","updated_at":"2023-01-05T17:26:42Z","author_association":"NONE","body":"Why not make \r\n\r\n```abi abi, access access, deftype deftype, string? bindc_name, bool elemental, bool pure, bool module, bool inline, bool static,```\r\n\r\nthe mandatory and defaulted parts of an extndible \"metadata\" attachment to the function type?","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372515447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"rebcabin","id":207047,"node_id":"MDQ6VXNlcjIwNzA0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/207047?v=4","gravatar_id":"","url":"https://api.github.com/users/rebcabin","html_url":"https://github.com/rebcabin","followers_url":"https://api.github.com/users/rebcabin/followers","following_url":"https://api.github.com/users/rebcabin/following{/other_user}","gists_url":"https://api.github.com/users/rebcabin/gists{/gist_id}","starred_url":"https://api.github.com/users/rebcabin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebcabin/subscriptions","organizations_url":"https://api.github.com/users/rebcabin/orgs","repos_url":"https://api.github.com/users/rebcabin/repos","events_url":"https://api.github.com/users/rebcabin/events{/privacy}","received_events_url":"https://api.github.com/users/rebcabin/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372519057","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1372519057","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1372519057,"node_id":"IC_kwDOCpMuHc5RzvqR","user":{"login":"rebcabin","id":207047,"node_id":"MDQ6VXNlcjIwNzA0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/207047?v=4","gravatar_id":"","url":"https://api.github.com/users/rebcabin","html_url":"https://github.com/rebcabin","followers_url":"https://api.github.com/users/rebcabin/followers","following_url":"https://api.github.com/users/rebcabin/following{/other_user}","gists_url":"https://api.github.com/users/rebcabin/gists{/gist_id}","starred_url":"https://api.github.com/users/rebcabin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebcabin/subscriptions","organizations_url":"https://api.github.com/users/rebcabin/orgs","repos_url":"https://api.github.com/users/rebcabin/repos","events_url":"https://api.github.com/users/rebcabin/events{/privacy}","received_events_url":"https://api.github.com/users/rebcabin/received_events","type":"User","site_admin":false},"created_at":"2023-01-05T17:30:17Z","updated_at":"2023-01-05T17:30:17Z","author_association":"NONE","body":"## Free Variables and Lambda Lifting \r\n\r\nTODO","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372519057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"rebcabin","id":207047,"node_id":"MDQ6VXNlcjIwNzA0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/207047?v=4","gravatar_id":"","url":"https://api.github.com/users/rebcabin","html_url":"https://github.com/rebcabin","followers_url":"https://api.github.com/users/rebcabin/followers","following_url":"https://api.github.com/users/rebcabin/following{/other_user}","gists_url":"https://api.github.com/users/rebcabin/gists{/gist_id}","starred_url":"https://api.github.com/users/rebcabin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebcabin/subscriptions","organizations_url":"https://api.github.com/users/rebcabin/orgs","repos_url":"https://api.github.com/users/rebcabin/repos","events_url":"https://api.github.com/users/rebcabin/events{/privacy}","received_events_url":"https://api.github.com/users/rebcabin/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372584884","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1372584884","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1372584884,"node_id":"IC_kwDOCpMuHc5Rz_u0","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-05T18:31:35Z","updated_at":"2023-01-05T18:31:35Z","author_association":"CONTRIBUTOR","body":"Some notes from our brainstorming:\r\n```\r\nEnvironment has two things:\r\n* Frame: mapping of symbols (=name/string) to values\r\n* Parent environment\r\n\r\n\r\n-- TODO: abstract parent from each of these, so that the parent lives in the\r\nenvironment, not the value\r\n-- value has two things:\r\n-- * a type\r\n-- * a representation (Program, Module, Function, Variable)\r\n-- * Our extension: a cached pointer to parent and also cached name\r\n\r\n-- Idea: each value should have set four slots:\r\n-- * cached *parent* symbol table (parent_symtab)\r\n-- * cached name\r\n-- * ttype\r\n-- Non-mandatory things (representation / metadata):\r\n-- * dependencies (optional)\r\n-- * everything else\r\n--\r\n-- The type of Module is a \"set of function types\", might need a generalized\r\n\"math\" sense:\r\n-- Variable can be viewed as a constant function with no arguments\r\n-- Struct can be viewed as a dictionary (unordered / duplicates not allowed)\r\n--\r\n-- ModuleType can then be used to represent \"import m\" in Python, where \"m\"\r\nwould become part of the local symbol table and it would be an instance of type\r\nModuleType\r\n--k\r\nvalue\r\n```","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1372584884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1373706046","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1373706046","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1373706046,"node_id":"IC_kwDOCpMuHc5R4Rc-","user":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false},"created_at":"2023-01-06T14:23:17Z","updated_at":"2023-01-06T14:24:12Z","author_association":"MEMBER","body":"I am able to implement the design in https://github.com/lfortran/lfortran/issues/1162#issuecomment-1372487399 (see https://github.com/lfortran/lfortran/pull/1153/commits/87caa59dc53ebea3f3a1b71ac313daeaa20a7829) with a small change which is to include `identifier name` in `FunctionType` because symbols without name are impossible to deserialise (see code snippet below),\r\n\r\nhttps://github.com/lfortran/lfortran/blob/8fea1bf012a4a3baa7cf1149e9c3a729c8ab154d/src/libasr/serialization.cpp#L82-L151\r\n\r\nAlso I think above design can be the only easy way of having function types. Initially I felt that `FunctionType` should only have types of arguments, return type and shouldn't have a symbol table, or store original arguments of the function. However, Fortran can define return type of a function by using one of the arguments (say, `len(arg)`) which makes it necessary to have a symbol table (which will store `len`, `arg`) and original arguments. So, **I can't think of any counter arguments to this design other than the inclusion of `name` attribute in `FunctionType` always (even though you can ignore it in the backend but needed for de-serialising correctly and also for `import_all` function in `src/lfortran/semantics/ast_symboltable_visitor.cpp`)**\r\n\r\n","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1373706046/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1373878700","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1373878700","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1373878700,"node_id":"IC_kwDOCpMuHc5R47ms","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-06T16:41:59Z","updated_at":"2023-01-06T16:41:59Z","author_association":"CONTRIBUTOR","body":"Great job @czgdp1807. Good point about the case like:\r\n```\r\nfunction f(A) result(r)\r\ninteger, intent(in) :: A(:)\r\ninteger :: r(size(A))\r\nend function\r\n```\r\nIt returns an integer array, whose size is determined using the input arguments. Should this information be part of the signature, and if not, where should it be stored and how should the signature look like? It seems to me it should be part of the signature. Instead of the symbol table, it can be just a list of types I think. A given type for `r` will contain the dimension information that contains size(A). But how would you reference `A` without a symbol table? And if there is a symbol table, how can this be just a type? I can see how this then leads to: https://github.com/lfortran/lfortran/commit/87caa59dc53ebea3f3a1b71ac313daeaa20a7829#diff-65d4f5aefdce4101f9c116614e2f04697eeb987fa16565c21070c0daf785c4e5","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1373878700/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"id":8170734007,"node_id":"MEE_lADOCpMuHc5aqDcOzwAAAAHnA4G3","url":"https://api.github.com/repos/lfortran/lfortran/issues/events/8170734007","actor":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2023-01-06T16:41:59Z","performed_via_github_app":null},{"id":8170734011,"node_id":"SE_lADOCpMuHc5aqDcOzwAAAAHnA4G7","url":"https://api.github.com/repos/lfortran/lfortran/issues/events/8170734011","actor":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2023-01-06T16:41:59Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374249861","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1374249861","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1374249861,"node_id":"IC_kwDOCpMuHc5R6WOF","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-06T23:23:25Z","updated_at":"2023-01-06T23:23:25Z","author_association":"CONTRIBUTOR","body":"I think it should be part of the signature after all, and you can reference other arguments using a new expr node `FunctionParam`:\r\n\r\nhttps://github.com/lcompilers/lpython/wiki/ASR-Design#types-and-symbol-table","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374249861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374257187","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1374257187","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1374257187,"node_id":"IC_kwDOCpMuHc5R6YAj","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-06T23:35:47Z","updated_at":"2023-01-06T23:40:50Z","author_association":"CONTRIBUTOR","body":"Here is the latest iteration that I have so far:\r\n```diff\r\n--- a/src/libasr/ASR.asdl\r\n+++ b/src/libasr/ASR.asdl\r\n@@ -84,10 +84,13 @@ symbol\r\n         stmt* body)\r\n     | Module(symbol_table symtab, identifier name, identifier* dependencies,\r\n         bool loaded_from_mod, bool intrinsic)\r\n-    | Function(symbol_table symtab, identifier name, identifier* dependencies, expr* args, stmt* body,\r\n+    | Function(symbol_table symtab, identifier name, ttype function_signature,\r\n+        identifier* dependencies, expr* args, stmt* body,\r\n         expr? return_var, abi abi, access access, deftype deftype,\r\n         string? bindc_name, bool elemental, bool pure, bool module, bool inline,\r\n         bool static, ttype* type_params, symbol* restrictions, bool is_restriction)\r\n+    | FunctionInterface(symbol_table parent_symtab, identifier name,\r\n+        ttype function_signature, identifier* param_names)\r\n     | GenericProcedure(symbol_table parent_symtab, identifier name,\r\n         symbol* procs, access access)\r\n     | CustomOperator(symbol_table parent_symtab, identifier name,\r\n@@ -355,6 +358,10 @@ ttype\r\n     | Const(ttype type)\r\n     | CPtr()\r\n     | TypeParameter(identifier param, dimension* dims)\r\n+    | FunctionType(ttype* params, ttype? return_var,\r\n+        abi abi, deftype deftype, string? bindc_name, bool elemental, bool pure,\r\n+        bool module, bool inline, bool static, ttype* type_params, symbol*\r\n+        restrictions, bool is_restriction)\r\n \r\n restriction_arg = RestrictionArg(identifier restriction_name, symbol restriction_func)\r\n \r\n```\r\nThe FunctionInterface (prototype) has a name, and a name for all the parameters. The parameter types are in the FunctionType. The Function still implements the arguments as we do now, since we have to reference them from the body. But it also links to the FunctionType.\r\n\r\n\r\nHowever, it is now inconsistent with Struct and Class. Both currently need a symbol table to store all the variables and methods; let's focus on them now. If there is no clean way to have a StructType and ClassType without the symbol table, then we should probably revisit the FunctionType to be consistent.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374257187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"id":8173140697,"node_id":"REFE_lADOCpMuHc5aqDcOzwAAAAHnKDrZ","url":"https://api.github.com/repos/lfortran/lfortran/issues/events/8173140697","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"event":"referenced","commit_id":"87caa59dc53ebea3f3a1b71ac313daeaa20a7829","commit_url":"https://api.github.com/repos/lfortran/lfortran/commits/87caa59dc53ebea3f3a1b71ac313daeaa20a7829","created_at":"2023-01-06T23:38:16Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374388817","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1374388817","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1374388817,"node_id":"IC_kwDOCpMuHc5R64JR","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-07T06:05:37Z","updated_at":"2023-01-07T06:05:37Z","author_association":"CONTRIBUTOR","body":"@rebcabin and I made more progress on the design. Here is the latest iteration, roughly:\r\n```diff\r\n--- a/src/libasr/ASR.asdl\r\n+++ b/src/libasr/ASR.asdl\r\n@@ -84,10 +84,13 @@ symbol\r\n         stmt* body)\r\n     | Module(symbol_table symtab, identifier name, identifier* dependencies,\r\n         bool loaded_from_mod, bool intrinsic)\r\n-    | Function(symbol_table symtab, identifier name, identifier* dependencies, \r\nexpr* args, stmt* body,\r\n+    | Function(symbol_table symtab, identifier name, ttype function_signature,\r\n+        identifier* dependencies, expr* args, stmt* body,\r\n         expr? return_var, abi abi, access access, deftype deftype,\r\n         string? bindc_name, bool elemental, bool pure, bool module, bool inline\r\n,\r\n         bool static, ttype* type_params, symbol* restrictions, bool is_restrict\r\nion)\r\n+    | UserDefinedType(symtab parent_scope, identifier name, ttype user_type,\r\n+        identifier* dependencies)\r\n     | GenericProcedure(symbol_table parent_symtab, identifier name,\r\n         symbol* procs, access access)\r\n     | CustomOperator(symbol_table parent_symtab, identifier name,\r\n@@ -95,20 +98,9 @@ symbol\r\n     | ExternalSymbol(symbol_table parent_symtab, identifier name,\r\n         symbol external, identifier module_name, identifier* scope_names,\r\n         identifier original_name, access access)\r\n-    | StructType(symbol_table symtab, identifier name, identifier* dependencies,\r\n-        identifier* members, abi abi, access access, bool is_packed,\r\n-        expr? alignment, symbol? parent)\r\n-    | EnumType(symbol_table symtab, identifier name, identifier* dependencies,\r\n-        identifier* members, abi abi, access access, enumtype enum_value_type,\r\n-        ttype type, symbol? parent)\r\n-    | UnionType(symbol_table symtab, identifier name, identifier* dependencies,\r\n-        identifier* members, abi abi, access access, symbol? parent)\r\n     | Variable(symbol_table parent_symtab, identifier name, identifier* dependencies,\r\n         intent intent, expr? symbolic_value, expr? value, storage_type storage, ttype type,\r\n         abi abi, access access, presence presence, bool value_attr)\r\n-    | ClassType(symbol_table symtab, identifier name, abi abi, access access)\r\n-    | ClassProcedure(symbol_table parent_symtab, identifier name, identifier? self_argument,\r\n-        identifier proc_name, symbol proc, abi abi)\r\n     | AssociateBlock(symbol_table symtab, identifier name, stmt* body)\r\n     | Block(symbol_table symtab, identifier name, stmt* body)\r\n \r\n@@ -346,15 +338,29 @@ ttype\r\n     | Set(ttype type)\r\n     | List(ttype type)\r\n     | Tuple(ttype* type)\r\n-    | Struct(symbol derived_type, dimension* dims)\r\n-    | Enum(symbol enum_type, dimension *dims)\r\n-    | Union(symbol union_type, dimension *dims)\r\n-    | Class(symbol class_type, dimension* dims)\r\n+    | StructType(identifier name, ttype* members, identifier* member_names,\r\n+        abi abi, access access, bool is_packed, expr? alignment, symbol? parent)\r\n+    | EnumType(identifier name, identifier* members, enumtype enum_value_type,\r\n+        abi abi, access access, enumtype enum_value_type, ttype type,\r\n+        symbol? parent)\r\n+    | UnionType(identifier name, ttype* members, identifier* member_names,\r\n+        abi abi, access access, symbol? parent)\r\n+    | ClassType(identifier name, ttype* members, identifier* member_names,\r\n+        abi abi, access access)\r\n     | Dict(ttype key_type, ttype value_type)\r\n     | Pointer(ttype type)\r\n     | Const(ttype type)\r\n     | CPtr()\r\n     | TypeParameter(identifier param, dimension* dims)\r\n+    | FunctionType(ttype* params, ttype? return_var,\r\n+        abi abi, deftype deftype, string? bindc_name, bool elemental, bool pure,\r\n+        bool module, bool inline, bool static, ttype* type_params, symbol*\r\n+        restrictions, bool is_restriction)\r\n+    | ClassProcedureType(ttype* params, ttype? return_var, identifier name,\r\n+        identifier? self_argument, identifier proc_name, symbol proc, abi abi)\r\n+ \r\n+\r\n+\r\n \r\n restriction_arg = RestrictionArg(identifier restriction_name, symbol restriction_func)\r\n ```","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374388817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"id":8173883737,"node_id":"MEE_lADOCpMuHc5aqDcOzwAAAAHnM5FZ","url":"https://api.github.com/repos/lfortran/lfortran/issues/events/8173883737","actor":{"login":"rebcabin","id":207047,"node_id":"MDQ6VXNlcjIwNzA0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/207047?v=4","gravatar_id":"","url":"https://api.github.com/users/rebcabin","html_url":"https://github.com/rebcabin","followers_url":"https://api.github.com/users/rebcabin/followers","following_url":"https://api.github.com/users/rebcabin/following{/other_user}","gists_url":"https://api.github.com/users/rebcabin/gists{/gist_id}","starred_url":"https://api.github.com/users/rebcabin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebcabin/subscriptions","organizations_url":"https://api.github.com/users/rebcabin/orgs","repos_url":"https://api.github.com/users/rebcabin/repos","events_url":"https://api.github.com/users/rebcabin/events{/privacy}","received_events_url":"https://api.github.com/users/rebcabin/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2023-01-07T06:05:37Z","performed_via_github_app":null},{"id":8173883739,"node_id":"SE_lADOCpMuHc5aqDcOzwAAAAHnM5Fb","url":"https://api.github.com/repos/lfortran/lfortran/issues/events/8173883739","actor":{"login":"rebcabin","id":207047,"node_id":"MDQ6VXNlcjIwNzA0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/207047?v=4","gravatar_id":"","url":"https://api.github.com/users/rebcabin","html_url":"https://github.com/rebcabin","followers_url":"https://api.github.com/users/rebcabin/followers","following_url":"https://api.github.com/users/rebcabin/following{/other_user}","gists_url":"https://api.github.com/users/rebcabin/gists{/gist_id}","starred_url":"https://api.github.com/users/rebcabin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebcabin/subscriptions","organizations_url":"https://api.github.com/users/rebcabin/orgs","repos_url":"https://api.github.com/users/rebcabin/repos","events_url":"https://api.github.com/users/rebcabin/events{/privacy}","received_events_url":"https://api.github.com/users/rebcabin/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2023-01-07T06:05:37Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374395829","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1374395829","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1374395829,"node_id":"IC_kwDOCpMuHc5R6521","user":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false},"created_at":"2023-01-07T06:56:26Z","updated_at":"2023-01-07T12:19:29Z","author_association":"MEMBER","body":"Point to be noted,\r\n\r\nFunction argument variables have attributes like, `intent(in)`, `intent(out)`, `allocatable`, `optional` etc. The above design stores only the `ttype` of argument variables and return types. `ttype` doesn't store attributes (i.e., `intent`, `presence`, `allocatable`, etc.). This means `FunctionType` would never know what the actual attributes of argument variables is, so they would never be used while comparing function signatures.\r\n\r\nOther than the above point, I'd say I like the new design with `FunctionType` actually as a `ttype`.  I implemented it in https://github.com/lfortran/lfortran/pull/1153/commits/d361811b0d504daecef983a11cf633b3c06778c1 and used in https://github.com/lfortran/lfortran/pull/1153/commits/8fda492e63fc1c9f60f373adb73634ebaef889d8. Found it very simple and elegant. This is exactly what I imagined for `FunctionType` (i.e., just types and no other information like argument names, argument expressions). Also note that we don't need `FunctionInterface`, it feels redundant, do you have any use case where we can't work without it? \r\n","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374395829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374711032","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1374711032","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1374711032,"node_id":"IC_kwDOCpMuHc5R8Gz4","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-08T05:08:57Z","updated_at":"2023-01-08T05:10:58Z","author_association":"CONTRIBUTOR","body":"There is no FunctionInterface in the above diff, unless I missed it. The function interface would be represented by UserDefinedType and FunctionType.\r\n\r\nYes, the design is falling into shape, but it's not finished.\r\n\r\nI think `allocatable` should be part of the type, perhaps an Allocatable `ttype` node.\r\n\r\nThe `optional` and `intent` only apply to function parameters (arguments), so probably should not be part of any type, but should be tied to FunctionType. One way is to have an extra array in `FunctionType`, say `bool *optional_args`, it would say \"true/false\" if a given argument is optional. Something similar with intent.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374711032/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374711949","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1374711949","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1374711949,"node_id":"IC_kwDOCpMuHc5R8HCN","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-08T05:15:56Z","updated_at":"2023-01-08T05:15:56Z","author_association":"CONTRIBUTOR","body":"The StructType type would have names for the members --- we are not sure if it is needed or not, but the names of members have to be somewhere. If they are not part of the type, they need to be part of the UserDefinedType, which makes it specific to StructType; we could add a specific node UserDefinedStructType. One thing about types is that they are supposed to tell you what operations are allowed, so knowing which members you can access seems useful.\r\n\r\nFor FunctionType, it might be useful to store the argument names so that one can use keyword arguments. At the same time, for functions it seems the argument names make no difference for the type. In C and C++ you can even use a different name for the argument in the cpp file (I think) and it would work.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1374711949/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1377682912","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1377682912","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1377682912,"node_id":"IC_kwDOCpMuHc5SHcXg","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-10T18:32:53Z","updated_at":"2023-01-10T18:32:53Z","author_association":"CONTRIBUTOR","body":"Here is an example:\r\n```fortran\r\nprogram test\r\nimplicit none\r\ninterface\r\n    subroutine f(a, b, c)\r\n    integer, intent(in) :: a, b, c\r\n    end subroutine\r\nend interface\r\nprocedure(f) :: x\r\ncall f(1, 2, 3)\r\ncall f(c=1, a=2, b=3)\r\ncall x(1, 2, 3)\r\ncall x(c=1, a=2, b=3)\r\nend program\r\n```\r\nWhich shows that just from the function interface we still are allowed to pass function arguments as keyword arguments. So it seems the parameter names should be part of the FunctionType. The function name itself should not be part of the type, but rather part of the symbol table, independent of the type.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1377682912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1377690521","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1377690521","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1377690521,"node_id":"IC_kwDOCpMuHc5SHeOZ","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-10T18:39:27Z","updated_at":"2023-01-10T18:39:27Z","author_association":"CONTRIBUTOR","body":"A good design for types: you cannot modify types in place, so they are read only. Consequently you can reuse pointers and just copy the pointer of an existing type to create a new function let's say. But one cannot compare types by (only) comparing the pointers, because serialization and deserialization can actually duplicate them.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1377690521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1377710946","html_url":"https://github.com/lfortran/lfortran/issues/1162#issuecomment-1377710946","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/1162","id":1377710946,"node_id":"IC_kwDOCpMuHc5SHjNi","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-10T18:58:07Z","updated_at":"2023-01-10T19:02:29Z","author_association":"CONTRIBUTOR","body":"`ttype` coupling to a symbol table: no _essential_ information in `ttype` should depend on the symbol table. Essential is, e.g., referencing function arguments (use `FunctionParam(int param_number, ttype type)`). Non-essential information, such as the kind variable `dp`, can still point to a symbol table using `Var` (in the `symbolic_value` member of `Integer(int kind, expr? symbolic_value, dimension* dims)`). Non-essential means that if we set it to `nullptr`, we lose some information about the original source code (and consequently C or Python backends might not produce as \"nice\" code as possible), but nothing changes for the LLVM backend.\r\n\r\nThe last case to take care of is the upper dimension of an array that is provides using a constant variable. Right now it's an expression that will have a `Var`, pointing to some symbol table. We could leave it (for now), or in the future we can replace it with an expression that never contains `Var`, but just copies the constant value. And introduce an optional `symbolic_value` as in `Variable`.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1377710946/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2023-01-10T20:28:22Z","updated_at":"2023-01-10T20:28:22Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1175","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/1175/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/1175/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/1175/events","html_url":"https://github.com/lfortran/lfortran/issues/1175","id":1527962517,"node_id":"I_kwDOCpMuHc5bEtuV","number":1175,"title":"Resolve every interface to point to the implementation","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-01-10T20:27:59Z","updated_at":"2023-01-10T20:28:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"repository":{"id":177417757,"node_id":"MDEwOlJlcG9zaXRvcnkxNzc0MTc3NTc=","name":"lfortran","full_name":"lfortran/lfortran","private":false,"owner":{"login":"lfortran","id":40613057,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQwNjEzMDU3","avatar_url":"https://avatars.githubusercontent.com/u/40613057?v=4","gravatar_id":"","url":"https://api.github.com/users/lfortran","html_url":"https://github.com/lfortran","followers_url":"https://api.github.com/users/lfortran/followers","following_url":"https://api.github.com/users/lfortran/following{/other_user}","gists_url":"https://api.github.com/users/lfortran/gists{/gist_id}","starred_url":"https://api.github.com/users/lfortran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfortran/subscriptions","organizations_url":"https://api.github.com/users/lfortran/orgs","repos_url":"https://api.github.com/users/lfortran/repos","events_url":"https://api.github.com/users/lfortran/events{/privacy}","received_events_url":"https://api.github.com/users/lfortran/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/lfortran/lfortran","description":"Official main repository for LFortran","fork":false,"url":"https://api.github.com/repos/lfortran/lfortran","forks_url":"https://api.github.com/repos/lfortran/lfortran/forks","keys_url":"https://api.github.com/repos/lfortran/lfortran/keys{/key_id}","collaborators_url":"https://api.github.com/repos/lfortran/lfortran/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/lfortran/lfortran/teams","hooks_url":"https://api.github.com/repos/lfortran/lfortran/hooks","issue_events_url":"https://api.github.com/repos/lfortran/lfortran/issues/events{/number}","events_url":"https://api.github.com/repos/lfortran/lfortran/events","assignees_url":"https://api.github.com/repos/lfortran/lfortran/assignees{/user}","branches_url":"https://api.github.com/repos/lfortran/lfortran/branches{/branch}","tags_url":"https://api.github.com/repos/lfortran/lfortran/tags","blobs_url":"https://api.github.com/repos/lfortran/lfortran/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/lfortran/lfortran/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/lfortran/lfortran/git/refs{/sha}","trees_url":"https://api.github.com/repos/lfortran/lfortran/git/trees{/sha}","statuses_url":"https://api.github.com/repos/lfortran/lfortran/statuses/{sha}","languages_url":"https://api.github.com/repos/lfortran/lfortran/languages","stargazers_url":"https://api.github.com/repos/lfortran/lfortran/stargazers","contributors_url":"https://api.github.com/repos/lfortran/lfortran/contributors","subscribers_url":"https://api.github.com/repos/lfortran/lfortran/subscribers","subscription_url":"https://api.github.com/repos/lfortran/lfortran/subscription","commits_url":"https://api.github.com/repos/lfortran/lfortran/commits{/sha}","git_commits_url":"https://api.github.com/repos/lfortran/lfortran/git/commits{/sha}","comments_url":"https://api.github.com/repos/lfortran/lfortran/comments{/number}","issue_comment_url":"https://api.github.com/repos/lfortran/lfortran/issues/comments{/number}","contents_url":"https://api.github.com/repos/lfortran/lfortran/contents/{+path}","compare_url":"https://api.github.com/repos/lfortran/lfortran/compare/{base}...{head}","merges_url":"https://api.github.com/repos/lfortran/lfortran/merges","archive_url":"https://api.github.com/repos/lfortran/lfortran/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/lfortran/lfortran/downloads","issues_url":"https://api.github.com/repos/lfortran/lfortran/issues{/number}","pulls_url":"https://api.github.com/repos/lfortran/lfortran/pulls{/number}","milestones_url":"https://api.github.com/repos/lfortran/lfortran/milestones{/number}","notifications_url":"https://api.github.com/repos/lfortran/lfortran/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/lfortran/lfortran/labels{/name}","releases_url":"https://api.github.com/repos/lfortran/lfortran/releases{/id}","deployments_url":"https://api.github.com/repos/lfortran/lfortran/deployments","created_at":"2019-03-24T13:22:20Z","updated_at":"2023-01-19T07:32:40Z","pushed_at":"2023-01-19T19:07:25Z","git_url":"git://github.com/lfortran/lfortran.git","ssh_url":"git@github.com:lfortran/lfortran.git","clone_url":"https://github.com/lfortran/lfortran.git","svn_url":"https://github.com/lfortran/lfortran","homepage":"https://lfortran.org/","size":19098,"stargazers_count":504,"watchers_count":504,"language":"C++","has_issues":true,"has_projects":false,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":52,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":582,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["compiler","fortran","interactive","jupyter","jupyter-kernels","jupyter-notebook","library","repl"],"visibility":"public","forks":52,"open_issues":582,"watchers":504,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"If we have access to all the code, we should resolve every interface to point to the actual implementation that will be used. Then later we can add optimization passes that replace the interface call with a function call, and even inline if needed.\r\n\r\nThis behavior should probably be behind  a compile time option. Probably on by default, but if separate compilation is done, then we do not have access to the function, so we should not do that.\r\n\r\nIf the function cannot be resolved, then a nice compile time error should happen.\r\n\r\nIf the function has incompatible arguments, then a nice compile time error should happen.\r\n\r\nLet's do this after #1162 is fixed.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1175/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/1175/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"},{"actor":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false},"created_at":"2023-01-17T09:36:03Z","updated_at":"2023-01-17T09:36:03Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1189","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/1189/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/1189/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/1189/events","html_url":"https://github.com/lfortran/lfortran/pull/1189","id":1536058997,"node_id":"PR_kwDOCpMuHc5Hhm9k","number":1189,"title":"Implement ``FunctionType`` in ASR","user":{"login":"czgdp1807","id":36567889,"node_id":"MDQ6VXNlcjM2NTY3ODg5","avatar_url":"https://avatars.githubusercontent.com/u/36567889?v=4","gravatar_id":"","url":"https://api.github.com/users/czgdp1807","html_url":"https://github.com/czgdp1807","followers_url":"https://api.github.com/users/czgdp1807/followers","following_url":"https://api.github.com/users/czgdp1807/following{/other_user}","gists_url":"https://api.github.com/users/czgdp1807/gists{/gist_id}","starred_url":"https://api.github.com/users/czgdp1807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/czgdp1807/subscriptions","organizations_url":"https://api.github.com/users/czgdp1807/orgs","repos_url":"https://api.github.com/users/czgdp1807/repos","events_url":"https://api.github.com/users/czgdp1807/events{/privacy}","received_events_url":"https://api.github.com/users/czgdp1807/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-01-17T09:36:03Z","updated_at":"2023-01-17T23:03:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"repository":{"id":177417757,"node_id":"MDEwOlJlcG9zaXRvcnkxNzc0MTc3NTc=","name":"lfortran","full_name":"lfortran/lfortran","private":false,"owner":{"login":"lfortran","id":40613057,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQwNjEzMDU3","avatar_url":"https://avatars.githubusercontent.com/u/40613057?v=4","gravatar_id":"","url":"https://api.github.com/users/lfortran","html_url":"https://github.com/lfortran","followers_url":"https://api.github.com/users/lfortran/followers","following_url":"https://api.github.com/users/lfortran/following{/other_user}","gists_url":"https://api.github.com/users/lfortran/gists{/gist_id}","starred_url":"https://api.github.com/users/lfortran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfortran/subscriptions","organizations_url":"https://api.github.com/users/lfortran/orgs","repos_url":"https://api.github.com/users/lfortran/repos","events_url":"https://api.github.com/users/lfortran/events{/privacy}","received_events_url":"https://api.github.com/users/lfortran/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/lfortran/lfortran","description":"Official main repository for LFortran","fork":false,"url":"https://api.github.com/repos/lfortran/lfortran","forks_url":"https://api.github.com/repos/lfortran/lfortran/forks","keys_url":"https://api.github.com/repos/lfortran/lfortran/keys{/key_id}","collaborators_url":"https://api.github.com/repos/lfortran/lfortran/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/lfortran/lfortran/teams","hooks_url":"https://api.github.com/repos/lfortran/lfortran/hooks","issue_events_url":"https://api.github.com/repos/lfortran/lfortran/issues/events{/number}","events_url":"https://api.github.com/repos/lfortran/lfortran/events","assignees_url":"https://api.github.com/repos/lfortran/lfortran/assignees{/user}","branches_url":"https://api.github.com/repos/lfortran/lfortran/branches{/branch}","tags_url":"https://api.github.com/repos/lfortran/lfortran/tags","blobs_url":"https://api.github.com/repos/lfortran/lfortran/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/lfortran/lfortran/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/lfortran/lfortran/git/refs{/sha}","trees_url":"https://api.github.com/repos/lfortran/lfortran/git/trees{/sha}","statuses_url":"https://api.github.com/repos/lfortran/lfortran/statuses/{sha}","languages_url":"https://api.github.com/repos/lfortran/lfortran/languages","stargazers_url":"https://api.github.com/repos/lfortran/lfortran/stargazers","contributors_url":"https://api.github.com/repos/lfortran/lfortran/contributors","subscribers_url":"https://api.github.com/repos/lfortran/lfortran/subscribers","subscription_url":"https://api.github.com/repos/lfortran/lfortran/subscription","commits_url":"https://api.github.com/repos/lfortran/lfortran/commits{/sha}","git_commits_url":"https://api.github.com/repos/lfortran/lfortran/git/commits{/sha}","comments_url":"https://api.github.com/repos/lfortran/lfortran/comments{/number}","issue_comment_url":"https://api.github.com/repos/lfortran/lfortran/issues/comments{/number}","contents_url":"https://api.github.com/repos/lfortran/lfortran/contents/{+path}","compare_url":"https://api.github.com/repos/lfortran/lfortran/compare/{base}...{head}","merges_url":"https://api.github.com/repos/lfortran/lfortran/merges","archive_url":"https://api.github.com/repos/lfortran/lfortran/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/lfortran/lfortran/downloads","issues_url":"https://api.github.com/repos/lfortran/lfortran/issues{/number}","pulls_url":"https://api.github.com/repos/lfortran/lfortran/pulls{/number}","milestones_url":"https://api.github.com/repos/lfortran/lfortran/milestones{/number}","notifications_url":"https://api.github.com/repos/lfortran/lfortran/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/lfortran/lfortran/labels{/name}","releases_url":"https://api.github.com/repos/lfortran/lfortran/releases{/id}","deployments_url":"https://api.github.com/repos/lfortran/lfortran/deployments","created_at":"2019-03-24T13:22:20Z","updated_at":"2023-01-19T07:32:40Z","pushed_at":"2023-01-19T19:07:25Z","git_url":"git://github.com/lfortran/lfortran.git","ssh_url":"git@github.com:lfortran/lfortran.git","clone_url":"https://github.com/lfortran/lfortran.git","svn_url":"https://github.com/lfortran/lfortran","homepage":"https://lfortran.org/","size":19098,"stargazers_count":504,"watchers_count":504,"language":"C++","has_issues":true,"has_projects":false,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":52,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":582,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["compiler","fortran","interactive","jupyter","jupyter-kernels","jupyter-notebook","library","repl"],"visibility":"public","forks":52,"open_issues":582,"watchers":504,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"pull_request":{"url":"https://api.github.com/repos/lfortran/lfortran/pulls/1189","html_url":"https://github.com/lfortran/lfortran/pull/1189","diff_url":"https://github.com/lfortran/lfortran/pull/1189.diff","patch_url":"https://github.com/lfortran/lfortran/pull/1189.patch","merged_at":null},"body":"https://github.com/lfortran/lfortran/commit/9bd752f45518c6f447d43422f415dc2360fc1b01\r\nhttps://github.com/lfortran/lfortran/commit/d361811b0d504daecef983a11cf633b3c06778c1\r\n\r\nRefer - #1162 ","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/1189/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"}]