[{"actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2022-09-29T16:59:31Z","updated_at":"2022-09-29T16:59:31Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/648","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/648/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/648/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/648/events","html_url":"https://github.com/lfortran/lfortran/issues/648","id":1346449509,"node_id":"I_kwDOCpMuHc5QQTBl","number":648,"title":"Faulty LLVM handover","user":{"login":"konradha","id":9871746,"node_id":"MDQ6VXNlcjk4NzE3NDY=","avatar_url":"https://avatars.githubusercontent.com/u/9871746?v=4","gravatar_id":"","url":"https://api.github.com/users/konradha","html_url":"https://github.com/konradha","followers_url":"https://api.github.com/users/konradha/followers","following_url":"https://api.github.com/users/konradha/following{/other_user}","gists_url":"https://api.github.com/users/konradha/gists{/gist_id}","starred_url":"https://api.github.com/users/konradha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/konradha/subscriptions","organizations_url":"https://api.github.com/users/konradha/orgs","repos_url":"https://api.github.com/users/konradha/repos","events_url":"https://api.github.com/users/konradha/events{/privacy}","received_events_url":"https://api.github.com/users/konradha/received_events","type":"User","site_admin":false},"labels":[{"id":4432142216,"node_id":"LA_kwDOCpMuHc8AAAABCC0fiA","url":"https://api.github.com/repos/lfortran/lfortran/labels/SciPy","name":"SciPy","color":"d4c5f9","default":false,"description":"issues related to enable LFortran to compile the entire FORTRAN codebase in SciPy"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-22T13:43:37Z","updated_at":"2022-09-29T16:59:31Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"repository":{"id":177417757,"node_id":"MDEwOlJlcG9zaXRvcnkxNzc0MTc3NTc=","name":"lfortran","full_name":"lfortran/lfortran","private":false,"owner":{"login":"lfortran","id":40613057,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQwNjEzMDU3","avatar_url":"https://avatars.githubusercontent.com/u/40613057?v=4","gravatar_id":"","url":"https://api.github.com/users/lfortran","html_url":"https://github.com/lfortran","followers_url":"https://api.github.com/users/lfortran/followers","following_url":"https://api.github.com/users/lfortran/following{/other_user}","gists_url":"https://api.github.com/users/lfortran/gists{/gist_id}","starred_url":"https://api.github.com/users/lfortran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfortran/subscriptions","organizations_url":"https://api.github.com/users/lfortran/orgs","repos_url":"https://api.github.com/users/lfortran/repos","events_url":"https://api.github.com/users/lfortran/events{/privacy}","received_events_url":"https://api.github.com/users/lfortran/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/lfortran/lfortran","description":"Official main repository for LFortran","fork":false,"url":"https://api.github.com/repos/lfortran/lfortran","forks_url":"https://api.github.com/repos/lfortran/lfortran/forks","keys_url":"https://api.github.com/repos/lfortran/lfortran/keys{/key_id}","collaborators_url":"https://api.github.com/repos/lfortran/lfortran/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/lfortran/lfortran/teams","hooks_url":"https://api.github.com/repos/lfortran/lfortran/hooks","issue_events_url":"https://api.github.com/repos/lfortran/lfortran/issues/events{/number}","events_url":"https://api.github.com/repos/lfortran/lfortran/events","assignees_url":"https://api.github.com/repos/lfortran/lfortran/assignees{/user}","branches_url":"https://api.github.com/repos/lfortran/lfortran/branches{/branch}","tags_url":"https://api.github.com/repos/lfortran/lfortran/tags","blobs_url":"https://api.github.com/repos/lfortran/lfortran/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/lfortran/lfortran/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/lfortran/lfortran/git/refs{/sha}","trees_url":"https://api.github.com/repos/lfortran/lfortran/git/trees{/sha}","statuses_url":"https://api.github.com/repos/lfortran/lfortran/statuses/{sha}","languages_url":"https://api.github.com/repos/lfortran/lfortran/languages","stargazers_url":"https://api.github.com/repos/lfortran/lfortran/stargazers","contributors_url":"https://api.github.com/repos/lfortran/lfortran/contributors","subscribers_url":"https://api.github.com/repos/lfortran/lfortran/subscribers","subscription_url":"https://api.github.com/repos/lfortran/lfortran/subscription","commits_url":"https://api.github.com/repos/lfortran/lfortran/commits{/sha}","git_commits_url":"https://api.github.com/repos/lfortran/lfortran/git/commits{/sha}","comments_url":"https://api.github.com/repos/lfortran/lfortran/comments{/number}","issue_comment_url":"https://api.github.com/repos/lfortran/lfortran/issues/comments{/number}","contents_url":"https://api.github.com/repos/lfortran/lfortran/contents/{+path}","compare_url":"https://api.github.com/repos/lfortran/lfortran/compare/{base}...{head}","merges_url":"https://api.github.com/repos/lfortran/lfortran/merges","archive_url":"https://api.github.com/repos/lfortran/lfortran/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/lfortran/lfortran/downloads","issues_url":"https://api.github.com/repos/lfortran/lfortran/issues{/number}","pulls_url":"https://api.github.com/repos/lfortran/lfortran/pulls{/number}","milestones_url":"https://api.github.com/repos/lfortran/lfortran/milestones{/number}","notifications_url":"https://api.github.com/repos/lfortran/lfortran/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/lfortran/lfortran/labels{/name}","releases_url":"https://api.github.com/repos/lfortran/lfortran/releases{/id}","deployments_url":"https://api.github.com/repos/lfortran/lfortran/deployments","created_at":"2019-03-24T13:22:20Z","updated_at":"2023-01-19T07:32:40Z","pushed_at":"2023-01-19T19:07:25Z","git_url":"git://github.com/lfortran/lfortran.git","ssh_url":"git@github.com:lfortran/lfortran.git","clone_url":"https://github.com/lfortran/lfortran.git","svn_url":"https://github.com/lfortran/lfortran","homepage":"https://lfortran.org/","size":19098,"stargazers_count":504,"watchers_count":504,"language":"C++","has_issues":true,"has_projects":false,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":52,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":582,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["compiler","fortran","interactive","jupyter","jupyter-kernels","jupyter-notebook","library","repl"],"visibility":"public","forks":52,"open_issues":582,"watchers":504,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"When trying to compile `scipy/stats/statlib/swilk.f` from current main, LFortran yields an empty object file -- upon inspection and running `lfortran --implicit-typing --fixed-form --show-llvm --indent ../../scipy/scipy/stats/statlib/swilk.f` we see\r\n\r\n```bash\r\nlfortran: /opt/anaconda3/envs/lf/include/llvm/IR/Instructions.h:897: llvm::Type* llvm::checkGEPType(llvm::Type*): Assertion `Ty && \"Invalid GetElementPtrInst indices for type!\"' failed.\r\nTraceback (most recent call last):\r\n  Binary file \"/home/konrad/code/forks/lfortran/src/bin/lfortran\", in _start()\r\n  File \"./csu/../csu/libc-start.c\", line 392, in __libc_start_main_impl()\r\n  File \"./csu/../sysdeps/nptl/libc_start_call_main.h\", line 58, in __libc_start_call_main()\r\n  File \"/home/konrad/code/forks/lfortran/src/bin/lfortran.cpp\", line 1651, in ??\r\n    return emit_llvm(arg_file, lfortran_pass_manager,\r\n  File \"/home/konrad/code/forks/lfortran/src/bin/lfortran.cpp\", line 663, in ??\r\n    = fe.get_llvm(input, lm, pass_manager, diagnostics);\r\n  File \"/home/konrad/code/forks/lfortran/src/lfortran/fortran_evaluator.cpp\", line 264, in LFortran::FortranEvaluator::get_llvm(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LFortran::LocationManager&, LCompilers::PassManager&, LFortran::diag::Diagnostics&)\r\n    Result<std::unique_ptr<LLVMModule>> res = get_llvm2(code, lm, pass_manager, diagnostics);\r\n  File \"/home/konrad/code/forks/lfortran/src/lfortran/fortran_evaluator.cpp\", line 285, in LFortran::FortranEvaluator::get_llvm2(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, LFortran::LocationManager&, LCompilers::PassManager&, LFortran::diag::Diagnostics&)\r\n    Result<std::unique_ptr<LLVMModule>> res = get_llvm3(*asr.result, pass_manager, diagnostics);\r\n  File \"/home/konrad/code/forks/lfortran/src/lfortran/fortran_evaluator.cpp\", line 318, in LFortran::FortranEvaluator::get_llvm3(LFortran::ASR::TranslationUnit_t&, LCompilers::PassManager&, LFortran::diag::Diagnostics&)\r\n    compiler_options.platform, run_fn);\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 5355, in LFortran::asr_to_llvm(LFortran::ASR::TranslationUnit_t&, LFortran::diag::Diagnostics&, llvm::LLVMContext&, Allocator&, LCompilers::PassManager&, LFortran::Platform, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\r\n    v.visit_asr((ASR::asr_t&)asr);\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3728, in LFortran::ASR::BaseVisitor<LFortran::ASRToLLVMVisitor>::visit_asr(LFortran::ASR::asr_t const&)\r\n    void visit_asr(const asr_t &b) { visit_asr_t(b, self()); }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3706, in ??\r\n    case asrType::unit: { v.visit_unit((const unit_t &)x); return; }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3729, in LFortran::ASR::BaseVisitor<LFortran::ASRToLLVMVisitor>::visit_unit(LFortran::ASR::unit_t const&)\r\n    void visit_unit(const unit_t &b) { visit_unit_t(b, self()); }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3506, in ??\r\n    case unitType::TranslationUnit: { v.visit_TranslationUnit((const TranslationUnit_t &)x); return; }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 1058, in LFortran::ASRToLLVMVisitor::visit_TranslationUnit(LFortran::ASR::TranslationUnit_t const&)\r\n    visit_symbol(*item.second);\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3731, in LFortran::ASR::BaseVisitor<LFortran::ASRToLLVMVisitor>::visit_symbol(LFortran::ASR::symbol_t const&)\r\n    void visit_symbol(const symbol_t &b) { visit_symbol_t(b, self()); }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3516, in ??\r\n    case symbolType::Function: { v.visit_Function((const Function_t &)x); return; }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 2407, in LFortran::ASRToLLVMVisitor::visit_Function(LFortran::ASR::Function_t const&)\r\n    generate_function(x);\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 2662, in LFortran::ASRToLLVMVisitor::generate_function(LFortran::ASR::Function_t const&)\r\n    this->visit_stmt(*x.m_body[i]);\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3744, in LFortran::ASR::BaseVisitor<LFortran::ASRToLLVMVisitor>::visit_stmt(LFortran::ASR::stmt_t const&)\r\n    void visit_stmt(const stmt_t &b) { visit_stmt_t(b, self()); }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3535, in ??\r\n    case stmtType::Assignment: { v.visit_Assignment((const Assignment_t &)x); return; }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 2947, in LFortran::ASRToLLVMVisitor::visit_Assignment(LFortran::ASR::Assignment_t const&)\r\n    this->visit_expr(*x.m_target);\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3786, in LFortran::ASR::BaseVisitor<LFortran::ASRToLLVMVisitor>::visit_expr(LFortran::ASR::expr_t const&)\r\n    void visit_expr(const expr_t &b) { visit_expr_t(b, self()); }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/../libasr/asr.h\", line 3626, in ??\r\n    case exprType::ArrayItem: { v.visit_ArrayItem((const ArrayItem_t &)x); return; }\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 1373, in LFortran::ASRToLLVMVisitor::visit_ArrayItem(LFortran::ASR::ArrayItem_t const&)\r\n    tmp = arr_descr->get_single_element(array, indices, x.n_args,\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/llvm_array_utils.cpp\", line 474, in LFortran::LLVMArrUtils::SimpleCMODescriptor::get_single_element(llvm::Value*, std::vector<llvm::Value*, std::allocator<llvm::Value*> >&, int, bool, llvm::Value**)\r\n    idx = cmo_convertor_single_element(array, m_args, n_args, check_for_bounds);\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/llvm_array_utils.cpp\", line 423, in LFortran::LLVMArrUtils::SimpleCMODescriptor::cmo_convertor_single_element(llvm::Value*, std::vector<llvm::Value*, std::allocator<llvm::Value*> >&, int, bool)\r\n    llvm::Value* dim_des_arr_ptr = LLVM::CreateLoad(*builder, llvm_utils->create_gep(arr, 2));\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/llvm_utils.cpp\", line 82, in LFortran::LLVMUtils::create_gep(llvm::Value*, int)\r\n    return LLVM::CreateGEP(*builder, ds, idx_vec);\r\n  File \"/home/konrad/code/forks/lfortran/src/libasr/codegen/llvm_utils.cpp\", line 25, in LFortran::LLVM::CreateGEP(llvm::IRBuilder<llvm::ConstantFolder, llvm::IRBuilderDefaultInserter>&, llvm::Value*, std::vector<llvm::Value*, std::allocator<llvm::Value*> >&)\r\n    return builder.CreateGEP(t2, x, idx);\r\n  File \"/opt/anaconda3/envs/lf/include/llvm/IR/IRBuilder.h\", line 1773, in llvm::IRBuilderBase::CreateGEP(llvm::Type*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&)\r\n    return Insert(GetElementPtrInst::Create(Ty, Ptr, IdxList), Name);\r\n  File \"/opt/anaconda3/envs/lf/include/llvm/IR/Instructions.h\", line 943, in llvm::GetElementPtrInst::Create(llvm::Type*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&, llvm::Instruction*)\r\n    NameStr, InsertBefore);\r\n  File \"/opt/anaconda3/envs/lf/include/llvm/IR/Instructions.h\", line 1147, in llvm::GetElementPtrInst::GetElementPtrInst(llvm::Type*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, unsigned int, llvm::Twine const&, llvm::Instruction*)\r\n    ResultElementType(getIndexedType(PointeeType, IdxList)) {\r\n  File \"/opt/anaconda3/envs/lf/include/llvm/IR/Instructions.h\", line 1074, in llvm::GetElementPtrInst::getGEPReturnType(llvm::Type*, llvm::Value*, llvm::ArrayRef<llvm::Value*>)\r\n    Type *PtrTy = PointerType::get(checkGEPType(getIndexedType(ElTy, IdxList)),\r\n  File \"/opt/anaconda3/envs/lf/include/llvm/IR/Instructions.h\", line 897, in llvm::checkGEPType(llvm::Type*)\r\n    assert(Ty && \"Invalid GetElementPtrInst indices for type!\");\r\n  File \"./assert/assert.c\", line 101, in __GI___assert_fail()\r\n  File \"./assert/assert.c\", line 92, in __assert_fail_base()\r\n  File \"./stdlib/abort.c\", line 79, in __GI_abort()\r\n  File \"./signal/../sysdeps/posix/raise.c\", line 26, in __GI_raise()\r\n  File \"./nptl/pthread_kill.c\", line 43, in __pthread_kill_implementation()\r\n  Binary file \"/lib/x86_64-linux-gnu/libc.so.6\", in __GI___sigaction()\r\nAbort: Signal SIGABRT (abort) received\r\n```\r\nand core gets dumped.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/648/timeline","performed_via_github_app":null,"state_reason":null}},"event":"cross-referenced"}]