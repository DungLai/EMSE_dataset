[{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1228380968","html_url":"https://github.com/lfortran/lfortran/issues/363#issuecomment-1228380968","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/363","id":1228380968,"node_id":"IC_kwDOCpMuHc5JN5so","user":{"login":"ivan-pi","id":21085643,"node_id":"MDQ6VXNlcjIxMDg1NjQz","avatar_url":"https://avatars.githubusercontent.com/u/21085643?v=4","gravatar_id":"","url":"https://api.github.com/users/ivan-pi","html_url":"https://github.com/ivan-pi","followers_url":"https://api.github.com/users/ivan-pi/followers","following_url":"https://api.github.com/users/ivan-pi/following{/other_user}","gists_url":"https://api.github.com/users/ivan-pi/gists{/gist_id}","starred_url":"https://api.github.com/users/ivan-pi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivan-pi/subscriptions","organizations_url":"https://api.github.com/users/ivan-pi/orgs","repos_url":"https://api.github.com/users/ivan-pi/repos","events_url":"https://api.github.com/users/ivan-pi/events{/privacy}","received_events_url":"https://api.github.com/users/ivan-pi/received_events","type":"User","site_admin":false},"created_at":"2022-08-26T11:31:00Z","updated_at":"2022-08-26T11:48:38Z","author_association":"NONE","body":"One warning/suggestion I think would be useful is in dealing with optional arguments. A safe style of programming dictates keyword arguments should be used with optional dummy variable (the issue of mixing arguments is more general):\r\n\r\n```fortran\r\nsubroutine foo(a,bar,baz)\r\ninteger, intent(in) :: a\r\ninteger, intent(in), optional :: b, c\r\n...\r\nend subroutine\r\n```\r\n\r\n```fortran\r\ninteger :: bar, baz\r\nbar = 4\r\nbaz = 5\r\ncall foo(42, baz, bar) ! oops, wrong positional order, but works fine\r\ncall foo(42, bar=bar, baz=baz) ! better, at least we might catch track of the visually\r\n```\r\n\r\nIf the optional dummy variables have distinct types you are perhaps spared from problem. But even subtler problems can occur if you combine optional with unlimited polymorphic variables:\r\n```fortran\r\nsubroutine foo(a,bar,baz)\r\ninteger, intent(in) :: a\r\nclass(*), intent(in), optional :: bar\r\ninteger, intent(in), optional :: baz\r\nselect type(bar)\r\ntype is (expected_type)\r\n   ... \r\nend select ! omitted default section to warn upon unexpected types\r\nend subroutine\r\n```\r\n\r\n```fortran\r\ncall foo(a,baz) ! baz gets passed as bar, will not error for any type\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1228380968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"ivan-pi","id":21085643,"node_id":"MDQ6VXNlcjIxMDg1NjQz","avatar_url":"https://avatars.githubusercontent.com/u/21085643?v=4","gravatar_id":"","url":"https://api.github.com/users/ivan-pi","html_url":"https://github.com/ivan-pi","followers_url":"https://api.github.com/users/ivan-pi/followers","following_url":"https://api.github.com/users/ivan-pi/following{/other_user}","gists_url":"https://api.github.com/users/ivan-pi/gists{/gist_id}","starred_url":"https://api.github.com/users/ivan-pi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivan-pi/subscriptions","organizations_url":"https://api.github.com/users/ivan-pi/orgs","repos_url":"https://api.github.com/users/ivan-pi/repos","events_url":"https://api.github.com/users/ivan-pi/events{/privacy}","received_events_url":"https://api.github.com/users/ivan-pi/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1252496635","html_url":"https://github.com/lfortran/lfortran/issues/363#issuecomment-1252496635","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/363","id":1252496635,"node_id":"IC_kwDOCpMuHc5Kp5T7","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2022-09-20T15:05:33Z","updated_at":"2022-09-20T15:05:33Z","author_association":"CONTRIBUTOR","body":"Also:\r\n\r\n* All module variables should be private by default","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1252496635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1252593764","html_url":"https://github.com/lfortran/lfortran/issues/363#issuecomment-1252593764","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/363","id":1252593764,"node_id":"IC_kwDOCpMuHc5KqRBk","user":{"login":"p-pap","id":80461153,"node_id":"MDQ6VXNlcjgwNDYxMTUz","avatar_url":"https://avatars.githubusercontent.com/u/80461153?v=4","gravatar_id":"","url":"https://api.github.com/users/p-pap","html_url":"https://github.com/p-pap","followers_url":"https://api.github.com/users/p-pap/followers","following_url":"https://api.github.com/users/p-pap/following{/other_user}","gists_url":"https://api.github.com/users/p-pap/gists{/gist_id}","starred_url":"https://api.github.com/users/p-pap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/p-pap/subscriptions","organizations_url":"https://api.github.com/users/p-pap/orgs","repos_url":"https://api.github.com/users/p-pap/repos","events_url":"https://api.github.com/users/p-pap/events{/privacy}","received_events_url":"https://api.github.com/users/p-pap/received_events","type":"User","site_admin":false},"created_at":"2022-09-20T16:20:49Z","updated_at":"2022-09-20T16:20:49Z","author_association":"NONE","body":"> * more restrictive intents: it can force `intent(inout)` to `intent(in)` or `intent(out)` where appropriate\r\n\r\nI don't know whether this is included in \"where appropriate\", but I think that, by default, functions should not have `intent(out)` or `intent(inout)` arguments. Just keep functions as functions in a more or less mathematical point of view. If more output is needed, let the function return a derived type or just turn it to a subroutine instead.\r\n\r\n> * All module variables should be private by default\r\n\r\nJust to clarify, I hope this means everything defined within a module should be `private` by default, including variables, parameters, derived types, procedures, and other `use`d modules. Everything that needs to be `public` must be explicitly stated as such. This enforces information hiding. It's basically like defining a module as `private` by default.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1252593764/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"p-pap","id":80461153,"node_id":"MDQ6VXNlcjgwNDYxMTUz","avatar_url":"https://avatars.githubusercontent.com/u/80461153?v=4","gravatar_id":"","url":"https://api.github.com/users/p-pap","html_url":"https://github.com/p-pap","followers_url":"https://api.github.com/users/p-pap/followers","following_url":"https://api.github.com/users/p-pap/following{/other_user}","gists_url":"https://api.github.com/users/p-pap/gists{/gist_id}","starred_url":"https://api.github.com/users/p-pap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/p-pap/subscriptions","organizations_url":"https://api.github.com/users/p-pap/orgs","repos_url":"https://api.github.com/users/p-pap/repos","events_url":"https://api.github.com/users/p-pap/events{/privacy}","received_events_url":"https://api.github.com/users/p-pap/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1252985842","html_url":"https://github.com/lfortran/lfortran/issues/363#issuecomment-1252985842","issue_url":"https://api.github.com/repos/lfortran/lfortran/issues/363","id":1252985842,"node_id":"IC_kwDOCpMuHc5Krwvy","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"created_at":"2022-09-20T22:35:23Z","updated_at":"2022-09-20T22:35:23Z","author_association":"CONTRIBUTOR","body":"@p-pap Yes, both are great ideas. Good point about enforcing functions just accepting `intent(in)` arguments. If you want `intent(out)` or `intent(inout)`, you should use a subroutine.","reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/comments/1252985842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false}},{"id":7426083020,"node_id":"MEE_lADOCpMuHc5Py2hZzwAAAAG6oQjM","url":"https://api.github.com/repos/lfortran/lfortran/issues/events/7426083020","actor":{"login":"p-pap","id":80461153,"node_id":"MDQ6VXNlcjgwNDYxMTUz","avatar_url":"https://avatars.githubusercontent.com/u/80461153?v=4","gravatar_id":"","url":"https://api.github.com/users/p-pap","html_url":"https://github.com/p-pap","followers_url":"https://api.github.com/users/p-pap/followers","following_url":"https://api.github.com/users/p-pap/following{/other_user}","gists_url":"https://api.github.com/users/p-pap/gists{/gist_id}","starred_url":"https://api.github.com/users/p-pap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/p-pap/subscriptions","organizations_url":"https://api.github.com/users/p-pap/orgs","repos_url":"https://api.github.com/users/p-pap/repos","events_url":"https://api.github.com/users/p-pap/events{/privacy}","received_events_url":"https://api.github.com/users/p-pap/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2022-09-20T22:35:23Z","performed_via_github_app":null},{"id":7426083023,"node_id":"SE_lADOCpMuHc5Py2hZzwAAAAG6oQjP","url":"https://api.github.com/repos/lfortran/lfortran/issues/events/7426083023","actor":{"login":"p-pap","id":80461153,"node_id":"MDQ6VXNlcjgwNDYxMTUz","avatar_url":"https://avatars.githubusercontent.com/u/80461153?v=4","gravatar_id":"","url":"https://api.github.com/users/p-pap","html_url":"https://github.com/p-pap","followers_url":"https://api.github.com/users/p-pap/followers","following_url":"https://api.github.com/users/p-pap/following{/other_user}","gists_url":"https://api.github.com/users/p-pap/gists{/gist_id}","starred_url":"https://api.github.com/users/p-pap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/p-pap/subscriptions","organizations_url":"https://api.github.com/users/p-pap/orgs","repos_url":"https://api.github.com/users/p-pap/repos","events_url":"https://api.github.com/users/p-pap/events{/privacy}","received_events_url":"https://api.github.com/users/p-pap/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2022-09-20T22:35:23Z","performed_via_github_app":null}]