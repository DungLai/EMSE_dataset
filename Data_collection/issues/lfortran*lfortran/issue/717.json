{"url":"https://api.github.com/repos/lfortran/lfortran/issues/717","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/717/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/717/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/717/events","html_url":"https://github.com/lfortran/lfortran/issues/717","id":1374707651,"node_id":"I_kwDOCpMuHc5R8F_D","number":717,"title":"Implement \"implicit integer\" etc","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-09-15T15:23:53Z","updated_at":"2022-09-26T19:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The way I would implement it is to have a dictionary with keys `a-z`, and values the type to be used for a variable that starts with that letter. It would be freshly populated for each function, using the default (I think `a-h` + `o-z` is real, the rest is integer), and then one would examine all statements of the kind:\r\n```fortran\r\n      IMPLICIT DOUBLE PRECISION (A-H,O-Z)\r\n      implicit complex (a,b,c)\r\n      implicit character*4 (k,l)\r\n```\r\nAnd modify this dictionary accordingly.\r\n\r\nThere are two main cases to distinguish. \r\n\r\na) The `--implicit-typing` flag is off (the default).\r\n\r\nThe implicit typing is not used, unless \"implicit integer\" (etc.) is present, in which case those letters will be implicitly typed, but the other letters will still have to be explicitly typed.\r\n\r\nb) The `--implicit-typing` flag is on.\r\n\r\nThe dictionary is always used, populated initially with the default typing (integer i-n, real otherwise), then modified according to each `implicit integer` (etc.) line. If \"implicit none\" is encountered, then no implicit typing will be used for the given unit (function, subroutine, module or a program).","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/717/timeline","performed_via_github_app":null,"state_reason":null}