{"url":"https://api.github.com/repos/lfortran/lfortran/issues/404","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/404/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/404/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/404/events","html_url":"https://github.com/lfortran/lfortran/issues/404","id":1338734722,"node_id":"I_kwDOCpMuHc5Py3iC","number":404,"title":"Tokenizer error in windows(\\r\\n)","user":{"login":"Pranavchiku","id":85227306,"node_id":"MDQ6VXNlcjg1MjI3MzA2","avatar_url":"https://avatars.githubusercontent.com/u/85227306?v=4","gravatar_id":"","url":"https://api.github.com/users/Pranavchiku","html_url":"https://github.com/Pranavchiku","followers_url":"https://api.github.com/users/Pranavchiku/followers","following_url":"https://api.github.com/users/Pranavchiku/following{/other_user}","gists_url":"https://api.github.com/users/Pranavchiku/gists{/gist_id}","starred_url":"https://api.github.com/users/Pranavchiku/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Pranavchiku/subscriptions","organizations_url":"https://api.github.com/users/Pranavchiku/orgs","repos_url":"https://api.github.com/users/Pranavchiku/repos","events_url":"https://api.github.com/users/Pranavchiku/events{/privacy}","received_events_url":"https://api.github.com/users/Pranavchiku/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-15T09:11:29Z","updated_at":"2022-08-15T09:59:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"while executing\r\n```\r\ninst\\bin\\lfortran --show-asr --fixed-form --implicit-typing ../scipy/scipy/stats/statlib/spearman.f\r\n```\r\nresults in\r\n```\r\ntokenizer error: Token 'Ã¥' is not recognized\r\n  --> ../scipy/scipy/stats/statlib/spearman.f:80:16\r\n   |\r\n80 |\r\n   |                ^ token not recognized\r\n\r\n\r\nNote: if any of the above error or warning messages are not clear or are lacking\r\ncontext please report it to us (we consider that a bug that needs to be fixed).\r\n```\r\n\r\nBelow is the spearman.f file\r\n```\r\n      double precision function prho(n, is, ifault)\r\nc\r\nc        Algorithm AS 89   Appl. Statist. (1975) Vol.24, No. 3, P377.\r\nc       \r\nc        To evaluate the probability of obtaining a value greater than or\r\nc        equal to is, where is=(n**3-n)*(1-r)/6, r=Spearman's rho and n\r\nc        must be greater than 1\r\nc\r\nc     Auxiliary function required: ALNORM = algorithm AS66\r\nc\r\n      dimension l(6)\r\n      double precision zero, one, two, b, x, y, u, six,\r\n     $  c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12\r\n      data zero, one, two, six /0.0d0, 1.0d0, 2.0d0, 6.0d0/\r\n      data        c1,     c2,     c3,     c4,     c5,     c6,\r\n     $          c7,     c8,     c9,    c10,    c11,    c12/\r\n     $  0.2274d0, 0.2531d0, 0.1745d0, 0.0758d0, 0.1033d0, 0.3932d0,\r\n     $  0.0879d0, 0.0151d0, 0.0072d0, 0.0831d0, 0.0131d0, 0.00046d0/\r\nc\r\nc        Test admissibility of arguments and initialize\r\nc\r\n      prho = one\r\n      ifault = 1\r\n      if (n .le. 1) return\r\n      ifault = 0\r\n      if (is .le. 0) return\r\n      prho = zero\r\n      if (is .gt. n * (n * n -1) / 3) return\r\n      js = is\r\n      if (js .ne. 2 * (js / 2)) js = js + 1\r\n      if (n .gt. 6) goto 6\r\nc\r\nc        Exact evaluation of probability\r\nc\r\n      nfac = 1\r\n      do 1 i = 1, n\r\n        nfac = nfac * i\r\n        l(i) = i\r\n    1 continue\r\n      prho = one / dble(nfac)\r\n      if (js .eq. n * (n * n -1) / 3) return\r\n      ifr = 0\r\n      do 5 m = 1,nfac\r\n        ise = 0\r\n        do 2 i = 1, n\r\n          ise = ise + (i - l(i)) ** 2\r\n    2   continue\r\n        if (js .le. ise) ifr = ifr + 1\r\n        n1 = n\r\n    3   mt = l(1)\r\n        nn = n1 - 1\r\n        do 4 i = 1, nn\r\n          l(i) = l(i + 1)\r\n    4   continue\r\n        l(n1) = mt\r\n        if (l(n1) .ne. n1 .or. n1 .eq. 2) goto 5\r\n        n1 = n1 - 1\r\n        if (m .ne. nfac) goto 3\r\n    5 continue\r\n      prho = dble(ifr) / dble(nfac)\r\n      return\r\nc\r\nc        Evaluation by Edgeworth series expansion\r\nc\r\n    6 b = one / dble(n)\r\n      x = (six * (dble(js) - one) * b / (one / (b * b) -one) -\r\n     $  one) * sqrt(one / b - one)\r\n      y = x * x\r\n      u = x * b * (c1 + b * (c2 + c3 * b) + y * (-c4\r\n     $  + b * (c5 + c6 * b) - y * b * (c7 + c8 * b\r\n     $  - y * (c9 - c10 * b + y * b * (c11 - c12 * y)))))\r\nc\r\nc      Call to algorithm AS 66\r\nc\r\n      prho = u / exp(y / two) + alnorm(x, .true.)\r\n      if (prho .lt. zero) prho = zero\r\n      if (prho .gt. one) prho = one\r\n      return\r\n      end\r\n   \r\n ```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/404/timeline","performed_via_github_app":null,"state_reason":null}