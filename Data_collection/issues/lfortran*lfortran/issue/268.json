{"url":"https://api.github.com/repos/lfortran/lfortran/issues/268","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/268/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/268/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/268/events","html_url":"https://github.com/lfortran/lfortran/issues/268","id":1338691130,"node_id":"I_kwDOCpMuHc5Pys46","number":268,"title":"Implement rich type renderring in the notebook","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:25:29Z","updated_at":"2022-08-15T08:25:29Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/202\n\nHere is good design how to do it:\n\nhttps://xeus-cling.readthedocs.io/en/latest/rich_display.html#providing-custom-mime-representations-for-user-defined-types\n\nThe user creates a new derived type `image` and provides a function in the same module:\n```fortran\n    function mime_bundle_repr(i) result(r)\n    type(image), intent(in) :: i\n    type(json) :: r\n    ! ...\n    end function\n```\nWhere `type(json)` is a JSON derived type, implemented by some 3rd party library that we have to settle upon (`xeus-cling` uses [nlohmann::json](https://github.com/nlohmann/json)). The Fortran kernel then checks if `mime_bundle_repr` is defined for the returned type, and if so, calls it to obtain the rich representation of the result.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/268/timeline","performed_via_github_app":null,"state_reason":null}