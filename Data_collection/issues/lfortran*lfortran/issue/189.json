{"url":"https://api.github.com/repos/lfortran/lfortran/issues/189","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/189/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/189/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/189/events","html_url":"https://github.com/lfortran/lfortran/issues/189","id":1338683023,"node_id":"I_kwDOCpMuHc5Pyq6P","number":189,"title":"SymPy integration","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:17:20Z","updated_at":"2022-08-15T08:17:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/71\n\nThere are two fundamental projects:\n\n* Use LFortran for SymPy's code generation. SymPy will target the LFortran's ASR, and LFortran can both generate Fortran code from it, as well as compile directly (whether JIT or to executable).\n\n* Use LFortran to parse Fortran code into ASR, then extract all expressions in each subroutine and convert them to SymPy (where it makes sense). This project allows then to hookup into modules such as [Herbie](https://herbie.uwplse.org/), or do many other kinds of analysis using SymPy.\n\nHere are SymPy GSoC 2019 project ideas regarding this: https://github.com/sympy/sympy/wiki/GSoC-2019-Ideas#lfortran-sympy-project-ideas","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/189/timeline","performed_via_github_app":null,"state_reason":null}