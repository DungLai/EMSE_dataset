{"url":"https://api.github.com/repos/lfortran/lfortran/issues/398","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/398/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/398/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/398/events","html_url":"https://github.com/lfortran/lfortran/issues/398","id":1338734202,"node_id":"I_kwDOCpMuHc5Py3Z6","number":398,"title":"Contained procedures in derived type are oddly indented","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:10:58Z","updated_at":"2022-08-15T09:10:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/522\n\nUsing LFortran 0.12.0 from conda-forge\n\nWhen using `--intent-unit` the `contains` statement is loosing its indentation. Same for the the contained procedures.\n\n```diff\n-   !> Argument list class\n-   type :: argument_list\n-      !> Name of the invoked executable, if available\n-      character(len=:), allocatable :: prog\n-      !> Number of arguments\n-      integer :: nargs = 0\n-      !> Array of arguments in this list\n+!> Argument list class\n+   type :: argument_list \n+\n+!> Name of the invoked executable, if available\n+      character(len=:), allocatable :: prog \n+!> Number of arguments\n+      integer :: nargs = 0 \n+!> Array of arguments in this list\n       type(argument), allocatable :: argv(:)\n-   contains\n-      !> Append a command line argument\n-      procedure :: push_back\n-      !> Display debug information on this instance\n-      procedure :: info\n-      !> Get command line argument\n-      procedure :: get\n-   end type argument_list\n+\n+contains\n+\n+procedure :: push_back \n+!> Display debug information on this instance\n+procedure :: info \n+!> Get command line argument\n+procedure :: get\n+   end type argument_list \n\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/398/timeline","performed_via_github_app":null,"state_reason":null}