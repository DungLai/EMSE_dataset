{"url":"https://api.github.com/repos/lfortran/lfortran/issues/246","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/246/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/246/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/246/events","html_url":"https://github.com/lfortran/lfortran/issues/246","id":1338687701,"node_id":"I_kwDOCpMuHc5PysDV","number":246,"title":"Provide Python code to read the AST / ASR dumps","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:22:09Z","updated_at":"2022-08-15T08:22:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/157\n\nCurrently the `--show-ast` and related options dump a Lisp like representation.\n\nWe should provide an independent Python code that can parse it, so that people can write their own backends in Python without depending on anything in LFortran. That would have get people started really easily, which would be very helpful to get new contributors. Later on they can then use a full blown Python wrappers of LFortran, or even write it directly in C++.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/246/timeline","performed_via_github_app":null,"state_reason":null}