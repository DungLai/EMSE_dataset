{"url":"https://api.github.com/repos/lfortran/lfortran/issues/997","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/997/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/997/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/997/events","html_url":"https://github.com/lfortran/lfortran/issues/997","id":1438657146,"node_id":"I_kwDOCpMuHc5VwCp6","number":997,"title":"Update to template syntax","user":{"login":"everythingfunctional","id":1656488,"node_id":"MDQ6VXNlcjE2NTY0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/1656488?v=4","gravatar_id":"","url":"https://api.github.com/users/everythingfunctional","html_url":"https://github.com/everythingfunctional","followers_url":"https://api.github.com/users/everythingfunctional/followers","following_url":"https://api.github.com/users/everythingfunctional/following{/other_user}","gists_url":"https://api.github.com/users/everythingfunctional/gists{/gist_id}","starred_url":"https://api.github.com/users/everythingfunctional/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/everythingfunctional/subscriptions","organizations_url":"https://api.github.com/users/everythingfunctional/orgs","repos_url":"https://api.github.com/users/everythingfunctional/repos","events_url":"https://api.github.com/users/everythingfunctional/events{/privacy}","received_events_url":"https://api.github.com/users/everythingfunctional/received_events","type":"User","site_admin":false},"labels":[{"id":4772543928,"node_id":"LA_kwDOCpMuHc8AAAABHHc9uA","url":"https://api.github.com/repos/lfortran/lfortran/labels/generics","name":"generics","color":"bfdadc","default":false,"description":"Fortran 202Y Generics"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-11-07T16:41:57Z","updated_at":"2022-11-07T20:08:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The currently supported syntax for declaring \"deferred\" types (i.e. types that are template parameters) is `type :: T; end type`, but the official syntax will be `type, deferred :: T`.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/997/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/997/timeline","performed_via_github_app":null,"state_reason":null}