{"url":"https://api.github.com/repos/lfortran/lfortran/issues/594","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/594/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/594/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/594/events","html_url":"https://github.com/lfortran/lfortran/issues/594","id":1338789162,"node_id":"I_kwDOCpMuHc5PzE0q","number":594,"title":"Add a WAT test for interfacing JS via WASM","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T10:06:15Z","updated_at":"2022-08-15T14:36:35Z","closed_at":"2022-08-15T14:36:35Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/771\n\nI would do the following:\n```console\n$ lfortran --show-wat a.f90 \nwarning: Function with no body\n  --> a.f90:73:9 - 76:23\n   |\n73 |            subroutine show_img(n, m, A) bind(c)\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...\n...\n   |\n76 |            end subroutine\n   | ...^^^^^^^^^^^^^^^^^^^^^^^ show_img\n\nwarning: WASM: Calls to C subroutine are not yet supported\n  --> a.f90:73:9 - 76:23\n   |\n73 |            subroutine show_img(n, m, A) bind(c)\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...\n...\n   |\n76 |            end subroutine\n   | ...^^^^^^^^^^^^^^^^^^^^^^^ Function: calls show_img\n\n\nNote: if any of the above error or warning messages are not clear or are lacking\ncontext please report it to us (we consider that a bug that needs to be fixed).\n(module\n    (type (;0;) (func (param i32) (result)))\n    (type (;1;) (func (param i64) (result)))\n    (type (;2;) (func (param f32) (result)))\n    (type (;3;) (func (param f64) (result)))\n    (type (;4;) (func (param i32 i32) (result)))\n    (type (;5;) (func (param) (result)))\n    (type (;6;) (func (param i32) (result)))\n    (import \"js\" \"print_i32\" (func (;0;) (type 0)))\n    (import \"js\" \"print_i64\" (func (;1;) (type 1)))\n    (import \"js\" \"print_f32\" (func (;2;) (type 2)))\n    (import \"js\" \"print_f64\" (func (;3;) (type 3)))\n    (import \"js\" \"print_str\" (func (;4;) (type 4)))\n    (import \"js\" \"flush_buf\" (func (;5;) (type 5)))\n    (import \"js\" \"set_exit_code\" (func (;6;) (type 6)))\n    (import \"js\" \"memory\" (memory (;0;) 100 100))\n)\n```\nwhere `a.f90` is the code from the current dev.lfortran.org:\n```fortran\nprogram mandelbrot\n    implicit none\n    integer  , parameter :: rk       = 8\n    integer  , parameter :: i_max    =  600\n    integer  , parameter :: j_max    =  450\n    integer  , parameter :: n_max    =  100\n    real (rk), parameter :: x_centre = -0.5_rk\n    real (rk), parameter :: y_centre =  0.0_rk\n    real (rk), parameter :: width    =  4.0_rk\n    real (rk), parameter :: height   =  3.0_rk\n    real (rk), parameter :: dx_di    =   width / i_max\n    real (rk), parameter :: dy_dj    = -height / j_max\n    real (rk), parameter :: x_offset = x_centre - 0.5_rk * (i_max + 1) * dx_di\n    real (rk), parameter :: y_offset = y_centre - 0.5_rk * (j_max + 1) * dy_dj\n    integer :: image(i_max, j_max)\n    integer :: image_t(j_max, i_max)\n    integer   :: i\n    integer   :: j\n    integer   :: n\n    real (rk) :: x\n    real (rk) :: y\n    real (rk) :: x_0\n    real (rk) :: y_0\n    real (rk) :: x_sqr\n    real (rk) :: y_sqr\n\n    do j = 1, j_max\n    y_0 = y_offset + dy_dj * j\n    do i = 1, i_max\n        x_0 = x_offset + dx_di * i\n        x = 0.0_rk\n        y = 0.0_rk\n        n = 0\n        do\n        x_sqr = x ** 2\n        y_sqr = y ** 2\n        if (x_sqr + y_sqr > 4.0_rk) then\n            image(i,j) = 255\n            exit\n        end if\n        if (n == n_max) then\n            image(i,j) = 0\n            exit\n        end if\n        y = y_0 + 2.0_rk * x * y\n        x = x_0 + x_sqr - y_sqr\n        n = n + 1\n        end do\n    end do\n    end do\n\n    ! print '(a)', 'P2'\n    ! print '(i0, 1x, i0)', i_max, j_max\n    ! print '(i0)', 255\n    ! do j = 1, 3\n    !   do i = 1, 3\n    !     print '(i0)', image(i,j)\n    !   end do\n    ! end do\n\n    do i = 1, i_max\n        do j = 1, j_max\n            image_t(j, i) = image(i, j)\n        end do\n    end do\n\n    print *, \"The result is as follows:\"\n    call show_img(j_max, i_max, image_t)\n\n    print *, \"Thank you! Hope you had fun!\"\n\n    interface\n        subroutine show_img(n, m, A) bind(c)\n        integer, intent(in) :: n, m\n        integer, intent(in) :: A(n,m)\n        end subroutine\n    end interface\nend program mandelbrot\n```","closed_by":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/594/timeline","performed_via_github_app":null,"state_reason":"completed"}