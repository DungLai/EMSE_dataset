{"url":"https://api.github.com/repos/lfortran/lfortran/issues/178","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/178/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/178/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/178/events","html_url":"https://github.com/lfortran/lfortran/issues/178","id":1338682026,"node_id":"I_kwDOCpMuHc5Pyqqq","number":178,"title":"Allow to \"use\" modules compiled by gfortran","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:16:19Z","updated_at":"2022-08-15T08:16:19Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/52\n\nOne can compile production code with gfortran, which produces gfortran specific `mod` files. Those can already be parsed by `lfortran.adapters.gfortran.mod`, which creates an equivalent ASR representation of the module.\n\nNow we just need to allow them to be used \"out of the box\" with LFortran simply by \"using\" them:\n```fortran\nuse some_mod, only: some_fun\ncall some_fun(5)\n```\nwhere `some_mod` was compiled with `gfortran`.\n\nLater we can add support for other Fortran compilers also (https://gitlab.com/lfortran/lfortran/-/issues/56).\n\nThis will allow to use LFortran with production codes right away. Simple functions in a module would work, and for more complex functionality not yet implemented by LFortran all one has to do is to write a simple module, compile with gfortran, and then use in LFortran interactively.\n\n\nNote: a related project is [gfort2py](https://github.com/rjfarmer/gfort2py), which down the road can hopefully use `lfortran.adapters.gfortran.mod` so that they do not have to maintain their own parser.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/178/timeline","performed_via_github_app":null,"state_reason":null}