{"url":"https://api.github.com/repos/lfortran/lfortran/issues/927","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/927/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/927/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/927/events","html_url":"https://github.com/lfortran/lfortran/issues/927","id":1413525391,"node_id":"I_kwDOCpMuHc5UQK-P","number":927,"title":"Jupyterlite plan","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-10-18T16:36:09Z","updated_at":"2022-10-20T16:36:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"There are two independent tasks\r\n\r\n# Hook LFortran with XEUS as a kernel in JupyterLite\r\n\r\n* [ ] get only `%%showast` and `%%showasr` working (do not depend on LLVM) in JupyterLite in a local browser\r\n* [ ] setup a CI job that tests this automatically using emscripten (we have to figure out how to actually test it)\r\n\r\n# Implement Fortran evaluation using WASM\r\n\r\n* [ ] implement JavaScript WASM evaluator that accepts WAT (text WebAssembly) on a cell by cell basis and each cell can access previous cells data (variables and functions).\r\n* [ ] Generate the webassembly using our ASR->WASM backend; communicate with the JavaScript JIT (via emscripten calling into JavaScript) to give it the WASM code and evaluate, as part of the XEUS evaluate function","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/927/timeline","performed_via_github_app":null,"state_reason":null}