{"url":"https://api.github.com/repos/lfortran/lfortran/issues/568","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/568/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/568/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/568/events","html_url":"https://github.com/lfortran/lfortran/issues/568","id":1338786662,"node_id":"I_kwDOCpMuHc5PzENm","number":568,"title":"Missing program line must be able to compile","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T10:03:54Z","updated_at":"2022-08-15T10:03:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/739\n\nCurrently this:\n```\ninteger a, b, c\nend\n```\nParses as two statements in AST, and fails in AST->ASR with:\n```\nsemantic error: Variable 'end' is not declared\n --> tests/fixedform_assign_minimal.f:1:7\n  |\n1 |       integer a, b,c,d\n  |       ^ 'end' is undeclared\n```\n\nRather, this should be interpreted as a main program.\n\nOne way to do that is to do this in AST->ASR.\n\n\nHere is an ambiguous case:\n```\n>>> integer :: a, b, c, end                                                                                                                                                       \n>>> end = 5                                                                                                                                                                       1\n>>> end                                                                                                                                                                           1\n5\n```\n\nSo the algorithm in AST->ASR I think should be:\n\n* If the input ends with `end` and `end` is not declared as a variable, then create a `Program` ASR node.\n* If the input ends with `end` and `end` is declared as a variable, then assume interactive mode, and interpret it as 3 statements, printing the variable `end`.\n\nIf the user wants the last case to mean a program, he can put a `program` line at the beginning, like this:\n```\n>>> program X\n>>> integer :: a, b, c, end                                                                                                                                                       \n>>> end = 5                                                                                                                                                                       1\n>>> end                                                                                                                                                                           1\n>>>\n```\nWhich disambiguates it, and it will be interpreted as a `Program` ASR node.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/568/timeline","performed_via_github_app":null,"state_reason":null}