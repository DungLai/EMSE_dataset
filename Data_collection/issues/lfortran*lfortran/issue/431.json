{"url":"https://api.github.com/repos/lfortran/lfortran/issues/431","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/431/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/431/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/431/events","html_url":"https://github.com/lfortran/lfortran/issues/431","id":1338737447,"node_id":"I_kwDOCpMuHc5Py4Mn","number":431,"title":"Experiences with LFortran","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-15T09:14:05Z","updated_at":"2022-10-19T22:36:45Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/574\n\nThe code for the [demo](https://gitlab.com/lfortran/examples/mvp_demo/-/tree/master/src) uses arrays. With LFortran on WSL 2, I can run a small program interactively such as \n\n\n```\ninteger :: i\ni = 3\nprint*,i,i**2\n```\n\nbut I can't use arrays. When run interactively the program\n\n\n```\ninteger :: ivec(1)\nivec(1)  = 3\n```\ngives a segmentation fault.\n\nHowever, if I store\n\n```\nprogram main\ninteger :: ivec(1)\nivec(1) = 3\nprint*,ivec\nend program main\n```\nin `vec.f90` I can compile it with `lfortran vec.f90` and run it.\n\nLFortran does not recognize the one-line program `end`. \n\n`lfortran end.f90`\n\ngives\n\n`input:1:1 semantic error: Variable 'end' not declared`","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/431/timeline","performed_via_github_app":null,"state_reason":null}