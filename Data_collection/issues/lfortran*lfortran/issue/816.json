{"url":"https://api.github.com/repos/lfortran/lfortran/issues/816","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/816/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/816/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/816/events","html_url":"https://github.com/lfortran/lfortran/issues/816","id":1391268420,"node_id":"I_kwDOCpMuHc5S7RJE","number":816,"title":"How to handle all the ASR backends?","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2022-09-29T17:54:11Z","updated_at":"2022-10-14T21:15:26Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We currently have the following backends:\r\n\r\n* Lowering backends: LLVM, WebAssembly, x86\r\n* Language backends: C, C++, Julia\r\n\r\nFor lowering backends, I also want to add WebAssembly->x86 and arm, and if the speed is good enough, perhaps just maintain two lowering backends: LLVM and WebAssembly; and do WebAssembly->x86/arm. We might also add some other engines, like [qbe](https://c9x.me/compile/). In general though, I expect just a handful of backends there, as the majority will be funneled via LLVM or WebAssembly.\r\n\r\nFor the language backends on the other hand, we need to add: Fortran, Python; then other languages that people might like: Rust, Go, JavaScript, Swift, Haskell, C#, Java, JVM, Lua, PHP, etc.\r\n\r\nThere can easily be dozens of backends.\r\n\r\nFor each backend we need thorough testing, as strings, as well as via the actual language compiler/interpreter. \r\n\r\nAll these backends are strictly ASR->language, they are not tied (or should not be) to Fortran, or LFortran.\r\n\r\nWe need to figure out a solution that will not slowdown our fast development of LFortran, when we are trying to bring it from alpha to beta, that is, mostly adding Fortran AST->ASR semantics, as well as ASR->LLVM lowering.\r\n\r\nOne solution is to have each backend in its own repository. Since the backend work does not require modifying ASR, we can simply depend on libasr as a third party library (via a git submodule or otherwise). Since we also need LFortran to convert Fortran files to ASR for tests, we might just depend on LFortran as a third party dependency.\r\n\r\nThen when we change ASR, we simply make LFortran working, and ensure all backends inside the LFortran tree work. Then we go to the Rust repository, update LFortran and fix all issues in the backend and ensure all tests pass.\r\n\r\nHow to ship this to end users? Say, how to create Conda packages.\r\n\r\nOne option is to create plugins. So the backend can be a plugin, that the LFortran frontend can register, and expose via command line options. Then you can do `--show-rust` (or whatever) and everything would just work; but at the same time the source code is maintained in a separate repository, thus not slowing the main LFortran development work down.\r\n\r\nCC @czgdp1807.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/816/timeline","performed_via_github_app":null,"state_reason":null}