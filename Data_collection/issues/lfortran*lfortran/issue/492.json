{"url":"https://api.github.com/repos/lfortran/lfortran/issues/492","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/492/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/492/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/492/events","html_url":"https://github.com/lfortran/lfortran/issues/492","id":1338779827,"node_id":"I_kwDOCpMuHc5PzCiz","number":492,"title":"List of Standard generic intrinsic procedure","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:56:43Z","updated_at":"2022-08-15T09:56:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/642\n\nLet's keep a track of intrinsic procedures implemented and to be implemented in this issue\n- [x] ABS (A)\n- [x] ACHAR (I [, KIND])\n- [x] ACOS (X)\n- [x] ACOSH (X)\n- [ ] ADJUSTL (STRING)\n- [ ] ADJUSTR (STRING)\n- [x] AIMAG (Z)\n- [ ] AINT (A [, KIND])\n- [ ] ALL (MASK) or (MASK, DIM)\n- [x] ALLOCATED (ARRAY) or (SCALAR)\n- [ ] ANINT (A [, KIND])\n- [ ] ANY (MASK) or (MASK, DIM)\n- [x] ASIN (X)\n- [x] ASINH (X)\n- [ ] ASSOCIATED (POINTER [, TARGET])\n- [x] ATAN (X) or (Y, X)\n- [x] ATAN2 (Y, X)\n- [x] ATANH (X)\n- [ ] ATOMIC_ADD (ATOM, VALUE [, STAT])\n- [ ] ATOMIC_AND (ATOM, VALUE [, STAT])\n- [ ] ATOMIC_CAS (ATOM, OLD, COMPARE, VALUE [, STAT])\n- [ ] ATOMIC_DEFINE (ATOM, VALUE [, STAT])\n- [ ] ATOMIC_FETCH_ADD (ATOM, VALUE, OLD [, STAT])\n- [ ] ATOMIC_FETCH_AND (ATOM, VALUE, OLD [, STAT])\n- [ ] ATOMIC_FETCH_OR (ATOM, VALUE, OLD [, STAT])\n- [ ] ATOMIC_FETCH_XOR (ATOM, VALUE, OLD [, STAT])\n- [ ] ATOMIC_OR (ATOM, VALUE [, STAT])\n- [ ] ATOMIC_REF (VALUE, ATOM [, STAT])\n- [ ] ATOMIC_XOR (ATOM, VALUE [, STAT])\n- [ ] BESSEL_J0 (X)\n- [ ] BESSEL_J1 (X)\n- [ ] BESSEL_JN (N, X)\n- [ ] BESSEL_JN (N1, N2, X)\n- [ ] BESSEL_Y0 (X)\n- [ ] BESSEL_Y1 (X)\n- [ ] BESSEL_YN (N, X)\n- [ ] BESSEL_YN (N1, N2, X)\n- [x] BGE (I, J)\n- [x] BGT (I, J)\n- [x] BIT_SIZE (I)\n- [x] BLE (I, J)\n- [x] BLT (I, J)\n- [x] BTEST (I, POS)\n- [x] CEILING (A [, KIND])\n- [x] CHAR (I [, KIND])\n- [ ] CMPLX (X [, KIND]) or (X [, Y, KIND])\n- [ ] CO_BROADCAST (A, SOURCE_IMAGE [, STAT, ERRMSG])\n- [ ] CO_MAX (A [, RESULT_IMAGE, STAT, ERRMSG])\n- [ ] CO_MIN (A [, RESULT_IMAGE, STAT, ERRMSG])\n- [ ] CO_REDUCE (A, OPERATION [, RESULT_IMAGE, STAT, ERRMSG])\n- [ ] CO_SUM (A [, RESULT_IMAGE, STAT, ERRMSG])\n- [ ] COMMAND_ARGUMENT_COUNT ( )\n- [ ] CONJG (Z)\n- [x] COS (X)\n- [x] COSH (X)\n- [ ] COSHAPE (COARRAY [, KIND])\n- [ ] COUNT (MASK [, DIM, KIND])\n- [x] CPU_TIME (TIME)\n- [ ] CSHIFT (ARRAY, SHIFT [, DIM])\n- [ ] DATE_AND_TIME ([DATE, TIME, ZONE, VALUES])\n- [ ] DBLE (A)\n- [ ] DIGITS (X)\n- [ ] DIM (X, Y)\n- [ ] DOT_PRODUCT (VECTOR_A, VECTOR_B)\n- [ ] DPROD (X, Y)\n- [ ] DSHIFTL (I, J, SHIFT)\n- [ ] DSHIFTR (I, J, SHIFT)\n- [ ] EOSHIFT (ARRAY, SHIFT [, BOUNDARY, DIM])\n- [x] EPSILON (X)\n- [x] ERF (X)\n- [x] ERFC (X)\n- [ ] ERFC_SCALED (X)\n- [ ] EVENT_QUERY (EVENT, COUNT [, STAT])\n- [ ] EXECUTE_COMMAND_LINE (COMMAND [, WAIT, EXITSTAT, CMDSTAT, CMDMSG])\n- [x] EXP (X)\n- [ ] EXPONENT (X)\n- [ ] EXTENDS_TYPE_OF (A, MOLD)\n- [ ] FAILED_IMAGES ([TEAM, KIND])\n- [ ] FINDLOC (ARRAY, VALUE, DIM [, MASK, KIND, BACK]) or (ARRAY, VALUE [, MASK, KIND, BACK])\n- [x] FLOOR (A [, KIND])\n- [ ] FRACTION (X)\n- [x] GAMMA (X)\n- [ ] GET_COMMAND ([COMMAND, LENGTH, STATUS, ERRMSG])\n- [ ] GET_COMMAND_ARGUMENT (NUMBER [, VALUE, LENGTH, STATUS, ERRMSG])\n- [ ] GET_ENVIRONMENT_VARIABLE (NAME [, VALUE, LENGTH, STATUS, TRIM_NAME, ERRMSG])\n- [ ] GET_TEAM ([LEVEL])\n- [x] HUGE (X)\n- [ ] HYPOT (X, Y)\n- [x] IACHAR (C [, KIND])\n- [ ] IALL(ARRAY, DIM [, MASK]) or (ARRAY [, MASK])\n- [x] IAND (I, J)\n- [ ] IANY (ARRAY, DIM [, MASK]) or (ARRAY [, MASK])\n- [x] IBCLR (I, POS)\n- [x] IBITS (I, POS, LEN)\n- [x] IBSET (I, POS)\n- [ ] ICHAR (C [, KIND])\n- [x] IEOR (I, J)\n- [ ] IMAGE_INDEX (COARRAY, SUB) or (COARRAY, SUB, TEAM) or (COARRAY, SUB, TEAM_NUMBER)\n- [ ] IMAGE_STATUS (IMAGE [, TEAM])\n- [x] INDEX (STRING, SUBSTRING [, BACK, KIND])\n- [x] INT (A [, KIND])\n- [x] IOR (I, J)\n- [ ] IPARITY (ARRAY, DIM [, MASK]) or (ARRAY [, MASK])\n- [x] ISHFT (I, SHIFT)\n- [ ] ISHFTC (I, SHIFT [, SIZE])\n- [ ] IS_CONTIGUOUS (ARRAY)\n- [ ] IS_IOSTAT_END (I)\n- [ ] IS_IOSTAT_EOR (I)\n- [x] KIND (X)\n- [x] LBOUND (ARRAY [, DIM, KIND])\n- [ ] LCOBOUND (COARRAY [, DIM, KIND])\n- [ ] LEADZ (I)\n- [x] LEN (STRING [, KIND])\n- [x] LEN_TRIM (STRING [, KIND])\n- [ ] LGE (STRING_A, STRING_B)\n- [ ] LGT (STRING_A, STRING_B)\n- [ ] LLE (STRING_A, STRING_B)\n- [ ] LLT (STRING_A, STRING_B)\n- [x] LOG (X)\n- [x] LOG_GAMMA (X)\n- [x] LOG10 (X)\n- [ ] LOGICAL (L [, KIND])\n- [ ] MASKL (I [, KIND])\n- [ ] MASKR (I [, KIND])\n- [ ] MATMUL (MATRIX_A, MATRIX_B)\n- [x] MAX (A1, A2 [, A3, ...])\n- [ ] MAXEXPONENT (X)\n- [ ] MAXLOC (ARRAY, DIM [, MASK, KIND, BACK]) or (ARRAY [, MASK, KIND, BACK])\n- [x] MAXVAL (ARRAY, DIM [, MASK]) or (ARRAY [, MASK])\n- [x] MERGE (TSOURCE, FSOURCE, MASK)\n- [ ] MERGE_BITS (I, J, MASK)\n- [x] MIN (A1, A2 [, A3, ...])\n- [ ] MINEXPONENT (X)\n- [ ] MINLOC (ARRAY, DIM [, MASK, KIND, BACK]) or (ARRAY [, MASK, KIND, BACK])\n- [x] MINVAL (ARRAY, DIM [, MASK]) or (ARRAY [, MASK])\n- [x] MOD (A, P)\n- [x] MODULO (A, P)\n- [ ] MOVE_ALLOC (FROM, TO [, STAT, ERRMSG])\n- [x] MVBITS (FROM, FROMPOS, LEN, TO, TOPOS)\n- [ ] NEAREST (X, S)\n- [x] NEW_LINE (A)\n- [x] NINT (A [, KIND])\n- [ ] NORM2 (X) or (X, DIM)\n- [x] NOT (I)\n- [ ] NULL ([MOLD])\n- [ ] NUM_IMAGES ( ) or (TEAM) or (TEAM_NUMBER)\n- [ ] OUT_OF_RANGE (X, MOLD [, ROUND])\n- [ ] PACK (ARRAY, MASK [, VECTOR])\n- [ ] PARITY (MASK) or (MASK, DIM)\n- [ ] POPCNT (I)\n- [ ] POPPAR (I)\n- [ ] PRECISION (X)\n- [x] PRESENT (A)\n- [ ] PRODUCT (ARRAY, DIM [, MASK]) or (ARRAY [, MASK])\n- [ ] RADIX (X)\n- [ ] RANDOM_INIT (REPEATABLE, IMAGE_-DISTINCT)\n- [x] RANDOM_NUMBER (HARVEST)\n- [ ] RANDOM_SEED ([SIZE, PUT, GET])\n- [x] RANGE (X)\n- [ ] RANK (A)\n- [x] REAL (A [, KIND])\n- [ ] REDUCE (ARRAY, OPERATION, DIM [, MASK, IDENTITY, ORDERED]) or (ARRAY, OPERATION [, MASK, IDENTITY, ORDERED])\n- [x] REPEAT(STRING, NCOPIES)\n- [ ] RESHAPE(SOURCE, SHAPE [, PAD, ORDER])\n- [ ] RRSPACING (X)\n- [ ] SAME_TYPE_AS (A, B)\n- [ ] SCALE (X, I)\n- [ ] SCAN (STRING, SET [, BACK, KIND])\n- [x] SELECTED_CHAR_KIND (NAME)\n- [x] SELECTED_INT_KIND (R)\n- [x] SELECTED_REAL_KIND ([P, R, RADIX])\n- [ ] SET_EXPONENT (X, I)\n- [x] SHAPE (SOURCE [, KIND])\n- [ ] SHIFTA (I, SHIFT)\n- [ ] SHIFTL (I, SHIFT)\n- [ ] SHIFTR (I, SHIFT)\n- [ ] SIGN (A, B)\n- [x] SIN (X)\n- [x] SINH (X)\n- [x] SIZE (ARRAY [, DIM, KIND])\n- [ ] SPACING (X)\n- [ ] SPREAD (SOURCE, DIM, NCOPIES)\n- [x] SQRT (X)\n- [ ] STOPPED_IMAGES ([TEAM, KIND])\n- [ ] STORAGE_SIZE (A [, KIND])\n- [x] SUM (ARRAY, DIM [, MASK]) or (ARRAY [, MASK])\n- [x] SYSTEM_CLOCK ([COUNT, COUNT_RATE, COUNT_MAX])\n- [x] TAN (X)\n- [x] TANH (X)\n- [ ] TEAM_NUMBER ([TEAM])\n- [ ] THIS_IMAGE ([TEAM])\n- [ ] THIS_IMAGE (COARRAY [, TEAM]) or (COARRAY, DIM [, TEAM])\n- [x] TINY (X)\n- [ ] TRAILZ (I)\n- [ ] TRANSFER (SOURCE, MOLD [, SIZE])\n- [ ] TRANSPOSE (MATRIX)\n- [x] TRIM (STRING)\n- [x] UBOUND (ARRAY [, DIM, KIND])\n- [ ] UCOBOUND (COARRAY [, DIM, KIND])\n- [ ] UNPACK (VECTOR, MASK, FIELD)\n- [ ] VERIFY (STRING, SET [, BACK, KIND])\n\ncc [@ certik](https://gitlab.com/certik) [@ czgdp18071](https://gitlab.com/czgdp18071) [@ brocolis](https://gitlab.com/brocolis)    \nReference: F2018 Interpretation Document (Table 16.1 Pg: 332)   \n(https://j3-fortran.org/doc/year/18/18-007r1.pdf)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/492/timeline","performed_via_github_app":null,"state_reason":null}