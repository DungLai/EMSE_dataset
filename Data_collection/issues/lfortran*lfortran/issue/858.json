{"url":"https://api.github.com/repos/lfortran/lfortran/issues/858","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/858/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/858/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/858/events","html_url":"https://github.com/lfortran/lfortran/issues/858","id":1398209174,"node_id":"I_kwDOCpMuHc5TVvqW","number":858,"title":"Setup CI to compile 3rd party Fortran codes","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-10-05T18:39:26Z","updated_at":"2022-10-06T12:00:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This would help prevent regressions. We should test some sufficiently big representative codes with every PR. Here is what we can do already (or very close):\r\n\r\n* [x] SciPy: AST (https://github.com/lfortran/lfortran/pull/861)\r\n* [ ] MinPack: ASR\r\n* [ ] Stdlib: ASR\r\n\r\nWe will always fix a given upstream commit (since new changes upstream can use something that we do not yet support).\r\n\r\nThose codes that can do ASR, we can then create a custom simple driver of something that would work with LLVM, that way we test that something that actually fully compiles and runs. Over time we will expand to run the upstream testsuite. Eventually we'll just run the upstream test suite.\r\n\r\nWe also manually upgrade the upstream codes to the latest version from time to time as a PR, which might trigger some failures for us to implement / fix (and until it's fixed in LFortran, we'll keep testing the older version).","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/858/timeline","performed_via_github_app":null,"state_reason":null}