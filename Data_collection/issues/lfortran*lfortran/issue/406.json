{"url":"https://api.github.com/repos/lfortran/lfortran/issues/406","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/406/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/406/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/406/events","html_url":"https://github.com/lfortran/lfortran/issues/406","id":1338734892,"node_id":"I_kwDOCpMuHc5Py3ks","number":406,"title":"Runtime Regression","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:11:39Z","updated_at":"2022-08-15T09:11:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/534\n\nAs of b05ffe33, `floor` does not work:\n\n```fortran\nprogram main\n  implicit none\n  real :: y=3.2\n  print*, floor(y)\nend program main\n```\n\nErrors out with:\n\n```bash\nTraceback (most recent call last):\n  Binary file \"/users/home/rog32/Git/Github/Fortran/mylf/inst/bin/lfortran\", in _start()\n  Binary file \"/lib64/libc.so.6\", in __libc_start_main()\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/bin/lfortran.cpp\", line 1353, in main()\n    err = compile_to_object_file(arg_file, tmp_o, false,\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/bin/lfortran.cpp\", line 644, in compile_to_object_file()\n    result = fe.get_asr2(input, fixed_form);\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/codegen/evaluator.cpp\", line 485, in LFortran::FortranEvaluator::get_asr2(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)\n    asr = ast_to_asr(al, *ast, symbol_table);\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/semantics/ast_to_asr.cpp\", line 36, in LFortran::ast_to_asr(Allocator&, LFortran::AST::TranslationUnit_t&, LFortran::SymbolTable*)\n    ASR::TranslationUnit_t *tu = body_visitor(al, ast, unit);\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/semantics/ast_body_visitor.cpp\", line 2095, in LFortran::body_visitor(Allocator&, LFortran::AST::TranslationUnit_t&, LFortran::ASR::asr_t*)\n    b.visit_TranslationUnit(ast);\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/semantics/ast_body_visitor.cpp\", line 70, in LFortran::BodyVisitor::visit_TranslationUnit(LFortran::AST::TranslationUnit_t const&)\n    visit_ast(*x.m_items[i]);\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/ast.h\", line 4572, in LFortran::AST::BaseVisitor<LFortran::BodyVisitor>::visit_ast(LFortran::AST::ast_t const&)\n    void visit_ast(const ast_t &b) { visit_ast_t(b, self()); }\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/ast.h\", line 4531, in void LFortran::AST::visit_ast_t<LFortran::BodyVisitor>(LFortran::AST::ast_t const&, LFortran::BodyVisitor&)\n    case astType::mod: { v.visit_mod((const mod_t &)x); return; }\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/ast.h\", line 4575, in LFortran::AST::BaseVisitor<LFortran::BodyVisitor>::visit_mod(LFortran::AST::mod_t const&)\n    void visit_mod(const mod_t &b) { visit_mod_t(b, self()); }\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/ast.h\", line 4188, in void LFortran::AST::visit_mod_t<LFortran::BodyVisitor>(LFortran::AST::mod_t const&, LFortran::BodyVisitor&)\n    case modType::Program: { v.visit_Program((const Program_t &)x); return; }\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/semantics/ast_body_visitor.cpp\", line 646, in LFortran::BodyVisitor::visit_Program(LFortran::AST::Program_t const&)\n    this->visit_stmt(*x.m_body[i]);\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/ast.h\", line 4613, in LFortran::AST::BaseVisitor<LFortran::BodyVisitor>::visit_stmt(LFortran::AST::stmt_t const&)\n    void visit_stmt(const stmt_t &b) { visit_stmt_t(b, self()); }\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/ast.h\", line 4307, in void LFortran::AST::visit_stmt_t<LFortran::BodyVisitor>(LFortran::AST::stmt_t const&, LFortran::BodyVisitor&)\n    case stmtType::Print: { v.visit_Print((const Print_t &)x); return; }\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/semantics/ast_body_visitor.cpp\", line 1876, in LFortran::BodyVisitor::visit_Print(LFortran::AST::Print_t const&)\n    visit_expr(*x.m_values[i]);\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/ast.h\", line 4662, in LFortran::AST::BaseVisitor<LFortran::BodyVisitor>::visit_expr(LFortran::AST::expr_t const&)\n    void visit_expr(const expr_t &b) { visit_expr_t(b, self()); }\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/ast.h\", line 4345, in void LFortran::AST::visit_expr_t<LFortran::BodyVisitor>(LFortran::AST::expr_t const&, LFortran::BodyVisitor&)\n    case exprType::FuncCallOrArray: { v.visit_FuncCallOrArray((const FuncCallOrArray_t &)x); return; }\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/semantics/ast_body_visitor.cpp\", line 1570, in LFortran::BodyVisitor::visit_FuncCallOrArray(LFortran::AST::FuncCallOrArray_t const&)\n    float rv = ASR::down_cast<ASR::ConstantReal_t>(\n  File \"/users/home/rog32/Git/Github/Fortran/mylf/src/lfortran/asr.h\", line 39, in LFortran::ASR::ConstantReal_t* LFortran::ASR::down_cast<LFortran::ASR::ConstantReal_t, LFortran::ASR::expr_t>(LFortran::ASR::expr_t const*)\n    LFORTRAN_ASSERT(f != nullptr);\nAssertFailed: f != nullptr\n```\nSeems to be going down the wrong route; will look into this.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/406/timeline","performed_via_github_app":null,"state_reason":null}