{"url":"https://api.github.com/repos/lfortran/lfortran/issues/597","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/597/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/597/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/597/events","html_url":"https://github.com/lfortran/lfortran/issues/597","id":1339498952,"node_id":"I_kwDOCpMuHc5P1yHI","number":597,"title":"WASM: Future Prospects","user":{"login":"Shaikh-Ubaid","id":43722035,"node_id":"MDQ6VXNlcjQzNzIyMDM1","avatar_url":"https://avatars.githubusercontent.com/u/43722035?v=4","gravatar_id":"","url":"https://api.github.com/users/Shaikh-Ubaid","html_url":"https://github.com/Shaikh-Ubaid","followers_url":"https://api.github.com/users/Shaikh-Ubaid/followers","following_url":"https://api.github.com/users/Shaikh-Ubaid/following{/other_user}","gists_url":"https://api.github.com/users/Shaikh-Ubaid/gists{/gist_id}","starred_url":"https://api.github.com/users/Shaikh-Ubaid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shaikh-Ubaid/subscriptions","organizations_url":"https://api.github.com/users/Shaikh-Ubaid/orgs","repos_url":"https://api.github.com/users/Shaikh-Ubaid/repos","events_url":"https://api.github.com/users/Shaikh-Ubaid/events{/privacy}","received_events_url":"https://api.github.com/users/Shaikh-Ubaid/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-15T20:54:40Z","updated_at":"2022-09-15T14:25:18Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"- We are currently building `lfortran` to `wasm` in `debug` type.\r\n    - As previously discussed, ideally it should be in `release` type (for speed).\r\n- ~Currently, the `runtime` library is not supported at `dev.lfortran.org`~ (https://github.com/lfortran/lfortran/pull/643, https://github.com/lfortran/lfortran/pull/657)\r\n- CI: Testing NodeJS version compare fix/make-robust\r\n    - The statement `string(COMPARE GREATER_EQUAL \"${WASM_EXEC_VERSION}\" \"v16.0.0\" IS_NODE_ABOVE_16)` in `integration_tests/CMakeLists.txt` can/might return wrong/undesired result when the `node` version is between (around) `v2.0.0` to `<=` `v9.x.x`.\r\n- Add Bitwise operators\r\n- Use passes (ImpliedDoLoop and others) for arrays\r\n    - This could hopefully support operations involving arrays.\r\n- ~Verify preamble in wasm decoding~ (https://github.com/lfortran/lfortran/pull/631)\r\n    - ~During `wasm` to `wat` conversion, we currently skip the first eight bytes of `wasm` (as they contain the `magic` number and `wasm` version). Ideally, we should check/verify these eight bytes and return/exit with an error.~\r\n- Auto-generating `wasm_to_wat.h` using script\r\n- Pass `wasm_bytes` stream from `C++` to `JavaScript` using Heap. That is Heap Method for accessing `uint8_t* wasm_bytes`.\r\n    - To pass bytes from `lfortran.wasm` to the `JavaScript` frontend for execution, we construct a string from the bytes (since, few attempts to pass bytes directly did not succeed, where as passing strings was successful).\r\n- The current `wasm_to_wat.cpp`  might/can parse `wasm` with sections in any (random) order.\r\n    - As per the `wasm` docs, it seems that the different sections in `wasm` should/must appear as per the increasing order of their section ids (I guess, custom sections might be an exception). We should possibly try to generate error if the sections in the `wasm` are not in proper/expected order.\r\n- Use/Provide `WASI` Environment for executing generated `wasm`\r\n- Support `C` `runtime` library in the `LLVM` based `WASM` Backend.\r\n- WASM: RuntimeError: memory access out of bounds (https://github.com/lfortran/lfortran/issues/658).","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/597/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/597/timeline","performed_via_github_app":null,"state_reason":null}