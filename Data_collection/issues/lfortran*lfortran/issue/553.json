{"url":"https://api.github.com/repos/lfortran/lfortran/issues/553","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/553/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/553/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/553/events","html_url":"https://github.com/lfortran/lfortran/issues/553","id":1338785090,"node_id":"I_kwDOCpMuHc5PzD1C","number":553,"title":"Implicit real gives semantic error with cpp backend","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T10:02:29Z","updated_at":"2022-08-15T10:02:29Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/718\n\nImplicit types might not be implemented yet for cpp, I might have seen that logged in a related issue. The error message given could possibly be improved to say that implicit types are currently not supported by lfortran. I personally think the use of the term \"semantic error\" might not be very user friendly in this case and could be omitted. Saying the variable \"is undeclared\" is helpful.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/553/timeline","performed_via_github_app":null,"state_reason":null}