{"url":"https://api.github.com/repos/lfortran/lfortran/issues/329","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/329/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/329/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/329/events","html_url":"https://github.com/lfortran/lfortran/issues/329","id":1338725411,"node_id":"I_kwDOCpMuHc5Py1Qj","number":329,"title":"Callback functions not called for expression arguments","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:04:14Z","updated_at":"2022-08-15T09:04:14Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/344\n\nCallback functions do not seem to be called when the arguments are expressions, i.e., the LLVM code generated for this case shows no calls to `f` in the `cb` function.\n\n```fortran\nmodule callback_01\n\ncontains\n\nreal function cb(f, a, b)\nreal, intent(in) :: a, b\ninterface\n    real function f(x)\n    implicit none\n    real, intent(in) :: x\n    end function\nend interface\ncb = (b-a) + f(a+b) + f(b-a)\nend function\n\n\nsubroutine foo(c, d)\nreal :: c, d\nprint *, cb(f, c, d)\n\ncontains\n\nreal function f(x)\nreal, intent(in) :: x\nf = 2*x\nend function f\n\nend subroutine foo\n\nend module\n\nprogram main\n  use callback_01\n  call foo(1.5, 2.0)\nend program\n```\n\nHere is the IR for the `cb` function:\n\n```llvm\ndefine float [@ __module_callback_01_cb](https://gitlab.com/__module_callback_01_cb)(float (float*)* %f, float* %a, float* %b) {\n.entry:\n  %cb = alloca float, align 4\n  %0 = load float, float* %b, align 4\n  %1 = load float, float* %a, align 4\n  %2 = fsub float %0, %1\n  %3 = load float, float* %a, align 4\n  %4 = load float, float* %b, align 4\n  %5 = fadd float %3, %4\n  %6 = fadd float %2, %5\n  %7 = load float, float* %b, align 4\n  %8 = load float, float* %a, align 4\n  %9 = fsub float %7, %8\n  %10 = fadd float %6, %9\n  store float %10, float* %cb, align 4\n  %11 = load float, float* %cb, align 4\n  ret float %11\n}\n\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/329/timeline","performed_via_github_app":null,"state_reason":null}