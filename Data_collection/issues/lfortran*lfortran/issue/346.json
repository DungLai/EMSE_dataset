{"url":"https://api.github.com/repos/lfortran/lfortran/issues/346","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/346/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/346/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/346/events","html_url":"https://github.com/lfortran/lfortran/issues/346","id":1338728033,"node_id":"I_kwDOCpMuHc5Py15h","number":346,"title":"Implement Assumed Length","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:05:53Z","updated_at":"2022-08-15T09:05:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/374\n\nConsider the following function from `dftatom` (and therefore part of https://gitlab.com/lfortran/lfortran/-/issues/319):\n\n```fortran\nfunction lowcase(s) result(t)\n! Returns string 's' in lowercase\ncharacter(*), intent(in) :: s\ncharacter(len(s)) :: t\ninteger :: i, diff\nt = s; diff = ichar('A')-ichar('a')\ndo i = 1, len(t)\n    if (ichar(t(i:i)) >= ichar('A') .and. ichar(t(i:i)) <= ichar('Z')) then\n        ! if uppercase, make lowercase\n        t(i:i) = char(ichar(t(i:i)) - diff)\n    end if\nend do\nend function\n```\n\nThis expects the size to be from the argument. Note that the 2018 draft of the Fortran standard mentions:\n> Assumed character length for functions is an irregularity in the language in that elsewhere in Fortran the philosophy\nis that the attributes of a function result depend only on the actual arguments of the invocation and on\nany data accessible by the function through host or use association. Some uses of this facility can be replaced\nwith an automatic character length function, where the length of the function result is declared in a specification\nexpression. Other uses can be replaced by the use of a subroutine whose arguments correspond to the function\nresult and the function arguments.\n\n> Note that dummy arguments of a function can have assumed character length.\n\nMore pertinently, from the '95 ISO draft standard:\n![image](/uploads/e9035a7047f13608f87cc3a7eedfbd80/image.png)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/346/timeline","performed_via_github_app":null,"state_reason":null}