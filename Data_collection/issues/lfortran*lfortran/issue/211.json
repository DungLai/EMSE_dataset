{"url":"https://api.github.com/repos/lfortran/lfortran/issues/211","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/211/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/211/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/211/events","html_url":"https://github.com/lfortran/lfortran/issues/211","id":1338684997,"node_id":"I_kwDOCpMuHc5PyrZF","number":211,"title":"Excessive newlines in printing ASR expression","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:19:24Z","updated_at":"2022-08-15T08:19:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/110\n\nAttempting to convert a directly constructed LFortran ASR object to source code\nprints an excessive number of newlines in the resulting expression:\n\n\n```python\n>>> integer = lfortran.asr.builder.make_type_integer()\n>>> a = lfortran.asr.asr.Variable(name=\"a\", type=integer)\n>>> b = lfortran.asr.asr.Variable(name=\"b\", type=integer)\n>>> expr = lfortran.asr.builder.make_binop(a, lfortran.asr.asr.Add(), b)\n>>> lfortran.ast_to_src(lfortran.asr_to_ast(expr))\n'a\\n \\n+\\n \\nb\\n'\n```\n\nI'm not sure whether this is the right way to print the resulting string (that's\nat least how its done in the builder test, though it's applied to an entire\nmodule).\n\nI'm currently using LFortran 0.1.14, distributed by PyPI.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/211/timeline","performed_via_github_app":null,"state_reason":null}