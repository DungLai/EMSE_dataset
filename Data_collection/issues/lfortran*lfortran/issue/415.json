{"url":"https://api.github.com/repos/lfortran/lfortran/issues/415","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/415/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/415/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/415/events","html_url":"https://github.com/lfortran/lfortran/issues/415","id":1338735822,"node_id":"I_kwDOCpMuHc5Py3zO","number":415,"title":"Per-labeled-block optimizations","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:12:32Z","updated_at":"2022-08-15T09:12:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/551\n\nLFortran will eventually gain the ability to automatically parallelize or offload certain code (including, for example, `do concurrent`). Since compiler flags need to be either on or off for a whole file, if you want some loops parallelized and not others, you might have to split your code into multiple files for no other reason.\n\nSince Fortran has labeled blocks, like:\n```\nsomeloop: do concurrent(i=1:Ni,j=1:Nj)\n        A(i,j) = i+j\nend do someloop\n```\nwe could allow the user to write an external file that contains lines like:\n```\nsomeloop: -parallel\notherloop: -offload\n```\nand specify what compiler flags should be used on a loop-by-loop, or function-by-function basis.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/415/timeline","performed_via_github_app":null,"state_reason":null}