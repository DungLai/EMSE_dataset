{"url":"https://api.github.com/repos/lfortran/lfortran/issues/358","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/358/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/358/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/358/events","html_url":"https://github.com/lfortran/lfortran/issues/358","id":1338729927,"node_id":"I_kwDOCpMuHc5Py2XH","number":358,"title":"Optimizations list","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:07:03Z","updated_at":"2022-08-15T09:07:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/427\n\nHere are some ideas for ASR->ASR optimizations optional passes that we should implement:\n\n* [ ] compile time evaluation\n* [ ] function inlining\n* [ ] loop unrolling (if the size is known)\n* [ ] if and select case statement evaluation (dead code elimination)\n* [ ] efficient array evaluations (https://gitlab.com/lfortran/lfortran/-/issues/383), in particular: \n  * [ ] Efficient `1/sqrt(x)` implementation that vectorizes well (needed for https://gitlab.com/lfortran/lfortran/-/issues/647)\n  * [ ] Efficient `sum(r(:,m)**2)` implementation the vectorizes well (needed for https://gitlab.com/lfortran/lfortran/-/issues/647)\n  * [ ] `maxval(abs(a-b))`\n  * [ ] `sqrt(dot_product(array,array))`\n* [ ] https://gitlab.com/lfortran/lfortran/-/issues/428: loop vectorization with user or intrinsic functions such as `sin(A(i))` --- even if it is called as a scalar, by tiling the loop `sin(A(a:b))` could be changed to evaluate for a vector. The same for user defined generic procedures.\n* [ ] Efficient functions returning arrays (rewrite as subroutines)\n* [ ] Eliminate allocatable arrays when possible: both inside subroutines and `intent(out), allocatable` (requires to ensure the caller provides an array of the correct size, properly allocated: by moving up the allocatable statement from the subroutine into the caller, so the subroutine is allocatable free, it just uses automatic array; then one follows the same procedure in the caller to eliminate allocatable if possible)\n* [ ] labeled per block optimizations (https://gitlab.com/lfortran/lfortran/-/issues/551)\n* [ ] Floating point optimizaitons:\n  * [ ] `if (modulo(number, 2) == 1 ) x = -x` (https://gitlab.com/lfortran/lfortran/-/merge_requests/1612)\n  * [ ] `0.5_dp*sign(1._dp, x)` (https://gitlab.com/lfortran/lfortran/-/issues/651)\n  * [ ] `x/pi -> x*(1/pi)` (https://gitlab.com/lfortran/lfortran/-/issues/650)\n  * [ ] fma (https://gitlab.com/lfortran/lfortran/-/issues/649)\n  * [ ] `if (x>=0) then; r=x; else r=x-1; end if` -> `r = x-(x>>63)` (https://gitlab.com/lfortran/lfortran/-/issues/697)\n\nFor reference, here is a list of optimization passes that LLVM can do:\n\n* https://llvm.org/docs/Passes.html#transform-passes","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/358/timeline","performed_via_github_app":null,"state_reason":null}