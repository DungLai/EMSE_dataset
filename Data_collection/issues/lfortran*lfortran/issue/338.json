{"url":"https://api.github.com/repos/lfortran/lfortran/issues/338","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/338/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/338/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/338/events","html_url":"https://github.com/lfortran/lfortran/issues/338","id":1338726770,"node_id":"I_kwDOCpMuHc5Py1ly","number":338,"title":"Check pointers in Debug mode","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:05:06Z","updated_at":"2022-08-15T09:05:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/366\n\nIn Fortran a pointer can only point to a variable that has the `target` attribute. We should implement an option in Debug mode to check pointers to ensure they cannot segfault, here is how it would work:\n\n* Each pointer will have a flag `dangling`\n* Each time a pointer is dereferenced at runtime, we check the `dangling` flag, if true, we give a nice runtime error\n* Each target variable will have a list of pointers that point to it\n* Each time we associate a pointer with some target variable, we add the pointer to the target variable's list\n* Each time a target variable goes out of scope, we go over the list of pointers and set their `dangling` flag to true.\n\nThanks to the `target` attribute, the pointer list only has to be stored for those, and so the overhead should not be too large (and it's a Debug mode feature anyway).","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/338/timeline","performed_via_github_app":null,"state_reason":null}