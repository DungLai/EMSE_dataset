{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1043","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/1043/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/1043/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/1043/events","html_url":"https://github.com/lfortran/lfortran/issues/1043","id":1465337013,"node_id":"I_kwDOCpMuHc5XV0S1","number":1043,"title":"Incorrect operator precedence in multiple backends","user":{"login":"lucifer1004","id":13583761,"node_id":"MDQ6VXNlcjEzNTgzNzYx","avatar_url":"https://avatars.githubusercontent.com/u/13583761?v=4","gravatar_id":"","url":"https://api.github.com/users/lucifer1004","html_url":"https://github.com/lucifer1004","followers_url":"https://api.github.com/users/lucifer1004/followers","following_url":"https://api.github.com/users/lucifer1004/following{/other_user}","gists_url":"https://api.github.com/users/lucifer1004/gists{/gist_id}","starred_url":"https://api.github.com/users/lucifer1004/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lucifer1004/subscriptions","organizations_url":"https://api.github.com/users/lucifer1004/orgs","repos_url":"https://api.github.com/users/lucifer1004/repos","events_url":"https://api.github.com/users/lucifer1004/events{/privacy}","received_events_url":"https://api.github.com/users/lucifer1004/received_events","type":"User","site_admin":false},"labels":[{"id":4599927552,"node_id":"LA_kwDOCpMuHc8AAAABEi1TAA","url":"https://api.github.com/repos/lfortran/lfortran/labels/julia","name":"julia","color":"fef2c0","default":false,"description":"Julia backend"},{"id":4599928345,"node_id":"LA_kwDOCpMuHc8AAAABEi1WGQ","url":"https://api.github.com/repos/lfortran/lfortran/labels/c/cpp","name":"c/cpp","color":"6417C4","default":false,"description":"C & C++ backend"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-11-27T05:25:43Z","updated_at":"2022-12-04T08:45:25Z","closed_at":"2022-12-04T08:45:25Z","author_association":"MEMBER","active_lock_reason":null,"body":"Note: this is different from #1041. The output of the C backend is generated after #1042 is applied.\r\n\r\nInput:\r\n\r\n```fortran\r\nsubroutine s()\r\n   integer j1\r\n   real*8 pi0(10), pi1(10), amu(10), pii(10), rn\r\n   real*8 Y, QQSCA, QSCA, QQEXT, QEXT, QBACK, XBACK, GSCA\r\n\r\n   do j1=1,10\r\n      pi1(j1)=((2.0_8*rn+1.0_8)/(rn))*amu(j1)*pii(j1)-(rn+1.0_8)*pi0(j1)/rn\r\n      pi0(j1)=pii(j1)\r\n   end do\r\n\r\n   QQSCA=(2.0/(Y*Y))*QSCA\r\n   QQEXT=(2.0/(Y*Y))*QEXT\r\n   QBACK=(ABS(XBACK))**2\r\n   QBACK=(1.0/(Y*Y))*QBACK\r\n   GSCA=2.0*GSCA/QSCA\r\nend subroutine\r\n```\r\n\r\nAST output:\r\n\r\n```txt\r\n(TranslationUnit [(Subroutine s [] [] () () [] [] [] [(Declaration (AttrType TypeInteger [] () None) [] [(j1 [] [] () None ())] ()) (Declaration (AttrType TypeReal [(() 8 Value)] () None) [] [(pi0 [(1 10 DimensionExpr)] [] () None ()) (pi1 [(1 10 DimensionExpr)] [] () None ()) (amu [(1 10 DimensionExpr)] [] () None ()) (pii [(1 10 DimensionExpr)] [] () None ()) (rn [] [] () None ())] ()) (Declaration (AttrType TypeReal [(() 8 Value)] () None) [] [(Y [] [] () None ()) (QQSCA [] [] () None ()) (QSCA [] [] () None ()) (QQEXT [] [] () None ()) (QEXT [] [] () None ()) (QBACK [] [] () None ()) (XBACK [] [] () None ()) (GSCA [] [] () None ())] (TriviaNode [] [(EndOfLine) (EndOfLine)]))] [(DoLoop 0 () 0 j1 1 10 () [(= 0 (FuncCallOrArray pi1 [] [(() j1 ())] [] []) (- (* (* (/ (+ (* (Real \"2.0_8\") rn) (Real \"1.0_8\")) (Parenthesis rn)) (FuncCallOrArray amu [] [(() j1 ())] [] [])) (FuncCallOrArray pii [] [(() j1 ())] [] [])) (/ (* (+ rn (Real \"1.0_8\")) (FuncCallOrArray pi0 [] [(() j1 ())] [] [])) rn)) ()) (= 0 (FuncCallOrArray pi0 [] [(() j1 ())] [] []) (FuncCallOrArray pii [] [(() j1 ())] [] []) ())] () (TriviaNode [] [(EndOfLine) (EndOfLine)])) (= 0 QQSCA (* (/ (Real \"2.0\") (* Y Y)) QSCA) ()) (= 0 QQEXT (* (/ (Real \"2.0\") (* Y Y)) QEXT) ()) (= 0 QBACK (** (FuncCallOrArray ABS [] [(() XBACK ())] [] []) 2) ()) (= 0 QBACK (* (/ (Real \"1.0\") (* Y Y)) QBACK) ()) (= 0 GSCA (/ (* (Real \"2.0\") GSCA) QSCA) ())] [])])\r\n```\r\n\r\nASR Output:\r\n\r\n```txt\r\n(TranslationUnit (SymbolTable 1 {iso_c_binding: (IntrinsicModule lfortran_intrinsic_iso_c_binding), iso_fortran_env: (IntrinsicModule lfortran_intrinsic_iso_fortran_env), lfortran_intrinsic_builtin: (IntrinsicModule lfortran_intrinsic_builtin), lfortran_intrinsic_math: (IntrinsicModule lfortran_intrinsic_math), s: (Function (SymbolTable 2 {abs: (ExternalSymbol 2 abs 4 abs lfortran_intrinsic_math [] abs Private), abs@dabs: (ExternalSymbol 2 abs@dabs 4 dabs lfortran_intrinsic_math [] dabs Private), amu: (Variable 2 amu Local () () Default (Real 8 [((IntegerConstant 1 (Integer 4 [])) (IntegerConstant 10 (Integer 4 [])))]) Source Public Required .false.), gsca: (Variable 2 gsca Local () () Default (Real 8 []) Source Public Required .false.), j1: (Variable 2 j1 Local () () Default (Integer 4 []) Source Public Required .false.), pi0: (Variable 2 pi0 Local () () Default (Real 8 [((IntegerConstant 1 (Integer 4 [])) (IntegerConstant 10 (Integer 4 [])))]) Source Public Required .false.), pi1: (Variable 2 pi1 Local () () Default (Real 8 [((IntegerConstant 1 (Integer 4 [])) (IntegerConstant 10 (Integer 4 [])))]) Source Public Required .false.), pii: (Variable 2 pii Local () () Default (Real 8 [((IntegerConstant 1 (Integer 4 [])) (IntegerConstant 10 (Integer 4 [])))]) Source Public Required .false.), qback: (Variable 2 qback Local () () Default (Real 8 []) Source Public Required .false.), qext: (Variable 2 qext Local () () Default (Real 8 []) Source Public Required .false.), qqext: (Variable 2 qqext Local () () Default (Real 8 []) Source Public Required .false.), qqsca: (Variable 2 qqsca Local () () Default (Real 8 []) Source Public Required .false.), qsca: (Variable 2 qsca Local () () Default (Real 8 []) Source Public Required .false.), rn: (Variable 2 rn Local () () Default (Real 8 []) Source Public Required .false.), xback: (Variable 2 xback Local () () Default (Real 8 []) Source Public Required .false.), y: (Variable 2 y Local () () Default (Real 8 []) Source Public Required .false.)}) s [abs@dabs] [] [(DoLoop ((Var 2 j1) (IntegerConstant 1 (Integer 4 [])) (IntegerConstant 10 (Integer 4 [])) ()) [(= (ArrayItem (Var 2 pi1) [(() (Var 2 j1) ())] (Real 8 []) ColMajor ()) (RealBinOp (RealBinOp (RealBinOp (RealBinOp (RealBinOp (RealBinOp (RealConstant 2.000000 (Real 8 [])) Mul (Var 2 rn) (Real 8 []) ()) Add (RealConstant 1.000000 (Real 8 [])) (Real 8 []) ()) Div (Var 2 rn) (Real 8 []) ()) Mul (ArrayItem (Var 2 amu) [(() (Var 2 j1) ())] (Real 8 []) ColMajor ()) (Real 8 []) ()) Mul (ArrayItem (Var 2 pii) [(() (Var 2 j1) ())] (Real 8 []) ColMajor ()) (Real 8 []) ()) Sub (RealBinOp (RealBinOp (RealBinOp (Var 2 rn) Add (RealConstant 1.000000 (Real 8 [])) (Real 8 []) ()) Mul (ArrayItem (Var 2 pi0) [(() (Var 2 j1) ())] (Real 8 []) ColMajor ()) (Real 8 []) ()) Div (Var 2 rn) (Real 8 []) ()) (Real 8 []) ()) ()) (= (ArrayItem (Var 2 pi0) [(() (Var 2 j1) ())] (Real 8 []) ColMajor ()) (ArrayItem (Var 2 pii) [(() (Var 2 j1) ())] (Real 8 []) ColMajor ()) ())]) (= (Var 2 qqsca) (Cast (RealBinOp (RealBinOp (RealConstant 2.000000 (Real 4 [])) Div (Cast (RealBinOp (Var 2 y) Mul (Var 2 y) (Real 8 []) ()) RealToReal (Real 4 []) ()) (Real 4 []) ()) Mul (Cast (Var 2 qsca) RealToReal (Real 4 []) ()) (Real 4 []) ()) RealToReal (Real 8 []) ()) ()) (= (Var 2 qqext) (Cast (RealBinOp (RealBinOp (RealConstant 2.000000 (Real 4 [])) Div (Cast (RealBinOp (Var 2 y) Mul (Var 2 y) (Real 8 []) ()) RealToReal (Real 4 []) ()) (Real 4 []) ()) Mul (Cast (Var 2 qext) RealToReal (Real 4 []) ()) (Real 4 []) ()) RealToReal (Real 8 []) ()) ()) (= (Var 2 qback) (RealBinOp (FunctionCall 2 abs@dabs 2 abs [((Var 2 xback))] (Real 8 []) () ()) Pow (Cast (IntegerConstant 2 (Integer 4 [])) IntegerToReal (Real 8 []) (RealConstant 2.000000 (Real 8 []))) (Real 8 []) ()) ()) (= (Var 2 qback) (Cast (RealBinOp (RealBinOp (RealConstant 1.000000 (Real 4 [])) Div (Cast (RealBinOp (Var 2 y) Mul (Var 2 y) (Real 8 []) ()) RealToReal (Real 4 []) ()) (Real 4 []) ()) Mul (Cast (Var 2 qback) RealToReal (Real 4 []) ()) (Real 4 []) ()) RealToReal (Real 8 []) ()) ()) (= (Var 2 gsca) (Cast (RealBinOp (RealBinOp (RealConstant 2.000000 (Real 4 [])) Mul (Cast (Var 2 gsca) RealToReal (Real 4 []) ()) (Real 4 []) ()) Div (Cast (Var 2 qsca) RealToReal (Real 4 []) ()) (Real 4 []) ()) RealToReal (Real 8 []) ()) ())] () Source Public Implementation () .false. .false. .false. .false. .false. [] [] .false.)}) [])\r\n```\r\n\r\nC output:\r\n\r\n```c\r\nvoid s()\r\n{\r\n    struct r64 amu_value;\r\n    struct r64* amu = &amu_value;\r\n    double amu_data[10];\r\n    amu->data = amu_data;\r\n    amu->n_dims = 1;\r\n    amu->dims[0].lower_bound = 1;\r\n    amu->dims[0].length = 10;\r\n    double gsca;\r\n    int32_t j1;\r\n    struct r64 pi0_value;\r\n    struct r64* pi0 = &pi0_value;\r\n    double pi0_data[10];\r\n    pi0->data = pi0_data;\r\n    pi0->n_dims = 1;\r\n    pi0->dims[0].lower_bound = 1;\r\n    pi0->dims[0].length = 10;\r\n    struct r64 pi1_value;\r\n    struct r64* pi1 = &pi1_value;\r\n    double pi1_data[10];\r\n    pi1->data = pi1_data;\r\n    pi1->n_dims = 1;\r\n    pi1->dims[0].lower_bound = 1;\r\n    pi1->dims[0].length = 10;\r\n    struct r64 pii_value;\r\n    struct r64* pii = &pii_value;\r\n    double pii_data[10];\r\n    pii->data = pii_data;\r\n    pii->n_dims = 1;\r\n    pii->dims[0].lower_bound = 1;\r\n    pii->dims[0].length = 10;\r\n    double qback;\r\n    double qext;\r\n    double qqext;\r\n    double qqsca;\r\n    double qsca;\r\n    double rn;\r\n    double xback;\r\n    double y;\r\n    for (j1=1; j1<=10; j1++) {\r\n        pi1->data[(j1 - pi1->dims[0].lower_bound)] = (  2.00000000000000000e+00*rn +   1.00000000000000000e+00)/rn*amu->data[(j1 - amu->dims[0].lower_bound)]*pii->data[(j1 - pii->dims[0].lower_bound)] - (rn +   1.00000000000000000e+00)*pi0->data[(j1 - pi0->dims[0].lower_bound)]/rn;\r\n        pi0->data[(j1 - pi0->dims[0].lower_bound)] = pii->data[(j1 - pii->dims[0].lower_bound)];\r\n    }\r\n    qqsca =   2.00000000000000000e+00/y*y*qsca;\r\n    qqext =   2.00000000000000000e+00/y*y*qext;\r\n    qback = pow(dabs(xback), (double)(2));\r\n    qback =   1.00000000000000000e+00/y*y*qback;\r\n    gsca =   2.00000000000000000e+00*gsca/qsca;\r\n}\r\n```\r\n\r\nC++ output (N/A, `code generation error: Intrinsic function 'char' not implemented`)\r\n\r\nJulia output:\r\n\r\n```julia\r\nfunction s()\r\n    local amu = Array{Float64, 1}(undef, 10)\r\n    local gsca::Float64 = 0.0\r\n    local j1::Int32 = 0\r\n    local pi0 = Array{Float64, 1}(undef, 10)\r\n    local pi1 = Array{Float64, 1}(undef, 10)\r\n    local pii = Array{Float64, 1}(undef, 10)\r\n    local qback::Float64 = 0.0\r\n    local qext::Float64 = 0.0\r\n    local qqext::Float64 = 0.0\r\n    local qqsca::Float64 = 0.0\r\n    local qsca::Float64 = 0.0\r\n    local rn::Float64 = 0.0\r\n    local xback::Float64 = 0.0\r\n    local y::Float64 = 0.0\r\n    for j1 ∈ 1:10\r\n        pi1[j1] = (  2.00000000000000000e+00 * rn +   1.00000000000000000e+00) / rn * amu[j1] * pii[j1] - (rn +   1.00000000000000000e+00) * pi0[j1] / rn\r\n        pi0[j1] = pii[j1]\r\n    end\r\n    qqsca =   2.00000000000000000e+00 / y * y * qsca\r\n    qqext =   2.00000000000000000e+00 / y * y * qext\r\n    qback = dabs(xback) ^ Float64(2)\r\n    qback =   1.00000000000000000e+00 / y * y * qback\r\n    gsca =   2.00000000000000000e+00 * gsca / qsca\r\nend\r\n```","closed_by":{"login":"lucifer1004","id":13583761,"node_id":"MDQ6VXNlcjEzNTgzNzYx","avatar_url":"https://avatars.githubusercontent.com/u/13583761?v=4","gravatar_id":"","url":"https://api.github.com/users/lucifer1004","html_url":"https://github.com/lucifer1004","followers_url":"https://api.github.com/users/lucifer1004/followers","following_url":"https://api.github.com/users/lucifer1004/following{/other_user}","gists_url":"https://api.github.com/users/lucifer1004/gists{/gist_id}","starred_url":"https://api.github.com/users/lucifer1004/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lucifer1004/subscriptions","organizations_url":"https://api.github.com/users/lucifer1004/orgs","repos_url":"https://api.github.com/users/lucifer1004/repos","events_url":"https://api.github.com/users/lucifer1004/events{/privacy}","received_events_url":"https://api.github.com/users/lucifer1004/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/1043/timeline","performed_via_github_app":null,"state_reason":"completed"}