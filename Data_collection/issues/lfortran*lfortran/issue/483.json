{"url":"https://api.github.com/repos/lfortran/lfortran/issues/483","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/483/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/483/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/483/events","html_url":"https://github.com/lfortran/lfortran/issues/483","id":1338779119,"node_id":"I_kwDOCpMuHc5PzCXv","number":483,"title":"infinite loop and random_number needed to compile normal variate generator of Alan Miller","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:55:52Z","updated_at":"2022-08-15T09:55:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/632\n\n```\n(base) /mnt/c/fortran/test$ cat random_normal_scalar.f90\nfunction random_normal_scalar() result(fn_val)\n! adapted from code by Alan Miller at https://jblevins.org/mirror/amiller/ran_norm.f90\nreal :: fn_val\n!     local variables\nreal :: u, v, x, y, q\n!     generate p = (u,v) uniform in rectangle enclosing acceptance region\ndo\n  call random_number(u)\n  call random_number(v)\n  v = 1.7156 * (v - half)\n!     evaluate the quadratic form\n  x = u - s\n  y = abs(v) - t\n  q = x**2 + y*(a*y - b*x)\n!     accept p if inside inner ellipse\n  if (q < r1) exit\n!     reject p if outside outer ellipse\n  if (q > r2) cycle\n!     reject p if outside acceptance region\n  if (v**2 < -4.0*log(u)*u**2) exit\nend do\n!     return ratio of p's coordinates as the normal deviate\nfn_val = v/u\nend function random_normal_scalar\n```\n\n```\nlfortran -c random_normal_scalar.f90\nsemantic error: Do loop: loop variable is required for now\n  --> random_normal_scalar.f90:7:1 - 21:6\n   |\n 7 |    do\n   |    ^^^...\n...\n   |\n21 |    end do\n   | ...^^^^^^ \n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/483/timeline","performed_via_github_app":null,"state_reason":null}