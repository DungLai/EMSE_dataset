{"url":"https://api.github.com/repos/lfortran/lfortran/issues/286","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/286/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/286/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/286/events","html_url":"https://github.com/lfortran/lfortran/issues/286","id":1338692514,"node_id":"I_kwDOCpMuHc5PytOi","number":286,"title":"Figure out how to handle complex numbers with MSVC","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:26:52Z","updated_at":"2022-08-15T08:26:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/248\n\nCurrently we use our own complex struct in MSVC:\n\nhttps://gitlab.com/lfortran/lfortran/-/blob/5494d949c9b22e520424ba7319ac14e71a986054/src/runtime/lfort_intrinsics.c#L10\n\nWhich means we cannot use the C `sin` for such a complex type:\n\nhttps://gitlab.com/lfortran/lfortran/-/blob/5494d949c9b22e520424ba7319ac14e71a986054/src/runtime/lfort_intrinsics.c#L70\n\nQuestions to figure out:\n\n* Is there a way to use the C's instrinsic functions such as `sin`, `cos` with complex arguments in MSVC?\n* If not, what is the best way forward for MSVC?\n* One alternative seems to be to move to C++, but that would introduce a dependency on the C++ runtime for the Fortran runtime. I am hoping to avoid that, so that LFortran compiled programs do not depend on C++ in any way. \n* One solution could be to use C for Linux / macOS, and C++ for MSVC if there is no other way.\n* Another idea is to simply link `openlibm` or `libpgmath` both of which are written in C and do not use the C's instrinsic function\n* Another idea is to use C's instrinsic `sin`, but only use the real version to implement a complex version using math formulas for MSVC","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/286/timeline","performed_via_github_app":null,"state_reason":null}