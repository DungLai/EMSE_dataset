{"url":"https://api.github.com/repos/lfortran/lfortran/issues/226","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/226/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/226/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/226/events","html_url":"https://github.com/lfortran/lfortran/issues/226","id":1338686353,"node_id":"I_kwDOCpMuHc5PyruR","number":226,"title":"Implement embed() feature","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:20:48Z","updated_at":"2022-08-15T08:20:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/128\n\nIt would work exactly like `IPython.embed()`. In Fortran it would be used like:\n```fortran\nuse lfortran, only: embed\n...\ncall embed()\n```\nand LFortran will compile the code to an executable that one can execute and when the execution enters the `embed()` function, an interactive LFortran prompt will show and allow to interactively execute any Fortran code, it will see all the local and global variables, can print arrays, etc.\n\nThis feature is very useful for:\n\n* general debugging\n* to figure out how to write a test for some new functionality (one interactively figures out what array statistic would make sense to test in the interactive prompt, and then one can test for this in the test)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/226/timeline","performed_via_github_app":null,"state_reason":null}