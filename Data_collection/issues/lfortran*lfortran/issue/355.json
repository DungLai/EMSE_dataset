{"url":"https://api.github.com/repos/lfortran/lfortran/issues/355","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/355/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/355/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/355/events","html_url":"https://github.com/lfortran/lfortran/issues/355","id":1338729485,"node_id":"I_kwDOCpMuHc5Py2QN","number":355,"title":"`size()` not handled correctly for Arrays","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:06:46Z","updated_at":"2022-08-15T09:06:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/416\n\n'- Reference Document -- J3/21-007 (Draft Fortran 202x)\n\nAs noted in https://gitlab.com/lfortran/lfortran/-/issues/400 by Ondrej and in https://gitlab.com/lfortran/lfortran/-/issues/401, the following minimum example can be used:\n\n```fortran\nmodule A\n\ncontains\n\nsubroutine f(x)\ninteger, intent(in) :: x(:)\nreal :: E(size(x))\nE = x\nend subroutine\n\nend module\n```\n\nThe standard is a little hard to narrow down for this behaviour, and am happy to have a more concrete reference; however the expected behaviour is clear, it should take the size of `x` and thus should be handled at the ASR level since `lfortran` has concrete ASR representations in modules.\n\n- *:* is R823 (deferred shape)\n- *size* is an intrinsic inquiry function defined at 16.9.192 with `SIZE (ARRAY [, DIM, KIND])`\n- [@ nncarlson](https://gitlab.com/nncarlson) pointed out that this is a **specification expression** defined in 10.1.11\n![image](/uploads/6b47d5fa06e2aaac70c7986cb0ffc14a/image.png)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/355/timeline","performed_via_github_app":null,"state_reason":null}