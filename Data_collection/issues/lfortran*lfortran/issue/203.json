{"url":"https://api.github.com/repos/lfortran/lfortran/issues/203","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/203/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/203/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/203/events","html_url":"https://github.com/lfortran/lfortran/issues/203","id":1338684274,"node_id":"I_kwDOCpMuHc5PyrNy","number":203,"title":"Document what subset of Fortran is currently supported","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:18:40Z","updated_at":"2022-08-15T08:18:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/92\n\nMultiple people asked us to document what subset is currently supported. I think the best way to do that would be to use Jupyter notebooks to document and show examples of what works. The documentation would look similarly to https://docs.lfortran.org/developer_tutorial/, which is also powered by a Jupyter notebook. \n\nFor each Fortran feature, there will be 3 parts: AST, ASR and LLVM code / interactive usage. The notebooks should probably be Fortran notebooks, and\none would use %%show_ast, %%show_asr and just regular compilation.\n\nSomething like this:\n```\n%%show_ast\ninteger :: i\ni = 5 + 1\ni\n```\nand\n```\n%%show_asr\ninteger :: i\ni = 5 + 1\n```\nand\n```\ninteger :: i\ni = 5 + 1\ni\n```\nSome features will only have an AST, but ASR and LLVM doesn't work yet, some features will have AST and ASR, and finally some features will have all three AST, ASR and LLVM.\n\nThat way when we first implement some feature in the parser, we can add it in as AST only. Then we implement semantics, so we add the ASR section. Finally, when we implement it in the code generation backend, we add the last section.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/203/timeline","performed_via_github_app":null,"state_reason":null}