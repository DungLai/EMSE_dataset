{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1000","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/1000/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/1000/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/1000/events","html_url":"https://github.com/lfortran/lfortran/issues/1000","id":1440817479,"node_id":"I_kwDOCpMuHc5V4SFH","number":1000,"title":"Intrinsics missing, lfortran object code and C main program [Cpp bakcend][--generate-object-code]","user":{"login":"meow464","id":70211708,"node_id":"MDQ6VXNlcjcwMjExNzA4","avatar_url":"https://avatars.githubusercontent.com/u/70211708?v=4","gravatar_id":"","url":"https://api.github.com/users/meow464","html_url":"https://github.com/meow464","followers_url":"https://api.github.com/users/meow464/followers","following_url":"https://api.github.com/users/meow464/following{/other_user}","gists_url":"https://api.github.com/users/meow464/gists{/gist_id}","starred_url":"https://api.github.com/users/meow464/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meow464/subscriptions","organizations_url":"https://api.github.com/users/meow464/orgs","repos_url":"https://api.github.com/users/meow464/repos","events_url":"https://api.github.com/users/meow464/events{/privacy}","received_events_url":"https://api.github.com/users/meow464/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-11-08T19:56:31Z","updated_at":"2022-11-10T03:59:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<details>\r\n<summary>\r\nget_abs.f90\r\n</summary>\r\n\r\n```\r\nmodule my_module\r\n  use iso_c_binding, only: c_int\r\n\r\n  implicit none\r\n\r\ncontains\r\n\r\n  subroutine get_abs(x, y) bind(c)\r\n    integer(c_int), intent(in) :: x\r\n    integer(c_int), intent(out) :: y\r\n    y = abs(x)\r\n  end subroutine get_abs\r\n\r\nend module my_module\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>\r\nmain.f90\r\n</summary>\r\n\r\n```\r\nprogram main\r\n  use my_module, only: get_abs\r\n  use iso_c_binding, only: c_int\r\n\r\n  integer(c_int) :: res\r\n\r\n  call get_abs(-10, res)\r\n  \r\n  print *, res\r\nend program main\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>\r\nmain.c\r\n</summary>\r\n\r\n```\r\n#include \"stdio.h\"\r\n\r\nvoid get_abs(int, int*);\r\n\r\nint main() {\r\n    int a = -5;\r\n    int b = 0;\r\n\r\n    get_abs(a, &b);\r\n\r\n    printf(\"The result is %d\\n\", b);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n</details>\r\n\r\nWith lfortarn we would compile as follows:\r\n\r\n```\r\nlfortran -c --generate-object-code get_abs.f90\r\nlfortran main.f90 get_abs.o\r\n10\r\n``` \r\n\r\nAs expected.\r\n\r\nBut with gcc:\r\n```\r\ngcc main.c get_abs.o \r\n/usr/bin/ld: get_abs.o: in function `get_abs':\r\nLFortran:(.text+0x5): undefined reference to `__module_lfortran_intrinsic_math_iabs'\r\ncollect2: error: ld returned 1 exit status\r\n```\r\n\r\nThe problem is that `__module_lfortran_intrinsic_math_iabs` is only included in the final linking step and totally skipped when we use `-c --generate-object-code`.\r\n\r\nHypothesis: we could generate .o files for  `lfortran_instrinsic_*.mod` and add them to `liblfortran_runtime_static.a`.\r\n\r\nI'm open to suggestions.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/1000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/1000/timeline","performed_via_github_app":null,"state_reason":null}