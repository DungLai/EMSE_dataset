{"url":"https://api.github.com/repos/lfortran/lfortran/issues/540","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/540/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/540/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/540/events","html_url":"https://github.com/lfortran/lfortran/issues/540","id":1338783777,"node_id":"I_kwDOCpMuHc5PzDgh","number":540,"title":"GSoC 2022: Implementing custom WASM Backend for LFortran Roadmap","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-15T10:01:15Z","updated_at":"2022-09-05T18:38:10Z","closed_at":"2022-08-24T15:21:05Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/700\r\n\r\n- [x] Initial `wasm->wat` backend (https://gitlab.com/lfortran/lfortran/-/merge_requests/1757)\r\n- [x] Setting up testing infrastructure (https://gitlab.com/lfortran/lfortran/-/merge_requests/1760)\r\n- [x] Enable LLVM based WASM backend in LFortran (https://gitlab.com/lfortran/lfortran/-/merge_requests/1769 , https://gitlab.com/lfortran/lfortran/-/merge_requests/1768 )\r\n- [x] Compile (LFortran + wasm backend) to wasm\r\n    - [x] compile essential components to wasm (https://gitlab.com/lfortran/lfortran/-/merge_requests/1796)\r\n    - [x] support runtime library (https://github.com/lfortran/lfortran/issues/555)\r\n- [x] Setup a demo page at [lfortran.org](https://lfortran.org/) that hosts LFortran and compiles Fortran and runs in the browser\r\n    - [x] build a basic frontend ([repo](https://github.com/Shaikh-Ubaid/lcompilers_frontend))\r\n    - [x] deploy to [dev.lfortran.org](https://dev.lfortran.org/) (https://github.com/lfortran/lcompilers_frontend)\r\n- [x] Implement CI testing\r\n    - [x] https://gitlab.com/lfortran/lfortran/-/issues/711 (https://gitlab.com/lfortran/lfortran/-/merge_requests/1794)\r\n    - [x] https://gitlab.com/lfortran/lfortran/-/issues/712 (https://gitlab.com/lfortran/lfortran/-/merge_requests/1797, https://gitlab.com/lfortran/lfortran/-/merge_requests/1808)\r\n    - [x] install `node`/`emscripten` at `CI` (https://github.com/lfortran/lfortran/pull/157)\r\n- [x] Add support for 32-bit and 64-bit integer numbers and operations between them:\r\n    - [x] support for constants/literals (https://gitlab.com/lfortran/lfortran/-/merge_requests/1789)    \r\n    - unary operators \r\n        - [x] unary minus (https://gitlab.com/lfortran/lfortran/-/merge_requests/1791)\r\n    - arithmetic operators \r\n        - [x] basic (Add, Sub, Mul, Div) (https://gitlab.com/lfortran/lfortran/-/merge_requests/1762)\r\n        - [x] pow operation (for x**2) (https://github.com/lfortran/lfortran/pull/118)\r\n        - [x] modulo operator (https://gitlab.com/lfortran/lfortran/-/merge_requests/1834)\r\n    - [x] relational operators (https://gitlab.com/lfortran/lfortran/-/merge_requests/1823)\r\n    - [x] logical operators (https://gitlab.com/lfortran/lfortran/-/merge_requests/1824)\r\n- [x] Add support for 32-bit and 64-bit floating point numbers and operations between them\r\n    - [x] support for constants/literals (https://gitlab.com/lfortran/lfortran/-/merge_requests/1792)\r\n    - unary operators\r\n        - [x] unary minus (https://gitlab.com/lfortran/lfortran/-/merge_requests/1792)\r\n    - arithmetic operators\r\n        - [x] basic (Add, Sub, Mul, Div) (https://gitlab.com/lfortran/lfortran/-/merge_requests/1792)\r\n        - [x] pow operation (x**2.0) (https://github.com/lfortran/lfortran/pull/118)\r\n    - [x] relational operators (https://gitlab.com/lfortran/lfortran/-/merge_requests/1823)\r\n    - [x] modulo operator (https://gitlab.com/lfortran/lfortran/-/merge_requests/1834)\r\n- [x] Wrap program statements (global statements) into a function (lets say `_main` or `main_`) (first commit of https://gitlab.com/lfortran/lfortran/-/merge_requests/1794)\r\n- Add support for if-else blocks in the wasm backend\r\n    - [x] basic support (https://gitlab.com/lfortran/lfortran/-/merge_requests/1809)\r\n    - [x] extended support (https://gitlab.com/lfortran/lfortran/-/merge_requests/1823, https://gitlab.com/lfortran/lfortran/-/merge_requests/1824)\r\n- [x] Add support for loops in the wasm backend\r\n    - [x] basic support (https://gitlab.com/lfortran/lfortran/-/merge_requests/1830)\r\n    - [x] support for cycle (https://gitlab.com/lfortran/lfortran/-/merge_requests/1830)\r\n    - [x] support for break (https://gitlab.com/lfortran/lfortran/-/merge_requests/1830)\r\n- [x] Add support for functions and subroutines\r\n    - [x] basic support and function calls\r\n    - [x] support declaring functions in any order (https://github.com/lfortran/lfortran/pull/635)   \r\n- Miscellaneous\r\n    - [x] support variable initialisation at declaration (https://gitlab.com/lfortran/lfortran/-/merge_requests/1834)\r\n- [x] Add support for casting/type-conversion (https://gitlab.com/lfortran/lfortran/-/merge_requests/1822)\r\n- [x] Add support for strings\r\n    - [x] Basic support (https://github.com/lfortran/lfortran/pull/640) \r\n- [x] Add support for arrays\r\n    - [x] Initial Support (#49 #55)\r\n    - [x] `real` and `logical` types support (#66)\r\n    - [x] compile-time multi-dimensional arrays (#70, #99, #109) \r\n- [x] Add some demo, say some image processing/mandelbrot, show the result in canvas on the demo page ([dev.lfortran.org](https://dev.lfortran.org/))","closed_by":{"login":"Shaikh-Ubaid","id":43722035,"node_id":"MDQ6VXNlcjQzNzIyMDM1","avatar_url":"https://avatars.githubusercontent.com/u/43722035?v=4","gravatar_id":"","url":"https://api.github.com/users/Shaikh-Ubaid","html_url":"https://github.com/Shaikh-Ubaid","followers_url":"https://api.github.com/users/Shaikh-Ubaid/followers","following_url":"https://api.github.com/users/Shaikh-Ubaid/following{/other_user}","gists_url":"https://api.github.com/users/Shaikh-Ubaid/gists{/gist_id}","starred_url":"https://api.github.com/users/Shaikh-Ubaid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shaikh-Ubaid/subscriptions","organizations_url":"https://api.github.com/users/Shaikh-Ubaid/orgs","repos_url":"https://api.github.com/users/Shaikh-Ubaid/repos","events_url":"https://api.github.com/users/Shaikh-Ubaid/events{/privacy}","received_events_url":"https://api.github.com/users/Shaikh-Ubaid/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/540/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/540/timeline","performed_via_github_app":null,"state_reason":"completed"}