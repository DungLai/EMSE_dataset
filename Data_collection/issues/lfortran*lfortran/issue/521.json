{"url":"https://api.github.com/repos/lfortran/lfortran/issues/521","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/521/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/521/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/521/events","html_url":"https://github.com/lfortran/lfortran/issues/521","id":1338782171,"node_id":"I_kwDOCpMuHc5PzDHb","number":521,"title":"Dependency between symbols belonging to the same `SymbolTable`","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:59:27Z","updated_at":"2022-08-15T09:59:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/678\n\n**Code**\n\nFile - **debug.f90**\n\n```fortran\nmodule string_module\nimplicit none\n  type :: string_type\n    sequence\n    private\n    character(len=:), allocatable :: raw\n  end type string_type\n\n  interface string_type\n      pure elemental module function new_string(string) result(new)\n          character(len=*), intent(in), optional :: string\n          type(string_type) :: new\n      end function new_string\n      pure elemental module function new_string_from_integer_int8(val) result(new)\n          integer(1), intent(in) :: val\n          type(string_type) :: new\n      end function new_string_from_integer_int8\n      pure elemental module function new_string_from_integer_int16(val) result(new)\n          integer(2), intent(in) :: val\n          type(string_type) :: new\n      end function new_string_from_integer_int16\n      pure elemental module function new_string_from_integer_int32(val) result(new)\n          integer(4), intent(in) :: val\n          type(string_type) :: new\n      end function new_string_from_integer_int32\n      pure elemental module function new_string_from_integer_int64(val) result(new)\n          integer(8), intent(in) :: val\n          type(string_type) :: new\n      end function new_string_from_integer_int64\n      pure elemental module function new_string_from_logical_lk(val) result(new)\n          logical(4), intent(in) :: val\n          type(string_type) :: new\n      end function new_string_from_logical_lk\n      pure elemental module function new_string_from_logical_c_bool(val) result(new)\n          logical(4), intent(in) :: val\n          type(string_type) :: new\n      end function new_string_from_logical_c_bool\n  end interface string_type\n\n  interface assignment(=)\n    module procedure :: assign_char_to_string\n  end interface assignment(=)\n\ncontains\n\n  elemental subroutine assign_char_to_string(lhs, rhs)\n    type(string_type), intent(inout) :: lhs\n    character(len=*), intent(in) :: rhs\n    lhs%raw = rhs\n  end subroutine assign_char_to_string\n\n  elemental function len_string(string) result(length)\n          type(string_type), intent(in) :: string\n          integer :: length\n\n          if (allocated(string%raw)) then\n              length = len(string%raw)\n          else\n              length = 0\n          end if\n\n  end function len_string\n\n  elemental function adjustl_string(string) result(adjusted_string)\n    type(string_type), intent(in) :: string\n    type(string_type) :: adjusted_string\n\n    adjusted_string%raw = adjustl(maybe(string))\n\n  end function adjustl_string\n\n  pure function maybe(a) result(maybe_string)\n        type(string_type), intent(in) :: a\n        character(len=len_string(a)) :: maybe_string\n        if (allocated(a%raw)) then\n            maybe_string = a%raw\n        else\n            maybe_string = ''\n        end if\n  end function maybe\n\nend module\n```\n\nFile - **debug_1.f90**\n\n```fortran\nprogram debug\nuse string_module\nimplicit none\nend program\n```\n\n**Commands**\n\n```bash\nlfortran -c debug.f90\nlfortran --show-asr debug_1.f90\n```\n\n**Failure Traceback**\n\n```cpp\nInternal Compiler Error: Unhandled exception\nTraceback (most recent call last):\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/bin/lfortran.cpp\", line 1462\n    return emit_asr(arg_file, passes,\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/bin/lfortran.cpp\", line 548\n    r = fe.get_asr2(input, lm, diagnostics);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/fortran_evaluator.cpp\", line 218\n    Result<ASR::TranslationUnit_t*> res2 = get_asr3(*ast, diagnostics);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/fortran_evaluator.cpp\", line 240\n    compiler_options.symtab_only);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/semantics/ast_to_asr.cpp\", line 36\n    auto res = symbol_table_visitor(al, ast, diagnostics, symbol_table);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 1652\n    SymbolTableVisitor v(al, symbol_table, diagnostics);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 133\n    visit_ast(*x.m_items[i]);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/ast.h\", line 4595\n    void visit_ast(const ast_t &b) { visit_ast_t(b, self()); }\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/ast.h\", line 4553\n    case astType::unit: { v.visit_unit((const unit_t &)x); return; }\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/ast.h\", line 4598\n    void visit_mod(const mod_t &b) { visit_mod_t(b, self()); }\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/ast.h\", line 4209\n    case modType::BlockData: { v.visit_BlockData((const BlockData_t &)x); return; }\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 219\n    visit_unit_decl1(*x.m_use[i]);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/ast.h\", line 4607\n    void visit_unit_decl1(const unit_decl1_t &b) { visit_unit_decl1_t(b, self()); }\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/ast.h\", line 4228\n    case unit_decl1Type::Use: { v.visit_Use((const Use_t &)x); return; }\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/semantics/ast_symboltable_visitor.cpp\", line 1449\n    t = (ASR::symbol_t*)(ASRUtils::load_module(al, current_scope->parent,\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/libasr/asr_utils.cpp\", line 92\n    *symtab, intrinsic, rl_path);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/libasr/asr_utils.cpp\", line 228\n    ASR::TranslationUnit_t *asr = load_modfile(al, modfile, false,\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/libasr/modfile.cpp\", line 76\n    ASR::asr_t *asr = deserialize_asr(al, asr_binary, load_symtab_id, symtab);\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/ast_serialization.cpp\", line 308\n    Line not found\n  File \"../libasr/asr.h\", line 9331\n  File \"../libasr/asr.h\", line 9373\n  File \"../libasr/asr.h\", line 9353\n  File \"../libasr/asr.h\", line 9712\n  File \"../libasr/asr.h\", line 9423\n  File \"../libasr/asr.h\", line 9714\n  File \"../libasr/asr.h\", line 9518\n  File \"../libasr/asr.h\", line 10495\n  File \"../libasr/asr.h\", line 9792\n  File \"../libasr/asr.h\", line 10986\n  File \"../libasr/asr.h\", line 10692\n  File \"../libasr/asr.h\", line 11280\n  File \"../libasr/asr.h\", line 10986\n  File \"../libasr/asr.h\", line 10695\n  File \"../libasr/asr.h\", line 11161\n  File \"../libasr/asr.h\", line 11056\n  File \"../libasr/asr.h\", line 10986\n  File \"../libasr/asr.h\", line 10692\n  File \"../libasr/asr.h\", line 11280\n  File \"../libasr/asr.h\", line 10999\n  File \"../libasr/asr.h\", line 10893\n  File \"/Users/czgdp1807/lfortran_project/lfortran/src/lfortran/ast_serialization.cpp\", line 107\n    Line not found\nAssertFailed: id_symtab_map.find(symtab_id) != id_symtab_map.end()\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/521/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/521/timeline","performed_via_github_app":null,"state_reason":null}