{"url":"https://api.github.com/repos/lfortran/lfortran/issues/243","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/243/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/243/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/243/events","html_url":"https://github.com/lfortran/lfortran/issues/243","id":1338687611,"node_id":"I_kwDOCpMuHc5PysB7","number":243,"title":"Have a \"modern Fortran\" mode","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T08:22:04Z","updated_at":"2022-08-15T08:22:04Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/148\n\nIn this mode, the compiler only supports an opinionated subset of Fortran, that most people agree is the \"blessed modern Fortran\". Some of the things that this mode will do:\n\n* implicit typing is not allowed and it will refuse to compile code that is implicitly typed.\n* implied save is not allowed (`integer :: x = 5`), one must use explicit save (`integer, save :: x = 5`).\n...\n\nI wanted to have such a mode, and it was independently requested here: https://github.com/j3-fortran/fortran_proposals/issues/90#issuecomment-554697743, so I just created an issue for it.\n\n(This might even be the default, but that's for another discussion. First it will available as a compiler option.)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/243/timeline","performed_via_github_app":null,"state_reason":null}