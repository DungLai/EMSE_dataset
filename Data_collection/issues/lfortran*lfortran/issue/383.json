{"url":"https://api.github.com/repos/lfortran/lfortran/issues/383","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/383/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/383/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/383/events","html_url":"https://github.com/lfortran/lfortran/issues/383","id":1338732651,"node_id":"I_kwDOCpMuHc5Py3Br","number":383,"title":"fmt: `contains` loses comment","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-15T09:09:30Z","updated_at":"2022-08-15T09:09:30Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"*Original issue*: https://gitlab.com/lfortran/lfortran/-/issues/496\n\nThis comment currently gets lost:\n```fortran\nprogram expr2\nimplicit none\n\ninteger :: x\n\nx = (2+3)*5\nprint *, x\n\ncontains\n\n    ! Some subroutine (comment gets lost)\n    subroutine f()\n    end subroutine\n\nend program\n```\nHere is how we can preserve it:\n```diff\ndiff --git a/grammar/AST.asdl b/grammar/AST.asdl\nindex 67e546ca..bc527c6e 100644\n--- a/grammar/AST.asdl\n+++ b/grammar/AST.asdl\n@@ -209,7 +209,7 @@ expr\n \n \n trivia\n-    = TriviaNode(trivia_node* inside, trivia_node* after)\n+    = TriviaNode(trivia_node* inside, trivia_node* inside2, trivia_node* after)\n \n trivia_node\n     = Comment(string comment)\n```\nThere are other ways, but the above change might be the simplest. Then in the parser we have to modify this part:\n```bison\ncontains_block_opt\n    : KW_CONTAINS sep sub_or_func_plus { $$ = $3; }\n    | KW_CONTAINS sep { LIST_NEW($$); }\n    | %empty { LIST_NEW($$); }\n    ;                     \n```\nTo save the `sep` and somehow propagate it up. We might need to create a new type in `YYSTYPE` just for that, something like:\n```c++\nstruct ContainsBlock {\n    Vec<AST::trivia_node_t*> vec_trivia_node;\n    Vec<AST::ast_t*> vec_ast;\n};\n\nunion YYSTYPE {\n    ...\n    ContainsBlock *contains_block;\n    ...\n}\n```\nthat way we can save both the AST list as well as the trivia, and then set it in the `program`, `module`, `function`, ...","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/383/timeline","performed_via_github_app":null,"state_reason":null}