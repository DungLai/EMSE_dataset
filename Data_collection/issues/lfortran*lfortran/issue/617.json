{"url":"https://api.github.com/repos/lfortran/lfortran/issues/617","repository_url":"https://api.github.com/repos/lfortran/lfortran","labels_url":"https://api.github.com/repos/lfortran/lfortran/issues/617/labels{/name}","comments_url":"https://api.github.com/repos/lfortran/lfortran/issues/617/comments","events_url":"https://api.github.com/repos/lfortran/lfortran/issues/617/events","html_url":"https://github.com/lfortran/lfortran/issues/617","id":1342142774,"node_id":"I_kwDOCpMuHc5P_3k2","number":617,"title":"Accessing an array from another module fails","user":{"login":"certik","id":20568,"node_id":"MDQ6VXNlcjIwNTY4","avatar_url":"https://avatars.githubusercontent.com/u/20568?v=4","gravatar_id":"","url":"https://api.github.com/users/certik","html_url":"https://github.com/certik","followers_url":"https://api.github.com/users/certik/followers","following_url":"https://api.github.com/users/certik/following{/other_user}","gists_url":"https://api.github.com/users/certik/gists{/gist_id}","starred_url":"https://api.github.com/users/certik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/certik/subscriptions","organizations_url":"https://api.github.com/users/certik/orgs","repos_url":"https://api.github.com/users/certik/repos","events_url":"https://api.github.com/users/certik/events{/privacy}","received_events_url":"https://api.github.com/users/certik/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-17T18:44:14Z","updated_at":"2022-08-17T19:04:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Here is a minimal example:\r\n```fortran\r\nmodule b\r\ninteger, parameter :: real_kinds(2) = [4, 8]\r\nend module\r\n\r\nprogram a\r\nuse b, only: real_kinds\r\nprint *, real_kinds(1)\r\nend program a\r\n```\r\nThis gives:\r\n```console\r\n$ lfortran b.f90 \r\nInternal Compiler Error: Unhandled exception\r\nTraceback (most recent call last):\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/bin/lfortran.cpp\", line 1724\r\n    err = compile_to_object_file(arg_file, tmp_o, false,\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/bin/lfortran.cpp\", line 743\r\n    res = fe.get_llvm3(*asr, lpm, diagnostics);\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/lfortran/fortran_evaluator.cpp\", line 318\r\n    compiler_options.platform, run_fn);\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 5352\r\n    v.nested_func_types = pass_find_nested_vars(asr, context,\r\n  File \"../libasr/asr.h\", line 3728\r\n  File \"../libasr/asr.h\", line 3706\r\n  File \"../libasr/asr.h\", line 3729\r\n  File \"../libasr/asr.h\", line 3505\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 1065\r\n    visit_symbol(*item.second);\r\n  File \"../libasr/asr.h\", line 3731\r\n  File \"../libasr/asr.h\", line 3514\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 1673\r\n    this->visit_stmt(*x.m_body[i]);\r\n  File \"../libasr/asr.h\", line 3744\r\n  File \"../libasr/asr.h\", line 3548\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 4486\r\n    handle_print(x);\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 4536\r\n    this->visit_expr_wrapper(x.m_values[i], true);\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 3070\r\n    this->visit_expr(*x);\r\n  File \"../libasr/asr.h\", line 3786\r\n  File \"../libasr/asr.h\", line 3625\r\n  File \"/Users/ondrej/repos/lfortran/lfortran/src/libasr/codegen/asr_to_llvm.cpp\", line 1302\r\n    LFORTRAN_ASSERT(llvm_symtab.find(v_h) != llvm_symtab.end());\r\nAssertFailed: llvm_symtab.find(v_h) != llvm_symtab.end()\r\n```\r\nThe issue is this part of the code:\r\n```c++\r\n        if( ASR::is_a<ASR::Var_t>(*x.m_v) ) {\r\n            ASR::Variable_t *v = ASRUtils::EXPR2VAR(x.m_v);\r\n            if( ASR::is_a<ASR::Derived_t>(*v->m_type) ) {\r\n                ASR::Derived_t* der_type = ASR::down_cast<ASR::Derived_t>(v->m_type);\r\n                der_type_name = ASRUtils::symbol_name(ASRUtils::symbol_get_past_external(der_type->m_derived_type));\r\n            }\r\n            uint32_t v_h = get_hash((ASR::asr_t*)v);\r\n            LFORTRAN_ASSERT(llvm_symtab.find(v_h) != llvm_symtab.end());\r\n            array = llvm_symtab[v_h];\r\n            is_argument = (v->m_intent == ASRUtils::intent_in)\r\n                 || (v->m_intent == ASRUtils::intent_out)\r\n                 || (v->m_intent == ASRUtils::intent_inout)\r\n                 || (v->m_intent == ASRUtils::intent_unspecified);\r\n```\r\nThe array does not seem to be generated in LLVM first.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/lfortran/lfortran/issues/617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lfortran/lfortran/issues/617/timeline","performed_via_github_app":null,"state_reason":null}