{"url":"https://api.github.com/repos/thinkingmachines/geomancer/issues/7","repository_url":"https://api.github.com/repos/thinkingmachines/geomancer","labels_url":"https://api.github.com/repos/thinkingmachines/geomancer/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/thinkingmachines/geomancer/issues/7/comments","events_url":"https://api.github.com/repos/thinkingmachines/geomancer/issues/7/events","html_url":"https://github.com/thinkingmachines/geomancer/issues/7","id":416021458,"node_id":"MDU6SXNzdWU0MTYwMjE0NTg=","number":7,"title":"Explore QueryBuilder using SQLAlchemy PostGIS","user":{"login":"ljvmiranda921","id":12949683,"node_id":"MDQ6VXNlcjEyOTQ5Njgz","avatar_url":"https://avatars.githubusercontent.com/u/12949683?v=4","gravatar_id":"","url":"https://api.github.com/users/ljvmiranda921","html_url":"https://github.com/ljvmiranda921","followers_url":"https://api.github.com/users/ljvmiranda921/followers","following_url":"https://api.github.com/users/ljvmiranda921/following{/other_user}","gists_url":"https://api.github.com/users/ljvmiranda921/gists{/gist_id}","starred_url":"https://api.github.com/users/ljvmiranda921/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ljvmiranda921/subscriptions","organizations_url":"https://api.github.com/users/ljvmiranda921/orgs","repos_url":"https://api.github.com/users/ljvmiranda921/repos","events_url":"https://api.github.com/users/ljvmiranda921/events{/privacy}","received_events_url":"https://api.github.com/users/ljvmiranda921/received_events","type":"User","site_admin":false},"labels":[{"id":1247884207,"node_id":"MDU6TGFiZWwxMjQ3ODg0MjA3","url":"https://api.github.com/repos/thinkingmachines/geomancer/labels/enhancement","name":"enhancement","color":"1d76db","default":true,"description":"New feature or feature request"}],"state":"closed","locked":true,"assignee":{"login":"marksteve","id":26679,"node_id":"MDQ6VXNlcjI2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/26679?v=4","gravatar_id":"","url":"https://api.github.com/users/marksteve","html_url":"https://github.com/marksteve","followers_url":"https://api.github.com/users/marksteve/followers","following_url":"https://api.github.com/users/marksteve/following{/other_user}","gists_url":"https://api.github.com/users/marksteve/gists{/gist_id}","starred_url":"https://api.github.com/users/marksteve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marksteve/subscriptions","organizations_url":"https://api.github.com/users/marksteve/orgs","repos_url":"https://api.github.com/users/marksteve/repos","events_url":"https://api.github.com/users/marksteve/events{/privacy}","received_events_url":"https://api.github.com/users/marksteve/received_events","type":"User","site_admin":false},"assignees":[{"login":"marksteve","id":26679,"node_id":"MDQ6VXNlcjI2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/26679?v=4","gravatar_id":"","url":"https://api.github.com/users/marksteve","html_url":"https://github.com/marksteve","followers_url":"https://api.github.com/users/marksteve/followers","following_url":"https://api.github.com/users/marksteve/following{/other_user}","gists_url":"https://api.github.com/users/marksteve/gists{/gist_id}","starred_url":"https://api.github.com/users/marksteve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marksteve/subscriptions","organizations_url":"https://api.github.com/users/marksteve/orgs","repos_url":"https://api.github.com/users/marksteve/repos","events_url":"https://api.github.com/users/marksteve/events{/privacy}","received_events_url":"https://api.github.com/users/marksteve/received_events","type":"User","site_admin":false},{"login":"ljvmiranda921","id":12949683,"node_id":"MDQ6VXNlcjEyOTQ5Njgz","avatar_url":"https://avatars.githubusercontent.com/u/12949683?v=4","gravatar_id":"","url":"https://api.github.com/users/ljvmiranda921","html_url":"https://github.com/ljvmiranda921","followers_url":"https://api.github.com/users/ljvmiranda921/followers","following_url":"https://api.github.com/users/ljvmiranda921/following{/other_user}","gists_url":"https://api.github.com/users/ljvmiranda921/gists{/gist_id}","starred_url":"https://api.github.com/users/ljvmiranda921/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ljvmiranda921/subscriptions","organizations_url":"https://api.github.com/users/ljvmiranda921/orgs","repos_url":"https://api.github.com/users/ljvmiranda921/repos","events_url":"https://api.github.com/users/ljvmiranda921/events{/privacy}","received_events_url":"https://api.github.com/users/ljvmiranda921/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2019-03-01T09:48:23Z","updated_at":"2019-06-21T19:23:51Z","closed_at":"2019-03-08T08:49:18Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Let's remove the need for writing strings and formatting them. We need a more flexible API for building queries. Advantages:\r\n- Backend data warehouse is now pluggable (in the future we ca opt to use BigQuery OR a PostGIS server).\r\n- SQL queries are now in a Python-ic DSL. Much better than writing string-formatted queries.\r\n\r\n## PR Requirements\r\n\r\n- [x] Port the string-formatted query into an SQLAlchemy Query. The user should *still* be able to supply the `fclass`, `source_table` (OSM) and BigQuery options if possible\r\n- [x] No need to pass the client (?), we just need to pass the database URI.\r\n- [x] If a table is uploaded into the BQ Dataset, ensure that there is an expiration date (previously, we're creating a new table per call, which is not cost-efficient). \r\n\r\nI suggest creating a `query() method` and have it an abstract class method. Must raise a `NotImplementedError` for `geomancer.base.Spell`. The `geomancer.base.Spell.cast()` method should ideally be inherited (all subclasses should just call `super()`)\r\n\r\n**Ideal Scenario:** when implementing a new `Spell` (i.e., subclassing the `Spell` base), I don't need to think of implementing `cast` anymore (in fact, this whole thing should be inherited, `super()`). Instead, I should just implement the `query()` method using the SQLAlchemy dialect.","closed_by":{"login":"ljvmiranda921","id":12949683,"node_id":"MDQ6VXNlcjEyOTQ5Njgz","avatar_url":"https://avatars.githubusercontent.com/u/12949683?v=4","gravatar_id":"","url":"https://api.github.com/users/ljvmiranda921","html_url":"https://github.com/ljvmiranda921","followers_url":"https://api.github.com/users/ljvmiranda921/followers","following_url":"https://api.github.com/users/ljvmiranda921/following{/other_user}","gists_url":"https://api.github.com/users/ljvmiranda921/gists{/gist_id}","starred_url":"https://api.github.com/users/ljvmiranda921/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ljvmiranda921/subscriptions","organizations_url":"https://api.github.com/users/ljvmiranda921/orgs","repos_url":"https://api.github.com/users/ljvmiranda921/repos","events_url":"https://api.github.com/users/ljvmiranda921/events{/privacy}","received_events_url":"https://api.github.com/users/ljvmiranda921/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/thinkingmachines/geomancer/issues/7/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/thinkingmachines/geomancer/issues/7/timeline","performed_via_github_app":null,"state_reason":"completed"}