{"url":"https://api.github.com/repos/diffgram/diffgram/issues/1259","repository_url":"https://api.github.com/repos/diffgram/diffgram","labels_url":"https://api.github.com/repos/diffgram/diffgram/issues/1259/labels{/name}","comments_url":"https://api.github.com/repos/diffgram/diffgram/issues/1259/comments","events_url":"https://api.github.com/repos/diffgram/diffgram/issues/1259/events","html_url":"https://github.com/diffgram/diffgram/issues/1259","id":1505250058,"node_id":"I_kwDOCM48Rc5ZuEsK","number":1259,"title":"Event Service / psycopg2.errors.UniqueViolation: \"workingdir_file_link_pkey\"","user":{"login":"anthony-sarkis","id":18080164,"node_id":"MDQ6VXNlcjE4MDgwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18080164?v=4","gravatar_id":"","url":"https://api.github.com/users/anthony-sarkis","html_url":"https://github.com/anthony-sarkis","followers_url":"https://api.github.com/users/anthony-sarkis/followers","following_url":"https://api.github.com/users/anthony-sarkis/following{/other_user}","gists_url":"https://api.github.com/users/anthony-sarkis/gists{/gist_id}","starred_url":"https://api.github.com/users/anthony-sarkis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anthony-sarkis/subscriptions","organizations_url":"https://api.github.com/users/anthony-sarkis/orgs","repos_url":"https://api.github.com/users/anthony-sarkis/repos","events_url":"https://api.github.com/users/anthony-sarkis/events{/privacy}","received_events_url":"https://api.github.com/users/anthony-sarkis/received_events","type":"User","site_admin":false},"labels":[{"id":1048365660,"node_id":"MDU6TGFiZWwxMDQ4MzY1NjYw","url":"https://api.github.com/repos/diffgram/diffgram/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2935242619,"node_id":"MDU6TGFiZWwyOTM1MjQyNjE5","url":"https://api.github.com/repos/diffgram/diffgram/labels/lowpriority","name":"lowpriority","color":"397733","default":false,"description":""},{"id":4930444025,"node_id":"LA_kwDOCM48Rc8AAAABJeCa-Q","url":"https://api.github.com/repos/diffgram/diffgram/labels/events-service","name":"events-service","color":"B5EA24","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-12-20T20:47:25Z","updated_at":"2022-12-20T20:47:25Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"#### Low priority unless new data because appears to be more of a duplicate call\r\n\r\n### To reproduce\r\nsend sample data. e.g. generate input from Import screen\r\n\r\nIn event service throws:\r\n```\r\nsqlalchemy.exc.IntegrityError: (raised as a result of Query-invoked autoflush; consider using a session.no_autoflush block if this flush is occurring prematurely)\r\n(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint \"workingdir_file_link_pkey\"\r\nDETAIL:  Key (working_dir_id, file_id)=(102, 2930) already exists.\r\n```\r\n\r\n### Theory\r\nOne explanation could be that `WorkingDirFileLink.file_link_update()`\r\nis generating\r\n```\r\n[SQL: INSERT INTO workingdir_file_link (working_dir_id, file_id, type, committed, count, created_time, last_time) VALUES (%(working_dir_id)s, %(file_id)s, %(type)s, %(committed)s,  ....... ]\r\n```\r\nSo then when it gets to __check_if_task_exists() it tries to flush do that.\r\n\r\nI'm not clear off hand if `file_link_update()` should fire if a task already exists. \r\n\r\nOne option would be to only call it if creating a task / task doesn't exist. It's odd though as `existing_file_link` is already checked.\r\n\r\n\r\nFull traceback\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"E:\\Sync\\work\\diffgram_PUBLIC\\diffgram\\eventhandlers\\action_runners\\base\\ActionRunner.py\", line 143, in run\r\n    output = self.execute_action(session)\r\n  File \"E:\\Sync\\work\\diffgram_PUBLIC\\diffgram\\eventhandlers\\action_runners\\actions\\TaskTemplateActionRunner.py\", line 95, in execute_action\r\n    task, log = job_sync_manager.add_file_into_job(\r\n  File \"E:\\Sync\\work\\diffgram_PUBLIC\\diffgram\\shared\\utils\\job_dir_sync_utils.py\", line 67, in add_file_into_job\r\n    potential_existing_task = self.__check_if_task_exists(\r\n  File \"E:\\Sync\\work\\diffgram_PUBLIC\\diffgram\\shared\\utils\\job_dir_sync_utils.py\", line 92, in __check_if_task_exists\r\n    task = Task.get_by_job_and_file(\r\n  File \"E:\\Sync\\work\\diffgram_PUBLIC\\diffgram\\shared\\database\\task\\task.py\", line 589, in get_by_job_and_file\r\n    return query.first()\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 2716, in first\r\n    return self.limit(1)._iter().first()\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 2800, in _iter\r\n    result = self.session.execute(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1619, in execute\r\n    ) = compile_state_cls.orm_pre_session_exec(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\context.py\", line 283, in orm_pre_session_exec\r\n    session._autoflush()\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2153, in _autoflush\r\n    util.raise_(e, with_traceback=sys.exc_info()[2])\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\util\\compat.py\", line 211, in raise_\r\n    raise exception\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2142, in _autoflush\r\n    self.flush()\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3233, in flush\r\n    self._flush(objects)\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3373, in _flush\r\n    transaction.rollback(_capture_exception=True)\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 70, in __exit__\r\n    compat.raise_(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\util\\compat.py\", line 211, in raise_\r\n    raise exception\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3333, in _flush\r\n    flush_context.execute()\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 453, in execute\r\n    rec.execute(self)\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 627, in execute\r\n    util.preloaded.orm_persistence.save_obj(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 242, in save_obj\r\n    _emit_insert_statements(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1094, in _emit_insert_statements\r\n    c = connection._execute_20(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1520, in _execute_20\r\n    return meth(self, args_10style, kwargs_10style, execution_options)\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 313, in _execute_on_connection\r\n    return connection._execute_clauseelement(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1389, in _execute_clauseelement\r\n    ret = self._execute_context(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1748, in _execute_context\r\n    self._handle_dbapi_exception(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1929, in _handle_dbapi_exception\r\n    util.raise_(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\util\\compat.py\", line 211, in raise_\r\n    raise exception\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1705, in _execute_context\r\n    self.dialect.do_execute(\r\n  File \"C:\\Users\\Anthony\\.conda\\envs\\open_walrus\\lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 691, in do_execute\r\n    cursor.execute(statement, parameters)\r\nsqlalchemy.exc.IntegrityError: (raised as a result of Query-invoked autoflush; consider using a session.no_autoflush block if this flush is occurring prematurely)\r\n(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint \"workingdir_file_link_pkey\"\r\nDETAIL:  Key (working_dir_id, file_id)=(102, 2930) already exists.\r\n\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/diffgram/diffgram/issues/1259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/diffgram/diffgram/issues/1259/timeline","performed_via_github_app":null,"state_reason":null}