{"url":"https://api.github.com/repos/diffgram/diffgram/issues/122","repository_url":"https://api.github.com/repos/diffgram/diffgram","labels_url":"https://api.github.com/repos/diffgram/diffgram/issues/122/labels{/name}","comments_url":"https://api.github.com/repos/diffgram/diffgram/issues/122/comments","events_url":"https://api.github.com/repos/diffgram/diffgram/issues/122/events","html_url":"https://github.com/diffgram/diffgram/issues/122","id":930085992,"node_id":"MDU6SXNzdWU5MzAwODU5OTI=","number":122,"title":"Exception \"File /etc/gcp/sa_credentials.json was not found\" while using Azure Storage Account","user":{"login":"vitorjcorreia","id":57266445,"node_id":"MDQ6VXNlcjU3MjY2NDQ1","avatar_url":"https://avatars.githubusercontent.com/u/57266445?v=4","gravatar_id":"","url":"https://api.github.com/users/vitorjcorreia","html_url":"https://github.com/vitorjcorreia","followers_url":"https://api.github.com/users/vitorjcorreia/followers","following_url":"https://api.github.com/users/vitorjcorreia/following{/other_user}","gists_url":"https://api.github.com/users/vitorjcorreia/gists{/gist_id}","starred_url":"https://api.github.com/users/vitorjcorreia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitorjcorreia/subscriptions","organizations_url":"https://api.github.com/users/vitorjcorreia/orgs","repos_url":"https://api.github.com/users/vitorjcorreia/repos","events_url":"https://api.github.com/users/vitorjcorreia/events{/privacy}","received_events_url":"https://api.github.com/users/vitorjcorreia/received_events","type":"User","site_admin":false},"labels":[{"id":1048365660,"node_id":"MDU6TGFiZWwxMDQ4MzY1NjYw","url":"https://api.github.com/repos/diffgram/diffgram/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"PJEstrada","id":6606958,"node_id":"MDQ6VXNlcjY2MDY5NTg=","avatar_url":"https://avatars.githubusercontent.com/u/6606958?v=4","gravatar_id":"","url":"https://api.github.com/users/PJEstrada","html_url":"https://github.com/PJEstrada","followers_url":"https://api.github.com/users/PJEstrada/followers","following_url":"https://api.github.com/users/PJEstrada/following{/other_user}","gists_url":"https://api.github.com/users/PJEstrada/gists{/gist_id}","starred_url":"https://api.github.com/users/PJEstrada/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PJEstrada/subscriptions","organizations_url":"https://api.github.com/users/PJEstrada/orgs","repos_url":"https://api.github.com/users/PJEstrada/repos","events_url":"https://api.github.com/users/PJEstrada/events{/privacy}","received_events_url":"https://api.github.com/users/PJEstrada/received_events","type":"User","site_admin":false},"assignees":[{"login":"PJEstrada","id":6606958,"node_id":"MDQ6VXNlcjY2MDY5NTg=","avatar_url":"https://avatars.githubusercontent.com/u/6606958?v=4","gravatar_id":"","url":"https://api.github.com/users/PJEstrada","html_url":"https://github.com/PJEstrada","followers_url":"https://api.github.com/users/PJEstrada/followers","following_url":"https://api.github.com/users/PJEstrada/following{/other_user}","gists_url":"https://api.github.com/users/PJEstrada/gists{/gist_id}","starred_url":"https://api.github.com/users/PJEstrada/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PJEstrada/subscriptions","organizations_url":"https://api.github.com/users/PJEstrada/orgs","repos_url":"https://api.github.com/users/PJEstrada/repos","events_url":"https://api.github.com/users/PJEstrada/events{/privacy}","received_events_url":"https://api.github.com/users/PJEstrada/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2021-06-25T11:22:19Z","updated_at":"2021-06-25T20:41:23Z","closed_at":"2021-06-25T20:40:26Z","author_association":"NONE","active_lock_reason":null,"body":"Hello.\r\n\r\nI am using the Helm chart provided in the other repository for installing diffgram in a Kubernetes cluster. The problem is the two containers (diffgram-default and diffgram-walrus) cannot find the following file `/etc/gcp/sa_crendetials`. If I am using Azure Storage Account to store the static files, this error should not occur. Anyways, I wonder if I am doing this right so I will paste the `values.yaml` file and the log file of the exception that I obtained.\r\n\r\n`values.yaml`:\r\n\r\n```yaml\r\n# Default values for diffgram.\r\n# This is a YAML-formatted file.\r\n# Declare variables to be passed into your templates.\r\n\r\n# The Diffgram Version. Whenever a new update arrives, this will be changed.\r\ndiffgramVersion: latest\r\n\r\n# Either 'opencore' or 'enterprise'. Please note that selecting 'enterprise'\r\n# requires that you also set imagePullCredentials.gcrCredentials.\r\ndiffgramEdition: opencore\r\n\r\n# Set this to your public domain where you want diffgram to be.\r\n# This must be a domain name and not a public IP address.\r\n# The chart will generate TLS certificates for the provided domain if useCertManager is 'true'\r\ndiffgramDomain: *HIDDEN*\r\n\r\n# Set this to true if you want to use cert manager for TLS certificates generation.\r\nuseCertManager: false\r\n\r\ndbSettings:\r\n  # Specify How the DB Service should be created\r\n  # - local: use a Postgres Image and Service (No external service) Recommended only for non-production enviroments.\r\n  # - rds: use an ExternalService with an AWS RDS instance. If you set this you need to provide the rdsEndpoint field.\r\n  # - azure: use an ExternalService with an Azure Postgres instance. If you set this you need to provide the azureSqlEndpoint field.\r\n  # - gcsql: use an ExternalService with a Google Cloud SQL instance. If you set this you need to provide the gcSqlEndpoint field.\r\n  dbProvider: local\r\n  rdsEndpoint: none\r\n  azureSqlEndpoint: none\r\n  gcsqlEndpoint: none\r\n  dbUser: *HIDDEN*\r\n  dbName: *HIDDEN*\r\n  dbPassword: *HIDDEN*\r\n  # For the local postgres DB. Does not have effect on RDS or GCP services.\r\n  storageAmount: 5Gi\r\n\r\n# All the Secrets Used in Diffgram.\r\ndiffgramSecrets:\r\n  STRIPE_API_KEY: none\r\n  DIFFGRAM_AWS_ACCESS_KEY_ID: none\r\n  DIFFGRAM_AWS_ACCESS_KEY_SECRET: none\r\n  _ANALYTICS_WRITE_KEY: provided_by_diffgram_team\r\n  MAILGUN_KEY: provided_by_diffgram_team\r\n  HUB_SPOT_KEY: provided_by_diffgram_team\r\n  SECRET_KEY: provided_by_diffgram_team\r\n  INTER_SERVICE_SECRET: provided_by_diffgram_team\r\n  # Use diffgram-postgres, postgres-rds-service depending on which DB service you set on dbSettings\r\n  USER_PASSWORDS_SECRET: provided_by_diffgram_team\r\n  # The service account JSON for GCP Static Storage Encoded in Base64.\r\n  SERVICE_ACCOUNT_JSON_B64: put_your_gcp_secret_in_base_64_here\r\n  DIFFGRAM_AZURE_CONNECTION_STRING: *HIDDEN*\r\n\r\ndiffgramSettings:\r\n  USERDOMAIN: kubernetes\r\n  DIFFGRAM_SYSTEM_MODE: production\r\n  DIFFGRAM_STATIC_STORAGE_PROVIDER: azure\r\n  DIFFGRAM_S3_BUCKET_NAME: none\r\n  DIFFGRAM_AZURE_CONTAINER_NAME: diffgram-dev\r\n  ML__DIFFGRAM_AZURE_CONTAINER_NAME: diffgram-dev\r\n  ML__DIFFGRAM_S3_BUCKET_NAME: diffgram-testing\r\n  CLOUD_STORAGE_BUCKET: diffgram-testing\r\n  ML__CLOUD_STORAGE_BUCKET: diffgram-testing\r\n  GOOGLE_APPLICATION_CREDENTIALS: /etc/gcp/sa_credentials.json # Check the volume in deployment.yaml and service_account_secret.yaml\r\n  SERVICE_ACCOUNT_FULL_PATH: /etc/gcp/sa_credentials.json\r\n  \r\n  # Set this value if you want to use GCP as your storage. Put your json service account encoded in base 64\r\n  SERVICE_ACCOUNT_JSON_B64: none\r\n\r\n  SERVICE_ACCOUNT: sa_credentials.json\r\n\r\nimagePullCredentials:\r\n  # The service account with permissions to pull from the GCR Repository. [Should be Provided by Diffgram Team.]\r\n  gcrCredentials: provided_by_diffgram_team\r\n\r\n# The service for API calls.\r\n# This are minimal defaults. Please feel free to change them as you start having more usage\r\ndefaultService:\r\n  numReplicas: 1\r\n  requests:\r\n    cpu: \"2.0\"\r\n    memory: \"2G\"\r\n  limits:\r\n    cpu: \"2.0\"\r\n    memory: \"2G\"\r\n# The service for the UI frontend.\r\n# This are minimal defaults. Please feel free to change them as you start having more usage\r\nfrontendService:\r\n  numReplicas: 1\r\n  requests:\r\n    cpu: \"1.0\"\r\n    memory: \"2G\"\r\n  limits:\r\n    cpu: \"1.0\"\r\n    memory: \"2G\"\r\n# The service for video processing. This is where the heavy processing takes place.\r\n# This are minimal defaults. Please feel free to change them as you start having more usage\r\nwalrusService:\r\n  numReplicas: 1\r\n  requests:\r\n    cpu: \"1.0\"\r\n    memory: \"2G\"\r\n  limits:\r\n    cpu: \"1.0\"\r\n    memory: \"2G\"\r\n```\r\n\r\nThe logs of the container (the error is the same on both):\r\n\r\n```\r\n[2021-06-25 10:49:00 +0000] [8] [INFO] Starting gunicorn 20.0.4\r\n[2021-06-25 10:49:00 +0000] [8] [INFO] Listening at: http://0.0.0.0:8080 (8)\r\n[2021-06-25 10:49:00 +0000] [8] [INFO] Using worker: sync\r\n[2021-06-25 10:49:00 +0000] [11] [INFO] Booting worker with pid: 11\r\n[2021-06-25 10:49:00 +0000] [12] [INFO] Booting worker with pid: 12\r\n[2021-06-25 10:49:00 +0000] [13] [INFO] Booting worker with pid: 13\r\n[2021-06-25 10:49:00 +0000] [14] [INFO] Booting worker with pid: 14\r\n[2021-06-25 10:49:01 +0000] [15] [INFO] Booting worker with pid: 15\r\n[2021-06-25 10:49:05 +0000] [11] [ERROR] Exception in worker process\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/arbiter.py\", line 583, in spawn_worker\r\n    worker.init_process()\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/workers/base.py\", line 119, in init_process\r\n    self.load_wsgi()\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/workers/base.py\", line 144, in load_wsgi\r\n    self.wsgi = self.app.wsgi()\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/app/base.py\", line 67, in wsgi\r\n    self.callable = self.load()\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/app/wsgiapp.py\", line 49, in load\r\n    return self.load_wsgiapp()\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/app/wsgiapp.py\", line 39, in load_wsgiapp\r\n    return util.import_app(self.app_uri)\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/util.py\", line 358, in import_app\r\n    mod = importlib.import_module(module)\r\n  File \"/usr/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/app/main.py\", line 37, in <module>\r\n    import shared.database_setup_supporting\r\n  File \"/app/shared/database_setup_supporting.py\", line 2, in <module>\r\n    from shared.database.discussion.discussion_comment import DiscussionComment\r\n  File \"/app/shared/database/discussion/discussion_comment.py\", line 2, in <module>\r\n    from shared.database.common import *\r\n  File \"/app/shared/database/common.py\", line 41, in <module>\r\n    from shared import data_tools_core\r\n  File \"/app/shared/data_tools_core.py\", line 3, in <module>\r\n    from shared.data_tools_core_gcp import DataToolsGCP\r\n  File \"/app/shared/data_tools_core_gcp.py\", line 15, in <module>\r\n    logger = get_shared_logger()\r\n  File \"/app/shared/shared_logger.py\", line 8, in get_shared_logger\r\n    shared_abstract_logger.configure_concrete_logger(system_mode=settings.DIFFGRAM_SYSTEM_MODE)\r\n  File \"/app/shared/utils/logging.py\", line 53, in configure_concrete_logger\r\n    self.logger = self.configure_gcp_logger()\r\n  File \"/app/shared/utils/logging.py\", line 72, in configure_gcp_logger\r\n    logging_client = gcp_logging.Client()\r\n  File \"/usr/local/lib/python3.6/dist-packages/google/cloud/logging/client.py\", line 127, in __init__\r\n    project=project, credentials=credentials, _http=_http\r\n  File \"/usr/local/lib/python3.6/dist-packages/google/cloud/client.py\", line 318, in __init__\r\n    _ClientProjectMixin.__init__(self, project=project, credentials=credentials)\r\n  File \"/usr/local/lib/python3.6/dist-packages/google/cloud/client.py\", line 266, in __init__\r\n    project = self._determine_default(project)\r\n  File \"/usr/local/lib/python3.6/dist-packages/google/cloud/client.py\", line 285, in _determine_default\r\n    return _determine_default_project(project)\r\n  File \"/usr/local/lib/python3.6/dist-packages/google/cloud/_helpers.py\", line 186, in _determine_default_project\r\n    _, project = google.auth.default()\r\n  File \"/usr/local/lib/python3.6/dist-packages/google/auth/_default.py\", line 454, in default\r\n    credentials, project_id = checker()\r\n  File \"/usr/local/lib/python3.6/dist-packages/google/auth/_default.py\", line 222, in _get_explicit_environ_credentials\r\n    os.environ[environment_vars.CREDENTIALS]\r\n  File \"/usr/local/lib/python3.6/dist-packages/google/auth/_default.py\", line 108, in load_credentials_from_file\r\n    \"File {} was not found.\".format(filename)\r\ngoogle.auth.exceptions.DefaultCredentialsError: File /etc/gcp/sa_credentials.json was not found.\r\nNo module named 'shared.settings.secrets'\r\n[2021-06-25 10:49:05 +0000] [11] [INFO] Worker exiting (pid: 11)\r\nPROCESS_MEDIA_TRY_BLOCK_ON True\r\nPROCESS_MEDIA_REMOTE_QUEUE_ON True\r\nPROCESS_MEDIA_ENQUEUE_LOCALLY_IMMEDIATELY False\r\nDIFFGRAM_SYSTEM_MODE DIFFGRAM_SYSTEM_MODE  production\r\nDATABASE_URL DATABASE_URL  True\r\n```\r\n\r\nI specified the variable `SERVICE_ACCOUNT_FULL_PATH` with a dummy path since it is recommended in this issue #68. Also, I followed this tutorial: https://medium.com/diffgram/tutorial-installing-diffgram-on-azure-aks-b9447685e271\r\n\r\nAppreciate any help. ","closed_by":{"login":"PJEstrada","id":6606958,"node_id":"MDQ6VXNlcjY2MDY5NTg=","avatar_url":"https://avatars.githubusercontent.com/u/6606958?v=4","gravatar_id":"","url":"https://api.github.com/users/PJEstrada","html_url":"https://github.com/PJEstrada","followers_url":"https://api.github.com/users/PJEstrada/followers","following_url":"https://api.github.com/users/PJEstrada/following{/other_user}","gists_url":"https://api.github.com/users/PJEstrada/gists{/gist_id}","starred_url":"https://api.github.com/users/PJEstrada/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PJEstrada/subscriptions","organizations_url":"https://api.github.com/users/PJEstrada/orgs","repos_url":"https://api.github.com/users/PJEstrada/repos","events_url":"https://api.github.com/users/PJEstrada/events{/privacy}","received_events_url":"https://api.github.com/users/PJEstrada/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/diffgram/diffgram/issues/122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/diffgram/diffgram/issues/122/timeline","performed_via_github_app":null,"state_reason":"completed"}