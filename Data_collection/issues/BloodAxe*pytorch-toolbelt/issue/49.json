{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49","repository_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt","labels_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49/labels{/name}","comments_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49/comments","events_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49/events","html_url":"https://github.com/BloodAxe/pytorch-toolbelt/issues/49","id":704972566,"node_id":"MDU6SXNzdWU3MDQ5NzI1NjY=","number":49,"title":"TypeError: object of type 'int' has no len()","user":{"login":"sainatarajan","id":22982857,"node_id":"MDQ6VXNlcjIyOTgyODU3","avatar_url":"https://avatars.githubusercontent.com/u/22982857?v=4","gravatar_id":"","url":"https://api.github.com/users/sainatarajan","html_url":"https://github.com/sainatarajan","followers_url":"https://api.github.com/users/sainatarajan/followers","following_url":"https://api.github.com/users/sainatarajan/following{/other_user}","gists_url":"https://api.github.com/users/sainatarajan/gists{/gist_id}","starred_url":"https://api.github.com/users/sainatarajan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sainatarajan/subscriptions","organizations_url":"https://api.github.com/users/sainatarajan/orgs","repos_url":"https://api.github.com/users/sainatarajan/repos","events_url":"https://api.github.com/users/sainatarajan/events{/privacy}","received_events_url":"https://api.github.com/users/sainatarajan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-09-19T18:03:28Z","updated_at":"2021-03-17T06:50:12Z","closed_at":"2021-03-16T21:44:31Z","author_association":"NONE","active_lock_reason":null,"body":"I am unable to create a basic UNet model from the library as given on the readme. Here's the code for the same:\r\n\r\n```py\r\nfrom torch import nn\r\nfrom pytorch_toolbelt.modules import encoders as E\r\nfrom pytorch_toolbelt.modules import decoders as D\r\n\r\nclass UNet(nn.Module):\r\n    def __init__(self, input_channels, num_classes):\r\n        super().__init__()\r\n        self.encoder = E.UnetEncoder(in_channels=input_channels, out_channels=32, growth_factor=2)\r\n        self.decoder = D.UNetDecoder(self.encoder.channels, decoder_features=32)\r\n        self.logits = nn.Conv2d(self.decoder.channels[0], num_classes, kernel_size=1)\r\n\r\n    def forward(self, x):\r\n        x = self.encoder(x)\r\n        x = self.decoder(x)\r\n        return self.logits(x[0])\r\n    \r\nmodel= UNet(input_channels= 3, num_classes= 1)\r\n```\r\n\r\nError:\r\n```py\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-4e8064bebb83> in <module>\r\n     15         return self.logits(x[0])\r\n     16 \r\n---> 17 model= UNet(input_channels= 3, num_classes= 1)\r\n\r\n<ipython-input-1-4e8064bebb83> in __init__(self, input_channels, num_classes)\r\n      7         super().__init__()\r\n      8         self.encoder = E.UnetEncoder(in_channels=input_channels, out_channels=32, growth_factor=2)\r\n----> 9         self.decoder = D.UNetDecoder(self.encoder.channels, decoder_features=32)\r\n     10         self.logits = nn.Conv2d(self.decoder.channels[0], num_classes, kernel_size=1)\r\n     11 \r\n\r\n~/anaconda3/envs/dl_gpu/lib/python3.7/site-packages/pytorch_toolbelt/modules/decoders/unet.py in __init__(self, feature_maps, decoder_features, unet_block, upsample_block)\r\n     38             decoder_features = [None] * num_blocks\r\n     39         else:\r\n---> 40             if len(decoder_features) != num_blocks:\r\n     41                 raise ValueError(f\"decoder_features must have length of {num_blocks}\")\r\n     42         in_channels_for_upsample_block = feature_maps[-1]\r\n\r\nTypeError: object of type 'int' has no len()\r\n```","closed_by":{"login":"BloodAxe","id":532320,"node_id":"MDQ6VXNlcjUzMjMyMA==","avatar_url":"https://avatars.githubusercontent.com/u/532320?v=4","gravatar_id":"","url":"https://api.github.com/users/BloodAxe","html_url":"https://github.com/BloodAxe","followers_url":"https://api.github.com/users/BloodAxe/followers","following_url":"https://api.github.com/users/BloodAxe/following{/other_user}","gists_url":"https://api.github.com/users/BloodAxe/gists{/gist_id}","starred_url":"https://api.github.com/users/BloodAxe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BloodAxe/subscriptions","organizations_url":"https://api.github.com/users/BloodAxe/orgs","repos_url":"https://api.github.com/users/BloodAxe/repos","events_url":"https://api.github.com/users/BloodAxe/events{/privacy}","received_events_url":"https://api.github.com/users/BloodAxe/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49/timeline","performed_via_github_app":null,"state_reason":"completed"}