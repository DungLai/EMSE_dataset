{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/41","repository_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt","labels_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/41/labels{/name}","comments_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/41/comments","events_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/41/events","html_url":"https://github.com/BloodAxe/pytorch-toolbelt/issues/41","id":571851852,"node_id":"MDU6SXNzdWU1NzE4NTE4NTI=","number":41,"title":"Getting out of memory by using inference on huge images","user":{"login":"Diyago","id":8073766,"node_id":"MDQ6VXNlcjgwNzM3NjY=","avatar_url":"https://avatars.githubusercontent.com/u/8073766?v=4","gravatar_id":"","url":"https://api.github.com/users/Diyago","html_url":"https://github.com/Diyago","followers_url":"https://api.github.com/users/Diyago/followers","following_url":"https://api.github.com/users/Diyago/following{/other_user}","gists_url":"https://api.github.com/users/Diyago/gists{/gist_id}","starred_url":"https://api.github.com/users/Diyago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Diyago/subscriptions","organizations_url":"https://api.github.com/users/Diyago/orgs","repos_url":"https://api.github.com/users/Diyago/repos","events_url":"https://api.github.com/users/Diyago/events{/privacy}","received_events_url":"https://api.github.com/users/Diyago/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-02-27T06:25:40Z","updated_at":"2020-02-27T18:44:07Z","closed_at":"2020-02-27T18:37:39Z","author_association":"NONE","active_lock_reason":null,"body":"I have tried pretty small slices but get cuda out of memory on ```---> 23     pred_batch = best_model(tiles_batch)[:, 0:1, :,:]``` As I can see it finally preceded few steps but failed. I have GPU with 8 GB, model it`s unet but wuth heavy encoders. Image shape (6300, 6304, 3)\r\n```\r\nimport numpy as np\r\nimport torch\r\nimport cv2\r\nfrom tqdm import tqdm_notebook\r\nfrom pytorch_toolbelt.inference.tiles import ImageSlicer, CudaTileMerger\r\nfrom pytorch_toolbelt.utils.torch_utils import tensor_from_rgb_image, to_numpy\r\n\r\n\r\nimage = img_to_predict\r\n\r\n# Cut large image into overlapping tiles\r\ntiler = ImageSlicer(image.shape, tile_size=(64, 64), tile_step=(64, 64), weight='pyramid')\r\n\r\n# HCW -> CHW. Optionally, do normalization here\r\ntiles = [tensor_from_rgb_image(tile) for tile in tiler.split(image)]\r\n\r\n# Allocate a CUDA buffer for holding entire mask\r\nmerger = CudaTileMerger(tiler.target_shape, 1, tiler.weight)\r\n\r\n# Run predictions for tiles and accumulate them\r\nfor tiles_batch, coords_batch in tqdm_notebook(DataLoader(list(zip(tiles, tiler.crops)), batch_size=1, pin_memory=True)):\r\n    tiles_batch = tiles_batch.float().cuda()\r\n    pred_batch = best_model(tiles_batch)[:, 0:1, :,:] # taking only first channel\r\n\r\n    merger.integrate_batch(pred_batch, coords_batch)\r\n\r\n# Normalize accumulated mask and convert back to numpy\r\nmerged_mask = np.moveaxis(to_numpy(merger.merge()), 0, -1).astype(np.uint8)\r\nmerged_mask = tiler.crop_to_orignal_size(merged_mask)\r\n```","closed_by":{"login":"Diyago","id":8073766,"node_id":"MDQ6VXNlcjgwNzM3NjY=","avatar_url":"https://avatars.githubusercontent.com/u/8073766?v=4","gravatar_id":"","url":"https://api.github.com/users/Diyago","html_url":"https://github.com/Diyago","followers_url":"https://api.github.com/users/Diyago/followers","following_url":"https://api.github.com/users/Diyago/following{/other_user}","gists_url":"https://api.github.com/users/Diyago/gists{/gist_id}","starred_url":"https://api.github.com/users/Diyago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Diyago/subscriptions","organizations_url":"https://api.github.com/users/Diyago/orgs","repos_url":"https://api.github.com/users/Diyago/repos","events_url":"https://api.github.com/users/Diyago/events{/privacy}","received_events_url":"https://api.github.com/users/Diyago/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/41/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/41/timeline","performed_via_github_app":null,"state_reason":"completed"}