[{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/comments/737011989","html_url":"https://github.com/BloodAxe/pytorch-toolbelt/issues/49#issuecomment-737011989","issue_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49","id":737011989,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzAxMTk4OQ==","user":{"login":"cswwp","id":11901683,"node_id":"MDQ6VXNlcjExOTAxNjgz","avatar_url":"https://avatars.githubusercontent.com/u/11901683?v=4","gravatar_id":"","url":"https://api.github.com/users/cswwp","html_url":"https://github.com/cswwp","followers_url":"https://api.github.com/users/cswwp/followers","following_url":"https://api.github.com/users/cswwp/following{/other_user}","gists_url":"https://api.github.com/users/cswwp/gists{/gist_id}","starred_url":"https://api.github.com/users/cswwp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cswwp/subscriptions","organizations_url":"https://api.github.com/users/cswwp/orgs","repos_url":"https://api.github.com/users/cswwp/repos","events_url":"https://api.github.com/users/cswwp/events{/privacy}","received_events_url":"https://api.github.com/users/cswwp/received_events","type":"User","site_admin":false},"created_at":"2020-12-02T06:01:50Z","updated_at":"2020-12-02T06:01:50Z","author_association":"NONE","body":"same +1","reactions":{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/comments/737011989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"cswwp","id":11901683,"node_id":"MDQ6VXNlcjExOTAxNjgz","avatar_url":"https://avatars.githubusercontent.com/u/11901683?v=4","gravatar_id":"","url":"https://api.github.com/users/cswwp","html_url":"https://github.com/cswwp","followers_url":"https://api.github.com/users/cswwp/followers","following_url":"https://api.github.com/users/cswwp/following{/other_user}","gists_url":"https://api.github.com/users/cswwp/gists{/gist_id}","starred_url":"https://api.github.com/users/cswwp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cswwp/subscriptions","organizations_url":"https://api.github.com/users/cswwp/orgs","repos_url":"https://api.github.com/users/cswwp/repos","events_url":"https://api.github.com/users/cswwp/events{/privacy}","received_events_url":"https://api.github.com/users/cswwp/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/comments/797266646","html_url":"https://github.com/BloodAxe/pytorch-toolbelt/issues/49#issuecomment-797266646","issue_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49","id":797266646,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzI2NjY0Ng==","user":{"login":"kevinkwshin","id":38489569,"node_id":"MDQ6VXNlcjM4NDg5NTY5","avatar_url":"https://avatars.githubusercontent.com/u/38489569?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinkwshin","html_url":"https://github.com/kevinkwshin","followers_url":"https://api.github.com/users/kevinkwshin/followers","following_url":"https://api.github.com/users/kevinkwshin/following{/other_user}","gists_url":"https://api.github.com/users/kevinkwshin/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinkwshin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinkwshin/subscriptions","organizations_url":"https://api.github.com/users/kevinkwshin/orgs","repos_url":"https://api.github.com/users/kevinkwshin/repos","events_url":"https://api.github.com/users/kevinkwshin/events{/privacy}","received_events_url":"https://api.github.com/users/kevinkwshin/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T06:24:58Z","updated_at":"2021-03-12T06:24:58Z","author_association":"NONE","body":"I also have same problem.","reactions":{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/comments/797266646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"kevinkwshin","id":38489569,"node_id":"MDQ6VXNlcjM4NDg5NTY5","avatar_url":"https://avatars.githubusercontent.com/u/38489569?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinkwshin","html_url":"https://github.com/kevinkwshin","followers_url":"https://api.github.com/users/kevinkwshin/followers","following_url":"https://api.github.com/users/kevinkwshin/following{/other_user}","gists_url":"https://api.github.com/users/kevinkwshin/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinkwshin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinkwshin/subscriptions","organizations_url":"https://api.github.com/users/kevinkwshin/orgs","repos_url":"https://api.github.com/users/kevinkwshin/repos","events_url":"https://api.github.com/users/kevinkwshin/events{/privacy}","received_events_url":"https://api.github.com/users/kevinkwshin/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/comments/800480644","html_url":"https://github.com/BloodAxe/pytorch-toolbelt/issues/49#issuecomment-800480644","issue_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49","id":800480644,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDQ4MDY0NA==","user":{"login":"Nachimak28","id":23210132,"node_id":"MDQ6VXNlcjIzMjEwMTMy","avatar_url":"https://avatars.githubusercontent.com/u/23210132?v=4","gravatar_id":"","url":"https://api.github.com/users/Nachimak28","html_url":"https://github.com/Nachimak28","followers_url":"https://api.github.com/users/Nachimak28/followers","following_url":"https://api.github.com/users/Nachimak28/following{/other_user}","gists_url":"https://api.github.com/users/Nachimak28/gists{/gist_id}","starred_url":"https://api.github.com/users/Nachimak28/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nachimak28/subscriptions","organizations_url":"https://api.github.com/users/Nachimak28/orgs","repos_url":"https://api.github.com/users/Nachimak28/repos","events_url":"https://api.github.com/users/Nachimak28/events{/privacy}","received_events_url":"https://api.github.com/users/Nachimak28/received_events","type":"User","site_admin":false},"created_at":"2021-03-16T17:53:35Z","updated_at":"2021-03-17T06:50:12Z","author_association":"NONE","body":"Correct me if I'm wrong...\r\nThis might be a documentation problem, without changing the Decoder module class, all one needs to do is pass the\r\nencoder channels to the decoder_features with one less element `decoder_features=self.encoder.channels[1:]` adn this should hopefully solve the issue\r\n\r\n\r\n```python\r\nclass UNet(nn.Module):\r\n    def __init__(self, input_channels, num_classes):\r\n        super().__init__()\r\n        self.encoder = E.UnetEncoder(in_channels=input_channels, out_channels=32, growth_factor=2)\r\n        self.decoder = D.UNetDecoder(self.encoder.channels, decoder_features=self.encoder.channels[1:])\r\n        self.logits = nn.Conv2d(self.decoder.channels[0], num_classes, kernel_size=1)\r\n\r\n    def forward(self, x):\r\n        x = self.encoder(x)\r\n        x = self.decoder(x)\r\n        return self.logits(x[0])\r\n    \r\nmodel= UNet(input_channels= 3, num_classes= 1)\r\n\r\nout = model(torch.randn(2, 3, 512, 512))\r\nprint(out.shape)\r\n```\r\n\r\nOutput:\r\n\r\n```python\r\ntorch.Size([2, 1, 512, 512])\r\n```\r\n\r\n\r\nPrinting out the model gives the following output:\r\n```python\r\nUNet(\r\n  (encoder): UnetEncoder(\r\n    (layer0): UnetBlock(\r\n      (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (abn1): Sequential(\r\n        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n      )\r\n      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (abn2): Sequential(\r\n        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n        (relu): ReLU(inplace=True)\r\n      )\r\n    )\r\n    (layer1): Sequential(\r\n      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\r\n      (conv): UnetBlock(\r\n        (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn1): Sequential(\r\n          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn2): Sequential(\r\n          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n      )\r\n    )\r\n    (layer2): Sequential(\r\n      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\r\n      (conv): UnetBlock(\r\n        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn1): Sequential(\r\n          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn2): Sequential(\r\n          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n      )\r\n    )\r\n    (layer3): Sequential(\r\n      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\r\n      (conv): UnetBlock(\r\n        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn1): Sequential(\r\n          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn2): Sequential(\r\n          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n      )\r\n    )\r\n  )\r\n  (decoder): UNetDecoder(\r\n    (blocks): ModuleList(\r\n      (0): UnetBlock(\r\n        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn1): Sequential(\r\n          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn2): Sequential(\r\n          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n      )\r\n      (1): UnetBlock(\r\n        (conv1): Conv2d(192, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn1): Sequential(\r\n          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn2): Sequential(\r\n          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n      )\r\n      (2): UnetBlock(\r\n        (conv1): Conv2d(96, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn1): Sequential(\r\n          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n        (abn2): Sequential(\r\n          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\r\n          (relu): ReLU(inplace=True)\r\n        )\r\n      )\r\n    )\r\n    (upsamples): ModuleList(\r\n      (0): ConvTranspose2d(256, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\r\n      (1): ConvTranspose2d(256, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\r\n      (2): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\r\n    )\r\n  )\r\n  (logits): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))\r\n)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/comments/800480644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"Nachimak28","id":23210132,"node_id":"MDQ6VXNlcjIzMjEwMTMy","avatar_url":"https://avatars.githubusercontent.com/u/23210132?v=4","gravatar_id":"","url":"https://api.github.com/users/Nachimak28","html_url":"https://github.com/Nachimak28","followers_url":"https://api.github.com/users/Nachimak28/followers","following_url":"https://api.github.com/users/Nachimak28/following{/other_user}","gists_url":"https://api.github.com/users/Nachimak28/gists{/gist_id}","starred_url":"https://api.github.com/users/Nachimak28/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nachimak28/subscriptions","organizations_url":"https://api.github.com/users/Nachimak28/orgs","repos_url":"https://api.github.com/users/Nachimak28/repos","events_url":"https://api.github.com/users/Nachimak28/events{/privacy}","received_events_url":"https://api.github.com/users/Nachimak28/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/comments/800631519","html_url":"https://github.com/BloodAxe/pytorch-toolbelt/issues/49#issuecomment-800631519","issue_url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/49","id":800631519,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDYzMTUxOQ==","user":{"login":"BloodAxe","id":532320,"node_id":"MDQ6VXNlcjUzMjMyMA==","avatar_url":"https://avatars.githubusercontent.com/u/532320?v=4","gravatar_id":"","url":"https://api.github.com/users/BloodAxe","html_url":"https://github.com/BloodAxe","followers_url":"https://api.github.com/users/BloodAxe/followers","following_url":"https://api.github.com/users/BloodAxe/following{/other_user}","gists_url":"https://api.github.com/users/BloodAxe/gists{/gist_id}","starred_url":"https://api.github.com/users/BloodAxe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BloodAxe/subscriptions","organizations_url":"https://api.github.com/users/BloodAxe/orgs","repos_url":"https://api.github.com/users/BloodAxe/repos","events_url":"https://api.github.com/users/BloodAxe/events{/privacy}","received_events_url":"https://api.github.com/users/BloodAxe/received_events","type":"User","site_admin":false},"created_at":"2021-03-16T21:44:31Z","updated_at":"2021-03-16T21:44:31Z","author_association":"OWNER","body":"Please take a look on the working example of the segmentation model available here: https://github.com/BloodAxe/pytorch-toolbelt/blob/develop/pytorch_toolbelt/zoo/segmentation.py#L92\r\nAs a rule of thumb - number of decoder stages is less by one than number of the encoder feature maps. ","reactions":{"url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/comments/800631519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"BloodAxe","id":532320,"node_id":"MDQ6VXNlcjUzMjMyMA==","avatar_url":"https://avatars.githubusercontent.com/u/532320?v=4","gravatar_id":"","url":"https://api.github.com/users/BloodAxe","html_url":"https://github.com/BloodAxe","followers_url":"https://api.github.com/users/BloodAxe/followers","following_url":"https://api.github.com/users/BloodAxe/following{/other_user}","gists_url":"https://api.github.com/users/BloodAxe/gists{/gist_id}","starred_url":"https://api.github.com/users/BloodAxe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BloodAxe/subscriptions","organizations_url":"https://api.github.com/users/BloodAxe/orgs","repos_url":"https://api.github.com/users/BloodAxe/repos","events_url":"https://api.github.com/users/BloodAxe/events{/privacy}","received_events_url":"https://api.github.com/users/BloodAxe/received_events","type":"User","site_admin":false}},{"id":4467058215,"node_id":"MDExOkNsb3NlZEV2ZW50NDQ2NzA1ODIxNQ==","url":"https://api.github.com/repos/BloodAxe/pytorch-toolbelt/issues/events/4467058215","actor":{"login":"BloodAxe","id":532320,"node_id":"MDQ6VXNlcjUzMjMyMA==","avatar_url":"https://avatars.githubusercontent.com/u/532320?v=4","gravatar_id":"","url":"https://api.github.com/users/BloodAxe","html_url":"https://github.com/BloodAxe","followers_url":"https://api.github.com/users/BloodAxe/followers","following_url":"https://api.github.com/users/BloodAxe/following{/other_user}","gists_url":"https://api.github.com/users/BloodAxe/gists{/gist_id}","starred_url":"https://api.github.com/users/BloodAxe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BloodAxe/subscriptions","organizations_url":"https://api.github.com/users/BloodAxe/orgs","repos_url":"https://api.github.com/users/BloodAxe/repos","events_url":"https://api.github.com/users/BloodAxe/events{/privacy}","received_events_url":"https://api.github.com/users/BloodAxe/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2021-03-16T21:44:32Z","state_reason":null,"performed_via_github_app":null}]