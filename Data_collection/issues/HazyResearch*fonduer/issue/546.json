{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/546","repository_url":"https://api.github.com/repos/HazyResearch/fonduer","labels_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/546/labels{/name}","comments_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/546/comments","events_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/546/events","html_url":"https://github.com/HazyResearch/fonduer/issues/546","id":987163637,"node_id":"MDU6SXNzdWU5ODcxNjM2Mzc=","number":546,"title":"CandidateExtractor doesn't scale for larger relations","user":{"login":"robbieculkin","id":20375994,"node_id":"MDQ6VXNlcjIwMzc1OTk0","avatar_url":"https://avatars.githubusercontent.com/u/20375994?v=4","gravatar_id":"","url":"https://api.github.com/users/robbieculkin","html_url":"https://github.com/robbieculkin","followers_url":"https://api.github.com/users/robbieculkin/followers","following_url":"https://api.github.com/users/robbieculkin/following{/other_user}","gists_url":"https://api.github.com/users/robbieculkin/gists{/gist_id}","starred_url":"https://api.github.com/users/robbieculkin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robbieculkin/subscriptions","organizations_url":"https://api.github.com/users/robbieculkin/orgs","repos_url":"https://api.github.com/users/robbieculkin/repos","events_url":"https://api.github.com/users/robbieculkin/events{/privacy}","received_events_url":"https://api.github.com/users/robbieculkin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-09-02T21:04:37Z","updated_at":"2021-09-02T21:24:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, thanks for providing this framework. My group has run into a bit of a snag:\r\n\r\nFor context, we've successfully completed candidate extraction & labeling for binary relations, with reasonable runtimes. With parallelism = 6, candidate extraction takes ~2 minutes per document.\r\n\r\nWe've since moved on to a 3-ary relation that is very similar to the binary relation. This 3-ary relation shares some mentions with the binary relation, and uses a very similar candidate extractor. We have done performance testing for the 3-ary throttler function and found it to have a very similar runtime to the binary throttler. Candidate extraction now takes **4 hours** per document. This immense slowdown is due to the fact that computational complexity scales exponentially for each entity added to a relation. \r\n\r\nHere are some numbers from our use case:\r\n* Mention A: 800 mentions found\r\n* Mention B: 140 mentions found\r\n* Mention C: 150 mentions found\r\n\r\nIf our relation only includes (A,B), we have a total of 800\\*140 = 112,000 temporary candidates to evaluate with our throttler. Should we add mention C to form the relation (A,B,C), our total now grows to 800\\*140\\*150 = 16.8 million temporary candidates. We're unable to narrow our mention matchers further without excluding true positives.\r\n\r\nThis slowdown makes the Fonduer framework effectively unusable for any large-scale use case that requires relations with more than 2 entities. Can you provide guidance to address this issue?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/546/timeline","performed_via_github_app":null,"state_reason":null}