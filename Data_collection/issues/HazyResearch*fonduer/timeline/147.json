[{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/420839234","html_url":"https://github.com/HazyResearch/fonduer/issues/147#issuecomment-420839234","issue_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/147","id":420839234,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMDgzOTIzNA==","user":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false},"created_at":"2018-09-13T00:09:42Z","updated_at":"2018-09-13T00:09:42Z","author_association":"COLLABORATOR","body":"> I saw that Context types of candidate_subclass args are always set to Span in the database model. From my understanding, this can be any Context type (Sentence, Paragraph, etc.) but hasn't been implemented to do so. Is there another way to define this without manually editing the database?\r\n\r\nRight now, fonduer supports `Span` and `Image` as members of `candidate_subclass`, and the one you observed is because you define `candidate_subclass` with `Span`.\r\n\r\n> On the same token, CandidateExtractor.apply() strictly generates TemporarySpans to represent candidates, which would disregard any changes to the Context type of any candidate_subclass arg. I also wonder if it's current possible to specify the Context that the CandidateExtractor considers to match the candidate model.\r\n\r\nThis is user-defined. If users want to have different types of `Context`s to extract, they need to update the `MentionSpace` to support that.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/420839234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421037370","html_url":"https://github.com/HazyResearch/fonduer/issues/147#issuecomment-421037370","issue_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/147","id":421037370,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMTAzNzM3MA==","user":{"login":"mfboulos","id":25018328,"node_id":"MDQ6VXNlcjI1MDE4MzI4","avatar_url":"https://avatars.githubusercontent.com/u/25018328?v=4","gravatar_id":"","url":"https://api.github.com/users/mfboulos","html_url":"https://github.com/mfboulos","followers_url":"https://api.github.com/users/mfboulos/followers","following_url":"https://api.github.com/users/mfboulos/following{/other_user}","gists_url":"https://api.github.com/users/mfboulos/gists{/gist_id}","starred_url":"https://api.github.com/users/mfboulos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfboulos/subscriptions","organizations_url":"https://api.github.com/users/mfboulos/orgs","repos_url":"https://api.github.com/users/mfboulos/repos","events_url":"https://api.github.com/users/mfboulos/events{/privacy}","received_events_url":"https://api.github.com/users/mfboulos/received_events","type":"User","site_admin":false},"created_at":"2018-09-13T14:56:38Z","updated_at":"2018-09-13T14:56:38Z","author_association":"NONE","body":"I have 2 questions then. Would it be feasible to expand the scope of possible contexts for candidate_subclass? And also, seeing how there's not much documentation for this project, where can I define a Context to extract? I have not come across MentionSpace in any of my exploring through the source code.\r\n\r\nNote: for most cases where users are asking for clarity such as this, until there is a full set of documentation for how these things are possible, it might be necessary to give more insight on how these things are accomplished. I personally have very little Python experience, so exploring and understanding the source code can be exhausting and takes a lot of time out of the task that I'm using Fonduer for, but it's also my only option to build good foundational knowledge on its functionalities.","reactions":{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421037370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mfboulos","id":25018328,"node_id":"MDQ6VXNlcjI1MDE4MzI4","avatar_url":"https://avatars.githubusercontent.com/u/25018328?v=4","gravatar_id":"","url":"https://api.github.com/users/mfboulos","html_url":"https://github.com/mfboulos","followers_url":"https://api.github.com/users/mfboulos/followers","following_url":"https://api.github.com/users/mfboulos/following{/other_user}","gists_url":"https://api.github.com/users/mfboulos/gists{/gist_id}","starred_url":"https://api.github.com/users/mfboulos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfboulos/subscriptions","organizations_url":"https://api.github.com/users/mfboulos/orgs","repos_url":"https://api.github.com/users/mfboulos/repos","events_url":"https://api.github.com/users/mfboulos/events{/privacy}","received_events_url":"https://api.github.com/users/mfboulos/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421121223","html_url":"https://github.com/HazyResearch/fonduer/issues/147#issuecomment-421121223","issue_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/147","id":421121223,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMTEyMTIyMw==","user":{"login":"lukehsiao","id":7573542,"node_id":"MDQ6VXNlcjc1NzM1NDI=","avatar_url":"https://avatars.githubusercontent.com/u/7573542?v=4","gravatar_id":"","url":"https://api.github.com/users/lukehsiao","html_url":"https://github.com/lukehsiao","followers_url":"https://api.github.com/users/lukehsiao/followers","following_url":"https://api.github.com/users/lukehsiao/following{/other_user}","gists_url":"https://api.github.com/users/lukehsiao/gists{/gist_id}","starred_url":"https://api.github.com/users/lukehsiao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukehsiao/subscriptions","organizations_url":"https://api.github.com/users/lukehsiao/orgs","repos_url":"https://api.github.com/users/lukehsiao/repos","events_url":"https://api.github.com/users/lukehsiao/events{/privacy}","received_events_url":"https://api.github.com/users/lukehsiao/received_events","type":"User","site_admin":false},"created_at":"2018-09-13T19:18:03Z","updated_at":"2018-09-13T19:18:38Z","author_association":"CONTRIBUTOR","body":"> I have not come across MentionSpace in any of my exploring through the source code.\r\n\r\nIt is going to be renamed `MentionSpace` in v0.3.0. In v0.2.3 it is called `CandidateSpace`. \r\n\r\nTo see some more of the functionalities, including defining a custom MentionSpace/CandidateSpace, i recommend checking out the [Tutorials](https://github.com/hazyresearch/fonduer-tutorials). Althought we do not have any tutorials in expanding the scope of possible contexts to extract, we do show custom MentionSpace/CandidateSpaces for the hardware application that creates new Spans for implied text.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421121223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"lukehsiao","id":7573542,"node_id":"MDQ6VXNlcjc1NzM1NDI=","avatar_url":"https://avatars.githubusercontent.com/u/7573542?v=4","gravatar_id":"","url":"https://api.github.com/users/lukehsiao","html_url":"https://github.com/lukehsiao","followers_url":"https://api.github.com/users/lukehsiao/followers","following_url":"https://api.github.com/users/lukehsiao/following{/other_user}","gists_url":"https://api.github.com/users/lukehsiao/gists{/gist_id}","starred_url":"https://api.github.com/users/lukehsiao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukehsiao/subscriptions","organizations_url":"https://api.github.com/users/lukehsiao/orgs","repos_url":"https://api.github.com/users/lukehsiao/repos","events_url":"https://api.github.com/users/lukehsiao/events{/privacy}","received_events_url":"https://api.github.com/users/lukehsiao/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421150979","html_url":"https://github.com/HazyResearch/fonduer/issues/147#issuecomment-421150979","issue_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/147","id":421150979,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMTE1MDk3OQ==","user":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false},"created_at":"2018-09-13T20:58:39Z","updated_at":"2018-09-13T20:58:39Z","author_association":"COLLABORATOR","body":"Just to share you more information.\r\n\r\n> Would it be feasible to expand the scope of possible contexts for candidate_subclass?\r\n\r\nThe answer is YES. The users can customize the `CandidateSpace` to the information they want to extract. As Luke mentioned, we have tutorials to show how to use it and there is a [hardware_imamge tutorial](https://github.com/HazyResearch/fonduer-tutorials/tree/master/hardware_image) to show how to extract images as candidates. In the v0.3.0, here are the pointer to how we build these [functionalities](https://github.com/HazyResearch/fonduer/tree/master/src/fonduer/candidates).\r\n\r\n> And also, seeing how there's not much documentation for this project, where can I define a Context to extract?\r\n\r\nWe are pushing to have more documentation in the next release (v0.3.0).\r\n\r\nThanks for your comments/feedback!!!","reactions":{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421150979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false}},{"id":1844667152,"node_id":"MDEyOkxhYmVsZWRFdmVudDE4NDQ2NjcxNTI=","url":"https://api.github.com/repos/HazyResearch/fonduer/issues/events/1844667152","actor":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2018-09-13T21:00:41Z","label":{"name":"discussion","color":"d876e3"},"performed_via_github_app":null},{"id":1844667486,"node_id":"MDEyOkxhYmVsZWRFdmVudDE4NDQ2Njc0ODY=","url":"https://api.github.com/repos/HazyResearch/fonduer/issues/events/1844667486","actor":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2018-09-13T21:00:52Z","label":{"name":"enhancement","color":"a2eeef"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421449435","html_url":"https://github.com/HazyResearch/fonduer/issues/147#issuecomment-421449435","issue_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/147","id":421449435,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMTQ0OTQzNQ==","user":{"login":"mfboulos","id":25018328,"node_id":"MDQ6VXNlcjI1MDE4MzI4","avatar_url":"https://avatars.githubusercontent.com/u/25018328?v=4","gravatar_id":"","url":"https://api.github.com/users/mfboulos","html_url":"https://github.com/mfboulos","followers_url":"https://api.github.com/users/mfboulos/followers","following_url":"https://api.github.com/users/mfboulos/following{/other_user}","gists_url":"https://api.github.com/users/mfboulos/gists{/gist_id}","starred_url":"https://api.github.com/users/mfboulos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfboulos/subscriptions","organizations_url":"https://api.github.com/users/mfboulos/orgs","repos_url":"https://api.github.com/users/mfboulos/repos","events_url":"https://api.github.com/users/mfboulos/events{/privacy}","received_events_url":"https://api.github.com/users/mfboulos/received_events","type":"User","site_admin":false},"created_at":"2018-09-14T18:42:48Z","updated_at":"2018-09-14T18:42:48Z","author_association":"NONE","body":"Thanks! I understand how the CandidateSpace the user wants to extract is customizable, but only to the extent of Spans and Images. Do you foresee this expanding further, i.e. Sentences?","reactions":{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421449435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"mfboulos","id":25018328,"node_id":"MDQ6VXNlcjI1MDE4MzI4","avatar_url":"https://avatars.githubusercontent.com/u/25018328?v=4","gravatar_id":"","url":"https://api.github.com/users/mfboulos","html_url":"https://github.com/mfboulos","followers_url":"https://api.github.com/users/mfboulos/followers","following_url":"https://api.github.com/users/mfboulos/following{/other_user}","gists_url":"https://api.github.com/users/mfboulos/gists{/gist_id}","starred_url":"https://api.github.com/users/mfboulos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfboulos/subscriptions","organizations_url":"https://api.github.com/users/mfboulos/orgs","repos_url":"https://api.github.com/users/mfboulos/repos","events_url":"https://api.github.com/users/mfboulos/events{/privacy}","received_events_url":"https://api.github.com/users/mfboulos/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421496277","html_url":"https://github.com/HazyResearch/fonduer/issues/147#issuecomment-421496277","issue_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/147","id":421496277,"node_id":"MDEyOklzc3VlQ29tbWVudDQyMTQ5NjI3Nw==","user":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false},"created_at":"2018-09-14T22:04:03Z","updated_at":"2018-09-14T22:04:03Z","author_association":"COLLABORATOR","body":"Some of our collaborators' applications extract candidates based on the full sentence. So I would say, Yes. And it should be easy to extend to other objects well.","reactions":{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/421496277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false}},{"id":1888035782,"node_id":"MDExOkNsb3NlZEV2ZW50MTg4ODAzNTc4Mg==","url":"https://api.github.com/repos/HazyResearch/fonduer/issues/events/1888035782","actor":{"login":"senwu","id":5580008,"node_id":"MDQ6VXNlcjU1ODAwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/5580008?v=4","gravatar_id":"","url":"https://api.github.com/users/senwu","html_url":"https://github.com/senwu","followers_url":"https://api.github.com/users/senwu/followers","following_url":"https://api.github.com/users/senwu/following{/other_user}","gists_url":"https://api.github.com/users/senwu/gists{/gist_id}","starred_url":"https://api.github.com/users/senwu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/senwu/subscriptions","organizations_url":"https://api.github.com/users/senwu/orgs","repos_url":"https://api.github.com/users/senwu/repos","events_url":"https://api.github.com/users/senwu/events{/privacy}","received_events_url":"https://api.github.com/users/senwu/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2018-10-05T20:20:37Z","state_reason":null,"performed_via_github_app":null},{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/631376928","html_url":"https://github.com/HazyResearch/fonduer/issues/147#issuecomment-631376928","issue_url":"https://api.github.com/repos/HazyResearch/fonduer/issues/147","id":631376928,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMTM3NjkyOA==","user":{"login":"kaikun213","id":18282228,"node_id":"MDQ6VXNlcjE4MjgyMjI4","avatar_url":"https://avatars.githubusercontent.com/u/18282228?v=4","gravatar_id":"","url":"https://api.github.com/users/kaikun213","html_url":"https://github.com/kaikun213","followers_url":"https://api.github.com/users/kaikun213/followers","following_url":"https://api.github.com/users/kaikun213/following{/other_user}","gists_url":"https://api.github.com/users/kaikun213/gists{/gist_id}","starred_url":"https://api.github.com/users/kaikun213/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaikun213/subscriptions","organizations_url":"https://api.github.com/users/kaikun213/orgs","repos_url":"https://api.github.com/users/kaikun213/repos","events_url":"https://api.github.com/users/kaikun213/events{/privacy}","received_events_url":"https://api.github.com/users/kaikun213/received_events","type":"User","site_admin":false},"created_at":"2020-05-20T10:03:30Z","updated_at":"2020-05-20T10:03:30Z","author_association":"CONTRIBUTOR","body":"I am having a similar issue. In my case the spans can not just be in the cells of a table but also in the URL of an image or the document name. I wrote a quick and dirty custom Mentionspace and MentionRegex:\r\n\r\n``` python\r\nfrom fonduer.candidates.models.temporary_context import TemporaryContext\r\nfrom fonduer.candidates import MentionNgrams, MentionDocuments, MentionFigures\r\nfrom typing import Collection, Optional, Iterator\r\n\r\nclass StationMentionSpace(MentionNgrams):\r\n    \"\"\"Defines the **space** of Mentions.\r\n\r\n    Defines the space of Mentions as all n-grams (n_min <= n <= n_max) in a\r\n    Document *x*, divided into Sentences inside of html elements (such as table\r\n    cells).\r\n\r\n    :param n_min: Lower limit for the generated n_grams.\r\n    :type n_min: int\r\n    :param n_max: Upper limit for the generated n_grams.\r\n    :type n_max: int\r\n    :param split_tokens: Tokens, on which unigrams are split into two separate\r\n        unigrams.\r\n    :type split_tokens: tuple, list of str.\r\n    :param types: If specified, only yield TemporaryFigureMentions whose url ends in\r\n        one of the specified types. Example: types=[\"png\", \"jpg\", \"jpeg\"].\r\n    :type types: list, tuple of str\r\n    \"\"\"\r\n\r\n    def __init__(\r\n        self, n_min: int = 1, n_max: int = 5, split_tokens: Collection[str] = [], types: Optional[str] = None\r\n    ) -> None:\r\n        \"\"\"Initialize MentionNgrams.\"\"\"\r\n        MentionNgrams.__init__(self, n_min=n_min, n_max=n_max, split_tokens=split_tokens)\r\n        if types is not None:\r\n            self.types = [t.strip().lower() for t in types]\r\n        else:\r\n            self.types = None\r\n\r\n    def apply(self, doc: Document) -> Iterator[TemporaryContext]:\r\n        \"\"\"Generate MentionNgrams from a Document by parsing all of its Sentences.\r\n\r\n        :param doc: The ``Document`` to parse.\r\n        :type doc: ``Document``\r\n        :raises TypeError: If the input doc is not of type ``Document``.\r\n        \"\"\"\r\n        if not isinstance(doc, Document):\r\n            raise TypeError(\r\n                \"Input Contexts to MentionNgrams.apply() must be of type Document\"\r\n            )\r\n\r\n        for ts in MentionNgrams.apply(self, doc):\r\n            yield ts\r\n            \r\n        for ts in MentionDocuments.apply(self, doc):\r\n            yield ts\r\n            \r\n        for ts in MentionFigures.apply(self, doc):\r\n            yield ts\r\n```\r\n\r\n``` python\r\nfrom fonduer.candidates.models.document_mention import TemporaryDocumentMention\r\nfrom fonduer.candidates.models.figure_mention import TemporaryFigureMention\r\nfrom fonduer.candidates.models.span_mention import TemporarySpanMention\r\nfrom fonduer.candidates.matchers import RegexMatchSpan\r\n\r\nclass RegexMatchFull(RegexMatchSpan):\r\n    \"\"\"Matches regex pattern on **full concatenated span, document-name and figure-urls**.\r\n\r\n    :param rgx: The RegEx pattern to use.\r\n    :type rgx: str\r\n    :param ignore_case: Whether or not to ignore case in the RegEx. Default\r\n        True.\r\n    :type ignore_case: bool\r\n    :param search: If True, *search* the regex pattern through the concatenated span.\r\n        If False, try to *match* the regex patten only at its beginning. Default False.\r\n    :type search: bool\r\n    :param full_match: If True, wrap the provided rgx with ``(<rgx>)$``.\r\n        Default True.\r\n    :type full_match: bool\r\n    :param longest_match_only: If True, only return the longest match. Default True.\r\n        Will be overridden by the parent matcher like :class:`Union` when it is wrapped\r\n        by :class:`Union`, :class:`Intersect`, or :class:`Inverse`.\r\n    :type longest_match_only: bool\r\n    \"\"\"\r\n\r\n    def _f(self, m: TemporaryContext) -> bool:\r\n        \"\"\"The internal (non-composed) version of filter function f\"\"\"\r\n        \r\n        def apply_rgx(attrib_span):\r\n            # search for string as e.g. \"_\" split operator is used\r\n            return (\r\n                True\r\n                if self.r.search(attrib_span)\r\n                is not None\r\n                else False\r\n            )\r\n        if isinstance(m, TemporarySpanMention):\r\n            return RegexMatchSpan._f(self, m)\r\n        if isinstance(m, TemporaryFigureMention):\r\n            return apply_rgx(m.figure.url)\r\n        if isinstance(m, TemporaryDocumentMention):\r\n            return apply_rgx(m.document.name)\r\n        \r\n        raise ValueError(\r\n            f\"\"\"\r\n            {self.__class__.__name__} only supports \r\n            TemporarySpanMention, TemporaryFigureMention and TemporaryDocumentMention\r\n            \"\"\"\r\n        )\r\n```\r\n\r\nIt does extract the DocumentMentions and FigureMentions next to the SpanMentions.\r\nHowever, I ran into two problems:\r\n\r\n1) It will mention the whole document/figure and I can not refer only a span of the name/URL. Thus I would have to apply parser functions each time I use the candidate later e.g. to compare against the gold set or extract the final data.\r\n\r\n2) Even though the mentions are extracted, somehow the candidate extractor does not build any candidates from the DocumentMentions and FigureMentions. My candidate extraction code is similar to the hardware-tutorial.\r\n\r\nI will look more into it, but I would like to know if there is a simpler way to reference these spans? And what might fail the candidate extraction?","reactions":{"url":"https://api.github.com/repos/HazyResearch/fonduer/issues/comments/631376928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"kaikun213","id":18282228,"node_id":"MDQ6VXNlcjE4MjgyMjI4","avatar_url":"https://avatars.githubusercontent.com/u/18282228?v=4","gravatar_id":"","url":"https://api.github.com/users/kaikun213","html_url":"https://github.com/kaikun213","followers_url":"https://api.github.com/users/kaikun213/followers","following_url":"https://api.github.com/users/kaikun213/following{/other_user}","gists_url":"https://api.github.com/users/kaikun213/gists{/gist_id}","starred_url":"https://api.github.com/users/kaikun213/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaikun213/subscriptions","organizations_url":"https://api.github.com/users/kaikun213/orgs","repos_url":"https://api.github.com/users/kaikun213/repos","events_url":"https://api.github.com/users/kaikun213/events{/privacy}","received_events_url":"https://api.github.com/users/kaikun213/received_events","type":"User","site_admin":false}}]