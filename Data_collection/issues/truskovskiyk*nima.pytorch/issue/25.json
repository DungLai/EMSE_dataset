{"url":"https://api.github.com/repos/truskovskiyk/nima.pytorch/issues/25","repository_url":"https://api.github.com/repos/truskovskiyk/nima.pytorch","labels_url":"https://api.github.com/repos/truskovskiyk/nima.pytorch/issues/25/labels{/name}","comments_url":"https://api.github.com/repos/truskovskiyk/nima.pytorch/issues/25/comments","events_url":"https://api.github.com/repos/truskovskiyk/nima.pytorch/issues/25/events","html_url":"https://github.com/truskovskiyk/nima.pytorch/issues/25","id":488392038,"node_id":"MDU6SXNzdWU0ODgzOTIwMzg=","number":25,"title":"Using adaptive pooling to support different input image dimensions","user":{"login":"nitinsurya","id":1701314,"node_id":"MDQ6VXNlcjE3MDEzMTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1701314?v=4","gravatar_id":"","url":"https://api.github.com/users/nitinsurya","html_url":"https://github.com/nitinsurya","followers_url":"https://api.github.com/users/nitinsurya/followers","following_url":"https://api.github.com/users/nitinsurya/following{/other_user}","gists_url":"https://api.github.com/users/nitinsurya/gists{/gist_id}","starred_url":"https://api.github.com/users/nitinsurya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nitinsurya/subscriptions","organizations_url":"https://api.github.com/users/nitinsurya/orgs","repos_url":"https://api.github.com/users/nitinsurya/repos","events_url":"https://api.github.com/users/nitinsurya/events{/privacy}","received_events_url":"https://api.github.com/users/nitinsurya/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-09-03T04:58:28Z","updated_at":"2020-06-13T00:27:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently, the transformations resize any image to 224x224, due to which lot of image details could be lost. Maybe the model should be given a choice to keep the information important.\r\n\r\nTo do this, after the final layer of the base/pretrained model, an [adaptive pooling layer](https://pytorch.org/docs/stable/nn.html#torch.nn.AdaptiveMaxPool2d) would reset to the shape of input to the dense layer.\r\n\r\nAlthough, this might need some fine tuning of the base model after the final fc layer is trained to improve the results further.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/truskovskiyk/nima.pytorch/issues/25/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/truskovskiyk/nima.pytorch/issues/25/timeline","performed_via_github_app":null,"state_reason":null}