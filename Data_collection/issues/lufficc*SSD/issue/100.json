{"url":"https://api.github.com/repos/lufficc/SSD/issues/100","repository_url":"https://api.github.com/repos/lufficc/SSD","labels_url":"https://api.github.com/repos/lufficc/SSD/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/lufficc/SSD/issues/100/comments","events_url":"https://api.github.com/repos/lufficc/SSD/issues/100/events","html_url":"https://github.com/lufficc/SSD/issues/100","id":498999231,"node_id":"MDU6SXNzdWU0OTg5OTkyMzE=","number":100,"title":"Deadlock at synchronize when using multiple GPUs","user":{"login":"nmoran","id":433344,"node_id":"MDQ6VXNlcjQzMzM0NA==","avatar_url":"https://avatars.githubusercontent.com/u/433344?v=4","gravatar_id":"","url":"https://api.github.com/users/nmoran","html_url":"https://github.com/nmoran","followers_url":"https://api.github.com/users/nmoran/followers","following_url":"https://api.github.com/users/nmoran/following{/other_user}","gists_url":"https://api.github.com/users/nmoran/gists{/gist_id}","starred_url":"https://api.github.com/users/nmoran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nmoran/subscriptions","organizations_url":"https://api.github.com/users/nmoran/orgs","repos_url":"https://api.github.com/users/nmoran/repos","events_url":"https://api.github.com/users/nmoran/events{/privacy}","received_events_url":"https://api.github.com/users/nmoran/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-09-26T16:45:07Z","updated_at":"2020-11-13T19:39:02Z","closed_at":"2020-11-13T19:39:02Z","author_association":"NONE","active_lock_reason":null,"body":"When running the `train.py` script on two V100 GPUs with the VOC dataset it hangs after the first evaluation step. One GPU has been at 100% for 2 hours while the other one is idle. Looking at the code it appears to be in the synchonize function at the barrier.\r\n\r\n```\r\ndef synchronize():\r\n    \"\"\"\r\n       Helper function to synchronize (barrier) among all processes when\r\n       using distributed training\r\n    \"\"\"\r\n    if not dist.is_available():\r\n        return\r\n    if not dist.is_initialized():\r\n        return\r\n    world_size = dist.get_world_size()\r\n    if world_size == 1:\r\n        return\r\n    dist.barrier()\r\n```\r\n\r\nAny ideas on how to solve this. Using Python 3.7.4 with following conda environment:\r\n\r\n```\r\nname: ssd\r\nchannels:\r\n  - pytorch\r\n  - defaults\r\ndependencies:\r\n  - _libgcc_mutex=0.1=main\r\n  - blas=1.0=mkl\r\n  - ca-certificates=2019.8.28=0\r\n  - certifi=2019.9.11=py37_0\r\n  - cffi=1.12.3=py37h2e261b9_0\r\n  - cudatoolkit=10.0.130=0\r\n  - freetype=2.9.1=h8a8886c_1\r\n  - intel-openmp=2019.4=243\r\n  - jpeg=9b=h024ee3a_2\r\n  - libedit=3.1.20181209=hc058e9b_0\r\n  - libffi=3.2.1=hd88cf55_4\r\n  - libgcc-ng=9.1.0=hdf63c60_0\r\n  - libgfortran-ng=7.3.0=hdf63c60_0\r\n  - libpng=1.6.37=hbc83047_0\r\n  - libstdcxx-ng=9.1.0=hdf63c60_0\r\n  - libtiff=4.0.10=h2733197_2\r\n  - mkl=2019.4=243\r\n  - mkl-service=2.3.0=py37he904b0f_0\r\n  - mkl_fft=1.0.14=py37ha843d7b_0\r\n  - mkl_random=1.1.0=py37hd6b4f25_0\r\n  - ncurses=6.1=he6710b0_1\r\n  - ninja=1.9.0=py37hfd86e86_0\r\n  - numpy=1.16.5=py37h7e9f1db_0\r\n  - numpy-base=1.16.5=py37hde5b4d6_0\r\n  - olefile=0.46=py37_0\r\n  - openssl=1.1.1d=h7b6447c_1\r\n  - pillow=6.1.0=py37h34e0f95_0\r\n  - pip=19.2.3=py37_0\r\n  - pycparser=2.19=py37_0\r\n  - python=3.7.4=h265db76_1\r\n  - readline=7.0=h7b6447c_5\r\n  - setuptools=41.2.0=py37_0\r\n  - six=1.12.0=py37_0\r\n  - sqlite=3.29.0=h7b6447c_0\r\n  - tk=8.6.8=hbc83047_0\r\n  - wheel=0.33.6=py37_0\r\n  - xz=5.2.4=h14c3975_4\r\n  - zlib=1.2.11=h7b6447c_3\r\n  - zstd=1.3.7=h0b5b093_0\r\n  - pytorch=1.2.0=py3.7_cuda10.0.130_cudnn7.6.2_0\r\n  - torchvision=0.4.0=py37_cu100\r\n  - pip:\r\n    - absl-py==0.8.0\r\n    - attrs==19.1.0\r\n    - backcall==0.1.0\r\n    - bleach==3.1.0\r\n    - chardet==3.0.4\r\n    - cycler==0.10.0\r\n    - decorator==4.4.0\r\n    - defusedxml==0.6.0\r\n    - entrypoints==0.3\r\n    - grako==3.99.9\r\n    - grpcio==1.23.0\r\n    - idna==2.8\r\n    - ipykernel==5.1.2\r\n - ipython-genutils==0.2.0\r\n    - ipywidgets==7.5.1\r\n    - jedi==0.15.1\r\n    - jinja2==2.10.1\r\n    - jsonpatch==1.24\r\n    - jsonpointer==2.0\r\n    - jsonschema==3.0.2\r\n    - jupyter==1.0.0\r\n    - jupyter-client==5.3.3\r\n    - jupyter-console==6.0.0\r\n    - jupyter-core==4.5.0\r\n    - kiwisolver==1.1.0\r\n    - markdown==3.1.1\r\n    - markupsafe==1.1.1\r\n    - matplotlib==3.1.1\r\n    - mistune==0.8.4\r\n    - nbconvert==5.6.0\r\n    - nbformat==4.4.0\r\n    - notebook==6.0.1\r\n    - opencv-python==4.1.1.26\r\n    - pandas==0.25.1\r\n    - pandocfilters==1.4.2\r\n    - parsewkt==0.1.dev0\r\n    - parso==0.5.1\r\n    - pexpect==4.7.0\r\n    - pickleshare==0.7.5\r\n    - prometheus-client==0.7.1\r\n    - prompt-toolkit==2.0.9\r\n    - protobuf==3.9.2\r\n    - ptyprocess==0.6.0\r\n    - pygments==2.4.2\r\n    - pyparsing==2.4.2\r\n    - pyrsistent==0.15.4\r\n    - python-dateutil==2.8.0\r\n    - pytz==2019.2\r\n    - pyyaml==5.1.2\r\n    - pyzmq==18.1.0\r\n    - qtconsole==4.5.5\r\n    - requests==2.22.0\r\n    - scipy==1.3.1\r\n    - seaborn==0.9.0\r\n    - send2trash==1.5.0\r\n    - shapely==1.6.4.post2\r\n    - tensorboard==2.0.0\r\n    - tensorboardx==1.8\r\n    - terminado==0.8.2\r\n    - testpath==0.4.2\r\n    - torch==1.2.0\r\n    - torchfile==0.1.0\r\n    - tornado==6.0.3\r\n    - tqdm==4.36.1\r\n    - traitlets==4.3.2\r\n    - urllib3==1.25.6\r\n    - visdom==0.1.8.9\r\n    - vizer==0.1.4\r\n    - wcwidth==0.1.7\r\n    - webencodings==0.5.1\r\n    - websocket-client==0.56.0\r\n    - werkzeug==0.16.0\r\n    - widgetsnbextension==3.5.1\r\n    - yacs==0.1.6\r\n```\r\n\r\n\r\n ","closed_by":{"login":"lufficc","id":20706332,"node_id":"MDQ6VXNlcjIwNzA2MzMy","avatar_url":"https://avatars.githubusercontent.com/u/20706332?v=4","gravatar_id":"","url":"https://api.github.com/users/lufficc","html_url":"https://github.com/lufficc","followers_url":"https://api.github.com/users/lufficc/followers","following_url":"https://api.github.com/users/lufficc/following{/other_user}","gists_url":"https://api.github.com/users/lufficc/gists{/gist_id}","starred_url":"https://api.github.com/users/lufficc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lufficc/subscriptions","organizations_url":"https://api.github.com/users/lufficc/orgs","repos_url":"https://api.github.com/users/lufficc/repos","events_url":"https://api.github.com/users/lufficc/events{/privacy}","received_events_url":"https://api.github.com/users/lufficc/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/lufficc/SSD/issues/100/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/lufficc/SSD/issues/100/timeline","performed_via_github_app":null,"state_reason":"completed"}