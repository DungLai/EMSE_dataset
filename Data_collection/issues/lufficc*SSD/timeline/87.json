[{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/520667491","html_url":"https://github.com/lufficc/SSD/issues/87#issuecomment-520667491","issue_url":"https://api.github.com/repos/lufficc/SSD/issues/87","id":520667491,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMDY2NzQ5MQ==","user":{"login":"cnfjsss","id":19989561,"node_id":"MDQ6VXNlcjE5OTg5NTYx","avatar_url":"https://avatars.githubusercontent.com/u/19989561?v=4","gravatar_id":"","url":"https://api.github.com/users/cnfjsss","html_url":"https://github.com/cnfjsss","followers_url":"https://api.github.com/users/cnfjsss/followers","following_url":"https://api.github.com/users/cnfjsss/following{/other_user}","gists_url":"https://api.github.com/users/cnfjsss/gists{/gist_id}","starred_url":"https://api.github.com/users/cnfjsss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnfjsss/subscriptions","organizations_url":"https://api.github.com/users/cnfjsss/orgs","repos_url":"https://api.github.com/users/cnfjsss/repos","events_url":"https://api.github.com/users/cnfjsss/events{/privacy}","received_events_url":"https://api.github.com/users/cnfjsss/received_events","type":"User","site_admin":false},"created_at":"2019-08-13T02:46:36Z","updated_at":"2019-08-13T02:46:36Z","author_association":"NONE","body":"import torch\r\nimport torchvision\r\nimport torchvision.models as models\r\nimport argparse\r\nimport torch.nn as nn\r\nfrom torch.nn.parallel import DistributedDataParallel\r\nfrom ssd.modeling.detector import build_detection_model\r\nfrom ssd.config import cfg\r\nfrom ssd.utils.checkpoint import CheckPointer\r\n\r\ndef main():\r\n    parser = argparse.ArgumentParser(description=\"SSD weights file converter.\")\r\n    parser.add_argument(\r\n        \"--config-file\",\r\n        default=\"\",\r\n        metavar=\"FILE\",\r\n        help=\"path to config file\",\r\n        type=str,\r\n    )\r\n    parser.add_argument(\"--ckpt\", type=str, default=None, help=\"Trained weights.\")\r\n\r\n    args = parser.parse_args()\r\n    cfg.merge_from_file(args.config_file)\r\n    cfg.freeze()\r\n\r\n    #device = torch.device(\"cuda\")\r\n    device = torch.device(\"cpu\")\r\n    model = build_detection_model(cfg)\r\n    model = model.to(device)\r\n    print(\"###########finish building model...\")\r\n\r\n    state = torch.load(args.ckpt, map_location=torch.device(\"cpu\"))\r\n    if isinstance(model, DistributedDataParallel):\r\n        model = model.module\r\n\r\n    model.load_state_dict(state['model'], strict=True)\r\n    model.eval()\r\n\r\n    example = torch.rand(1, 3, 300, 300)\r\n    traced_script_module = torch.jit.trace(model, example, optimize=False, check_trace=False)\r\n\r\n    output = traced_script_module(example )\r\n\r\n    traced_script_module.save('./outputs/vgg_ssd300_battery/vgg_ssd300_model.pt')\r\n\r\n===============================================================\r\n   Error occur in ssd\\modeling\\box_head\\inference.py. Relative info as follow, I don't know how :\r\n\r\nC:\\workspace\\deeplearning\\SSD_battery>python modelConvert.py --config-file configs/vgg_ssd300_battery.yaml --ckpt outputs/vgg_ssd300_battery/model_011100.pth\r\n\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\detector\\ssd_detector.py\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\box_head.py\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\anchors\\prior_box.py:51: TracerWarning: torch.tensor results are registered as constants in the trace. You can safely ignore this warning if you use this function to create tensors out of constant variables that would be the same every time you call this function. In any other case, this might cause the trace to be incorrect.\r\n  priors = torch.tensor(priors)\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:19: TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  for batch_id in range(batch_size):\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:25: TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  for class_id in range(1, per_img_scores.size(1)):  # skip background\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:29: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  if scores.size(0) == 0:\r\nTraceback (most recent call last):\r\n  File \"modelConvert.py\", line 98, in <module>\r\n    main()\r\n  File \"modelConvert.py\", line 66, in main\r\n    traced_script_module = torch.jit.trace(model, example, optimize=False, check_trace=False)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\jit\\__init__.py\", line 688, in trace\r\n    var_lookup_fn, _force_outplace)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 491, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 481, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"C:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\detector\\ssd_detector.py\", line 17, in forward\r\n    detections, detector_losses = self.box_head(features, targets)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 491, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 481, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"C:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\box_head.py\", line 28, in forward\r\n    return self._forward_test(cls_logits, bbox_pred)\r\n  File \"C:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\box_head.py\", line 50, in _forward_test\r\n    detections = self.post_processor(detections)\r\n  File \"C:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py\", line 38, in __call__\r\n    nmsed_labels = torch.tensor([class_id] * keep.size(0), device=device)\r\nTypeError: mul(): argument 'other' (position 1) must be Tensor, not list\r\n\r\n==========================================================\r\nThe error code seems is:\r\nnmsed_labels = torch.tensor([class_id] * keep.size(0), device=device)\r\n\r\n--->And I try to modify it as \r\n\r\nnmsed_labels = torch.tensor(torch.tensor([class_id]) * keep.size(0), device=device)\r\n\r\nretry it, got another Error, as follows:\r\n=================================================================\r\nC:\\workspace\\deeplearning\\SSD_battery>python modelConvert.py --config-file configs/vgg_ssd300_battery.yaml --ckpt outputs/vgg_ssd300_battery/model_011100.pth\r\n\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\detector\\ssd_detector.py\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\box_head.py\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\anchors\\prior_box.py:51: TracerWarning: torch.tensor results are registered as constants in the trace. You can safely ignore this warning if you use this function to create tensors out of constant variables that would be the same every time you call this function. In any other case, this might cause the trace to be incorrect.\r\n  priors = torch.tensor(priors)\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:19: TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  for batch_id in range(batch_size):\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:25: TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  for class_id in range(1, per_img_scores.size(1)):  # skip background\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:29: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  if scores.size(0) == 0:\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:38: TracerWarning: torch.tensor results are registered as constants in the trace. You can safely ignore this warning if you use this function to create tensors out of constant variables that would be the same every time you call this function. In any other case, this might cause the trace to be incorrect.\r\n  nmsed_labels = torch.tensor(torch.tensor([class_id]) * keep.size(0), device=device)\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:38: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\r\n  nmsed_labels = torch.tensor(torch.tensor([class_id]) * keep.size(0), device=device)\r\nC:\\workspace\\deeplearning\\SSD_battery\\ssd\\modeling\\box_head\\inference.py:54: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  if processed_boxes.size(0) > self.cfg.TEST.MAX_PER_IMAGE > 0:\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\tensor.py:435: RuntimeWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).\r\n  'incorrect results).', category=RuntimeWarning)\r\nTraceback (most recent call last):\r\n  File \"modelConvert.py\", line 98, in <module>\r\n    main()\r\n  File \"modelConvert.py\", line 66, in main\r\n    traced_script_module = torch.jit.trace(model, example, optimize=False, check_trace=False)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\jit\\__init__.py\", line 688, in trace\r\n    var_lookup_fn, _force_outplace)\r\nRuntimeError: Only tensors and (possibly nested) tuples of tensors or dicts are supported as inputs or outputs of traced functions, but instead got value of type Container.\r\nValue: {'boxes': tensor([[-31.3635, -12.4522,  51.6803,  29.8587],\r\n        [273.8119, -27.5646, 319.5384,  44.0863],\r\n        [252.8701, -11.5197, 345.3777,  24.9226],\r\n        [255.8968,  -0.6861, 348.1840,  46.8716],\r\n        [255.9846,  46.9156, 348.1428,  94.8391],\r\n        [255.3452, 238.8537, 348.7160, 286.5271],\r\n        [-37.2208, 272.6428,  46.1568, 318.6552],\r\n        [255.0182, 268.9600, 350.1513, 320.3033],\r\n        [-23.5073, -50.7064,  62.0234,  93.5553],\r\n        [-72.4709, -13.5491, 103.8439,  44.2117],\r\n        [260.7636, -50.6445, 362.5735,  77.7416],\r\n        [209.0299, -14.7150, 373.6892,  51.2166],\r\n        [-31.0414, 219.7984,  50.1903, 372.1953],\r\n        [-75.9403, 265.7273, 120.8142, 335.7289],\r\n        [229.1378, 259.6524, 388.5985, 345.4294],\r\n        [258.6255, 242.1371, 346.8571, 365.5750],\r\n        [  6.6523,  76.8511, 284.6081, 247.5137],\r\n        [-72.4709, -13.5491, 103.8439,  44.2117],\r\n        [213.7746, -16.9424, 383.8231,  54.1286],\r\n        [-13.8108, 218.5596,  51.9411, 411.9127],\r\n        [ -5.0890, -14.4968,   6.0226,   0.6173],\r\n        [264.6134, -62.1498, 338.0179, 110.8623],\r\n        [274.1096, 251.7924, 334.7047, 406.7539]], grad_fn=<CatBackward>), 'labels': tensor([17,  9, 12]), 'scores': tensor([0.0188, 0.0104, 0.0221, 0.0103, 0.0101, 0.0106, 0.0117, 0.0148, 0.0121,\r\n        0.0155, 0.0164, 0.0280, 0.0154, 0.0130, 0.0196, 0.0213, 0.1591, 0.0104,\r\n        0.0104, 0.0107, 0.0213, 0.0102, 0.0118], grad_fn=<CatBackward>)}\r\n\r\n======>I don't know how to resolve it, would you please give out a example for it? Thanks a lot.\r\n","reactions":{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/520667491/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"cnfjsss","id":19989561,"node_id":"MDQ6VXNlcjE5OTg5NTYx","avatar_url":"https://avatars.githubusercontent.com/u/19989561?v=4","gravatar_id":"","url":"https://api.github.com/users/cnfjsss","html_url":"https://github.com/cnfjsss","followers_url":"https://api.github.com/users/cnfjsss/followers","following_url":"https://api.github.com/users/cnfjsss/following{/other_user}","gists_url":"https://api.github.com/users/cnfjsss/gists{/gist_id}","starred_url":"https://api.github.com/users/cnfjsss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnfjsss/subscriptions","organizations_url":"https://api.github.com/users/cnfjsss/orgs","repos_url":"https://api.github.com/users/cnfjsss/repos","events_url":"https://api.github.com/users/cnfjsss/events{/privacy}","received_events_url":"https://api.github.com/users/cnfjsss/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/520667936","html_url":"https://github.com/lufficc/SSD/issues/87#issuecomment-520667936","issue_url":"https://api.github.com/repos/lufficc/SSD/issues/87","id":520667936,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMDY2NzkzNg==","user":{"login":"cnfjsss","id":19989561,"node_id":"MDQ6VXNlcjE5OTg5NTYx","avatar_url":"https://avatars.githubusercontent.com/u/19989561?v=4","gravatar_id":"","url":"https://api.github.com/users/cnfjsss","html_url":"https://github.com/cnfjsss","followers_url":"https://api.github.com/users/cnfjsss/followers","following_url":"https://api.github.com/users/cnfjsss/following{/other_user}","gists_url":"https://api.github.com/users/cnfjsss/gists{/gist_id}","starred_url":"https://api.github.com/users/cnfjsss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnfjsss/subscriptions","organizations_url":"https://api.github.com/users/cnfjsss/orgs","repos_url":"https://api.github.com/users/cnfjsss/repos","events_url":"https://api.github.com/users/cnfjsss/events{/privacy}","received_events_url":"https://api.github.com/users/cnfjsss/received_events","type":"User","site_admin":false},"created_at":"2019-08-13T02:49:19Z","updated_at":"2019-08-13T02:49:19Z","author_association":"NONE","body":"By the way, It works ok when I using your demo.py to inference.","reactions":{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/520667936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"cnfjsss","id":19989561,"node_id":"MDQ6VXNlcjE5OTg5NTYx","avatar_url":"https://avatars.githubusercontent.com/u/19989561?v=4","gravatar_id":"","url":"https://api.github.com/users/cnfjsss","html_url":"https://github.com/cnfjsss","followers_url":"https://api.github.com/users/cnfjsss/followers","following_url":"https://api.github.com/users/cnfjsss/following{/other_user}","gists_url":"https://api.github.com/users/cnfjsss/gists{/gist_id}","starred_url":"https://api.github.com/users/cnfjsss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnfjsss/subscriptions","organizations_url":"https://api.github.com/users/cnfjsss/orgs","repos_url":"https://api.github.com/users/cnfjsss/repos","events_url":"https://api.github.com/users/cnfjsss/events{/privacy}","received_events_url":"https://api.github.com/users/cnfjsss/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/564385500","html_url":"https://github.com/lufficc/SSD/issues/87#issuecomment-564385500","issue_url":"https://api.github.com/repos/lufficc/SSD/issues/87","id":564385500,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDM4NTUwMA==","user":{"login":"shaoeric","id":37291832,"node_id":"MDQ6VXNlcjM3MjkxODMy","avatar_url":"https://avatars.githubusercontent.com/u/37291832?v=4","gravatar_id":"","url":"https://api.github.com/users/shaoeric","html_url":"https://github.com/shaoeric","followers_url":"https://api.github.com/users/shaoeric/followers","following_url":"https://api.github.com/users/shaoeric/following{/other_user}","gists_url":"https://api.github.com/users/shaoeric/gists{/gist_id}","starred_url":"https://api.github.com/users/shaoeric/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shaoeric/subscriptions","organizations_url":"https://api.github.com/users/shaoeric/orgs","repos_url":"https://api.github.com/users/shaoeric/repos","events_url":"https://api.github.com/users/shaoeric/events{/privacy}","received_events_url":"https://api.github.com/users/shaoeric/received_events","type":"User","site_admin":false},"created_at":"2019-12-11T05:25:02Z","updated_at":"2019-12-11T05:25:02Z","author_association":"NONE","body":"> By the way, It works ok when I using your demo.py to inference.\r\ni am in trouble with demo.py, because the default ckpt vgg16_reducedfc.pth from the Internet has missing keys \"model\", could you please tell me how to fix it or share a correct pth file?","reactions":{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/564385500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"shaoeric","id":37291832,"node_id":"MDQ6VXNlcjM3MjkxODMy","avatar_url":"https://avatars.githubusercontent.com/u/37291832?v=4","gravatar_id":"","url":"https://api.github.com/users/shaoeric","html_url":"https://github.com/shaoeric","followers_url":"https://api.github.com/users/shaoeric/followers","following_url":"https://api.github.com/users/shaoeric/following{/other_user}","gists_url":"https://api.github.com/users/shaoeric/gists{/gist_id}","starred_url":"https://api.github.com/users/shaoeric/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shaoeric/subscriptions","organizations_url":"https://api.github.com/users/shaoeric/orgs","repos_url":"https://api.github.com/users/shaoeric/repos","events_url":"https://api.github.com/users/shaoeric/events{/privacy}","received_events_url":"https://api.github.com/users/shaoeric/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/601171030","html_url":"https://github.com/lufficc/SSD/issues/87#issuecomment-601171030","issue_url":"https://api.github.com/repos/lufficc/SSD/issues/87","id":601171030,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTE3MTAzMA==","user":{"login":"szupzp","id":26061103,"node_id":"MDQ6VXNlcjI2MDYxMTAz","avatar_url":"https://avatars.githubusercontent.com/u/26061103?v=4","gravatar_id":"","url":"https://api.github.com/users/szupzp","html_url":"https://github.com/szupzp","followers_url":"https://api.github.com/users/szupzp/followers","following_url":"https://api.github.com/users/szupzp/following{/other_user}","gists_url":"https://api.github.com/users/szupzp/gists{/gist_id}","starred_url":"https://api.github.com/users/szupzp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szupzp/subscriptions","organizations_url":"https://api.github.com/users/szupzp/orgs","repos_url":"https://api.github.com/users/szupzp/repos","events_url":"https://api.github.com/users/szupzp/events{/privacy}","received_events_url":"https://api.github.com/users/szupzp/received_events","type":"User","site_admin":false},"created_at":"2020-03-19T13:15:15Z","updated_at":"2020-03-19T13:15:15Z","author_association":"NONE","body":"@cnfjsss Hi, I want to export the ScriptModule too. But i get an error when i trace the model：\r\n\r\n```\r\ntorch.jit.TracingCheckError: Tracing failed sanity checks!\r\nERROR: Graphs differed across invocations!\r\n```\r\nI also use the demo.py to export but it doesn't work. Can you show me how to get the trace module？","reactions":{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/601171030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"szupzp","id":26061103,"node_id":"MDQ6VXNlcjI2MDYxMTAz","avatar_url":"https://avatars.githubusercontent.com/u/26061103?v=4","gravatar_id":"","url":"https://api.github.com/users/szupzp","html_url":"https://github.com/szupzp","followers_url":"https://api.github.com/users/szupzp/followers","following_url":"https://api.github.com/users/szupzp/following{/other_user}","gists_url":"https://api.github.com/users/szupzp/gists{/gist_id}","starred_url":"https://api.github.com/users/szupzp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szupzp/subscriptions","organizations_url":"https://api.github.com/users/szupzp/orgs","repos_url":"https://api.github.com/users/szupzp/repos","events_url":"https://api.github.com/users/szupzp/events{/privacy}","received_events_url":"https://api.github.com/users/szupzp/received_events","type":"User","site_admin":false}},{"id":3145491772,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MzE0NTQ5MTc3Mg==","url":"https://api.github.com/repos/lufficc/SSD/issues/events/3145491772","actor":{"login":"cnfjsss","id":19989561,"node_id":"MDQ6VXNlcjE5OTg5NTYx","avatar_url":"https://avatars.githubusercontent.com/u/19989561?v=4","gravatar_id":"","url":"https://api.github.com/users/cnfjsss","html_url":"https://github.com/cnfjsss","followers_url":"https://api.github.com/users/cnfjsss/followers","following_url":"https://api.github.com/users/cnfjsss/following{/other_user}","gists_url":"https://api.github.com/users/cnfjsss/gists{/gist_id}","starred_url":"https://api.github.com/users/cnfjsss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnfjsss/subscriptions","organizations_url":"https://api.github.com/users/cnfjsss/orgs","repos_url":"https://api.github.com/users/cnfjsss/repos","events_url":"https://api.github.com/users/cnfjsss/events{/privacy}","received_events_url":"https://api.github.com/users/cnfjsss/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-03-19T13:15:15Z","performed_via_github_app":null},{"id":3145491775,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDMxNDU0OTE3NzU=","url":"https://api.github.com/repos/lufficc/SSD/issues/events/3145491775","actor":{"login":"cnfjsss","id":19989561,"node_id":"MDQ6VXNlcjE5OTg5NTYx","avatar_url":"https://avatars.githubusercontent.com/u/19989561?v=4","gravatar_id":"","url":"https://api.github.com/users/cnfjsss","html_url":"https://github.com/cnfjsss","followers_url":"https://api.github.com/users/cnfjsss/followers","following_url":"https://api.github.com/users/cnfjsss/following{/other_user}","gists_url":"https://api.github.com/users/cnfjsss/gists{/gist_id}","starred_url":"https://api.github.com/users/cnfjsss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnfjsss/subscriptions","organizations_url":"https://api.github.com/users/cnfjsss/orgs","repos_url":"https://api.github.com/users/cnfjsss/repos","events_url":"https://api.github.com/users/cnfjsss/events{/privacy}","received_events_url":"https://api.github.com/users/cnfjsss/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-03-19T13:15:16Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/601171459","html_url":"https://github.com/lufficc/SSD/issues/87#issuecomment-601171459","issue_url":"https://api.github.com/repos/lufficc/SSD/issues/87","id":601171459,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMTE3MTQ1OQ==","user":{"login":"szupzp","id":26061103,"node_id":"MDQ6VXNlcjI2MDYxMTAz","avatar_url":"https://avatars.githubusercontent.com/u/26061103?v=4","gravatar_id":"","url":"https://api.github.com/users/szupzp","html_url":"https://github.com/szupzp","followers_url":"https://api.github.com/users/szupzp/followers","following_url":"https://api.github.com/users/szupzp/following{/other_user}","gists_url":"https://api.github.com/users/szupzp/gists{/gist_id}","starred_url":"https://api.github.com/users/szupzp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szupzp/subscriptions","organizations_url":"https://api.github.com/users/szupzp/orgs","repos_url":"https://api.github.com/users/szupzp/repos","events_url":"https://api.github.com/users/szupzp/events{/privacy}","received_events_url":"https://api.github.com/users/szupzp/received_events","type":"User","site_admin":false},"created_at":"2020-03-19T13:16:09Z","updated_at":"2020-03-19T13:16:09Z","author_association":"NONE","body":"> @cnfjsss Hi, I want to export the ScriptModule too. But i get an error when i trace the model：\r\n> \r\n> ```\r\n> torch.jit.TracingCheckError: Tracing failed sanity checks!\r\n> ERROR: Graphs differed across invocations!\r\n> ```\r\n> \r\n> I also use the demo.py to export but it doesn't work. Can you show me how to get the trace module？\r\n\r\nmy pytorch version is 1.4\r\n","reactions":{"url":"https://api.github.com/repos/lufficc/SSD/issues/comments/601171459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"szupzp","id":26061103,"node_id":"MDQ6VXNlcjI2MDYxMTAz","avatar_url":"https://avatars.githubusercontent.com/u/26061103?v=4","gravatar_id":"","url":"https://api.github.com/users/szupzp","html_url":"https://github.com/szupzp","followers_url":"https://api.github.com/users/szupzp/followers","following_url":"https://api.github.com/users/szupzp/following{/other_user}","gists_url":"https://api.github.com/users/szupzp/gists{/gist_id}","starred_url":"https://api.github.com/users/szupzp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szupzp/subscriptions","organizations_url":"https://api.github.com/users/szupzp/orgs","repos_url":"https://api.github.com/users/szupzp/repos","events_url":"https://api.github.com/users/szupzp/events{/privacy}","received_events_url":"https://api.github.com/users/szupzp/received_events","type":"User","site_admin":false}},{"id":3145495264,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MzE0NTQ5NTI2NA==","url":"https://api.github.com/repos/lufficc/SSD/issues/events/3145495264","actor":{"login":"cnfjsss","id":19989561,"node_id":"MDQ6VXNlcjE5OTg5NTYx","avatar_url":"https://avatars.githubusercontent.com/u/19989561?v=4","gravatar_id":"","url":"https://api.github.com/users/cnfjsss","html_url":"https://github.com/cnfjsss","followers_url":"https://api.github.com/users/cnfjsss/followers","following_url":"https://api.github.com/users/cnfjsss/following{/other_user}","gists_url":"https://api.github.com/users/cnfjsss/gists{/gist_id}","starred_url":"https://api.github.com/users/cnfjsss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnfjsss/subscriptions","organizations_url":"https://api.github.com/users/cnfjsss/orgs","repos_url":"https://api.github.com/users/cnfjsss/repos","events_url":"https://api.github.com/users/cnfjsss/events{/privacy}","received_events_url":"https://api.github.com/users/cnfjsss/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-03-19T13:16:09Z","performed_via_github_app":null},{"id":3145495267,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDMxNDU0OTUyNjc=","url":"https://api.github.com/repos/lufficc/SSD/issues/events/3145495267","actor":{"login":"cnfjsss","id":19989561,"node_id":"MDQ6VXNlcjE5OTg5NTYx","avatar_url":"https://avatars.githubusercontent.com/u/19989561?v=4","gravatar_id":"","url":"https://api.github.com/users/cnfjsss","html_url":"https://github.com/cnfjsss","followers_url":"https://api.github.com/users/cnfjsss/followers","following_url":"https://api.github.com/users/cnfjsss/following{/other_user}","gists_url":"https://api.github.com/users/cnfjsss/gists{/gist_id}","starred_url":"https://api.github.com/users/cnfjsss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cnfjsss/subscriptions","organizations_url":"https://api.github.com/users/cnfjsss/orgs","repos_url":"https://api.github.com/users/cnfjsss/repos","events_url":"https://api.github.com/users/cnfjsss/events{/privacy}","received_events_url":"https://api.github.com/users/cnfjsss/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-03-19T13:16:09Z","performed_via_github_app":null},{"id":3995090426,"node_id":"MDEyOkxhYmVsZWRFdmVudDM5OTUwOTA0MjY=","url":"https://api.github.com/repos/lufficc/SSD/issues/events/3995090426","actor":{"login":"lufficc","id":20706332,"node_id":"MDQ6VXNlcjIwNzA2MzMy","avatar_url":"https://avatars.githubusercontent.com/u/20706332?v=4","gravatar_id":"","url":"https://api.github.com/users/lufficc","html_url":"https://github.com/lufficc","followers_url":"https://api.github.com/users/lufficc/followers","following_url":"https://api.github.com/users/lufficc/following{/other_user}","gists_url":"https://api.github.com/users/lufficc/gists{/gist_id}","starred_url":"https://api.github.com/users/lufficc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lufficc/subscriptions","organizations_url":"https://api.github.com/users/lufficc/orgs","repos_url":"https://api.github.com/users/lufficc/repos","events_url":"https://api.github.com/users/lufficc/events{/privacy}","received_events_url":"https://api.github.com/users/lufficc/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2020-11-13T19:37:01Z","label":{"name":"contributions welcome","color":"014a89"},"performed_via_github_app":null}]