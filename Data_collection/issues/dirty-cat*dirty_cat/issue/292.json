{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/292","repository_url":"https://api.github.com/repos/dirty-cat/dirty_cat","labels_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/292/labels{/name}","comments_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/292/comments","events_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/292/events","html_url":"https://github.com/dirty-cat/dirty_cat/issues/292","id":1324540269,"node_id":"I_kwDOB3LOgs5O8uFt","number":292,"title":"Broken `parametrize`","user":{"login":"LilianBoulard","id":33222654,"node_id":"MDQ6VXNlcjMzMjIyNjU0","avatar_url":"https://avatars.githubusercontent.com/u/33222654?v=4","gravatar_id":"","url":"https://api.github.com/users/LilianBoulard","html_url":"https://github.com/LilianBoulard","followers_url":"https://api.github.com/users/LilianBoulard/followers","following_url":"https://api.github.com/users/LilianBoulard/following{/other_user}","gists_url":"https://api.github.com/users/LilianBoulard/gists{/gist_id}","starred_url":"https://api.github.com/users/LilianBoulard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LilianBoulard/subscriptions","organizations_url":"https://api.github.com/users/LilianBoulard/orgs","repos_url":"https://api.github.com/users/LilianBoulard/repos","events_url":"https://api.github.com/users/LilianBoulard/events{/privacy}","received_events_url":"https://api.github.com/users/LilianBoulard/received_events","type":"User","site_admin":false},"labels":[{"id":2062478624,"node_id":"MDU6TGFiZWwyMDYyNDc4NjI0","url":"https://api.github.com/repos/dirty-cat/dirty_cat/labels/CI%20/%20Build","name":"CI / Build","color":"c5def5","default":false,"description":"Continuous integration and build"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-01T14:44:06Z","updated_at":"2022-09-02T11:01:31Z","closed_at":"2022-09-02T11:01:31Z","author_association":"MEMBER","active_lock_reason":null,"body":"I noticed that a test of the `GapEncoder` does not use the `init1` parameter\r\n\r\n```py\r\n@pytest.mark.parametrize(\"init1, analyzer1, analyzer2\",[\r\n    ('k-means++', 'char', 'word'),\r\n    ('random', 'char', 'word'),\r\n    ('k-means', 'char', 'word')\r\n])\r\ndef test_analyzer(init1, analyzer1, analyzer2):\r\n    \"\"\"\" Test if the output is different when the analyzer is 'word' or 'char'.\r\n        If it is, no error ir raised. \r\n    \"\"\"\r\n    add_words = False\r\n    n_samples = 70\r\n    X_txt = fetch_20newsgroups(subset='train')['data'][:n_samples]\r\n    X = np.array([X_txt, X_txt]).T\r\n    n_components = 10\r\n    # Test first analyzer output:\r\n    encoder = GapEncoder(\r\n        n_components=n_components, init='k-means++',\r\n        analyzer=analyzer1, add_words=add_words,\r\n        random_state=42, rescale_W=True)\r\n    encoder.fit(X)\r\n    y = encoder.transform(X)\r\n    \r\n    # Test the other analyzer output:\r\n    encoder = GapEncoder(\r\n        n_components=n_components, init='k-means++',\r\n        analyzer=analyzer2, add_words=add_words,\r\n        random_state=42)\r\n    encoder.fit(X)\r\n    y2 = encoder.transform(X)\r\n    \r\n    # Test inequality btw analyzer word and char ouput:\r\n    np.testing.assert_raises(AssertionError, np.testing.assert_array_equal, y, y2)\r\n```\r\n\r\nwhich makes the `parametrize` kind of useless as the two other parameters `analyzer1` & `analyzer2` are the same for all three calls.\r\n\r\nIMO, we should hard-code `char` and `word` in the test, and parametrize `init1` (which we should rename `init`).","closed_by":{"login":"LilianBoulard","id":33222654,"node_id":"MDQ6VXNlcjMzMjIyNjU0","avatar_url":"https://avatars.githubusercontent.com/u/33222654?v=4","gravatar_id":"","url":"https://api.github.com/users/LilianBoulard","html_url":"https://github.com/LilianBoulard","followers_url":"https://api.github.com/users/LilianBoulard/followers","following_url":"https://api.github.com/users/LilianBoulard/following{/other_user}","gists_url":"https://api.github.com/users/LilianBoulard/gists{/gist_id}","starred_url":"https://api.github.com/users/LilianBoulard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LilianBoulard/subscriptions","organizations_url":"https://api.github.com/users/LilianBoulard/orgs","repos_url":"https://api.github.com/users/LilianBoulard/repos","events_url":"https://api.github.com/users/LilianBoulard/events{/privacy}","received_events_url":"https://api.github.com/users/LilianBoulard/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/292/timeline","performed_via_github_app":null,"state_reason":"completed"}