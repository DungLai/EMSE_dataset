{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/165","repository_url":"https://api.github.com/repos/dirty-cat/dirty_cat","labels_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/165/labels{/name}","comments_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/165/comments","events_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/165/events","html_url":"https://github.com/dirty-cat/dirty_cat/issues/165","id":854641556,"node_id":"MDU6SXNzdWU4NTQ2NDE1NTY=","number":165,"title":"GapEncoder only supports 1D matrices","user":{"login":"LilianBoulard","id":33222654,"node_id":"MDQ6VXNlcjMzMjIyNjU0","avatar_url":"https://avatars.githubusercontent.com/u/33222654?v=4","gravatar_id":"","url":"https://api.github.com/users/LilianBoulard","html_url":"https://github.com/LilianBoulard","followers_url":"https://api.github.com/users/LilianBoulard/followers","following_url":"https://api.github.com/users/LilianBoulard/following{/other_user}","gists_url":"https://api.github.com/users/LilianBoulard/gists{/gist_id}","starred_url":"https://api.github.com/users/LilianBoulard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LilianBoulard/subscriptions","organizations_url":"https://api.github.com/users/LilianBoulard/orgs","repos_url":"https://api.github.com/users/LilianBoulard/repos","events_url":"https://api.github.com/users/LilianBoulard/events{/privacy}","received_events_url":"https://api.github.com/users/LilianBoulard/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-09T15:46:07Z","updated_at":"2021-07-19T17:14:45Z","closed_at":"2021-07-19T17:14:45Z","author_association":"MEMBER","active_lock_reason":null,"body":"Hi\r\n\r\nCurrently, the GapEncoder only supports column vectors, however, it should accept 2D matrices in order to comply with scikit-learn's conventions.\r\n\r\nCode:\r\n\r\n```python3\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\nfrom dirty_cat import GapEncoder\r\n\r\n# Data from `employee_salaries`\r\ncol_vec = np.array(['Department of Police', 'Department of Police', 'Department of Health and Human Services',\r\n                    'Correction and Rehabilitation', 'Department of Housing and Community Affairs',\r\n                    'Department of Police', 'Fire and Rescue Services'])\r\ncol_vec = col_vec.reshape(col_vec.shape[0], 1)\r\nrow_vec = col_vec.transpose()  # Convert to row vector\r\ntwo_d = pd.DataFrame([\r\n    ['Department of Police', 'Department of Police', 'Department of Health and Human Services',\r\n     'Correction and Rehabilitation', 'Department of Housing and Community Affairs', 'Department of Police',\r\n     'Fire and Rescue Services'],\r\n    ['MSB Information Mgmt and Tech Division Records Management Section', \r\n     'ISB Major Crimes Division Fugitive Section', 'Adult Protective and Case Management Services', \r\n     'Affordable Housing Programs', 'PRRS Facility and Security', 'PSB 6th District Special Assignment Team', \r\n     'EMS Billing']\r\n])\r\n\r\nprint(f'{col_vec.shape=} ; {row_vec.shape=} ; {two_d.shape=}')\r\n\r\ngap = GapEncoder()\r\ncol_vec_fitted = gap.fit(col_vec)  # Works\r\nrow_vec_fitted = gap.fit(row_vec)  # Doesn't work\r\ntwo_d_fitted = gap.fit(two_d)  # Doesn't work\r\n\r\n```\r\n\r\nOuput:\r\n\r\n```python3\r\n\r\ncol_vec.shape=(7, 1) ; row_vec.shape=(1, 7) ; two_d.shape=(2, 7)\r\n\r\nTraceback (most recent call last):\r\n  File \"dirty_cat/temp/try_gap.py\", line 29, in <module>\r\n    row_vec_fitted = gap.fit(row_vec)  # Doesn't work\r\n  File \"dirty_cat/dirty_cat/gap_encoder.py\", line 295, in fit\r\n    assert X.ndim == 1 or (X.ndim == 2 and X.shape[1] == 1), f\"ERROR:\\\r\nAssertionError: ERROR:        shape (1, 7) of input array is not supported.\r\n\r\n```","closed_by":{"login":"GaelVaroquaux","id":208217,"node_id":"MDQ6VXNlcjIwODIxNw==","avatar_url":"https://avatars.githubusercontent.com/u/208217?v=4","gravatar_id":"","url":"https://api.github.com/users/GaelVaroquaux","html_url":"https://github.com/GaelVaroquaux","followers_url":"https://api.github.com/users/GaelVaroquaux/followers","following_url":"https://api.github.com/users/GaelVaroquaux/following{/other_user}","gists_url":"https://api.github.com/users/GaelVaroquaux/gists{/gist_id}","starred_url":"https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GaelVaroquaux/subscriptions","organizations_url":"https://api.github.com/users/GaelVaroquaux/orgs","repos_url":"https://api.github.com/users/GaelVaroquaux/repos","events_url":"https://api.github.com/users/GaelVaroquaux/events{/privacy}","received_events_url":"https://api.github.com/users/GaelVaroquaux/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/165/timeline","performed_via_github_app":null,"state_reason":"completed"}