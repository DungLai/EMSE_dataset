{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/345","repository_url":"https://api.github.com/repos/dirty-cat/dirty_cat","labels_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/345/labels{/name}","comments_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/345/comments","events_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/345/events","html_url":"https://github.com/dirty-cat/dirty_cat/issues/345","id":1370087581,"node_id":"I_kwDOB3LOgs5RqeCd","number":345,"title":"Ensure that docstrings pass numpydoc validation","user":{"login":"LilianBoulard","id":33222654,"node_id":"MDQ6VXNlcjMzMjIyNjU0","avatar_url":"https://avatars.githubusercontent.com/u/33222654?v=4","gravatar_id":"","url":"https://api.github.com/users/LilianBoulard","html_url":"https://github.com/LilianBoulard","followers_url":"https://api.github.com/users/LilianBoulard/followers","following_url":"https://api.github.com/users/LilianBoulard/following{/other_user}","gists_url":"https://api.github.com/users/LilianBoulard/gists{/gist_id}","starred_url":"https://api.github.com/users/LilianBoulard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LilianBoulard/subscriptions","organizations_url":"https://api.github.com/users/LilianBoulard/orgs","repos_url":"https://api.github.com/users/LilianBoulard/repos","events_url":"https://api.github.com/users/LilianBoulard/events{/privacy}","received_events_url":"https://api.github.com/users/LilianBoulard/received_events","type":"User","site_admin":false},"labels":[{"id":865002872,"node_id":"MDU6TGFiZWw4NjUwMDI4NzI=","url":"https://api.github.com/repos/dirty-cat/dirty_cat/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":865002874,"node_id":"MDU6TGFiZWw4NjUwMDI4NzQ=","url":"https://api.github.com/repos/dirty-cat/dirty_cat/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"},{"id":1108655754,"node_id":"MDU6TGFiZWwxMTA4NjU1NzU0","url":"https://api.github.com/repos/dirty-cat/dirty_cat/labels/Documentation","name":"Documentation","color":"84e8ac","default":false,"description":"Add or improve the documentation"},{"id":4524835888,"node_id":"LA_kwDOB3LOgs8AAAABDbOEMA","url":"https://api.github.com/repos/dirty-cat/dirty_cat/labels/meta-issue","name":"meta-issue","color":"C610C3","default":false,"description":"Lists a bunch of tasks"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2022-09-12T15:19:49Z","updated_at":"2023-01-09T10:48:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Background / Objective\r\n\r\n[Docstrings](https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring) in Python are string literals that occur as the first statement in a module, function, class, or method definition.\r\n\r\nThese are some of the characteristics of a docstring:\r\n\r\n- Triple quotes are used to encompass the docstring text.\r\n- There is no blank line before or after the docstring.\r\n- The docstring is a phrase ending in a period.\r\n- [more details](https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring)\r\n\r\n[numpydoc](https://numpydoc.readthedocs.io/en/latest/format.html) is one set of criteria to check for consistent documentation structure.\r\n\r\n### Validating docstrings in dirty_cat\r\n\r\nTo ensure consistent documentation structure in dirty_cat, we are using numpydoc validation. Currently, documentation tests are failing for various functions. As a temporary fix, we have suppressed error messages in [test_docstrings.py](https://github.com/dirty-cat/dirty_cat/blob/master/dirty_cat/tests/test_docstrings.py). Many of the functions in dirty_cat need to be updated to comply with numpy docstring validation. In the below issue, we provide step-by-step instructions on how contributors can test and update functions.\r\n\r\n### Steps\r\n\r\n1. Make sure you have the development dependencies and documentation dependencies installed (see [the contribution guidelines](https://github.com/dirty-cat/dirty_cat/blob/master/CONTRIBUTING.rst)).\r\n2. Pick a function/class from the list below and leave a comment saying you are going to work on it. This way we can keep track of what everyone is working on.\r\n2.1 Make sure you've created a separate branch from main before editing files for your new contribution. Refer to our [contributing guidelines](https://github.com/dirty-cat/dirty_cat/blob/master/CONTRIBUTING.rst) for more information.\r\n3. Remove the function from the list `DOCSTRING_TEMP_IGNORE_SET` in [`test_docstring.py`](https://github.com/dirty-cat/dirty_cat/blob/master/dirty_cat/tests/test_docstrings.py#L22).\r\n5. Let's say you picked `dirty_cat.gap_encoder.GapEncoder.fit`, run numpydoc validation as follows.\r\n```commandline\r\npytest dirty_cat/tests/test_docstrings.py\r\n```\r\n\r\n6. If you see the test fails, please fix them by following the recommendation provided by the failing test.\r\n7. If you see all the tests pass, you do not need to do any additional changes.\r\n8. Commit your changes.\r\n9. Open a Pull Request with an opening message Addresses #345. Note that each item should be submitted in a separate Pull Request.\r\n10. Include the function name in the title of the pull request. For example: *\"DOC Ensures that GapEncoder.fit passes numpydoc validation\"*.\r\n\r\nNote: once you have issued 1-2 such PRs, feel free to move on to contributing more complex pull requests that involve more thinking and leave the other fixes to first time contributors for them to learn the github contribution workflow :)\r\n\r\n### Functions to Update\r\n\r\n- [X] `dirty_cat._datetime_encoder.DatetimeEncoder` #421\r\n- [x] `dirty_cat._datetime_encoder.DatetimeEncoder.fit` #367\r\n- [ ] `dirty_cat._datetime_encoder.DatetimeEncoder.get_feature_names`\r\n- [ ] `dirty_cat._datetime_encoder.DatetimeEncoder.get_feature_names_out`\r\n- [x] `dirty_cat._datetime_encoder.DatetimeEncoder.transform` #368\r\n- [x] `dirty_cat._gap_encoder.GapEncoder` #438 \r\n- [ ] `dirty_cat._gap_encoder.GapEncoder.fit`\r\n- [ ] `dirty_cat._gap_encoder.GapEncoder.get_feature_names`\r\n- [ ] `dirty_cat._gap_encoder.GapEncoder.get_feature_names_out`\r\n- [ ] `dirty_cat._gap_encoder.GapEncoder.partial_fit`\r\n- [ ] `dirty_cat._gap_encoder.GapEncoder.score`\r\n- [ ] `dirty_cat._gap_encoder.GapEncoder.transform`\r\n- [ ] `dirty_cat._minhash_encoder.MinHashEncoder`\r\n- [ ] `dirty_cat._minhash_encoder.MinHashEncoder.fit`\r\n- [ ] `dirty_cat._minhash_encoder.MinHashEncoder.get_fast_hash`\r\n- [ ] `dirty_cat._minhash_encoder.MinHashEncoder.get_murmur_hash`\r\n- [ ] `dirty_cat._minhash_encoder.MinHashEncoder.transform`\r\n- [ ] `dirty_cat._similarity_encoder.SimilarityEncoder`\r\n- [ ] `dirty_cat._similarity_encoder.SimilarityEncoder.fit`\r\n- [ ] `dirty_cat._similarity_encoder.SimilarityEncoder.transform`\r\n- [ ] `dirty_cat._similarity_encoder.SimilarityEncoder.fit_transform`\r\n- [x] `dirty_cat._super_vectorizer.SuperVectorizer` #399\r\n- [ ] `dirty_cat._super_vectorizer.SuperVectorizer.fit_transform`\r\n- [ ] `dirty_cat._super_vectorizer.SuperVectorizer.transform`\r\n- [ ] `dirty_cat._super_vectorizer.SuperVectorizer._auto_cast`\r\n- [ ] `dirty_cat._super_vectorizer.SuperVectorizer._apply_cast`\r\n- [ ] `dirty_cat._super_vectorizer.SuperVectorizer.get_feature_names`\r\n- [ ] `dirty_cat._super_vectorizer.SuperVectorizer.get_feature_names_out`\r\n- [ ] `dirty_cat._target_encoder.TargetEncoder`\r\n- [ ] `dirty_cat._target_encoder.TargetEncoder.fit`\r\n- [ ] `dirty_cat._target_encoder.TargetEncoder.transform`\r\n- [ ] `dirty_cat._fuzzy_join.fuzzy_join`","closed_by":{"login":"jovan-stojanovic","id":62058944,"node_id":"MDQ6VXNlcjYyMDU4OTQ0","avatar_url":"https://avatars.githubusercontent.com/u/62058944?v=4","gravatar_id":"","url":"https://api.github.com/users/jovan-stojanovic","html_url":"https://github.com/jovan-stojanovic","followers_url":"https://api.github.com/users/jovan-stojanovic/followers","following_url":"https://api.github.com/users/jovan-stojanovic/following{/other_user}","gists_url":"https://api.github.com/users/jovan-stojanovic/gists{/gist_id}","starred_url":"https://api.github.com/users/jovan-stojanovic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jovan-stojanovic/subscriptions","organizations_url":"https://api.github.com/users/jovan-stojanovic/orgs","repos_url":"https://api.github.com/users/jovan-stojanovic/repos","events_url":"https://api.github.com/users/jovan-stojanovic/events{/privacy}","received_events_url":"https://api.github.com/users/jovan-stojanovic/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/345/timeline","performed_via_github_app":null,"state_reason":"reopened"}