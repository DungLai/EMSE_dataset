{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/233","repository_url":"https://api.github.com/repos/dirty-cat/dirty_cat","labels_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/233/labels{/name}","comments_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/233/comments","events_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/233/events","html_url":"https://github.com/dirty-cat/dirty_cat/issues/233","id":1074636706,"node_id":"I_kwDOB3LOgs5ADaei","number":233,"title":"Handling date columns in SuperVectorizer","user":{"login":"LeoGrin","id":45738728,"node_id":"MDQ6VXNlcjQ1NzM4NzI4","avatar_url":"https://avatars.githubusercontent.com/u/45738728?v=4","gravatar_id":"","url":"https://api.github.com/users/LeoGrin","html_url":"https://github.com/LeoGrin","followers_url":"https://api.github.com/users/LeoGrin/followers","following_url":"https://api.github.com/users/LeoGrin/following{/other_user}","gists_url":"https://api.github.com/users/LeoGrin/gists{/gist_id}","starred_url":"https://api.github.com/users/LeoGrin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeoGrin/subscriptions","organizations_url":"https://api.github.com/users/LeoGrin/orgs","repos_url":"https://api.github.com/users/LeoGrin/repos","events_url":"https://api.github.com/users/LeoGrin/events{/privacy}","received_events_url":"https://api.github.com/users/LeoGrin/received_events","type":"User","site_admin":false},"labels":[{"id":865002872,"node_id":"MDU6TGFiZWw4NjUwMDI4NzI=","url":"https://api.github.com/repos/dirty-cat/dirty_cat/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/milestones/3","html_url":"https://github.com/dirty-cat/dirty_cat/milestone/3","labels_url":"https://api.github.com/repos/dirty-cat/dirty_cat/milestones/3/labels","id":8063024,"node_id":"MI_kwDOB3LOgs4Aewgw","number":3,"title":"0.3.0 release","description":"","creator":{"login":"LilianBoulard","id":33222654,"node_id":"MDQ6VXNlcjMzMjIyNjU0","avatar_url":"https://avatars.githubusercontent.com/u/33222654?v=4","gravatar_id":"","url":"https://api.github.com/users/LilianBoulard","html_url":"https://github.com/LilianBoulard","followers_url":"https://api.github.com/users/LilianBoulard/followers","following_url":"https://api.github.com/users/LilianBoulard/following{/other_user}","gists_url":"https://api.github.com/users/LilianBoulard/gists{/gist_id}","starred_url":"https://api.github.com/users/LilianBoulard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LilianBoulard/subscriptions","organizations_url":"https://api.github.com/users/LilianBoulard/orgs","repos_url":"https://api.github.com/users/LilianBoulard/repos","events_url":"https://api.github.com/users/LilianBoulard/events{/privacy}","received_events_url":"https://api.github.com/users/LilianBoulard/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":16,"state":"closed","created_at":"2022-06-08T15:34:10Z","updated_at":"2022-11-14T13:27:35Z","due_on":"2022-09-12T07:00:00Z","closed_at":"2022-11-14T13:27:35Z"},"comments":1,"created_at":"2021-12-08T17:12:42Z","updated_at":"2022-07-01T11:15:19Z","closed_at":"2022-07-01T11:15:18Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# Inferring that a column is a date\r\nPandas `convert_dtypes` function that we use to infer column type doesn't work for inferring date type.\r\nPlan to infer if a column contains a date or a datetime:\r\n- First convert columns with `convert_dtypes` if auto_cast==True (as we do now)\r\n- For every string column, use `pd.to_datetime(errors=coerce)`, and check how many rows have been successfully converted to date (i.e check how many new missing values we have created).\r\n- If enough rows have been converted (> 90% ?), use the converted column, otherwise keep it as string.\r\n\r\nWe should check if the runtime is acceptable when the user has a lot of string columns. If it's too high, we can apply this on a random subset of rows.\r\n\r\n# Using a date column\r\n- If the number of unique date values is low (< 15?), consider it as a categorical variable, otherwise, convert it to a time since epoch.\r\n- Add an option `enrich_from_date` which control if we should create new features from the date columns. Features we could create from date.\r\n    - Year\r\n    - Month\r\n    - Day of the month\r\n    - Day of the week\r\n    - Indicator of holyday? (maybe to country dependant)\r\n    \r\n - Possible options design for  `enrich_from_date`:\r\n   -  {\"all\", \"none\", List, Dic}: date columns for which we want to create new features. If List, list of columns. If Dic, this kind: {\"col_2\":[\"year\", \"month\", \"weekday\"], \"col_5\": [\"weekday\"]}. Maybe the Dic option is too complicated.\r\n\r\n","closed_by":{"login":"LeoGrin","id":45738728,"node_id":"MDQ6VXNlcjQ1NzM4NzI4","avatar_url":"https://avatars.githubusercontent.com/u/45738728?v=4","gravatar_id":"","url":"https://api.github.com/users/LeoGrin","html_url":"https://github.com/LeoGrin","followers_url":"https://api.github.com/users/LeoGrin/followers","following_url":"https://api.github.com/users/LeoGrin/following{/other_user}","gists_url":"https://api.github.com/users/LeoGrin/gists{/gist_id}","starred_url":"https://api.github.com/users/LeoGrin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeoGrin/subscriptions","organizations_url":"https://api.github.com/users/LeoGrin/orgs","repos_url":"https://api.github.com/users/LeoGrin/repos","events_url":"https://api.github.com/users/LeoGrin/events{/privacy}","received_events_url":"https://api.github.com/users/LeoGrin/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/dirty-cat/dirty_cat/issues/233/timeline","performed_via_github_app":null,"state_reason":"completed"}