{"url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/7","repository_url":"https://api.github.com/repos/NUAA-AL/ALiPy","labels_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/7/comments","events_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/7/events","html_url":"https://github.com/NUAA-AL/ALiPy/issues/7","id":417645472,"node_id":"MDU6SXNzdWU0MTc2NDU0NzI=","number":7,"title":"更换数据集之后，运行出问题","user":{"login":"serend1p1ty","id":39628662,"node_id":"MDQ6VXNlcjM5NjI4NjYy","avatar_url":"https://avatars.githubusercontent.com/u/39628662?v=4","gravatar_id":"","url":"https://api.github.com/users/serend1p1ty","html_url":"https://github.com/serend1p1ty","followers_url":"https://api.github.com/users/serend1p1ty/followers","following_url":"https://api.github.com/users/serend1p1ty/following{/other_user}","gists_url":"https://api.github.com/users/serend1p1ty/gists{/gist_id}","starred_url":"https://api.github.com/users/serend1p1ty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serend1p1ty/subscriptions","organizations_url":"https://api.github.com/users/serend1p1ty/orgs","repos_url":"https://api.github.com/users/serend1p1ty/repos","events_url":"https://api.github.com/users/serend1p1ty/events{/privacy}","received_events_url":"https://api.github.com/users/serend1p1ty/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-03-06T06:35:12Z","updated_at":"2019-03-06T08:51:33Z","closed_at":"2019-03-06T08:48:09Z","author_association":"NONE","active_lock_reason":null,"body":"您好，非常感谢Alipy的伟大工作，这是我见过的最全面的主动学习包。\r\n在我准备运行[AL for multi-label data](http://parnec.nuaa.edu.cn/huangsj/alipy/example.html)示例代码的时候出了问题。\r\n用`iris`数据集是可以运行的，但是当我换了一个数据集就没法运行了。\r\n我现在的代码是这样的\r\n```\r\ndataset_filepath = os.path.join(\r\n    os.path.dirname(os.path.realpath(__file__)), 'scene')\r\n\r\nX, mult_y = import_libsvm_sparse(dataset_filepath, True).format_sklearn()\r\nmult_y[mult_y == 0] = -1\r\n\r\n# X, y = load_iris(return_X_y=True)\r\n# mlb = OneHotEncoder()\r\n# mult_y = mlb.fit_transform(y.reshape((-1, 1)))\r\n# mult_y = np.asarray(mult_y.todense())\r\n# mult_y[mult_y == 0] = -1\r\n\r\nalibox = ToolBox(X=X, y=mult_y, query_type='PartLabels')\r\nalibox.split_AL(test_ratio=0.2, initial_label_rate=0.05, all_class=False)\r\n\r\n\r\ndef main_loop(alibox, round, strategy):\r\n    train_idx, test_idx, label_ind, unlab_ind = alibox.get_split(round)\r\n    # Get intermediate results saver for one fold experiment\r\n    saver = alibox.get_stateio(round)\r\n    # base model\r\n    model = LabelRankingModel()\r\n\r\n    while len(label_ind) <= 120:\r\n        # query and update\r\n        select_labs = strategy.select(label_ind, unlab_ind)\r\n        # use cost to record the amount of queried instance-label pairs\r\n        if len(select_labs[0]) == 1:\r\n            cost = mult_y.shape[1]\r\n        else:\r\n            cost = len(select_labs)\r\n        label_ind.update(select_labs)\r\n        unlab_ind.difference_update(select_labs)\r\n\r\n        # train/test\r\n        X_tr, y_tr, _ = get_Xy_in_multilabel(label_ind, X=X, y=mult_y)\r\n        model.fit(X=X_tr, y=y_tr)\r\n        pres, pred = model.predict(X[test_idx])\r\n        perf = alibox.calc_performance_metric(y_true=mult_y[test_idx], y_pred=pred, performance_metric='hamming_loss')\r\n\r\n        # save\r\n        st = alibox.State(select_index=select_labs, performance=perf, cost=cost)\r\n        saver.add_state(st)\r\n\r\n    return copy.deepcopy(saver)\r\n\r\n\r\naudi_result = []\r\nquire_result = []\r\nrandom_result = []\r\nmmc_result = []\r\nadaptive_result = []\r\n\r\nfor round in range(5):\r\n    # init strategies\r\n    audi = QueryMultiLabelAUDI(X, mult_y)\r\n    quire = QueryMultiLabelQUIRE(X, mult_y)\r\n    mmc = QueryMultiLabelMMC(X, mult_y)\r\n    adaptive = QueryMultiLabelAdaptive(X, mult_y)\r\n    random = QueryMultiLabelRandom()\r\n\r\n    audi_result.append(main_loop(alibox, round, strategy=audi))\r\n    quire_result.append(main_loop(alibox, round, strategy=quire))\r\n    mmc_result.append(main_loop(alibox, round, strategy=mmc))\r\n    adaptive_result.append(main_loop(alibox, round, strategy=adaptive))\r\n    random_result.append(main_loop(alibox, round, strategy=random))\r\n\r\nanalyser = alibox.get_experiment_analyser(x_axis='cost')\r\nanalyser.add_method(method_name='AUDI', method_results=audi_result)\r\nanalyser.add_method(method_name='QUIRE', method_results=quire_result)\r\nanalyser.add_method(method_name='RANDOM', method_results=random_result)\r\nanalyser.add_method(method_name='MMC', method_results=mmc_result)\r\nanalyser.add_method(method_name='Adaptive', method_results=adaptive_result)\r\nanalyser.plot_learning_curves()\r\n\r\n```\r\n可以看到我的代码和示例代码的唯一区别就是我更改了数据源`X`和`mult_y`\r\n`X`是一个`2407*294`维的`ndarray`, `mult_y`是一个`2407*6`的`ndarray`。\r\n`X`是样本特征集合，`mult_y`是标签集合。\r\n`mult_y`如下\r\n```\r\narray([[ 1, -1, -1, -1,  1, -1],                            \r\n[ 1, -1, -1, -1, -1,  1],                            \r\n[ 1, -1, -1, -1, -1, -1],                            \r\n ...,\r\n[-1, -1, -1, -1, -1,  1],                            \r\n[-1, -1, -1, -1, -1,  1],                            \r\n[-1, -1, -1, -1, -1,  1]])\r\n```\r\n`X`如下\r\n```\r\narray([[0.646467  , 0.666435  , 0.685047  , ..., 0.247298  ,\r\n0.0140249 , 0.0297093 ],\r\n[0.770156  , 0.767255  , 0.761053  , ..., 0.137833  ,\r\n0.0826722 ,0.0363203 ],\r\n[0.793984  , 0.772096  , 0.76182   , ..., 0.0511252 ,\r\n0.112506 ,0.0839236 ],\r\n ...,\r\n[0.952281  , 0.944987  , 0.905556  , ..., 0.0319002 ,\r\n0.0175471 ,0.0197344 ]])\r\n\r\n```\r\n我的数据格式是符合Alipy的规范的，为什么运行会报错：\r\n`ValueError: cannot reshape array of size 0 into shape (0, newaxis)`","closed_by":{"login":"serend1p1ty","id":39628662,"node_id":"MDQ6VXNlcjM5NjI4NjYy","avatar_url":"https://avatars.githubusercontent.com/u/39628662?v=4","gravatar_id":"","url":"https://api.github.com/users/serend1p1ty","html_url":"https://github.com/serend1p1ty","followers_url":"https://api.github.com/users/serend1p1ty/followers","following_url":"https://api.github.com/users/serend1p1ty/following{/other_user}","gists_url":"https://api.github.com/users/serend1p1ty/gists{/gist_id}","starred_url":"https://api.github.com/users/serend1p1ty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serend1p1ty/subscriptions","organizations_url":"https://api.github.com/users/serend1p1ty/orgs","repos_url":"https://api.github.com/users/serend1p1ty/repos","events_url":"https://api.github.com/users/serend1p1ty/events{/privacy}","received_events_url":"https://api.github.com/users/serend1p1ty/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/7/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/7/timeline","performed_via_github_app":null,"state_reason":"completed"}