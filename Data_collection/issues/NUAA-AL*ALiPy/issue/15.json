{"url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/15","repository_url":"https://api.github.com/repos/NUAA-AL/ALiPy","labels_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/15/labels{/name}","comments_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/15/comments","events_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/15/events","html_url":"https://github.com/NUAA-AL/ALiPy/issues/15","id":424051489,"node_id":"MDU6SXNzdWU0MjQwNTE0ODk=","number":15,"title":"How to use multi-thread in multi-label setting","user":{"login":"ZMK112","id":24214864,"node_id":"MDQ6VXNlcjI0MjE0ODY0","avatar_url":"https://avatars.githubusercontent.com/u/24214864?v=4","gravatar_id":"","url":"https://api.github.com/users/ZMK112","html_url":"https://github.com/ZMK112","followers_url":"https://api.github.com/users/ZMK112/followers","following_url":"https://api.github.com/users/ZMK112/following{/other_user}","gists_url":"https://api.github.com/users/ZMK112/gists{/gist_id}","starred_url":"https://api.github.com/users/ZMK112/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZMK112/subscriptions","organizations_url":"https://api.github.com/users/ZMK112/orgs","repos_url":"https://api.github.com/users/ZMK112/repos","events_url":"https://api.github.com/users/ZMK112/events{/privacy}","received_events_url":"https://api.github.com/users/ZMK112/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-22T05:20:52Z","updated_at":"2019-03-23T08:51:06Z","closed_at":"2019-03-23T08:51:06Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, everyone, I am a green hand to Alipy. I am so lucky to find such a good project: `Alipy`.\r\nI haven't found a example for using multi-thread in multi-label setting, so I write one referring to [aceThreading_usage.py](https://github.com/NUAA-AL/ALiPy/blob/master/examples/tools/aceThreading_usage.py)\r\n```\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.preprocessing import OneHotEncoder\r\nimport numpy as np\r\nfrom alipy import ToolBox\r\nfrom alipy.data_manipulate import StandardScale\r\nfrom alipy.query_strategy.multi_label import QueryMultiLabelMMC, LabelRankingModel\r\nfrom alipy.index import get_Xy_in_multilabel\r\nfrom alipy.experiment import State\r\n\r\n# load data\r\nX, y = load_iris(return_X_y=True)\r\nmlb = OneHotEncoder()\r\nmult_y = mlb.fit_transform(y.reshape((-1, 1)))\r\nmult_y = np.asarray(mult_y.todense())\r\nmult_y[mult_y == 0] = -1\r\n\r\n# init alibox\r\nalibox = ToolBox(X=X, y=mult_y, query_type='PartLabels')\r\nalibox.split_AL(test_ratio=0.3, initial_label_rate=0.1, all_class=False)\r\n\r\n\r\ndef target_func(round, train_id, test_id, Lcollection, Ucollection, saver, examples, labels, global_parameters):\r\n    qs = QueryMultiLabelMMC(examples, labels)\r\n    model = LabelRankingModel()\r\n\r\n    while len(Ucollection) > 30:\r\n        select_index = qs.select(Lcollection, Ucollection)\r\n        Ucollection.difference_update(select_index)\r\n        Lcollection.update(select_index)\r\n\r\n        # update model\r\n        X_tr, y_tr, _ = get_Xy_in_multilabel(Lcollection, X=examples, y=labels, unknown_element=0)\r\n        model.fit(X=X_tr, y=y_tr)\r\n        _, pred = model.predict(examples[test_id, :])\r\n\r\n        # calculate microâ€”f1\r\n        Z = pred\r\n        Y = labels[test_id]\r\n        precision = np.sum(Z & Y) / max(1, np.sum(Z))\r\n        recall = np.sum(Z & Y) / max(1, np.sum(Y))\r\n        micro_f1 = 0 if precision == 0 and recall == 0 else \\\r\n                (2 * precision * recall) / (precision + recall)\r\n\r\n        # save intermediate results\r\n        st = State(select_index=select_index, performance=micro_f1)\r\n        saver.add_state(st)\r\n        saver.save()\r\n\r\n\r\n# init acethread\r\nacethread = alibox.get_ace_threading(target_function=target_func)\r\nacethread.start_all_threads()\r\n\r\n# get the result,return list of stateIO\r\nstateIO_list = acethread.get_results()\r\n\r\n# save the state of multi_thread to the saving_path in pkl form\r\nacethread.save()\r\n\r\n```\r\n\r\nI always receive a error: \r\n`Exception: Label_size can not be induced from fully labeled set, label_size must be provided` \r\nin the line\r\n `acethread = alibox.get_ace_threading(target_function=target_func)`\r\nCan anyone hele me? I will be very grateful!\r\n","closed_by":{"login":"ZMK112","id":24214864,"node_id":"MDQ6VXNlcjI0MjE0ODY0","avatar_url":"https://avatars.githubusercontent.com/u/24214864?v=4","gravatar_id":"","url":"https://api.github.com/users/ZMK112","html_url":"https://github.com/ZMK112","followers_url":"https://api.github.com/users/ZMK112/followers","following_url":"https://api.github.com/users/ZMK112/following{/other_user}","gists_url":"https://api.github.com/users/ZMK112/gists{/gist_id}","starred_url":"https://api.github.com/users/ZMK112/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZMK112/subscriptions","organizations_url":"https://api.github.com/users/ZMK112/orgs","repos_url":"https://api.github.com/users/ZMK112/repos","events_url":"https://api.github.com/users/ZMK112/events{/privacy}","received_events_url":"https://api.github.com/users/ZMK112/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/15/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/15/timeline","performed_via_github_app":null,"state_reason":"completed"}