{"url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/32","repository_url":"https://api.github.com/repos/NUAA-AL/ALiPy","labels_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/32/comments","events_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/32/events","html_url":"https://github.com/NUAA-AL/ALiPy/issues/32","id":894810895,"node_id":"MDU6SXNzdWU4OTQ4MTA4OTU=","number":32,"title":"Problem with QueryInstanceCoresetGreedy and other strategies that take train_idx argument","user":{"login":"lukekolbe","id":50079371,"node_id":"MDQ6VXNlcjUwMDc5Mzcx","avatar_url":"https://avatars.githubusercontent.com/u/50079371?v=4","gravatar_id":"","url":"https://api.github.com/users/lukekolbe","html_url":"https://github.com/lukekolbe","followers_url":"https://api.github.com/users/lukekolbe/followers","following_url":"https://api.github.com/users/lukekolbe/following{/other_user}","gists_url":"https://api.github.com/users/lukekolbe/gists{/gist_id}","starred_url":"https://api.github.com/users/lukekolbe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukekolbe/subscriptions","organizations_url":"https://api.github.com/users/lukekolbe/orgs","repos_url":"https://api.github.com/users/lukekolbe/repos","events_url":"https://api.github.com/users/lukekolbe/events{/privacy}","received_events_url":"https://api.github.com/users/lukekolbe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-18T21:47:42Z","updated_at":"2021-05-20T01:36:10Z","closed_at":"2021-05-20T01:36:10Z","author_association":"NONE","active_lock_reason":null,"body":"This error can be easily replicated by running the example in examples/AL_settings/query_instance.py\r\nIf you change the batch size to 10, you'll get an error. Here, it's an IndexError (see below), in my own application I get an Assertion Error. Regardless of error type, it's always caused by the  assert self.train_idx[ind] in unlabel_index line that several query strategies use (those that take train_idx as argument). It's strange because the select method of the QueryInstanceCoresetGreedy class has a batch_size argument with default 1, so it should take batches...\r\n\r\n\r\n`---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-1-8fe4f5b96bb7> in <module>\r\n     96     eer_result.append(copy.deepcopy(main_loop(alibox, eer, round)))\r\n     97     rnd_result.append(copy.deepcopy(main_loop(alibox, rnd, round)))\r\n---> 98     cors_result.append(copy.deepcopy(main_loop(alibox, cors, round)))\r\n     99     dw_result.append(copy.deepcopy(main_loop(alibox, dw, round)))\r\n    100     quire_result.append(copy.deepcopy(main_loop(alibox, quire, round)))\r\n\r\n<ipython-input-1-8fe4f5b96bb7> in main_loop(alibox, strategy, round)\r\n     39         # Select a subset of Uind according to the query strategy\r\n     40         # Passing model=None to use the default model for evaluating the committees' disagreement\r\n---> 41         select_ind = strategy.select(label_index=label_ind, unlabel_index=unlab_ind, batch_size=10, model=model)\r\n     42         label_ind.update(select_ind)\r\n     43         unlab_ind.difference_update(select_ind)\r\n\r\n~/anaconda3/lib/python3.8/site-packages/alipy/query_strategy/query_labels.py in select(self, label_index, unlabel_index, batch_size, **kwargs)\r\n   1877             # should have min_distance of zero to a cluster center.\r\n   1878             assert ind not in self.already_selected\r\n-> 1879             assert self.train_idx[ind] in unlabel_index\r\n   1880 \r\n   1881             self.update_distances([ind], only_new=True, reset_dist=False)\r\n\r\nIndexError: index 1250 is out of bounds for axis 0 with size 350`","closed_by":{"login":"tangypnuaa","id":40466308,"node_id":"MDQ6VXNlcjQwNDY2MzA4","avatar_url":"https://avatars.githubusercontent.com/u/40466308?v=4","gravatar_id":"","url":"https://api.github.com/users/tangypnuaa","html_url":"https://github.com/tangypnuaa","followers_url":"https://api.github.com/users/tangypnuaa/followers","following_url":"https://api.github.com/users/tangypnuaa/following{/other_user}","gists_url":"https://api.github.com/users/tangypnuaa/gists{/gist_id}","starred_url":"https://api.github.com/users/tangypnuaa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tangypnuaa/subscriptions","organizations_url":"https://api.github.com/users/tangypnuaa/orgs","repos_url":"https://api.github.com/users/tangypnuaa/repos","events_url":"https://api.github.com/users/tangypnuaa/events{/privacy}","received_events_url":"https://api.github.com/users/tangypnuaa/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/32/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/32/timeline","performed_via_github_app":null,"state_reason":"completed"}