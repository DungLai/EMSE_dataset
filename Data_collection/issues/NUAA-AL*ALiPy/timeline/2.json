[{"url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/comments/465854938","html_url":"https://github.com/NUAA-AL/ALiPy/issues/2#issuecomment-465854938","issue_url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/2","id":465854938,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2NTg1NDkzOA==","user":{"login":"NUAA-AL","id":46415435,"node_id":"MDQ6VXNlcjQ2NDE1NDM1","avatar_url":"https://avatars.githubusercontent.com/u/46415435?v=4","gravatar_id":"","url":"https://api.github.com/users/NUAA-AL","html_url":"https://github.com/NUAA-AL","followers_url":"https://api.github.com/users/NUAA-AL/followers","following_url":"https://api.github.com/users/NUAA-AL/following{/other_user}","gists_url":"https://api.github.com/users/NUAA-AL/gists{/gist_id}","starred_url":"https://api.github.com/users/NUAA-AL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NUAA-AL/subscriptions","organizations_url":"https://api.github.com/users/NUAA-AL/orgs","repos_url":"https://api.github.com/users/NUAA-AL/repos","events_url":"https://api.github.com/users/NUAA-AL/events{/privacy}","received_events_url":"https://api.github.com/users/NUAA-AL/received_events","type":"User","site_admin":false},"created_at":"2019-02-21T04:10:48Z","updated_at":"2019-02-21T04:10:48Z","author_association":"OWNER","body":"Hi, sreevarsha.\r\n\r\nIf you want to use a Tensorflow model in AlExperiment class. You should pass a model object that accord scikit-learn api. You can re-encapsulate your model to achieve this. For example:\r\n```\r\nclass my_model:\r\n\r\n    def fit(X, y):\r\n        my_own_training_function(...)\r\n\r\n    def predict(X):\r\n        my_own_predict_function(...)\r\n\r\n    def predict_proba(X):\r\n        my_own_proba_predict_function(...)\r\n```\r\n\r\nHowever, we suggest you to customize the whole active learning process instead of using AlExperiment due to the particularity of the model you are using. In this way, you can manage your model without any limitations. All you need to do is copy the example codes in the alipy_source_code_dir/examples/settings/query_instance.py, and replace the codes of model training/testing functions into your own functions (or replace any codes as you need). \r\n\r\n```\r\n# Update model and calc performance according to the model you are using\r\nmodel.fit(X=X[label_ind.index, :], y=y[label_ind.index])\r\npred = model.predict(X[test_idx, :])\r\n```\r\n\r\nFor the model used in the instance selection function, there are 3 ways to using your own model:\r\n\r\n1. Use `select(label_index, unlabel_index, model=None, batch_size=1)` if you are using sklearn model (or re-encapsulate your model to make it accord scikit-learn api).\r\n\r\n```\r\nmodel.fit(X[Lind.index], y[Lind.index])\r\nselect_ind = uncertainStrategy.select(Lind, Uind, batch_size=1, model=model)\r\n```\r\n\r\nIt will using the given model object to get the necessary infomation from the unlabeled data. Note that, in most cases, the strategy may need the probabilistic output, so please make sure your model has the `predict_proba()` method.\r\n\r\n2. Use the default logistic regression model to choose the instances by passing None to the model parameter. (It will train a logistic regression model from the labeled set for evaluating the unlabeled data.)\r\n\r\n`select_ind = uncertainStrategy.select(Lind, Uind, batch_size=1, model=None)`\r\n\r\n3. Use `select_by_prediction_mat()` by providing the probabilistic prediction matrix of your own model, shape is usually like [n_samples, n_classes]. (Some other types of output may be required according to different strategies, learn more in API reference.)\r\n\r\n```\r\npredict_result = my_model.get_prediction_of_data(X[Uind.index])\r\nselect_ind = QBCStrategy.select_by_prediction_mat(unlabel_index=Uind,\r\n                                                  predict=predict_result,\r\n                                                  batch_size=1)\r\n```\r\n\r\nNote that, not every strategy implements the `select_by_prediction_mat()`  methods. Also, the parameter requirements are different too. Please read the API reference before using each strategy.\r\n","reactions":{"url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/comments/465854938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"NUAA-AL","id":46415435,"node_id":"MDQ6VXNlcjQ2NDE1NDM1","avatar_url":"https://avatars.githubusercontent.com/u/46415435?v=4","gravatar_id":"","url":"https://api.github.com/users/NUAA-AL","html_url":"https://github.com/NUAA-AL","followers_url":"https://api.github.com/users/NUAA-AL/followers","following_url":"https://api.github.com/users/NUAA-AL/following{/other_user}","gists_url":"https://api.github.com/users/NUAA-AL/gists{/gist_id}","starred_url":"https://api.github.com/users/NUAA-AL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NUAA-AL/subscriptions","organizations_url":"https://api.github.com/users/NUAA-AL/orgs","repos_url":"https://api.github.com/users/NUAA-AL/repos","events_url":"https://api.github.com/users/NUAA-AL/events{/privacy}","received_events_url":"https://api.github.com/users/NUAA-AL/received_events","type":"User","site_admin":false}},{"id":2173546278,"node_id":"MDExOkNsb3NlZEV2ZW50MjE3MzU0NjI3OA==","url":"https://api.github.com/repos/NUAA-AL/ALiPy/issues/events/2173546278","actor":{"login":"tangypnuaa","id":40466308,"node_id":"MDQ6VXNlcjQwNDY2MzA4","avatar_url":"https://avatars.githubusercontent.com/u/40466308?v=4","gravatar_id":"","url":"https://api.github.com/users/tangypnuaa","html_url":"https://github.com/tangypnuaa","followers_url":"https://api.github.com/users/tangypnuaa/followers","following_url":"https://api.github.com/users/tangypnuaa/following{/other_user}","gists_url":"https://api.github.com/users/tangypnuaa/gists{/gist_id}","starred_url":"https://api.github.com/users/tangypnuaa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tangypnuaa/subscriptions","organizations_url":"https://api.github.com/users/tangypnuaa/orgs","repos_url":"https://api.github.com/users/tangypnuaa/repos","events_url":"https://api.github.com/users/tangypnuaa/events{/privacy}","received_events_url":"https://api.github.com/users/tangypnuaa/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2019-03-01T09:56:58Z","state_reason":null,"performed_via_github_app":null}]