{"url":"https://api.github.com/repos/cair/TsetlinMachine/issues/7","repository_url":"https://api.github.com/repos/cair/TsetlinMachine","labels_url":"https://api.github.com/repos/cair/TsetlinMachine/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/cair/TsetlinMachine/issues/7/comments","events_url":"https://api.github.com/repos/cair/TsetlinMachine/issues/7/events","html_url":"https://github.com/cair/TsetlinMachine/issues/7","id":370785586,"node_id":"MDU6SXNzdWUzNzA3ODU1ODY=","number":7,"title":"Typ II feedback implementation","user":{"login":"WojciechMigda","id":3889167,"node_id":"MDQ6VXNlcjM4ODkxNjc=","avatar_url":"https://avatars.githubusercontent.com/u/3889167?v=4","gravatar_id":"","url":"https://api.github.com/users/WojciechMigda","html_url":"https://github.com/WojciechMigda","followers_url":"https://api.github.com/users/WojciechMigda/followers","following_url":"https://api.github.com/users/WojciechMigda/following{/other_user}","gists_url":"https://api.github.com/users/WojciechMigda/gists{/gist_id}","starred_url":"https://api.github.com/users/WojciechMigda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WojciechMigda/subscriptions","organizations_url":"https://api.github.com/users/WojciechMigda/orgs","repos_url":"https://api.github.com/users/WojciechMigda/repos","events_url":"https://api.github.com/users/WojciechMigda/events{/privacy}","received_events_url":"https://api.github.com/users/WojciechMigda/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-10-16T20:27:23Z","updated_at":"2018-11-04T11:48:36Z","closed_at":"2018-11-04T11:48:36Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI have a question regarding Type II feedback Multiclass TM code.\r\nWe have:\r\n```\r\naction_include = self.action(self.ta_state[j,k,0])\r\naction_include_negated = self.action(self.ta_state[j,k,1])\r\n\r\nif X[k] == 0:\r\n\tif action_include == 0 and self.ta_state[j,k,0] < self.number_of_states*2:\r\n\t\tself.ta_state[j,k,0] += 1\r\nelif X[k] == 1:\r\n\tif action_include_negated == 0 and self.ta_state[j,k,1] < self.number_of_states*2:\r\n\t\tself.ta_state[j,k,1] += 1\r\n```\r\n\r\nsince `action`  returns 0 iff its argument is less than `number_of_states`\r\n```\r\ncdef int action(self, int state):\r\n\tif state <= self.number_of_states:\r\n\t\treturn 0\r\n\telse:\r\n\t\treturn 1\r\n```\r\nit follows that right hand parts of conjunctions used as expressions to `if` statements above will always evaluate to true. Hence, the above simplifies to:\r\n```\r\nif X[k] == 0:\r\n\tif action_include == 0:\r\n\t\tself.ta_state[j,k,0] += 1\r\nelif X[k] == 1:\r\n\tif action_include_negated == 0:\r\n\t\tself.ta_state[j,k,1] += 1\r\n```\r\nIs that correct or I am missing something?\r\nThanks.","closed_by":{"login":"olegranmo","id":4214416,"node_id":"MDQ6VXNlcjQyMTQ0MTY=","avatar_url":"https://avatars.githubusercontent.com/u/4214416?v=4","gravatar_id":"","url":"https://api.github.com/users/olegranmo","html_url":"https://github.com/olegranmo","followers_url":"https://api.github.com/users/olegranmo/followers","following_url":"https://api.github.com/users/olegranmo/following{/other_user}","gists_url":"https://api.github.com/users/olegranmo/gists{/gist_id}","starred_url":"https://api.github.com/users/olegranmo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olegranmo/subscriptions","organizations_url":"https://api.github.com/users/olegranmo/orgs","repos_url":"https://api.github.com/users/olegranmo/repos","events_url":"https://api.github.com/users/olegranmo/events{/privacy}","received_events_url":"https://api.github.com/users/olegranmo/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/cair/TsetlinMachine/issues/7/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/cair/TsetlinMachine/issues/7/timeline","performed_via_github_app":null,"state_reason":"completed"}