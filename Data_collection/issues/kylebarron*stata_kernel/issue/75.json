{"url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/75","repository_url":"https://api.github.com/repos/kylebarron/stata_kernel","labels_url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/75/labels{/name}","comments_url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/75/comments","events_url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/75/events","html_url":"https://github.com/kylebarron/stata_kernel/issues/75","id":350270795,"node_id":"MDU6SXNzdWUzNTAyNzA3OTU=","number":75,"title":"Use fdpexpect to read log file on all platforms","user":{"login":"kylebarron","id":15164633,"node_id":"MDQ6VXNlcjE1MTY0NjMz","avatar_url":"https://avatars.githubusercontent.com/u/15164633?v=4","gravatar_id":"","url":"https://api.github.com/users/kylebarron","html_url":"https://github.com/kylebarron","followers_url":"https://api.github.com/users/kylebarron/followers","following_url":"https://api.github.com/users/kylebarron/following{/other_user}","gists_url":"https://api.github.com/users/kylebarron/gists{/gist_id}","starred_url":"https://api.github.com/users/kylebarron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kylebarron/subscriptions","organizations_url":"https://api.github.com/users/kylebarron/orgs","repos_url":"https://api.github.com/users/kylebarron/repos","events_url":"https://api.github.com/users/kylebarron/events{/privacy}","received_events_url":"https://api.github.com/users/kylebarron/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-08-14T03:46:35Z","updated_at":"2018-08-19T19:21:54Z","closed_at":"2018-08-19T19:21:54Z","author_association":"OWNER","active_lock_reason":null,"body":"Code idea:\r\n\r\nThis doesn't even have to be async does it @mcaceresb ? Cause the only other stuff I'd be doing could be done inside the `if` clauses in this function?\r\n\r\nInitialization\r\n```py\r\nfrom pexpect import fdpexpect\r\nfd = Path('C:/Users/Kyle/test.log').open('r', encoding='utf-8')\r\nlog = fdpexpect.fdspawn(fd, encoding='utf-8')\r\n```\r\n\r\nFor each code send:\r\n```py\r\nmatch_index = -1\r\nwhile match_index != 0:\r\n    match_index = log.expect(['SHA1', r'r\\((\\d+)\\);($|\\r\\n)', 'graph_notice', r'\\r?\\n'], timeout=None)\r\n    if match_index == 0:\r\n        break\r\n    if match_index == 1:\r\n        response = log.before\r\n        # Send on stderr\r\n        continue\r\n    if match_index == 2:\r\n        # load_graph\r\n        # send graph to user\r\n    if match_index == 3:\r\n        # regular line\r\n        response = log.before\r\n        # send on stdout\r\n        continue\r\n\r\nresponse = log.before\r\n# Then scroll to next newline, but not including period to make it easier to code lines later\r\nlog.expect('\\r?\\n')\r\n```","closed_by":{"login":"kylebarron","id":15164633,"node_id":"MDQ6VXNlcjE1MTY0NjMz","avatar_url":"https://avatars.githubusercontent.com/u/15164633?v=4","gravatar_id":"","url":"https://api.github.com/users/kylebarron","html_url":"https://github.com/kylebarron","followers_url":"https://api.github.com/users/kylebarron/followers","following_url":"https://api.github.com/users/kylebarron/following{/other_user}","gists_url":"https://api.github.com/users/kylebarron/gists{/gist_id}","starred_url":"https://api.github.com/users/kylebarron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kylebarron/subscriptions","organizations_url":"https://api.github.com/users/kylebarron/orgs","repos_url":"https://api.github.com/users/kylebarron/repos","events_url":"https://api.github.com/users/kylebarron/events{/privacy}","received_events_url":"https://api.github.com/users/kylebarron/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/75/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/75/timeline","performed_via_github_app":null,"state_reason":"completed"}