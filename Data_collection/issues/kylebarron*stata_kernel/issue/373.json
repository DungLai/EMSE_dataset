{"url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/373","repository_url":"https://api.github.com/repos/kylebarron/stata_kernel","labels_url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/373/labels{/name}","comments_url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/373/comments","events_url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/373/events","html_url":"https://github.com/kylebarron/stata_kernel/issues/373","id":766678194,"node_id":"MDU6SXNzdWU3NjY2NzgxOTQ=","number":373,"title":"Trying to use a stata kernel with nbgrader","user":{"login":"perllaghu","id":1478924,"node_id":"MDQ6VXNlcjE0Nzg5MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1478924?v=4","gravatar_id":"","url":"https://api.github.com/users/perllaghu","html_url":"https://github.com/perllaghu","followers_url":"https://api.github.com/users/perllaghu/followers","following_url":"https://api.github.com/users/perllaghu/following{/other_user}","gists_url":"https://api.github.com/users/perllaghu/gists{/gist_id}","starred_url":"https://api.github.com/users/perllaghu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/perllaghu/subscriptions","organizations_url":"https://api.github.com/users/perllaghu/orgs","repos_url":"https://api.github.com/users/perllaghu/repos","events_url":"https://api.github.com/users/perllaghu/events{/privacy}","received_events_url":"https://api.github.com/users/perllaghu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2020-12-14T16:12:50Z","updated_at":"2021-01-08T07:48:59Z","closed_at":"2021-01-08T07:48:59Z","author_association":"NONE","active_lock_reason":null,"body":"## A bit of a long into to get to the problem, apologies\r\n\r\nI'm trying to get nbgrader (https://github.com/jupyter/nbgrader) to work properly with a stata kernel.\r\n\r\nI have everything working apart from the grading functionality.\r\n\r\nWhen autograding, nbgrader basically runs the notebook, and uses the cell outputs to determine the points to award for each cell.\r\n\r\nWhen awarding marks to a cell, nbgrader checks the output of the cell & makes some deductions (see https://github.com/jupyter/nbgrader/blob/master/nbgrader/utils.py#L97-L130 )\r\n\r\nThere are three states that are looked for:\r\n\r\n1. `output.output_type == 'error' or output.output_type == \"stream\" and output.name == \"stderr\":` (errors / failures get 0 points)\r\n\r\nThis is best exemplified with the pythonic\r\n\r\n    # YOUR CODE HERE\r\n    raise NotImplementedError()\r\n\r\nI thought was the right solution:\r\n\r\n    * YOUR CODE HERE\r\n    display as error \"index variable not found\"\r\n\r\n.... but apparently not as it gives a cell output of\r\n```\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"index variable not found\\n\"\r\n     ]\r\n    }\r\n   ],\r\n```\r\n..... so obviously that's not actually raising an error.\r\n\r\n2. `output.output_type == 'execute_result'` (calculate some partial credit value)\r\n\r\nThis is where you get the cell to output a numeric, and can therefore use that to determine a partial credit.\r\n\r\n(I've not tried that one in python... but all the outputs I've seen for the stata kernel seem to be `streams` - so I don't hold much hope there)\r\n\r\n3. _anything else_ gets full points.\r\n\r\n## This is where I'm at, and having problems.\r\n\r\n### understandable behaviour\r\n\r\nSource cell:\r\n```\r\ndisplay $points\r\n```\r\n\r\noutput of cell:\r\n```\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"0\\n\"\r\n     ]\r\n    }\r\n   ],\r\n```\r\n### Wrong / misunderstood behaviour\r\n\r\nSource cell (syntax error.... I'm getting desperate):\r\n```\r\ngen foo = \"foo\"\r\nif \"$foo\" != \"bar\" {\r\n  display error\r\n}\r\n```\r\n\r\noutput of cell:\r\n\r\n```\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"\\n\",\r\n      \"\\n\",\r\n      \"error not found\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stderr\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"r(111);\\n\",\r\n      \"r(111);\\n\",\r\n      \"r(111);\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"\\n\",\r\n      \"\\n\",\r\n      \"\\n\"\r\n     ]\r\n    }\r\n   ],\r\n```\r\nSo nearly...... but where do those last 3 blank lines come from? They trump the error before it - which means the cell _passes_, and gets full points.\r\n\r\n### Questions\r\n\r\n* Is there a way in stata to actually emit a \"Raised Error\" thing in Stata?\r\n\r\nPythonic errors output:\r\n```\r\n   \"outputs\": [\r\n    {\r\n     \"ename\": \"ModuleNotFoundError\",\r\n     \"evalue\": \"No module named 'matplotlib'\",\r\n     \"output_type\": \"error\",\r\n     \"traceback\": [\r\n          ..... <snip>\r\n     ]\r\n    }\r\n```\r\n* Can I do something to stop these extra sections of outputs appearing?\r\n\r\n#### Other information\r\n\r\nIf you didn't attach the debugging log, please provide:\r\n\r\n- Ubuntu 18:04 in a Docekr Notebook ( jupyter/minimal-notebook:dc9744740e12 )\r\n- Stata version - installed from Stata16Linux64.tar.gz\r\n- Package version 1.12.2\r\n","closed_by":{"login":"perllaghu","id":1478924,"node_id":"MDQ6VXNlcjE0Nzg5MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1478924?v=4","gravatar_id":"","url":"https://api.github.com/users/perllaghu","html_url":"https://github.com/perllaghu","followers_url":"https://api.github.com/users/perllaghu/followers","following_url":"https://api.github.com/users/perllaghu/following{/other_user}","gists_url":"https://api.github.com/users/perllaghu/gists{/gist_id}","starred_url":"https://api.github.com/users/perllaghu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/perllaghu/subscriptions","organizations_url":"https://api.github.com/users/perllaghu/orgs","repos_url":"https://api.github.com/users/perllaghu/repos","events_url":"https://api.github.com/users/perllaghu/events{/privacy}","received_events_url":"https://api.github.com/users/perllaghu/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/kylebarron/stata_kernel/issues/373/timeline","performed_via_github_app":null,"state_reason":"completed"}