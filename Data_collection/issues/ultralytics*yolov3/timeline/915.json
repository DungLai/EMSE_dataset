[{"id":3117221373,"node_id":"MDEyOkxhYmVsZWRFdmVudDMxMTcyMjEzNzM=","url":"https://api.github.com/repos/ultralytics/yolov3/issues/events/3117221373","actor":{"login":"AlphaGoMK","id":24295596,"node_id":"MDQ6VXNlcjI0Mjk1NTk2","avatar_url":"https://avatars.githubusercontent.com/u/24295596?v=4","gravatar_id":"","url":"https://api.github.com/users/AlphaGoMK","html_url":"https://github.com/AlphaGoMK","followers_url":"https://api.github.com/users/AlphaGoMK/followers","following_url":"https://api.github.com/users/AlphaGoMK/following{/other_user}","gists_url":"https://api.github.com/users/AlphaGoMK/gists{/gist_id}","starred_url":"https://api.github.com/users/AlphaGoMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlphaGoMK/subscriptions","organizations_url":"https://api.github.com/users/AlphaGoMK/orgs","repos_url":"https://api.github.com/users/AlphaGoMK/repos","events_url":"https://api.github.com/users/AlphaGoMK/events{/privacy}","received_events_url":"https://api.github.com/users/AlphaGoMK/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2020-03-11T03:51:12Z","label":{"name":"bug","color":"d73a4a"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/comments/597781344","html_url":"https://github.com/ultralytics/yolov3/issues/915#issuecomment-597781344","issue_url":"https://api.github.com/repos/ultralytics/yolov3/issues/915","id":597781344,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Nzc4MTM0NA==","user":{"login":"glenn-jocher","id":26833433,"node_id":"MDQ6VXNlcjI2ODMzNDMz","avatar_url":"https://avatars.githubusercontent.com/u/26833433?v=4","gravatar_id":"","url":"https://api.github.com/users/glenn-jocher","html_url":"https://github.com/glenn-jocher","followers_url":"https://api.github.com/users/glenn-jocher/followers","following_url":"https://api.github.com/users/glenn-jocher/following{/other_user}","gists_url":"https://api.github.com/users/glenn-jocher/gists{/gist_id}","starred_url":"https://api.github.com/users/glenn-jocher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glenn-jocher/subscriptions","organizations_url":"https://api.github.com/users/glenn-jocher/orgs","repos_url":"https://api.github.com/users/glenn-jocher/repos","events_url":"https://api.github.com/users/glenn-jocher/events{/privacy}","received_events_url":"https://api.github.com/users/glenn-jocher/received_events","type":"User","site_admin":false},"created_at":"2020-03-11T17:58:35Z","updated_at":"2020-03-11T18:00:34Z","author_association":"MEMBER","body":"@AlphaGoMK your command should work properly, except that most original training was done with COCO 2014, so you want to use coco2014.data to test, not coco2017.data. Note it will download pjreddie's original *.weights files automatically. When we run this code here everything seems in order.\r\n\r\nNote that test.py natively returns mAPs that are slightly below pycocotools, but the difference is generally < 1%. Also note that the best performing yolo model is yolov3-spp-ultralytics.pt, trained from scratch with this repo. See https://github.com/ultralytics/yolov3#map\r\n\r\n```\r\ngit clone https://github.com/ultralytics/yolov3\r\nbash yolov3/data/get_coco2014.sh\r\ncd yolov3\r\npython3 test.py --weights yolov3-spp.weights -cfg yolov3-spp.cfg --data coco2014-data --save-json\r\n\r\nNamespace(batch_size=32, cfg='yolov3-spp.cfg', conf_thres=0.001, data='data/coco2014.data', device='', img_size=416, iou_thres=0.6, save_json=True, single_cls=False, task='test', weights='yolov3-spp.weights')\r\nUsing CUDA device0 _CudaDeviceProperties(name='Tesla P100-PCIE-16GB', total_memory=16280MB)\r\n\r\nDownloading https://drive.google.com/uc?export=download&id=16lYS4bcIdM2HdmyJBVDOvt3Trx6N3W2R as yolov3-spp.weights... Done (4.7s)\r\nCaching labels (4954 found, 46 missing, 0 empty, 0 duplicate, for 5000 images): 100% 5000/5000 [00:00<00:00, 10020.79it/s]\r\n               Class    Images   Targets         P         R   mAP@0.5        F1: 100% 157/157 [02:47<00:00,  1.75it/s]\r\n                 all     5e+03  3.51e+04     0.824     0.401     0.566      0.52\r\n              person     5e+03  1.05e+04     0.879     0.558     0.736     0.683\r\n             bicycle     5e+03       313     0.891     0.262      0.47     0.405\r\n                 car     5e+03  1.64e+03     0.835     0.425     0.596     0.564\r\n          motorcycle     5e+03       388     0.936     0.455     0.671     0.612\r\n            airplane     5e+03       131     0.967     0.681     0.851     0.799\r\n                 bus     5e+03       259     0.946     0.676     0.838     0.788\r\n               train     5e+03       212     0.927     0.718      0.83     0.809\r\n               truck     5e+03       352     0.824     0.346     0.579     0.488\r\n                boat     5e+03       458     0.818     0.256     0.477      0.39\r\n       traffic light     5e+03       516     0.786     0.329     0.484     0.464\r\n        fire hydrant     5e+03        83         1     0.751     0.853     0.857\r\n           stop sign     5e+03        84     0.929     0.679     0.788     0.784\r\n       parking meter     5e+03        59     0.825     0.399     0.511     0.538\r\n               bench     5e+03       471     0.814     0.195     0.341     0.314\r\n                bird     5e+03       453     0.774     0.362     0.481     0.493\r\n                 cat     5e+03       195     0.837      0.71     0.783     0.768\r\n                 dog     5e+03       223      0.92     0.668     0.837     0.774\r\n               horse     5e+03       305     0.932     0.633     0.813     0.754\r\n               sheep     5e+03       306     0.887     0.507     0.713     0.645\r\n                 cow     5e+03       376     0.869     0.503     0.678     0.637\r\n            elephant     5e+03       283      0.93     0.801     0.905     0.861\r\n                bear     5e+03        53     0.933     0.698     0.893     0.799\r\n               zebra     5e+03       275     0.947     0.716     0.872     0.816\r\n             giraffe     5e+03       170     0.985     0.792     0.909     0.878\r\n            backpack     5e+03       384     0.795     0.132     0.334     0.226\r\n            umbrella     5e+03       387     0.843     0.359     0.587     0.504\r\n             handbag     5e+03       483     0.666    0.0742     0.206     0.133\r\n                 tie     5e+03       290     0.766     0.327     0.482     0.458\r\n            suitcase     5e+03       309     0.814     0.353     0.576     0.492\r\n             frisbee     5e+03       109     0.945     0.626     0.798     0.753\r\n                skis     5e+03       281      0.76     0.158     0.389     0.262\r\n           snowboard     5e+03        90     0.814     0.367     0.528     0.506\r\n         sports ball     5e+03       233     0.854     0.528     0.622     0.652\r\n                kite     5e+03       381     0.722     0.457     0.563      0.56\r\n        baseball bat     5e+03       123     0.934     0.374     0.581     0.534\r\n      baseball glove     5e+03       139       0.8     0.374     0.466      0.51\r\n          skateboard     5e+03       215     0.909     0.559     0.706     0.692\r\n           surfboard     5e+03       266     0.869     0.375     0.613     0.523\r\n       tennis racket     5e+03       183     0.937      0.57     0.724     0.709\r\n              bottle     5e+03       939     0.737     0.284     0.454      0.41\r\n          wine glass     5e+03       363     0.858      0.32      0.51     0.466\r\n                 cup     5e+03       891     0.822     0.327     0.498     0.468\r\n                fork     5e+03       234      0.87     0.218     0.411     0.349\r\n               knife     5e+03       290     0.656     0.138     0.275     0.228\r\n               spoon     5e+03       253      0.75    0.0949     0.235     0.168\r\n                bowl     5e+03       617     0.747     0.321     0.493     0.449\r\n              banana     5e+03       359     0.814     0.184     0.379       0.3\r\n               apple     5e+03       158     0.474     0.184     0.228     0.265\r\n            sandwich     5e+03       158      0.74     0.325     0.496     0.452\r\n              orange     5e+03       185     0.583     0.205     0.272     0.304\r\n            broccoli     5e+03       330     0.681     0.115     0.358     0.197\r\n              carrot     5e+03       341     0.636     0.108     0.275     0.184\r\n             hot dog     5e+03       160     0.813     0.272     0.511     0.408\r\n               pizza     5e+03       223     0.853     0.489     0.649     0.621\r\n               donut     5e+03       225     0.829     0.462      0.62     0.593\r\n                cake     5e+03       236     0.857     0.356     0.528     0.503\r\n               chair     5e+03  1.59e+03     0.806     0.227     0.428     0.354\r\n               couch     5e+03       236     0.729     0.419     0.603     0.532\r\n        potted plant     5e+03       429     0.831     0.196     0.464     0.317\r\n                 bed     5e+03       195     0.869     0.564     0.745     0.684\r\n        dining table     5e+03       633     0.777     0.298     0.489      0.43\r\n              toilet     5e+03       179     0.922     0.658     0.841     0.768\r\n                  tv     5e+03       257     0.895     0.598     0.778     0.717\r\n              laptop     5e+03       236     0.946     0.523     0.745     0.674\r\n               mouse     5e+03        95     0.884     0.563     0.683     0.688\r\n              remote     5e+03       241     0.771     0.265       0.5     0.395\r\n            keyboard     5e+03       117     0.953     0.518     0.701     0.671\r\n          cell phone     5e+03       291     0.764     0.285     0.389     0.415\r\n           microwave     5e+03        88      0.88     0.585     0.747     0.703\r\n                oven     5e+03       142     0.785     0.317     0.533     0.451\r\n             toaster     5e+03        11         0         0     0.166         0\r\n                sink     5e+03       211     0.834     0.389     0.581      0.53\r\n        refrigerator     5e+03       107     0.905     0.534     0.748     0.672\r\n                book     5e+03  1.03e+03     0.494     0.103     0.171      0.17\r\n               clock     5e+03       290     0.935     0.595     0.731     0.727\r\n                vase     5e+03       350     0.862     0.339     0.528     0.487\r\n            scissors     5e+03        56     0.858     0.232     0.408     0.365\r\n          teddy bear     5e+03       238     0.812     0.454     0.648     0.583\r\n          hair drier     5e+03        11         1    0.0909     0.103     0.167\r\n          toothbrush     5e+03        77     0.829     0.189       0.3     0.308\r\nSpeed: 5.8/1.8/7.5 ms inference/NMS/total per 416x416 image at batch-size 32\r\n\r\nCOCO mAP with pycocotools...\r\nloading annotations into memory...\r\nDone (t=4.30s)\r\ncreating index...\r\nindex created!\r\nLoading and preparing results...\r\nDONE (t=4.70s)\r\ncreating index...\r\nindex created!\r\nRunning per image evaluation...\r\nEvaluate annotation type *bbox*\r\nDONE (t=69.35s).\r\nAccumulating evaluation results...\r\nDONE (t=9.05s).\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.341\r\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.575\r\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.353\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.158\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.363\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.504\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.290\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.464\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.510\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.304\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.554\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.681\r\n```","reactions":{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/comments/597781344/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"glenn-jocher","id":26833433,"node_id":"MDQ6VXNlcjI2ODMzNDMz","avatar_url":"https://avatars.githubusercontent.com/u/26833433?v=4","gravatar_id":"","url":"https://api.github.com/users/glenn-jocher","html_url":"https://github.com/glenn-jocher","followers_url":"https://api.github.com/users/glenn-jocher/followers","following_url":"https://api.github.com/users/glenn-jocher/following{/other_user}","gists_url":"https://api.github.com/users/glenn-jocher/gists{/gist_id}","starred_url":"https://api.github.com/users/glenn-jocher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glenn-jocher/subscriptions","organizations_url":"https://api.github.com/users/glenn-jocher/orgs","repos_url":"https://api.github.com/users/glenn-jocher/repos","events_url":"https://api.github.com/users/glenn-jocher/events{/privacy}","received_events_url":"https://api.github.com/users/glenn-jocher/received_events","type":"User","site_admin":false}},{"id":3119925750,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MzExOTkyNTc1MA==","url":"https://api.github.com/repos/ultralytics/yolov3/issues/events/3119925750","actor":{"login":"AlphaGoMK","id":24295596,"node_id":"MDQ6VXNlcjI0Mjk1NTk2","avatar_url":"https://avatars.githubusercontent.com/u/24295596?v=4","gravatar_id":"","url":"https://api.github.com/users/AlphaGoMK","html_url":"https://github.com/AlphaGoMK","followers_url":"https://api.github.com/users/AlphaGoMK/followers","following_url":"https://api.github.com/users/AlphaGoMK/following{/other_user}","gists_url":"https://api.github.com/users/AlphaGoMK/gists{/gist_id}","starred_url":"https://api.github.com/users/AlphaGoMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlphaGoMK/subscriptions","organizations_url":"https://api.github.com/users/AlphaGoMK/orgs","repos_url":"https://api.github.com/users/AlphaGoMK/repos","events_url":"https://api.github.com/users/AlphaGoMK/events{/privacy}","received_events_url":"https://api.github.com/users/AlphaGoMK/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-03-11T17:58:36Z","performed_via_github_app":null},{"id":3119925755,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDMxMTk5MjU3NTU=","url":"https://api.github.com/repos/ultralytics/yolov3/issues/events/3119925755","actor":{"login":"AlphaGoMK","id":24295596,"node_id":"MDQ6VXNlcjI0Mjk1NTk2","avatar_url":"https://avatars.githubusercontent.com/u/24295596?v=4","gravatar_id":"","url":"https://api.github.com/users/AlphaGoMK","html_url":"https://github.com/AlphaGoMK","followers_url":"https://api.github.com/users/AlphaGoMK/followers","following_url":"https://api.github.com/users/AlphaGoMK/following{/other_user}","gists_url":"https://api.github.com/users/AlphaGoMK/gists{/gist_id}","starred_url":"https://api.github.com/users/AlphaGoMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlphaGoMK/subscriptions","organizations_url":"https://api.github.com/users/AlphaGoMK/orgs","repos_url":"https://api.github.com/users/AlphaGoMK/repos","events_url":"https://api.github.com/users/AlphaGoMK/events{/privacy}","received_events_url":"https://api.github.com/users/AlphaGoMK/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-03-11T17:58:36Z","performed_via_github_app":null},{"id":3119926090,"node_id":"MDE0OlVubGFiZWxlZEV2ZW50MzExOTkyNjA5MA==","url":"https://api.github.com/repos/ultralytics/yolov3/issues/events/3119926090","actor":{"login":"glenn-jocher","id":26833433,"node_id":"MDQ6VXNlcjI2ODMzNDMz","avatar_url":"https://avatars.githubusercontent.com/u/26833433?v=4","gravatar_id":"","url":"https://api.github.com/users/glenn-jocher","html_url":"https://github.com/glenn-jocher","followers_url":"https://api.github.com/users/glenn-jocher/followers","following_url":"https://api.github.com/users/glenn-jocher/following{/other_user}","gists_url":"https://api.github.com/users/glenn-jocher/gists{/gist_id}","starred_url":"https://api.github.com/users/glenn-jocher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glenn-jocher/subscriptions","organizations_url":"https://api.github.com/users/glenn-jocher/orgs","repos_url":"https://api.github.com/users/glenn-jocher/repos","events_url":"https://api.github.com/users/glenn-jocher/events{/privacy}","received_events_url":"https://api.github.com/users/glenn-jocher/received_events","type":"User","site_admin":false},"event":"unlabeled","commit_id":null,"commit_url":null,"created_at":"2020-03-11T17:58:43Z","label":{"name":"bug","color":"d73a4a"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/comments/598036981","html_url":"https://github.com/ultralytics/yolov3/issues/915#issuecomment-598036981","issue_url":"https://api.github.com/repos/ultralytics/yolov3/issues/915","id":598036981,"node_id":"MDEyOklzc3VlQ29tbWVudDU5ODAzNjk4MQ==","user":{"login":"AlphaGoMK","id":24295596,"node_id":"MDQ6VXNlcjI0Mjk1NTk2","avatar_url":"https://avatars.githubusercontent.com/u/24295596?v=4","gravatar_id":"","url":"https://api.github.com/users/AlphaGoMK","html_url":"https://github.com/AlphaGoMK","followers_url":"https://api.github.com/users/AlphaGoMK/followers","following_url":"https://api.github.com/users/AlphaGoMK/following{/other_user}","gists_url":"https://api.github.com/users/AlphaGoMK/gists{/gist_id}","starred_url":"https://api.github.com/users/AlphaGoMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlphaGoMK/subscriptions","organizations_url":"https://api.github.com/users/AlphaGoMK/orgs","repos_url":"https://api.github.com/users/AlphaGoMK/repos","events_url":"https://api.github.com/users/AlphaGoMK/events{/privacy}","received_events_url":"https://api.github.com/users/AlphaGoMK/received_events","type":"User","site_admin":false},"created_at":"2020-03-12T07:02:36Z","updated_at":"2020-03-12T07:02:36Z","author_association":"NONE","body":"> @AlphaGoMK your command should work properly, except that most original training was done with COCO 2014, so you want to use coco2014.data to test, not coco2017.data. Note it will download pjreddie's original *.weights files automatically. When we run this code here everything seems in order.\r\n> \r\n> Note that test.py natively returns mAPs that are slightly below pycocotools, but the difference is generally < 1%. Also note that the best performing yolo model is yolov3-spp-ultralytics.pt, trained from scratch with this repo. See https://github.com/ultralytics/yolov3#map\r\n> \r\n> ```\r\n> git clone https://github.com/ultralytics/yolov3\r\n> bash yolov3/data/get_coco2014.sh\r\n> cd yolov3\r\n> python3 test.py --weights yolov3-spp.weights -cfg yolov3-spp.cfg --data coco2014-data --save-json\r\n> \r\n> Namespace(batch_size=32, cfg='yolov3-spp.cfg', conf_thres=0.001, data='data/coco2014.data', device='', img_size=416, iou_thres=0.6, save_json=True, single_cls=False, task='test', weights='yolov3-spp.weights')\r\n> Using CUDA device0 _CudaDeviceProperties(name='Tesla P100-PCIE-16GB', total_memory=16280MB)\r\n> \r\n> Downloading https://drive.google.com/uc?export=download&id=16lYS4bcIdM2HdmyJBVDOvt3Trx6N3W2R as yolov3-spp.weights... Done (4.7s)\r\n> Caching labels (4954 found, 46 missing, 0 empty, 0 duplicate, for 5000 images): 100% 5000/5000 [00:00<00:00, 10020.79it/s]\r\n>                Class    Images   Targets         P         R   mAP@0.5        F1: 100% 157/157 [02:47<00:00,  1.75it/s]\r\n>                  all     5e+03  3.51e+04     0.824     0.401     0.566      0.52\r\n>               person     5e+03  1.05e+04     0.879     0.558     0.736     0.683\r\n>              bicycle     5e+03       313     0.891     0.262      0.47     0.405\r\n>                  car     5e+03  1.64e+03     0.835     0.425     0.596     0.564\r\n>           motorcycle     5e+03       388     0.936     0.455     0.671     0.612\r\n>             airplane     5e+03       131     0.967     0.681     0.851     0.799\r\n>                  bus     5e+03       259     0.946     0.676     0.838     0.788\r\n>                train     5e+03       212     0.927     0.718      0.83     0.809\r\n>                truck     5e+03       352     0.824     0.346     0.579     0.488\r\n>                 boat     5e+03       458     0.818     0.256     0.477      0.39\r\n>        traffic light     5e+03       516     0.786     0.329     0.484     0.464\r\n>         fire hydrant     5e+03        83         1     0.751     0.853     0.857\r\n>            stop sign     5e+03        84     0.929     0.679     0.788     0.784\r\n>        parking meter     5e+03        59     0.825     0.399     0.511     0.538\r\n>                bench     5e+03       471     0.814     0.195     0.341     0.314\r\n>                 bird     5e+03       453     0.774     0.362     0.481     0.493\r\n>                  cat     5e+03       195     0.837      0.71     0.783     0.768\r\n>                  dog     5e+03       223      0.92     0.668     0.837     0.774\r\n>                horse     5e+03       305     0.932     0.633     0.813     0.754\r\n>                sheep     5e+03       306     0.887     0.507     0.713     0.645\r\n>                  cow     5e+03       376     0.869     0.503     0.678     0.637\r\n>             elephant     5e+03       283      0.93     0.801     0.905     0.861\r\n>                 bear     5e+03        53     0.933     0.698     0.893     0.799\r\n>                zebra     5e+03       275     0.947     0.716     0.872     0.816\r\n>              giraffe     5e+03       170     0.985     0.792     0.909     0.878\r\n>             backpack     5e+03       384     0.795     0.132     0.334     0.226\r\n>             umbrella     5e+03       387     0.843     0.359     0.587     0.504\r\n>              handbag     5e+03       483     0.666    0.0742     0.206     0.133\r\n>                  tie     5e+03       290     0.766     0.327     0.482     0.458\r\n>             suitcase     5e+03       309     0.814     0.353     0.576     0.492\r\n>              frisbee     5e+03       109     0.945     0.626     0.798     0.753\r\n>                 skis     5e+03       281      0.76     0.158     0.389     0.262\r\n>            snowboard     5e+03        90     0.814     0.367     0.528     0.506\r\n>          sports ball     5e+03       233     0.854     0.528     0.622     0.652\r\n>                 kite     5e+03       381     0.722     0.457     0.563      0.56\r\n>         baseball bat     5e+03       123     0.934     0.374     0.581     0.534\r\n>       baseball glove     5e+03       139       0.8     0.374     0.466      0.51\r\n>           skateboard     5e+03       215     0.909     0.559     0.706     0.692\r\n>            surfboard     5e+03       266     0.869     0.375     0.613     0.523\r\n>        tennis racket     5e+03       183     0.937      0.57     0.724     0.709\r\n>               bottle     5e+03       939     0.737     0.284     0.454      0.41\r\n>           wine glass     5e+03       363     0.858      0.32      0.51     0.466\r\n>                  cup     5e+03       891     0.822     0.327     0.498     0.468\r\n>                 fork     5e+03       234      0.87     0.218     0.411     0.349\r\n>                knife     5e+03       290     0.656     0.138     0.275     0.228\r\n>                spoon     5e+03       253      0.75    0.0949     0.235     0.168\r\n>                 bowl     5e+03       617     0.747     0.321     0.493     0.449\r\n>               banana     5e+03       359     0.814     0.184     0.379       0.3\r\n>                apple     5e+03       158     0.474     0.184     0.228     0.265\r\n>             sandwich     5e+03       158      0.74     0.325     0.496     0.452\r\n>               orange     5e+03       185     0.583     0.205     0.272     0.304\r\n>             broccoli     5e+03       330     0.681     0.115     0.358     0.197\r\n>               carrot     5e+03       341     0.636     0.108     0.275     0.184\r\n>              hot dog     5e+03       160     0.813     0.272     0.511     0.408\r\n>                pizza     5e+03       223     0.853     0.489     0.649     0.621\r\n>                donut     5e+03       225     0.829     0.462      0.62     0.593\r\n>                 cake     5e+03       236     0.857     0.356     0.528     0.503\r\n>                chair     5e+03  1.59e+03     0.806     0.227     0.428     0.354\r\n>                couch     5e+03       236     0.729     0.419     0.603     0.532\r\n>         potted plant     5e+03       429     0.831     0.196     0.464     0.317\r\n>                  bed     5e+03       195     0.869     0.564     0.745     0.684\r\n>         dining table     5e+03       633     0.777     0.298     0.489      0.43\r\n>               toilet     5e+03       179     0.922     0.658     0.841     0.768\r\n>                   tv     5e+03       257     0.895     0.598     0.778     0.717\r\n>               laptop     5e+03       236     0.946     0.523     0.745     0.674\r\n>                mouse     5e+03        95     0.884     0.563     0.683     0.688\r\n>               remote     5e+03       241     0.771     0.265       0.5     0.395\r\n>             keyboard     5e+03       117     0.953     0.518     0.701     0.671\r\n>           cell phone     5e+03       291     0.764     0.285     0.389     0.415\r\n>            microwave     5e+03        88      0.88     0.585     0.747     0.703\r\n>                 oven     5e+03       142     0.785     0.317     0.533     0.451\r\n>              toaster     5e+03        11         0         0     0.166         0\r\n>                 sink     5e+03       211     0.834     0.389     0.581      0.53\r\n>         refrigerator     5e+03       107     0.905     0.534     0.748     0.672\r\n>                 book     5e+03  1.03e+03     0.494     0.103     0.171      0.17\r\n>                clock     5e+03       290     0.935     0.595     0.731     0.727\r\n>                 vase     5e+03       350     0.862     0.339     0.528     0.487\r\n>             scissors     5e+03        56     0.858     0.232     0.408     0.365\r\n>           teddy bear     5e+03       238     0.812     0.454     0.648     0.583\r\n>           hair drier     5e+03        11         1    0.0909     0.103     0.167\r\n>           toothbrush     5e+03        77     0.829     0.189       0.3     0.308\r\n> Speed: 5.8/1.8/7.5 ms inference/NMS/total per 416x416 image at batch-size 32\r\n> \r\n> COCO mAP with pycocotools...\r\n> loading annotations into memory...\r\n> Done (t=4.30s)\r\n> creating index...\r\n> index created!\r\n> Loading and preparing results...\r\n> DONE (t=4.70s)\r\n> creating index...\r\n> index created!\r\n> Running per image evaluation...\r\n> Evaluate annotation type *bbox*\r\n> DONE (t=69.35s).\r\n> Accumulating evaluation results...\r\n> DONE (t=9.05s).\r\n>  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.341\r\n>  Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.575\r\n>  Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.353\r\n>  Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.158\r\n>  Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.363\r\n>  Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.504\r\n>  Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.290\r\n>  Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.464\r\n>  Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.510\r\n>  Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.304\r\n>  Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.554\r\n>  Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.681\r\n> ```\r\n\r\nThanks for your prompt reply 😊  \r\nFollow your advice, I've checked my validation data and found mistakes in `val2017.shapes`. I use train/val data generated by myself, and forget to substitute original shape file with generated new one. After fixing it, I get expected results.\r\nThanks again : )","reactions":{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/comments/598036981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"AlphaGoMK","id":24295596,"node_id":"MDQ6VXNlcjI0Mjk1NTk2","avatar_url":"https://avatars.githubusercontent.com/u/24295596?v=4","gravatar_id":"","url":"https://api.github.com/users/AlphaGoMK","html_url":"https://github.com/AlphaGoMK","followers_url":"https://api.github.com/users/AlphaGoMK/followers","following_url":"https://api.github.com/users/AlphaGoMK/following{/other_user}","gists_url":"https://api.github.com/users/AlphaGoMK/gists{/gist_id}","starred_url":"https://api.github.com/users/AlphaGoMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlphaGoMK/subscriptions","organizations_url":"https://api.github.com/users/AlphaGoMK/orgs","repos_url":"https://api.github.com/users/AlphaGoMK/repos","events_url":"https://api.github.com/users/AlphaGoMK/events{/privacy}","received_events_url":"https://api.github.com/users/AlphaGoMK/received_events","type":"User","site_admin":false}},{"id":3121627784,"node_id":"MDExOkNsb3NlZEV2ZW50MzEyMTYyNzc4NA==","url":"https://api.github.com/repos/ultralytics/yolov3/issues/events/3121627784","actor":{"login":"AlphaGoMK","id":24295596,"node_id":"MDQ6VXNlcjI0Mjk1NTk2","avatar_url":"https://avatars.githubusercontent.com/u/24295596?v=4","gravatar_id":"","url":"https://api.github.com/users/AlphaGoMK","html_url":"https://github.com/AlphaGoMK","followers_url":"https://api.github.com/users/AlphaGoMK/followers","following_url":"https://api.github.com/users/AlphaGoMK/following{/other_user}","gists_url":"https://api.github.com/users/AlphaGoMK/gists{/gist_id}","starred_url":"https://api.github.com/users/AlphaGoMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlphaGoMK/subscriptions","organizations_url":"https://api.github.com/users/AlphaGoMK/orgs","repos_url":"https://api.github.com/users/AlphaGoMK/repos","events_url":"https://api.github.com/users/AlphaGoMK/events{/privacy}","received_events_url":"https://api.github.com/users/AlphaGoMK/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2020-03-12T07:02:36Z","state_reason":null,"performed_via_github_app":null},{"id":3121627792,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MzEyMTYyNzc5Mg==","url":"https://api.github.com/repos/ultralytics/yolov3/issues/events/3121627792","actor":{"login":"AlphaGoMK","id":24295596,"node_id":"MDQ6VXNlcjI0Mjk1NTk2","avatar_url":"https://avatars.githubusercontent.com/u/24295596?v=4","gravatar_id":"","url":"https://api.github.com/users/AlphaGoMK","html_url":"https://github.com/AlphaGoMK","followers_url":"https://api.github.com/users/AlphaGoMK/followers","following_url":"https://api.github.com/users/AlphaGoMK/following{/other_user}","gists_url":"https://api.github.com/users/AlphaGoMK/gists{/gist_id}","starred_url":"https://api.github.com/users/AlphaGoMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlphaGoMK/subscriptions","organizations_url":"https://api.github.com/users/AlphaGoMK/orgs","repos_url":"https://api.github.com/users/AlphaGoMK/repos","events_url":"https://api.github.com/users/AlphaGoMK/events{/privacy}","received_events_url":"https://api.github.com/users/AlphaGoMK/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2020-03-12T07:02:37Z","performed_via_github_app":null},{"id":3121627795,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDMxMjE2Mjc3OTU=","url":"https://api.github.com/repos/ultralytics/yolov3/issues/events/3121627795","actor":{"login":"AlphaGoMK","id":24295596,"node_id":"MDQ6VXNlcjI0Mjk1NTk2","avatar_url":"https://avatars.githubusercontent.com/u/24295596?v=4","gravatar_id":"","url":"https://api.github.com/users/AlphaGoMK","html_url":"https://github.com/AlphaGoMK","followers_url":"https://api.github.com/users/AlphaGoMK/followers","following_url":"https://api.github.com/users/AlphaGoMK/following{/other_user}","gists_url":"https://api.github.com/users/AlphaGoMK/gists{/gist_id}","starred_url":"https://api.github.com/users/AlphaGoMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlphaGoMK/subscriptions","organizations_url":"https://api.github.com/users/AlphaGoMK/orgs","repos_url":"https://api.github.com/users/AlphaGoMK/repos","events_url":"https://api.github.com/users/AlphaGoMK/events{/privacy}","received_events_url":"https://api.github.com/users/AlphaGoMK/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2020-03-12T07:02:37Z","performed_via_github_app":null}]