{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/1780","repository_url":"https://api.github.com/repos/ultralytics/yolov3","labels_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1780/labels{/name}","comments_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1780/comments","events_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1780/events","html_url":"https://github.com/ultralytics/yolov3/issues/1780","id":909667079,"node_id":"MDU6SXNzdWU5MDk2NjcwNzk=","number":1780,"title":"How can I produce profiling(time for each layers) for yolov3-tiny?","user":{"login":"jaskiratsingh2000","id":10228651,"node_id":"MDQ6VXNlcjEwMjI4NjUx","avatar_url":"https://avatars.githubusercontent.com/u/10228651?v=4","gravatar_id":"","url":"https://api.github.com/users/jaskiratsingh2000","html_url":"https://github.com/jaskiratsingh2000","followers_url":"https://api.github.com/users/jaskiratsingh2000/followers","following_url":"https://api.github.com/users/jaskiratsingh2000/following{/other_user}","gists_url":"https://api.github.com/users/jaskiratsingh2000/gists{/gist_id}","starred_url":"https://api.github.com/users/jaskiratsingh2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaskiratsingh2000/subscriptions","organizations_url":"https://api.github.com/users/jaskiratsingh2000/orgs","repos_url":"https://api.github.com/users/jaskiratsingh2000/repos","events_url":"https://api.github.com/users/jaskiratsingh2000/events{/privacy}","received_events_url":"https://api.github.com/users/jaskiratsingh2000/received_events","type":"User","site_admin":false},"labels":[{"id":1035696376,"node_id":"MDU6TGFiZWwxMDM1Njk2Mzc2","url":"https://api.github.com/repos/ultralytics/yolov3/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"},{"id":1890885613,"node_id":"MDU6TGFiZWwxODkwODg1NjEz","url":"https://api.github.com/repos/ultralytics/yolov3/labels/Stale","name":"Stale","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-06-02T16:15:36Z","updated_at":"2021-07-09T00:06:40Z","closed_at":"2021-07-09T00:06:40Z","author_association":"NONE","active_lock_reason":null,"body":"Hi @glenn-jocher I am addressing the issue [#3421](https://github.com/ultralytics/yolov5/issues/3421) from yolov5 repo since I believe that this would be the correct place to discuss about that.\r\n\r\nSo I want to produce profiling just like below but for the yolov3-tiny. I know how to do for yolov5 but the steps for producing the yolov3-tiny are not there and even I don't see the separate repo to do that. So can you please let me know about this @glenn-jocher ?\r\n\r\nThe thing to produce for yolov3-tiny is below\r\n```\r\nYOLOv5 ðŸš€ v5.0-100-g4a8d238 torch 1.7.0a0+e85d494 CPU\r\n\r\n\r\n                 from  n    params  module                                  arguments                     \r\n  0                -1  1      3520  models.common.Focus                     [3, 32, 3]                    \r\n  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]                \r\n  2                -1  1     18816  models.common.C3                        [64, 64, 1]                   \r\n  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]               \r\n  4                -1  1    156928  models.common.C3                        [128, 128, 3]                 \r\n  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]              \r\n  6                -1  1    625152  models.common.C3                        [256, 256, 3]                 \r\n  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]              \r\n  8                -1  1    656896  models.common.SPP                       [512, 512, [5, 9, 13]]        \r\n  9                -1  1   1182720  models.common.C3                        [512, 512, 1, False]          \r\n 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]              \r\n 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          \r\n 12           [-1, 6]  1         0  models.common.Concat                    [1]                           \r\n 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]          \r\n 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]              \r\n 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          \r\n 16           [-1, 4]  1         0  models.common.Concat                    [1]                           \r\n 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]          \r\n 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]              \r\n 19          [-1, 14]  1         0  models.common.Concat                    [1]                           \r\n 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]          \r\n 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]              \r\n 22          [-1, 10]  1         0  models.common.Concat                    [1]                           \r\n 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]          \r\n 24      [17, 20, 23]  1    229245  Detect                                  [80, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]\r\nModel Summary: 283 layers, 7276605 parameters, 7276605 gradients\r\n\r\n time (ms)     GFLOPS     params  module\r\n    180.91       0.00       3520  models.common.Focus\r\n    153.11       0.00      18560  models.common.Conv\r\n    321.00       0.00      18816  models.common.C3\r\n     92.07       0.00      73984  models.common.Conv\r\n    495.51       0.00     156928  models.common.C3\r\n     74.00       0.00     295424  models.common.Conv\r\n    403.86       0.00     625152  models.common.C3\r\n     64.33       0.00    1180672  models.common.Conv\r\n    162.37       0.00     656896  models.common.SPP\r\n    183.09       0.00    1182720  models.common.C3\r\n     37.09       0.00     131584  models.common.Conv\r\n      5.72       0.00          0  torch.nn.modules.upsampling.Upsample\r\n      9.12       0.00          0  models.common.Concat\r\n    218.21       0.00     361984  models.common.C3\r\n     28.29       0.00      33024  models.common.Conv\r\n      6.74       0.00          0  torch.nn.modules.upsampling.Upsample\r\n     12.23       0.00          0  models.common.Concat\r\n    228.79       0.00      90880  models.common.C3\r\n     50.36       0.00     147712  models.common.Conv\r\n      5.35       0.00          0  models.common.Concat\r\n    209.92       0.00     296448  models.common.C3\r\n     43.30       0.00     590336  models.common.Conv\r\n      0.35       0.00          0  models.common.Concat\r\n    248.59       0.00    1182720  models.common.C3\r\n     57.34       0.00     229245  Detect\r\n3291.7ms total\r\n","closed_by":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/1780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1780/timeline","performed_via_github_app":null,"state_reason":"completed"}