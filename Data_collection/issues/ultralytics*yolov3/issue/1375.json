{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/1375","repository_url":"https://api.github.com/repos/ultralytics/yolov3","labels_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1375/labels{/name}","comments_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1375/comments","events_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1375/events","html_url":"https://github.com/ultralytics/yolov3/issues/1375","id":653732045,"node_id":"MDU6SXNzdWU2NTM3MzIwNDU=","number":1375,"title":"Detect any object as one label(person), When I train coco 80 class","user":{"login":"lixiaohui2020","id":20109328,"node_id":"MDQ6VXNlcjIwMTA5MzI4","avatar_url":"https://avatars.githubusercontent.com/u/20109328?v=4","gravatar_id":"","url":"https://api.github.com/users/lixiaohui2020","html_url":"https://github.com/lixiaohui2020","followers_url":"https://api.github.com/users/lixiaohui2020/followers","following_url":"https://api.github.com/users/lixiaohui2020/following{/other_user}","gists_url":"https://api.github.com/users/lixiaohui2020/gists{/gist_id}","starred_url":"https://api.github.com/users/lixiaohui2020/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lixiaohui2020/subscriptions","organizations_url":"https://api.github.com/users/lixiaohui2020/orgs","repos_url":"https://api.github.com/users/lixiaohui2020/repos","events_url":"https://api.github.com/users/lixiaohui2020/events{/privacy}","received_events_url":"https://api.github.com/users/lixiaohui2020/received_events","type":"User","site_admin":false},"labels":[{"id":1035696372,"node_id":"MDU6TGFiZWwxMDM1Njk2Mzcy","url":"https://api.github.com/repos/ultralytics/yolov3/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1890885613,"node_id":"MDU6TGFiZWwxODkwODg1NjEz","url":"https://api.github.com/repos/ultralytics/yolov3/labels/Stale","name":"Stale","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-07-09T03:22:29Z","updated_at":"2020-08-16T00:26:23Z","closed_at":"2020-08-16T00:26:23Z","author_association":"NONE","active_lock_reason":null,"body":"## ðŸš€ Feature\r\nHi,\r\n I detect images and find all objects as one label person, after i train coco 80 class. I don't know  why?   \r\n@glenn-jocher hope your help!\r\n\r\n## Motivation\r\n**I only remend parser, the training codes as follow:**\r\n   ```\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument('--epochs', type=int, default=300)  # 500200 batches at bs 16, 117263 COCO images = 273 epochs\r\n    parser.add_argument('--batch-size', type=int, default=16)  # effective bs = batch_size * accumulate = 16 * 4 = 64\r\n    parser.add_argument('--cfg', type=str, default='cfg/yolo-tiny_v2_c80.cfg', help='*.cfg path')\r\n    parser.add_argument('--data', type=str, default='cfg/coco.data', help='*.data path')\r\n    parser.add_argument('--multi-scale', action='store_true', help='adjust (67%% - 150%%) img_size every 10 batches')\r\n    parser.add_argument('--img-size', nargs='+', type=int, default=[416, 416], help='[min_train, max-train, test]')\r\n    parser.add_argument('--rect', action='store_true', help='rectangular training')\r\n    parser.add_argument('--resume', action='store_true', help='resume training from last.pt')\r\n    parser.add_argument('--nosave', action='store_true', help='only save final checkpoint')\r\n    parser.add_argument('--notest', action='store_false', help='only test final epoch')\r\n    parser.add_argument('--evolve', action='store_true', help='evolve hyperparameters')\r\n    parser.add_argument('--bucket', type=str, default='', help='gsutil bucket')\r\n    parser.add_argument('--cache-images', action='store_true', help='cache images for faster training')\r\n    parser.add_argument('--pretrained_cfg', type=str, default='cfg/yolo-tiny.cfg', help='cfg file')\r\n    parser.add_argument('--weights', type=str, default='weights/yolov4-tiny.weights', help='initial weights path')\r\n    parser.add_argument('--model_flag', type=str, default='valid', help='initial weights path')\r\n    parser.add_argument('--name', default='yolo-tiny_v2_c80',\r\n                        help='renames results.txt to results_name.txt if supplied')\r\n    parser.add_argument('--device', default='4', help='device id (i.e. 0 or 0,1 or cpu)')\r\n    parser.add_argument('--adam', action='store_true', help='use adam optimizer')\r\n    parser.add_argument('--single-cls', action='store_true', help='train as single-class dataset')\r\n    parser.add_argument('--freeze-layers', action='store_true', help='Freeze non-output layers')\r\n    parser.add_argument(\"--checkpoints_path\", type=str, default='checkpoints/yolo-tiny_v2_c80')\r\n```\r\n\r\n**data cfg:**\r\n\r\n```\r\nclasses= 80\r\ntrain=data/coco/train2017.txt\r\ntrain_label=None\r\nvalid=data/coco/val2017.txt\r\nvalid_label=None\r\nnames=data/coco.names\r\n```\r\n\r\n**detect codes:**\r\n   ```\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument('--cfg', type=str, default='cfg/yolo-tiny_v2_c80.cfg', help='*.cfg path')\r\n    parser.add_argument('--names', type=str, default='data/coco.names',\r\n                        help='*.names path')  \r\n    parser.add_argument('--weights', type=str, default='checkpoints/yolo-tiny_v2_c80/best.pt',\r\n                        help='weights path') \r\n    parser.add_argument('--source', type=str, default='data/samples', help='source')  # input file/folder, 0 for webcam\r\n    parser.add_argument('--output', type=str, default='output', help='output folder')  # output folder\r\n    parser.add_argument('--multi_label', action='store_true', help='multi label or sigle class')\r\n    parser.add_argument('--img-size', type=int, default=416, help='inference size (pixels)')\r\n    parser.add_argument('--conf-thres', type=float, default=0.3, help='object confidence threshold')\r\n    parser.add_argument('--iou-thres', type=float, default=0.6, help='IOU threshold for NMS')\r\n    parser.add_argument('--fourcc', type=str, default='mp4v', help='output video codec (verify ffmpeg support)')\r\n    parser.add_argument('--half', action='store_true', help='half precision FP16 inference')\r\n    parser.add_argument('--device', default='0', help='device id (i.e. 0 or 0,1) or cpu')\r\n    parser.add_argument('--view-img', action='store_true', help='display results')\r\n    parser.add_argument('--save-txt', action='store_true', help='save results to *.txt')\r\n    parser.add_argument('--classes', nargs='+', type=int, help='filter by class')\r\n    parser.add_argument('--agnostic-nms', action='store_true', help='class-agnostic NMS')\r\n    parser.add_argument('--augment', action='store_true', help='augmented inference')\r\n```\r\n\r\n**detect results:**\r\n\r\n![000000006012](https://user-images.githubusercontent.com/20109328/86993370-6a5f1600-c1d6-11ea-85d1-8355888f9a83.jpg)\r\n![000000492878](https://user-images.githubusercontent.com/20109328/86993379-6df29d00-c1d6-11ea-8887-b62954a20c16.jpg)\r\n\r\n\r\n","closed_by":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/1375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1375/timeline","performed_via_github_app":null,"state_reason":"completed"}