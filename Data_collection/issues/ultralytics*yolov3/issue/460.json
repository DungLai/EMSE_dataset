{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/460","repository_url":"https://api.github.com/repos/ultralytics/yolov3","labels_url":"https://api.github.com/repos/ultralytics/yolov3/issues/460/labels{/name}","comments_url":"https://api.github.com/repos/ultralytics/yolov3/issues/460/comments","events_url":"https://api.github.com/repos/ultralytics/yolov3/issues/460/events","html_url":"https://github.com/ultralytics/yolov3/issues/460","id":482047290,"node_id":"MDU6SXNzdWU0ODIwNDcyOTA=","number":460,"title":"Proper Initialization in Conv2d() biases into YOLO Layers","user":{"login":"glenn-jocher","id":26833433,"node_id":"MDQ6VXNlcjI2ODMzNDMz","avatar_url":"https://avatars.githubusercontent.com/u/26833433?v=4","gravatar_id":"","url":"https://api.github.com/users/glenn-jocher","html_url":"https://github.com/glenn-jocher","followers_url":"https://api.github.com/users/glenn-jocher/followers","following_url":"https://api.github.com/users/glenn-jocher/following{/other_user}","gists_url":"https://api.github.com/users/glenn-jocher/gists{/gist_id}","starred_url":"https://api.github.com/users/glenn-jocher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glenn-jocher/subscriptions","organizations_url":"https://api.github.com/users/glenn-jocher/orgs","repos_url":"https://api.github.com/users/glenn-jocher/repos","events_url":"https://api.github.com/users/glenn-jocher/events{/privacy}","received_events_url":"https://api.github.com/users/glenn-jocher/received_events","type":"User","site_admin":false},"labels":[{"id":1035696376,"node_id":"MDU6TGFiZWwxMDM1Njk2Mzc2","url":"https://api.github.com/repos/ultralytics/yolov3/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"},{"id":1295180840,"node_id":"MDU6TGFiZWwxMjk1MTgwODQw","url":"https://api.github.com/repos/ultralytics/yolov3/labels/tutorial","name":"tutorial","color":"3cba0b","default":false,"description":"Tutorial or example"},{"id":1890885613,"node_id":"MDU6TGFiZWwxODkwODg1NjEz","url":"https://api.github.com/repos/ultralytics/yolov3/labels/Stale","name":"Stale","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2019-08-18T22:46:42Z","updated_at":"2020-11-14T00:25:08Z","closed_at":"2020-11-14T00:25:08Z","author_association":"MEMBER","active_lock_reason":null,"body":"I discovered a trick we have not exploited yet on review of the Focal Loss [paper](https://arxiv.org/abs/1708.02002) section 3.3:\r\n\r\n\r\n> **3.3. Class Imbalance and Model Initialization**\r\n> Binary classification models are by default initialized to\r\n> have equal probability of outputting either y = −1 or 1.\r\n> Under such an initialization, in the presence of class imbalance, the loss due to the frequent class can dominate total\r\n> loss and cause instability in early training. To counter this,\r\n> we introduce the concept of a ‘prior’ for the value of p estimated by the model for the rare class (foreground) at the\r\n> start of training. We denote the prior by π and set it so that\r\n> the model’s estimated p for examples of the rare class is low,\r\n> e.g. 0.01. We note that this is a change in model initialization (see §4.1) and not of the loss function. We found this\r\n> to improve training stability for both the cross entropy and\r\n> focal loss in the case of heavy class imbalance.\r\n\r\nThis involves initializing the bias terms of the Conv2d() modules directly preceding the YOLO layers for neurons involved in detection and classification (but not regression). A bias of -5 correspond roughly to a 0.01 probability (i.e. torch.sigmoid(-5) = 0.01, so in this manner all detection neurons will output null detections in the first few batches, which is what we want. The default initialization is a Gaussian about 0, which means half of all neurons will report detections in the first batch (i.e. 5000 detections per image), massively impacting the gradient and causing instabilities. \r\n\r\nA test implementation showed improvements across all aspects after implementing this change on coco_16img.data, including final mAP, final P and R, and final F1. Oscillations in losses are reduced substantially and results are generally smoother and better behaved. I need to formalize the implementation and will hopefully commit this change soon.\r\n\r\n![image](https://user-images.githubusercontent.com/26833433/63231330-6b800100-c21a-11e9-8d2a-1a8075a15b6f.png)\r\n","closed_by":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/460/reactions","total_count":5,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ultralytics/yolov3/issues/460/timeline","performed_via_github_app":null,"state_reason":"completed"}