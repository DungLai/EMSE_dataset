{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/704","repository_url":"https://api.github.com/repos/ultralytics/yolov3","labels_url":"https://api.github.com/repos/ultralytics/yolov3/issues/704/labels{/name}","comments_url":"https://api.github.com/repos/ultralytics/yolov3/issues/704/comments","events_url":"https://api.github.com/repos/ultralytics/yolov3/issues/704/events","html_url":"https://github.com/ultralytics/yolov3/issues/704","id":536298607,"node_id":"MDU6SXNzdWU1MzYyOTg2MDc=","number":704,"title":"Faster invocation of detect.py for single-image runs?","user":{"login":"RulerOf","id":539074,"node_id":"MDQ6VXNlcjUzOTA3NA==","avatar_url":"https://avatars.githubusercontent.com/u/539074?v=4","gravatar_id":"","url":"https://api.github.com/users/RulerOf","html_url":"https://github.com/RulerOf","followers_url":"https://api.github.com/users/RulerOf/followers","following_url":"https://api.github.com/users/RulerOf/following{/other_user}","gists_url":"https://api.github.com/users/RulerOf/gists{/gist_id}","starred_url":"https://api.github.com/users/RulerOf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RulerOf/subscriptions","organizations_url":"https://api.github.com/users/RulerOf/orgs","repos_url":"https://api.github.com/users/RulerOf/repos","events_url":"https://api.github.com/users/RulerOf/events{/privacy}","received_events_url":"https://api.github.com/users/RulerOf/received_events","type":"User","site_admin":false},"labels":[{"id":1035696372,"node_id":"MDU6TGFiZWwxMDM1Njk2Mzcy","url":"https://api.github.com/repos/ultralytics/yolov3/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-12-11T11:05:29Z","updated_at":"2020-02-20T21:19:49Z","closed_at":"2020-02-20T20:27:47Z","author_association":"NONE","active_lock_reason":null,"body":"## ðŸš€ Feature\r\n<!-- A clear and concise description of the feature proposal -->\r\nFaster invocation of detect.py for single-image runs, either by running in the background, or by having a way to prewarm/keep warm the GPU backend.\r\n\r\n## Motivation\r\n<!-- Please outline the motivation for the proposal. Is your feature request related to a problem? e.g., I'm always frustrated when [...]. If this is related to another GitHub issue, please link here too -->\r\n\r\nI've put together a set of scripts that performs YOLO object detection of initial motion detection events from a surveillance system that are captured as mp4 and jpg files, with event and file information placed onto a message queue. A worker script pulls events off this queue, invokes detect.py against the jpg snapshot, and then makes subsequent decisions based on what it saw. [Bad flow chart here](https://i.imgur.com/spD2ylT.png).\r\n\r\nWhile YOLO itself is _more_ than fast enough to chew through all of the image snapshots in real time, initialization of the detector takes up the majority of the runtime. It's easily 40-50x the amount of time actually spent running the object detection itself:\r\n\r\n```\r\nroot@cctv-worker01:/opt/yolov3# time python3 detect.py --img-size 608 --cfg ./cfg/yolov3.cfg --weights ./weights/yolov3.weights --output ~/output/ --save-json --source '/srv/motion/2019/12/11/DVR 4/Channel 3 - R40 north/20191211052945-503.jpg' --names /opt/yolov3/data/coco.names --no-overwrite\r\nNamespace(cfg='./cfg/yolov3.cfg', conf_thres=0.3, data='data/coco.data', device='', fourcc='mp4v', half=False, img_size=608, names='/opt/yolov3/data/coco.names', nms_thres=0.5, no_overwrite=True, output='/root/output/', save_json=True, save_txt=False, source='/srv/motion/2019/12/11/DVR 4/Channel 3 - R40 north/20191211052945-503.jpg', view_img=False, weights='./weights/yolov3.weights')\r\nUsing CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1060 6GB', total_memory=6077MB)\r\n\r\nimage 1/1 /srv/motion/2019/12/11/DVR 4/Channel 3 - R40 north/20191211052945-503.jpg: 352x608 Done. (0.049s)\r\nResults saved to /opt/yolov3//root/output/\r\nDone. (0.103s)\r\n\r\nreal\t0m4.509s\r\nuser\t0m3.597s\r\nsys\t0m1.060s\r\n```\r\n(Please note that I'm using some custom CLI args from [my fork](/RulerOf/yolov3))\r\n\r\nThis results me seeing [extremely deep queues for the workers invoking detect.py](https://i.imgur.com/ebSE5ju.png) under the right conditions, taking hours to chew through thousands of images. This is the case even when the GPU isn't working hard, so throwing hardware at the problem won't really fix my issue.\r\n\r\n## Pitch\r\n\r\nThe pitch is that I could use any kind of solution that will allow me to minimize the overhead of running detect.py. If there's some way to prewarm the detector so that it doesn't take so long to initialize, that would work, or if it's possible to keep the engine running on the GPU (I don't really understand how that works) between invocations of detect.py... anything to speed it up.\r\n\r\nOver in the land of webservers, we use things like PHP-FPM to reduce startup overhead of the PHP interpreterâ€”could a similar approach work here?\r\n\r\n## Alternatives\r\n\r\n* I could run more workers (I use two right now), but I'm concerned about the ability of the GPU to handle so much initialization workload. There's a clear spike in both memory and processor consumption on the GPU when detect.py starts up, and I'm concerned that I'd hit limits if I ran ~15-30 workers on one system.\r\n\r\n* I could pull multiple events off of the queue at once and push them through the app all at the same time via a text file or directory `--source`, but I encountered problems here related to how [the `webcam` variable](https://github.com/ultralytics/yolov3/blob/master/detect.py#L12) interacts on a headless machine, and then also some limitations to how I implemented `--save-json` in #675. This did give me insight on how to make that PR better, but that's another topic.\r\n\r\n* I could write the queue worker in python and invoke [detect()](https://github.com/ultralytics/yolov3/blob/a6f87a28e7595e71752583fb41340f9d1105d75f/detect.py#L9) directly, but I have a hunch that it wouldn't be any faster.  I haven't tried it though.\r\n\r\n## Additional context\r\n\r\nMy scripts are all written in Ruby because that's what I'm most proficient with. If I could write python quickly and reliably, I'd probably implement one of the alternatives I suggested instead.\r\n\r\nThanks!","closed_by":{"login":"glenn-jocher","id":26833433,"node_id":"MDQ6VXNlcjI2ODMzNDMz","avatar_url":"https://avatars.githubusercontent.com/u/26833433?v=4","gravatar_id":"","url":"https://api.github.com/users/glenn-jocher","html_url":"https://github.com/glenn-jocher","followers_url":"https://api.github.com/users/glenn-jocher/followers","following_url":"https://api.github.com/users/glenn-jocher/following{/other_user}","gists_url":"https://api.github.com/users/glenn-jocher/gists{/gist_id}","starred_url":"https://api.github.com/users/glenn-jocher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glenn-jocher/subscriptions","organizations_url":"https://api.github.com/users/glenn-jocher/orgs","repos_url":"https://api.github.com/users/glenn-jocher/repos","events_url":"https://api.github.com/users/glenn-jocher/events{/privacy}","received_events_url":"https://api.github.com/users/glenn-jocher/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ultralytics/yolov3/issues/704/timeline","performed_via_github_app":null,"state_reason":"completed"}