{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/1171","repository_url":"https://api.github.com/repos/ultralytics/yolov3","labels_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1171/labels{/name}","comments_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1171/comments","events_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1171/events","html_url":"https://github.com/ultralytics/yolov3/issues/1171","id":617414654,"node_id":"MDU6SXNzdWU2MTc0MTQ2NTQ=","number":1171,"title":"Generalising YOLO to predict four coordinates.","user":{"login":"LukeAI","id":43993778,"node_id":"MDQ6VXNlcjQzOTkzNzc4","avatar_url":"https://avatars.githubusercontent.com/u/43993778?v=4","gravatar_id":"","url":"https://api.github.com/users/LukeAI","html_url":"https://github.com/LukeAI","followers_url":"https://api.github.com/users/LukeAI/followers","following_url":"https://api.github.com/users/LukeAI/following{/other_user}","gists_url":"https://api.github.com/users/LukeAI/gists{/gist_id}","starred_url":"https://api.github.com/users/LukeAI/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LukeAI/subscriptions","organizations_url":"https://api.github.com/users/LukeAI/orgs","repos_url":"https://api.github.com/users/LukeAI/repos","events_url":"https://api.github.com/users/LukeAI/events{/privacy}","received_events_url":"https://api.github.com/users/LukeAI/received_events","type":"User","site_admin":false},"labels":[{"id":1035696372,"node_id":"MDU6TGFiZWwxMDM1Njk2Mzcy","url":"https://api.github.com/repos/ultralytics/yolov3/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1890885613,"node_id":"MDU6TGFiZWwxODkwODg1NjEz","url":"https://api.github.com/repos/ultralytics/yolov3/labels/Stale","name":"Stale","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2020-05-13T12:40:46Z","updated_at":"2020-06-25T00:16:29Z","closed_at":"2020-06-25T00:16:29Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This is kind of a feature request but I don't actually expect you to implement it because it may be asking quite a lot but I'd love to get your reflections/feedback.\r\n\r\nBasically, I have a particular application in mind where I want to be able to accurately detect rectangular object that may be rotated arbitrarily in 3d space. I have a large dataset of these objects already annotated - each object is defined by 4 (x,y) coordinates at the vertices. Identifying the orientation of these objects is as important as localising them - this can be calculated using simple homeography, given good estimates of the 4 corners.\r\n\r\none approach might be to use Yolo* to find the object and then try to use line detection and thresholding and other openCV tricks to try find the borders of the object. But as I have this very large dataset, I believe that some end-to-end DNN solution has the potential to do better.\r\n\r\nSo I'm thinking of trying to generalise the Yolo layers to predict four pairs of coordinates defining four vertices and I wanted to get your reflection on easy it would be to hack this repo's implentation to do this.\r\n________________________________________________________________________\r\nSO if I understand things correctly, the yolo layer makes a prediction for every cluster prior: (x, y, w, h, objectness, class scores)\r\n\r\nUsing:\r\nbx=σ(tx) +cx  # bounding box X offset from prior\r\nby=σ(ty) +cy  # bounding box Y offset from prior\r\nbw=pw*e^tw  # bounding box width\r\nbh=ph*e^th    # bounding box height\r\n```\r\nio[..., :2] = torch.sigmoid(io[..., :2]) + self.grid  # xy\r\nio[..., 2:4] = torch.exp(io[..., 2:4]) * self.anchor_wh  # wh yolo method](https://github.com/ultralytics/yolov3/blob/9cc4951d4fb8df0cf1c9fed5e60c01c150e78a0c/models.py#L211)\r\n```\r\n\r\nand also objectness and a score for each class which as far as I can tell just use the raw output of some conv filter without any sigmoid or logistic stuff.\r\n`p = p.view(bs, self.na, self.no, self.ny, self.nx).permute(0, 1, 3, 4, 2).contiguous()  # prediction`\r\n\r\nSO:\r\n\r\nInstead of predicting X, Y, width and height, I could try predicting four ( Δx, Δy) pairs offset from centroid (cx, cy) like:\r\n\r\nbx-tl=px-tl*e^tx-tl  # top left corner X offset from centroid\r\nby-tl=px-tl*e^tx-tl  # top left corner Y offset from centroid\r\nbx-tr=px-tr*e^tx-tr  # top right corner X offset from centroid\r\nby-tr=px-tr*e^tx-tr  # top right corner Y offset from centroid\r\nbx-bl=px-bl*e^tx-tl  # bottom left corner X offset from centroid\r\nby-bl=px-bl*e^tx-tl  #  bottom left corner Y offset from centroid\r\nbx-br=px-br*e^tx-tr  # bottom right corner X offset from centroid\r\nby-br=px-br*e^tx-tr  # bottom right corner Y offset from centroid\r\n\r\nThe [loss function](https://github.com/ultralytics/yolov3/blob/9f04e175f62dca079f2e6c829f97dbb32e66b33d/utils/utils.py#L375)\r\nhas all sorts of enhancements and tricks mixed in there but essentially uses IOU to determine loss. So for this system, there is no need to change the basic metric although of course tweaks would have to be made to how it is calculated from corner offsets.\r\n\r\nAll the other stuff - feature extraction, NMS, etc. could stay the same.\r\n\r\nWhat do you think?  Does it sound loosely sensible?","closed_by":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","site_admin":false},"reactions":{"url":"https://api.github.com/repos/ultralytics/yolov3/issues/1171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ultralytics/yolov3/issues/1171/timeline","performed_via_github_app":null,"state_reason":"completed"}