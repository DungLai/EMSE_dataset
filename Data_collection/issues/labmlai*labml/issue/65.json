{"url":"https://api.github.com/repos/labmlai/labml/issues/65","repository_url":"https://api.github.com/repos/labmlai/labml","labels_url":"https://api.github.com/repos/labmlai/labml/issues/65/labels{/name}","comments_url":"https://api.github.com/repos/labmlai/labml/issues/65/comments","events_url":"https://api.github.com/repos/labmlai/labml/issues/65/events","html_url":"https://github.com/labmlai/labml/issues/65","id":928966245,"node_id":"MDU6SXNzdWU5Mjg5NjYyNDU=","number":65,"title":"Remove git commits/branches check","user":{"login":"sviperm","id":36929696,"node_id":"MDQ6VXNlcjM2OTI5Njk2","avatar_url":"https://avatars.githubusercontent.com/u/36929696?v=4","gravatar_id":"","url":"https://api.github.com/users/sviperm","html_url":"https://github.com/sviperm","followers_url":"https://api.github.com/users/sviperm/followers","following_url":"https://api.github.com/users/sviperm/following{/other_user}","gists_url":"https://api.github.com/users/sviperm/gists{/gist_id}","starred_url":"https://api.github.com/users/sviperm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sviperm/subscriptions","organizations_url":"https://api.github.com/users/sviperm/orgs","repos_url":"https://api.github.com/users/sviperm/repos","events_url":"https://api.github.com/users/sviperm/events{/privacy}","received_events_url":"https://api.github.com/users/sviperm/received_events","type":"User","site_admin":false},"labels":[{"id":1129785939,"node_id":"MDU6TGFiZWwxMTI5Nzg1OTM5","url":"https://api.github.com/repos/labmlai/labml/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"vpj","id":81152,"node_id":"MDQ6VXNlcjgxMTUy","avatar_url":"https://avatars.githubusercontent.com/u/81152?v=4","gravatar_id":"","url":"https://api.github.com/users/vpj","html_url":"https://github.com/vpj","followers_url":"https://api.github.com/users/vpj/followers","following_url":"https://api.github.com/users/vpj/following{/other_user}","gists_url":"https://api.github.com/users/vpj/gists{/gist_id}","starred_url":"https://api.github.com/users/vpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpj/subscriptions","organizations_url":"https://api.github.com/users/vpj/orgs","repos_url":"https://api.github.com/users/vpj/repos","events_url":"https://api.github.com/users/vpj/events{/privacy}","received_events_url":"https://api.github.com/users/vpj/received_events","type":"User","site_admin":false},"assignees":[{"login":"vpj","id":81152,"node_id":"MDQ6VXNlcjgxMTUy","avatar_url":"https://avatars.githubusercontent.com/u/81152?v=4","gravatar_id":"","url":"https://api.github.com/users/vpj","html_url":"https://github.com/vpj","followers_url":"https://api.github.com/users/vpj/followers","following_url":"https://api.github.com/users/vpj/following{/other_user}","gists_url":"https://api.github.com/users/vpj/gists{/gist_id}","starred_url":"https://api.github.com/users/vpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpj/subscriptions","organizations_url":"https://api.github.com/users/vpj/orgs","repos_url":"https://api.github.com/users/vpj/repos","events_url":"https://api.github.com/users/vpj/events{/privacy}","received_events_url":"https://api.github.com/users/vpj/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2021-06-24T08:13:22Z","updated_at":"2021-07-01T02:54:45Z","closed_at":"2021-07-01T02:54:45Z","author_association":"NONE","active_lock_reason":null,"body":"Hello there!\r\n\r\nFirst of all thanks for your library, used it in my recent open source project!\r\n\r\nNow, I want to share my criticism.\r\n\r\nI have another project, but there we decided to set remotes' names of our repo different from default: `bars` and `upstream`, there is no `origin` as you can see.\r\n\r\nSo I had this error:\r\n\r\n.labml.yml:\r\n```yaml\r\ncheck_repo_dirty: false\r\nexperiments_path: '.labml'\r\nweb_api: 'secret'\r\n```\r\nError:\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/src/train.py\", line 395, in <module>\r\n    train()\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/src/train.py\", line 354, in train\r\n    with experiment.record(name=MODEL_SAVE_NAME, exp_conf=args.__dict__) if args.labml else ExitStack():\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/labml/experiment.py\", line 388, in rec\r\nord\r\n    create(name=name,\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/labml/experiment.py\", line 86, in crea\r\nte\r\n    _create_experiment(uuid=uuid,\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/labml/internal/experiment/__init__.py\"\r\n, line 511, in create_experiment\r\n    _internal = Experiment(uuid=uuid,\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/labml/internal/experiment/__init__.py\"\r\n, line 225, in __init__\r\n    self.run.repo_remotes = list(repo.remote().urls)\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/git/remote.py\", line 553, in urls\r\n    raise ex\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/git/remote.py\", line 529, in urls\r\n    remote_details = self.repo.git.remote(\"get-url\", \"--all\", self.name)\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/git/cmd.py\", line 545, in <lambda>\r\n    return lambda *args, **kwargs: self._call_process(name, *args, **kwargs)\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/git/cmd.py\", line 1011, in _call_process\r\n    return self.execute(call, **exec_kwargs)\r\n  File \"/media/sviperm/9740514d-d8c8-4f3e-afee-16ce6923340c3/sviperm/Documents/Aurora/Aurora.ContextualMistakes/venv/lib/python3.9/site-packages/git/cmd.py\", line 828, in execute\r\n    raise GitCommandError(command, status, stderr_value, stdout_value)\r\ngit.exc.GitCommandError: Cmd('git') failed due to: exit code(128)\r\n  cmdline: git remote get-url --all origin\r\n  stderr: 'fatal: No such remote 'origin''\r\n```\r\n\r\nSo my question №1 is: why `labml` check git branches/remote/commits? What is the idea behind this logic? I think that library for training monitoring for ML project doesn't need to do that. If developer / data scientist want to track git and prevent training because of uncommited changes, he/she can write this logic by his own.\r\n\r\nQuestion №2: if i set `check_repo_dirty: false` why labml still checking repo? And what is the default value of the parameter?\r\n\r\n2 possible suggestions:\r\n1. Put condition before `try` in [labml/internal/experiment/\\_\\_init\\_\\_.py](https://github.com/labmlai/labml/blob/8fd5df0919b05e832db0f035ac2c440e8b6ea3cc/labml/internal/experiment/__init__.py#L222) to prevent all this _git code_ :\r\n    ```python\r\n    if self.check_repo_dirty:\r\n        try:\r\n            repo = git.Repo(lab_singleton().path)\r\n        \r\n            self.run.repo_remotes = list(repo.remote().urls)\r\n            self.run.commit = repo.head.commit.hexsha\r\n            self.run.commit_message = repo.head.commit.message.strip()\r\n            self.run.is_dirty = repo.is_dirty()\r\n            self.run.diff = repo.git.diff()\r\n        except git.InvalidGitRepositoryError:\r\n            if not is_colab() and not is_kaggle():\r\n                labml_notice([\"Not a valid git repository: \",\r\n                              (str(lab_singleton().path), Text.value)])\r\n            self.run.commit = 'unknown'\r\n            self.run.commit_message = ''\r\n            self.run.is_dirty = True\r\n            self.run.diff = ''\r\n    ```\r\n2. Or completely remove all this git tracking code or make it deprecated.\r\n\r\nThanks!","closed_by":{"login":"vpj","id":81152,"node_id":"MDQ6VXNlcjgxMTUy","avatar_url":"https://avatars.githubusercontent.com/u/81152?v=4","gravatar_id":"","url":"https://api.github.com/users/vpj","html_url":"https://github.com/vpj","followers_url":"https://api.github.com/users/vpj/followers","following_url":"https://api.github.com/users/vpj/following{/other_user}","gists_url":"https://api.github.com/users/vpj/gists{/gist_id}","starred_url":"https://api.github.com/users/vpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vpj/subscriptions","organizations_url":"https://api.github.com/users/vpj/orgs","repos_url":"https://api.github.com/users/vpj/repos","events_url":"https://api.github.com/users/vpj/events{/privacy}","received_events_url":"https://api.github.com/users/vpj/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/labmlai/labml/issues/65/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/labmlai/labml/issues/65/timeline","performed_via_github_app":null,"state_reason":"completed"}