{"url":"https://api.github.com/repos/plasticityai/magnitude/issues/31","repository_url":"https://api.github.com/repos/plasticityai/magnitude","labels_url":"https://api.github.com/repos/plasticityai/magnitude/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/plasticityai/magnitude/issues/31/comments","events_url":"https://api.github.com/repos/plasticityai/magnitude/issues/31/events","html_url":"https://github.com/plasticityai/magnitude/issues/31","id":368230497,"node_id":"MDU6SXNzdWUzNjgyMzA0OTc=","number":31,"title":"\"TypeError: must be str, not bytes\" while creating deterministic hash","user":{"login":"ParikhKadam","id":39589393,"node_id":"MDQ6VXNlcjM5NTg5Mzkz","avatar_url":"https://avatars.githubusercontent.com/u/39589393?v=4","gravatar_id":"","url":"https://api.github.com/users/ParikhKadam","html_url":"https://github.com/ParikhKadam","followers_url":"https://api.github.com/users/ParikhKadam/followers","following_url":"https://api.github.com/users/ParikhKadam/following{/other_user}","gists_url":"https://api.github.com/users/ParikhKadam/gists{/gist_id}","starred_url":"https://api.github.com/users/ParikhKadam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ParikhKadam/subscriptions","organizations_url":"https://api.github.com/users/ParikhKadam/orgs","repos_url":"https://api.github.com/users/ParikhKadam/repos","events_url":"https://api.github.com/users/ParikhKadam/events{/privacy}","received_events_url":"https://api.github.com/users/ParikhKadam/received_events","type":"User","site_admin":false},"labels":[{"id":846895359,"node_id":"MDU6TGFiZWw4NDY4OTUzNTk=","url":"https://api.github.com/repos/plasticityai/magnitude/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":864668876,"node_id":"MDU6TGFiZWw4NjQ2Njg4NzY=","url":"https://api.github.com/repos/plasticityai/magnitude/labels/python3","name":"python3","color":"d3527b","default":false,"description":""},{"id":1084897641,"node_id":"MDU6TGFiZWwxMDg0ODk3NjQx","url":"https://api.github.com/repos/plasticityai/magnitude/labels/featurizer","name":"featurizer","color":"f9b7b6","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"AjayP13","id":5404177,"node_id":"MDQ6VXNlcjU0MDQxNzc=","avatar_url":"https://avatars.githubusercontent.com/u/5404177?v=4","gravatar_id":"","url":"https://api.github.com/users/AjayP13","html_url":"https://github.com/AjayP13","followers_url":"https://api.github.com/users/AjayP13/followers","following_url":"https://api.github.com/users/AjayP13/following{/other_user}","gists_url":"https://api.github.com/users/AjayP13/gists{/gist_id}","starred_url":"https://api.github.com/users/AjayP13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AjayP13/subscriptions","organizations_url":"https://api.github.com/users/AjayP13/orgs","repos_url":"https://api.github.com/users/AjayP13/repos","events_url":"https://api.github.com/users/AjayP13/events{/privacy}","received_events_url":"https://api.github.com/users/AjayP13/received_events","type":"User","site_admin":false},"assignees":[{"login":"AjayP13","id":5404177,"node_id":"MDQ6VXNlcjU0MDQxNzc=","avatar_url":"https://avatars.githubusercontent.com/u/5404177?v=4","gravatar_id":"","url":"https://api.github.com/users/AjayP13","html_url":"https://github.com/AjayP13","followers_url":"https://api.github.com/users/AjayP13/followers","following_url":"https://api.github.com/users/AjayP13/following{/other_user}","gists_url":"https://api.github.com/users/AjayP13/gists{/gist_id}","starred_url":"https://api.github.com/users/AjayP13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AjayP13/subscriptions","organizations_url":"https://api.github.com/users/AjayP13/orgs","repos_url":"https://api.github.com/users/AjayP13/repos","events_url":"https://api.github.com/users/AjayP13/events{/privacy}","received_events_url":"https://api.github.com/users/AjayP13/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2018-10-09T14:11:07Z","updated_at":"2018-10-09T17:22:14Z","closed_at":"2018-10-09T17:22:04Z","author_association":"NONE","active_lock_reason":null,"body":"**How to reproduce:**\r\n\r\n```\r\nfrom pymagnitude import *\r\npos_vectors = FeaturizerMagnitude(100, namespace = \"PartsOfSpeech\")\r\nprint(pos_vectors.query(\"NN\"))\r\n```\r\n\r\n**Output:**\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-2f9508aa33b7> in <module>()\r\n      2 pos_vectors = FeaturizerMagnitude(100, namespace = \"PartsOfSpeech\")\r\n      3 print(pos_vectors.dim) # 4 - number of dims automatically determined by Magnitude from 100\r\n----> 4 print(pos_vectors.query(\"NN\")) # - array([ 0.08040417, -0.71705252,  0.61228951,  0.32322192])\r\n      5 print(pos_vectors.query(\"JJ\")) # - array([-0.11681135,  0.10259253,  0.8841201 , -0.44063763])\r\n      6 print(pos_vectors.query(\"NN\")) # - array([ 0.08040417, -0.71705252,  0.61228951,  0.32322192]) (deterministic hashing so the same value is returned every time for the same key)\r\n\r\nC:\\Python36\\lib\\site-packages\\pymagnitude\\third_party\\repoze\\lru\\__init__.py in cached_wrapper(*args, **kwargs)\r\n    352             else:\r\n    353                 if val is marker:\r\n--> 354                     val = func(*args, **kwargs)\r\n    355                     cache.put(key, val)\r\n    356                 return val\r\n\r\nC:\\Python36\\lib\\site-packages\\pymagnitude\\__init__.py in query(self, q, pad_to_length, pad_left, truncate_left)\r\n    879             vec = self._vector_for_key_cached(q)\r\n    880             if vec is None:\r\n--> 881                 return self._out_of_vocab_vector_cached(q)\r\n    882             else:\r\n    883                 return vec\r\n\r\nC:\\Python36\\lib\\site-packages\\pymagnitude\\third_party\\repoze\\lru\\__init__.py in cached_wrapper(*args, **kwargs)\r\n    352             else:\r\n    353                 if val is marker:\r\n--> 354                     val = func(*args, **kwargs)\r\n    355                     cache.put(key, val)\r\n    356                 return val\r\n\r\nC:\\Python36\\lib\\site-packages\\pymagnitude\\__init__.py in _out_of_vocab_vector_cached(*args, **kwargs)\r\n    334             @lru_cache(None)\r\n    335             def _out_of_vocab_vector_cached(*args, **kwargs):\r\n--> 336                 return self._out_of_vocab_vector(*args, **kwargs)\r\n    337 \r\n    338             @lru_cache(None)\r\n\r\nC:\\Python36\\lib\\site-packages\\pymagnitude\\__init__.py in _out_of_vocab_vector(self, key)\r\n    673             random_vectors = []\r\n    674             for i, ngram in enumerate(ngrams):\r\n--> 675                 seed = self._seed(ngram)\r\n    676                 Magnitude.OOV_RNG_LOCK.acquire()\r\n    677                 np.random.seed(seed=seed)\r\n\r\nC:\\Python36\\lib\\site-packages\\pymagnitude\\__init__.py in _seed(self, val)\r\n    646         \"\"\"Returns a unique seed for val and the (optional) namespace.\"\"\"\r\n    647         if self._namespace:\r\n--> 648             return xxhash.xxh32(self._namespace + Magnitude.RARE_CHAR +\r\n    649                                 val.encode('utf-8')).intdigest()\r\n    650         else:\r\n\r\nTypeError: must be str, not bytes\r\n```","closed_by":{"login":"AjayP13","id":5404177,"node_id":"MDQ6VXNlcjU0MDQxNzc=","avatar_url":"https://avatars.githubusercontent.com/u/5404177?v=4","gravatar_id":"","url":"https://api.github.com/users/AjayP13","html_url":"https://github.com/AjayP13","followers_url":"https://api.github.com/users/AjayP13/followers","following_url":"https://api.github.com/users/AjayP13/following{/other_user}","gists_url":"https://api.github.com/users/AjayP13/gists{/gist_id}","starred_url":"https://api.github.com/users/AjayP13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AjayP13/subscriptions","organizations_url":"https://api.github.com/users/AjayP13/orgs","repos_url":"https://api.github.com/users/AjayP13/repos","events_url":"https://api.github.com/users/AjayP13/events{/privacy}","received_events_url":"https://api.github.com/users/AjayP13/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/plasticityai/magnitude/issues/31/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/plasticityai/magnitude/issues/31/timeline","performed_via_github_app":null,"state_reason":"completed"}