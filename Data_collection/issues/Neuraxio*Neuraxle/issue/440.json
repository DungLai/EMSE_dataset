{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/440","repository_url":"https://api.github.com/repos/Neuraxio/Neuraxle","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/440/labels{/name}","comments_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/440/comments","events_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/440/events","html_url":"https://github.com/Neuraxio/Neuraxle/issues/440","id":784575287,"node_id":"MDU6SXNzdWU3ODQ1NzUyODc=","number":440,"title":"Feature: add _HasApplyMixin and shared hyperparameters","user":{"login":"vincent-antaki","id":74119210,"node_id":"MDQ6VXNlcjc0MTE5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/74119210?v=4","gravatar_id":"","url":"https://api.github.com/users/vincent-antaki","html_url":"https://github.com/vincent-antaki","followers_url":"https://api.github.com/users/vincent-antaki/followers","following_url":"https://api.github.com/users/vincent-antaki/following{/other_user}","gists_url":"https://api.github.com/users/vincent-antaki/gists{/gist_id}","starred_url":"https://api.github.com/users/vincent-antaki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vincent-antaki/subscriptions","organizations_url":"https://api.github.com/users/vincent-antaki/orgs","repos_url":"https://api.github.com/users/vincent-antaki/repos","events_url":"https://api.github.com/users/vincent-antaki/events{/privacy}","received_events_url":"https://api.github.com/users/vincent-antaki/received_events","type":"User","site_admin":false},"labels":[{"id":1290971222,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIy","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-01-12T20:38:19Z","updated_at":"2021-10-21T15:27:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nSometime, we need multiple steps to share a hyperparameter. A simple example goes a little something like this : We have two ChooseOneStepOf at completely different places in the framework, both of which are basically a switch between different values of model_type (which is an hyperparameter we sample in an AutoML loop). We need the sample model_type value to be the same at all time.\r\n\r\nTo achieve this with the current state of the framework, we need to choose a step which will hold the hyperparam and have the other steps go retrieve the value at every call. Not only this conflicts with the concept that every step is responsible for keeping it own hyperparams / hyperparameters space but it is quite inelegant in term of code and not flexible at all in term of pipeline building.\r\n\r\n**Describe the solution you'd like**\r\nConceptually, I propose we add shared hyperparameters as an exception for the self-containing hp rule and store them in the context. \r\n\r\nIn more depth what I suggest is :\r\n- Create a _HasApplyMixin which would be inherited from both BaseTransformer and ExecutionContext. This HasApplyMixin would have implement method get_name/set_name as well as defining an abstract apply interface.\r\n- Add two arguments to the apply method : the execution context and a recursion depth argument.\r\n- If depth is zero on a BaseTransformer apply call, then call apply on the context.\r\n\r\nUpside : \r\n- Shared hyperparameters are now easily accessible, at run-time, anywhere in the framework\r\n\r\nQuestion left unanswered / Idea :\r\n- How do we handle hyperparameter space / rvs for shared hyperparameter? We probably want context to implement _HasHyperparams and _HasHyperparametersSpace. I feel like this take us one step closer to the context being some kind of ultimate-all-encompassing-meta-step and I'm not sure I like it.\r\n- How do we indicate to a step that it should fetch the required hyperparams in the shared hyperparam bank (i.e. the context)? I'd like to avoid re-coding a step to have a regular and a shared hyperparam version. (see alternative for a potential solution to this)\r\n\r\n**Describe alternatives you've considered**\r\nWe could have a special HyperparameterDistribution instance which simply go fetch the value to the responsible step (or the context if we decide to go with the solution mentioned above). \r\n\r\n**Additional context**\r\nI feel like this would be a major modification, albeit a much needed one. I'd like your thoughs on this @guillaume-chevalier, I'm sure you can provide valuable insight on this design problem.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/440/timeline","performed_via_github_app":null,"state_reason":null}