{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/439","repository_url":"https://api.github.com/repos/Neuraxio/Neuraxle","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/439/labels{/name}","comments_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/439/comments","events_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/439/events","html_url":"https://github.com/Neuraxio/Neuraxle/issues/439","id":784532516,"node_id":"MDU6SXNzdWU3ODQ1MzI1MTY=","number":439,"title":"Feature: TrialMetricsPlottingObserver should support various plot functions for various metric type","user":{"login":"vincent-antaki","id":74119210,"node_id":"MDQ6VXNlcjc0MTE5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/74119210?v=4","gravatar_id":"","url":"https://api.github.com/users/vincent-antaki","html_url":"https://github.com/vincent-antaki","followers_url":"https://api.github.com/users/vincent-antaki/followers","following_url":"https://api.github.com/users/vincent-antaki/following{/other_user}","gists_url":"https://api.github.com/users/vincent-antaki/gists{/gist_id}","starred_url":"https://api.github.com/users/vincent-antaki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vincent-antaki/subscriptions","organizations_url":"https://api.github.com/users/vincent-antaki/orgs","repos_url":"https://api.github.com/users/vincent-antaki/repos","events_url":"https://api.github.com/users/vincent-antaki/events{/privacy}","received_events_url":"https://api.github.com/users/vincent-antaki/received_events","type":"User","site_admin":false},"labels":[{"id":1290971222,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIy","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1290971227,"node_id":"MDU6TGFiZWwxMjkwOTcxMjI3","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-01-12T19:36:58Z","updated_at":"2023-01-13T02:09:17Z","closed_at":"2023-01-13T02:09:17Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nTrialMetricsPlottingObserver is a neat subscriber-listener interface designed to be used with a BaseHyperparamsRepository instance. However, it assumes that every metric saved by the hyperparams repo is either a float or an int and that, for each metric, it should plot one line for the train and one for the validation (e.g. a loss/error, an accuracy or a score). \r\n\r\nHowever, metrics could potentially be more complex data structures (e.g. a confusion matrix). To deal with this, I've temporarily added a few lines in #435 to ignore every metric that isnt a float or an int. Eventually, we should re-write TrialMetricsPlottingObserver to be a bit more flexible.\r\n\r\n\r\n**Describe the solution you'd like**\r\nI'd replace all arguments of the constructor except the folder_name by a \"plotting_function_map\" which would be the following mapping :\r\n{\"metric_name\":str -> callable_on_complete:Optional[Callable,None], callable_on_next:Optional[Callable,None], render_action:bool = False}\r\n\r\nIt would probably be a good idea to add some default elements to the map for some already implemented MetricCallback.\r\n\r\n**Describe alternatives you've considered**\r\nAlternatively, we could have an object like TrialMetricsPlottingObserver for every type of metric we wish to plot. With the right abstractions, it wouldnt be that much more lines of code than the current solution I suggest. However, I think it would be less accessible / an out-of-the-box solution.","closed_by":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","site_admin":false},"reactions":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/439/timeline","performed_via_github_app":null,"state_reason":"completed"}