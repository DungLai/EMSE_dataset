{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/69","repository_url":"https://api.github.com/repos/Neuraxio/Neuraxle","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/69/labels{/name}","comments_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/69/comments","events_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/69/events","html_url":"https://github.com/Neuraxio/Neuraxle/issues/69","id":496897022,"node_id":"MDU6SXNzdWU0OTY4OTcwMjI=","number":69,"title":"BaseStep must have a custom saver. ","user":{"login":"guillaume-chevalier","id":11862328,"node_id":"MDQ6VXNlcjExODYyMzI4","avatar_url":"https://avatars.githubusercontent.com/u/11862328?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaume-chevalier","html_url":"https://github.com/guillaume-chevalier","followers_url":"https://api.github.com/users/guillaume-chevalier/followers","following_url":"https://api.github.com/users/guillaume-chevalier/following{/other_user}","gists_url":"https://api.github.com/users/guillaume-chevalier/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaume-chevalier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaume-chevalier/subscriptions","organizations_url":"https://api.github.com/users/guillaume-chevalier/orgs","repos_url":"https://api.github.com/users/guillaume-chevalier/repos","events_url":"https://api.github.com/users/guillaume-chevalier/events{/privacy}","received_events_url":"https://api.github.com/users/guillaume-chevalier/received_events","type":"User","site_admin":false},"labels":[{"id":1290971220,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIw","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1290971225,"node_id":"MDU6TGFiZWwxMjkwOTcxMjI1","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/invalid","name":"invalid","color":"e4e669","default":true,"description":"This doesn't seem right"}],"state":"closed","locked":false,"assignee":{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2019-09-23T05:08:21Z","updated_at":"2019-10-17T20:20:53Z","closed_at":"2019-10-17T20:20:53Z","author_association":"MEMBER","active_lock_reason":null,"body":"## There is a problem in the following code: \r\n\r\n```\r\nclass ResumablePipeline(Pipeline, ResumableStepMixin):\r\n    \"\"\"\r\n    Fits and transform steps after latest checkpoint\r\n    \"\"\"\r\n\r\n    def __init__(self, steps: NamedTupleList, pipeline_saver: PipelineSaver = None):\r\n        Pipeline.__init__(self, steps=steps)\r\n\r\n        if pipeline_saver is None:\r\n            self.pipeline_saver = JoblibPipelineSaver(DEFAULT_CACHE_FOLDER)\r\n        else:\r\n            self.pipeline_saver = pipeline_saver\r\n\r\n    # ...\r\n```\r\n\r\nIt is that the pipeline decides of the saver. However, that's wrong (invalid). The pipeline should allow the steps to use a custom saver. For instance, a TensorFlow, Keras, or PyTorch model will need special serialization using their own methods. \r\n\r\n## Suggested fix\r\n\r\nHave a class like the hasher that allows the objects to change how they are saved. \r\n\r\nIt is okay for a resumable pipeline to be able to pass in a default saver, but just when the pipeline steps don't have a saver of themselves. The pipeline **can't** force the saving. \r\n\r\n## What it will impact\r\n\r\nThe pipeline steps might not need a reference to the parent anymore to be able to save themselves. They should save themselves in a directory passed to them in the context. \r\n\r\n### Suggested fix to do in `_fit_transform_core` and other core methods: \r\n```\r\nfor step_name, step in steps_left_to_do:\r\n    step, data_container = step.handle_fit_transform(data_container, context)\r\n```\r\n\r\n### The context class: \r\n```\r\nclass Context: \r\n    - current_tmp_path: str  # path for the current object. \r\n    - stack_of_tmp_paths_of_parents: List[str]\r\n    - stack_of_parents: List[BaseStep]\r\n    - stack_is_parent_saved: List[bool]  # useful to avoid overwriting too many times. \r\n\r\n    def pop(): \r\n        return Context(\r\n            self.stack_of_tmp_paths_of_parents[-1], \r\n            self.stack_of_tmp_paths_of_parents[:-1], \r\n            self.stack_of_parents[:-1]\r\n        )\r\n\r\n    def push():\r\n        # the inverse of pop. Here, add something on the stack instead of removing. \r\n```\r\n","closed_by":{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/69/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/69/timeline","performed_via_github_app":null,"state_reason":"completed"}