{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/437","repository_url":"https://api.github.com/repos/Neuraxio/Neuraxle","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/437/labels{/name}","comments_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/437/comments","events_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/437/events","html_url":"https://github.com/Neuraxio/Neuraxle/issues/437","id":780870274,"node_id":"MDU6SXNzdWU3ODA4NzAyNzQ=","number":437,"title":"Feature: handler functions should be the default fit/fit_transform/transform/predict","user":{"login":"vincent-antaki","id":74119210,"node_id":"MDQ6VXNlcjc0MTE5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/74119210?v=4","gravatar_id":"","url":"https://api.github.com/users/vincent-antaki","html_url":"https://github.com/vincent-antaki","followers_url":"https://api.github.com/users/vincent-antaki/followers","following_url":"https://api.github.com/users/vincent-antaki/following{/other_user}","gists_url":"https://api.github.com/users/vincent-antaki/gists{/gist_id}","starred_url":"https://api.github.com/users/vincent-antaki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vincent-antaki/subscriptions","organizations_url":"https://api.github.com/users/vincent-antaki/orgs","repos_url":"https://api.github.com/users/vincent-antaki/repos","events_url":"https://api.github.com/users/vincent-antaki/events{/privacy}","received_events_url":"https://api.github.com/users/vincent-antaki/received_events","type":"User","site_admin":false},"labels":[{"id":1290971222,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIy","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1290971227,"node_id":"MDU6TGFiZWwxMjkwOTcxMjI3","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"},{"id":3130929938,"node_id":"MDU6TGFiZWwzMTMwOTI5OTM4","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/breaking-change","name":"breaking-change","color":"B60205","default":false,"description":"Destined for a major version number update"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/milestones/9","html_url":"https://github.com/Neuraxio/Neuraxle/milestone/9","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/milestones/9/labels","id":5395856,"node_id":"MDk6TWlsZXN0b25lNTM5NTg1Ng==","number":9,"title":"1.0.0","description":null,"creator":{"login":"guillaume-chevalier","id":11862328,"node_id":"MDQ6VXNlcjExODYyMzI4","avatar_url":"https://avatars.githubusercontent.com/u/11862328?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaume-chevalier","html_url":"https://github.com/guillaume-chevalier","followers_url":"https://api.github.com/users/guillaume-chevalier/followers","following_url":"https://api.github.com/users/guillaume-chevalier/following{/other_user}","gists_url":"https://api.github.com/users/guillaume-chevalier/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaume-chevalier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaume-chevalier/subscriptions","organizations_url":"https://api.github.com/users/guillaume-chevalier/orgs","repos_url":"https://api.github.com/users/guillaume-chevalier/repos","events_url":"https://api.github.com/users/guillaume-chevalier/events{/privacy}","received_events_url":"https://api.github.com/users/guillaume-chevalier/received_events","type":"User","site_admin":false},"open_issues":11,"closed_issues":4,"state":"open","created_at":"2020-05-07T23:48:15Z","updated_at":"2022-04-15T21:03:30Z","due_on":null,"closed_at":null},"comments":5,"created_at":"2021-01-06T21:55:42Z","updated_at":"2023-01-02T05:00:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nExecutionContext instances are an important piece of Neuraxle framework. They keep services, an execution stack and various information about the computation going on. While not all pipeline need them, most elaborate computations benefit from their use because of the amount of customisation and flexibility they allow in the execution of pipeline. Not only that, but I believe they'll play a central role in providing run-time optimisations at some point.\r\n\r\nNeuraxle steps have that weird duality where, they have context-less defined behaviour through the fit, fit_transform, transform methods (hereafter FFTT methods) and they have a behaviour for the handler methods (i.e. with context) defined by _fit_data_container, _fit_transform_data_container and _transform_data_container (hereafter _X_data_container methods). Theoretically, a step that defines both FFTT methods and data container methods could have to completely different behaviour whether it's called by handler method or FFTT methods (which itself could depend on a step which wraps it). I believe a user should never have to write both FFTT methods and their data_container counterparts.\r\n\r\nAs a bridge between these two interfaces (and to avoid writing the code twice), we have the following tools:\r\n - BaseStep default _X_data_container methods which simply calls their FFTT counterpart and thus forget about the context. This is ok if the step doesn't have children step but problematic if a step deeper within the pipeline requires the context later on.\r\n - ForceHandleMixin which, on call of an FFTT method, creates a new ExecutionContext and pass it to a handler call. This can be problematic because the new context is effectively a bogus one.\r\n - HandleOnlyMixin which simply crashes on FFTT method call (which I think is good praxis to use).\r\n- The _CustomHandlerMethods which I'm not sure what is it useful for (and is only used in a single class).\r\n\r\nThe point I'm getting at is that I believe this duality is problematic. Switching back and forth between these two interfaces lead to unforeseen behaviour, loss of context and, in an attempt to keep the \"user-friendly\" FFTT interface, makes implementing step within the framework more complex than it should be. \r\n\r\n**Describe the solution you'd like**\r\nI feel like it will soon be time to replace the FFTT functions with what are currently the handler functions.\r\n\r\nOn the downside, such a change would complexify Neuraxle for users which do not use ExecutionContext and DataContainer / expect an interface that matches scikit-learn. Implementing steps will require writing data container methods instead of FFTT which may not be the initial reflex of a new user. \r\n\r\n**Describe alternatives you've considered**\r\nWe could keep things as they are and have the default FFTT functions behave like their ForceHandleMixin counterparts. This doesn't fully solve the problems I mentioned but it may make this a non-breaking change.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/437/timeline","performed_via_github_app":null,"state_reason":null}