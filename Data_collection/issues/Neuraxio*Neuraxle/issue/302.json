{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/302","repository_url":"https://api.github.com/repos/Neuraxio/Neuraxle","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/302/labels{/name}","comments_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/302/comments","events_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/302/events","html_url":"https://github.com/Neuraxio/Neuraxle/issues/302","id":589832156,"node_id":"MDU6SXNzdWU1ODk4MzIxNTY=","number":302,"title":"Feature: Hyperband-AutoML","user":{"login":"guillaume-chevalier","id":11862328,"node_id":"MDQ6VXNlcjExODYyMzI4","avatar_url":"https://avatars.githubusercontent.com/u/11862328?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaume-chevalier","html_url":"https://github.com/guillaume-chevalier","followers_url":"https://api.github.com/users/guillaume-chevalier/followers","following_url":"https://api.github.com/users/guillaume-chevalier/following{/other_user}","gists_url":"https://api.github.com/users/guillaume-chevalier/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaume-chevalier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaume-chevalier/subscriptions","organizations_url":"https://api.github.com/users/guillaume-chevalier/orgs","repos_url":"https://api.github.com/users/guillaume-chevalier/repos","events_url":"https://api.github.com/users/guillaume-chevalier/events{/privacy}","received_events_url":"https://api.github.com/users/guillaume-chevalier/received_events","type":"User","site_admin":false},"labels":[{"id":1290971222,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIy","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/milestones/9","html_url":"https://github.com/Neuraxio/Neuraxle/milestone/9","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/milestones/9/labels","id":5395856,"node_id":"MDk6TWlsZXN0b25lNTM5NTg1Ng==","number":9,"title":"1.0.0","description":null,"creator":{"login":"guillaume-chevalier","id":11862328,"node_id":"MDQ6VXNlcjExODYyMzI4","avatar_url":"https://avatars.githubusercontent.com/u/11862328?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaume-chevalier","html_url":"https://github.com/guillaume-chevalier","followers_url":"https://api.github.com/users/guillaume-chevalier/followers","following_url":"https://api.github.com/users/guillaume-chevalier/following{/other_user}","gists_url":"https://api.github.com/users/guillaume-chevalier/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaume-chevalier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaume-chevalier/subscriptions","organizations_url":"https://api.github.com/users/guillaume-chevalier/orgs","repos_url":"https://api.github.com/users/guillaume-chevalier/repos","events_url":"https://api.github.com/users/guillaume-chevalier/events{/privacy}","received_events_url":"https://api.github.com/users/guillaume-chevalier/received_events","type":"User","site_admin":false},"open_issues":11,"closed_issues":4,"state":"open","created_at":"2020-05-07T23:48:15Z","updated_at":"2022-04-15T21:03:30Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2020-03-29T16:41:28Z","updated_at":"2022-04-15T20:58:46Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Let's create another AutoML thing and another Trainer if needed, to do AutoML in waves like Hyperband. \r\n\r\n![](https://github.com/Neuraxio/Machine-Learning-Figures/blob/master/hyperband.jpg?raw=true)\r\n\r\nThe algorithm goes like this: \r\n1. Start a \"round\" of trials\r\n2. Cut the bad ones\r\n3. Continue\r\n4. Cut the bad ones again... repeat steps 2 to 4\r\n5. We end up with finalists and a winner\r\n6. Then save the results of the finalists of the round. We may want to save the results of non-finalists. So we may also re-scale the relative scores of the non-finalists (the ones we dropped) so as to simulate \"end\" scores to be able to consider those partial results in the Hyperparameter Selection algorithm for next round, instead of considering only the finalists of the round. \r\n7. Go back to step 1 for many rounds. \r\n\r\nSo this can be configured: \r\n- `n_rounds`: the number of rounds we do as in step 1 above - a round is like one generation of a population\r\n- `n_models_per_rounds`: the size of a population\r\n- `max_n_epochs`: the number of epochs the winner will be trained on\r\n- `n_kill_steps`: the number of times we'll kill a percentage of the population before reaching the max n_epochs - so n_kill_steps is like the number of steps in a staircase\r\n- `drop_ratio_per_steps`: the percentage of the population we kill at each drop step - so this is like the relative height of each step in a staircase wrt each previous step. See image above. \r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/302/timeline","performed_via_github_app":null,"state_reason":null}