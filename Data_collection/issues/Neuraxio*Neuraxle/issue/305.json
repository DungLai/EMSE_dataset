{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/305","repository_url":"https://api.github.com/repos/Neuraxio/Neuraxle","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/305/labels{/name}","comments_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/305/comments","events_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/305/events","html_url":"https://github.com/Neuraxio/Neuraxle/issues/305","id":589869093,"node_id":"MDU6SXNzdWU1ODk4NjkwOTM=","number":305,"title":"Feature: Cancellable trial with ctr-something in the automl loop","user":{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false},"labels":[{"id":1290971222,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIy","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-29T19:49:27Z","updated_at":"2022-03-31T13:59:49Z","closed_at":"2022-03-31T13:59:49Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nWe could probably have a value for cancelled trials. TRIAL_STATUS.CANCELLED ? \r\nAdd the right except block in the automl loop to cancel a trial. \r\n\r\nChange the try except blocks in AutoML._fit_data_container method : \r\n \r\n```\r\n validation_splits = self.validation_split_function.split_data_container(data_container)\r\n\r\n        for trial_number in range(self.n_trial):\r\n            try:\r\n                auto_ml_data = AutoMLContainer(\r\n                    trial_number=trial_number,\r\n                    trials=self.hyperparams_repository.load_all_trials(TRIAL_STATUS.SUCCESS),\r\n                    hyperparameter_space=self.pipeline.get_hyperparams_space(),\r\n                    main_scoring_metric_name=self.trainer.get_main_metric_name()\r\n                )\r\n\r\n                with self.hyperparams_repository.new_trial(auto_ml_data) as repo_trial:\r\n                    self.print_func('\\ntrial {}/{}'.format(trial_number + 1, self.n_trial))\r\n\r\n                    repo_trial_split = self._execute_trial(\r\n                        trial_number=trial_number,\r\n                        repo_trial=repo_trial,\r\n                        context=context,\r\n                        validation_splits=validation_splits\r\n                    )\r\n            except (SystemError, SystemExit, EOFError, KeyboardInterrupt) as error:\r\n                track = traceback.format_exc()\r\n                repo_trial.set_failed(error)\r\n                self.print_func(track)\r\n                raise error\r\n            except Exception:\r\n                track = traceback.format_exc()\r\n                self.print_func('failed trial {}'.format(\r\n                    self._get_trial_split_description(repo_trial, repo_trial_split, validation_splits, trial_number)))\r\n                self.print_func(track)\r\n            finally:\r\n                repo_trial.update_final_trial_status()\r\n                self.hyperparams_repository.save_trial(repo_trial)\r\n\r\n        best_hyperparams = self.hyperparams_repository.get_best_hyperparams()\r\n```","closed_by":{"login":"guillaume-chevalier","id":11862328,"node_id":"MDQ6VXNlcjExODYyMzI4","avatar_url":"https://avatars.githubusercontent.com/u/11862328?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaume-chevalier","html_url":"https://github.com/guillaume-chevalier","followers_url":"https://api.github.com/users/guillaume-chevalier/followers","following_url":"https://api.github.com/users/guillaume-chevalier/following{/other_user}","gists_url":"https://api.github.com/users/guillaume-chevalier/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaume-chevalier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaume-chevalier/subscriptions","organizations_url":"https://api.github.com/users/guillaume-chevalier/orgs","repos_url":"https://api.github.com/users/guillaume-chevalier/repos","events_url":"https://api.github.com/users/guillaume-chevalier/events{/privacy}","received_events_url":"https://api.github.com/users/guillaume-chevalier/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/305/timeline","performed_via_github_app":null,"state_reason":"completed"}