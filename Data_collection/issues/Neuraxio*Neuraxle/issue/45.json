{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/45","repository_url":"https://api.github.com/repos/Neuraxio/Neuraxle","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/45/labels{/name}","comments_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/45/comments","events_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/45/events","html_url":"https://github.com/Neuraxio/Neuraxle/issues/45","id":489347699,"node_id":"MDU6SXNzdWU0ODkzNDc2OTk=","number":45,"title":"AutoMLSequentialWrapper","user":{"login":"guillaume-chevalier","id":11862328,"node_id":"MDQ6VXNlcjExODYyMzI4","avatar_url":"https://avatars.githubusercontent.com/u/11862328?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaume-chevalier","html_url":"https://github.com/guillaume-chevalier","followers_url":"https://api.github.com/users/guillaume-chevalier/followers","following_url":"https://api.github.com/users/guillaume-chevalier/following{/other_user}","gists_url":"https://api.github.com/users/guillaume-chevalier/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaume-chevalier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaume-chevalier/subscriptions","organizations_url":"https://api.github.com/users/guillaume-chevalier/orgs","repos_url":"https://api.github.com/users/guillaume-chevalier/repos","events_url":"https://api.github.com/users/guillaume-chevalier/events{/privacy}","received_events_url":"https://api.github.com/users/guillaume-chevalier/received_events","type":"User","site_admin":false},"labels":[{"id":1290971222,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIy","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1290971223,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIz","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-09-04T19:22:47Z","updated_at":"2020-01-27T20:26:42Z","closed_at":"2020-01-27T20:26:42Z","author_association":"MEMBER","active_lock_reason":null,"body":"Do something like this for meta_fit: \r\n\r\n```\r\nclass AutoMLSequentialWrapper:\r\n\r\n\r\n\tdef __init__(self, wrapped_pipeline, auto_ml_strategy, validation_technique, score_function, hyperparams_repository, n_iters): \r\n\r\n\t\tself.toute = toute...\r\n\r\n\tdef fit(self, di, eo): \r\n\r\n\t\tfor i in n_iters: \r\n\t\t\thps: List[HyperparameterSamples], scores: List[float] = hyperparams_repository.load_all()\r\n\t\t\t\r\n\t\t\tauto_ml_strategy = auto_ml_strategy.fit(hps, scores)\r\n\t\t\t\r\n\t\t\tnext_model_to_try_hps = auto_ml_strategy.guess_next_best_params(i, n_iters, wrapped_pipeline.get_hyperparams_space())\r\n\t\t\thyperparams_repository.register_new_untrained_trial(next_model_to_try_hps)\r\n\t\t\t\r\n\t\t\tvalidation_wrapper = validation_technique(copy(wrapped_pipeline).set_hyperparams(next_model_to_try_hps))\r\n\t\t\tvalidation_wrapper, predicted_eo = validation_wrapper.fit_transform(di, eo)\r\n\r\n\t\t\tscore = score_function(predicted_eo, eo)  # TODO: review order of arguments here.\r\n\r\n\t\t\thyperparams_repository.set_score_for_trial(next_model_to_try_hps, score)\r\n```\r\n\r\nI'd like to validate the OOP object structure. For instance, what will we do when we'll run trials in parallel? This for loop is not enough, it'd be more like a pool of workers that tries the `N` next best samples. \r\n\r\nWe also need a way to indicate that the trial crashed so that the `auto_ml_strategy` doesn't try that point again. \r\n\r\nAny comments/suggestions on that @mlevesquedion @alexbrillant @Eric2Hamel?","closed_by":{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/45/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/45/timeline","performed_via_github_app":null,"state_reason":"completed"}