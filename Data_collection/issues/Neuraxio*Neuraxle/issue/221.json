{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/221","repository_url":"https://api.github.com/repos/Neuraxio/Neuraxle","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/221/labels{/name}","comments_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/221/comments","events_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/221/events","html_url":"https://github.com/Neuraxio/Neuraxle/issues/221","id":544669356,"node_id":"MDU6SXNzdWU1NDQ2NjkzNTY=","number":221,"title":"Feature: Streaming Pipeline API idea","user":{"login":"guillaume-chevalier","id":11862328,"node_id":"MDQ6VXNlcjExODYyMzI4","avatar_url":"https://avatars.githubusercontent.com/u/11862328?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaume-chevalier","html_url":"https://github.com/guillaume-chevalier","followers_url":"https://api.github.com/users/guillaume-chevalier/followers","following_url":"https://api.github.com/users/guillaume-chevalier/following{/other_user}","gists_url":"https://api.github.com/users/guillaume-chevalier/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaume-chevalier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaume-chevalier/subscriptions","organizations_url":"https://api.github.com/users/guillaume-chevalier/orgs","repos_url":"https://api.github.com/users/guillaume-chevalier/repos","events_url":"https://api.github.com/users/guillaume-chevalier/events{/privacy}","received_events_url":"https://api.github.com/users/guillaume-chevalier/received_events","type":"User","site_admin":false},"labels":[{"id":1290971221,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIx","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/duplicate","name":"duplicate","color":"cfd3d7","default":true,"description":"This issue or pull request already exists"},{"id":1290971222,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIy","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":1290971223,"node_id":"MDU6TGFiZWwxMjkwOTcxMjIz","url":"https://api.github.com/repos/Neuraxio/Neuraxle/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false},"assignees":[{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/milestones/5","html_url":"https://github.com/Neuraxio/Neuraxle/milestone/5","labels_url":"https://api.github.com/repos/Neuraxio/Neuraxle/milestones/5/labels","id":5109617,"node_id":"MDk6TWlsZXN0b25lNTEwOTYxNw==","number":5,"title":"0.5.0","description":"","creator":{"login":"guillaume-chevalier","id":11862328,"node_id":"MDQ6VXNlcjExODYyMzI4","avatar_url":"https://avatars.githubusercontent.com/u/11862328?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaume-chevalier","html_url":"https://github.com/guillaume-chevalier","followers_url":"https://api.github.com/users/guillaume-chevalier/followers","following_url":"https://api.github.com/users/guillaume-chevalier/following{/other_user}","gists_url":"https://api.github.com/users/guillaume-chevalier/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaume-chevalier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaume-chevalier/subscriptions","organizations_url":"https://api.github.com/users/guillaume-chevalier/orgs","repos_url":"https://api.github.com/users/guillaume-chevalier/repos","events_url":"https://api.github.com/users/guillaume-chevalier/events{/privacy}","received_events_url":"https://api.github.com/users/guillaume-chevalier/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":3,"state":"closed","created_at":"2020-02-16T01:43:44Z","updated_at":"2020-12-09T04:24:13Z","due_on":"2020-04-30T07:00:00Z","closed_at":"2020-12-09T04:24:13Z"},"comments":0,"created_at":"2020-01-02T17:22:55Z","updated_at":"2020-05-27T20:54:36Z","closed_at":"2020-05-27T20:54:36Z","author_association":"MEMBER","active_lock_reason":null,"body":"- A `Queue` is a Barrier.\r\n- A `Joiner` is a Barrier. \r\n\r\n# High-level pipeline definition to refactored pipeline: \r\n```\r\nStreamingPipeline([\r\n    (1, StepA()), \r\n    Queue(max_batches=10), \r\n    (1, StepC()), \r\n    Joiner(),\r\n    (1, StepD()), \r\n    Queue(max_batches=10), \r\n    (1, StepE())\r\n], batch_size=100)\r\n\r\n==>\r\n\r\nPipeline([\r\n    (\"before_Joiner\", StreamingPipeline([\r\n        (1, StepA()), \r\n        Queue(max_batches=10), \r\n        (1, StepC()), \r\n    ], batch_size=100)), \r\n    (\"after_Joiner\", StreamingPipeline([\r\n        (1, StepD()), \r\n        Queue(max_batches=10), \r\n        (1, StepE())\r\n    ], batch_size=100))\r\n])\r\n\r\n==>\r\n\r\nPipeline([\r\n    (\"before_Joiner\", QueuedPipeline([\r\n        (\"before_Queue\", StepA()), \r\n        (\"after_Queue\", StepC())\r\n    ]),  max_batches=10, batch_size=100),\r\n    (\"after_Joiner\", QueuedPipeline([\r\n        (\"before_Queue\", StepD()), \r\n        (\"after_Queue\", StepE())\r\n    ]),  max_batches=10, batch_size=100),\r\n])\r\n```\r\n\r\n## Other example: \r\n```\r\nStreamingPipeline([\r\n    (1, StepA()), \r\n    (1, StepC()), \r\n    Queue(max_batches=10), \r\n    (1, StepD()), \r\n    (1, StepE())\r\n], batch_size=100)\r\n\r\n==>\r\n\r\nQueuedPipeline([\r\n    (\"before_Joiner\", SequentialPipeline([\r\n        StepA(), \r\n        StepC(), \r\n    ]), batch_size=100), \r\n    (\"after_Joiner\", Pipeline([\r\n        StepD(), \r\n        StepE()\r\n    ]), batch_size=100)\r\n], max_batches=10, batch_size=100)\r\n```\r\n\r\n## The priority of operations is important: \r\nHere, we'll split on Joiner, and only after on Queues, as queues are later in the following list\r\n```\r\n_map_of_barriers = [\r\n    # Format: (Barrier, NewParentPipelineClass, NewChildPipelineClass), \r\n    # Highest in the list has priority of operation. \r\n    (Joiner, Pipeline, QueuedPipeline),\r\n    (Queue, QueuedPipeline, SequentialPipeline)\r\n]\r\n```\r\n\r\nNow, how I see the class: \r\n```\r\nclass StreamingPipeline(Pipeline):\r\n\r\n    def __init__(self, steps, **kwargs):\r\n        self = self._split(steps, **kwargs)\r\n        super().__init__(self)\r\n\r\n    def _split(self, steps, **kwargs): \r\n        for splitter_barrier, new_parent, new_child in _map_of_barriers:\r\n            self = new_parent[new_child(s, **kwargs) for s in steps.split(splitter_barrier)], **kwargs)\r\n        # TODO: now we send `**kwargs` to both parent and child. We need to know to which one to send what, dynamically, with the same argument names... \r\n        return self\r\n```","closed_by":{"login":"alexbrillant","id":19400226,"node_id":"MDQ6VXNlcjE5NDAwMjI2","avatar_url":"https://avatars.githubusercontent.com/u/19400226?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbrillant","html_url":"https://github.com/alexbrillant","followers_url":"https://api.github.com/users/alexbrillant/followers","following_url":"https://api.github.com/users/alexbrillant/following{/other_user}","gists_url":"https://api.github.com/users/alexbrillant/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbrillant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbrillant/subscriptions","organizations_url":"https://api.github.com/users/alexbrillant/orgs","repos_url":"https://api.github.com/users/alexbrillant/repos","events_url":"https://api.github.com/users/alexbrillant/events{/privacy}","received_events_url":"https://api.github.com/users/alexbrillant/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/221/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":1},"timeline_url":"https://api.github.com/repos/Neuraxio/Neuraxle/issues/221/timeline","performed_via_github_app":null,"state_reason":"completed"}