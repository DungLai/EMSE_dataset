{"url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/240","repository_url":"https://api.github.com/repos/philipperemy/keras-tcn","labels_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/240/labels{/name}","comments_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/240/comments","events_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/240/events","html_url":"https://github.com/philipperemy/keras-tcn/issues/240","id":1412244373,"node_id":"I_kwDOB4a3hs5ULSOV","number":240,"title":"Masking time steps in order to use TCN for variable length sequences","user":{"login":"fsbashiri","id":27236086,"node_id":"MDQ6VXNlcjI3MjM2MDg2","avatar_url":"https://avatars.githubusercontent.com/u/27236086?v=4","gravatar_id":"","url":"https://api.github.com/users/fsbashiri","html_url":"https://github.com/fsbashiri","followers_url":"https://api.github.com/users/fsbashiri/followers","following_url":"https://api.github.com/users/fsbashiri/following{/other_user}","gists_url":"https://api.github.com/users/fsbashiri/gists{/gist_id}","starred_url":"https://api.github.com/users/fsbashiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fsbashiri/subscriptions","organizations_url":"https://api.github.com/users/fsbashiri/orgs","repos_url":"https://api.github.com/users/fsbashiri/repos","events_url":"https://api.github.com/users/fsbashiri/events{/privacy}","received_events_url":"https://api.github.com/users/fsbashiri/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-10-17T21:22:42Z","updated_at":"2022-11-07T07:34:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nIn my project, I am using TCN for sequence-to-sequence analysis of time series data that have variable lengths. I have defined a subclass of the Sequence class that pads each batch of data to its maximum sequence length (similar to what is suggested [here](https://stanford.edu/~shervine/blog/keras-how-to-generate-data-on-the-fly#data-generator)). As for the model, I use a masking layer to compute and pass a mask to TCN (as suggested [here issue #234](https://github.com/philipperemy/keras-tcn/issues/234)). Supposedly, layers that support masking will automatically propagate the mask to the next layer. In the simplest form of my model, I have a masking layer, followed by a TCN, and a Dense layer with 1 unit.\r\n\r\nHere are two issues that I've got:\r\n1. when I try to access the propagated mask from the output of the TCN layer, I get an error that says the object has no attribute `_keras_mask`.\r\n2. Apparently, it matters if a sequence is padded from the beginning of the sequence or a the end (whether to set padding argument of the [pad_sequences](https://www.tensorflow.org/api_docs/python/tf/keras/utils/pad_sequences) 'pre' or 'post'). If it's padded from the beginning, the output of the TCN at those padded time steps is equal to zero. But you cannot expect zero output if it's padded at the end of the sequence. \r\n\r\n**Paste a snippet**\r\nPlease see the following simple code:\r\n\r\n```python\r\nmask_value = 1.0\r\nx = np.random.rand(1, 3, 8)  # 1 sample, 3 time steps, 8 features\r\nx_pre = np.append(mask_value * np.ones((1, 2, 8)), x, axis=1)  # append (pre-padding) 2 time steps with mask_value\r\nx_post = np.append(x, mask_value * np.ones((1, 2, 8)), axis=1)  # append (post-padding) 2 time steps with mask_value\r\nprint(f\"x_pre: \\n{x_pre}\")\r\n\r\n# Sequential modeling\r\nmodel = Sequential()\r\nmodel.add(Masking(mask_value=mask_value))\r\nmodel.add(TCN(nb_filters=64,\r\n              nb_stacks=1,\r\n              kernel_size=3,\r\n              dilations=[1, 2],\r\n              padding='causal',\r\n              return_sequences=True))\r\nmodel.add(TimeDistributed(Dense(1)))\r\n\r\nout_pre = model(x_pre)\r\nout_post = model(x_post)\r\nprint(f\"out_pre: \\n{out_pre}\")\r\nprint(f\"out_post: \\n{out_post}\")\r\nprint(f\"out_pre._keras_mask: \\n{out_pre._keras_mask}\")\r\n```\r\n\r\nThe output of the code:\r\n\r\n```\r\nx_pre: \r\n[[[1.         1.         1.         1.         1.         1.\r\n   1.         1.        ]\r\n  [1.         1.         1.         1.         1.         1.\r\n   1.         1.        ]\r\n  [0.66743025 0.3803879  0.06403598 0.6146936  0.34356068 0.08322509\r\n   0.97064031 0.67479811]\r\n  [0.38705443 0.18246054 0.17536628 0.8973423  0.63538071 0.35077733\r\n   0.33901726 0.35183449]\r\n  [0.10048297 0.33713389 0.61988985 0.74523683 0.48507557 0.21914819\r\n   0.86720421 0.66290713]]]\r\nout_pre: \r\n[[[ 0.        ]\r\n  [ 0.        ]\r\n  [-0.28437746]\r\n  [-0.29050288]\r\n  [-0.84733   ]]]\r\nout_post: \r\n[[[-0.28437746]\r\n  [-0.29050288]\r\n  [-0.84733   ]\r\n  [-0.05684387]\r\n  [-0.7985336 ]]]\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/pydevd.py\", line 1491, in _exec\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/Users/fbashiri/Documents/Projects/MGP-AttTCN-master/src/loss_n_eval/Azi_test_loss.py\", line 132, in <module>\r\n    print(f\"out_pre._keras_mask: \\n{out_pre._keras_mask}\")\r\nAttributeError: 'tensorflow.python.framework.ops.EagerTensor' object has no attribute '_keras_mask'\r\n```\r\n\r\n**Dependencies**\r\nI am using:\r\nkeras 2.4.3\r\nkeras-tan 3.1.1\r\nTensorflow-gpu 2.3.1\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/240/timeline","performed_via_github_app":null,"state_reason":null}