{"url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/195","repository_url":"https://api.github.com/repos/philipperemy/keras-tcn","labels_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/195/labels{/name}","comments_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/195/comments","events_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/195/events","html_url":"https://github.com/philipperemy/keras-tcn/issues/195","id":833910552,"node_id":"MDU6SXNzdWU4MzM5MTA1NTI=","number":195,"title":"use_weight_norm=True -> Model fails to load when using *.tf model format.","user":{"login":"Luux","id":15156652,"node_id":"MDQ6VXNlcjE1MTU2NjUy","avatar_url":"https://avatars.githubusercontent.com/u/15156652?v=4","gravatar_id":"","url":"https://api.github.com/users/Luux","html_url":"https://github.com/Luux","followers_url":"https://api.github.com/users/Luux/followers","following_url":"https://api.github.com/users/Luux/following{/other_user}","gists_url":"https://api.github.com/users/Luux/gists{/gist_id}","starred_url":"https://api.github.com/users/Luux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Luux/subscriptions","organizations_url":"https://api.github.com/users/Luux/orgs","repos_url":"https://api.github.com/users/Luux/repos","events_url":"https://api.github.com/users/Luux/events{/privacy}","received_events_url":"https://api.github.com/users/Luux/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-03-17T15:28:49Z","updated_at":"2022-01-20T13:53:33Z","closed_at":"2022-01-20T13:53:32Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nThis one took me a while to isolate. If you set use_weight_norm to True and save the model *not* in the h5 format as in the loading example, but in the new tf-format, using weight normalization results in tensorflow not being able to load the model again.\r\n\r\n**Paste a snippet**\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom tcn import TCN\r\n\r\nmodel_fn = \"test.tf\"  # or simply \"test\" to use the directory format\r\n\r\ninputs = tf.keras.layers.Input(shape=(max_features, max_len))\r\ntcn = TCN(\r\n    nb_filters=64,\r\n    return_sequences=True,\r\n    use_skip_connections=True,\r\n    padding=\"same\",\r\n    dilations=[1, 2, 4, 8, 16, 32, 64],\r\n    use_weight_norm=True,\r\n    name=\"tcn1\",\r\n)(inputs)\r\ndense = tf.keras.layers.Dense(units=1, activation=\"sigmoid\")(tcn)\r\nmodel = tf.keras.Model(inputs=inputs, outputs=dense)\r\n\r\nmodel.compile(optimizer=\"adam\")\r\n\r\nprint(\"Save model...\")\r\nmodel.save(model_fn)\r\n\r\nprint(\"Load model...\")\r\nmodel = tf.keras.models.load_model(\r\n    model_fn, compile=False\r\n)\r\n\r\nmodel.compile(optimizer=\"adam\")\r\n\r\nmodel.summary()\r\n\r\ninputs = np.ones(shape=(1, 64, 128))\r\nout = model.predict(inputs)\r\nprint(out)\r\n\r\n```\r\nThis results in errors such as \r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/runpy.py\", line 194, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/luux/.vscode/extensions/ms-python.python-2021.3.658691958/pythonFiles/lib/python/debugpy/__main__.py\", line 45, in <module>\r\n    cli.main()\r\n  File \"/home/luux/.vscode/extensions/ms-python.python-2021.3.658691958/pythonFiles/lib/python/debugpy/../debugpy/server/cli.py\", line 444, in main\r\n    run()\r\n  File \"/home/luux/.vscode/extensions/ms-python.python-2021.3.658691958/pythonFiles/lib/python/debugpy/../debugpy/server/cli.py\", line 285, in run_file\r\n    runpy.run_path(target_as_str, run_name=compat.force_str(\"__main__\"))\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/runpy.py\", line 265, in run_path\r\n    return _run_module_code(code, init_globals, run_name,\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/runpy.py\", line 97, in _run_module_code\r\n    _run_code(code, mod_globals, init_globals,\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/luux/models/aisign/load_TCN.py\", line 50, in <module>\r\n    model = tf.keras.models.load_model(\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/keras/saving/save.py\", line 187, in load_model\r\n    return saved_model_load.load(filepath, compile, options)\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py\", line 120, in load\r\n    model = tf_load.load_internal(\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py\", line 632, in load_internal\r\n    loader = loader_cls(object_graph_proto, saved_model_proto, export_dir,\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py\", line 194, in __init__\r\n    super(KerasObjectLoader, self).__init__(*args, **kwargs)\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py\", line 130, in __init__\r\n    self._load_all()\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py\", line 218, in _load_all\r\n    super(KerasObjectLoader, self)._load_all()\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py\", line 141, in _load_all\r\n    self._load_nodes()\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py\", line 283, in _load_nodes\r\n    node, setter = self._recreate(proto, node_id)\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/keras/saving/saved_model/load.py\", line 239, in _recreate\r\n    obj, setter = super(KerasObjectLoader, self)._recreate(proto, node_id)\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py\", line 393, in _recreate\r\n    return factory[kind]()\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py\", line 382, in <lambda>\r\n    \"function\": lambda: self._recreate_function(proto.function),\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py\", line 420, in _recreate_function\r\n    return function_deserialization.recreate_function(\r\n  File \"/home/luux/miniconda3/envs/3.8/lib/python3.8/site-packages/tensorflow/python/saved_model/function_deserialization.py\", line 261, in recreate_function\r\n    concrete_function_objects.append(concrete_functions[concrete_function_name])\r\nKeyError: '__inference_conv1D_0_layer_call_fn_26401'\r\n```\r\n\r\nI also tried to specify the TCN as custom object just as usually done if you use h5, that didn't work either. use_batch_norm and use_layer_norm work as expected out-of-the-box.\r\n\r\n\r\n**Dependencies**\r\ntensorflow==2.3 (I also tested 2.4 without success)\r\n","closed_by":{"login":"philipperemy","id":4516927,"node_id":"MDQ6VXNlcjQ1MTY5Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/4516927?v=4","gravatar_id":"","url":"https://api.github.com/users/philipperemy","html_url":"https://github.com/philipperemy","followers_url":"https://api.github.com/users/philipperemy/followers","following_url":"https://api.github.com/users/philipperemy/following{/other_user}","gists_url":"https://api.github.com/users/philipperemy/gists{/gist_id}","starred_url":"https://api.github.com/users/philipperemy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/philipperemy/subscriptions","organizations_url":"https://api.github.com/users/philipperemy/orgs","repos_url":"https://api.github.com/users/philipperemy/repos","events_url":"https://api.github.com/users/philipperemy/events{/privacy}","received_events_url":"https://api.github.com/users/philipperemy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/195/timeline","performed_via_github_app":null,"state_reason":"completed"}