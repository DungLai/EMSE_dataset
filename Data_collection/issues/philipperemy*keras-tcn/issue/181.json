{"url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/181","repository_url":"https://api.github.com/repos/philipperemy/keras-tcn","labels_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/181/comments","events_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/181/events","html_url":"https://github.com/philipperemy/keras-tcn/issues/181","id":800904019,"node_id":"MDU6SXNzdWU4MDA5MDQwMTk=","number":181,"title":"Problem with initialization","user":{"login":"266918","id":37477529,"node_id":"MDQ6VXNlcjM3NDc3NTI5","avatar_url":"https://avatars.githubusercontent.com/u/37477529?v=4","gravatar_id":"","url":"https://api.github.com/users/266918","html_url":"https://github.com/266918","followers_url":"https://api.github.com/users/266918/followers","following_url":"https://api.github.com/users/266918/following{/other_user}","gists_url":"https://api.github.com/users/266918/gists{/gist_id}","starred_url":"https://api.github.com/users/266918/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/266918/subscriptions","organizations_url":"https://api.github.com/users/266918/orgs","repos_url":"https://api.github.com/users/266918/repos","events_url":"https://api.github.com/users/266918/events{/privacy}","received_events_url":"https://api.github.com/users/266918/received_events","type":"User","site_admin":false},"labels":[{"id":875498559,"node_id":"MDU6TGFiZWw4NzU0OTg1NTk=","url":"https://api.github.com/repos/philipperemy/keras-tcn/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-02-04T03:52:15Z","updated_at":"2021-02-19T01:34:38Z","closed_at":"2021-02-19T01:34:38Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nI have run the sequential model multiple times and it produces inconsistent results. \r\nModel: \"sequential\"\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ntcn (TCN)                    (None, 10)                2940      \r\n_________________________________________________________________\r\ndense (Dense)                (None, 1)                 11        \r\n=================================================================\r\nTotal params: 2,951\r\nTrainable params: 2,951\r\nNon-trainable params: 0\r\n_________________________________________________________________\r\nEpoch 1/200\r\n50/50 [==============================] - 3s 22ms/step - loss: 0.0433 - mae: 0.0433 - val_loss: 0.0069 - val_mae: 0.0069\r\nEpoch 2/200\r\n50/50 [==============================] - 0s 6ms/step - loss: 0.0220 - mae: 0.0220 - val_loss: 0.0094 - val_mae: 0.0094\r\n\r\nThe result looks good\r\n![image](https://user-images.githubusercontent.com/37477529/106842388-90b03b80-6669-11eb-9384-27b8cf4d51d7.png)\r\n\r\nThe second run - I didn't change any parameter, just rerun the model training again, it got the following result.\r\nModel: \"sequential_1\"\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ntcn_1 (TCN)                  (None, 10)                2940      \r\n_________________________________________________________________\r\ndense_1 (Dense)              (None, 1)                 11        \r\n=================================================================\r\nTotal params: 2,951\r\nTrainable params: 2,951\r\nNon-trainable params: 0\r\n![image](https://user-images.githubusercontent.com/37477529/106842453-b4738180-6669-11eb-94f0-0213523f0be6.png)\r\n\r\n\r\n**Paste a snippet**\r\nHere's the code. the data is amazon stock price downloaded as csv format.  Every time, build_model() is called.\r\nimport pandas as pd\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom sklearn.preprocessing import MinMaxScaler\r\nfrom tcn.tcn import TCN\r\nfrom tensorflow import keras\r\n\r\nwindow_size = 20   # \r\nbatch_size = 32    # \r\nepochs = 200       # \r\nfilter_nums = 10   # \r\nkernel_size = 4    # \r\n\r\n\r\ndef get_dataset():\r\n    df = pd.read_csv('./bars/AMZN Historical Data.csv', thousands=',')\r\n#    df = df[::-1]\r\n    scaler = MinMaxScaler()\r\n    open_arr = scaler.fit_transform(df['Open'].values.reshape(-1, 1)).reshape(-1)\r\n    X = np.zeros(shape=(len(open_arr) - window_size, window_size))\r\n    label = np.zeros(shape=(len(open_arr) - window_size))\r\n    for i in range(len(open_arr) - window_size):\r\n        X[i, :] = open_arr[i:i+window_size]\r\n        label[i] = open_arr[i+window_size]\r\n    train_X = X[:2000, :]\r\n    train_label = label[:2000]\r\n    test_X = X[2000:3000, :]\r\n    test_label = label[2000:3000]\r\n    return train_X, train_label, test_X, test_label, scaler\r\n\r\ndef RMSE(pred, true):\r\n    return np.mean(np.sqrt(np.square(pred - true)))\r\n\r\ndef plot(pred, true):\r\n    fig = plt.figure()\r\n    ax = fig.add_subplot(111)\r\n    ax.plot(range(len(pred)), pred)\r\n    ax.plot(range(len(true)), true)\r\n    plt.show()\r\n\r\ndef build_model():\r\n    train_X, train_label, test_X, test_label, scaler = get_dataset()\r\n    model = keras.models.Sequential([\r\n        keras.layers.Input(shape=(window_size, 1)),\r\n        TCN(nb_filters=filter_nums,                   \r\n            kernel_size=kernel_size,                   \r\n            dilations=[1, 2, 4, 8]),     \r\n        keras.layers.Dense(units=1, activation='relu')\r\n    ])\r\n    model.summary()\r\n    model.compile(optimizer='adam', loss='mae', metrics=['mae'])\r\n    model.fit(train_X, train_label, validation_split=0.2, epochs=epochs)\r\n\r\n    model.evaluate(test_X, test_label)\r\n    prediction = model.predict(test_X)\r\n    scaled_prediction = scaler.inverse_transform(prediction.reshape(-1, 1)).reshape(-1)\r\n    scaled_test_label = scaler.inverse_transform(test_label.reshape(-1, 1)).reshape(-1)\r\n    print('RMSE ', RMSE(scaled_prediction, scaled_test_label))\r\n    plot(scaled_prediction, scaled_test_label)\r\n\r\n\r\n**Dependencies**\r\nTensorflow version\r\ntensorflow             2.4.1\r\ntensorflow-addons      0.12.1\r\ntensorflow-estimator   2.4.0","closed_by":{"login":"philipperemy","id":4516927,"node_id":"MDQ6VXNlcjQ1MTY5Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/4516927?v=4","gravatar_id":"","url":"https://api.github.com/users/philipperemy","html_url":"https://github.com/philipperemy","followers_url":"https://api.github.com/users/philipperemy/followers","following_url":"https://api.github.com/users/philipperemy/following{/other_user}","gists_url":"https://api.github.com/users/philipperemy/gists{/gist_id}","starred_url":"https://api.github.com/users/philipperemy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/philipperemy/subscriptions","organizations_url":"https://api.github.com/users/philipperemy/orgs","repos_url":"https://api.github.com/users/philipperemy/repos","events_url":"https://api.github.com/users/philipperemy/events{/privacy}","received_events_url":"https://api.github.com/users/philipperemy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/181/timeline","performed_via_github_app":null,"state_reason":"completed"}