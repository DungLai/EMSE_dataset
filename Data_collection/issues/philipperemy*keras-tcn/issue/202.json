{"url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/202","repository_url":"https://api.github.com/repos/philipperemy/keras-tcn","labels_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/202/labels{/name}","comments_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/202/comments","events_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/202/events","html_url":"https://github.com/philipperemy/keras-tcn/issues/202","id":866956666,"node_id":"MDU6SXNzdWU4NjY5NTY2NjY=","number":202,"title":"tcn not converging for neural data prediction","user":{"login":"catubc","id":4267452,"node_id":"MDQ6VXNlcjQyNjc0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/4267452?v=4","gravatar_id":"","url":"https://api.github.com/users/catubc","html_url":"https://github.com/catubc","followers_url":"https://api.github.com/users/catubc/followers","following_url":"https://api.github.com/users/catubc/following{/other_user}","gists_url":"https://api.github.com/users/catubc/gists{/gist_id}","starred_url":"https://api.github.com/users/catubc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/catubc/subscriptions","organizations_url":"https://api.github.com/users/catubc/orgs","repos_url":"https://api.github.com/users/catubc/repos","events_url":"https://api.github.com/users/catubc/events{/privacy}","received_events_url":"https://api.github.com/users/catubc/received_events","type":"User","site_admin":false},"labels":[{"id":875498559,"node_id":"MDU6TGFiZWw4NzU0OTg1NTk=","url":"https://api.github.com/repos/philipperemy/keras-tcn/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-04-25T09:02:05Z","updated_at":"2021-05-07T06:23:01Z","closed_at":"2021-05-07T06:23:00Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nHello\r\n\r\nThis is not a bug, it's more of a question re: use.  Sorry for using the \"bug\" report, but I wasn't what the correct field was.\r\n\r\nI'm trying to predict a behavior label (0=no behavior; 1=behavior) from temporal neural data and am having a hard time getting the model to converge.  My data has shape [n_samples, n_timesteps, n_dimensions], where n_dimensions can be from 1-10 (these are Principal Components so even n_dimensions = 1 captures a lot of the structure in the data). \r\n\r\nLinear classifiers do relatively well in predicting an upcoming behavior as far back as 5-10 seconds prior to behavior and vanilla LSTMs also have increasingly better prediction closer to behavior. So I know there is structure in the data that can be learned, and was hoping that some form of temporal convolution would recover the structure better than these other methods.\r\n\r\nI'm setting up the model like this:\r\n\r\n```\r\n# \r\nbatch_size, time_steps, input_dim = None, 450, 6\r\n\r\n# \r\ntcn_layer = TCN(input_shape=(time_steps, input_dim),\r\n                return_sequences=True,  # I need this as I want to see the development of the prediction over time\r\n                dilations = (1, 2, 4, 8, 16, 32,64,128,256,512))\r\n\r\n# \r\nm = Sequential([\r\n    tcn_layer,\r\n    Dense(1, activation='sigmoid')\r\n])\r\n```\r\nAnd after compiling the model I get this:\r\n\r\n```\r\nlayers[i]: <tcn.tcn.TCN object at 0x7fa514299670>\r\nModel: \"sequential\"\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ntcn (TCN)                    (None, 450, 64)           236352    \r\n_________________________________________________________________\r\ndense (Dense)                (None, 450, 1)            65        \r\n=================================================================\r\nTotal params: 236,417\r\nTrainable params: 236,417\r\nNon-trainable params: 0\r\n```\r\n\r\nThe model gets over trained after a few hundred epochs (i.e. does ok on training data), but the val_loss is still very large and it performs at chance or worse on test data (I also attach an image of the average prediction at each time point):\r\n\r\n```\r\nEpoch 272/300\r\n5/5 [==============================] - 0s 39ms/step - loss: 0.0589 - val_loss: 0.4058\r\nEpoch 273/300\r\n5/5 [==============================] - 0s 43ms/step - loss: 0.0588 - val_loss: 0.4056\r\nEpoch 274/300\r\n5/5 [==============================] - 0s 43ms/step - loss: 0.0588 - val_loss: 0.4055\r\nEpoch 275/300\r\n5/5 [==============================] - 0s 44ms/step - loss: 0.0588 - val_loss: 0.4054\r\n\r\n```\r\n\r\nAny advice on perhaps tweaking the TCN input params to improve on prediction? \r\n![results](https://user-images.githubusercontent.com/4267452/115987518-aa508780-a5b5-11eb-96df-20be8dbbab66.png)\r\n\r\n","closed_by":{"login":"catubc","id":4267452,"node_id":"MDQ6VXNlcjQyNjc0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/4267452?v=4","gravatar_id":"","url":"https://api.github.com/users/catubc","html_url":"https://github.com/catubc","followers_url":"https://api.github.com/users/catubc/followers","following_url":"https://api.github.com/users/catubc/following{/other_user}","gists_url":"https://api.github.com/users/catubc/gists{/gist_id}","starred_url":"https://api.github.com/users/catubc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/catubc/subscriptions","organizations_url":"https://api.github.com/users/catubc/orgs","repos_url":"https://api.github.com/users/catubc/repos","events_url":"https://api.github.com/users/catubc/events{/privacy}","received_events_url":"https://api.github.com/users/catubc/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/philipperemy/keras-tcn/issues/202/timeline","performed_via_github_app":null,"state_reason":"completed"}