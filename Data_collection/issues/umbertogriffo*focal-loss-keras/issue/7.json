{"url":"https://api.github.com/repos/umbertogriffo/focal-loss-keras/issues/7","repository_url":"https://api.github.com/repos/umbertogriffo/focal-loss-keras","labels_url":"https://api.github.com/repos/umbertogriffo/focal-loss-keras/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/umbertogriffo/focal-loss-keras/issues/7/comments","events_url":"https://api.github.com/repos/umbertogriffo/focal-loss-keras/issues/7/events","html_url":"https://github.com/umbertogriffo/focal-loss-keras/issues/7","id":489492311,"node_id":"MDU6SXNzdWU0ODk0OTIzMTE=","number":7,"title":"A cleaner pattern to make custom_objects simplier","user":{"login":"isaacgerg","id":11971499,"node_id":"MDQ6VXNlcjExOTcxNDk5","avatar_url":"https://avatars.githubusercontent.com/u/11971499?v=4","gravatar_id":"","url":"https://api.github.com/users/isaacgerg","html_url":"https://github.com/isaacgerg","followers_url":"https://api.github.com/users/isaacgerg/followers","following_url":"https://api.github.com/users/isaacgerg/following{/other_user}","gists_url":"https://api.github.com/users/isaacgerg/gists{/gist_id}","starred_url":"https://api.github.com/users/isaacgerg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/isaacgerg/subscriptions","organizations_url":"https://api.github.com/users/isaacgerg/orgs","repos_url":"https://api.github.com/users/isaacgerg/repos","events_url":"https://api.github.com/users/isaacgerg/events{/privacy}","received_events_url":"https://api.github.com/users/isaacgerg/received_events","type":"User","site_admin":false},"labels":[{"id":1153671638,"node_id":"MDU6TGFiZWwxMTUzNjcxNjM4","url":"https://api.github.com/repos/umbertogriffo/focal-loss-keras/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-09-05T02:23:04Z","updated_at":"2020-12-06T17:58:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"```\r\nclass categorical_focal_loss:                             \r\n    '''\r\n    Softmax version of focal loss.\r\n\r\n           m\r\n      FL = sum  -alpha * (1 - p_o,c)^gamma * y_o,c * log(p_o,c)\r\n          c=1\r\n\r\n      where m = number of classes, c = class and o = observation\r\n\r\n    Parameters:\r\n      alpha -- the same as weighing factor in balanced cross entropy\r\n      gamma -- focusing parameter for modulating factor (1-p)\r\n\r\n    Default value:\r\n      gamma -- 2.0 as mentioned in the paper\r\n      alpha -- 0.25 as mentioned in the paper\r\n\r\n    References:\r\n        Official paper: https://arxiv.org/pdf/1708.02002.pdf\r\n        https://www.tensorflow.org/api_docs/python/tf/keras/backend/categorical_crossentropy\r\n\r\n    Usage:\r\n     model.compile(loss=[categorical_focal_loss(alpha=.25, gamma=2)], metrics=[\"accuracy\"], optimizer=adam)\r\n    '''\r\n    def __init__(self, gamma=2., alpha=.25):\r\n        self._gamma = gamma\r\n        self._alpha = alpha\r\n        self.__name__ = 'categorical_focal_loss'\r\n        \r\n    def __int_shape(self, x):\r\n        return tf.keras.backend.int_shape(x) if self.backend == 'tensorflow' else tf.keras.backend.shape(x)    \r\n    \r\n    def  __call__(self, y_true, y_pred):        \r\n        '''\r\n        :param y_true: A tensor of the same shape as `y_pred`\r\n        :param y_pred: A tensor resulting from a softmax\r\n        :return: Output tensor.\r\n        '''\r\n\r\n        # Scale predictions so that the class probas of each sample sum to 1\r\n        y_pred /= tf.keras.backend.sum(y_pred, axis=-1, keepdims=True)\r\n\r\n        # Clip the prediction value to prevent NaN's and Inf's\r\n        epsilon = tf.keras.backend.epsilon()\r\n        y_pred = tf.keras.backend.clip(y_pred, epsilon, 1. - epsilon)\r\n\r\n        # Calculate Cross Entropy\r\n        cross_entropy = -y_true * tf.keras.backend.log(y_pred)\r\n\r\n        # Calculate Focal Loss\r\n        loss = self._alpha * tf.keras.backend.pow(1 - y_pred, self._gamma) * cross_entropy\r\n\r\n        # Sum the losses in mini_batch\r\n        return tf.keras.backend.sum(loss, axis=1)\r\n```\r\n\r\nWith this pattern, I don't need dill when using load_model.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/umbertogriffo/focal-loss-keras/issues/7/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/umbertogriffo/focal-loss-keras/issues/7/timeline","performed_via_github_app":null,"state_reason":null}