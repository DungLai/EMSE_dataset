{"url":"https://api.github.com/repos/nrontsis/PILCO/issues/11","repository_url":"https://api.github.com/repos/nrontsis/PILCO","labels_url":"https://api.github.com/repos/nrontsis/PILCO/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/nrontsis/PILCO/issues/11/comments","events_url":"https://api.github.com/repos/nrontsis/PILCO/issues/11/events","html_url":"https://github.com/nrontsis/PILCO/issues/11","id":342010244,"node_id":"MDU6SXNzdWUzNDIwMTAyNDQ=","number":11,"title":"outputs from mgpr.predict_on_noisy_inputs and pilco.propagate confusion","user":{"login":"mcyip","id":8382274,"node_id":"MDQ6VXNlcjgzODIyNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/8382274?v=4","gravatar_id":"","url":"https://api.github.com/users/mcyip","html_url":"https://github.com/mcyip","followers_url":"https://api.github.com/users/mcyip/followers","following_url":"https://api.github.com/users/mcyip/following{/other_user}","gists_url":"https://api.github.com/users/mcyip/gists{/gist_id}","starred_url":"https://api.github.com/users/mcyip/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcyip/subscriptions","organizations_url":"https://api.github.com/users/mcyip/orgs","repos_url":"https://api.github.com/users/mcyip/repos","events_url":"https://api.github.com/users/mcyip/events{/privacy}","received_events_url":"https://api.github.com/users/mcyip/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-07-17T17:17:57Z","updated_at":"2018-07-17T17:57:59Z","closed_at":"2018-07-17T17:57:59Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nThanks for some great code. I'm trying to read through it and make descriptive comments since theres a lot of dense code and several layers of wrappers of abstractions to TF :)\r\n\r\nMy question is to try to nail down the behavior of mgpr.predict_on_noisy_inputs (namely mgpr.predict_given_factorizations) \r\n\r\nIf I reference PILCO.py's propagate function i see the return is a delta value. (since the immediate next line to predict_on_noisy_inputs is \r\n M_x = M_dx + m_x\r\n\r\nHowever, its not clear to me where this delta is performed or predicted. From the description of  mgpr.predict_given_factorizations, it says to return a mean and variance of X, and I also don't really see the line where it might only returning a \"change\" in X.  It makes sense to me that only X is returned, since both the system model and the controller seem to be of the form x(t+1)=f(x(t),u(t)) and u(t)=g(x(t)) respectively.\r\n\r\nThanks!","closed_by":{"login":"nrontsis","id":4145552,"node_id":"MDQ6VXNlcjQxNDU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/4145552?v=4","gravatar_id":"","url":"https://api.github.com/users/nrontsis","html_url":"https://github.com/nrontsis","followers_url":"https://api.github.com/users/nrontsis/followers","following_url":"https://api.github.com/users/nrontsis/following{/other_user}","gists_url":"https://api.github.com/users/nrontsis/gists{/gist_id}","starred_url":"https://api.github.com/users/nrontsis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nrontsis/subscriptions","organizations_url":"https://api.github.com/users/nrontsis/orgs","repos_url":"https://api.github.com/users/nrontsis/repos","events_url":"https://api.github.com/users/nrontsis/events{/privacy}","received_events_url":"https://api.github.com/users/nrontsis/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/nrontsis/PILCO/issues/11/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/nrontsis/PILCO/issues/11/timeline","performed_via_github_app":null,"state_reason":"completed"}