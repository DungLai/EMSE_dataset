{"url":"https://api.github.com/repos/nrontsis/PILCO/issues/7","repository_url":"https://api.github.com/repos/nrontsis/PILCO","labels_url":"https://api.github.com/repos/nrontsis/PILCO/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/nrontsis/PILCO/issues/7/comments","events_url":"https://api.github.com/repos/nrontsis/PILCO/issues/7/events","html_url":"https://github.com/nrontsis/PILCO/issues/7","id":333978792,"node_id":"MDU6SXNzdWUzMzM5Nzg3OTI=","number":7,"title":"Improve numerical stability","user":{"login":"nrontsis","id":4145552,"node_id":"MDQ6VXNlcjQxNDU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/4145552?v=4","gravatar_id":"","url":"https://api.github.com/users/nrontsis","html_url":"https://github.com/nrontsis","followers_url":"https://api.github.com/users/nrontsis/followers","following_url":"https://api.github.com/users/nrontsis/following{/other_user}","gists_url":"https://api.github.com/users/nrontsis/gists{/gist_id}","starred_url":"https://api.github.com/users/nrontsis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nrontsis/subscriptions","organizations_url":"https://api.github.com/users/nrontsis/orgs","repos_url":"https://api.github.com/users/nrontsis/repos","events_url":"https://api.github.com/users/nrontsis/events{/privacy}","received_events_url":"https://api.github.com/users/nrontsis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-06-20T08:42:36Z","updated_at":"2020-04-30T22:19:39Z","closed_at":"2020-04-30T22:19:39Z","author_association":"OWNER","active_lock_reason":null,"body":"Currently, we get Cholesky decomposition failures, especially in the `RBF` Controller (see #5).\r\n\r\nWe could try the following:\r\n- Constraint the noise (jitter) parameters to a positive, sufficiently large, value, i.e. 1e-4, via use of `gpflow` `transforms`.\r\n- Initialise the `RBF` inputs/outputs better. In my experience, the current the `np.random.rand` initialisation can lead to very bad conditioning. One option would be to use the same initialisation as the `MATLAB` implementation. E.g. in the cart-pole example they have:\r\n```\r\npolicy.p.inputs = gaussian(mm(poli), ss(poli,poli), nc)';  % init. location of \r\n                                                           % basis functions\r\npolicy.p.targets = 0.1*randn(nc, length(policy.maxU));  % init. policy targets \r\n                                                        % (close to zero)\r\npolicy.p.hyp = log([1 1 1 1 0.7 0.7 0.7 0.7 1 0.01]');  % initialize policy\r\n                                                        % hyper-parameters\r\n```\r\nNotice that they also initialise the hyper-parameters, and manually set the cost and other stuff, so this might be necessary to be done by a user for the algorithm to work.","closed_by":{"login":"kyr-pol","id":17572944,"node_id":"MDQ6VXNlcjE3NTcyOTQ0","avatar_url":"https://avatars.githubusercontent.com/u/17572944?v=4","gravatar_id":"","url":"https://api.github.com/users/kyr-pol","html_url":"https://github.com/kyr-pol","followers_url":"https://api.github.com/users/kyr-pol/followers","following_url":"https://api.github.com/users/kyr-pol/following{/other_user}","gists_url":"https://api.github.com/users/kyr-pol/gists{/gist_id}","starred_url":"https://api.github.com/users/kyr-pol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kyr-pol/subscriptions","organizations_url":"https://api.github.com/users/kyr-pol/orgs","repos_url":"https://api.github.com/users/kyr-pol/repos","events_url":"https://api.github.com/users/kyr-pol/events{/privacy}","received_events_url":"https://api.github.com/users/kyr-pol/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/nrontsis/PILCO/issues/7/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/nrontsis/PILCO/issues/7/timeline","performed_via_github_app":null,"state_reason":"completed"}