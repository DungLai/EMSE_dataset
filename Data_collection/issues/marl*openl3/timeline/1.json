[{"url":"https://api.github.com/repos/marl/openl3/issues/comments/434930524","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-434930524","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":434930524,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDkzMDUyNA==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T04:55:55Z","updated_at":"2018-11-01T04:57:02Z","author_association":"COLLABORATOR","body":"To start the discussion for the API design here's some initial thoughts. I'll just be focusing on the key things for now.\r\n\r\n- openl3/audio/core.py\r\n    - build_and_load_model(input_repr, content_type, embedding_type)\r\n    - get_embedding(audio, sr, input_repr=\"mel256\", content_type=\"music\", embedding_size=\"large\", center=True, hop_size=0.1, verbose=1)\r\n    - process_file(filepath, output=None, input_repr=\"mel256\", content_type=\"music\", embedding_size=\"large\", center=True, hop_size=0.1, verbose=True)\r\n    - get_output_path(filepath, suffix, output_dir)\r\n\r\n- openl3/audio/models.py\r\n    - load_embedding(input_repr, content_type, embedding_size)\r\n    - get_embedding_path(input_repr, content_type, embedding_size)\r\n    - _construct_linear_audio_network()\r\n    - _construct_mel128_audio_network()\r\n    - _construct_mel256_audio_network()\r\n\r\ninput_repr: \"linear\", \"mel128\", or \"mel256\"\r\ncontent_type: \"music\" or \"env\"\r\nembedding_size: \"large\" or \"small\"\r\n\r\nI started keeping fairly close to crepe's API. Let me know your thoughts.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/434930524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435087396","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435087396","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435087396,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTA4NzM5Ng==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T15:54:15Z","updated_at":"2018-11-01T15:55:02Z","author_association":"COLLABORATOR","body":"I'm not sure we need to separate different aspects of the model into separate parameters i.e. `input_repr`, `content_type` and `embedding_type` (the latter also is way too ambiguous). \r\n\r\nSince we only have 6 models, I'd consider defining a fixed set of 6 strings to represent each (e.g. based the ones proposed in #4). Each model string identifies it uniquely, and the user need only specify one string to define exactly which model to use (e.g. `openl3_mel128_music`).\r\n\r\nFor the embedding size, I'm not a fan of \"big\" and \"small\" because those are ambiguous, and I would favor being explicit about the dimensions, e.g. 6144 (which could the default) and 512. We can check in the function if the provided value is supported and throw an error if not. This gives us the flexibility to support other (potentially any valid) output dimensionalities in the future.\r\n\r\nthoughts?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435087396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435096421","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435096421","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435096421,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTA5NjQyMQ==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T16:20:42Z","updated_at":"2018-11-01T16:20:42Z","author_association":"COLLABORATOR","body":"That's a fair point. Erring towards simplicity seems like a good idea.\r\n\r\nI think I meant `embedding_size` instead of `embedding_type`. But that brings up a question of how we want to deal with different pool sizes in terms of how the models are loaded. Since different pool sizes would result in separate models, then we could either load them separately. Alternatively we could also implement the pooling in numpy so we just have to load one model. But maybe we can shelf this discussion since it doesn't affect the API.\r\n\r\nRegarding the embedding size, I like user friendly strings, but it does engineer us into a corner (regarding naming conventions, which as you mentioned are ambiguous/subjective). Overall, I'm fine with making it explicit. ","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435096421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435117348","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435117348","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435117348,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTExNzM0OA==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T17:23:46Z","updated_at":"2018-11-01T17:23:46Z","author_association":"COLLABORATOR","body":"I'd argue \"big\" and \"small\" aren't user friendly (how big is big? how small is small?) - but that's secondary to the lack of flexibility it imposes, which is the main reason for preferring an explicit embedding size argument.\r\n\r\nThe point about how to do the pooling is an important one - it seems highly inefficient to require a separate pre-trained model per pooling size, given that the rest of the model is the same and the pooling can be implemented in numpy. I think I like that option better - that way there will only ever be 6 model files, and pooling is maximally flexible and will be easy to support different embedding sizes in the future.\r\n\r\nUnless there's a good reason not to, I'd go with numpy pooling then.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435117348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435128115","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435128115","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435128115,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTEyODExNQ==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T17:55:50Z","updated_at":"2018-11-01T17:55:50Z","author_association":"COLLABORATOR","body":"Yeah, I agree that \"big\" and \"small\" aren't user friendly. I was more just talking about descriptive names, if it makes sense. I was taking inspiration from the model names in [crepe](https://github.com/marl/crepe/blob/master/crepe/core.py#L12). But yes, it does impose constraints on adding embedding sizes since we'd have to come up with a naming convention that both is clear, and is amenable to adding an arbitrary number of embedding sizes.\r\n\r\nOkay great, let's go with numpy pooling. The additional benefit would be that it could be possible to compute embeddings of different sizes without having to do multiple forward passes through the network.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435128115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435163003","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435163003","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435163003,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTE2MzAwMw==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T19:45:48Z","updated_at":"2018-11-01T19:45:48Z","author_association":"COLLABORATOR","body":"> Okay great, let's go with numpy pooling. The additional benefit would be that it could be possible to compute embeddings of different sizes without having to do multiple forward passes through the network.\r\n\r\n👍","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435163003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435224077","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435224077","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435224077,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTIyNDA3Nw==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-01T23:45:31Z","updated_at":"2018-11-01T23:45:31Z","author_association":"COLLABORATOR","body":"Updated API:\r\n\r\n- openl3/audio/core.py\r\n    - build_and_load_model(input_repr, content_type, embedding_size)\r\n    - get_embedding(audio, sr, input_repr=\"mel256\", content_type=\"music\", embedding_size=6144, center=True, hop_size=0.1, verbose=1)\r\n    - process_file(filepath, output=None, input_repr=\"mel256\", content_type=\"music\", embedding_size=6144, center=True, hop_size=0.1, verbose=True)\r\n    - get_output_path(filepath, suffix, output_dir)\r\n\r\n- openl3/audio/models.py\r\n    - load_embedding(input_repr, content_type, embedding_size)\r\n    - get_embedding_path(input_repr, content_type, embedding_size)\r\n    - _construct_linear_audio_network()\r\n    - _construct_mel128_audio_network()\r\n    - _construct_mel256_audio_network()\r\n\r\ninput_repr: \"linear\", \"mel128\", or \"mel256\"\r\ncontent_type: \"music\" or \"env\"\r\nembedding_size: 6144 or 512\r\n\r\nAny thoughts or should we proceed with this?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435224077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435598713","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435598713","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435598713,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTU5ODcxMw==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2018-11-03T15:59:45Z","updated_at":"2018-11-03T15:59:45Z","author_association":"COLLABORATOR","body":"What's the purpose of having both `core.build_and_load_model` and `models.load_embedding` ?\r\n\r\nAlso, we should define the outputs of each function as part of the API definition.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435598713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435624969","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435624969","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435624969,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTYyNDk2OQ==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-03T22:12:33Z","updated_at":"2018-11-03T22:12:33Z","author_association":"COLLABORATOR","body":"Ah you're right, we don't need both.\r\n\r\nA more detailed outline:\r\n\r\n- openl3/audio/core.py\r\n    - get_embedding(audio, sr, input_repr=\"mel256\", content_type=\"music\", embedding_size=6144, center=True, hop_size=0.1, verbose=1)\r\n        - Computes and returns L3 embedding for given audio data\r\n        - Inputs\r\n            - audio: np.ndarray; audio array\r\n            - sr: int; sampling rate, if not 48000, will be resampled\r\n            - input_repr: \"linear\", \"mel128\", or \"mel256\"; spectrogram representation used for model\r\n            - content_type: \"music\" or \"env\"; type of content used to train embedding\r\n            - embedding_size: 6144 or 512; embedding dimensionality\r\n            - center: bool; if True, pads beginning of signal so timestamps corresponds to center of window\r\n            - hop_size: float; hop size in seconds\r\n            - verbose: 1 or 0; Keras verbosity\r\n        - Outputs\r\n            - embedding: np.array\r\n            - timestamps: np.array\r\n    - process_file(filepath, output_filepath=None, input_repr=\"mel256\", content_type=\"music\", embedding_size=6144, center=True, hop_size=0.1, verbose=True)\r\n        - Computes and saves L3 embedding for given audio file\r\n        - Inputs\r\n            - filepath: str; path to audio file\r\n            - output_filepath: str or None; path of output embedding, if None saves in same directory using the same file basename\r\n            - input_repr: \"linear\", \"mel128\", or \"mel256\"; spectrogram representation used for model\r\n            - content_type: \"music\" or \"env\"; type of content used to train embedding\r\n            - embedding_size: 6144 or 512; embedding dimensionality\r\n            - center: bool; if True, pads beginning of signal so timestamps corresponds to center of window\r\n            - hop_size: float; hop size in seconds\r\n            - verbose: bool; If True, Keras will be verbose\r\n    - get_output_path(filepath, suffix, output_dir)\r\n        - Get output path using the given output directory, the basename of the given file, and appending the given suffix\r\n        - Inputs\r\n            - filepath: str; path to audio file\r\n            - suffix: str; string to append to filename (including extension)\r\n            - output: str; path to directory where file will be saved\r\n        - Outputs\r\n            - output_path: str; path to output file\r\n\r\n- openl3/audio/models.py\r\n    - get_embedding_model(input_repr, content_type, embedding_size)\r\n        - Returns a model with the given characteristics. Loads the model if the model has not been loaded yet.\r\n        - Inputs\r\n            - input_repr: \"linear\", \"mel128\", or \"mel256\"; spectrogram representation used for model\r\n            - content_type: \"music\" or \"env\"; type of content used to train embedding\r\n            - embedding_size: 6144 or 512; embedding dimensionality\r\n        - Outputs\r\n            - model: keras.models.Model; model object\r\n    - get_embedding_model_path(input_repr, content_type, embedding_size)\r\n        - Returns the local path to the model weights file for the model with the given characteristics\r\n        - Inputs\r\n            - input_repr: \"linear\", \"mel128\", or \"mel256\"; spectrogram representation used for model\r\n            - content_type: \"music\" or \"env\"; type of content used to train embedding\r\n            - embedding_size: 6144 or 512; embedding dimensionality\r\n        - Outputs\r\n            - model_path: str; path to embedding model weights\r\n\r\n    - _construct_linear_audio_network()\r\n        - Returns an uninitialized model object for a network with a linear spectrogram input (With 257 frequency bins)\r\n        - Outputs:\r\n            - model: keras.models.Model; model object\r\n    - _construct_mel128_audio_network()\r\n        - Returns an uninitialized model object for a network with a Mel spectrogram input (with 128 frequency bins)\r\n        - Outputs:\r\n            - model: keras.models.Model; model object\r\n    - _construct_mel256_audio_network()\r\n        - Returns an uninitialized model object for a network with a Mel spectrogram input (with 256 frequency bins)\r\n        - Outputs:\r\n            - model: keras.models.Model; model object","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435624969/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435625100","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435625100","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435625100,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTYyNTEwMA==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-03T22:14:45Z","updated_at":"2018-11-03T22:14:45Z","author_association":"COLLABORATOR","body":"Should we have a function in the library for processing a directory or is that unnecessary? We will want that behavior for the CLI (for which I'll propose shortly), so we could just include it in the API. But maybe it's something that would be better just being left to users to implement for their own scripts.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435625100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435625683","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435625683","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435625683,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTYyNTY4Mw==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-03T22:25:38Z","updated_at":"2018-11-03T22:25:38Z","author_association":"COLLABORATOR","body":"Proposed CLI usage:\r\n\r\n- Positional Args:\r\n    - input: str; path or paths to files to process, or path to a directory of files to process (but not recursively?)\r\n\r\n- Optional Args:\r\n    - --output/-o: str; directory to save output files (should we create the directory if it doesn't already exist?)\r\n    - --input-repr/-i: \"linear\", \"mel128\", or \"mel256\"; Model input representation. Default \"mel256\"\r\n    - --content-type/-c: \"music\" or \"env\"; Content type used to train model. Default \"music\"\r\n    - --embedding-size/-s: 6144 or 512; Default 6144\r\n    - --no-centering/-n: Do not pad signal, timestamps correspond to beginning of each analysis window\r\n    - --hop-size/-h: Hop size in seconds for processing audio files\r\n    - --quiet/-q: Suppress all non-error printouts\r\n","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435625683/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435630775","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435630775","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435630775,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTYzMDc3NQ==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2018-11-04T00:05:20Z","updated_at":"2018-11-04T00:05:20Z","author_association":"COLLABORATOR","body":"> Should we have a function in the library for processing a directory or is that unnecessary? We will want that behavior for the CLI (for which I'll propose shortly), so we could just include it in the API. But maybe it's something that would be better just being left to users to implement for their own scripts.\r\n\r\nI don't think we need such a function for the python API (people can easily implement themselves), only for the CLI.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435630775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435630820","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435630820","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435630820,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTYzMDgyMA==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2018-11-04T00:06:15Z","updated_at":"2018-11-04T00:06:15Z","author_association":"COLLABORATOR","body":"The proposed API and CLI look good to me!","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435630820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435633639","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435633639","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435633639,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTYzMzYzOQ==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-04T01:13:05Z","updated_at":"2018-11-04T01:13:05Z","author_association":"COLLABORATOR","body":"Two points I want to address (which maybe are not as important):\r\n\r\n- Should we create output directories for the user if they don't exist? I usually prefer to create directories for users out of convenience, but I'm not sure if there's a general consensus for whether this should be done. I guess out of simplicity, we should just let the user worry about it but I want to get your opinion.\r\n- Should we allow users to recursively process audio files? This could be convenient, but opens up a can of worms regarding how we handle the different use cases. e.g. when recursively processing files but saving to a given output directory, should we replicate the directory structure of the audio directory or should we put all of the files in one directory (and if so what is the naming convention)? It's not super unreasonable but might add some potentially unnecessary complexity.\r\n- Should we allow for a text file of paths for the input? \r\n\r\nRegarding the latter two points, I lean towards not supporting that just because it makes things very slightly more complicated. If people end up really wanting it, it's something we can add in later.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435633639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435633912","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435633912","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435633912,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTYzMzkxMg==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2018-11-04T01:19:23Z","updated_at":"2018-11-04T01:19:23Z","author_association":"COLLABORATOR","body":"> Should we create output directories for the user if they don't exist? I usually prefer to create directories for users out of convenience, but I'm not sure if there's a general consensus for whether this should be done. I guess out of simplicity, we should just let the user worry about it but I want to get your opinion.\r\n\r\nI think it's reasonable for us to create the immediate parent directory, and assume the rest of the path exists. That is, if the user specifies an output folder as `/a/b/c`, we can assume `/a/b` exists (and throw an error if it does not), and create `c` if it doesn't exist. Thoughts?\r\n\r\n> Should we allow users to recursively process audio files? This could be convenient, but opens up a can of worms regarding how we handle the different use cases. e.g. when recursively processing files but saving to a given output directory, should we replicate the directory structure of the audio directory or should we put all of the files in one directory (and if so what is the naming convention)? It's not super unreasonable but might add some potentially unnecessary complexity.\r\n\r\nI don't think we need to support recursive processing. The CLI is provided for basic use only. Anything fancy should be done via the python API, and the user can handle recursion themselves.\r\n\r\n> Should we allow for a text file of paths for the input?\r\n\r\nI'm assuming this is for the CLI. Again I don't think it's necessary, for the CLI I think we need to support processing a single audio file or all audio files in a folder, anything beyond that people should code up themselves using the python API.\r\n\r\n> Regarding the latter two points, I lean towards not supporting that just because it makes things very slightly more complicated. If people end up really wanting it, it's something we can add in later.\r\n\r\nAgreed.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435633912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435634183","html_url":"https://github.com/marl/openl3/issues/1#issuecomment-435634183","issue_url":"https://api.github.com/repos/marl/openl3/issues/1","id":435634183,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTYzNDE4Mw==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2018-11-04T01:26:40Z","updated_at":"2018-11-04T01:26:40Z","author_association":"COLLABORATOR","body":"> I think it's reasonable for us to create the immediate parent directory, and assume the rest of the path exists. That is, if the user specifies an output folder as `/a/b/c`, we can assume `/a/b` exists (and throw an error if it does not), and create `c` if it doesn't exist. Thoughts?\r\n\r\nI think that sounds reasonable. It might be convenient to create all subdirectories (I usually do), but I suppose it's not too much to ask the user to do it, and forces them to make sure that whatever parent directories for their project are set up before running the script. In short, making the user take care of it may prevent a few cases where a user might shoot themselves in the foot (e.g. misspelling one of the directories), without taking away the convenience of making a new subdirectory for the embeddings.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/435634183/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"id":1955691895,"node_id":"MDExOkNsb3NlZEV2ZW50MTk1NTY5MTg5NQ==","url":"https://api.github.com/repos/marl/openl3/issues/events/1955691895","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2018-11-08T23:36:27Z","state_reason":null,"performed_via_github_app":null}]