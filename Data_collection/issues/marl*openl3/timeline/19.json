[{"id":2041414132,"node_id":"MDEyOkxhYmVsZWRFdmVudDIwNDE0MTQxMzI=","url":"https://api.github.com/repos/marl/openl3/issues/events/2041414132","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2018-12-21T18:37:44Z","label":{"name":"enhancement","color":"a2eeef"},"performed_via_github_app":null},{"actor":{"login":"idansc","id":6000968,"node_id":"MDQ6VXNlcjYwMDA5Njg=","avatar_url":"https://avatars.githubusercontent.com/u/6000968?v=4","gravatar_id":"","url":"https://api.github.com/users/idansc","html_url":"https://github.com/idansc","followers_url":"https://api.github.com/users/idansc/followers","following_url":"https://api.github.com/users/idansc/following{/other_user}","gists_url":"https://api.github.com/users/idansc/gists{/gist_id}","starred_url":"https://api.github.com/users/idansc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idansc/subscriptions","organizations_url":"https://api.github.com/users/idansc/orgs","repos_url":"https://api.github.com/users/idansc/repos","events_url":"https://api.github.com/users/idansc/events{/privacy}","received_events_url":"https://api.github.com/users/idansc/received_events","type":"User","site_admin":false},"created_at":"2019-01-06T07:50:50Z","updated_at":"2019-01-06T07:50:50Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/marl/openl3/issues/18","repository_url":"https://api.github.com/repos/marl/openl3","labels_url":"https://api.github.com/repos/marl/openl3/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/marl/openl3/issues/18/comments","events_url":"https://api.github.com/repos/marl/openl3/issues/18/events","html_url":"https://github.com/marl/openl3/issues/18","id":393218817,"node_id":"MDU6SXNzdWUzOTMyMTg4MTc=","number":18,"title":"What is missing for Image embedding?","user":{"login":"idansc","id":6000968,"node_id":"MDQ6VXNlcjYwMDA5Njg=","avatar_url":"https://avatars.githubusercontent.com/u/6000968?v=4","gravatar_id":"","url":"https://api.github.com/users/idansc","html_url":"https://github.com/idansc","followers_url":"https://api.github.com/users/idansc/followers","following_url":"https://api.github.com/users/idansc/following{/other_user}","gists_url":"https://api.github.com/users/idansc/gists{/gist_id}","starred_url":"https://api.github.com/users/idansc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/idansc/subscriptions","organizations_url":"https://api.github.com/users/idansc/orgs","repos_url":"https://api.github.com/users/idansc/repos","events_url":"https://api.github.com/users/idansc/events{/privacy}","received_events_url":"https://api.github.com/users/idansc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-12-20T21:30:31Z","updated_at":"2019-01-06T07:50:50Z","closed_at":"2019-01-06T07:50:50Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":153459506,"node_id":"MDEwOlJlcG9zaXRvcnkxNTM0NTk1MDY=","name":"openl3","full_name":"marl/openl3","private":false,"owner":{"login":"marl","id":9364509,"node_id":"MDEyOk9yZ2FuaXphdGlvbjkzNjQ1MDk=","avatar_url":"https://avatars.githubusercontent.com/u/9364509?v=4","gravatar_id":"","url":"https://api.github.com/users/marl","html_url":"https://github.com/marl","followers_url":"https://api.github.com/users/marl/followers","following_url":"https://api.github.com/users/marl/following{/other_user}","gists_url":"https://api.github.com/users/marl/gists{/gist_id}","starred_url":"https://api.github.com/users/marl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marl/subscriptions","organizations_url":"https://api.github.com/users/marl/orgs","repos_url":"https://api.github.com/users/marl/repos","events_url":"https://api.github.com/users/marl/events{/privacy}","received_events_url":"https://api.github.com/users/marl/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/marl/openl3","description":"OpenL3: Open-source deep audio and image embeddings","fork":false,"url":"https://api.github.com/repos/marl/openl3","forks_url":"https://api.github.com/repos/marl/openl3/forks","keys_url":"https://api.github.com/repos/marl/openl3/keys{/key_id}","collaborators_url":"https://api.github.com/repos/marl/openl3/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/marl/openl3/teams","hooks_url":"https://api.github.com/repos/marl/openl3/hooks","issue_events_url":"https://api.github.com/repos/marl/openl3/issues/events{/number}","events_url":"https://api.github.com/repos/marl/openl3/events","assignees_url":"https://api.github.com/repos/marl/openl3/assignees{/user}","branches_url":"https://api.github.com/repos/marl/openl3/branches{/branch}","tags_url":"https://api.github.com/repos/marl/openl3/tags","blobs_url":"https://api.github.com/repos/marl/openl3/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/marl/openl3/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/marl/openl3/git/refs{/sha}","trees_url":"https://api.github.com/repos/marl/openl3/git/trees{/sha}","statuses_url":"https://api.github.com/repos/marl/openl3/statuses/{sha}","languages_url":"https://api.github.com/repos/marl/openl3/languages","stargazers_url":"https://api.github.com/repos/marl/openl3/stargazers","contributors_url":"https://api.github.com/repos/marl/openl3/contributors","subscribers_url":"https://api.github.com/repos/marl/openl3/subscribers","subscription_url":"https://api.github.com/repos/marl/openl3/subscription","commits_url":"https://api.github.com/repos/marl/openl3/commits{/sha}","git_commits_url":"https://api.github.com/repos/marl/openl3/git/commits{/sha}","comments_url":"https://api.github.com/repos/marl/openl3/comments{/number}","issue_comment_url":"https://api.github.com/repos/marl/openl3/issues/comments{/number}","contents_url":"https://api.github.com/repos/marl/openl3/contents/{+path}","compare_url":"https://api.github.com/repos/marl/openl3/compare/{base}...{head}","merges_url":"https://api.github.com/repos/marl/openl3/merges","archive_url":"https://api.github.com/repos/marl/openl3/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/marl/openl3/downloads","issues_url":"https://api.github.com/repos/marl/openl3/issues{/number}","pulls_url":"https://api.github.com/repos/marl/openl3/pulls{/number}","milestones_url":"https://api.github.com/repos/marl/openl3/milestones{/number}","notifications_url":"https://api.github.com/repos/marl/openl3/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/marl/openl3/labels{/name}","releases_url":"https://api.github.com/repos/marl/openl3/releases{/id}","deployments_url":"https://api.github.com/repos/marl/openl3/deployments","created_at":"2018-10-17T13:14:26Z","updated_at":"2023-01-11T16:56:15Z","pushed_at":"2023-01-17T21:27:48Z","git_url":"git://github.com/marl/openl3.git","ssh_url":"git@github.com:marl/openl3.git","clone_url":"https://github.com/marl/openl3.git","svn_url":"https://github.com/marl/openl3","homepage":"","size":720501,"stargazers_count":334,"watchers_count":334,"language":"Jupyter Notebook","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":51,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":26,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["audio","deep-learning","embedding","embedding-models","image","image-embeddings","machine-listening"],"visibility":"public","forks":51,"open_issues":26,"watchers":334,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"It seems like the rep includes a trained parameters for the image model. Does the missing part is API implementation, or the parameters are wrong?\r\nThanks","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/18/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/marl/openl3/issues/18/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/492453009","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-492453009","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":492453009,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MjQ1MzAwOQ==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-05-14T23:57:06Z","updated_at":"2019-05-14T23:57:06Z","author_association":"COLLABORATOR","body":"Perhaps it’s time to revisit this (post icassp)?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/492453009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497457369","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497457369","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497457369,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ1NzM2OQ==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-05-30T19:36:36Z","updated_at":"2019-05-30T19:36:36Z","author_association":"COLLABORATOR","body":"Yes.\r\n\r\nHere are my thoughts for how we could address this without significant change to the API. Basically, for all of the functions we'd add a `modality` kwarg.\r\n\r\n```\r\nopenl3.core.get_embedding(audio, sr, modality='audio', input_repr='mel256', content_type='music', embedding_size=6144, center=True, hop_size=0.1, verbose=1)\r\nopenl3.core.process_file(filepath, output_dir=None, suffix=None, , modality='audio', input_repr='mel256', content_type='music', embedding_size=6144, center=True, hop_size=0.1, verbose=True)\r\nopenl3.models.get_embedding_model(input_repr, content_type, embedding_size, modality='audio')\r\nopenl3.models.get_embedding_model_path(input_repr, content_type, modality='audio')\r\n```\r\n\r\nThis makes it backwards compatible while allowing for the image embeddings to be extracted. My fear is that adding `*_image_*` versions of functions would crowd the API and also make the naming convention inconsistent since the audio things wouldn't be named `*_audio_*`. We'd have to specify that things like hop size would be ignored. And we'd have to be clear about that `input_repr` (for the spectrogram) still affects the image embedding. Additionally, we'd have to support 8192 embedding size for images (that's what's used in the original L3 paper). We'll have to add checks in various places to make sure that embedding sizes > 512 correspond to the correct modality (i.e. 8192 -> image, 6144 -> audio).\r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497457369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497512787","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497512787","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497512787,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUxMjc4Nw==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-05-30T22:49:03Z","updated_at":"2019-05-30T22:49:03Z","author_association":"COLLABORATOR","body":"I agree this would be the most backwards compatible option, but I'm not convinced it's better than breaking the current API in favor of transitioning to separate functions for audio/image. My concern with maintaining the current API is that it can create a lot of ambiguity as to which embedding is being extracted, and having shared parameters but with different allowed values only makes things worse.\r\n\r\nThe reality is that many users don't read the docs and just explore the API via trial/error, and my intuition is that having separate `get_audio_embedding` and `get_image_embedding` functions (etc.) will lead to an API that's easier to understand, safer in terms of avoiding unexpected behavior, and cleaner to e.g. document and unit test.\r\n\r\nThe major downside to this is that we break backwards compatibility, but that's what version control is for :) We can just make a new release (we can even bump to 1.0.0 if we want to strictly follow the rules of semantic versioning), and there shouldn't be too much confusion. Our user base is still relatively small, so now's a good time to make breaking changes. I'm not too worried about the API being cluttered, it's 8 function calls instead of 4 which is still tiny, and if every pair of functions is distinguished by having `audio` or `image` in the filename I think it's pretty self-explanatory.\r\n\r\n...unless we want to have built in support for processing video directly (and returning both the audio and image embeddings from a video file). This could be supported e.g. by a 3rd family of function calls for `video`, e.g. `get_video_embedding` that takes in a video file and return both audio and image embeddings. My inclination is to leave that outside the scope of OpenL3, at least for now.\r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497512787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497843230","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497843230","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497843230,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg0MzIzMA==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T20:04:57Z","updated_at":"2019-05-31T20:04:57Z","author_association":"COLLABORATOR","body":"You raise a good point. Maybe backwards compatibility isn't a very important consideration at this point. Sure, let's refactor under a new v1.0.0 release with the separate `*_audio_*` and `*_video_*` functions.\r\n\r\nI guess with a new v1.0.0 release in mind, we should consider any other possible API changes we might want to include. Maybe we should include the more flexible pooling size interface in @bensteers's PR. I've received a few questions about including the whole AVC model. Though I'm not super convinced if this something we should worry about right now.\r\n\r\nRegarding video, this would be a nice feature to have I think. If we're going to have a 1.0.0 release I think this would be a good thing to include. We can reuse some of the `l3embedding` code using `skvideo` for this.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497843230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"id":2382021047,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjM4MjAyMTA0Nw==","url":"https://api.github.com/repos/marl/openl3/issues/events/2382021047","actor":{"login":"beasteers","id":6741720,"node_id":"MDQ6VXNlcjY3NDE3MjA=","avatar_url":"https://avatars.githubusercontent.com/u/6741720?v=4","gravatar_id":"","url":"https://api.github.com/users/beasteers","html_url":"https://github.com/beasteers","followers_url":"https://api.github.com/users/beasteers/followers","following_url":"https://api.github.com/users/beasteers/following{/other_user}","gists_url":"https://api.github.com/users/beasteers/gists{/gist_id}","starred_url":"https://api.github.com/users/beasteers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beasteers/subscriptions","organizations_url":"https://api.github.com/users/beasteers/orgs","repos_url":"https://api.github.com/users/beasteers/repos","events_url":"https://api.github.com/users/beasteers/events{/privacy}","received_events_url":"https://api.github.com/users/beasteers/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-05-31T20:04:57Z","performed_via_github_app":null},{"id":2382021048,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDIzODIwMjEwNDg=","url":"https://api.github.com/repos/marl/openl3/issues/events/2382021048","actor":{"login":"beasteers","id":6741720,"node_id":"MDQ6VXNlcjY3NDE3MjA=","avatar_url":"https://avatars.githubusercontent.com/u/6741720?v=4","gravatar_id":"","url":"https://api.github.com/users/beasteers","html_url":"https://github.com/beasteers","followers_url":"https://api.github.com/users/beasteers/followers","following_url":"https://api.github.com/users/beasteers/following{/other_user}","gists_url":"https://api.github.com/users/beasteers/gists{/gist_id}","starred_url":"https://api.github.com/users/beasteers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beasteers/subscriptions","organizations_url":"https://api.github.com/users/beasteers/orgs","repos_url":"https://api.github.com/users/beasteers/repos","events_url":"https://api.github.com/users/beasteers/events{/privacy}","received_events_url":"https://api.github.com/users/beasteers/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-05-31T20:04:58Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497851819","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497851819","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497851819,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg1MTgxOQ==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T20:36:10Z","updated_at":"2019-05-31T20:36:10Z","author_association":"COLLABORATOR","body":"OK, sounds like we're in agreement about revamping the API for a 1.0.0 release.\r\n\r\nI think we should spend a moment on nomenclature, especially if we want to support audio, video, and joint audio-visual processing.\r\n\r\nFor audio-specific functions, I think it's a no brainer, and the `_audio_` suffix is a good option:\r\n* `get_audio_embedding`\r\n* `process_audio_file`\r\n* `get_audio_embedding_model` (should we consider renaming to `load_audio_embedding_model`)?\r\n\r\nIt becomes trickier for the visual frame embeddings: we could use either `_image_` or `_video_`. On the one hand, I think `_video_` would be preferable because the literature shows that image embeddings (trained on images) don't generalize well to video frames. On the other hand, it peeves me that the vision community uses the term \"video\" to mean \"sequence of visual frames\", ignoring the fact that there's (usually) an audio track as well. But maybe it's a lost battle...?\r\n\r\nSo if we ignore my beef, we could use `_audio_` and `_video_`. If we want to make a point, we could use `_audio_` and `_visual_`.\r\n\r\nThe final question is how to name methods that extract both from a video file. If we use `_visual_`, we could have `_audio_`, `_visual_` and `_video_` (the latter being for joint processing). If, on the other hand, we use `_audio_` and `_video_` (for audio and frames), then we need a term for the joint processing... for example, `_audiovideo_`, `_audiovisual_`, or something along these lines.\r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497851819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497859712","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497859712","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497859712,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg1OTcxMg==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T21:04:34Z","updated_at":"2019-05-31T21:04:34Z","author_association":"COLLABORATOR","body":"I'm on board changing `get_audio_embedding_model` to `load_audio_embedding_model`.\r\n\r\nI'm more on board with using `_image_` since it's an image embedding, not a visual sequence (or \"video\" minus the the audio) embedding. And that allows us to reserve `_video_` for audio/visual. I guess I question that comes to mind is that do we only need a `process_video` method? For processing videos loaded in memory, it may be sufficient to have the user just make a call to `get_audio_embedding` and `get_image_embedding`.\r\n\r\nThoughts?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497859712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497878439","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497878439","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497878439,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg3ODQzOQ==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T22:24:04Z","updated_at":"2019-05-31T22:24:04Z","author_association":"COLLABORATOR","body":"> I'm on board changing get_audio_embedding_model to load_audio_embedding_model.\r\n\r\nok cool, I think it'll be clearer and also cleaner to have only 1 method start with get, especially once we have 3 copies of each method.\r\n\r\n> I'm more on board with using _image_ since it's an image embedding, not a visual sequence (or \"video\" minus the the audio) embedding. And that allows us to reserve _video_ for audio/visual.\r\n\r\nSo, in principle I agree, but... there's a difference between an image embedding (learned on images, e.g. ImageNet) and a video-frame embedding (learned from video frames). The literature suggests these aren't the same and don't necessary generalize well from one to the other. So the problem with using `_image_` is that it could imply that this is an image embedding, when it's in fact a video-frame embedding. I'm not sure what a good solution to this issue is... I'll ask around here see if people have any thoughts.\r\n\r\n> I guess I question that comes to mind is that do we only need a process_video method? For processing videos loaded in memory, it may be sufficient to have the user just make a call to get_audio_embedding and get_image_embedding.\r\n\r\nFor API consistency I'd be in favor of implementing all 4 methods for video, even if some of them just end up being wrappers around get_audio and get_image under the hood. I think it's cleaner and more consistent that way (and probably more streamlined for those interested in extracting both embeddings).","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497878439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497878988","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497878988","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497878988,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg3ODk4OA==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T22:27:05Z","updated_at":"2019-05-31T22:27:05Z","author_association":"COLLABORATOR","body":"Okay, one more question. For processing videos, do we want an option to have a different hop size for the audio than the \"hop size\" of the images (effectively the framerate)?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497878988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497881841","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497881841","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497881841,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg4MTg0MQ==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T22:43:32Z","updated_at":"2019-05-31T22:43:32Z","author_association":"COLLABORATOR","body":"Hmm without actually asking people, a priori my inclination is not to support different hop sizes for processing videos. I.e., if you're processing a video, you'll get time-aligned audio/video embeddings controlled via a single hop size parameter. If you want separate hop size then it makes sense to require the user to use the separate `get_audio` and `get_image` (<--- or whatever we end up calling it).","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497881841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497883207","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497883207","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497883207,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg4MzIwNw==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T22:51:31Z","updated_at":"2019-05-31T22:51:31Z","author_association":"COLLABORATOR","body":"Also, if we're doing a major revision, would it be a good moment to consider #22 ?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497883207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497884369","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497884369","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497884369,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg4NDM2OQ==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T22:58:04Z","updated_at":"2019-05-31T22:58:04Z","author_association":"COLLABORATOR","body":"I think we can still forgo an OOP interface before getting more feedback from users.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497884369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497888350","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497888350","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497888350,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg4ODM1MA==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T23:23:00Z","updated_at":"2019-05-31T23:23:00Z","author_association":"COLLABORATOR","body":"> I think we can still forgo an OOP interface before getting more feedback from users.\r\n\r\nSure, sounds reasonable to me.\r\n\r\nI've asked around about naming. People responded that `get_image_embedding` would be OK, though they expressed preference for `get_visual_frame_embedding` or `get_vframe_embedding` (the term \"vframes\" [is used in ffmpeg for video frames](https://ffmpeg.org/ffmpeg.html#Video-Options)).","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497888350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497888542","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-497888542","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":497888542,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg4ODU0Mg==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-05-31T23:24:15Z","updated_at":"2019-05-31T23:24:15Z","author_association":"COLLABORATOR","body":"Another comment was that we might want to avoid `get_video_embedding` altogether because the embedding is only spatial (i.e. processes a single frame), rather than bien spatio-temporal (processing a tensor of video frames) which is what they'd expect from a video embedding","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/497888542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/498368470","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-498368470","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":498368470,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODM2ODQ3MA==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-06-03T18:17:16Z","updated_at":"2019-06-03T18:17:16Z","author_association":"COLLABORATOR","body":"Something else to consider is a batch processing mode. i.e. making more efficient use of the GPU by predicting multiple files at once. I'm putting together something like this for BirdVoxClassify, so I can adapt it for openl3.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/498368470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/500680353","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-500680353","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":500680353,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMDY4MDM1Mw==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-06-11T04:16:44Z","updated_at":"2019-06-11T04:16:44Z","author_association":"COLLABORATOR","body":"> Something else to consider is a batch processing mode.\r\n\r\nThat seems like a different issue though, right? Worth including for a major revision, but perhaps we should open a new issue for this.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/500680353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/502933796","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-502933796","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":502933796,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjkzMzc5Ng==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-06-18T03:43:34Z","updated_at":"2019-06-18T03:43:34Z","author_association":"COLLABORATOR","body":"> > Something else to consider is a batch processing mode.\r\n> \r\n> That seems like a different issue though, right? Worth including for a major revision, but perhaps we should open a new issue for this.\r\n\r\nDeferred to #26 ","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/502933796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-06-19T03:05:11Z","updated_at":"2019-06-19T03:05:11Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/marl/openl3/issues/26","repository_url":"https://api.github.com/repos/marl/openl3","labels_url":"https://api.github.com/repos/marl/openl3/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/marl/openl3/issues/26/comments","events_url":"https://api.github.com/repos/marl/openl3/issues/26/events","html_url":"https://github.com/marl/openl3/issues/26","id":457244030,"node_id":"MDU6SXNzdWU0NTcyNDQwMzA=","number":26,"title":"Add batch processing mode","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2019-06-18T03:37:27Z","updated_at":"2020-01-23T19:39:31Z","closed_at":"2020-01-23T19:39:31Z","author_association":"COLLABORATOR","active_lock_reason":null,"repository":{"id":153459506,"node_id":"MDEwOlJlcG9zaXRvcnkxNTM0NTk1MDY=","name":"openl3","full_name":"marl/openl3","private":false,"owner":{"login":"marl","id":9364509,"node_id":"MDEyOk9yZ2FuaXphdGlvbjkzNjQ1MDk=","avatar_url":"https://avatars.githubusercontent.com/u/9364509?v=4","gravatar_id":"","url":"https://api.github.com/users/marl","html_url":"https://github.com/marl","followers_url":"https://api.github.com/users/marl/followers","following_url":"https://api.github.com/users/marl/following{/other_user}","gists_url":"https://api.github.com/users/marl/gists{/gist_id}","starred_url":"https://api.github.com/users/marl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marl/subscriptions","organizations_url":"https://api.github.com/users/marl/orgs","repos_url":"https://api.github.com/users/marl/repos","events_url":"https://api.github.com/users/marl/events{/privacy}","received_events_url":"https://api.github.com/users/marl/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/marl/openl3","description":"OpenL3: Open-source deep audio and image embeddings","fork":false,"url":"https://api.github.com/repos/marl/openl3","forks_url":"https://api.github.com/repos/marl/openl3/forks","keys_url":"https://api.github.com/repos/marl/openl3/keys{/key_id}","collaborators_url":"https://api.github.com/repos/marl/openl3/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/marl/openl3/teams","hooks_url":"https://api.github.com/repos/marl/openl3/hooks","issue_events_url":"https://api.github.com/repos/marl/openl3/issues/events{/number}","events_url":"https://api.github.com/repos/marl/openl3/events","assignees_url":"https://api.github.com/repos/marl/openl3/assignees{/user}","branches_url":"https://api.github.com/repos/marl/openl3/branches{/branch}","tags_url":"https://api.github.com/repos/marl/openl3/tags","blobs_url":"https://api.github.com/repos/marl/openl3/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/marl/openl3/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/marl/openl3/git/refs{/sha}","trees_url":"https://api.github.com/repos/marl/openl3/git/trees{/sha}","statuses_url":"https://api.github.com/repos/marl/openl3/statuses/{sha}","languages_url":"https://api.github.com/repos/marl/openl3/languages","stargazers_url":"https://api.github.com/repos/marl/openl3/stargazers","contributors_url":"https://api.github.com/repos/marl/openl3/contributors","subscribers_url":"https://api.github.com/repos/marl/openl3/subscribers","subscription_url":"https://api.github.com/repos/marl/openl3/subscription","commits_url":"https://api.github.com/repos/marl/openl3/commits{/sha}","git_commits_url":"https://api.github.com/repos/marl/openl3/git/commits{/sha}","comments_url":"https://api.github.com/repos/marl/openl3/comments{/number}","issue_comment_url":"https://api.github.com/repos/marl/openl3/issues/comments{/number}","contents_url":"https://api.github.com/repos/marl/openl3/contents/{+path}","compare_url":"https://api.github.com/repos/marl/openl3/compare/{base}...{head}","merges_url":"https://api.github.com/repos/marl/openl3/merges","archive_url":"https://api.github.com/repos/marl/openl3/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/marl/openl3/downloads","issues_url":"https://api.github.com/repos/marl/openl3/issues{/number}","pulls_url":"https://api.github.com/repos/marl/openl3/pulls{/number}","milestones_url":"https://api.github.com/repos/marl/openl3/milestones{/number}","notifications_url":"https://api.github.com/repos/marl/openl3/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/marl/openl3/labels{/name}","releases_url":"https://api.github.com/repos/marl/openl3/releases{/id}","deployments_url":"https://api.github.com/repos/marl/openl3/deployments","created_at":"2018-10-17T13:14:26Z","updated_at":"2023-01-11T16:56:15Z","pushed_at":"2023-01-17T21:27:48Z","git_url":"git://github.com/marl/openl3.git","ssh_url":"git@github.com:marl/openl3.git","clone_url":"https://github.com/marl/openl3.git","svn_url":"https://github.com/marl/openl3","homepage":"","size":720501,"stargazers_count":334,"watchers_count":334,"language":"Jupyter Notebook","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":51,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":26,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["audio","deep-learning","embedding","embedding-models","image","image-embeddings","machine-listening"],"visibility":"public","forks":51,"open_issues":26,"watchers":334,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"Something else to consider is a batch processing mode. i.e. making more efficient use of the GPU by predicting multiple files at once.\r\n\r\nProbably the least messy option would be to separate some of the interior code of `get_audio_embedding` for the case of audio into their own functions and make a `get_audio_embedding_batch` function that calls most of the same functions. We would also have a `process_audio_file_batch` function. \r\n\r\nI thought about changing `get_audio_embedding` so that it can either take in a single audio array, or a list of audio arrays (and probably a list of corresponding sample rates). While this might consolidate multiple usecases into one function, it'd probably get pretty messy so it's probably best we don't do this. \r\n\r\nRegarding the visual frame embedding extraction, we could ask the same question, though there might be more nuance depending on if we allow for individual images to be processed or not (I think we should). In the case of videos though, multiple frames are already being provided at once. So it raises a question (to me at least) whether we allow for `get_vframe_embedding` (as I'm currently calling it) should support both a single frame as well as multiple. This also raises the question of whether we allow for frames of multiple sizes or not.\r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/26/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/marl/openl3/issues/26/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/503671303","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-503671303","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":503671303,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzY3MTMwMw==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-06-19T18:12:27Z","updated_at":"2019-06-19T18:13:12Z","author_association":"COLLABORATOR","body":"Proposed updated API:\r\n\r\n```\r\ndef get_audio_embedding(audio, sr, model=None, input_repr=\"mel256\",\r\n                        content_type=\"music\", embedding_size=6144,\r\n                        center=True, hop_size=0.1, verbose=1):\r\n    \"\"\"\r\n    Computes and returns L3 embedding for given audio data\r\n\r\n    Parameters\r\n    ----------\r\n    audio : np.ndarray [shape=(N,) or (N,C)]\r\n        1D numpy array of audio data.\r\n    sr : int\r\n        Sampling rate, if not 48kHz will audio will be resampled.\r\n    model : keras.models.Model or None\r\n        Loaded model object. If a model is provided, then `input_repr`,\r\n        `content_type`, and `embedding_size` will be ignored.\r\n        If None is provided, the model will be loaded using\r\n        the provided values of `input_repr`, `content_type` and\r\n        `embedding_size`.\r\n    input_repr : \"linear\", \"mel128\", or \"mel256\"\r\n        Spectrogram representation used for model. Ignored if `model` is\r\n        a valid Keras model.\r\n    content_type : \"music\" or \"env\"\r\n        Type of content used to train embedding. Ignored if `model` is\r\n        a valid Keras model.\r\n    embedding_size : 6144 or 512\r\n        Embedding dimensionality. Ignored if `model` is a valid\r\n        Keras model.\r\n    center : boolean\r\n        If True, pads beginning of signal so timestamps correspond\r\n        to center of window.\r\n    hop_size : float\r\n        Hop size in seconds.\r\n    verbose : 0 or 1\r\n        Keras verbosity.\r\n\r\n    Returns\r\n    -------\r\n        embedding : np.ndarray [shape=(T, D)]\r\n            Array of embeddings for each window.\r\n        timestamps : np.ndarray [shape=(T,)]\r\n            Array of timestamps corresponding to each embedding in the output.\r\n\r\n    \"\"\"\r\n\r\ndef process_audio_file(filepath, output_dir=None, suffix=None, model=None,\r\n                       input_repr=\"mel256\", content_type=\"music\",\r\n                       embedding_size=6144, center=True, hop_size=0.1, verbose=True):\r\n    \"\"\"\r\n    Computes and saves L3 embedding for given audio file\r\n\r\n    Parameters\r\n    ----------\r\n    filepath : str\r\n        Path to WAV file to be processed.\r\n    output_dir : str or None\r\n        Path to directory for saving output files. If None, output files will\r\n        be saved to the directory containing the input file.\r\n    suffix : str or None\r\n        String to be appended to the output filename, i.e. <base filename>_<suffix>.npz.\r\n        If None, then no suffix will be added, i.e. <base filename>.npz.\r\n    model : keras.models.Model or None\r\n        Loaded model object. If a model is provided, then `input_repr`,\r\n        `content_type`, and `embedding_size` will be ignored.\r\n        If None is provided, the model will be loaded using\r\n        the provided values of `input_repr`, `content_type` and\r\n        `embedding_size`.\r\n    input_repr : \"linear\", \"mel128\", or \"mel256\"\r\n        Spectrogram representation used for model. Ignored if `model` is\r\n        a valid Keras model.\r\n    content_type : \"music\" or \"env\"\r\n        Type of content used to train embedding. Ignored if `model` is\r\n        a valid Keras model.\r\n    embedding_size : 6144 or 512\r\n        Embedding dimensionality. Ignored if `model` is a valid\r\n        Keras model.\r\n    center : boolean\r\n        If True, pads beginning of signal so timestamps correspond\r\n        to center of window.\r\n    hop_size : float\r\n        Hop size in seconds.\r\n    verbose : 0 or 1\r\n        Keras verbosity.\r\n\r\n    Returns\r\n    -------\r\n\r\n    \"\"\"\r\n\r\ndef get_vframe_embedding(image_arr, frame_rate=None, model=None,\r\n                         input_repr=\"mel256\", content_type=\"music\",\r\n                         embedding_size=8192, verbose=1):\r\n    \"\"\"\r\n    Computes and returns L3 embedding for given video frame (image) data\r\n\r\n    Parameters\r\n    ----------\r\n    image_arr : np.ndarray [shape=(H, W, C) or (N, H, W, C)]\r\n        3D or 4D numpy array of image data. If the images are not 224x224,\r\n        the images are resized so that the smallest size is 256 and then\r\n        the center 224x224 patch is extracted from the images.\r\n    frame_rate : int or None\r\n        Video frame rate (if applicable), which if provided results in\r\n        a timestamp array being returned. If None, no timestamp array is\r\n        returned.\r\n    model : keras.models.Model or None\r\n        Loaded model object. If a model is provided, then `input_repr`,\r\n        `content_type`, and `embedding_size` will be ignored.\r\n        If None is provided, the model will be loaded using\r\n        the provided values of `input_repr`, `content_type` and\r\n        `embedding_size`.\r\n    input_repr : \"linear\", \"mel128\", or \"mel256\"\r\n        Spectrogram representation used for to train audio part of audio-visual\r\n        correspondence model. Ignored if `model` is a valid Keras model.\r\n    content_type : \"music\" or \"env\"\r\n        Type of content used to train embedding. Ignored if `model` is\r\n        a valid Keras model.\r\n    embedding_size : 8192 or 512\r\n        Embedding dimensionality. Ignored if `model` is a valid\r\n        Keras model.\r\n    verbose : 0 or 1\r\n        Keras verbosity.\r\n\r\n    Returns\r\n    -------\r\n        embedding : np.ndarray [shape=(N, D)]\r\n            Array of embeddings for each frame.\r\n        timestamps : np.ndarray [shape=(N,)]\r\n            Array of timestamps for each frame. If `frame_rate` is None,\r\n            this is not returned.\r\n    \"\"\"\r\n\r\ndef process_vframe_file(filepath, output_dir=None, suffix=None, model=None,\r\n                        input_repr=\"mel256\", content_type=\"music\",\r\n                        embedding_size=8192, verbose=True):\r\n    \"\"\"\r\n    Computes and saves L3 embedding for given image file\r\n\r\n    Parameters\r\n    ----------\r\n    filepath : str\r\n        Path to image file to be processed.\r\n    output_dir : str or None\r\n        Path to directory for saving output files. If None, output files will\r\n        be saved to the directory containing the input file.\r\n    suffix : str or None\r\n        String to be appended to the output filename, i.e. <base filename>_<suffix>.npz.\r\n        If None, then no suffix will be added, i.e. <base filename>.npz.\r\n    model : keras.models.Model or None\r\n        Loaded model object. If a model is provided, then `input_repr`,\r\n        `content_type`, and `embedding_size` will be ignored.\r\n        If None is provided, the model will be loaded using\r\n        the provided values of `input_repr`, `content_type` and\r\n        `embedding_size`.\r\n    input_repr : \"linear\", \"mel128\", or \"mel256\"\r\n        Spectrogram representation used for model. Ignored if `model` is\r\n        a valid Keras model.\r\n    content_type : \"music\" or \"env\"\r\n        Type of content used to train embedding. Ignored if `model` is\r\n        a valid Keras model.\r\n    embedding_size : 8192 or 512\r\n        Embedding dimensionality. Ignored if `model` is a valid\r\n        Keras model.\r\n    center : boolean\r\n        If True, pads beginning of signal so timestamps correspond\r\n        to center of window.\r\n    hop_size : float\r\n        Hop size in seconds.\r\n    verbose : 0 or 1\r\n        Keras verbosity.\r\n\r\n    Returns\r\n    -------\r\n\r\n    \"\"\"\r\n\r\ndef process_video_file(filepath, output_dir=None, suffix=None, model=None,\r\n                        input_repr=\"mel256\", content_type=\"music\",\r\n                        audio_embedding_size=6144, audio_center=True,\r\n                        audio_hop_size=0.1, vframe_embedding_size=8192,\r\n                        verbose=True):\r\n    \"\"\"\r\n    Computes and saves L3 audio and video frame embeddings for given video file\r\n\r\n    Parameters\r\n    ----------\r\n    filepath : str\r\n        Path to WAV file to be processed.\r\n    output_dir : str or None\r\n        Path to directory for saving output files. If None, output files will\r\n        be saved to the directory containing the input file.\r\n    suffix : str or None\r\n        String to be appended to the output filename,\r\n        i.e. <base filename>_<modality>_<suffix>.npz.\r\n        If None, then no suffix will be added,\r\n        i.e. <base filename>_<modality>.npz.\r\n    model : keras.models.Model or None\r\n        Loaded model object. If a model is provided, then `input_repr`,\r\n        `content_type`, and `embedding_size` will be ignored.\r\n        If None is provided, the model will be loaded using\r\n        the provided values of `input_repr`, `content_type` and\r\n        `embedding_size`.\r\n    input_repr : \"linear\", \"mel128\", or \"mel256\"\r\n        Spectrogram representation used for audio model. Ignored if `model` is\r\n        a valid Keras model.\r\n    content_type : \"music\" or \"env\"\r\n        Type of content used to train embedding. Ignored if `model` is\r\n        a valid Keras model.\r\n    audio_embedding_size : 6144 or 512\r\n        Audio embedding dimensionality. Ignored if `model` is a valid Keras model.\r\n    audio_center : boolean\r\n        If True, pads beginning of audio signal so timestamps correspond\r\n        to center of window.\r\n    audio_hop_size : float\r\n        Hop size in seconds.\r\n    vframe_embedding_size : 8192 or 512\r\n        Video frame embedding dimensionality. Ignored if `model` is a valid Keras model.\r\n    verbose : 0 or 1\r\n        Keras verbosity.\r\n\r\n    Returns\r\n    -------\r\n\r\n    \"\"\"\r\n\r\n```\r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/503671303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504138781","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-504138781","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":504138781,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDEzODc4MQ==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T18:44:29Z","updated_at":"2019-06-20T18:45:28Z","author_association":"COLLABORATOR","body":"Generally I think this looks great. A couple of comments:\r\n\r\n1. You propose `get_vframe_embedding` and `process_vframe_file`, which I imagine is in order to be consistent with `get_audio_embedding` and `process_audio_file`. On the one hand I think it makes sense to be consistent. On the other hand, what's a \"vfame_file\"? Basically it's just an image file. Now I realize it was I who suggested the term \"vframe\" rather than \"image\" to distinguish between video frames and images. But, do you think `process_vframe_file` could be confusing? The two alternatives would be to have diverging nomenclature (`get_vframe_embedding` + `process_image_file`), or to revert back to image for both (`get_image_embedding` + `process_image_file`), but that takes us back to the term \"image\" for vframes. Maybe I'm overthinking it and people will understand `process_vframe_file` without too much trouble, though, if we do stick to this nomenclature, then I would try to be over explicit in the docstring (a la \"Computes and saves L3 embedding for given image file in a standard image format such as JPG, PNG, etc.\").\r\n\r\n2. We have `process_video_file` but no `get_video_embedding`. Do we not expect that to also be a useful function call?\r\n","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504138781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504160311","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-504160311","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":504160311,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDE2MDMxMQ==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T19:54:29Z","updated_at":"2019-06-20T19:54:29Z","author_association":"COLLABORATOR","body":">     1. You propose `get_vframe_embedding` and `process_vframe_file`, which I imagine is in order to be consistent with `get_audio_embedding` and `process_audio_file`. On the one hand I think it makes sense to be consistent. On the other hand, what's a \"vfame_file\"? Basically it's just an image file. Now I realize it was I who suggested the term \"vframe\" rather than \"image\" to distinguish between video frames and images. But, do you think `process_vframe_file` could be confusing? The two alternatives would be to have diverging nomenclature (`get_vframe_embedding` + `process_image_file`), or to revert back to image for both (`get_image_embedding` + `process_image_file`), but that takes us back to the term \"image\" for vframes. Maybe I'm overthinking it and people will understand `process_vframe_file` without too much trouble, though, if we do stick to this nomenclature, then I would try to be over explicit in the docstring (a la \"Computes and saves L3 embedding for given image file in a standard image format such as JPG, PNG, etc.\").\r\n\r\nYeah, the issue of diverging nomenclature was why I opted for `vframe` for both. However, after reviewing the downstream evaluation on the image embeddings in the L3 paper I don't necessarily think that `image` is that much of an issue considering the downstream classification was done on ImageNet. But if it would upset a lot of people for us to call it `image` then maybe diverging nomenclature wouldn't be so bad.\r\n\r\n>     2. We have `process_video_file` but no `get_video_embedding`. Do we not expect that to also be a useful function call?\r\nWhat would we expect `get_video_embedding` to return? We don't have proper `video` embeddings. If you mean just getting the embeddings for the audio and video frames in a loaded video, I don't think having two separate function calls for the audio and video frames is a big deal.\r\n","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504160311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504169070","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-504169070","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":504169070,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDE2OTA3MA==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T20:22:36Z","updated_at":"2019-06-20T20:22:36Z","author_association":"COLLABORATOR","body":"Re: 1, I'm not a big fan of `process_vframe_file` because there's no such thing. So I'd either diverge or stick to `image` for both. Which do you prefer?\r\n\r\nRe: 2, ok, fair enough.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504169070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504178472","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-504178472","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":504178472,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDE3ODQ3Mg==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T20:52:18Z","updated_at":"2019-06-20T20:52:18Z","author_association":"COLLABORATOR","body":"I'd prefer `image` for both.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504178472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504210656","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-504210656","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":504210656,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDIxMDY1Ng==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T21:42:06Z","updated_at":"2019-06-20T21:42:06Z","author_association":"COLLABORATOR","body":"Regarding videos, I've been thinking about whether we should use opencv which is maybe overkill but is the most popular library for video processing. However, in order to load audio from the videos we'll probably need to use `ffmpeg`, which is already used as a frontend for `skvideo` (which we used in the `l3embedding` experiments). Though this library isn't as widely used as opencv it would allow us to have fewer dependencies since we need `ffmpeg` anyway.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504210656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504213129","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-504213129","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":504213129,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDIxMzEyOQ==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T21:51:31Z","updated_at":"2019-06-20T21:51:31Z","author_association":"COLLABORATOR","body":"`moviepy` also looks like an option we can use for both loading video frames and audio, without having to have users install `ffmpeg`.","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504213129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504236654","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-504236654","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":504236654,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNDIzNjY1NA==","user":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false},"created_at":"2019-06-20T23:39:51Z","updated_at":"2019-06-20T23:39:51Z","author_association":"COLLABORATOR","body":"> I'd prefer image for both.\r\n\r\nOK, let's do that then.\r\n\r\nRegarding video loading, I think the lighter we can keep the repo the better. Whatever our dependencies are people will install them (or rather, pip will install them), so I don't think it matters too much if the dependency is super popular, what matters most is that it's (1) light and (2) well supported (with expectation that it'll continue to be supported long term).","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/504236654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"justinsalamon","id":3009670,"node_id":"MDQ6VXNlcjMwMDk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/3009670?v=4","gravatar_id":"","url":"https://api.github.com/users/justinsalamon","html_url":"https://github.com/justinsalamon","followers_url":"https://api.github.com/users/justinsalamon/followers","following_url":"https://api.github.com/users/justinsalamon/following{/other_user}","gists_url":"https://api.github.com/users/justinsalamon/gists{/gist_id}","starred_url":"https://api.github.com/users/justinsalamon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinsalamon/subscriptions","organizations_url":"https://api.github.com/users/justinsalamon/orgs","repos_url":"https://api.github.com/users/justinsalamon/repos","events_url":"https://api.github.com/users/justinsalamon/events{/privacy}","received_events_url":"https://api.github.com/users/justinsalamon/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/marl/openl3/issues/comments/511533514","html_url":"https://github.com/marl/openl3/issues/19#issuecomment-511533514","issue_url":"https://api.github.com/repos/marl/openl3/issues/19","id":511533514,"node_id":"MDEyOklzc3VlQ29tbWVudDUxMTUzMzUxNA==","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"created_at":"2019-07-15T19:16:57Z","updated_at":"2019-07-15T19:16:57Z","author_association":"COLLABORATOR","body":"FYI: being addressed in #29 ","reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/comments/511533514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false}}]