{"url":"https://api.github.com/repos/marl/openl3/issues/22","repository_url":"https://api.github.com/repos/marl/openl3","labels_url":"https://api.github.com/repos/marl/openl3/issues/22/labels{/name}","comments_url":"https://api.github.com/repos/marl/openl3/issues/22/comments","events_url":"https://api.github.com/repos/marl/openl3/issues/22/events","html_url":"https://github.com/marl/openl3/issues/22","id":423445773,"node_id":"MDU6SXNzdWU0MjM0NDU3NzM=","number":22,"title":"Make an object-oriented interface for embedding models","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"labels":[{"id":1094482790,"node_id":"MDU6TGFiZWwxMDk0NDgyNzkw","url":"https://api.github.com/repos/marl/openl3/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-03-20T20:00:06Z","updated_at":"2019-05-13T07:13:57Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"An object interface for extracting embeddings would make it simpler to extract multiple embeddings and would allow for the embedding model to just be loaded once instead of every time the `get_embedding` function is called.\r\n\r\nAt least to begin with, the interface could just be something like\r\n\r\n```\r\nm = EmbeddingModel(input_repr=\"mel256\", content_type=\"music\", \r\n                                    embedding_size=6144, center=True, hop_size=0.1):\r\nemb, ts = m.get_embedding(audio, sr, verbose=1)\r\nm.process_file(filepath, output_dir=None, suffix=None)\r\n```\r\n\r\nBasically, we'd just put all of the functions from https://github.com/marl/openl3/blob/master/openl3/core.py into a class.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/22/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/marl/openl3/issues/22/timeline","performed_via_github_app":null,"state_reason":null}