{"url":"https://api.github.com/repos/marl/openl3/issues/26","repository_url":"https://api.github.com/repos/marl/openl3","labels_url":"https://api.github.com/repos/marl/openl3/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/marl/openl3/issues/26/comments","events_url":"https://api.github.com/repos/marl/openl3/issues/26/events","html_url":"https://github.com/marl/openl3/issues/26","id":457244030,"node_id":"MDU6SXNzdWU0NTcyNDQwMzA=","number":26,"title":"Add batch processing mode","user":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2019-06-18T03:37:27Z","updated_at":"2020-01-23T19:39:31Z","closed_at":"2020-01-23T19:39:31Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Something else to consider is a batch processing mode. i.e. making more efficient use of the GPU by predicting multiple files at once.\r\n\r\nProbably the least messy option would be to separate some of the interior code of `get_audio_embedding` for the case of audio into their own functions and make a `get_audio_embedding_batch` function that calls most of the same functions. We would also have a `process_audio_file_batch` function. \r\n\r\nI thought about changing `get_audio_embedding` so that it can either take in a single audio array, or a list of audio arrays (and probably a list of corresponding sample rates). While this might consolidate multiple usecases into one function, it'd probably get pretty messy so it's probably best we don't do this. \r\n\r\nRegarding the visual frame embedding extraction, we could ask the same question, though there might be more nuance depending on if we allow for individual images to be processed or not (I think we should). In the case of videos though, multiple frames are already being provided at once. So it raises a question (to me at least) whether we allow for `get_vframe_embedding` (as I'm currently calling it) should support both a single frame as well as multiple. This also raises the question of whether we allow for frames of multiple sizes or not.\r\n\r\nThoughts?","closed_by":{"login":"auroracramer","id":1388668,"node_id":"MDQ6VXNlcjEzODg2Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1388668?v=4","gravatar_id":"","url":"https://api.github.com/users/auroracramer","html_url":"https://github.com/auroracramer","followers_url":"https://api.github.com/users/auroracramer/followers","following_url":"https://api.github.com/users/auroracramer/following{/other_user}","gists_url":"https://api.github.com/users/auroracramer/gists{/gist_id}","starred_url":"https://api.github.com/users/auroracramer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/auroracramer/subscriptions","organizations_url":"https://api.github.com/users/auroracramer/orgs","repos_url":"https://api.github.com/users/auroracramer/repos","events_url":"https://api.github.com/users/auroracramer/events{/privacy}","received_events_url":"https://api.github.com/users/auroracramer/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/marl/openl3/issues/26/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/marl/openl3/issues/26/timeline","performed_via_github_app":null,"state_reason":"completed"}