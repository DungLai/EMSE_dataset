{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/167","repository_url":"https://api.github.com/repos/NRCan/geo-deep-learning","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/167/labels{/name}","comments_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/167/comments","events_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/167/events","html_url":"https://github.com/NRCan/geo-deep-learning/issues/167","id":740254962,"node_id":"MDU6SXNzdWU3NDAyNTQ5NjI=","number":167,"title":"Images_to_samples: Create binary labels from multi-class label data","user":{"login":"remtav","id":34774759,"node_id":"MDQ6VXNlcjM0Nzc0NzU5","avatar_url":"https://avatars.githubusercontent.com/u/34774759?v=4","gravatar_id":"","url":"https://api.github.com/users/remtav","html_url":"https://github.com/remtav","followers_url":"https://api.github.com/users/remtav/followers","following_url":"https://api.github.com/users/remtav/following{/other_user}","gists_url":"https://api.github.com/users/remtav/gists{/gist_id}","starred_url":"https://api.github.com/users/remtav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/remtav/subscriptions","organizations_url":"https://api.github.com/users/remtav/orgs","repos_url":"https://api.github.com/users/remtav/repos","events_url":"https://api.github.com/users/remtav/events{/privacy}","received_events_url":"https://api.github.com/users/remtav/received_events","type":"User","site_admin":false},"labels":[{"id":1070498413,"node_id":"MDU6TGFiZWwxMDcwNDk4NDEz","url":"https://api.github.com/repos/NRCan/geo-deep-learning/labels/P1","name":"P1","color":"756bb1","default":false,"description":"High priority"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/milestones/12","html_url":"https://github.com/NRCan/geo-deep-learning/milestone/12","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/milestones/12/labels","id":7680216,"node_id":"MI_kwDOCNASdM4AdTDY","number":12,"title":"Training enhancements","description":"","creator":{"login":"ymoisan","id":7468595,"node_id":"MDQ6VXNlcjc0Njg1OTU=","avatar_url":"https://avatars.githubusercontent.com/u/7468595?v=4","gravatar_id":"","url":"https://api.github.com/users/ymoisan","html_url":"https://github.com/ymoisan","followers_url":"https://api.github.com/users/ymoisan/followers","following_url":"https://api.github.com/users/ymoisan/following{/other_user}","gists_url":"https://api.github.com/users/ymoisan/gists{/gist_id}","starred_url":"https://api.github.com/users/ymoisan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ymoisan/subscriptions","organizations_url":"https://api.github.com/users/ymoisan/orgs","repos_url":"https://api.github.com/users/ymoisan/repos","events_url":"https://api.github.com/users/ymoisan/events{/privacy}","received_events_url":"https://api.github.com/users/ymoisan/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":1,"state":"open","created_at":"2022-02-15T13:01:32Z","updated_at":"2022-03-01T16:48:21Z","due_on":null,"closed_at":null},"comments":5,"created_at":"2020-11-10T21:27:47Z","updated_at":"2022-09-13T13:00:48Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"# Problem\r\nTo train class-specific models, GDL cannot currently create samples with single-class labels if label data provided is multi-class.\r\n\r\n# Solution \r\nTwo approaches seem feasible to implement this missing feature. First let's look at necessary developements, common to both approaches, that would let user control this feature seemlessly:\r\n\r\n- a parameter \"hide_classes\" would be added to the \"global\" section of the config yaml\r\n- [validate_num_classes](https://github.com/NRCan/geo-deep-learning/blob/6852729d0ec03c0c2a6465b7a68039181c8bcbda/utils/verifications.py#L13) function would be adapted to take into account the ignored classes, since \"num_classes\" would most likely be smaller that the number of classes found in the geopackage.\r\n\r\n# 1. Online approach\r\n\r\n## Description \r\nDynamically zero out (i.e. set as \"background\") irrelevant class values during training without modifying hdf5 files.\r\n\r\n## Advantages\r\n- Single class vs multi-class trainings can be performed with a single set of hdf5s, making it less prone to errors if user wants to directly compare performances of single-class vs multi-class models.\r\n\r\n## Disadvantages\r\n- For certain classes, like road or vegetation extraction, the online approach combined with the way GDL uses pre-rasterized samples saved as HDF5s during training may limit the ability of models to extract features of one class *under* features of another class. For example, a waterbody covered by vegetation would not be extracted if the HDF5s initially discarded the presence of this waterbody in the process of rasterizing the geopackages;\r\n- Though zeroing out irrelevant class values is possible, GDL is not currently developped to dynamically (i.e. during training) exclude samples that have no pixels of relevant class in their label. An quick implementation of online appoach would therefore be inadequate if user wishes to exclude samples in which class of interest is not represented (i.e. containing no pixels of that class in label). **Update: [Random Weighted Sampler](https://pytorch.org/docs/stable/_modules/torch/utils/data/sampler.html#WeightedRandomSampler) is about to be added to GDL and could help balance out an umbalanced dataset using the online approach;\r\n- May add some overhead during training\r\n\r\n## Implementation\r\nThe __get_item__ method of data loader would be in charge of zeroing out irrelevant values, returning a binary label.\r\n\r\n# 2. Offline approach\r\n\r\n## Description\r\nIn images_to_samples.py, once geopackage is read and rasterized, create hdf5 samples with binary values (i.e. \"class of interest\" and \"non class of interest\"). All irrelevant class values are then zeroed out to match the value of \"non class of interest\" class. Training continues as usual\r\n\r\n## Advantages\r\n- User can resort to already implemented features (i.e. [\"class proportion\" parameter](https://github.com/NRCan/geo-deep-learning/blob/develop/conf/config_template.yaml#L52)) to filter out samples for which the label contains no values of \"class of interest\"\r\n\r\n## Disadavantages\r\n- This approach calls for a separate set of hdf5 files. This will require more disk space and cause some duplication if a single-class vs multi-class comparison is desired for the same dataset.\r\n\r\n## Implementation\r\nAfter having filtering out undesired samples (i.e. those that do not meet the class_prop threshold and min annotated percent), irrelevant class values are zeroed out before final samples is written to hdf5, in [add_to_dataset function](https://github.com/NRCan/geo-deep-learning/blob/6852729d0ec03c0c2a6465b7a68039181c8bcbda/images_to_samples.py#L129)\r\n\r\n# Dev effort estimate\r\nNecessary effort to implement either approaches ranges from 1 to 2 workdays. This dev seems fairly simple at a first glance.\r\n\r\n# Useful resources and articles \r\n## Buildings extraction\r\n- [Zorvi et al., 2020, \"Machine-learned_ Regularization and Polygonization\r\nof Building Segmentation Masks\"](https://arxiv.org/pdf/2007.12587v2.pdf)\r\n- http://cs231n.stanford.edu/reports/2017/pdfs/550.pdf\r\n## Road extraction\r\n- [Ding & Bruzzonne, 2020, \"DiResNet: Direction-aware Residual Network for\r\nRoad Extraction in VHR Remote Sensing Images\"](https://arxiv.org/pdf/2005.07232v2.pdf)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/167/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/167/timeline","performed_via_github_app":null,"state_reason":null}