{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/441","repository_url":"https://api.github.com/repos/NRCan/geo-deep-learning","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/441/labels{/name}","comments_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/441/comments","events_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/441/events","html_url":"https://github.com/NRCan/geo-deep-learning/issues/441","id":1506740606,"node_id":"I_kwDOCNASdM5Zzwl-","number":441,"title":"Bands identification: make mandatory and use stac's eo extension's common names","user":{"login":"remtav","id":34774759,"node_id":"MDQ6VXNlcjM0Nzc0NzU5","avatar_url":"https://avatars.githubusercontent.com/u/34774759?v=4","gravatar_id":"","url":"https://api.github.com/users/remtav","html_url":"https://github.com/remtav","followers_url":"https://api.github.com/users/remtav/followers","following_url":"https://api.github.com/users/remtav/following{/other_user}","gists_url":"https://api.github.com/users/remtav/gists{/gist_id}","starred_url":"https://api.github.com/users/remtav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/remtav/subscriptions","organizations_url":"https://api.github.com/users/remtav/orgs","repos_url":"https://api.github.com/users/remtav/repos","events_url":"https://api.github.com/users/remtav/events{/privacy}","received_events_url":"https://api.github.com/users/remtav/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-12-21T18:27:22Z","updated_at":"2022-12-21T18:28:28Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Currently, the dataset.bands parameter is a list as [1,2,3], [\"R\", \"G\", \"B\"] or [\"red\", \"green\", \"blue\"].\r\nHowever, if a model is trained with bands as integers (therefore this param is saved in the checkpoint to be used during inference), then during inference a stac item is used (rather than a multiband raster), a mapping must be provided for GDL to select proper bands.\r\n\r\nThe need here is to have a common language for all places where bands must be selected or ordered. This common language would be stac's eo extension's common names.\r\n\r\n(to be translated)\r\nSi un utilisateur veut entraîner avec des bands comme entier (ex.: [1,2,3]), est-ce qu'on devrait le forcer à spécifier {\"red\": 1, \"green\": 2, \"blue\": 3}?\r\nLe but de pouvoir spécifier des bandes sous forme de listes d'entier, c'est surtout de pouvoir reordonner ou sélectionner des bandes si le fichier source est multibande (i.e. on ne connaît pas les bandes qui constitue l'imagerie contrairement aux stacs ietms). Donc, le dict pourrait être une clé séparée dans la config:\r\nbands: [3,2,1] (si la source est BGR)\r\nbands_map: {1: \"red\", 2: \"green\", 3: \"blue\"}\r\nOn validerait dans ce cas, que, si \"bands\" est une liste d'entiers:\r\nbands_map n'est pas None et contient un dictionnaire\r\npour chaque entier de la liste \"bands\", il y a une clé correspondante dans le dictionnaire et la valeur pour cette clé est un common name valide\r\nvaleur min >= 1 (convention gdal commence à 1)\r\nvaleur max <= nombre de bandes dans l'image\r\n\r\npuis, ça permettrait à tous les modèles entraînés d'avoir des common name associés à leurs \"bandes\" requises. Ça permet de garder cette info à même le .ckpt. Donc:\r\n\r\nScénario 1 (très peu fréquent présentement): si on veut inférer un stac item avec ce modèle (initialement entraîné avec de l'imagerie multibande), alors on est plus certain des bandes par common names qu'il nous faut (ce qui n'est pas le cas dans la PR actuelle)\r\n\r\nScénario 2 (serait le cas avec l'imagerie aérienne en ce moment qui n'est pas dans le cube): si on veut inférer une image multibande (bandes inconnues) avec un modèle qui s'attend à des common names, il faudra accompagner l'inférence d'un paramètre qui associe chaque numéro de bande à un common name (comme bands_map, mais en inversant clés et valeurs?)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/441/timeline","performed_via_github_app":null,"state_reason":null}