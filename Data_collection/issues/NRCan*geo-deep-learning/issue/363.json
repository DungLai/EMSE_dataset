{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/363","repository_url":"https://api.github.com/repos/NRCan/geo-deep-learning","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/363/labels{/name}","comments_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/363/comments","events_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/363/events","html_url":"https://github.com/NRCan/geo-deep-learning/issues/363","id":1406204439,"node_id":"I_kwDOCNASdM5T0PoX","number":363,"title":"Competition problem: parallel inferences in production","user":{"login":"micpilon","id":46534635,"node_id":"MDQ6VXNlcjQ2NTM0NjM1","avatar_url":"https://avatars.githubusercontent.com/u/46534635?v=4","gravatar_id":"","url":"https://api.github.com/users/micpilon","html_url":"https://github.com/micpilon","followers_url":"https://api.github.com/users/micpilon/followers","following_url":"https://api.github.com/users/micpilon/following{/other_user}","gists_url":"https://api.github.com/users/micpilon/gists{/gist_id}","starred_url":"https://api.github.com/users/micpilon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/micpilon/subscriptions","organizations_url":"https://api.github.com/users/micpilon/orgs","repos_url":"https://api.github.com/users/micpilon/repos","events_url":"https://api.github.com/users/micpilon/events{/privacy}","received_events_url":"https://api.github.com/users/micpilon/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"CharlesAuthier","id":25693364,"node_id":"MDQ6VXNlcjI1NjkzMzY0","avatar_url":"https://avatars.githubusercontent.com/u/25693364?v=4","gravatar_id":"","url":"https://api.github.com/users/CharlesAuthier","html_url":"https://github.com/CharlesAuthier","followers_url":"https://api.github.com/users/CharlesAuthier/followers","following_url":"https://api.github.com/users/CharlesAuthier/following{/other_user}","gists_url":"https://api.github.com/users/CharlesAuthier/gists{/gist_id}","starred_url":"https://api.github.com/users/CharlesAuthier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CharlesAuthier/subscriptions","organizations_url":"https://api.github.com/users/CharlesAuthier/orgs","repos_url":"https://api.github.com/users/CharlesAuthier/repos","events_url":"https://api.github.com/users/CharlesAuthier/events{/privacy}","received_events_url":"https://api.github.com/users/CharlesAuthier/received_events","type":"User","site_admin":false},"assignees":[{"login":"CharlesAuthier","id":25693364,"node_id":"MDQ6VXNlcjI1NjkzMzY0","avatar_url":"https://avatars.githubusercontent.com/u/25693364?v=4","gravatar_id":"","url":"https://api.github.com/users/CharlesAuthier","html_url":"https://github.com/CharlesAuthier","followers_url":"https://api.github.com/users/CharlesAuthier/followers","following_url":"https://api.github.com/users/CharlesAuthier/following{/other_user}","gists_url":"https://api.github.com/users/CharlesAuthier/gists{/gist_id}","starred_url":"https://api.github.com/users/CharlesAuthier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CharlesAuthier/subscriptions","organizations_url":"https://api.github.com/users/CharlesAuthier/orgs","repos_url":"https://api.github.com/users/CharlesAuthier/repos","events_url":"https://api.github.com/users/CharlesAuthier/events{/privacy}","received_events_url":"https://api.github.com/users/CharlesAuthier/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-10-12T13:18:24Z","updated_at":"2022-11-21T14:11:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In the production inference process, there is a step where we check the presence or not of the asset in the data repository to avoid downloading it in HPC every time.\r\n\r\nIn the context where we use a new image that has never been loaded in HPC and we want to run all our models in parallel, this has the side effect that the first of the N models downloads the assets in the data folder as expected, but other runs detect the presence of the TIFs while they are being written in said directory. This leads to read errors in the other steps of the process while some tiles are incomplete, etc.\r\n\r\nWe should find a more complete way to validate the presence of assets in HPC so that we don't include those in the process of downloading.\r\n\r\n**Proposed implementation: loop over the file size.**\r\n\r\n```\r\nif not os.path.exists(val):\r\n\t# Download file\r\n\t\r\nelse:\r\n    file_size = -1\r\n\twhile file_size != os.path.getsize(val):\r\n\t    file_size = os.path.getsize(val)\r\n\t\ttime.sleep(1)\r\n\r\n     # Path exists and file size is stable. Good to go.\r\n```\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/363/timeline","performed_via_github_app":null,"state_reason":null}