{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/428","repository_url":"https://api.github.com/repos/NRCan/geo-deep-learning","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/428/labels{/name}","comments_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/428/comments","events_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/428/events","html_url":"https://github.com/NRCan/geo-deep-learning/issues/428","id":1492109916,"node_id":"I_kwDOCNASdM5Y78pc","number":428,"title":"[feature requested] Tiling: detect and skip pre-existing patches during new execution of tiling if previous raised error","user":{"login":"remtav","id":34774759,"node_id":"MDQ6VXNlcjM0Nzc0NzU5","avatar_url":"https://avatars.githubusercontent.com/u/34774759?v=4","gravatar_id":"","url":"https://api.github.com/users/remtav","html_url":"https://github.com/remtav","followers_url":"https://api.github.com/users/remtav/followers","following_url":"https://api.github.com/users/remtav/following{/other_user}","gists_url":"https://api.github.com/users/remtav/gists{/gist_id}","starred_url":"https://api.github.com/users/remtav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/remtav/subscriptions","organizations_url":"https://api.github.com/users/remtav/orgs","repos_url":"https://api.github.com/users/remtav/repos","events_url":"https://api.github.com/users/remtav/events{/privacy}","received_events_url":"https://api.github.com/users/remtav/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-12-12T15:12:41Z","updated_at":"2022-12-19T15:20:51Z","closed_at":"2022-12-19T15:20:51Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"The tiling script frequently raises errors on large datasets. \r\nTwo solutions could help preventing the long re-execution of this process for the same dataset: \r\n- add more try/except statements to proceed with tiling even if a particular AOI has raised an error\r\n- during re-execution, detect and skip existing patches, i.e. append new patches to existing.\r\n\r\nHere's an example of an error I just encountered:\r\n```python\r\nError executing job with overrides: ['mode=tiling', 'dataset.raw_data_csv=/gpfs/fs5/nrcan/nrcan_geobase/work/transfer/work/deep_learning/models/single/RGB/Building/3provs/training_set_NB-NFL-QC_building_ids.csv', 'dataset.raw_data_dir=/gpfs/fs5/nrcan/nrcan_geobase/work/transfer/work/deep_learning/operationalization/data', 'dataset.attribute_field=Quatreclasses', 'dataset.attribute_values=[4]', 'dataset.download_data=True', 'tiling.tiling_data_dir=/gpfs/fs5/nrcan/nrcan_geobase/work/transfer/work/deep_learning/models/single/RGB/Building/3provs/patches', 'tiling.multiprocessing=True', 'tiling.patch_size=512', 'verify.output_raster_plots=False', 'verify.output_raster_stats=False', 'verify.extended_label_stats=False', 'general.project_name=3provs_NB-NFL-QC_building', 'debug=False']\r\nmultiprocessing.pool.RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/space/partner/nrcan/geobase/work/opt/miniconda-gdl-ops/envs/geo_deep_env/lib/python3.10/multiprocessing/pool.py\", line 125, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/space/partner/nrcan/geobase/work/opt/miniconda-gdl-ops/envs/geo_deep_env/lib/python3.10/multiprocessing/pool.py\", line 48, in mapstar\r\n    return list(map(*args))\r\n  File \"/fs/vnas_Hnrcan/geobase/ret000/geo-deep-learning/tiling_segmentation.py\", line 519, in map_wrapper\r\n    return x[0](*(x[1:]))\r\n  File \"/fs/vnas_Hnrcan/geobase/ret000/geo-deep-learning/tiling_segmentation.py\", line 490, in filter_and_burn_dataset\r\n    min_annot_success, annot_perc = self.passes_min_annot(\r\n  File \"/fs/vnas_Hnrcan/geobase/ret000/geo-deep-learning/tiling_segmentation.py\", line 370, in passes_min_annot\r\n    annot_perc = annot_percent(\r\n  File \"/fs/vnas_Hnrcan/geobase/ret000/geo-deep-learning/tiling_segmentation.py\", line 50, in annot_percent\r\n    gdf_patch_bounds, img_patch_bounds = bounds_gdf(gdf_patch), bounds_riodataset(img_patch_dataset)\r\n  File \"/fs/vnas_Hnrcan/geobase/ret000/geo-deep-learning/utils/geoutils.py\", line 214, in bounds_gdf\r\n    gdf_bounds_box = box(*gdf_bounds.tolist())\r\n  File \"/space/partner/nrcan/geobase/work/opt/miniconda-gdl-ops/envs/geo_deep_env/lib/python3.10/site-packages/shapely/geometry/geo.py\", line 64, in box\r\n    return Polygon(coords)\r\n  File \"/space/partner/nrcan/geobase/work/opt/miniconda-gdl-ops/envs/geo_deep_env/lib/python3.10/site-packages/shapely/geometry/polygon.py\", line 261, in __init__\r\n    ret = geos_polygon_from_py(shell, holes)\r\n  File \"/space/partner/nrcan/geobase/work/opt/miniconda-gdl-ops/envs/geo_deep_env/lib/python3.10/site-packages/shapely/geometry/polygon.py\", line 539, in geos_polygon_from_py\r\n    ret = geos_linearring_from_py(shell)\r\n  File \"shapely/speedups/_speedups.pyx\", line 413, in shapely.speedups._speedups.geos_linearring_from_py\r\nValueError: GEOSGeom_createLinearRing_r returned a NULL pointer\r\n\"\"\"\r\n```\r\n\r\nAs can be seen, the error was raised during the 2nd for loop of tiling, meaning all patches from 1st for loop should be created and ok to reuse.\r\n","closed_by":{"login":"remtav","id":34774759,"node_id":"MDQ6VXNlcjM0Nzc0NzU5","avatar_url":"https://avatars.githubusercontent.com/u/34774759?v=4","gravatar_id":"","url":"https://api.github.com/users/remtav","html_url":"https://github.com/remtav","followers_url":"https://api.github.com/users/remtav/followers","following_url":"https://api.github.com/users/remtav/following{/other_user}","gists_url":"https://api.github.com/users/remtav/gists{/gist_id}","starred_url":"https://api.github.com/users/remtav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/remtav/subscriptions","organizations_url":"https://api.github.com/users/remtav/orgs","repos_url":"https://api.github.com/users/remtav/repos","events_url":"https://api.github.com/users/remtav/events{/privacy}","received_events_url":"https://api.github.com/users/remtav/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/428/timeline","performed_via_github_app":null,"state_reason":"completed"}