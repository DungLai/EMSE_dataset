{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/392","repository_url":"https://api.github.com/repos/NRCan/geo-deep-learning","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/392/labels{/name}","comments_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/392/comments","events_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/392/events","html_url":"https://github.com/NRCan/geo-deep-learning/issues/392","id":1453826827,"node_id":"I_kwDOCNASdM5Wp6ML","number":392,"title":"verify_segmentation: make bulletproof","user":{"login":"remtav","id":34774759,"node_id":"MDQ6VXNlcjM0Nzc0NzU5","avatar_url":"https://avatars.githubusercontent.com/u/34774759?v=4","gravatar_id":"","url":"https://api.github.com/users/remtav","html_url":"https://github.com/remtav","followers_url":"https://api.github.com/users/remtav/followers","following_url":"https://api.github.com/users/remtav/following{/other_user}","gists_url":"https://api.github.com/users/remtav/gists{/gist_id}","starred_url":"https://api.github.com/users/remtav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/remtav/subscriptions","organizations_url":"https://api.github.com/users/remtav/orgs","repos_url":"https://api.github.com/users/remtav/repos","events_url":"https://api.github.com/users/remtav/events{/privacy}","received_events_url":"https://api.github.com/users/remtav/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"CharlesAuthier","id":25693364,"node_id":"MDQ6VXNlcjI1NjkzMzY0","avatar_url":"https://avatars.githubusercontent.com/u/25693364?v=4","gravatar_id":"","url":"https://api.github.com/users/CharlesAuthier","html_url":"https://github.com/CharlesAuthier","followers_url":"https://api.github.com/users/CharlesAuthier/followers","following_url":"https://api.github.com/users/CharlesAuthier/following{/other_user}","gists_url":"https://api.github.com/users/CharlesAuthier/gists{/gist_id}","starred_url":"https://api.github.com/users/CharlesAuthier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CharlesAuthier/subscriptions","organizations_url":"https://api.github.com/users/CharlesAuthier/orgs","repos_url":"https://api.github.com/users/CharlesAuthier/repos","events_url":"https://api.github.com/users/CharlesAuthier/events{/privacy}","received_events_url":"https://api.github.com/users/CharlesAuthier/received_events","type":"User","site_admin":false},"assignees":[{"login":"CharlesAuthier","id":25693364,"node_id":"MDQ6VXNlcjI1NjkzMzY0","avatar_url":"https://avatars.githubusercontent.com/u/25693364?v=4","gravatar_id":"","url":"https://api.github.com/users/CharlesAuthier","html_url":"https://github.com/CharlesAuthier","followers_url":"https://api.github.com/users/CharlesAuthier/followers","following_url":"https://api.github.com/users/CharlesAuthier/following{/other_user}","gists_url":"https://api.github.com/users/CharlesAuthier/gists{/gist_id}","starred_url":"https://api.github.com/users/CharlesAuthier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CharlesAuthier/subscriptions","organizations_url":"https://api.github.com/users/CharlesAuthier/orgs","repos_url":"https://api.github.com/users/CharlesAuthier/repos","events_url":"https://api.github.com/users/CharlesAuthier/events{/privacy}","received_events_url":"https://api.github.com/users/CharlesAuthier/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-11-17T18:56:39Z","updated_at":"2022-12-07T20:18:58Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"Verify_segmentation.py script is meant to be the first step when starting a project with new data. This script should be able to complete (i.e. write it's csv report) no matter how bad certain data is in the input csv. Two most probable examples of bad data:\r\n- invalid input raster such as a stac item\r\n- invalid ground truth file\r\n\r\nAdding a couple try/except statements should do it. Also, errors should be carried over to the final report, therefore saved in variables such as `raster_errors = [error1, error2]`, etc.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/392/timeline","performed_via_github_app":null,"state_reason":null}