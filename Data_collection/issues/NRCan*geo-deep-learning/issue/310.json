{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/310","repository_url":"https://api.github.com/repos/NRCan/geo-deep-learning","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/310/labels{/name}","comments_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/310/comments","events_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/310/events","html_url":"https://github.com/NRCan/geo-deep-learning/issues/310","id":1246953826,"node_id":"I_kwDOCNASdM5KUwFi","number":310,"title":"Input data validation: define a uniform procedure","user":{"login":"remtav","id":34774759,"node_id":"MDQ6VXNlcjM0Nzc0NzU5","avatar_url":"https://avatars.githubusercontent.com/u/34774759?v=4","gravatar_id":"","url":"https://api.github.com/users/remtav","html_url":"https://github.com/remtav","followers_url":"https://api.github.com/users/remtav/followers","following_url":"https://api.github.com/users/remtav/following{/other_user}","gists_url":"https://api.github.com/users/remtav/gists{/gist_id}","starred_url":"https://api.github.com/users/remtav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/remtav/subscriptions","organizations_url":"https://api.github.com/users/remtav/orgs","repos_url":"https://api.github.com/users/remtav/repos","events_url":"https://api.github.com/users/remtav/events{/privacy}","received_events_url":"https://api.github.com/users/remtav/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-05-24T18:08:11Z","updated_at":"2022-05-24T18:43:39Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"PR #309 introduces an AOI object that performs quality control on any input data that uses this object. In current version, invalid data will raise an exception. \r\n\r\nWhat is invalid data in current version (including modifications from #309)?\r\n- A raster that can't be opened with rasterio\r\n- A raster that contains a different number of bands that expected (ex.: actual is RGB, expected is RGBN)\r\n- A vector ground truth file that can't be opened with geopandas\r\n- A vector file that contains a different number of classes (unique values from a particular attribute field) than expected*\r\n* this last validation will not succeed if a vector file contains only a subset of `num_classes` (e.g. 3 of 4). Should we only check that number of expected classes is not smaller than actual (not vice-versa) ?\r\n \r\nShould other criteria determine if data is valid? Some ideas:\r\n- Imagery and ground truth's bounds don't overlap\r\n- Imagery and ground truth's bounds overlap under a certain threshold (ex.: 50%). This covers cases when provided ground truth or imagery is accidentally a partial \"fit\" with is counterpart.\r\n\r\nSome \"data validation\" logic questions:\r\n- Should errors from invalid data be \"catched\", ignored during execution and sent to user via a report of some sort (ex.: csv with some detail)\r\n- Should this logic be applied equally in sampling (tiling) and inference? A uniform approach is much simpler.\r\n- Should an existing report trigger the bypassing of future validation for the same dataset? Some validation steps can be costly (ex.: validate individual features of a vector file). This kind of bypassing could be worth it.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/310/timeline","performed_via_github_app":null,"state_reason":null}