{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/296","repository_url":"https://api.github.com/repos/NRCan/geo-deep-learning","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/296/labels{/name}","comments_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/296/comments","events_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/296/events","html_url":"https://github.com/NRCan/geo-deep-learning/issues/296","id":1177149251,"node_id":"I_kwDOCNASdM5GKd9D","number":296,"title":"Model checkpoint naming: create naming convention","user":{"login":"remtav","id":34774759,"node_id":"MDQ6VXNlcjM0Nzc0NzU5","avatar_url":"https://avatars.githubusercontent.com/u/34774759?v=4","gravatar_id":"","url":"https://api.github.com/users/remtav","html_url":"https://github.com/remtav","followers_url":"https://api.github.com/users/remtav/followers","following_url":"https://api.github.com/users/remtav/following{/other_user}","gists_url":"https://api.github.com/users/remtav/gists{/gist_id}","starred_url":"https://api.github.com/users/remtav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/remtav/subscriptions","organizations_url":"https://api.github.com/users/remtav/orgs","repos_url":"https://api.github.com/users/remtav/repos","events_url":"https://api.github.com/users/remtav/events{/privacy}","received_events_url":"https://api.github.com/users/remtav/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-03-22T18:30:11Z","updated_at":"2022-10-14T14:13:36Z","closed_at":"2022-10-14T14:13:36Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"# Model checkpoint naming convention\r\n\r\nA naming convention for models' weights checkpoints written during training has become essential for:\r\n- quickly understanding what flavor of model checkpoint we are dealing with as checkpoint files are being moved across the universe;\r\n- overiding parameters during inference to instantiate the right model architecture, with correct number of input and output channels;\r\n\r\nAs far as GDL is concerned, all other relevant information for reproducibility (ex.: git version) is saved inside checkpoint under \"params\" key, which essentially contains all config parameters used during training.\r\n\r\n## Proposed convention\r\n\r\n`[architecture-id]_[input bands]_[output classes]_[date].pth.tar`\r\ni.e.\r\n`[architecture-id]_[modalities-by-common-name]_[class1-id]-[classe2-id]-[classn-id]_[YYYYMMDD].pth.tar`\r\n\r\n## Examples\r\n- unet-smp_red-green-blue-nir_WAER-FORE-ROAI-BUIL_20220323.pth.tar\r\n- unet-gdl_red-green-blue_WAER_20220323.pth.tar\r\n\r\n### Alternative with single-letter bands\r\nunet-smp_RGBN_WAER-FORE-ROAI-BUIL_20220323.pth.tar\r\n\r\n## Implications\r\n- GDL's model names (ie name of config file for each model, without .yaml extension) should be as static as possible since they'll serve as architecture id\r\n- GDL should check that inputted modalities for imagery bands follow STAC [common names](https://github.com/stac-extensions/eo#common-band-names)\r\n- If a model predicts 52 classes, for example, the checkpoint's name will be darn long! How should we prevent names from having [>260 characters](https://www.howtogeek.com/266621/how-to-make-windows-10-accept-file-paths-over-260-characters/)?\r\n- If a same architecture is used twice for the same band and class combination, this convention will not differenciate them. This means, it won't be easy to determine, for example, what scores each model obtained on a particular dataset (like out internal benchmark dataset). Should our naming convention include a date or something that adds a bit more \"uniqueness\"?\r\n\r\n# Options for uniqueness\r\n- Date: format? YYMMDD? iso8601? 20220323\r\n- Random name (e.g. docker containers)?\r\n- Hex code\r\n\r\n# Options for abbreviating name\r\n- Class id as single letter\r\n- Class id as integer between 0-255\r\n","closed_by":{"login":"mpelchat04","id":38693210,"node_id":"MDQ6VXNlcjM4NjkzMjEw","avatar_url":"https://avatars.githubusercontent.com/u/38693210?v=4","gravatar_id":"","url":"https://api.github.com/users/mpelchat04","html_url":"https://github.com/mpelchat04","followers_url":"https://api.github.com/users/mpelchat04/followers","following_url":"https://api.github.com/users/mpelchat04/following{/other_user}","gists_url":"https://api.github.com/users/mpelchat04/gists{/gist_id}","starred_url":"https://api.github.com/users/mpelchat04/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mpelchat04/subscriptions","organizations_url":"https://api.github.com/users/mpelchat04/orgs","repos_url":"https://api.github.com/users/mpelchat04/repos","events_url":"https://api.github.com/users/mpelchat04/events{/privacy}","received_events_url":"https://api.github.com/users/mpelchat04/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/296/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/296/timeline","performed_via_github_app":null,"state_reason":"completed"}