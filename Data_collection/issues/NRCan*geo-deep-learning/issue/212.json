{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/212","repository_url":"https://api.github.com/repos/NRCan/geo-deep-learning","labels_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/212/labels{/name}","comments_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/212/comments","events_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/212/events","html_url":"https://github.com/NRCan/geo-deep-learning/issues/212","id":1043823102,"node_id":"I_kwDOCNASdM4-N3n-","number":212,"title":"Issues with using the NIR band in the latest version","user":{"login":"krishanr","id":16637530,"node_id":"MDQ6VXNlcjE2NjM3NTMw","avatar_url":"https://avatars.githubusercontent.com/u/16637530?v=4","gravatar_id":"","url":"https://api.github.com/users/krishanr","html_url":"https://github.com/krishanr","followers_url":"https://api.github.com/users/krishanr/followers","following_url":"https://api.github.com/users/krishanr/following{/other_user}","gists_url":"https://api.github.com/users/krishanr/gists{/gist_id}","starred_url":"https://api.github.com/users/krishanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/krishanr/subscriptions","organizations_url":"https://api.github.com/users/krishanr/orgs","repos_url":"https://api.github.com/users/krishanr/repos","events_url":"https://api.github.com/users/krishanr/events{/privacy}","received_events_url":"https://api.github.com/users/krishanr/received_events","type":"User","site_admin":false},"labels":[{"id":1049334784,"node_id":"MDU6TGFiZWwxMDQ5MzM0Nzg0","url":"https://api.github.com/repos/NRCan/geo-deep-learning/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-11-03T16:37:33Z","updated_at":"2022-03-01T16:44:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi all,\r\n\r\nI have two issues to report with running working with 4band 16 bit imagery in version 6852729 using a config file similar to https://github.com/NRCan/geo-deep-learning/blob/v.1.2.0/conf/development/config_test_4channels_implementation.yaml.\r\n\r\nAll the steps up to inference.py can be run without error, but inference.py reports the following error:\r\n\r\n> \r\n> 2021-11-02 22:55:13,208 root 487 [INFO][main] Number of cuda devices requested: 2. Cuda devices available: {0: {'used_ram_at_init': 1705.75, 'max_ram': 11019.4375}, 1: {'used_ram_at_init': 1171.75, 'max_ram': 11019.4375}}. Using 0\r\n> \r\n> \r\n> 2021-11-02 22:55:13,964 root 238 [INFO][net] Finetuning pretrained deeplabv3 with 4 input channels (imagery bands). Concatenation point: \"conv1\"\r\n> 2021-11-02 22:55:13,964 root 85 [INFO][load_checkpoint] => loading model 'data/raw/mining7/samples256_overlap0_min-annot0_4bands_mon25/model/mining7/checkpoint.pth.tar'\r\n> \r\n> 2021-11-02 22:55:15,840 root 413 [WARNING][read_csv] Unable to sort csv rows\r\n> Validating imagery: 100%|█████████████████████████████████████████████████████████████████████████████████████| 6/6 [00:00<00:00, 60205.32it/s]\r\n> 2021-11-02 22:55:15,841 root 526 [INFO][main] Successfully validated imagery\r\n> Traceback (most recent call last):\r\n>   File \"inference.py\", line 691, in <module>\r\n>     main(params)\r\n>   File \"inference.py\", line 543, in main\r\n>     model, _ = load_from_checkpoint(loaded_checkpoint, model)\r\n>   File \"geo-deep-learning/utils/utils.py\", line 74, in load_from_checkpoint\r\n>     model.load_state_dict(checkpoint['model'], strict=strict_loading)\r\n>   File \"anaconda3/envs/geo_deep_env/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 830, in load_state_dict\r\n>     self.__class__.__name__, \"\\n\\t\".join(error_msgs)))\r\n> RuntimeError: Error(s) in loading state_dict for LayersEnsemble:\r\n>         size mismatch for conv1x1.weight: copying a param with shape torch.Size([2048, 4096, 1, 1]) from checkpoint, the shape in current model is torch.Size([64, 128, 1, 1]).\r\n>         size mismatch for conv1x1.bias: copying a param with shape torch.Size([2048]) from checkpoint, the shape in current model is torch.Size([64]).\r\n\r\nThe above error is due to the fact that the LayersEnsemble model is using concatenation point 'conv1' when the model was built with 'layer4', which is in the yaml configuration file. This can be fixed modifying line 496 in inference.py like so:\r\n\r\n```\r\n  model, loaded_checkpoint, model_name = net(model_name=model_name,\r\n                                             num_bands=num_bands,\r\n                                             num_channels=num_classes_backgr,\r\n                                             dontcare_val=dontcare_val,\r\n                                             num_devices=1,\r\n                                             net_params=params,\r\n                                             inference_state_dict=state_dict,\r\n                                             conc_point=params['global']['concatenate_depth'])\r\n```\r\n\r\nOnce the above line is added to inference.py, the inferences are generated appropriately. \r\n\r\nHowever one last issue remains, because there is no normalization used for the images. The model then starts to learn the ignored class (with value -1) in addition to the target class (here we're doing binary segmentation). Any ideas on how to prevent the model from learning the ignored class?","closed_by":null,"reactions":{"url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/NRCan/geo-deep-learning/issues/212/timeline","performed_via_github_app":null,"state_reason":null}