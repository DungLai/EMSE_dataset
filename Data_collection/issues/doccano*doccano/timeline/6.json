[{"id":1869770415,"node_id":"MDEyOkxhYmVsZWRFdmVudDE4Njk3NzA0MTU=","url":"https://api.github.com/repos/doccano/doccano/issues/events/1869770415","actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2018-09-26T23:47:05Z","label":{"name":"enhancement","color":"a2eeef"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/424909470","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-424909470","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":424909470,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNDkwOTQ3MA==","user":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"created_at":"2018-09-27T00:05:07Z","updated_at":"2018-09-27T00:06:45Z","author_association":"CONTRIBUTOR","body":"Thank you for a nice feature request! We consider doccano supports active learning/semi-supervised situation. \r\n\r\nYou can call API because doccano works REST API based architecture. But we now refactoring code and documentation, so please give us a little time to show an example üôè \r\n\r\nWe also consider the feature for importing labeled dataset. It's easy than labeling by API dynamically. Does this import feature is enough for your request?\r\n\r\n**API Based Labeling**\r\n\r\n* Pros: Dynamically label the data and train the external model (online learning).\r\n* Cons: A little hard to implement due to a security issue (because it requires external API call), and a user should launch an external model server.\r\n\r\n**Labeled Data Import**\r\n\r\n* Pros: Easy to implement and easy to use.\r\n* Cons: Can't support dynamic process.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/424909470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false}},{"actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"created_at":"2018-10-05T03:07:08Z","updated_at":"2018-10-05T03:07:08Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/doccano/doccano/issues/9","repository_url":"https://api.github.com/repos/doccano/doccano","labels_url":"https://api.github.com/repos/doccano/doccano/issues/9/labels{/name}","comments_url":"https://api.github.com/repos/doccano/doccano/issues/9/comments","events_url":"https://api.github.com/repos/doccano/doccano/issues/9/events","html_url":"https://github.com/doccano/doccano/issues/9","id":366913338,"node_id":"MDU6SXNzdWUzNjY5MTMzMzg=","number":9,"title":"Loading data from API call","user":{"login":"alohia","id":1757468,"node_id":"MDQ6VXNlcjE3NTc0Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1757468?v=4","gravatar_id":"","url":"https://api.github.com/users/alohia","html_url":"https://github.com/alohia","followers_url":"https://api.github.com/users/alohia/followers","following_url":"https://api.github.com/users/alohia/following{/other_user}","gists_url":"https://api.github.com/users/alohia/gists{/gist_id}","starred_url":"https://api.github.com/users/alohia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alohia/subscriptions","organizations_url":"https://api.github.com/users/alohia/orgs","repos_url":"https://api.github.com/users/alohia/repos","events_url":"https://api.github.com/users/alohia/events{/privacy}","received_events_url":"https://api.github.com/users/alohia/received_events","type":"User","site_admin":false},"labels":[{"id":927327728,"node_id":"MDU6TGFiZWw5MjczMjc3Mjg=","url":"https://api.github.com/repos/doccano/doccano/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-10-04T18:24:13Z","updated_at":"2018-10-05T03:07:08Z","closed_at":"2018-10-05T03:07:08Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":132709824,"node_id":"MDEwOlJlcG9zaXRvcnkxMzI3MDk4MjQ=","name":"doccano","full_name":"doccano/doccano","private":false,"owner":{"login":"doccano","id":58067660,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU4MDY3NjYw","avatar_url":"https://avatars.githubusercontent.com/u/58067660?v=4","gravatar_id":"","url":"https://api.github.com/users/doccano","html_url":"https://github.com/doccano","followers_url":"https://api.github.com/users/doccano/followers","following_url":"https://api.github.com/users/doccano/following{/other_user}","gists_url":"https://api.github.com/users/doccano/gists{/gist_id}","starred_url":"https://api.github.com/users/doccano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doccano/subscriptions","organizations_url":"https://api.github.com/users/doccano/orgs","repos_url":"https://api.github.com/users/doccano/repos","events_url":"https://api.github.com/users/doccano/events{/privacy}","received_events_url":"https://api.github.com/users/doccano/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/doccano/doccano","description":"Open source annotation tool for machine learning practitioners.","fork":false,"url":"https://api.github.com/repos/doccano/doccano","forks_url":"https://api.github.com/repos/doccano/doccano/forks","keys_url":"https://api.github.com/repos/doccano/doccano/keys{/key_id}","collaborators_url":"https://api.github.com/repos/doccano/doccano/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/doccano/doccano/teams","hooks_url":"https://api.github.com/repos/doccano/doccano/hooks","issue_events_url":"https://api.github.com/repos/doccano/doccano/issues/events{/number}","events_url":"https://api.github.com/repos/doccano/doccano/events","assignees_url":"https://api.github.com/repos/doccano/doccano/assignees{/user}","branches_url":"https://api.github.com/repos/doccano/doccano/branches{/branch}","tags_url":"https://api.github.com/repos/doccano/doccano/tags","blobs_url":"https://api.github.com/repos/doccano/doccano/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/doccano/doccano/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/doccano/doccano/git/refs{/sha}","trees_url":"https://api.github.com/repos/doccano/doccano/git/trees{/sha}","statuses_url":"https://api.github.com/repos/doccano/doccano/statuses/{sha}","languages_url":"https://api.github.com/repos/doccano/doccano/languages","stargazers_url":"https://api.github.com/repos/doccano/doccano/stargazers","contributors_url":"https://api.github.com/repos/doccano/doccano/contributors","subscribers_url":"https://api.github.com/repos/doccano/doccano/subscribers","subscription_url":"https://api.github.com/repos/doccano/doccano/subscription","commits_url":"https://api.github.com/repos/doccano/doccano/commits{/sha}","git_commits_url":"https://api.github.com/repos/doccano/doccano/git/commits{/sha}","comments_url":"https://api.github.com/repos/doccano/doccano/comments{/number}","issue_comment_url":"https://api.github.com/repos/doccano/doccano/issues/comments{/number}","contents_url":"https://api.github.com/repos/doccano/doccano/contents/{+path}","compare_url":"https://api.github.com/repos/doccano/doccano/compare/{base}...{head}","merges_url":"https://api.github.com/repos/doccano/doccano/merges","archive_url":"https://api.github.com/repos/doccano/doccano/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/doccano/doccano/downloads","issues_url":"https://api.github.com/repos/doccano/doccano/issues{/number}","pulls_url":"https://api.github.com/repos/doccano/doccano/pulls{/number}","milestones_url":"https://api.github.com/repos/doccano/doccano/milestones{/number}","notifications_url":"https://api.github.com/repos/doccano/doccano/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/doccano/doccano/labels{/name}","releases_url":"https://api.github.com/repos/doccano/doccano/releases{/id}","deployments_url":"https://api.github.com/repos/doccano/doccano/deployments","created_at":"2018-05-09T06:10:05Z","updated_at":"2023-01-19T08:54:15Z","pushed_at":"2023-01-13T04:29:51Z","git_url":"git://github.com/doccano/doccano.git","ssh_url":"git@github.com:doccano/doccano.git","clone_url":"https://github.com/doccano/doccano.git","svn_url":"https://github.com/doccano/doccano","homepage":"https://doccano.herokuapp.com","size":56100,"stargazers_count":7214,"watchers_count":7214,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1473,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":200,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["annotation-tool","data-labeling","dataset","datasets","machine-learning","natural-language-processing","nuxt","nuxtjs","python","text-annotation","vue","vuejs"],"visibility":"public","forks":1473,"open_issues":200,"watchers":7214,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"Hi,\r\n\r\nI want to make an api call to `POST /projects/<project_id>/docs/create` to create a document classification dataset, using Postman for example. However, I get an error saying that csrf verification failed. Can you please let me know how can I make a POST call if I need to make this call from some other program when doccano is running?\r\n\r\nThanks","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/9/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/doccano/doccano/issues/9/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/428307087","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-428307087","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":428307087,"node_id":"MDEyOklzc3VlQ29tbWVudDQyODMwNzA4Nw==","user":{"login":"fm444fm","id":32301200,"node_id":"MDQ6VXNlcjMyMzAxMjAw","avatar_url":"https://avatars.githubusercontent.com/u/32301200?v=4","gravatar_id":"","url":"https://api.github.com/users/fm444fm","html_url":"https://github.com/fm444fm","followers_url":"https://api.github.com/users/fm444fm/followers","following_url":"https://api.github.com/users/fm444fm/following{/other_user}","gists_url":"https://api.github.com/users/fm444fm/gists{/gist_id}","starred_url":"https://api.github.com/users/fm444fm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fm444fm/subscriptions","organizations_url":"https://api.github.com/users/fm444fm/orgs","repos_url":"https://api.github.com/users/fm444fm/repos","events_url":"https://api.github.com/users/fm444fm/events{/privacy}","received_events_url":"https://api.github.com/users/fm444fm/received_events","type":"User","site_admin":false},"created_at":"2018-10-09T18:48:57Z","updated_at":"2018-10-09T18:48:57Z","author_association":"NONE","body":"Thank you for the answers. The labeled data import is definitely easier like you say, both to develop and to use. On the other hand it would not offer as many opportunities as the other possibility: if doccano could be used for online/dynamic learning I think it could become an even more interesting and flexible application.\r\n","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/428307087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"fm444fm","id":32301200,"node_id":"MDQ6VXNlcjMyMzAxMjAw","avatar_url":"https://avatars.githubusercontent.com/u/32301200?v=4","gravatar_id":"","url":"https://api.github.com/users/fm444fm","html_url":"https://github.com/fm444fm","followers_url":"https://api.github.com/users/fm444fm/followers","following_url":"https://api.github.com/users/fm444fm/following{/other_user}","gists_url":"https://api.github.com/users/fm444fm/gists{/gist_id}","starred_url":"https://api.github.com/users/fm444fm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fm444fm/subscriptions","organizations_url":"https://api.github.com/users/fm444fm/orgs","repos_url":"https://api.github.com/users/fm444fm/repos","events_url":"https://api.github.com/users/fm444fm/events{/privacy}","received_events_url":"https://api.github.com/users/fm444fm/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/429688513","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-429688513","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":429688513,"node_id":"MDEyOklzc3VlQ29tbWVudDQyOTY4ODUxMw==","user":{"login":"jamesmf","id":7809188,"node_id":"MDQ6VXNlcjc4MDkxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7809188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesmf","html_url":"https://github.com/jamesmf","followers_url":"https://api.github.com/users/jamesmf/followers","following_url":"https://api.github.com/users/jamesmf/following{/other_user}","gists_url":"https://api.github.com/users/jamesmf/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesmf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesmf/subscriptions","organizations_url":"https://api.github.com/users/jamesmf/orgs","repos_url":"https://api.github.com/users/jamesmf/repos","events_url":"https://api.github.com/users/jamesmf/events{/privacy}","received_events_url":"https://api.github.com/users/jamesmf/received_events","type":"User","site_admin":false},"created_at":"2018-10-15T02:19:11Z","updated_at":"2018-10-15T02:19:11Z","author_association":"NONE","body":"If the API piece is tricky because of security and the inconvenience of needing a separate service, and the labeled data import is static, what about an admin-only page for applying a model to unlabeled examples and potentially also updating the model?\r\n\r\n- When creating a project, you could specify a model to associate with the project, perhaps using a module name (autolabeler_module=\"en_core_web_sm\" for example)\r\n- When clicking an \"apply_model\" button on the project card, the app would pull all unlabeled documents, apply a specific function of the model, and save the result to annotations\r\n\r\nMight be a middle-ground in terms of both functionality and implementation difficulty.","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/429688513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"jamesmf","id":7809188,"node_id":"MDQ6VXNlcjc4MDkxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7809188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesmf","html_url":"https://github.com/jamesmf","followers_url":"https://api.github.com/users/jamesmf/followers","following_url":"https://api.github.com/users/jamesmf/following{/other_user}","gists_url":"https://api.github.com/users/jamesmf/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesmf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesmf/subscriptions","organizations_url":"https://api.github.com/users/jamesmf/orgs","repos_url":"https://api.github.com/users/jamesmf/repos","events_url":"https://api.github.com/users/jamesmf/events{/privacy}","received_events_url":"https://api.github.com/users/jamesmf/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/430088413","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-430088413","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":430088413,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDA4ODQxMw==","user":{"login":"jamesmf","id":7809188,"node_id":"MDQ6VXNlcjc4MDkxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7809188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesmf","html_url":"https://github.com/jamesmf","followers_url":"https://api.github.com/users/jamesmf/followers","following_url":"https://api.github.com/users/jamesmf/following{/other_user}","gists_url":"https://api.github.com/users/jamesmf/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesmf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesmf/subscriptions","organizations_url":"https://api.github.com/users/jamesmf/orgs","repos_url":"https://api.github.com/users/jamesmf/repos","events_url":"https://api.github.com/users/jamesmf/events{/privacy}","received_events_url":"https://api.github.com/users/jamesmf/received_events","type":"User","site_admin":false},"created_at":"2018-10-16T03:29:29Z","updated_at":"2018-10-16T03:29:29Z","author_association":"NONE","body":"I implemented a Command class that lets you run `python manage.py autolabel project_id` and it loads a model and labels all of the documents in that project. In its current state it also adds new labels to the project if they don't exist (that should probably be optional)\r\n\r\nThe main problem with this implementation is that I don't have a great way to specify a document has been `reviewed`. So while I can add Annotations to every Document and specify that they are all `manual=False` (which lets me pull only the documents that were labeled manually for training), what I don't have is a way of changing those annotations from `manual=False` to `reviewed` or something similar.\r\n\r\nI'm imagining that the simplest way to do that would be to either\r\n- add an endpoint for 'reviewed document' that gets called every time a user clicks past an autolabeled  document\r\n- add a button (preferably shortcut-keyed) that specifies \"this user has reviewed the automatic annotations and approved them\"\r\n\r\nHow does the feature/autolabeling branch intend on handling the difference between a `manual=False` annotation and a \"reviewed\" annotation?\r\n\r\nHere's the implementation. Once I come up with a decent means of iterating on this, I'll PR something similar\r\n```\r\nfrom django.core.management.base import BaseCommand, CommandError\r\nfrom server.models import (Document, Project, Label,\r\n                          SequenceAnnotation, User)\r\nimport en_core_web_md\r\nimport string\r\n\r\n# if we want to add new labels, decide on some new colors for them\r\nSOME_COLORS_TO_CHOOSE_FROM = [\"#001f3f\", \"#0074D9\", \"#7FDBFF\",\r\n                              \"#39CCCC\", \"#3D9970\", \"#2ECC40\",\r\n                              \"#01FF70\", \"#FFDC00\", \"#FF4136\",\r\n                              \"#FF851B\", \"#85144b\", \"#B10DC9\",\r\n                              \"#111111\"]\r\n\r\ndef get_new_shortcut(proj_id):\r\n    \"\"\"\r\n    Since (project_id, shortcut_key) must be unique for a set of labels,\r\n    we need to check what's taken and pick a unique shortcut key if we want\r\n    to add a new label\r\n    \"\"\"\r\n    labels = Label.objects.filter(project_id=proj_id)\r\n    existing = set([label.shortcut for label in labels])\r\n    kc = set(string.ascii_lowercase)\r\n    diff = kc - existing\r\n    return list(diff)[0]\r\n\r\n\r\ndef load_model(model_str):\r\n    \"\"\"\r\n    Loads a model given an input string (could work differently)\r\n    \"\"\"\r\n    if model_str == \"en_core_web_md\":\r\n        import en_core_web_md\r\n        model_func = en_core_web_md.load()\r\n    if model_str == \"seed_data\":\r\n        pass\r\n    return model_func\r\n\r\n\r\nclass Command(BaseCommand):\r\n    help = 'Loads a model and labels all documents in a given project'\r\n\r\n    def add_arguments(self, parser):\r\n        parser.add_argument('project_id', type=int)\r\n        parser.add_argument('model_str', default='en_core_web_md')\r\n\r\n    def handle(self, *args, **options):\r\n        \"\"\"\r\n        Loads a model, gets all documents in the given project, and calls that\r\n        model on each document. Optionally, it can create new labels for\r\n        entities that it finds that don't exist in your project.\r\n        \"\"\"\r\n        project_id = options['project_id']\r\n        model_str = options['model_str']\r\n        user = User.objects.get(username='admin')\r\n        print(\"loading model\")\r\n        nlp_model = load_model(model_str)\r\n        print(\"model loaded\")\r\n        project = Project.objects.get(pk=project_id)\r\n        docs = Document.objects.filter(project_id=project_id)\r\n        docs = docs[:2]\r\n        \r\n        # keep track of next label color, next label shortcut\r\n        labels_created = 0\r\n        next_color = SOME_COLORS_TO_CHOOSE_FROM[labels_created]\r\n        next_short = get_new_shortcut(project_id)\r\n        for doc in docs:\r\n            parsed = nlp_model(doc.text)\r\n            for ent in parsed.ents:\r\n                elabel = ent.label_\r\n                estart = ent.start_char\r\n                eend = ent.end_char\r\n                proj_label, created = Label.objects.get_or_create(text=elabel,\r\n                                                                  project=project,\r\n                                                                  defaults={'background_color': next_color,\r\n                                                                            'shortcut': next_short})\r\n                # keep track of next label color, next label shortcut\r\n                if created:\r\n                    labels_created = (labels_created + 1) % len(SOME_COLORS_TO_CHOOSE_FROM)\r\n                    next_color = SOME_COLORS_TO_CHOOSE_FROM[labels_created]\r\n                    next_short = get_new_shortcut(project_id)\r\n                seq_ann_args = dict(document=doc, user=user, \r\n                                    label=proj_label, start_offset=estart,\r\n                                    end_offset=eend, manual=False)\r\n                ann, c = SequenceAnnotation.objects.get_or_create(**seq_ann_args)\r\n```","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/430088413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"jamesmf","id":7809188,"node_id":"MDQ6VXNlcjc4MDkxODg=","avatar_url":"https://avatars.githubusercontent.com/u/7809188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesmf","html_url":"https://github.com/jamesmf","followers_url":"https://api.github.com/users/jamesmf/followers","following_url":"https://api.github.com/users/jamesmf/following{/other_user}","gists_url":"https://api.github.com/users/jamesmf/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesmf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesmf/subscriptions","organizations_url":"https://api.github.com/users/jamesmf/orgs","repos_url":"https://api.github.com/users/jamesmf/repos","events_url":"https://api.github.com/users/jamesmf/events{/privacy}","received_events_url":"https://api.github.com/users/jamesmf/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/431533404","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-431533404","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":431533404,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTUzMzQwNA==","user":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"created_at":"2018-10-20T00:31:40Z","updated_at":"2018-10-20T00:31:40Z","author_association":"CONTRIBUTOR","body":"Thank you for the great suggestion. As you proposed, we considered the way to set project-specific model.\r\n\r\nOne of the demerit of this way is that user have to decide the model structure before starting annotation.  You may think we can change the model during the annotation (active-learning), but there is a research that suggests active-learning is not transferable (so autolabeling feature is pending).\r\n\r\n[How transferable are the datasets collected by active learners?](https://arxiv.org/abs/1807.04801)\r\n\r\nBecause of this, we consider to implement simple/easy way at first. And additional features support would depends on future reseaches.\r\n","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/431533404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false}},{"actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"created_at":"2018-10-31T23:30:35Z","updated_at":"2018-10-31T23:30:35Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/doccano/doccano/issues/26","repository_url":"https://api.github.com/repos/doccano/doccano","labels_url":"https://api.github.com/repos/doccano/doccano/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/doccano/doccano/issues/26/comments","events_url":"https://api.github.com/repos/doccano/doccano/issues/26/events","html_url":"https://github.com/doccano/doccano/issues/26","id":374828361,"node_id":"MDU6SXNzdWUzNzQ4MjgzNjE=","number":26,"title":"Is there any development plan of doccano?","user":{"login":"bifeng","id":8215563,"node_id":"MDQ6VXNlcjgyMTU1NjM=","avatar_url":"https://avatars.githubusercontent.com/u/8215563?v=4","gravatar_id":"","url":"https://api.github.com/users/bifeng","html_url":"https://github.com/bifeng","followers_url":"https://api.github.com/users/bifeng/followers","following_url":"https://api.github.com/users/bifeng/following{/other_user}","gists_url":"https://api.github.com/users/bifeng/gists{/gist_id}","starred_url":"https://api.github.com/users/bifeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bifeng/subscriptions","organizations_url":"https://api.github.com/users/bifeng/orgs","repos_url":"https://api.github.com/users/bifeng/repos","events_url":"https://api.github.com/users/bifeng/events{/privacy}","received_events_url":"https://api.github.com/users/bifeng/received_events","type":"User","site_admin":false},"labels":[{"id":927327728,"node_id":"MDU6TGFiZWw5MjczMjc3Mjg=","url":"https://api.github.com/repos/doccano/doccano/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-10-29T01:51:13Z","updated_at":"2018-10-31T23:30:54Z","closed_at":"2018-10-31T23:30:54Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":132709824,"node_id":"MDEwOlJlcG9zaXRvcnkxMzI3MDk4MjQ=","name":"doccano","full_name":"doccano/doccano","private":false,"owner":{"login":"doccano","id":58067660,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU4MDY3NjYw","avatar_url":"https://avatars.githubusercontent.com/u/58067660?v=4","gravatar_id":"","url":"https://api.github.com/users/doccano","html_url":"https://github.com/doccano","followers_url":"https://api.github.com/users/doccano/followers","following_url":"https://api.github.com/users/doccano/following{/other_user}","gists_url":"https://api.github.com/users/doccano/gists{/gist_id}","starred_url":"https://api.github.com/users/doccano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doccano/subscriptions","organizations_url":"https://api.github.com/users/doccano/orgs","repos_url":"https://api.github.com/users/doccano/repos","events_url":"https://api.github.com/users/doccano/events{/privacy}","received_events_url":"https://api.github.com/users/doccano/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/doccano/doccano","description":"Open source annotation tool for machine learning practitioners.","fork":false,"url":"https://api.github.com/repos/doccano/doccano","forks_url":"https://api.github.com/repos/doccano/doccano/forks","keys_url":"https://api.github.com/repos/doccano/doccano/keys{/key_id}","collaborators_url":"https://api.github.com/repos/doccano/doccano/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/doccano/doccano/teams","hooks_url":"https://api.github.com/repos/doccano/doccano/hooks","issue_events_url":"https://api.github.com/repos/doccano/doccano/issues/events{/number}","events_url":"https://api.github.com/repos/doccano/doccano/events","assignees_url":"https://api.github.com/repos/doccano/doccano/assignees{/user}","branches_url":"https://api.github.com/repos/doccano/doccano/branches{/branch}","tags_url":"https://api.github.com/repos/doccano/doccano/tags","blobs_url":"https://api.github.com/repos/doccano/doccano/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/doccano/doccano/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/doccano/doccano/git/refs{/sha}","trees_url":"https://api.github.com/repos/doccano/doccano/git/trees{/sha}","statuses_url":"https://api.github.com/repos/doccano/doccano/statuses/{sha}","languages_url":"https://api.github.com/repos/doccano/doccano/languages","stargazers_url":"https://api.github.com/repos/doccano/doccano/stargazers","contributors_url":"https://api.github.com/repos/doccano/doccano/contributors","subscribers_url":"https://api.github.com/repos/doccano/doccano/subscribers","subscription_url":"https://api.github.com/repos/doccano/doccano/subscription","commits_url":"https://api.github.com/repos/doccano/doccano/commits{/sha}","git_commits_url":"https://api.github.com/repos/doccano/doccano/git/commits{/sha}","comments_url":"https://api.github.com/repos/doccano/doccano/comments{/number}","issue_comment_url":"https://api.github.com/repos/doccano/doccano/issues/comments{/number}","contents_url":"https://api.github.com/repos/doccano/doccano/contents/{+path}","compare_url":"https://api.github.com/repos/doccano/doccano/compare/{base}...{head}","merges_url":"https://api.github.com/repos/doccano/doccano/merges","archive_url":"https://api.github.com/repos/doccano/doccano/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/doccano/doccano/downloads","issues_url":"https://api.github.com/repos/doccano/doccano/issues{/number}","pulls_url":"https://api.github.com/repos/doccano/doccano/pulls{/number}","milestones_url":"https://api.github.com/repos/doccano/doccano/milestones{/number}","notifications_url":"https://api.github.com/repos/doccano/doccano/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/doccano/doccano/labels{/name}","releases_url":"https://api.github.com/repos/doccano/doccano/releases{/id}","deployments_url":"https://api.github.com/repos/doccano/doccano/deployments","created_at":"2018-05-09T06:10:05Z","updated_at":"2023-01-19T08:54:15Z","pushed_at":"2023-01-13T04:29:51Z","git_url":"git://github.com/doccano/doccano.git","ssh_url":"git@github.com:doccano/doccano.git","clone_url":"https://github.com/doccano/doccano.git","svn_url":"https://github.com/doccano/doccano","homepage":"https://doccano.herokuapp.com","size":56100,"stargazers_count":7214,"watchers_count":7214,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1473,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":200,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["annotation-tool","data-labeling","dataset","datasets","machine-learning","natural-language-processing","nuxt","nuxtjs","python","text-annotation","vue","vuejs"],"visibility":"public","forks":1473,"open_issues":200,"watchers":7214,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"I found some useful links: \r\n[prodi.gy](https://prodi.gy/demo)\r\n[Chinese-Annotator](https://github.com/deepwel/Chinese-Annotator)\r\n\r\nThe prodigy using active learning structure, and automatic push some hard samples to be labeled (This is very difficult).\r\nThe Chinese-Annotator using the same structure of prodigy, but it's no longer development.\r\n\r\nI am very interested in the active learning parts, is there any possible to write some todo list or development planÔºü\r\n\r\n","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/26/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/doccano/doccano/issues/26/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/451026063","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-451026063","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":451026063,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTAyNjA2Mw==","user":{"login":"DSLituiev","id":8426290,"node_id":"MDQ6VXNlcjg0MjYyOTA=","avatar_url":"https://avatars.githubusercontent.com/u/8426290?v=4","gravatar_id":"","url":"https://api.github.com/users/DSLituiev","html_url":"https://github.com/DSLituiev","followers_url":"https://api.github.com/users/DSLituiev/followers","following_url":"https://api.github.com/users/DSLituiev/following{/other_user}","gists_url":"https://api.github.com/users/DSLituiev/gists{/gist_id}","starred_url":"https://api.github.com/users/DSLituiev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DSLituiev/subscriptions","organizations_url":"https://api.github.com/users/DSLituiev/orgs","repos_url":"https://api.github.com/users/DSLituiev/repos","events_url":"https://api.github.com/users/DSLituiev/events{/privacy}","received_events_url":"https://api.github.com/users/DSLituiev/received_events","type":"User","site_admin":false},"created_at":"2019-01-03T00:21:57Z","updated_at":"2019-01-03T00:21:57Z","author_association":"NONE","body":"@icoxfog417 The piece of research is really interesting. However, practically speaking IMO people still will be using active learning even in face of these considerations because it is much much less expensive. I would request you to reconsider including this pull request.","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/451026063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"DSLituiev","id":8426290,"node_id":"MDQ6VXNlcjg0MjYyOTA=","avatar_url":"https://avatars.githubusercontent.com/u/8426290?v=4","gravatar_id":"","url":"https://api.github.com/users/DSLituiev","html_url":"https://github.com/DSLituiev","followers_url":"https://api.github.com/users/DSLituiev/followers","following_url":"https://api.github.com/users/DSLituiev/following{/other_user}","gists_url":"https://api.github.com/users/DSLituiev/gists{/gist_id}","starred_url":"https://api.github.com/users/DSLituiev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DSLituiev/subscriptions","organizations_url":"https://api.github.com/users/DSLituiev/orgs","repos_url":"https://api.github.com/users/DSLituiev/repos","events_url":"https://api.github.com/users/DSLituiev/events{/privacy}","received_events_url":"https://api.github.com/users/DSLituiev/received_events","type":"User","site_admin":false}},{"id":2051493169,"node_id":"MDE0Ok1lbnRpb25lZEV2ZW50MjA1MTQ5MzE2OQ==","url":"https://api.github.com/repos/doccano/doccano/issues/events/2051493169","actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"event":"mentioned","commit_id":null,"commit_url":null,"created_at":"2019-01-03T00:21:57Z","performed_via_github_app":null},{"id":2051493170,"node_id":"MDE1OlN1YnNjcmliZWRFdmVudDIwNTE0OTMxNzA=","url":"https://api.github.com/repos/doccano/doccano/issues/events/2051493170","actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"event":"subscribed","commit_id":null,"commit_url":null,"created_at":"2019-01-03T00:21:57Z","performed_via_github_app":null},{"id":2132218964,"node_id":"MDEyOkxhYmVsZWRFdmVudDIxMzIyMTg5NjQ=","url":"https://api.github.com/repos/doccano/doccano/issues/events/2132218964","actor":{"login":"Hironsan","id":6737785,"node_id":"MDQ6VXNlcjY3Mzc3ODU=","avatar_url":"https://avatars.githubusercontent.com/u/6737785?v=4","gravatar_id":"","url":"https://api.github.com/users/Hironsan","html_url":"https://github.com/Hironsan","followers_url":"https://api.github.com/users/Hironsan/followers","following_url":"https://api.github.com/users/Hironsan/following{/other_user}","gists_url":"https://api.github.com/users/Hironsan/gists{/gist_id}","starred_url":"https://api.github.com/users/Hironsan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hironsan/subscriptions","organizations_url":"https://api.github.com/users/Hironsan/orgs","repos_url":"https://api.github.com/users/Hironsan/repos","events_url":"https://api.github.com/users/Hironsan/events{/privacy}","received_events_url":"https://api.github.com/users/Hironsan/received_events","type":"User","site_admin":false},"event":"labeled","commit_id":null,"commit_url":null,"created_at":"2019-02-12T00:26:43Z","label":{"name":"feature request","color":"FBC904"},"performed_via_github_app":null},{"id":2132218965,"node_id":"MDE0OlVubGFiZWxlZEV2ZW50MjEzMjIxODk2NQ==","url":"https://api.github.com/repos/doccano/doccano/issues/events/2132218965","actor":{"login":"Hironsan","id":6737785,"node_id":"MDQ6VXNlcjY3Mzc3ODU=","avatar_url":"https://avatars.githubusercontent.com/u/6737785?v=4","gravatar_id":"","url":"https://api.github.com/users/Hironsan","html_url":"https://github.com/Hironsan","followers_url":"https://api.github.com/users/Hironsan/followers","following_url":"https://api.github.com/users/Hironsan/following{/other_user}","gists_url":"https://api.github.com/users/Hironsan/gists{/gist_id}","starred_url":"https://api.github.com/users/Hironsan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hironsan/subscriptions","organizations_url":"https://api.github.com/users/Hironsan/orgs","repos_url":"https://api.github.com/users/Hironsan/repos","events_url":"https://api.github.com/users/Hironsan/events{/privacy}","received_events_url":"https://api.github.com/users/Hironsan/received_events","type":"User","site_admin":false},"event":"unlabeled","commit_id":null,"commit_url":null,"created_at":"2019-02-12T00:26:43Z","label":{"name":"enhancement","color":"a2eeef"},"performed_via_github_app":null},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/478348320","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-478348320","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":478348320,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODM0ODMyMA==","user":{"login":"vivekverma239","id":22596075,"node_id":"MDQ6VXNlcjIyNTk2MDc1","avatar_url":"https://avatars.githubusercontent.com/u/22596075?v=4","gravatar_id":"","url":"https://api.github.com/users/vivekverma239","html_url":"https://github.com/vivekverma239","followers_url":"https://api.github.com/users/vivekverma239/followers","following_url":"https://api.github.com/users/vivekverma239/following{/other_user}","gists_url":"https://api.github.com/users/vivekverma239/gists{/gist_id}","starred_url":"https://api.github.com/users/vivekverma239/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vivekverma239/subscriptions","organizations_url":"https://api.github.com/users/vivekverma239/orgs","repos_url":"https://api.github.com/users/vivekverma239/repos","events_url":"https://api.github.com/users/vivekverma239/events{/privacy}","received_events_url":"https://api.github.com/users/vivekverma239/received_events","type":"User","site_admin":false},"created_at":"2019-03-31T14:47:37Z","updated_at":"2019-03-31T14:47:37Z","author_association":"NONE","body":"Hii, is there anyone working on this feature?","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/478348320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"vivekverma239","id":22596075,"node_id":"MDQ6VXNlcjIyNTk2MDc1","avatar_url":"https://avatars.githubusercontent.com/u/22596075?v=4","gravatar_id":"","url":"https://api.github.com/users/vivekverma239","html_url":"https://github.com/vivekverma239","followers_url":"https://api.github.com/users/vivekverma239/followers","following_url":"https://api.github.com/users/vivekverma239/following{/other_user}","gists_url":"https://api.github.com/users/vivekverma239/gists{/gist_id}","starred_url":"https://api.github.com/users/vivekverma239/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vivekverma239/subscriptions","organizations_url":"https://api.github.com/users/vivekverma239/orgs","repos_url":"https://api.github.com/users/vivekverma239/repos","events_url":"https://api.github.com/users/vivekverma239/events{/privacy}","received_events_url":"https://api.github.com/users/vivekverma239/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/489924577","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-489924577","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":489924577,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTkyNDU3Nw==","user":{"login":"Hironsan","id":6737785,"node_id":"MDQ6VXNlcjY3Mzc3ODU=","avatar_url":"https://avatars.githubusercontent.com/u/6737785?v=4","gravatar_id":"","url":"https://api.github.com/users/Hironsan","html_url":"https://github.com/Hironsan","followers_url":"https://api.github.com/users/Hironsan/followers","following_url":"https://api.github.com/users/Hironsan/following{/other_user}","gists_url":"https://api.github.com/users/Hironsan/gists{/gist_id}","starred_url":"https://api.github.com/users/Hironsan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hironsan/subscriptions","organizations_url":"https://api.github.com/users/Hironsan/orgs","repos_url":"https://api.github.com/users/Hironsan/repos","events_url":"https://api.github.com/users/Hironsan/events{/privacy}","received_events_url":"https://api.github.com/users/Hironsan/received_events","type":"User","site_admin":false},"created_at":"2019-05-07T06:21:25Z","updated_at":"2019-05-07T06:21:25Z","author_association":"MEMBER","body":"The internal processing of doccano is realized by Web API. Therefore, the annotation from the program can be written as follows:\r\n\r\n```python\r\nimport requests\r\n\r\n\r\nclass Client(object):\r\n\r\n    def __init__(self, entrypoint='http://127.0.0.1:8000', username=None, password=None):\r\n        self.entrypoint = entrypoint\r\n        self.client = requests.Session()\r\n        self.client.auth = (username, password)\r\n\r\n    def fetch_projects(self):\r\n        url = f'{self.entrypoint}/v1/projects'\r\n        response = self.client.get(url)\r\n        return response\r\n\r\n    def create_project(self, name, description, project_type):\r\n        mapping = {'SequenceLabeling': 'SequenceLabelingProject',\r\n                   'DocumentClassification': 'TextClassificationProject',\r\n                   'Seq2seq': 'Seq2seqProject'}\r\n        data = {\r\n            'name': name,\r\n            'project_type': project_type,\r\n            'description': description,\r\n            'guideline': 'Hello',\r\n            'resourcetype': mapping[project_type]\r\n        }\r\n        url = f'{self.entrypoint}/v1/projects'\r\n        response = self.client.post(url, json=data)\r\n        return response.json()\r\n\r\n    def fetch_documents(self, project_id):\r\n        url = f'{self.entrypoint}/v1/projects/{project_id}/docs'\r\n        response = self.client.get(url)\r\n        return response.json()\r\n\r\n    def add_document(self, project_id, text):\r\n        data = {\r\n            'text': text\r\n        }\r\n        url = f'{self.entrypoint}/v1/projects/{project_id}/docs'\r\n        response = self.client.post(url, json=data)\r\n        return response.json()\r\n\r\n    def fetch_labels(self, project_id):\r\n        url = f'{self.entrypoint}/v1/projects/{project_id}/labels'\r\n        response = self.client.get(url)\r\n        return response.json()\r\n\r\n    def add_label(self, project_id, text):\r\n        data = {\r\n            'text': text\r\n        }\r\n        url = f'{self.entrypoint}/v1/projects/{project_id}/labels'\r\n        response = self.client.post(url, json=data)\r\n        return response.json()\r\n\r\n    def fetch_annotations(self, project_id, doc_id):\r\n        url = f'{self.entrypoint}/v1/projects/{project_id}/docs/{doc_id}/annotations'\r\n        response = self.client.get(url)\r\n        return response.json()\r\n\r\n    def annotate(self, project_id, doc_id, data):\r\n        url = f'{self.entrypoint}/v1/projects/{project_id}/docs/{doc_id}/annotations'\r\n        response = self.client.post(url, json=data)\r\n        return response.json()\r\n\r\n\r\nif __name__ == '__main__':\r\n    client = Client(username='username', password='password')\r\n    project = client.create_project(name='NER project',\r\n                                    description='example',\r\n                                    project_type='SequenceLabeling')\r\n    doc = client.add_document(project_id=project['id'],\r\n                              text='Obama')\r\n    label = client.add_label(project_id=project['id'],\r\n                             text='PERSON')\r\n    data = {\r\n        'start_offset': 0,\r\n        'end_offset': 5,\r\n        'label': label['id'],\r\n        'prob': 0.8\r\n    }\r\n    client.annotate(project_id=project['id'],\r\n                    doc_id=doc['id'],\r\n                    data=data)\r\n    annotations = client.fetch_annotations(project_id=project['id'],\r\n                                           doc_id=doc['id'])\r\n```\r\n\r\nIn the future, we plan to enable automatic labeling from the web.","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/489924577/reactions","total_count":4,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":4,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"Hironsan","id":6737785,"node_id":"MDQ6VXNlcjY3Mzc3ODU=","avatar_url":"https://avatars.githubusercontent.com/u/6737785?v=4","gravatar_id":"","url":"https://api.github.com/users/Hironsan","html_url":"https://github.com/Hironsan","followers_url":"https://api.github.com/users/Hironsan/followers","following_url":"https://api.github.com/users/Hironsan/following{/other_user}","gists_url":"https://api.github.com/users/Hironsan/gists{/gist_id}","starred_url":"https://api.github.com/users/Hironsan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hironsan/subscriptions","organizations_url":"https://api.github.com/users/Hironsan/orgs","repos_url":"https://api.github.com/users/Hironsan/repos","events_url":"https://api.github.com/users/Hironsan/events{/privacy}","received_events_url":"https://api.github.com/users/Hironsan/received_events","type":"User","site_admin":false}},{"actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"created_at":"2019-05-09T00:50:36Z","updated_at":"2019-05-09T00:50:36Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/doccano/doccano/issues/191","repository_url":"https://api.github.com/repos/doccano/doccano","labels_url":"https://api.github.com/repos/doccano/doccano/issues/191/labels{/name}","comments_url":"https://api.github.com/repos/doccano/doccano/issues/191/comments","events_url":"https://api.github.com/repos/doccano/doccano/issues/191/events","html_url":"https://github.com/doccano/doccano/issues/191","id":441988748,"node_id":"MDU6SXNzdWU0NDE5ODg3NDg=","number":191,"title":"Feature request: Add Auto-labeling","user":{"login":"erip","id":2348806,"node_id":"MDQ6VXNlcjIzNDg4MDY=","avatar_url":"https://avatars.githubusercontent.com/u/2348806?v=4","gravatar_id":"","url":"https://api.github.com/users/erip","html_url":"https://github.com/erip","followers_url":"https://api.github.com/users/erip/followers","following_url":"https://api.github.com/users/erip/following{/other_user}","gists_url":"https://api.github.com/users/erip/gists{/gist_id}","starred_url":"https://api.github.com/users/erip/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erip/subscriptions","organizations_url":"https://api.github.com/users/erip/orgs","repos_url":"https://api.github.com/users/erip/repos","events_url":"https://api.github.com/users/erip/events{/privacy}","received_events_url":"https://api.github.com/users/erip/received_events","type":"User","site_admin":false},"labels":[{"id":1203581726,"node_id":"MDU6TGFiZWwxMjAzNTgxNzI2","url":"https://api.github.com/repos/doccano/doccano/labels/feature%20request","name":"feature request","color":"FBC904","default":false,"description":"feature request for doccano"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-05-08T23:41:47Z","updated_at":"2021-02-19T07:04:56Z","closed_at":"2021-02-19T07:04:56Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":132709824,"node_id":"MDEwOlJlcG9zaXRvcnkxMzI3MDk4MjQ=","name":"doccano","full_name":"doccano/doccano","private":false,"owner":{"login":"doccano","id":58067660,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU4MDY3NjYw","avatar_url":"https://avatars.githubusercontent.com/u/58067660?v=4","gravatar_id":"","url":"https://api.github.com/users/doccano","html_url":"https://github.com/doccano","followers_url":"https://api.github.com/users/doccano/followers","following_url":"https://api.github.com/users/doccano/following{/other_user}","gists_url":"https://api.github.com/users/doccano/gists{/gist_id}","starred_url":"https://api.github.com/users/doccano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doccano/subscriptions","organizations_url":"https://api.github.com/users/doccano/orgs","repos_url":"https://api.github.com/users/doccano/repos","events_url":"https://api.github.com/users/doccano/events{/privacy}","received_events_url":"https://api.github.com/users/doccano/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/doccano/doccano","description":"Open source annotation tool for machine learning practitioners.","fork":false,"url":"https://api.github.com/repos/doccano/doccano","forks_url":"https://api.github.com/repos/doccano/doccano/forks","keys_url":"https://api.github.com/repos/doccano/doccano/keys{/key_id}","collaborators_url":"https://api.github.com/repos/doccano/doccano/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/doccano/doccano/teams","hooks_url":"https://api.github.com/repos/doccano/doccano/hooks","issue_events_url":"https://api.github.com/repos/doccano/doccano/issues/events{/number}","events_url":"https://api.github.com/repos/doccano/doccano/events","assignees_url":"https://api.github.com/repos/doccano/doccano/assignees{/user}","branches_url":"https://api.github.com/repos/doccano/doccano/branches{/branch}","tags_url":"https://api.github.com/repos/doccano/doccano/tags","blobs_url":"https://api.github.com/repos/doccano/doccano/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/doccano/doccano/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/doccano/doccano/git/refs{/sha}","trees_url":"https://api.github.com/repos/doccano/doccano/git/trees{/sha}","statuses_url":"https://api.github.com/repos/doccano/doccano/statuses/{sha}","languages_url":"https://api.github.com/repos/doccano/doccano/languages","stargazers_url":"https://api.github.com/repos/doccano/doccano/stargazers","contributors_url":"https://api.github.com/repos/doccano/doccano/contributors","subscribers_url":"https://api.github.com/repos/doccano/doccano/subscribers","subscription_url":"https://api.github.com/repos/doccano/doccano/subscription","commits_url":"https://api.github.com/repos/doccano/doccano/commits{/sha}","git_commits_url":"https://api.github.com/repos/doccano/doccano/git/commits{/sha}","comments_url":"https://api.github.com/repos/doccano/doccano/comments{/number}","issue_comment_url":"https://api.github.com/repos/doccano/doccano/issues/comments{/number}","contents_url":"https://api.github.com/repos/doccano/doccano/contents/{+path}","compare_url":"https://api.github.com/repos/doccano/doccano/compare/{base}...{head}","merges_url":"https://api.github.com/repos/doccano/doccano/merges","archive_url":"https://api.github.com/repos/doccano/doccano/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/doccano/doccano/downloads","issues_url":"https://api.github.com/repos/doccano/doccano/issues{/number}","pulls_url":"https://api.github.com/repos/doccano/doccano/pulls{/number}","milestones_url":"https://api.github.com/repos/doccano/doccano/milestones{/number}","notifications_url":"https://api.github.com/repos/doccano/doccano/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/doccano/doccano/labels{/name}","releases_url":"https://api.github.com/repos/doccano/doccano/releases{/id}","deployments_url":"https://api.github.com/repos/doccano/doccano/deployments","created_at":"2018-05-09T06:10:05Z","updated_at":"2023-01-19T08:54:15Z","pushed_at":"2023-01-13T04:29:51Z","git_url":"git://github.com/doccano/doccano.git","ssh_url":"git@github.com:doccano/doccano.git","clone_url":"https://github.com/doccano/doccano.git","svn_url":"https://github.com/doccano/doccano","homepage":"https://doccano.herokuapp.com","size":56100,"stargazers_count":7214,"watchers_count":7214,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1473,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":200,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["annotation-tool","data-labeling","dataset","datasets","machine-learning","natural-language-processing","nuxt","nuxtjs","python","text-annotation","vue","vuejs"],"visibility":"public","forks":1473,"open_issues":200,"watchers":7214,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"### Describe the problem\r\n\r\nTo help annotators, the system should adapt as labels are added to sentences.\r\n\r\nAs an initial task, I think NER autolabeling makes most sense. Currently the system has no dependencies on a tool for training NER models (like SpaCy or Flair), so it's worth discussion about how to prevent a user from being locked in with one or the other. It's also unclear how and when these models should be trained (online? minibatching?). How can a user specify a base model (or language) from which to begin training? \r\n\r\nI think this issue can serve as a good place for discussion.","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/191/reactions","total_count":5,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":2,"eyes":0},"timeline_url":"https://api.github.com/repos/doccano/doccano/issues/191/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"id":2453917766,"node_id":"MDE1OlJlZmVyZW5jZWRFdmVudDI0NTM5MTc3NjY=","url":"https://api.github.com/repos/doccano/doccano/issues/events/2453917766","actor":{"login":"omriallouche","id":1919629,"node_id":"MDQ6VXNlcjE5MTk2Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/1919629?v=4","gravatar_id":"","url":"https://api.github.com/users/omriallouche","html_url":"https://github.com/omriallouche","followers_url":"https://api.github.com/users/omriallouche/followers","following_url":"https://api.github.com/users/omriallouche/following{/other_user}","gists_url":"https://api.github.com/users/omriallouche/gists{/gist_id}","starred_url":"https://api.github.com/users/omriallouche/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omriallouche/subscriptions","organizations_url":"https://api.github.com/users/omriallouche/orgs","repos_url":"https://api.github.com/users/omriallouche/repos","events_url":"https://api.github.com/users/omriallouche/events{/privacy}","received_events_url":"https://api.github.com/users/omriallouche/received_events","type":"User","site_admin":false},"event":"referenced","commit_id":"38f2428d886c2db45db7637677dbc55989b05c68","commit_url":"https://api.github.com/repos/gong-io/doccano/commits/38f2428d886c2db45db7637677dbc55989b05c68","created_at":"2019-07-02T10:40:37Z","performed_via_github_app":null},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/527475073","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-527475073","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":527475073,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzQ3NTA3Mw==","user":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"created_at":"2019-09-03T14:08:41Z","updated_at":"2019-09-03T14:08:41Z","author_association":"CONTRIBUTOR","body":"Continue the discussion on  #6.","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/527475073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false}},{"id":2603712200,"node_id":"MDExOkNsb3NlZEV2ZW50MjYwMzcxMjIwMA==","url":"https://api.github.com/repos/doccano/doccano/issues/events/2603712200","actor":{"login":"icoxfog417","id":544269,"node_id":"MDQ6VXNlcjU0NDI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/544269?v=4","gravatar_id":"","url":"https://api.github.com/users/icoxfog417","html_url":"https://github.com/icoxfog417","followers_url":"https://api.github.com/users/icoxfog417/followers","following_url":"https://api.github.com/users/icoxfog417/following{/other_user}","gists_url":"https://api.github.com/users/icoxfog417/gists{/gist_id}","starred_url":"https://api.github.com/users/icoxfog417/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icoxfog417/subscriptions","organizations_url":"https://api.github.com/users/icoxfog417/orgs","repos_url":"https://api.github.com/users/icoxfog417/repos","events_url":"https://api.github.com/users/icoxfog417/events{/privacy}","received_events_url":"https://api.github.com/users/icoxfog417/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2019-09-03T14:08:41Z","state_reason":null,"performed_via_github_app":null},{"actor":{"login":"rbagd","id":1479558,"node_id":"MDQ6VXNlcjE0Nzk1NTg=","avatar_url":"https://avatars.githubusercontent.com/u/1479558?v=4","gravatar_id":"","url":"https://api.github.com/users/rbagd","html_url":"https://github.com/rbagd","followers_url":"https://api.github.com/users/rbagd/followers","following_url":"https://api.github.com/users/rbagd/following{/other_user}","gists_url":"https://api.github.com/users/rbagd/gists{/gist_id}","starred_url":"https://api.github.com/users/rbagd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbagd/subscriptions","organizations_url":"https://api.github.com/users/rbagd/orgs","repos_url":"https://api.github.com/users/rbagd/repos","events_url":"https://api.github.com/users/rbagd/events{/privacy}","received_events_url":"https://api.github.com/users/rbagd/received_events","type":"User","site_admin":false},"created_at":"2019-10-02T11:57:31Z","updated_at":"2019-10-02T11:57:31Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/doccano/doccano/issues/299","repository_url":"https://api.github.com/repos/doccano/doccano","labels_url":"https://api.github.com/repos/doccano/doccano/issues/299/labels{/name}","comments_url":"https://api.github.com/repos/doccano/doccano/issues/299/comments","events_url":"https://api.github.com/repos/doccano/doccano/issues/299/events","html_url":"https://github.com/doccano/doccano/issues/299","id":470663148,"node_id":"MDU6SXNzdWU0NzA2NjMxNDg=","number":299,"title":"Any documentation about using as REST service","user":{"login":"mhf-ir","id":1172526,"node_id":"MDQ6VXNlcjExNzI1MjY=","avatar_url":"https://avatars.githubusercontent.com/u/1172526?v=4","gravatar_id":"","url":"https://api.github.com/users/mhf-ir","html_url":"https://github.com/mhf-ir","followers_url":"https://api.github.com/users/mhf-ir/followers","following_url":"https://api.github.com/users/mhf-ir/following{/other_user}","gists_url":"https://api.github.com/users/mhf-ir/gists{/gist_id}","starred_url":"https://api.github.com/users/mhf-ir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mhf-ir/subscriptions","organizations_url":"https://api.github.com/users/mhf-ir/orgs","repos_url":"https://api.github.com/users/mhf-ir/repos","events_url":"https://api.github.com/users/mhf-ir/events{/privacy}","received_events_url":"https://api.github.com/users/mhf-ir/received_events","type":"User","site_admin":false},"labels":[{"id":927327721,"node_id":"MDU6TGFiZWw5MjczMjc3MjE=","url":"https://api.github.com/repos/doccano/doccano/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"Improvement on existing feature"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2019-07-20T11:03:55Z","updated_at":"2022-02-24T08:06:07Z","closed_at":"2020-03-27T05:57:57Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":132709824,"node_id":"MDEwOlJlcG9zaXRvcnkxMzI3MDk4MjQ=","name":"doccano","full_name":"doccano/doccano","private":false,"owner":{"login":"doccano","id":58067660,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU4MDY3NjYw","avatar_url":"https://avatars.githubusercontent.com/u/58067660?v=4","gravatar_id":"","url":"https://api.github.com/users/doccano","html_url":"https://github.com/doccano","followers_url":"https://api.github.com/users/doccano/followers","following_url":"https://api.github.com/users/doccano/following{/other_user}","gists_url":"https://api.github.com/users/doccano/gists{/gist_id}","starred_url":"https://api.github.com/users/doccano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doccano/subscriptions","organizations_url":"https://api.github.com/users/doccano/orgs","repos_url":"https://api.github.com/users/doccano/repos","events_url":"https://api.github.com/users/doccano/events{/privacy}","received_events_url":"https://api.github.com/users/doccano/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/doccano/doccano","description":"Open source annotation tool for machine learning practitioners.","fork":false,"url":"https://api.github.com/repos/doccano/doccano","forks_url":"https://api.github.com/repos/doccano/doccano/forks","keys_url":"https://api.github.com/repos/doccano/doccano/keys{/key_id}","collaborators_url":"https://api.github.com/repos/doccano/doccano/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/doccano/doccano/teams","hooks_url":"https://api.github.com/repos/doccano/doccano/hooks","issue_events_url":"https://api.github.com/repos/doccano/doccano/issues/events{/number}","events_url":"https://api.github.com/repos/doccano/doccano/events","assignees_url":"https://api.github.com/repos/doccano/doccano/assignees{/user}","branches_url":"https://api.github.com/repos/doccano/doccano/branches{/branch}","tags_url":"https://api.github.com/repos/doccano/doccano/tags","blobs_url":"https://api.github.com/repos/doccano/doccano/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/doccano/doccano/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/doccano/doccano/git/refs{/sha}","trees_url":"https://api.github.com/repos/doccano/doccano/git/trees{/sha}","statuses_url":"https://api.github.com/repos/doccano/doccano/statuses/{sha}","languages_url":"https://api.github.com/repos/doccano/doccano/languages","stargazers_url":"https://api.github.com/repos/doccano/doccano/stargazers","contributors_url":"https://api.github.com/repos/doccano/doccano/contributors","subscribers_url":"https://api.github.com/repos/doccano/doccano/subscribers","subscription_url":"https://api.github.com/repos/doccano/doccano/subscription","commits_url":"https://api.github.com/repos/doccano/doccano/commits{/sha}","git_commits_url":"https://api.github.com/repos/doccano/doccano/git/commits{/sha}","comments_url":"https://api.github.com/repos/doccano/doccano/comments{/number}","issue_comment_url":"https://api.github.com/repos/doccano/doccano/issues/comments{/number}","contents_url":"https://api.github.com/repos/doccano/doccano/contents/{+path}","compare_url":"https://api.github.com/repos/doccano/doccano/compare/{base}...{head}","merges_url":"https://api.github.com/repos/doccano/doccano/merges","archive_url":"https://api.github.com/repos/doccano/doccano/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/doccano/doccano/downloads","issues_url":"https://api.github.com/repos/doccano/doccano/issues{/number}","pulls_url":"https://api.github.com/repos/doccano/doccano/pulls{/number}","milestones_url":"https://api.github.com/repos/doccano/doccano/milestones{/number}","notifications_url":"https://api.github.com/repos/doccano/doccano/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/doccano/doccano/labels{/name}","releases_url":"https://api.github.com/repos/doccano/doccano/releases{/id}","deployments_url":"https://api.github.com/repos/doccano/doccano/deployments","created_at":"2018-05-09T06:10:05Z","updated_at":"2023-01-19T08:54:15Z","pushed_at":"2023-01-13T04:29:51Z","git_url":"git://github.com/doccano/doccano.git","ssh_url":"git@github.com:doccano/doccano.git","clone_url":"https://github.com/doccano/doccano.git","svn_url":"https://github.com/doccano/doccano","homepage":"https://doccano.herokuapp.com","size":56100,"stargazers_count":7214,"watchers_count":7214,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1473,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":200,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["annotation-tool","data-labeling","dataset","datasets","machine-learning","natural-language-processing","nuxt","nuxtjs","python","text-annotation","vue","vuejs"],"visibility":"public","forks":1473,"open_issues":200,"watchers":7214,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"How could use as REST API service. Send raw text and doccano response the parsed data?","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/doccano/doccano/issues/299/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/540318337","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-540318337","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":540318337,"node_id":"MDEyOklzc3VlQ29tbWVudDU0MDMxODMzNw==","user":{"login":"swicaksono","id":17685502,"node_id":"MDQ6VXNlcjE3Njg1NTAy","avatar_url":"https://avatars.githubusercontent.com/u/17685502?v=4","gravatar_id":"","url":"https://api.github.com/users/swicaksono","html_url":"https://github.com/swicaksono","followers_url":"https://api.github.com/users/swicaksono/followers","following_url":"https://api.github.com/users/swicaksono/following{/other_user}","gists_url":"https://api.github.com/users/swicaksono/gists{/gist_id}","starred_url":"https://api.github.com/users/swicaksono/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swicaksono/subscriptions","organizations_url":"https://api.github.com/users/swicaksono/orgs","repos_url":"https://api.github.com/users/swicaksono/repos","events_url":"https://api.github.com/users/swicaksono/events{/privacy}","received_events_url":"https://api.github.com/users/swicaksono/received_events","type":"User","site_admin":false},"created_at":"2019-10-10T03:10:21Z","updated_at":"2019-10-10T03:10:21Z","author_association":"NONE","body":"> The internal processing of doccano is realized by Web API. Therefore, the annotation from the program can be written as follows:\r\n> \r\n> ```python\r\n> import requests\r\n> \r\n> \r\n> class Client(object):\r\n> \r\n>     def __init__(self, entrypoint='http://127.0.0.1:8000', username=None, password=None):\r\n>         self.entrypoint = entrypoint\r\n>         self.client = requests.Session()\r\n>         self.client.auth = (username, password)\r\n> \r\n>     def fetch_projects(self):\r\n>         url = f'{self.entrypoint}/v1/projects'\r\n>         response = self.client.get(url)\r\n>         return response\r\n> \r\n>     def create_project(self, name, description, project_type):\r\n>         mapping = {'SequenceLabeling': 'SequenceLabelingProject',\r\n>                    'DocumentClassification': 'TextClassificationProject',\r\n>                    'Seq2seq': 'Seq2seqProject'}\r\n>         data = {\r\n>             'name': name,\r\n>             'project_type': project_type,\r\n>             'description': description,\r\n>             'guideline': 'Hello',\r\n>             'resourcetype': mapping[project_type]\r\n>         }\r\n>         url = f'{self.entrypoint}/v1/projects'\r\n>         response = self.client.post(url, json=data)\r\n>         return response.json()\r\n> \r\n>     def fetch_documents(self, project_id):\r\n>         url = f'{self.entrypoint}/v1/projects/{project_id}/docs'\r\n>         response = self.client.get(url)\r\n>         return response.json()\r\n> \r\n>     def add_document(self, project_id, text):\r\n>         data = {\r\n>             'text': text\r\n>         }\r\n>         url = f'{self.entrypoint}/v1/projects/{project_id}/docs'\r\n>         response = self.client.post(url, json=data)\r\n>         return response.json()\r\n> \r\n>     def fetch_labels(self, project_id):\r\n>         url = f'{self.entrypoint}/v1/projects/{project_id}/labels'\r\n>         response = self.client.get(url)\r\n>         return response.json()\r\n> \r\n>     def add_label(self, project_id, text):\r\n>         data = {\r\n>             'text': text\r\n>         }\r\n>         url = f'{self.entrypoint}/v1/projects/{project_id}/labels'\r\n>         response = self.client.post(url, json=data)\r\n>         return response.json()\r\n> \r\n>     def fetch_annotations(self, project_id, doc_id):\r\n>         url = f'{self.entrypoint}/v1/projects/{project_id}/docs/{doc_id}/annotations'\r\n>         response = self.client.get(url)\r\n>         return response.json()\r\n> \r\n>     def annotate(self, project_id, doc_id, data):\r\n>         url = f'{self.entrypoint}/v1/projects/{project_id}/docs/{doc_id}/annotations'\r\n>         response = self.client.post(url, json=data)\r\n>         return response.json()\r\n> \r\n> \r\n> if __name__ == '__main__':\r\n>     client = Client(username='username', password='password')\r\n>     project = client.create_project(name='NER project',\r\n>                                     description='example',\r\n>                                     project_type='SequenceLabeling')\r\n>     doc = client.add_document(project_id=project['id'],\r\n>                               text='Obama')\r\n>     label = client.add_label(project_id=project['id'],\r\n>                              text='PERSON')\r\n>     data = {\r\n>         'start_offset': 0,\r\n>         'end_offset': 5,\r\n>         'label': label['id'],\r\n>         'prob': 0.8\r\n>     }\r\n>     client.annotate(project_id=project['id'],\r\n>                     doc_id=doc['id'],\r\n>                     data=data)\r\n>     annotations = client.fetch_annotations(project_id=project['id'],\r\n>                                            doc_id=doc['id'])\r\n> ```\r\n> \r\n> In the future, we plan to enable automatic labeling from the web.\r\n\r\nHi, I implemented this service to automatically fetch any document that already annotated. But when I run the program, why it always get Response 403? This is quite strange because when I go to the rest Django endpoint in a browser i.e v1/projects, it is not returning any error.","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/540318337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"swicaksono","id":17685502,"node_id":"MDQ6VXNlcjE3Njg1NTAy","avatar_url":"https://avatars.githubusercontent.com/u/17685502?v=4","gravatar_id":"","url":"https://api.github.com/users/swicaksono","html_url":"https://github.com/swicaksono","followers_url":"https://api.github.com/users/swicaksono/followers","following_url":"https://api.github.com/users/swicaksono/following{/other_user}","gists_url":"https://api.github.com/users/swicaksono/gists{/gist_id}","starred_url":"https://api.github.com/users/swicaksono/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swicaksono/subscriptions","organizations_url":"https://api.github.com/users/swicaksono/orgs","repos_url":"https://api.github.com/users/swicaksono/repos","events_url":"https://api.github.com/users/swicaksono/events{/privacy}","received_events_url":"https://api.github.com/users/swicaksono/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/562495532","html_url":"https://github.com/doccano/doccano/issues/6#issuecomment-562495532","issue_url":"https://api.github.com/repos/doccano/doccano/issues/6","id":562495532,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjQ5NTUzMg==","user":{"login":"shuiruge","id":2098947,"node_id":"MDQ6VXNlcjIwOTg5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/2098947?v=4","gravatar_id":"","url":"https://api.github.com/users/shuiruge","html_url":"https://github.com/shuiruge","followers_url":"https://api.github.com/users/shuiruge/followers","following_url":"https://api.github.com/users/shuiruge/following{/other_user}","gists_url":"https://api.github.com/users/shuiruge/gists{/gist_id}","starred_url":"https://api.github.com/users/shuiruge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shuiruge/subscriptions","organizations_url":"https://api.github.com/users/shuiruge/orgs","repos_url":"https://api.github.com/users/shuiruge/repos","events_url":"https://api.github.com/users/shuiruge/events{/privacy}","received_events_url":"https://api.github.com/users/shuiruge/received_events","type":"User","site_admin":false},"created_at":"2019-12-06T09:16:51Z","updated_at":"2019-12-06T09:18:26Z","author_association":"NONE","body":"> > The internal processing of doccano is realized by Web API. Therefore, the annotation from the program can be written as follows:\r\n> > ```python\r\n> > import requests\r\n> > \r\n> > \r\n> > class Client(object):\r\n> > \r\n> >     def __init__(self, entrypoint='http://127.0.0.1:8000', username=None, password=None):\r\n> >         self.entrypoint = entrypoint\r\n> >         self.client = requests.Session()\r\n> >         self.client.auth = (username, password)\r\n> > \r\n> >     def fetch_projects(self):\r\n> >         url = f'{self.entrypoint}/v1/projects'\r\n> >         response = self.client.get(url)\r\n> >         return response\r\n> > \r\n> >     def create_project(self, name, description, project_type):\r\n> >         mapping = {'SequenceLabeling': 'SequenceLabelingProject',\r\n> >                    'DocumentClassification': 'TextClassificationProject',\r\n> >                    'Seq2seq': 'Seq2seqProject'}\r\n> >         data = {\r\n> >             'name': name,\r\n> >             'project_type': project_type,\r\n> >             'description': description,\r\n> >             'guideline': 'Hello',\r\n> >             'resourcetype': mapping[project_type]\r\n> >         }\r\n> >         url = f'{self.entrypoint}/v1/projects'\r\n> >         response = self.client.post(url, json=data)\r\n> >         return response.json()\r\n> > \r\n> >     def fetch_documents(self, project_id):\r\n> >         url = f'{self.entrypoint}/v1/projects/{project_id}/docs'\r\n> >         response = self.client.get(url)\r\n> >         return response.json()\r\n> > \r\n> >     def add_document(self, project_id, text):\r\n> >         data = {\r\n> >             'text': text\r\n> >         }\r\n> >         url = f'{self.entrypoint}/v1/projects/{project_id}/docs'\r\n> >         response = self.client.post(url, json=data)\r\n> >         return response.json()\r\n> > \r\n> >     def fetch_labels(self, project_id):\r\n> >         url = f'{self.entrypoint}/v1/projects/{project_id}/labels'\r\n> >         response = self.client.get(url)\r\n> >         return response.json()\r\n> > \r\n> >     def add_label(self, project_id, text):\r\n> >         data = {\r\n> >             'text': text\r\n> >         }\r\n> >         url = f'{self.entrypoint}/v1/projects/{project_id}/labels'\r\n> >         response = self.client.post(url, json=data)\r\n> >         return response.json()\r\n> > \r\n> >     def fetch_annotations(self, project_id, doc_id):\r\n> >         url = f'{self.entrypoint}/v1/projects/{project_id}/docs/{doc_id}/annotations'\r\n> >         response = self.client.get(url)\r\n> >         return response.json()\r\n> > \r\n> >     def annotate(self, project_id, doc_id, data):\r\n> >         url = f'{self.entrypoint}/v1/projects/{project_id}/docs/{doc_id}/annotations'\r\n> >         response = self.client.post(url, json=data)\r\n> >         return response.json()\r\n> > \r\n> > \r\n> > if __name__ == '__main__':\r\n> >     client = Client(username='username', password='password')\r\n> >     project = client.create_project(name='NER project',\r\n> >                                     description='example',\r\n> >                                     project_type='SequenceLabeling')\r\n> >     doc = client.add_document(project_id=project['id'],\r\n> >                               text='Obama')\r\n> >     label = client.add_label(project_id=project['id'],\r\n> >                              text='PERSON')\r\n> >     data = {\r\n> >         'start_offset': 0,\r\n> >         'end_offset': 5,\r\n> >         'label': label['id'],\r\n> >         'prob': 0.8\r\n> >     }\r\n> >     client.annotate(project_id=project['id'],\r\n> >                     doc_id=doc['id'],\r\n> >                     data=data)\r\n> >     annotations = client.fetch_annotations(project_id=project['id'],\r\n> >                                            doc_id=doc['id'])\r\n> > ```\r\n> > \r\n> > \r\n> > In the future, we plan to enable automatic labeling from the web.\r\n> \r\n> Hi, I implemented this service to automatically fetch any document that already annotated. But when I run the program, why it always get Response 403? This is quite strange because when I go to the rest Django endpoint in a browser i.e v1/projects, it is not returning any error.\r\n\r\nThis is caused by the authorization. Simply modify the `__init__` method by\r\n\r\n```\r\n    def __init__(self, entrypoint, username, password):\r\n        self.entrypoint = entrypoint\r\n        self.client = requests.Session()\r\n\r\n        # authorization\r\n        response = self.client .post(f'{self.entrypoint}/v1/auth-token',\r\n                                     data={'username': username,\r\n                                           'password': password})\r\n        token = response.json()['token']\r\n        self.client .headers.update({'Authorization': f'Token {token}',\r\n                                     'Accept': 'application/json'})\r\n```\r\ninspired by https://github.com/afparsons/doccano_api_client/blob/ad251cd05b49216b19a6319cb9ce1326d08ce484/doccano_api_client/__init__.py#L93","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/comments/562495532/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"shuiruge","id":2098947,"node_id":"MDQ6VXNlcjIwOTg5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/2098947?v=4","gravatar_id":"","url":"https://api.github.com/users/shuiruge","html_url":"https://github.com/shuiruge","followers_url":"https://api.github.com/users/shuiruge/followers","following_url":"https://api.github.com/users/shuiruge/following{/other_user}","gists_url":"https://api.github.com/users/shuiruge/gists{/gist_id}","starred_url":"https://api.github.com/users/shuiruge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shuiruge/subscriptions","organizations_url":"https://api.github.com/users/shuiruge/orgs","repos_url":"https://api.github.com/users/shuiruge/repos","events_url":"https://api.github.com/users/shuiruge/events{/privacy}","received_events_url":"https://api.github.com/users/shuiruge/received_events","type":"User","site_admin":false}},{"actor":{"login":"arianpasquali","id":200721,"node_id":"MDQ6VXNlcjIwMDcyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/200721?v=4","gravatar_id":"","url":"https://api.github.com/users/arianpasquali","html_url":"https://github.com/arianpasquali","followers_url":"https://api.github.com/users/arianpasquali/followers","following_url":"https://api.github.com/users/arianpasquali/following{/other_user}","gists_url":"https://api.github.com/users/arianpasquali/gists{/gist_id}","starred_url":"https://api.github.com/users/arianpasquali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arianpasquali/subscriptions","organizations_url":"https://api.github.com/users/arianpasquali/orgs","repos_url":"https://api.github.com/users/arianpasquali/repos","events_url":"https://api.github.com/users/arianpasquali/events{/privacy}","received_events_url":"https://api.github.com/users/arianpasquali/received_events","type":"User","site_admin":false},"created_at":"2020-05-13T18:51:14Z","updated_at":"2020-05-13T18:51:14Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/doccano/doccano/issues/771","repository_url":"https://api.github.com/repos/doccano/doccano","labels_url":"https://api.github.com/repos/doccano/doccano/issues/771/labels{/name}","comments_url":"https://api.github.com/repos/doccano/doccano/issues/771/comments","events_url":"https://api.github.com/repos/doccano/doccano/issues/771/events","html_url":"https://github.com/doccano/doccano/issues/771","id":617675826,"node_id":"MDU6SXNzdWU2MTc2NzU4MjY=","number":771,"title":"Fail to login using api","user":{"login":"arianpasquali","id":200721,"node_id":"MDQ6VXNlcjIwMDcyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/200721?v=4","gravatar_id":"","url":"https://api.github.com/users/arianpasquali","html_url":"https://github.com/arianpasquali","followers_url":"https://api.github.com/users/arianpasquali/followers","following_url":"https://api.github.com/users/arianpasquali/following{/other_user}","gists_url":"https://api.github.com/users/arianpasquali/gists{/gist_id}","starred_url":"https://api.github.com/users/arianpasquali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arianpasquali/subscriptions","organizations_url":"https://api.github.com/users/arianpasquali/orgs","repos_url":"https://api.github.com/users/arianpasquali/repos","events_url":"https://api.github.com/users/arianpasquali/events{/privacy}","received_events_url":"https://api.github.com/users/arianpasquali/received_events","type":"User","site_admin":false},"labels":[{"id":927327728,"node_id":"MDU6TGFiZWw5MjczMjc3Mjg=","url":"https://api.github.com/repos/doccano/doccano/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-05-13T18:51:14Z","updated_at":"2021-04-21T12:38:27Z","closed_at":"2020-05-13T22:06:36Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":132709824,"node_id":"MDEwOlJlcG9zaXRvcnkxMzI3MDk4MjQ=","name":"doccano","full_name":"doccano/doccano","private":false,"owner":{"login":"doccano","id":58067660,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU4MDY3NjYw","avatar_url":"https://avatars.githubusercontent.com/u/58067660?v=4","gravatar_id":"","url":"https://api.github.com/users/doccano","html_url":"https://github.com/doccano","followers_url":"https://api.github.com/users/doccano/followers","following_url":"https://api.github.com/users/doccano/following{/other_user}","gists_url":"https://api.github.com/users/doccano/gists{/gist_id}","starred_url":"https://api.github.com/users/doccano/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doccano/subscriptions","organizations_url":"https://api.github.com/users/doccano/orgs","repos_url":"https://api.github.com/users/doccano/repos","events_url":"https://api.github.com/users/doccano/events{/privacy}","received_events_url":"https://api.github.com/users/doccano/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/doccano/doccano","description":"Open source annotation tool for machine learning practitioners.","fork":false,"url":"https://api.github.com/repos/doccano/doccano","forks_url":"https://api.github.com/repos/doccano/doccano/forks","keys_url":"https://api.github.com/repos/doccano/doccano/keys{/key_id}","collaborators_url":"https://api.github.com/repos/doccano/doccano/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/doccano/doccano/teams","hooks_url":"https://api.github.com/repos/doccano/doccano/hooks","issue_events_url":"https://api.github.com/repos/doccano/doccano/issues/events{/number}","events_url":"https://api.github.com/repos/doccano/doccano/events","assignees_url":"https://api.github.com/repos/doccano/doccano/assignees{/user}","branches_url":"https://api.github.com/repos/doccano/doccano/branches{/branch}","tags_url":"https://api.github.com/repos/doccano/doccano/tags","blobs_url":"https://api.github.com/repos/doccano/doccano/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/doccano/doccano/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/doccano/doccano/git/refs{/sha}","trees_url":"https://api.github.com/repos/doccano/doccano/git/trees{/sha}","statuses_url":"https://api.github.com/repos/doccano/doccano/statuses/{sha}","languages_url":"https://api.github.com/repos/doccano/doccano/languages","stargazers_url":"https://api.github.com/repos/doccano/doccano/stargazers","contributors_url":"https://api.github.com/repos/doccano/doccano/contributors","subscribers_url":"https://api.github.com/repos/doccano/doccano/subscribers","subscription_url":"https://api.github.com/repos/doccano/doccano/subscription","commits_url":"https://api.github.com/repos/doccano/doccano/commits{/sha}","git_commits_url":"https://api.github.com/repos/doccano/doccano/git/commits{/sha}","comments_url":"https://api.github.com/repos/doccano/doccano/comments{/number}","issue_comment_url":"https://api.github.com/repos/doccano/doccano/issues/comments{/number}","contents_url":"https://api.github.com/repos/doccano/doccano/contents/{+path}","compare_url":"https://api.github.com/repos/doccano/doccano/compare/{base}...{head}","merges_url":"https://api.github.com/repos/doccano/doccano/merges","archive_url":"https://api.github.com/repos/doccano/doccano/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/doccano/doccano/downloads","issues_url":"https://api.github.com/repos/doccano/doccano/issues{/number}","pulls_url":"https://api.github.com/repos/doccano/doccano/pulls{/number}","milestones_url":"https://api.github.com/repos/doccano/doccano/milestones{/number}","notifications_url":"https://api.github.com/repos/doccano/doccano/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/doccano/doccano/labels{/name}","releases_url":"https://api.github.com/repos/doccano/doccano/releases{/id}","deployments_url":"https://api.github.com/repos/doccano/doccano/deployments","created_at":"2018-05-09T06:10:05Z","updated_at":"2023-01-19T08:54:15Z","pushed_at":"2023-01-13T04:29:51Z","git_url":"git://github.com/doccano/doccano.git","ssh_url":"git@github.com:doccano/doccano.git","clone_url":"https://github.com/doccano/doccano.git","svn_url":"https://github.com/doccano/doccano","homepage":"https://doccano.herokuapp.com","size":56100,"stargazers_count":7214,"watchers_count":7214,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":true,"forks_count":1473,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":200,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["annotation-tool","data-labeling","dataset","datasets","machine-learning","natural-language-processing","nuxt","nuxtjs","python","text-annotation","vue","vuejs"],"visibility":"public","forks":1473,"open_issues":200,"watchers":7214,"default_branch":"master","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"I have been trying to use the http api in order to programmatically insert documents and labels.\r\nHowever I didn't find a way to make login work yet. Have been trying a few doccano api clients and a code suggestion in [another issue](https://github.com/chakki-works/doccano/issues/6#issuecomment-489924577) but I get the same error. \r\n\r\nHow to reproduce the behaviour\r\n---------\r\n\r\n```python\r\nimport requests\r\nimport json\r\n\r\nclass Client(object):\r\n    \"\"\"\r\n    Client code was inspired by: https://github.com/chakki-works/doccano/issues/6#issuecomment-489924577\r\n    Endpoints can be found here: https://github.com/chakki-works/doccano/blob/master/app/api/urls.py\r\n    \"\"\"\r\n    def __init__(self, entrypoint, username=None, password=None):\r\n        self.entrypoint = entrypoint\r\n        self.client = requests.Session()\r\n        self._login(username, password)\r\n\r\n    def _login(self, username, password):\r\n        url = f\"{self.entrypoint}/v1/auth-token\"\r\n        login = {\"username\": username, \"password\": password}\r\n        response = self.client.post(url, json=login)\r\n        api_token = response.json()[\"token\"]\r\n        self.client.headers.update({\"Authorization\": f\"Token {api_token}\"})\r\n\r\n\r\ndoccano_client = Client(\"http://localhost:3000\", \"admin\", \"password\")\r\n```\r\n200 http status code as response, but also a JSONDecodeError response\r\n```\r\n---------------------------------------------------------------------------\r\nJSONDecodeError                           Traceback (most recent call last)\r\n<ipython-input-6-512f67c518b4> in <module>\r\n      1 import requests\r\n----> 2 doccano_client = Client(\"http://localhost:3000\", \"admin\", \"password\")\r\n\r\n<ipython-input-4-525fc6bc89a1> in __init__(self, entrypoint, username, password)\r\n      7         self.entrypoint = entrypoint\r\n      8         self.client = requests.Session()\r\n----> 9         self._login(username, password)\r\n     10 \r\n     11     def _login(self, username, password):\r\n\r\n<ipython-input-4-525fc6bc89a1> in _login(self, username, password)\r\n     13         login = {\"username\": username, \"password\": password}\r\n     14         response = self.client.post(url, json=login)\r\n---> 15         api_token = response.json()[\"token\"]\r\n     16         self.client.headers.update({\"Authorization\": f\"Token {api_token}\"})\r\n     17 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/requests/models.py in json(self, **kwargs)\r\n    895                     # used.\r\n    896                     pass\r\n--> 897         return complexjson.loads(self.text, **kwargs)\r\n    898 \r\n    899     @property\r\n\r\n~/anaconda3/lib/python3.7/json/__init__.py in loads(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\r\n    346             parse_int is None and parse_float is None and\r\n    347             parse_constant is None and object_pairs_hook is None and not kw):\r\n--> 348         return _default_decoder.decode(s)\r\n    349     if cls is None:\r\n    350         cls = JSONDecoder\r\n\r\n~/anaconda3/lib/python3.7/json/decoder.py in decode(self, s, _w)\r\n    335 \r\n    336         \"\"\"\r\n--> 337         obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n    338         end = _w(s, end).end()\r\n    339         if end != len(s):\r\n\r\n~/anaconda3/lib/python3.7/json/decoder.py in raw_decode(self, s, idx)\r\n    353             obj, end = self.scan_once(s, idx)\r\n    354         except StopIteration as err:\r\n--> 355             raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n    356         return obj, end\r\n\r\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\nYour Environment\r\n---------\r\n<!-- Include details of your environment. -->\r\n\r\n*   Operating System: ubuntu 20.04\r\n*   Python Version Used: Python 3\r\n*   When you install doccano: May 2020\r\n*   How did you install doccano (Heroku button etc): git clone, docker-compose dev up\r\n","reactions":{"url":"https://api.github.com/repos/doccano/doccano/issues/771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/doccano/doccano/issues/771/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"}]