{"url":"https://api.github.com/repos/jasonwei20/eda_nlp/issues/17","repository_url":"https://api.github.com/repos/jasonwei20/eda_nlp","labels_url":"https://api.github.com/repos/jasonwei20/eda_nlp/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/jasonwei20/eda_nlp/issues/17/comments","events_url":"https://api.github.com/repos/jasonwei20/eda_nlp/issues/17/events","html_url":"https://github.com/jasonwei20/eda_nlp/issues/17","id":518242063,"node_id":"MDU6SXNzdWU1MTgyNDIwNjM=","number":17,"title":"Question/Suggestions","user":{"login":"tannergilligan","id":7231180,"node_id":"MDQ6VXNlcjcyMzExODA=","avatar_url":"https://avatars.githubusercontent.com/u/7231180?v=4","gravatar_id":"","url":"https://api.github.com/users/tannergilligan","html_url":"https://github.com/tannergilligan","followers_url":"https://api.github.com/users/tannergilligan/followers","following_url":"https://api.github.com/users/tannergilligan/following{/other_user}","gists_url":"https://api.github.com/users/tannergilligan/gists{/gist_id}","starred_url":"https://api.github.com/users/tannergilligan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tannergilligan/subscriptions","organizations_url":"https://api.github.com/users/tannergilligan/orgs","repos_url":"https://api.github.com/users/tannergilligan/repos","events_url":"https://api.github.com/users/tannergilligan/events{/privacy}","received_events_url":"https://api.github.com/users/tannergilligan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-11-06T05:10:30Z","updated_at":"2019-11-07T12:58:07Z","closed_at":"2019-11-07T12:58:07Z","author_association":"NONE","active_lock_reason":null,"body":"Hi! I would like to say thank you for your contribution to the community. I've been going over your code, and have a few questions and potentially suggestions:\r\n\r\n1) For the method \"synonym_replacement()\", why do you substitute all instance of a word for the selected synonym? For example, if you have the sentence \"A B C B\", and the select B=X as the synonym substitution, you will always end up with \"A X C X\". There's no possibility to generate \"A B C X\" or \"A X C B\" - was that intentional? If not, that could be a potential improvement. \r\n\r\n1.1) Another suggestion for \"synonym_replacement()\": Iterate through random indices of the list rather than the elements themselves. This will allow you to overwrite the words with their synonyms directly in the \"new_words\" list rather than creating a new list each time a substitution is made. Creating a new list can be expensive, especially if it's large or you're running it thousands of times.\r\n\r\n2) For the method \"add_words()\",  you repeatedly select random indices as opposed to creating a random ordering of the indices - is there a reason for that? With the current code, there's the possibility that it selects the same index every time, and never adds a word even if the list contains a word with synonyms. Alternatively, you could shuffle a list of indices, and iterate through the list until you find one with a synonym. This would ensure you're not redundantly getting synonyms for the same word over and over, and ensure you always insert a word when the input list contains a word with synonyms.\r\n\r\n3) For the method \"random_swap()\", a check to ensure the word last has at least 2 words would prevent unnecessary computation in single-word cases (small thing, but something I added in my code)\r\n\r\n4) For the method \"swap_words()\", I basically have the same question as (2). In addition, I'm pretty sure you can greatly simplify the method to:\r\n\r\n```\r\ndef swap_word(new_words):\r\n    index1, index2 = random.sample(range(len(new_words)), 2)\r\n    new_words[index1], new_words[index2] = new_words[index2], new_words[index1]\r\n    return new_words\r\n```\r\n\r\nPlease correct me if the above method doesn't do the same thing - it's what I'm using in my code and I'd prefer to not have missed something :)\r\n\r\n5) I'm intrigued by this code snippet:\r\n```\r\n        # this is stupid but we need it, trust me\r\n        sentence = ' '.join(new_words)\r\n        new_words = sentence.split(' ')\r\n```\r\nCould you tell me what was happening that made this necessary? I'm sure you encountered some edge case that this fixed, but I'm curious what that was.\r\n\r\n6) For the method \"eda()\", when the user specifies \"num_aug=0\", what are you trying to do in the \"else\" block at the end of the method? The output ends up being anywhere from 0 to num_aug sentences, depending on chance. Statistically, you will get on average 1 augmentation back, but this isn't guaranteed.\r\n\r\nThis is all meant as constructive criticism, so I hope you don't feel I'm being negative towards your work. I'd love to hear your feedback on these questions and thoughts; the work I'm doing is highly related to this topic, so I'm curious about some of the decisions you made. Thanks!","closed_by":{"login":"jasonwei20","id":26695953,"node_id":"MDQ6VXNlcjI2Njk1OTUz","avatar_url":"https://avatars.githubusercontent.com/u/26695953?v=4","gravatar_id":"","url":"https://api.github.com/users/jasonwei20","html_url":"https://github.com/jasonwei20","followers_url":"https://api.github.com/users/jasonwei20/followers","following_url":"https://api.github.com/users/jasonwei20/following{/other_user}","gists_url":"https://api.github.com/users/jasonwei20/gists{/gist_id}","starred_url":"https://api.github.com/users/jasonwei20/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasonwei20/subscriptions","organizations_url":"https://api.github.com/users/jasonwei20/orgs","repos_url":"https://api.github.com/users/jasonwei20/repos","events_url":"https://api.github.com/users/jasonwei20/events{/privacy}","received_events_url":"https://api.github.com/users/jasonwei20/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/jasonwei20/eda_nlp/issues/17/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/jasonwei20/eda_nlp/issues/17/timeline","performed_via_github_app":null,"state_reason":"completed"}