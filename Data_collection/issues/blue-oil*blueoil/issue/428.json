{"url":"https://api.github.com/repos/blue-oil/blueoil/issues/428","repository_url":"https://api.github.com/repos/blue-oil/blueoil","labels_url":"https://api.github.com/repos/blue-oil/blueoil/issues/428/labels{/name}","comments_url":"https://api.github.com/repos/blue-oil/blueoil/issues/428/comments","events_url":"https://api.github.com/repos/blue-oil/blueoil/issues/428/events","html_url":"https://github.com/blue-oil/blueoil/issues/428","id":493657439,"node_id":"MDU6SXNzdWU0OTM2NTc0Mzk=","number":428,"title":"Speedup object detection training","user":{"login":"tkng","id":96674,"node_id":"MDQ6VXNlcjk2Njc0","avatar_url":"https://avatars.githubusercontent.com/u/96674?v=4","gravatar_id":"","url":"https://api.github.com/users/tkng","html_url":"https://github.com/tkng","followers_url":"https://api.github.com/users/tkng/followers","following_url":"https://api.github.com/users/tkng/following{/other_user}","gists_url":"https://api.github.com/users/tkng/gists{/gist_id}","starred_url":"https://api.github.com/users/tkng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkng/subscriptions","organizations_url":"https://api.github.com/users/tkng/orgs","repos_url":"https://api.github.com/users/tkng/repos","events_url":"https://api.github.com/users/tkng/events{/privacy}","received_events_url":"https://api.github.com/users/tkng/received_events","type":"User","site_admin":false},"labels":[{"id":1574661520,"node_id":"MDU6TGFiZWwxNTc0NjYxNTIw","url":"https://api.github.com/repos/blue-oil/blueoil/labels/refine_train_pipeline","name":"refine_train_pipeline","color":"1fd19b","default":false,"description":""}],"state":"open","locked":true,"assignee":{"login":"yd8534976","id":8168498,"node_id":"MDQ6VXNlcjgxNjg0OTg=","avatar_url":"https://avatars.githubusercontent.com/u/8168498?v=4","gravatar_id":"","url":"https://api.github.com/users/yd8534976","html_url":"https://github.com/yd8534976","followers_url":"https://api.github.com/users/yd8534976/followers","following_url":"https://api.github.com/users/yd8534976/following{/other_user}","gists_url":"https://api.github.com/users/yd8534976/gists{/gist_id}","starred_url":"https://api.github.com/users/yd8534976/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yd8534976/subscriptions","organizations_url":"https://api.github.com/users/yd8534976/orgs","repos_url":"https://api.github.com/users/yd8534976/repos","events_url":"https://api.github.com/users/yd8534976/events{/privacy}","received_events_url":"https://api.github.com/users/yd8534976/received_events","type":"User","site_admin":false},"assignees":[{"login":"yd8534976","id":8168498,"node_id":"MDQ6VXNlcjgxNjg0OTg=","avatar_url":"https://avatars.githubusercontent.com/u/8168498?v=4","gravatar_id":"","url":"https://api.github.com/users/yd8534976","html_url":"https://github.com/yd8534976","followers_url":"https://api.github.com/users/yd8534976/followers","following_url":"https://api.github.com/users/yd8534976/following{/other_user}","gists_url":"https://api.github.com/users/yd8534976/gists{/gist_id}","starred_url":"https://api.github.com/users/yd8534976/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yd8534976/subscriptions","organizations_url":"https://api.github.com/users/yd8534976/orgs","repos_url":"https://api.github.com/users/yd8534976/repos","events_url":"https://api.github.com/users/yd8534976/events{/privacy}","received_events_url":"https://api.github.com/users/yd8534976/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2019-09-14T19:20:15Z","updated_at":"2019-09-30T05:27:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently, Blueoil cannot use GPUs effectively at training phase. Especially, training of object detection network is not efficient, sometimes GPU usage is 20-30% at maximum. Though I don't have clear evidence, there are several possible reasons.\r\n\r\n1. our network is relatively small compared to traditional object detection network like original YOLOv2. data loading/augmentation consume a lot of time, prefetching cannot hide the cost.\r\n2. we're using `tf.py_func` for inside the loss function. (= calling `tf.py_func` is slow.)\r\n3. we're encoding `gt_box` coordinates inside the loss function, hence the encoding process is not parallerized.\r\n4. we're using `tf.py_func` for the computation of mAP. (= calling `tf.py_func` is slow.)\r\n5. computation of mAP is complex and high cost. Also, not parallerized.\r\n6. There seems roughly 10ms overhead for calling `session.run` on my environment. If each `session.run` is fast enough, this overhead is not negligible.\r\n\r\nI guess 4. and 5. is not a big problem, since `metrics_update_op` is executed only \r\n when `(step +1) % config.SUMMARISE_STEPS == 0`. 1. is sometimes big problem, but not always. I think the biggest and most difficult problem is 3.\r\n\r\nFor this problem, we will be able to mitigate by porting some computation from loss function to data preprocessing, so that it could be parallerized.\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/blue-oil/blueoil/issues/428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/blue-oil/blueoil/issues/428/timeline","performed_via_github_app":null,"state_reason":null}