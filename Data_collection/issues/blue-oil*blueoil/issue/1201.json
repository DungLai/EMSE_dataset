{"url":"https://api.github.com/repos/blue-oil/blueoil/issues/1201","repository_url":"https://api.github.com/repos/blue-oil/blueoil","labels_url":"https://api.github.com/repos/blue-oil/blueoil/issues/1201/labels{/name}","comments_url":"https://api.github.com/repos/blue-oil/blueoil/issues/1201/comments","events_url":"https://api.github.com/repos/blue-oil/blueoil/issues/1201/events","html_url":"https://github.com/blue-oil/blueoil/issues/1201","id":697674119,"node_id":"MDU6SXNzdWU2OTc2NzQxMTk=","number":1201,"title":"use modified tf.sign that can only output two possible values (for binary quantizer)","user":{"login":"joelN123","id":32167300,"node_id":"MDQ6VXNlcjMyMTY3MzAw","avatar_url":"https://avatars.githubusercontent.com/u/32167300?v=4","gravatar_id":"","url":"https://api.github.com/users/joelN123","html_url":"https://github.com/joelN123","followers_url":"https://api.github.com/users/joelN123/followers","following_url":"https://api.github.com/users/joelN123/following{/other_user}","gists_url":"https://api.github.com/users/joelN123/gists{/gist_id}","starred_url":"https://api.github.com/users/joelN123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joelN123/subscriptions","organizations_url":"https://api.github.com/users/joelN123/orgs","repos_url":"https://api.github.com/users/joelN123/repos","events_url":"https://api.github.com/users/joelN123/events{/privacy}","received_events_url":"https://api.github.com/users/joelN123/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":{"login":"oatawa1","id":6939637,"node_id":"MDQ6VXNlcjY5Mzk2Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/6939637?v=4","gravatar_id":"","url":"https://api.github.com/users/oatawa1","html_url":"https://github.com/oatawa1","followers_url":"https://api.github.com/users/oatawa1/followers","following_url":"https://api.github.com/users/oatawa1/following{/other_user}","gists_url":"https://api.github.com/users/oatawa1/gists{/gist_id}","starred_url":"https://api.github.com/users/oatawa1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oatawa1/subscriptions","organizations_url":"https://api.github.com/users/oatawa1/orgs","repos_url":"https://api.github.com/users/oatawa1/repos","events_url":"https://api.github.com/users/oatawa1/events{/privacy}","received_events_url":"https://api.github.com/users/oatawa1/received_events","type":"User","site_admin":false},"assignees":[{"login":"oatawa1","id":6939637,"node_id":"MDQ6VXNlcjY5Mzk2Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/6939637?v=4","gravatar_id":"","url":"https://api.github.com/users/oatawa1","html_url":"https://github.com/oatawa1","followers_url":"https://api.github.com/users/oatawa1/followers","following_url":"https://api.github.com/users/oatawa1/following{/other_user}","gists_url":"https://api.github.com/users/oatawa1/gists{/gist_id}","starred_url":"https://api.github.com/users/oatawa1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oatawa1/subscriptions","organizations_url":"https://api.github.com/users/oatawa1/orgs","repos_url":"https://api.github.com/users/oatawa1/repos","events_url":"https://api.github.com/users/oatawa1/events{/privacy}","received_events_url":"https://api.github.com/users/oatawa1/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-09-10T09:30:34Z","updated_at":"2021-02-08T08:35:45Z","closed_at":"2021-02-08T08:35:45Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"At the high-level code for binary quantizer, `tf.sign` is used to binarize the weights (in the [binary.py](https://github.com/blue-oil/blueoil/blob/b647203f5249a1b026760edb5cc17307f29589c5/blueoil/quantizations/binary.py#L163) quantization definition). However, if given input of `0.0`, the output of TensorFlow sign function is `0.0`. So there is some very small chance of getting a third output value (not +/- 1). Although it doesn't practically cause problems now, it could be good to change this.\r\n\r\n### detail\r\n\r\nIn the lower-level code there are only two possible weight values (it's a single bit), so a value of `0.0` would get converted to one of the other values. Maybe by [binarizer](https://github.com/blue-oil/blueoil/blob/b647203f5249a1b026760edb5cc17307f29589c5/blueoil/converter/core/operators.py#L762) method? Anyway, the point is the slight difference between higher-level code and lower-level code.\r\n\r\nIn practice, this is not a problem because of almost no `0.0` weight values. Below I plot the count of kernel vars equal to `0.0`, over a few different layers. It looks rare at initialization (only happened once in this example network), and after that, it becomes even more rare (essentially never happens).\r\n\r\n![image](https://user-images.githubusercontent.com/32167300/92690526-1f02e880-f37c-11ea-86da-f892f215403f.png)\r\n\r\nHowever, there are a couple of reasons why it could be good to strictly enforce only two possible quantized weight values at the higher-level (TensorFlow) code\r\n1. There might possibly be some unusual network or situation where zero-valued weights have non-negligible likelihood, then the inference behaviour of the model would be different between non-converted and converted code.\r\n2. When someone new to the code reads `tf.sign`, it might be confusing to them, because it has 3 possible output values, strictly speaking.\r\n\r\n### possible solution\r\n\r\nOne way is to modify the forward function, so that `0.0` gets mapped to `-1.0` (or, whichever way it is in the lower level code). In this way, the quantized weight values at the Tensorflow level could only have two possible values.\r\n\r\nStill, even after making this change, there could be a problem in an unusual situation where some of the unquantized weights have value `0.0`, because in that case the binary quantizer is not perfectly symmetric. But I think that is a better situation to be in.\r\n\r\nMaybe something simple like changing [binary quantizer line 163](https://github.com/blue-oil/blueoil/blob/b647203f5249a1b026760edb5cc17307f29589c5/blueoil/quantizations/binary.py#L163) from\r\n`return tf.sign(x) * expectation`\r\nto\r\n```\r\nnot_zero = x - tf.cast(tf.equal(x, 0.0), tf.float32)\r\nreturn tf.sign(not_zero) * expectation\r\n```\r\ncould implement this solution. (and keeping the definition of gradient same as before).","closed_by":{"login":"oatawa1","id":6939637,"node_id":"MDQ6VXNlcjY5Mzk2Mzc=","avatar_url":"https://avatars.githubusercontent.com/u/6939637?v=4","gravatar_id":"","url":"https://api.github.com/users/oatawa1","html_url":"https://github.com/oatawa1","followers_url":"https://api.github.com/users/oatawa1/followers","following_url":"https://api.github.com/users/oatawa1/following{/other_user}","gists_url":"https://api.github.com/users/oatawa1/gists{/gist_id}","starred_url":"https://api.github.com/users/oatawa1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oatawa1/subscriptions","organizations_url":"https://api.github.com/users/oatawa1/orgs","repos_url":"https://api.github.com/users/oatawa1/repos","events_url":"https://api.github.com/users/oatawa1/events{/privacy}","received_events_url":"https://api.github.com/users/oatawa1/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/blue-oil/blueoil/issues/1201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/blue-oil/blueoil/issues/1201/timeline","performed_via_github_app":null,"state_reason":"completed"}