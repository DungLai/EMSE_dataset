{"url":"https://api.github.com/repos/blue-oil/blueoil/issues/704","repository_url":"https://api.github.com/repos/blue-oil/blueoil","labels_url":"https://api.github.com/repos/blue-oil/blueoil/issues/704/labels{/name}","comments_url":"https://api.github.com/repos/blue-oil/blueoil/issues/704/comments","events_url":"https://api.github.com/repos/blue-oil/blueoil/issues/704/events","html_url":"https://github.com/blue-oil/blueoil/issues/704","id":541966501,"node_id":"MDU6SXNzdWU1NDE5NjY1MDE=","number":704,"title":"Avoid the implementation depended on the order of dict","user":{"login":"hadusam","id":12394960,"node_id":"MDQ6VXNlcjEyMzk0OTYw","avatar_url":"https://avatars.githubusercontent.com/u/12394960?v=4","gravatar_id":"","url":"https://api.github.com/users/hadusam","html_url":"https://github.com/hadusam","followers_url":"https://api.github.com/users/hadusam/followers","following_url":"https://api.github.com/users/hadusam/following{/other_user}","gists_url":"https://api.github.com/users/hadusam/gists{/gist_id}","starred_url":"https://api.github.com/users/hadusam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hadusam/subscriptions","organizations_url":"https://api.github.com/users/hadusam/orgs","repos_url":"https://api.github.com/users/hadusam/repos","events_url":"https://api.github.com/users/hadusam/events{/privacy}","received_events_url":"https://api.github.com/users/hadusam/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-12-24T02:45:31Z","updated_at":"2020-05-26T09:31:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In `lmnet/executor/train.py` and `lmnet/executor/evaluate.py`, we have implementations implicit depended on the order of `dict` object as follows.\r\n\r\nhttps://github.com/blue-oil/blueoil/blob/8055a4a29618d79cf70d068d5aac5af7a4f3351e/lmnet/executor/train.py#L127\r\n\r\nhttps://github.com/blue-oil/blueoil/blob/8055a4a29618d79cf70d068d5aac5af7a4f3351e/lmnet/executor/train.py#L238-L239\r\n\r\n`metrics_placeholders` and `metrics_values` are the lists generated by `metrics_ops_dict`, but it is not sure that the order(key) is the same, this implementation depends on the order of `dict` implicitly.\r\n\r\nIn `Python` < 3.7, the order of `dict` is arbitrary on python language specification.\r\nFortunately, in CPython 3.6, the order of `dict` is not arbitrary but this is the implementation specification not the language specification of 3.6.\r\n\r\n> The order-preserving aspect of this new implementation is considered an implementation detail and should not be relied upon ...\r\n\r\n[Python 3.6 new-dict-implementation](https://docs.python.org/3.6/whatsnew/3.6.html#new-dict-implementation)\r\n\r\nSo it is better to avoid such implementations.\r\n\r\nRefs from stackoverflow: \r\n[Why is the order in dictionaries and sets arbitrary?](https://stackoverflow.com/questions/15479928/why-is-the-order-in-dictionaries-and-sets-arbitrary)\r\n[The order of keys in dictionaries](https://stackoverflow.com/questions/5629023/the-order-of-keys-in-dictionaries/40007169#40007169)","closed_by":null,"reactions":{"url":"https://api.github.com/repos/blue-oil/blueoil/issues/704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/blue-oil/blueoil/issues/704/timeline","performed_via_github_app":null,"state_reason":null}