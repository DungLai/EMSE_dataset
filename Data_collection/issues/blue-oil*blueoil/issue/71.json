{"url":"https://api.github.com/repos/blue-oil/blueoil/issues/71","repository_url":"https://api.github.com/repos/blue-oil/blueoil","labels_url":"https://api.github.com/repos/blue-oil/blueoil/issues/71/labels{/name}","comments_url":"https://api.github.com/repos/blue-oil/blueoil/issues/71/comments","events_url":"https://api.github.com/repos/blue-oil/blueoil/issues/71/events","html_url":"https://github.com/blue-oil/blueoil/issues/71","id":389566081,"node_id":"MDU6SXNzdWUzODk1NjYwODE=","number":71,"title":"try CornerNet","user":{"login":"tkng","id":96674,"node_id":"MDQ6VXNlcjk2Njc0","avatar_url":"https://avatars.githubusercontent.com/u/96674?v=4","gravatar_id":"","url":"https://api.github.com/users/tkng","html_url":"https://github.com/tkng","followers_url":"https://api.github.com/users/tkng/followers","following_url":"https://api.github.com/users/tkng/following{/other_user}","gists_url":"https://api.github.com/users/tkng/gists{/gist_id}","starred_url":"https://api.github.com/users/tkng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkng/subscriptions","organizations_url":"https://api.github.com/users/tkng/orgs","repos_url":"https://api.github.com/users/tkng/repos","events_url":"https://api.github.com/users/tkng/events{/privacy}","received_events_url":"https://api.github.com/users/tkng/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-12-11T02:08:48Z","updated_at":"2018-12-14T10:20:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"CornerNet is a recently proposed neural network for object detection.\r\n\r\nhttp://openaccess.thecvf.com/content_ECCV_2018/html/Hei_Law_CornerNet_Detecting_Objects_ECCV_2018_paper.html\r\n\r\nThe idea of CornerNet looks very interesting. They don't use anchor boxes. They use 2 heatmaps to predict \"top-left corner\" and \"bottom-right\" corner. Though it looks a little bit difficult to implement on Blueoil, since it requires a novel operator \"corner pooling\", but at least it would be worth trying.\r\n\r\n- [ ] implement corner pooling on lmnet\r\n- [ ] implement hour glass network (backbone network)\r\n- [ ] implement extraction network\r\n- [ ] implement loss function of CornerNet on lmnet\r\n- [ ] compare result vs YOLOv2 on Pascal VOC\r\n- [ ] compare result vs YOLOv2 on MS COCO\r\n- [ ] implement slimmer version of CornetNet\r\n- [ ] implement corner pooling on dlk\r\n- [ ] implement post processing\r\n\r\nThis task would be very interesting, but unfortunately I don't enough time to implement...","closed_by":null,"reactions":{"url":"https://api.github.com/repos/blue-oil/blueoil/issues/71/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/blue-oil/blueoil/issues/71/timeline","performed_via_github_app":null,"state_reason":null}