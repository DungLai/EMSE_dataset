[{"url":"https://api.github.com/repos/allenai/scispacy/issues/comments/597273144","html_url":"https://github.com/allenai/scispacy/issues/205#issuecomment-597273144","issue_url":"https://api.github.com/repos/allenai/scispacy/issues/205","id":597273144,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzI3MzE0NA==","user":{"login":"dakinggg","id":43149077,"node_id":"MDQ6VXNlcjQzMTQ5MDc3","avatar_url":"https://avatars.githubusercontent.com/u/43149077?v=4","gravatar_id":"","url":"https://api.github.com/users/dakinggg","html_url":"https://github.com/dakinggg","followers_url":"https://api.github.com/users/dakinggg/followers","following_url":"https://api.github.com/users/dakinggg/following{/other_user}","gists_url":"https://api.github.com/users/dakinggg/gists{/gist_id}","starred_url":"https://api.github.com/users/dakinggg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakinggg/subscriptions","organizations_url":"https://api.github.com/users/dakinggg/orgs","repos_url":"https://api.github.com/users/dakinggg/repos","events_url":"https://api.github.com/users/dakinggg/events{/privacy}","received_events_url":"https://api.github.com/users/dakinggg/received_events","type":"User","site_admin":false},"created_at":"2020-03-10T19:33:22Z","updated_at":"2020-03-10T19:33:22Z","author_association":"COLLABORATOR","body":"I'm not immediately sure the right way to solve this, seems like spacy might solve it for us at some point (https://github.com/huggingface/neuralcoref/issues/82), but in the meantime, I think you can do something like this (somewhat untested code):\r\n\r\n```\r\nIn [30]: def replace_abbr_with_json(spacy_doc): \r\n    ...:     new_abbrs = [] \r\n    ...:     for short in spacy_doc._.abbreviations: \r\n    ...:         short_text = short.text \r\n    ...:         short_start = short.start \r\n    ...:         short_end = short.end \r\n    ...:         long = short._.long_form \r\n    ...:         long_text = long.text \r\n    ...:         long_start = long.start \r\n    ...:         long_end = long.end \r\n    ...:         serializable_abbr = {\"short_text\": short_text, \"short_start\": short_start, \"short_end\": short_end, \"long_text\": long_text, \"long_start\": long_start, \"long_end\": long_end} \r\n    ...:         short._.long_form = None \r\n    ...:         new_abbrs.append(serializable_abbr) \r\n    ...:     spacy_doc._.abbreviations = new_abbrs \r\n    ...:                                                                                                                                                                                                                                      \r\n\r\nIn [31]: doc = nlp(\"Spinal Bulbar (SB) and some text\")                                                                                                                                                                                        \r\n\r\nIn [32]: replace_abbr_with_json(doc)                                                                                                                                                                                                          \r\n\r\nIn [33]: doc.to_disk('out_doc')                                                                                                                                                                                                               \r\n\r\nIn [34]: loaded_doc = Doc(Vocab()).from_disk(\"out_doc\")                                                                                                                                                                                       \r\n\r\nIn [35]: loaded_doc._.abbreviations                                                                                                                                                                                                           \r\nOut[35]: \r\n[{'short_text': 'SB',\r\n  'short_start': 3,\r\n  'short_end': 4,\r\n  'long_text': 'Spinal Bulbar',\r\n  'long_start': 0,\r\n  'long_end': 2}]\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/allenai/scispacy/issues/comments/597273144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dakinggg","id":43149077,"node_id":"MDQ6VXNlcjQzMTQ5MDc3","avatar_url":"https://avatars.githubusercontent.com/u/43149077?v=4","gravatar_id":"","url":"https://api.github.com/users/dakinggg","html_url":"https://github.com/dakinggg","followers_url":"https://api.github.com/users/dakinggg/followers","following_url":"https://api.github.com/users/dakinggg/following{/other_user}","gists_url":"https://api.github.com/users/dakinggg/gists{/gist_id}","starred_url":"https://api.github.com/users/dakinggg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakinggg/subscriptions","organizations_url":"https://api.github.com/users/dakinggg/orgs","repos_url":"https://api.github.com/users/dakinggg/repos","events_url":"https://api.github.com/users/dakinggg/events{/privacy}","received_events_url":"https://api.github.com/users/dakinggg/received_events","type":"User","site_admin":false}},{"url":"https://api.github.com/repos/allenai/scispacy/issues/comments/597488525","html_url":"https://github.com/allenai/scispacy/issues/205#issuecomment-597488525","issue_url":"https://api.github.com/repos/allenai/scispacy/issues/205","id":597488525,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NzQ4ODUyNQ==","user":{"login":"ChantalvanSon","id":6689853,"node_id":"MDQ6VXNlcjY2ODk4NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6689853?v=4","gravatar_id":"","url":"https://api.github.com/users/ChantalvanSon","html_url":"https://github.com/ChantalvanSon","followers_url":"https://api.github.com/users/ChantalvanSon/followers","following_url":"https://api.github.com/users/ChantalvanSon/following{/other_user}","gists_url":"https://api.github.com/users/ChantalvanSon/gists{/gist_id}","starred_url":"https://api.github.com/users/ChantalvanSon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChantalvanSon/subscriptions","organizations_url":"https://api.github.com/users/ChantalvanSon/orgs","repos_url":"https://api.github.com/users/ChantalvanSon/repos","events_url":"https://api.github.com/users/ChantalvanSon/events{/privacy}","received_events_url":"https://api.github.com/users/ChantalvanSon/received_events","type":"User","site_admin":false},"created_at":"2020-03-11T07:43:24Z","updated_at":"2020-03-11T07:43:24Z","author_association":"NONE","body":"This worked for me! Thanks a lot for your help.  Let's see if spaCy might come up with a good solution for it at some point :-)","reactions":{"url":"https://api.github.com/repos/allenai/scispacy/issues/comments/597488525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"ChantalvanSon","id":6689853,"node_id":"MDQ6VXNlcjY2ODk4NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6689853?v=4","gravatar_id":"","url":"https://api.github.com/users/ChantalvanSon","html_url":"https://github.com/ChantalvanSon","followers_url":"https://api.github.com/users/ChantalvanSon/followers","following_url":"https://api.github.com/users/ChantalvanSon/following{/other_user}","gists_url":"https://api.github.com/users/ChantalvanSon/gists{/gist_id}","starred_url":"https://api.github.com/users/ChantalvanSon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChantalvanSon/subscriptions","organizations_url":"https://api.github.com/users/ChantalvanSon/orgs","repos_url":"https://api.github.com/users/ChantalvanSon/repos","events_url":"https://api.github.com/users/ChantalvanSon/events{/privacy}","received_events_url":"https://api.github.com/users/ChantalvanSon/received_events","type":"User","site_admin":false}},{"actor":{"login":"dakinggg","id":43149077,"node_id":"MDQ6VXNlcjQzMTQ5MDc3","avatar_url":"https://avatars.githubusercontent.com/u/43149077?v=4","gravatar_id":"","url":"https://api.github.com/users/dakinggg","html_url":"https://github.com/dakinggg","followers_url":"https://api.github.com/users/dakinggg/followers","following_url":"https://api.github.com/users/dakinggg/following{/other_user}","gists_url":"https://api.github.com/users/dakinggg/gists{/gist_id}","starred_url":"https://api.github.com/users/dakinggg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakinggg/subscriptions","organizations_url":"https://api.github.com/users/dakinggg/orgs","repos_url":"https://api.github.com/users/dakinggg/repos","events_url":"https://api.github.com/users/dakinggg/events{/privacy}","received_events_url":"https://api.github.com/users/dakinggg/received_events","type":"User","site_admin":false},"created_at":"2021-03-17T01:38:16Z","updated_at":"2021-03-17T01:38:16Z","source":{"type":"issue","issue":{"url":"https://api.github.com/repos/allenai/scispacy/issues/338","repository_url":"https://api.github.com/repos/allenai/scispacy","labels_url":"https://api.github.com/repos/allenai/scispacy/issues/338/labels{/name}","comments_url":"https://api.github.com/repos/allenai/scispacy/issues/338/comments","events_url":"https://api.github.com/repos/allenai/scispacy/issues/338/events","html_url":"https://github.com/allenai/scispacy/issues/338","id":833316914,"node_id":"MDU6SXNzdWU4MzMzMTY5MTQ=","number":338,"title":"Span is not serializable in abbreviations - figure out a better workaround","user":{"login":"f0lie","id":9092074,"node_id":"MDQ6VXNlcjkwOTIwNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/9092074?v=4","gravatar_id":"","url":"https://api.github.com/users/f0lie","html_url":"https://github.com/f0lie","followers_url":"https://api.github.com/users/f0lie/followers","following_url":"https://api.github.com/users/f0lie/following{/other_user}","gists_url":"https://api.github.com/users/f0lie/gists{/gist_id}","starred_url":"https://api.github.com/users/f0lie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/f0lie/subscriptions","organizations_url":"https://api.github.com/users/f0lie/orgs","repos_url":"https://api.github.com/users/f0lie/repos","events_url":"https://api.github.com/users/f0lie/events{/privacy}","received_events_url":"https://api.github.com/users/f0lie/received_events","type":"User","site_admin":false},"labels":[{"id":1068015159,"node_id":"MDU6TGFiZWwxMDY4MDE1MTU5","url":"https://api.github.com/repos/allenai/scispacy/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1068015162,"node_id":"MDU6TGFiZWwxMDY4MDE1MTYy","url":"https://api.github.com/repos/allenai/scispacy/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-03-17T01:20:56Z","updated_at":"2021-07-15T18:44:21Z","closed_at":"2021-07-15T18:44:20Z","author_association":"NONE","active_lock_reason":null,"repository":{"id":150172473,"node_id":"MDEwOlJlcG9zaXRvcnkxNTAxNzI0NzM=","name":"scispacy","full_name":"allenai/scispacy","private":false,"owner":{"login":"allenai","id":5667695,"node_id":"MDEyOk9yZ2FuaXphdGlvbjU2Njc2OTU=","avatar_url":"https://avatars.githubusercontent.com/u/5667695?v=4","gravatar_id":"","url":"https://api.github.com/users/allenai","html_url":"https://github.com/allenai","followers_url":"https://api.github.com/users/allenai/followers","following_url":"https://api.github.com/users/allenai/following{/other_user}","gists_url":"https://api.github.com/users/allenai/gists{/gist_id}","starred_url":"https://api.github.com/users/allenai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/allenai/subscriptions","organizations_url":"https://api.github.com/users/allenai/orgs","repos_url":"https://api.github.com/users/allenai/repos","events_url":"https://api.github.com/users/allenai/events{/privacy}","received_events_url":"https://api.github.com/users/allenai/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/allenai/scispacy","description":"A full spaCy pipeline and models for scientific/biomedical documents.","fork":false,"url":"https://api.github.com/repos/allenai/scispacy","forks_url":"https://api.github.com/repos/allenai/scispacy/forks","keys_url":"https://api.github.com/repos/allenai/scispacy/keys{/key_id}","collaborators_url":"https://api.github.com/repos/allenai/scispacy/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/allenai/scispacy/teams","hooks_url":"https://api.github.com/repos/allenai/scispacy/hooks","issue_events_url":"https://api.github.com/repos/allenai/scispacy/issues/events{/number}","events_url":"https://api.github.com/repos/allenai/scispacy/events","assignees_url":"https://api.github.com/repos/allenai/scispacy/assignees{/user}","branches_url":"https://api.github.com/repos/allenai/scispacy/branches{/branch}","tags_url":"https://api.github.com/repos/allenai/scispacy/tags","blobs_url":"https://api.github.com/repos/allenai/scispacy/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/allenai/scispacy/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/allenai/scispacy/git/refs{/sha}","trees_url":"https://api.github.com/repos/allenai/scispacy/git/trees{/sha}","statuses_url":"https://api.github.com/repos/allenai/scispacy/statuses/{sha}","languages_url":"https://api.github.com/repos/allenai/scispacy/languages","stargazers_url":"https://api.github.com/repos/allenai/scispacy/stargazers","contributors_url":"https://api.github.com/repos/allenai/scispacy/contributors","subscribers_url":"https://api.github.com/repos/allenai/scispacy/subscribers","subscription_url":"https://api.github.com/repos/allenai/scispacy/subscription","commits_url":"https://api.github.com/repos/allenai/scispacy/commits{/sha}","git_commits_url":"https://api.github.com/repos/allenai/scispacy/git/commits{/sha}","comments_url":"https://api.github.com/repos/allenai/scispacy/comments{/number}","issue_comment_url":"https://api.github.com/repos/allenai/scispacy/issues/comments{/number}","contents_url":"https://api.github.com/repos/allenai/scispacy/contents/{+path}","compare_url":"https://api.github.com/repos/allenai/scispacy/compare/{base}...{head}","merges_url":"https://api.github.com/repos/allenai/scispacy/merges","archive_url":"https://api.github.com/repos/allenai/scispacy/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/allenai/scispacy/downloads","issues_url":"https://api.github.com/repos/allenai/scispacy/issues{/number}","pulls_url":"https://api.github.com/repos/allenai/scispacy/pulls{/number}","milestones_url":"https://api.github.com/repos/allenai/scispacy/milestones{/number}","notifications_url":"https://api.github.com/repos/allenai/scispacy/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/allenai/scispacy/labels{/name}","releases_url":"https://api.github.com/repos/allenai/scispacy/releases{/id}","deployments_url":"https://api.github.com/repos/allenai/scispacy/deployments","created_at":"2018-09-24T21:45:52Z","updated_at":"2023-01-18T20:18:10Z","pushed_at":"2022-12-10T17:26:57Z","git_url":"git://github.com/allenai/scispacy.git","ssh_url":"git@github.com:allenai/scispacy.git","clone_url":"https://github.com/allenai/scispacy.git","svn_url":"https://github.com/allenai/scispacy","homepage":"https://allenai.github.io/scispacy/","size":248852,"stargazers_count":1306,"watchers_count":1306,"language":"Python","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":false,"forks_count":180,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":31,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["bioinformatics","biomedical","custom-pipes","nlp","scientific-documents","spacy"],"visibility":"public","forks":180,"open_issues":31,"watchers":1306,"default_branch":"main","permissions":{"admin":false,"maintain":false,"push":false,"triage":false,"pull":true}},"body":"```python\r\nimport spacy\r\n\r\nfrom scispacy.abbreviation import AbbreviationDetector\r\n\r\nnlp = spacy.load(\"en_core_sci_sm\")\r\n\r\n# Add the abbreviation pipe to the spacy pipeline.\r\nnlp.add_pipe(\"abbreviation_detector\")\r\n\r\ntest = [\"Spinal and bulbar muscular atrophy (SBMA) is an inherited motor neuron disease caused by the expansion of a polyglutamine tract within the androgen receptor (AR). SBMA can be caused by this easily.\"]\r\n\r\nprint(\"Abbreviation\", \"\\t\", \"Definition\")\r\nfor doc in nlp.pipe(test, n_process=4):\r\n    for abrv in doc._.abbreviations:\r\n        print(f\"{abrv} \\t ({abrv.start}, {abrv.end}) {abrv._.long_form}\")\r\n```\r\n\r\nRunning that code leads to this. The error message doesn't make a lot of sense, It could be because there are more processes than entries. If you remove `n_process` the solves the problem.\r\n\r\n```\r\nAbbreviation     Definition\r\nAbbreviation     Definition\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Python38\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\r\n    exitcode = _main(fd, parent_sentinel)\r\n  File \"C:\\Python38\\lib\\multiprocessing\\spawn.py\", line 125, in _main\r\n    prepare(preparation_data)\r\n  File \"C:\\Python38\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"C:\\Python38\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\r\n    main_content = runpy.run_path(main_path,\r\n  File \"C:\\Python38\\lib\\runpy.py\", line 265, in run_path\r\n    return _run_module_code(code, init_globals, run_name,\r\n  File \"C:\\Python38\\lib\\runpy.py\", line 97, in _run_module_code\r\n    _run_code(code, mod_globals, init_globals,\r\n  File \"C:\\Python38\\lib\\runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\alexd\\Dropbox (UFL)\\UFII_COVID19_RESEARCH_TOPICS\\cord19\\text_parsing_pipeline\\test.py\", line 13, in <module>\r\n    for doc in nlp.pipe(test, n_process=4):\r\n  File \"C:\\Python38\\lib\\site-packages\\spacy\\language.py\", line 1475, in pipe\r\n    for doc in docs:\r\n  File \"C:\\Python38\\lib\\site-packages\\spacy\\language.py\", line 1511, in _multiprocessing_pipe\r\n    proc.start()\r\n  File \"C:\\Python38\\lib\\multiprocessing\\process.py\", line 121, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Python38\\lib\\multiprocessing\\context.py\", line 224, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"C:\\Python38\\lib\\multiprocessing\\context.py\", line 327, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\Python38\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"C:\\Python38\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\r\n    _check_not_importing_main()\r\n  File \"C:\\Python38\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\r\n    raise RuntimeError('''\r\nRuntimeError:\r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n```\r\n\r\nThis is the error message from my main piece of code with more data. It sort of makes more sense. I think it has to something to do with how the multiprocess pipe collects the results of the workers. The error pops up after a while so it's definitely running.\r\n\r\n```\r\nProcess Process-1:\r\nTraceback (most recent call last):\r\n  File \"C:\\Python38\\lib\\multiprocessing\\process.py\", line 315, in _bootstrap\r\n    self.run()\r\n  File \"C:\\Python38\\lib\\multiprocessing\\process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\Python38\\lib\\site-packages\\spacy\\language.py\", line 1995, in _apply_pipes\r\n    sender.send([doc.to_bytes() for doc in docs])\r\n  File \"C:\\Python38\\lib\\site-packages\\spacy\\language.py\", line 1995, in <listcomp>\r\n    sender.send([doc.to_bytes() for doc in docs])\r\n  File \"spacy\\tokens\\doc.pyx\", line 1237, in spacy.tokens.doc.Doc.to_bytes\r\n  File \"spacy\\tokens\\doc.pyx\", line 1296, in spacy.tokens.doc.Doc.to_dict\r\n  File \"C:\\Python38\\lib\\site-packages\\spacy\\util.py\", line 1134, in to_dict\r\n    serialized[key] = getter()\r\n  File \"spacy\\tokens\\doc.pyx\", line 1293, in spacy.tokens.doc.Doc.to_dict.lambda18\r\n  File \"C:\\Python38\\lib\\site-packages\\srsly\\_msgpack_api.py\", line 14, in msgpack_dumps\r\n    return msgpack.dumps(data, use_bin_type=True)\r\n  File \"C:\\Python38\\lib\\site-packages\\srsly\\msgpack\\__init__.py\", line 55, in packb\r\n    return Packer(**kwargs).pack(o)\r\n  File \"srsly\\msgpack\\_packer.pyx\", line 285, in srsly.msgpack._packer.Packer.pack\r\n  File \"srsly\\msgpack\\_packer.pyx\", line 291, in srsly.msgpack._packer.Packer.pack\r\n  File \"srsly\\msgpack\\_packer.pyx\", line 288, in srsly.msgpack._packer.Packer.pack\r\n  File \"srsly\\msgpack\\_packer.pyx\", line 264, in srsly.msgpack._packer.Packer._pack\r\n  File \"srsly\\msgpack\\_packer.pyx\", line 282, in srsly.msgpack._packer.Packer._pack\r\nTypeError: can not serialize 'spacy.tokens.span.Span' object\r\n```\r\n\r\nRunning spacy 3.0, the latest version, and on Windows 10.","reactions":{"url":"https://api.github.com/repos/allenai/scispacy/issues/338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/allenai/scispacy/issues/338/timeline","performed_via_github_app":null,"state_reason":"completed"}},"event":"cross-referenced"},{"url":"https://api.github.com/repos/allenai/scispacy/issues/comments/805491762","html_url":"https://github.com/allenai/scispacy/issues/205#issuecomment-805491762","issue_url":"https://api.github.com/repos/allenai/scispacy/issues/205","id":805491762,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTQ5MTc2Mg==","user":{"login":"dakinggg","id":43149077,"node_id":"MDQ6VXNlcjQzMTQ5MDc3","avatar_url":"https://avatars.githubusercontent.com/u/43149077?v=4","gravatar_id":"","url":"https://api.github.com/users/dakinggg","html_url":"https://github.com/dakinggg","followers_url":"https://api.github.com/users/dakinggg/followers","following_url":"https://api.github.com/users/dakinggg/following{/other_user}","gists_url":"https://api.github.com/users/dakinggg/gists{/gist_id}","starred_url":"https://api.github.com/users/dakinggg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakinggg/subscriptions","organizations_url":"https://api.github.com/users/dakinggg/orgs","repos_url":"https://api.github.com/users/dakinggg/repos","events_url":"https://api.github.com/users/dakinggg/events{/privacy}","received_events_url":"https://api.github.com/users/dakinggg/received_events","type":"User","site_admin":false},"created_at":"2021-03-24T04:47:54Z","updated_at":"2021-03-24T04:47:54Z","author_association":"COLLABORATOR","body":"Closing in favor of #338 ","reactions":{"url":"https://api.github.com/repos/allenai/scispacy/issues/comments/805491762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null,"event":"commented","actor":{"login":"dakinggg","id":43149077,"node_id":"MDQ6VXNlcjQzMTQ5MDc3","avatar_url":"https://avatars.githubusercontent.com/u/43149077?v=4","gravatar_id":"","url":"https://api.github.com/users/dakinggg","html_url":"https://github.com/dakinggg","followers_url":"https://api.github.com/users/dakinggg/followers","following_url":"https://api.github.com/users/dakinggg/following{/other_user}","gists_url":"https://api.github.com/users/dakinggg/gists{/gist_id}","starred_url":"https://api.github.com/users/dakinggg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakinggg/subscriptions","organizations_url":"https://api.github.com/users/dakinggg/orgs","repos_url":"https://api.github.com/users/dakinggg/repos","events_url":"https://api.github.com/users/dakinggg/events{/privacy}","received_events_url":"https://api.github.com/users/dakinggg/received_events","type":"User","site_admin":false}},{"id":4499743009,"node_id":"MDExOkNsb3NlZEV2ZW50NDQ5OTc0MzAwOQ==","url":"https://api.github.com/repos/allenai/scispacy/issues/events/4499743009","actor":{"login":"dakinggg","id":43149077,"node_id":"MDQ6VXNlcjQzMTQ5MDc3","avatar_url":"https://avatars.githubusercontent.com/u/43149077?v=4","gravatar_id":"","url":"https://api.github.com/users/dakinggg","html_url":"https://github.com/dakinggg","followers_url":"https://api.github.com/users/dakinggg/followers","following_url":"https://api.github.com/users/dakinggg/following{/other_user}","gists_url":"https://api.github.com/users/dakinggg/gists{/gist_id}","starred_url":"https://api.github.com/users/dakinggg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakinggg/subscriptions","organizations_url":"https://api.github.com/users/dakinggg/orgs","repos_url":"https://api.github.com/users/dakinggg/repos","events_url":"https://api.github.com/users/dakinggg/events{/privacy}","received_events_url":"https://api.github.com/users/dakinggg/received_events","type":"User","site_admin":false},"event":"closed","commit_id":null,"commit_url":null,"created_at":"2021-03-24T04:47:54Z","state_reason":null,"performed_via_github_app":null}]