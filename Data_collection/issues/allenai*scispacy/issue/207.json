{"url":"https://api.github.com/repos/allenai/scispacy/issues/207","repository_url":"https://api.github.com/repos/allenai/scispacy","labels_url":"https://api.github.com/repos/allenai/scispacy/issues/207/labels{/name}","comments_url":"https://api.github.com/repos/allenai/scispacy/issues/207/comments","events_url":"https://api.github.com/repos/allenai/scispacy/issues/207/events","html_url":"https://github.com/allenai/scispacy/issues/207","id":586038281,"node_id":"MDU6SXNzdWU1ODYwMzgyODE=","number":207,"title":"Sentencizer error for a particular abstract","user":{"login":"kyleclo","id":13603748,"node_id":"MDQ6VXNlcjEzNjAzNzQ4","avatar_url":"https://avatars.githubusercontent.com/u/13603748?v=4","gravatar_id":"","url":"https://api.github.com/users/kyleclo","html_url":"https://github.com/kyleclo","followers_url":"https://api.github.com/users/kyleclo/followers","following_url":"https://api.github.com/users/kyleclo/following{/other_user}","gists_url":"https://api.github.com/users/kyleclo/gists{/gist_id}","starred_url":"https://api.github.com/users/kyleclo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kyleclo/subscriptions","organizations_url":"https://api.github.com/users/kyleclo/orgs","repos_url":"https://api.github.com/users/kyleclo/repos","events_url":"https://api.github.com/users/kyleclo/events{/privacy}","received_events_url":"https://api.github.com/users/kyleclo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-23T08:55:49Z","updated_at":"2021-01-15T22:20:44Z","closed_at":"2021-01-15T22:20:44Z","author_association":"NONE","active_lock_reason":null,"body":"On the following abstract:\r\n```\r\nEvolutionary algorithms (EAs) form a popular optimisation paradigm inspired by natural evolution. In recent years the field of evolutionary computation has developed a rigorous analytical theory to analyse their runtime on many illustrative problems. Here we apply this theory to a simple model of natural evolution. In the Strong Selection Weak Mutation (SSWM) evolutionary regime the time between occurrence of new mutations is much longer than the time it takes for a new beneficial mutation to take over the population. In this situation, the population only contains copies of one genotype and evolution can be modelled as a (1+1)-type process where the probability of accepting a new genotype (improvements or worsenings) depends on the change in fitness.  We present an initial runtime analysis of SSWM, quantifying its performance for various parameters and investigating differences to the (1+1)EA. We show that SSWM can have a moderate advantage over the (1+1)EA at crossing fitness valleys and study an example where SSWM outperforms the (1+1)EA by taking advantage of information on the fitness gradient.\r\n```\r\n\r\ncalling nlp(text) results in this error\r\n```\r\n~/.conda/envs/transformers/lib/python3.7/site-packages/spacy/language.py in __call__(self, text, disable, component_cfg)\r\n    433             if not hasattr(proc, \"__call__\"):\r\n    434                 raise ValueError(Errors.E003.format(component=type(proc), name=name))\r\n--> 435             doc = proc(doc, **component_cfg.get(name, {}))\r\n    436             if doc is None:\r\n    437                 raise ValueError(Errors.E005.format(name=name))\r\n\r\n~/.conda/envs/transformers/lib/python3.7/site-packages/scispacy/custom_sentence_segmenter.py in combined_rule_sentence_segmenter(doc)\r\n     55             built_up_sentence = token.text_with_ws\r\n     56             segment_index += 1\r\n---> 57             current_segment = segments[segment_index]\r\n     58         else:\r\n     59             built_up_sentence += token.text_with_ws\r\n\r\nIndexError: list index out of range\r\n```\r\n\r\nThis is using:\r\n```\r\nfrom spacy.language import Language\r\nfrom scispacy.custom_sentence_segmenter import combined_rule_sentence_segmenter\r\n\r\nnlp = spacy.load('en_core_sci_sm', disable=[\"tagger\", \"parser\", \"textcat\", \"ner\"])\r\nLanguage.factories['combined_rule_sentence_segmenter'] = lambda nlp, **cfg: combined_rule_sentence_segmenter\r\nnlp.add_pipe(nlp.create_pipe('combined_rule_sentence_segmenter'), first=True)\r\n```\r\non version 0.2.4.","closed_by":{"login":"DeNeutoy","id":16001974,"node_id":"MDQ6VXNlcjE2MDAxOTc0","avatar_url":"https://avatars.githubusercontent.com/u/16001974?v=4","gravatar_id":"","url":"https://api.github.com/users/DeNeutoy","html_url":"https://github.com/DeNeutoy","followers_url":"https://api.github.com/users/DeNeutoy/followers","following_url":"https://api.github.com/users/DeNeutoy/following{/other_user}","gists_url":"https://api.github.com/users/DeNeutoy/gists{/gist_id}","starred_url":"https://api.github.com/users/DeNeutoy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DeNeutoy/subscriptions","organizations_url":"https://api.github.com/users/DeNeutoy/orgs","repos_url":"https://api.github.com/users/DeNeutoy/repos","events_url":"https://api.github.com/users/DeNeutoy/events{/privacy}","received_events_url":"https://api.github.com/users/DeNeutoy/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/allenai/scispacy/issues/207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/allenai/scispacy/issues/207/timeline","performed_via_github_app":null,"state_reason":"completed"}