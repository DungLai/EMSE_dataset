{"url":"https://api.github.com/repos/allenai/scispacy/issues/352","repository_url":"https://api.github.com/repos/allenai/scispacy","labels_url":"https://api.github.com/repos/allenai/scispacy/issues/352/labels{/name}","comments_url":"https://api.github.com/repos/allenai/scispacy/issues/352/comments","events_url":"https://api.github.com/repos/allenai/scispacy/issues/352/events","html_url":"https://github.com/allenai/scispacy/issues/352","id":892391799,"node_id":"MDU6SXNzdWU4OTIzOTE3OTk=","number":352,"title":"Filtering Entity Linking candidates based on sentence similarity","user":{"login":"vasudev13","id":30664477,"node_id":"MDQ6VXNlcjMwNjY0NDc3","avatar_url":"https://avatars.githubusercontent.com/u/30664477?v=4","gravatar_id":"","url":"https://api.github.com/users/vasudev13","html_url":"https://github.com/vasudev13","followers_url":"https://api.github.com/users/vasudev13/followers","following_url":"https://api.github.com/users/vasudev13/following{/other_user}","gists_url":"https://api.github.com/users/vasudev13/gists{/gist_id}","starred_url":"https://api.github.com/users/vasudev13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vasudev13/subscriptions","organizations_url":"https://api.github.com/users/vasudev13/orgs","repos_url":"https://api.github.com/users/vasudev13/repos","events_url":"https://api.github.com/users/vasudev13/events{/privacy}","received_events_url":"https://api.github.com/users/vasudev13/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-15T08:42:20Z","updated_at":"2022-05-08T06:22:26Z","closed_at":"2022-05-08T06:22:26Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, thanks for developing such an awesome library. I wanted to know if there is way to generate candidates based on the context information. In certain cases, the distance seems to be same for all possible candidates where the context may help describing the nearest candidate. For Example-\r\n\r\n```\r\n\r\nfor x in nlp(\"date of birth: sex: male service: micu and then ...\").ents[1]._.kb_ents:\r\n    print(linker.kb.cui_to_entity[x[0]],x[1],sep=\"\\n\\n\\n\")\r\n    print()\r\n```\r\n\r\nGives output:\r\n\r\n```\r\nCUI: C0009253, Name: Coitus\r\nDefinition: The sexual union of a male and a female, a term used for human only.\r\nTUI(s): T040\r\nAliases (abbreviated, total: 21): \r\n\t vaginal intercourse, Sexual act, NOS, SEXUAL INTERCOURSE, Intercourse (observable entity), making love, Sex, sexual act, sexual intercourse, Coitus, NOS, coitus\r\n\r\n\r\n0.9999999403953552\r\n\r\nCUI: C0036864, Name: Sex Behavior\r\nDefinition: Sexual activities of humans.\r\nTUI(s): T053\r\nAliases (abbreviated, total: 29): \r\n\t sexual behaviour, sexual behaviors, Sexual behavior, Sexual Behavior, sex behavior, sexuality, Sexually, Activity, Sexual, Sex, Sexual behaviour, NOS\r\n\r\n\r\n0.9999999403953552\r\n\r\nCUI: C0079399, Name: Gender\r\nDefinition: Socially-constructed identity of male or female.\r\nTUI(s): T032\r\nAliases: (total: 7): \r\n\t gender, Gender, individual sex, sex (gender), gendered, Gender (observable entity), sex\r\n\r\n\r\n0.9999999403953552\r\n\r\nCUI: C1314687, Name: Sexual intercourse - finding\r\nDefinition: None\r\nTUI(s): T033\r\nAliases (abbreviated, total: 12): \r\n\t Sexual act, Biological sex (property), Biological sex, Coitus, Finding of sexual intercourse (finding), Sexual intercourse - finding, Finding of sexual intercourse, Sex, Vaginal intercourse, SI - Sexual intercourse\r\n\r\n\r\n0.9999999403953552\r\n\r\nCUI: C1418662, Name: PLXNA3 gene\r\nDefinition: None\r\nTUI(s): T028\r\nAliases (abbreviated, total: 11): \r\n\t XAP-6, Plxn3, PLXN4, PLXNA3, plexin A3, SEX, 6.3, TRANSMEMBRANE PROTEIN SEX, PLXNA3 gene, PLEXIN 4\r\n\r\n\r\n0.9999999403953552\r\n\r\n\r\n```\r\nOne possible way I thought of was to make use of concept definitions. Would be great if you could share your inputs on this!\r\n\r\nThanks in Advance!\r\n\r\nVasu","closed_by":{"login":"dakinggg","id":43149077,"node_id":"MDQ6VXNlcjQzMTQ5MDc3","avatar_url":"https://avatars.githubusercontent.com/u/43149077?v=4","gravatar_id":"","url":"https://api.github.com/users/dakinggg","html_url":"https://github.com/dakinggg","followers_url":"https://api.github.com/users/dakinggg/followers","following_url":"https://api.github.com/users/dakinggg/following{/other_user}","gists_url":"https://api.github.com/users/dakinggg/gists{/gist_id}","starred_url":"https://api.github.com/users/dakinggg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakinggg/subscriptions","organizations_url":"https://api.github.com/users/dakinggg/orgs","repos_url":"https://api.github.com/users/dakinggg/repos","events_url":"https://api.github.com/users/dakinggg/events{/privacy}","received_events_url":"https://api.github.com/users/dakinggg/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/allenai/scispacy/issues/352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/allenai/scispacy/issues/352/timeline","performed_via_github_app":null,"state_reason":"completed"}