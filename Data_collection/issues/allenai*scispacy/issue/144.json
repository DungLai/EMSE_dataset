{"url":"https://api.github.com/repos/allenai/scispacy/issues/144","repository_url":"https://api.github.com/repos/allenai/scispacy","labels_url":"https://api.github.com/repos/allenai/scispacy/issues/144/labels{/name}","comments_url":"https://api.github.com/repos/allenai/scispacy/issues/144/comments","events_url":"https://api.github.com/repos/allenai/scispacy/issues/144/events","html_url":"https://github.com/allenai/scispacy/issues/144","id":477540300,"node_id":"MDU6SXNzdWU0Nzc1NDAzMDA=","number":144,"title":"`Found array with 0 sample(s)`","user":{"login":"ibeltagy","id":2287797,"node_id":"MDQ6VXNlcjIyODc3OTc=","avatar_url":"https://avatars.githubusercontent.com/u/2287797?v=4","gravatar_id":"","url":"https://api.github.com/users/ibeltagy","html_url":"https://github.com/ibeltagy","followers_url":"https://api.github.com/users/ibeltagy/followers","following_url":"https://api.github.com/users/ibeltagy/following{/other_user}","gists_url":"https://api.github.com/users/ibeltagy/gists{/gist_id}","starred_url":"https://api.github.com/users/ibeltagy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibeltagy/subscriptions","organizations_url":"https://api.github.com/users/ibeltagy/orgs","repos_url":"https://api.github.com/users/ibeltagy/repos","events_url":"https://api.github.com/users/ibeltagy/events{/privacy}","received_events_url":"https://api.github.com/users/ibeltagy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-08-06T18:52:43Z","updated_at":"2019-08-06T20:17:46Z","closed_at":"2019-08-06T20:17:46Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Lucy's team ran into this bug during the hackathon \r\n\r\n```\r\n>>> nlp(\"hydroxytryptophan\")\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-231-7e41c1b0131c> in <module>\r\n----> 1 nlp(\"hydroxytryptophan\")\r\n\r\n//anaconda/envs/scispacy/lib/python3.6/site-packages/spacy/language.py in __call__(self, text, disable, component_cfg)\r\n    393             if not hasattr(proc, \"__call__\"):\r\n    394                 raise ValueError(Errors.E003.format(component=type(proc), name=name))\r\n--> 395             doc = proc(doc, **component_cfg.get(name, {}))\r\n    396             if doc is None:\r\n    397                 raise ValueError(Errors.E005.format(name=name))\r\n\r\n//anaconda/envs/scispacy/lib/python3.6/site-packages/scispacy/umls_linking.py in __call__(self, doc)\r\n     85 \r\n     86         mention_strings = [x.text for x in mentions]\r\n---> 87         batch_candidates = self.candidate_generator(mention_strings, self.k)\r\n     88 \r\n     89         for mention, candidates in zip(doc.ents, batch_candidates):\r\n\r\n//anaconda/envs/scispacy/lib/python3.6/site-packages/scispacy/candidate_generation.py in __call__(self, mention_texts, k)\r\n    201         if self.verbose:\r\n    202             print(f'Generating candidates for {len(mention_texts)} mentions')\r\n--> 203         tfidfs = self.vectorizer.transform(mention_texts)\r\n    204         start_time = datetime.datetime.now()\r\n    205 \r\n\r\n//anaconda/envs/scispacy/lib/python3.6/site-packages/sklearn/feature_extraction/text.py in transform(self, raw_documents, copy)\r\n   1679 \r\n   1680         X = super().transform(raw_documents)\r\n-> 1681         return self._tfidf.transform(X, copy=False)\r\n   1682 \r\n   1683     def _more_tags(self):\r\n\r\n//anaconda/envs/scispacy/lib/python3.6/site-packages/sklearn/feature_extraction/text.py in transform(self, X, copy)\r\n   1300         vectors : sparse matrix, [n_samples, n_features]\r\n   1301         \"\"\"\r\n-> 1302         X = check_array(X, accept_sparse='csr', dtype=FLOAT_DTYPES, copy=copy)\r\n   1303         if not sp.issparse(X):\r\n   1304             X = sp.csr_matrix(X, dtype=np.float64)\r\n\r\n//anaconda/envs/scispacy/lib/python3.6/site-packages/sklearn/utils/validation.py in check_array(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, warn_on_dtype, estimator)\r\n    548                              \" minimum of %d is required%s.\"\r\n    549                              % (n_samples, array.shape, ensure_min_samples,\r\n--> 550                                 context))\r\n    551 \r\n    552     if ensure_min_features > 0 and array.ndim == 2:\r\n\r\nValueError: Found array with 0 sample(s) (shape=(0, 53479)) while a minimum of 1 is required.\r\n```","closed_by":{"login":"dakinggg","id":43149077,"node_id":"MDQ6VXNlcjQzMTQ5MDc3","avatar_url":"https://avatars.githubusercontent.com/u/43149077?v=4","gravatar_id":"","url":"https://api.github.com/users/dakinggg","html_url":"https://github.com/dakinggg","followers_url":"https://api.github.com/users/dakinggg/followers","following_url":"https://api.github.com/users/dakinggg/following{/other_user}","gists_url":"https://api.github.com/users/dakinggg/gists{/gist_id}","starred_url":"https://api.github.com/users/dakinggg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakinggg/subscriptions","organizations_url":"https://api.github.com/users/dakinggg/orgs","repos_url":"https://api.github.com/users/dakinggg/repos","events_url":"https://api.github.com/users/dakinggg/events{/privacy}","received_events_url":"https://api.github.com/users/dakinggg/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/allenai/scispacy/issues/144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/allenai/scispacy/issues/144/timeline","performed_via_github_app":null,"state_reason":"completed"}