{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1906","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1906/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1906/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1906/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/1906","id":1304804453,"node_id":"I_kwDOB5BM6c5Nxbxl","number":1906,"title":"Avoid calling disable eager computation at top level import","user":{"login":"hmaarrfk","id":90008,"node_id":"MDQ6VXNlcjkwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/90008?v=4","gravatar_id":"","url":"https://api.github.com/users/hmaarrfk","html_url":"https://github.com/hmaarrfk","followers_url":"https://api.github.com/users/hmaarrfk/followers","following_url":"https://api.github.com/users/hmaarrfk/following{/other_user}","gists_url":"https://api.github.com/users/hmaarrfk/gists{/gist_id}","starred_url":"https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmaarrfk/subscriptions","organizations_url":"https://api.github.com/users/hmaarrfk/orgs","repos_url":"https://api.github.com/users/hmaarrfk/repos","events_url":"https://api.github.com/users/hmaarrfk/events{/privacy}","received_events_url":"https://api.github.com/users/hmaarrfk/received_events","type":"User","site_admin":false},"labels":[{"id":880550036,"node_id":"MDU6TGFiZWw4ODA1NTAwMzY=","url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"AlexEMG","id":20850270,"node_id":"MDQ6VXNlcjIwODUwMjcw","avatar_url":"https://avatars.githubusercontent.com/u/20850270?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexEMG","html_url":"https://github.com/AlexEMG","followers_url":"https://api.github.com/users/AlexEMG/followers","following_url":"https://api.github.com/users/AlexEMG/following{/other_user}","gists_url":"https://api.github.com/users/AlexEMG/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexEMG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexEMG/subscriptions","organizations_url":"https://api.github.com/users/AlexEMG/orgs","repos_url":"https://api.github.com/users/AlexEMG/repos","events_url":"https://api.github.com/users/AlexEMG/events{/privacy}","received_events_url":"https://api.github.com/users/AlexEMG/received_events","type":"User","site_admin":false},"assignees":[{"login":"AlexEMG","id":20850270,"node_id":"MDQ6VXNlcjIwODUwMjcw","avatar_url":"https://avatars.githubusercontent.com/u/20850270?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexEMG","html_url":"https://github.com/AlexEMG","followers_url":"https://api.github.com/users/AlexEMG/followers","following_url":"https://api.github.com/users/AlexEMG/following{/other_user}","gists_url":"https://api.github.com/users/AlexEMG/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexEMG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexEMG/subscriptions","organizations_url":"https://api.github.com/users/AlexEMG/orgs","repos_url":"https://api.github.com/users/AlexEMG/repos","events_url":"https://api.github.com/users/AlexEMG/events{/privacy}","received_events_url":"https://api.github.com/users/AlexEMG/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-14T13:39:32Z","updated_at":"2022-10-09T14:42:19Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"DeepLabCut seems to call `disable_eager_computation` from tensorflow at import time.\r\n\r\nThis creates some surprising behavior for those that expect eager computation to be enabled.\r\n\r\n**Describe the solution you'd like**\r\n\r\n* DeepLabCut to support eager computation. (Hard)\r\n* Delay disabling eager computation until DeepLabCut actually needs it (patch below)\r\n\r\n<details> <summary> Patch </summary>\r\n\r\n```patch\r\ndiff --git a/deeplabcut/pose_estimation_tensorflow/core/evaluate.py b/deeplabcut/pose_estimation_tensorflow/core/evaluate.py\r\nindex 2851f7e..dbf0a4e 100644\r\n--- a/deeplabcut/pose_estimation_tensorflow/core/evaluate.py\r\n+++ b/deeplabcut/pose_estimation_tensorflow/core/evaluate.py\r\n@@ -594,6 +594,7 @@ def evaluate_network(\r\n                 \"TF_CUDNN_USE_AUTOTUNE\"\r\n             ]  # was potentially set during training\r\n \r\n+        tf.compat.v1.disable_eager_execution()\r\n         tf.compat.v1.reset_default_graph()\r\n         os.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"2\"  #\r\n         #    tf.logging.set_verbosity(tf.logging.WARN)\r\n@@ -916,6 +917,7 @@ def evaluate_network(\r\n                                 foldername,\r\n                             )  # Rescaling coordinates to have figure in original size!\r\n \r\n+                        tf.compat.v1.disable_eager_execution()\r\n                         tf.compat.v1.reset_default_graph()\r\n                         # print(final_result)\r\n                     else:\r\ndiff --git a/deeplabcut/pose_estimation_tensorflow/core/evaluate_multianimal.py b/deeplabcut/pose_estimation_tensorflow/core/evaluate_multianimal.py\r\nindex d327690..3e22b57 100644\r\n--- a/deeplabcut/pose_estimation_tensorflow/core/evaluate_multianimal.py\r\n+++ b/deeplabcut/pose_estimation_tensorflow/core/evaluate_multianimal.py\r\n@@ -123,6 +123,7 @@ def evaluate_multianimal_full(\r\n         del os.environ[\"TF_CUDNN_USE_AUTOTUNE\"]  # was potentially set during training\r\n \r\n     tf.compat.v1.reset_default_graph()\r\n+    tf.compat.v1.disable_eager_execution()\r\n     os.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"2\"  #\r\n     if gputouse is not None:  # gpu selectinon\r\n         os.environ[\"CUDA_VISIBLE_DEVICES\"] = str(gputouse)\r\n@@ -556,6 +557,7 @@ def evaluate_multianimal_full(\r\n                         )\r\n \r\n                         tf.compat.v1.reset_default_graph()\r\n+                        tf.compat.v1.disable_eager_execution()\r\n \r\n                     n_multibpts = len(cfg[\"multianimalbodyparts\"])\r\n                     if n_multibpts == 1:\r\ndiff --git a/deeplabcut/pose_estimation_tensorflow/core/predict.py b/deeplabcut/pose_estimation_tensorflow/core/predict.py\r\nindex 04e4ac2..eebdc3d 100644\r\n--- a/deeplabcut/pose_estimation_tensorflow/core/predict.py\r\n+++ b/deeplabcut/pose_estimation_tensorflow/core/predict.py\r\n@@ -30,6 +30,7 @@ from .openvino.session import OpenVINOSession\r\n \r\n def setup_pose_prediction(cfg, allow_growth=False, collect_extra=False):\r\n     tf.compat.v1.reset_default_graph()\r\n+    tf.compat.v1.disable_eager_execution()\r\n     inputs = tf.compat.v1.placeholder(\r\n         tf.float32, shape=[cfg[\"batch_size\"], None, None, 3]\r\n     )\r\n@@ -216,6 +217,7 @@ def getposeNP(image, cfg, sess, inputs, outputs, outall=False):\r\n ### Code for TF inference on GPU\r\n def setup_GPUpose_prediction(cfg, allow_growth=False):\r\n     tf.compat.v1.reset_default_graph()\r\n+    tf.compat.v1.disable_eager_execution()\r\n     inputs = tf.compat.v1.placeholder(\r\n         tf.float32, shape=[cfg[\"batch_size\"], None, None, 3]\r\n     )\r\ndiff --git a/deeplabcut/pose_estimation_tensorflow/core/train.py b/deeplabcut/pose_estimation_tensorflow/core/train.py\r\nindex b8de950..496a5e5 100644\r\n--- a/deeplabcut/pose_estimation_tensorflow/core/train.py\r\n+++ b/deeplabcut/pose_estimation_tensorflow/core/train.py\r\n@@ -19,7 +19,6 @@ from pathlib import Path\r\n \r\n import tensorflow as tf\r\n \r\n-tf.compat.v1.disable_eager_execution()\r\n import tf_slim as slim\r\n \r\n from deeplabcut.pose_estimation_tensorflow.config import load_config\r\n@@ -200,6 +199,7 @@ def train(\r\n         max_to_keep=max_to_keep\r\n     )  # selects how many snapshots are stored, see https://github.com/AlexEMG/DeepLabCut/issues/8#issuecomment-387404835\r\n \r\n+    tf.compat.v1.disable_eager_execution()\r\n     if allow_growth:\r\n         config = tf.compat.v1.ConfigProto()\r\n         config.gpu_options.allow_growth = True\r\ndiff --git a/deeplabcut/pose_estimation_tensorflow/predict_videos.py b/deeplabcut/pose_estimation_tensorflow/predict_videos.py\r\nindex ff42709..350ff7e 100644\r\n--- a/deeplabcut/pose_estimation_tensorflow/predict_videos.py\r\n+++ b/deeplabcut/pose_estimation_tensorflow/predict_videos.py\r\n@@ -96,6 +96,7 @@ def create_tracking_dataset(\r\n     if gputouse is not None:  # gpu selection\r\n         os.environ[\"CUDA_VISIBLE_DEVICES\"] = str(gputouse)\r\n \r\n+    tf.compat.v1.disable_eager_execution()\r\n     tf.compat.v1.reset_default_graph()\r\n     start_path = os.getcwd()  # record cwd to return to this directory in the end\r\n \r\n@@ -424,6 +425,7 @@ def analyze_videos(\r\n     if gputouse is not None:  # gpu selection\r\n         os.environ[\"CUDA_VISIBLE_DEVICES\"] = str(gputouse)\r\n \r\n+    tf.compat.v1.disable_eager_execution()\r\n     tf.compat.v1.reset_default_graph()\r\n     start_path = os.getcwd()  # record cwd to return to this directory in the end\r\n \r\n@@ -1216,6 +1218,7 @@ def analyze_time_lapse_frames(\r\n     if gputouse is not None:  # gpu selection\r\n         os.environ[\"CUDA_VISIBLE_DEVICES\"] = str(gputouse)\r\n \r\n+    tf.compat.v1.disable_eager_execution()\r\n     tf.compat.v1.reset_default_graph()\r\n     start_path = os.getcwd()  # record cwd to return to this directory in the end\r\n \r\ndiff --git a/deeplabcut/pose_estimation_tensorflow/training.py b/deeplabcut/pose_estimation_tensorflow/training.py\r\nindex 7998c6f..5c9842e 100644\r\n--- a/deeplabcut/pose_estimation_tensorflow/training.py\r\n+++ b/deeplabcut/pose_estimation_tensorflow/training.py\r\n@@ -125,6 +125,7 @@ def train_network(\r\n \r\n     from deeplabcut.utils import auxiliaryfunctions\r\n \r\n+    tf.compat.v1.disable_eager_execution()\r\n     tf.compat.v1.reset_default_graph()\r\n     start_path = os.getcwd()\r\n \r\ndiff --git a/deeplabcut/pose_estimation_tensorflow/visualizemaps.py b/deeplabcut/pose_estimation_tensorflow/visualizemaps.py\r\nindex fb3f2da..8dc1daa 100644\r\n--- a/deeplabcut/pose_estimation_tensorflow/visualizemaps.py\r\n+++ b/deeplabcut/pose_estimation_tensorflow/visualizemaps.py\r\n@@ -69,6 +69,7 @@ def extract_maps(\r\n     import numpy as np\r\n \r\n     tf.compat.v1.reset_default_graph()\r\n+    tf.compat.v1.disable_eager_execution()\r\n     os.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"2\"  #\r\n     #    tf.logging.set_verbosity(tf.logging.WARN)\r\n\r\n```\r\n</details>\r\nI can run the test suite (in random order) with this, but I feel like there might be something missing.\r\n\r\nRelated issue: https://github.com/DeepLabCut/DeepLabCut/issues/1112","closed_by":null,"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1906/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1906/timeline","performed_via_github_app":null,"state_reason":null}