{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/416","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/416/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/416/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/416/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/416","id":490126575,"node_id":"MDU6SXNzdWU0OTAxMjY1NzU=","number":416,"title":"Dynamic Target Point Uncertainty","user":{"login":"Selmaan","id":5429274,"node_id":"MDQ6VXNlcjU0MjkyNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/5429274?v=4","gravatar_id":"","url":"https://api.github.com/users/Selmaan","html_url":"https://github.com/Selmaan","followers_url":"https://api.github.com/users/Selmaan/followers","following_url":"https://api.github.com/users/Selmaan/following{/other_user}","gists_url":"https://api.github.com/users/Selmaan/gists{/gist_id}","starred_url":"https://api.github.com/users/Selmaan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Selmaan/subscriptions","organizations_url":"https://api.github.com/users/Selmaan/orgs","repos_url":"https://api.github.com/users/Selmaan/repos","events_url":"https://api.github.com/users/Selmaan/events{/privacy}","received_events_url":"https://api.github.com/users/Selmaan/received_events","type":"User","site_admin":false},"labels":[{"id":880550040,"node_id":"MDU6TGFiZWw4ODA1NTAwNDA=","url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/labels/question","name":"question","color":"d876e3","default":true,"description":"user question (not great for github ;)"},{"id":1013047008,"node_id":"MDU6TGFiZWwxMDEzMDQ3MDA4","url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/labels/Feature-request","name":"Feature-request","color":"3cc9b1","default":false,"description":""},{"id":1019981644,"node_id":"MDU6TGFiZWwxMDE5OTgxNjQ0","url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/labels/contributions-welcome","name":"contributions-welcome","color":"0de065","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"AlexEMG","id":20850270,"node_id":"MDQ6VXNlcjIwODUwMjcw","avatar_url":"https://avatars.githubusercontent.com/u/20850270?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexEMG","html_url":"https://github.com/AlexEMG","followers_url":"https://api.github.com/users/AlexEMG/followers","following_url":"https://api.github.com/users/AlexEMG/following{/other_user}","gists_url":"https://api.github.com/users/AlexEMG/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexEMG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexEMG/subscriptions","organizations_url":"https://api.github.com/users/AlexEMG/orgs","repos_url":"https://api.github.com/users/AlexEMG/repos","events_url":"https://api.github.com/users/AlexEMG/events{/privacy}","received_events_url":"https://api.github.com/users/AlexEMG/received_events","type":"User","site_admin":false},"assignees":[{"login":"AlexEMG","id":20850270,"node_id":"MDQ6VXNlcjIwODUwMjcw","avatar_url":"https://avatars.githubusercontent.com/u/20850270?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexEMG","html_url":"https://github.com/AlexEMG","followers_url":"https://api.github.com/users/AlexEMG/followers","following_url":"https://api.github.com/users/AlexEMG/following{/other_user}","gists_url":"https://api.github.com/users/AlexEMG/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexEMG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexEMG/subscriptions","organizations_url":"https://api.github.com/users/AlexEMG/orgs","repos_url":"https://api.github.com/users/AlexEMG/repos","events_url":"https://api.github.com/users/AlexEMG/events{/privacy}","received_events_url":"https://api.github.com/users/AlexEMG/received_events","type":"User","site_admin":false},{"login":"MMathisLab","id":28102185,"node_id":"MDQ6VXNlcjI4MTAyMTg1","avatar_url":"https://avatars.githubusercontent.com/u/28102185?v=4","gravatar_id":"","url":"https://api.github.com/users/MMathisLab","html_url":"https://github.com/MMathisLab","followers_url":"https://api.github.com/users/MMathisLab/followers","following_url":"https://api.github.com/users/MMathisLab/following{/other_user}","gists_url":"https://api.github.com/users/MMathisLab/gists{/gist_id}","starred_url":"https://api.github.com/users/MMathisLab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MMathisLab/subscriptions","organizations_url":"https://api.github.com/users/MMathisLab/orgs","repos_url":"https://api.github.com/users/MMathisLab/repos","events_url":"https://api.github.com/users/MMathisLab/events{/privacy}","received_events_url":"https://api.github.com/users/MMathisLab/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2019-09-06T04:44:14Z","updated_at":"2020-04-24T02:12:39Z","closed_at":"2020-04-24T02:12:39Z","author_association":"NONE","active_lock_reason":null,"body":"I'm working on a multi-camera tracking application for freely moving animals, where frames from individual cameras will often have occluded body parts. However, the coarse location of occluded features can still be inferred. For example, the location of the animal's left eye is coarsely predictable from the right-hand side as somewhere behind the animal's head. \r\n\r\nIt would seem useful to train DeepLabCut to predict the coarse location of these occluded parts, however I'm currently not aware of how this could be done. I could exclude a target point for the occluded part, but this does not encourage predictions to be in the generally correct area. I could manually estimate a precise location, but this assigns the arbitrarily chosen point comparable weight as visible parts during training and so introduces possible noise and/or human biases into predictions. It seems like a simple alternative would be to allow users to specify a level of spatial precision during the manual labeling process? This manual precision/uncertainty would then be propagated to the diameter of the target score map used during network training, for that specific frame and part. Apologies if this is currently possible and I just don't know how to do it...\r\n\r\n(For context, I'm interested in appropriately calibrated uncertainties because I'd like to implement uncertainty-weighted estimation of 3d position from a multi-camera array. For 3d setups w/ freely moving animals, where this kind of occlusion might be present on >25% of frames, w/ partial occlusions even more frequent, properly weighting measurements from different cameras might substantially improve performance?)\r\n","closed_by":{"login":"MMathisLab","id":28102185,"node_id":"MDQ6VXNlcjI4MTAyMTg1","avatar_url":"https://avatars.githubusercontent.com/u/28102185?v=4","gravatar_id":"","url":"https://api.github.com/users/MMathisLab","html_url":"https://github.com/MMathisLab","followers_url":"https://api.github.com/users/MMathisLab/followers","following_url":"https://api.github.com/users/MMathisLab/following{/other_user}","gists_url":"https://api.github.com/users/MMathisLab/gists{/gist_id}","starred_url":"https://api.github.com/users/MMathisLab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MMathisLab/subscriptions","organizations_url":"https://api.github.com/users/MMathisLab/orgs","repos_url":"https://api.github.com/users/MMathisLab/repos","events_url":"https://api.github.com/users/MMathisLab/events{/privacy}","received_events_url":"https://api.github.com/users/MMathisLab/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/416/timeline","performed_via_github_app":null,"state_reason":"completed"}