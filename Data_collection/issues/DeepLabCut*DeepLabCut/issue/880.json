{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/880","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/880/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/880/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/880/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/880","id":688764030,"node_id":"MDU6SXNzdWU2ODg3NjQwMzA=","number":880,"title":"Session.run() leads to infinite loop","user":{"login":"Gillariel","id":18546660,"node_id":"MDQ6VXNlcjE4NTQ2NjYw","avatar_url":"https://avatars.githubusercontent.com/u/18546660?v=4","gravatar_id":"","url":"https://api.github.com/users/Gillariel","html_url":"https://github.com/Gillariel","followers_url":"https://api.github.com/users/Gillariel/followers","following_url":"https://api.github.com/users/Gillariel/following{/other_user}","gists_url":"https://api.github.com/users/Gillariel/gists{/gist_id}","starred_url":"https://api.github.com/users/Gillariel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gillariel/subscriptions","organizations_url":"https://api.github.com/users/Gillariel/orgs","repos_url":"https://api.github.com/users/Gillariel/repos","events_url":"https://api.github.com/users/Gillariel/events{/privacy}","received_events_url":"https://api.github.com/users/Gillariel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-30T18:04:36Z","updated_at":"2020-08-31T14:12:40Z","closed_at":"2020-08-31T14:12:40Z","author_association":"NONE","active_lock_reason":null,"body":"**Environnement**\r\nOS: Docker image based on continuumio/miniconda3\r\nDeepLabCut Version: 2.2b7\r\nAnaconda env used: miniconda3@latest\r\n\r\n**Describe the problem**\r\nHello everyone, in charge of deploying the flask API on top of our deeplabcut version, I encounter a problem around the prediction using a trained model. For the history, everything was working fine on multiple windows server before I had to dockerize it (Kind of mandatory since MS Azure do not support Anaconda).\r\nThe problem is in the \"run\" function of the tensorflow session if I have correctly understand our code.\r\nLoading the model is fine (see the dump of the object below, seems ok for me but someone a bit more experienced could maybe find something not right).\r\nBut using the \"run\" function by passing it the input data lead to an infinite request without any errors (try for more than 10 minutes, was taken around 10 seconds on windows server). Since it is going out of our codebase and that I have no logs nor errors, I am completely lost and dont know where to look at... \r\n\r\nThis is the code written by the guy who built the project :\r\n<details><summary>Code</summary><p>\r\n\r\n    def detect_points(model, image, detection_size, depth) :\r\n        if depth == 0 :\r\n            return None\r\n        if len(image.shape) == 2:\r\n            detection_image = gray2rgb(image)\r\n        else:\r\n            detection_image = image.copy()\r\n\r\n        detection_image, scale, origin = util.rescale(detection_image, detection_size)\r\n        try :\r\n            cfg, sess, inputs, outputs = model\r\n            image_input = data_to_input(detection_image)\r\n            #This is where the infinite loop is\r\n            outputs_np = sess.run(outputs, feed_dict={inputs:image_input})\r\n            scmap, locref = predict.extract_cnn_output(outputs_np, cfg)\r\n            pose = predict.argmax_pose_predict(scmap, locref, cfg.stride)\r\n      \r\n            names = point_names(model)\r\n            result={}\r\n            for i, point in enumerate(pose):\r\n                x = (point[0]-origin[0])/scale\r\n                y = (point[1]-origin[1])/scale\r\n                result[names[i]] = (x, y, point[2])\r\n            return result\r\n\r\n        except Exception as e : \r\n            logger.exception(e)\r\n            return detect_points(model, image, detection_size, depth - 1)\r\n</p></details>\r\n\r\n**How to Reproduce the problem**\r\nDue to my lack of knowledge about Python, Tensorflow & Deeplabcut, its quite complicated to give steps to reproduce.\r\nMoreover our model cannot be shared :/\r\nFeel free to ask any peace of code/logs you may need.\r\n\r\n<details><summary>Dump of the model</summary><p>\r\n    \r\n    {\r\n      'stride': 8.0, \r\n      'weigh_part_predictions': False, \r\n      'weigh_negatives': False, \r\n      'fg_fraction': 0.25, \r\n      'weigh_only_present_joints': False, \r\n      'mean_pixel': [\r\n        123.68,\r\n        116.779,\r\n        103.939\r\n      ], \r\n      'shuffle': True, \r\n      'snapshot_prefix': './snapshot', \r\n      'log_dir': 'log', \r\n      'global_scale': 1.0, \r\n      'location_refinement': True, \r\n      'locref_stdev': 7.2801, \r\n      'locref_loss_weight': 0.05, \r\n      'locref_huber_loss': True, \r\n      'optimizer': 'sgd', \r\n      'intermediate_supervision': False, \r\n      'intermediate_supervision_layer': 12, \r\n      'regularize': False, \r\n      'weight_decay': 0.0001, \r\n      'mirror': False, \r\n      'crop': False, \r\n      'crop_pad': 0, \r\n      'scoremap_dir': 'test', \r\n      'dataset_type': 'default', \r\n      'use_gt_segm': False, \r\n      'batch_size': 1, \r\n      'video': False, \r\n      'video_batch': False, \r\n      'all_joints': [\r\n          [ 0 ], [ 1 ], ..., [ 83 ]\r\n      ], \r\n      'all_joints_names': ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84'\r\n      ], \r\n      'dataset': 'dataset.mat', \r\n      'display_iters': 1000,\r\n      'init_weights': 'Models/1 - Forefoot/190924_MULTITEL/snapshot-300000', \r\n      'max_input_size': 1000, \r\n      'multi_step': [\r\n        [\r\n          0.005,\r\n          10000\r\n        ],\r\n        [\r\n          0.02,\r\n          100000\r\n        ],\r\n        [\r\n          0.002,\r\n          200000\r\n        ],\r\n        [\r\n          0.001,\r\n          300000\r\n        ]\r\n      ], \r\n      'net_type': 'resnet_50', \r\n      'num_joints': 84, \r\n      'pos_dist_thresh': 17, \r\n      'save_iters': 50000, \r\n      'scale_jitter_lo': 0.5, \r\n      'scale_jitter_up': 1.5\r\n    }, \r\n    <tensorflow.python.client.session.Session object at 0x7f1fe29bae80>, \r\n    <tf.Tensor 'Placeholder: 0' shape=(1, ?, ?, 3) dtype=float32>,\r\n    [\r\n      <tf.Tensor 'Sigmoid: 0' shape=(1, ?, ?, 84) dtype=float32>, \r\n      <tf.Tensor 'pose/locref_pred/block4/BiasAdd: 0' shape=(1, ?, ?, 168) dtype=float32>\r\n    ]\r\n</p></details>\r\n\r\nMany thanks!\r\n","closed_by":{"login":"Gillariel","id":18546660,"node_id":"MDQ6VXNlcjE4NTQ2NjYw","avatar_url":"https://avatars.githubusercontent.com/u/18546660?v=4","gravatar_id":"","url":"https://api.github.com/users/Gillariel","html_url":"https://github.com/Gillariel","followers_url":"https://api.github.com/users/Gillariel/followers","following_url":"https://api.github.com/users/Gillariel/following{/other_user}","gists_url":"https://api.github.com/users/Gillariel/gists{/gist_id}","starred_url":"https://api.github.com/users/Gillariel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gillariel/subscriptions","organizations_url":"https://api.github.com/users/Gillariel/orgs","repos_url":"https://api.github.com/users/Gillariel/repos","events_url":"https://api.github.com/users/Gillariel/events{/privacy}","received_events_url":"https://api.github.com/users/Gillariel/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/880/timeline","performed_via_github_app":null,"state_reason":"completed"}