{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1332","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1332/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1332/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1332/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/1332","id":922977676,"node_id":"MDU6SXNzdWU5MjI5Nzc2NzY=","number":1332,"title":"Kmeans Extraction Error","user":{"login":"neurologic","id":4777333,"node_id":"MDQ6VXNlcjQ3NzczMzM=","avatar_url":"https://avatars.githubusercontent.com/u/4777333?v=4","gravatar_id":"","url":"https://api.github.com/users/neurologic","html_url":"https://github.com/neurologic","followers_url":"https://api.github.com/users/neurologic/followers","following_url":"https://api.github.com/users/neurologic/following{/other_user}","gists_url":"https://api.github.com/users/neurologic/gists{/gist_id}","starred_url":"https://api.github.com/users/neurologic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neurologic/subscriptions","organizations_url":"https://api.github.com/users/neurologic/orgs","repos_url":"https://api.github.com/users/neurologic/repos","events_url":"https://api.github.com/users/neurologic/events{/privacy}","received_events_url":"https://api.github.com/users/neurologic/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-06-16T18:57:27Z","updated_at":"2021-07-01T16:28:10Z","closed_at":"2021-06-22T21:02:25Z","author_association":"NONE","active_lock_reason":null,"body":"Thank you as always for all of your help and guidance!\r\nWe are working on tracking a group of freely swimming Mormyrid fish to study electrocommunication and turn taking in animal communication behavior.\r\n\r\n**OS and Deeplabcut version**\r\nMacOS 10.15\r\nDeeplabcut 2.1.10.4 (also tried 2.2rc2 bleeding edge install)\r\nenvironment DLC_CPU\r\n\r\n\r\n**Describe the problem**\r\n\r\nWe are running into an error when we use the kmeans extraction method (but not uniform). \r\n\r\n\r\n<details><summary>Code output</summary><p>\r\n\r\n[A new project with name MO-lab-2021-06-16 is created at /Users/kperks/Desktop/temp and a configurable file (config.yaml) is stored there. Change the parameters in this file to adapt to your project's needs.\r\n Once you have changed the configuration file, use the function 'extract_frames' to select frames for labeling.\r\n. [OPTIONAL] Use the function 'add_new_videos' to add new videos to your project (at any stage).\r\nmore networks are available soon for maDLC, but currenlty this uses DLC-ResNet50 only\r\nConfig file read successfully.\r\nExtracting frames based on kmeans ...\r\nKmeans-quantization based extracting of frames from 0.0  seconds to 8.88  seconds.\r\nExtracting and downsampling... 491  frames from the video.\r\n491it [00:05, 85.89it/s]\r\nKmeans clustering ... (this might take a while)\r\nTraceback (most recent call last):\r\n  File \"/Users/kperks/opt/anaconda3/envs/DLC-CPU/lib/python3.7/site-packages/deeplabcut/gui/extract_frames.py\", line 241, in extract_frames\r\n    slider_width=slider_width,\r\n  File \"/Users/kperks/opt/anaconda3/envs/DLC-CPU/lib/python3.7/site-packages/deeplabcut/generate_training_dataset/frame_extraction.py\", line 306, in extract_frames\r\n    color=cluster_color,\r\n  File \"/Users/kperks/opt/anaconda3/envs/DLC-CPU/lib/python3.7/site-packages/deeplabcut/utils/frameselectiontools.py\", line 392, in KmeansbasedFrameselectioncv2\r\n    kmeans.fit(data)\r\n  File \"/Users/kperks/opt/anaconda3/envs/DLC-CPU/lib/python3.7/site-packages/sklearn/cluster/_kmeans.py\", line 1662, in fit\r\n    order='C', accept_large_sparse=False)\r\n  File \"/Users/kperks/opt/anaconda3/envs/DLC-CPU/lib/python3.7/site-packages/sklearn/base.py\", line 421, in _validate_data\r\n    X = check_array(X, **check_params)\r\n  File \"/Users/kperks/opt/anaconda3/envs/DLC-CPU/lib/python3.7/site-packages/sklearn/utils/validation.py\", line 63, in inner_f\r\n    return f(*args, **kwargs)\r\n  File \"/Users/kperks/opt/anaconda3/envs/DLC-CPU/lib/python3.7/site-packages/sklearn/utils/validation.py\", line 664, in check_array\r\n    allow_nan=force_all_finite == 'allow-nan')\r\n  File \"/Users/kperks/opt/anaconda3/envs/DLC-CPU/lib/python3.7/site-packages/sklearn/utils/validation.py\", line 106, in _assert_all_finite\r\n    msg_dtype if msg_dtype is not None else X.dtype)\r\nValueError: Input contains NaN, infinity or a value too large for dtype('float64').\r\n]\r\n\r\n</p></details>\r\n\r\n**How to Reproduce the problem**\r\nSteps to reproduce the behavior:\r\n1. from pythonw import deeplabcut and run deeplabcut.launch_dlc()\r\n2. create new project with video (copy video to project directory checked)\r\n3. extract frames using kmeans \r\n4. See error\r\n\r\n*However, if we use 'uniform' algorithm instead, the frames are successfully extracted*\r\nSo I am using the uniformly extracted frames for now to build a training set. \r\n\r\n**Additional context**\r\nThis (or something similar) has come up in the past and it seemed like using the bleeding edge version remedied it. But that is not working this time. Over the school year we have tried to get this going but were dealing with camera setup and animal issues. Sorry it has taken so long to hammer on the actual training of our network for this. But we are at that point now so would like to get this weird behavior figured out before getting too far into the training (in case we need to change versions or create new projects from scratch to fix it, etc).\r\nThe multianimal testscript does work, so it does not seem like a bug in the code. Could it be a compatibility issue with the video file? We recorded using Pylon software from a Basler AcA1300 usb camera. \r\n\r\nHere is the information from ffmpeg about the video file that is causing the error:\r\n\r\n<details><summary>Code output</summary><p>\r\n\r\n[ffmpeg version 4.2.3 Copyright (c) 2000-2020 the FFmpeg developers\r\n  built with clang version 9.0.1\r\n  configuration: --prefix=/Users/kperks/opt/anaconda3/envs/DLC-CPU --cc=x86_64-apple-darwin13.4.0-clang --disable-doc --disable-openssl --enable-avresample --enable-gnutls --enable-gpl --enable-hardcoded-tables --enable-libfreetype --enable-libopenh264 --enable-libx264 --enable-pic --enable-pthreads --enable-shared --enable-static --enable-version3 --enable-zlib --enable-libmp3lame\r\n  libavutil      56. 31.100 / 56. 31.100\r\n  libavcodec     58. 54.100 / 58. 54.100\r\n  libavformat    58. 29.100 / 58. 29.100\r\n  libavdevice    58.  8.100 / 58.  8.100\r\n  libavfilter     7. 57.100 /  7. 57.100\r\n  libavresample   4.  0.  0 /  4.  0.  0\r\n  libswscale      5.  5.100 /  5.  5.100\r\n  libswresample   3.  5.100 /  3.  5.100\r\n  libpostproc    55.  5.100 / 55.  5.100\r\nInput #0, avi, from 'Rachel_FirstTest_IR.avi':\r\n  Duration: 00:00:08.88, start: 0.000000, bitrate: 578701 kb/s\r\n    Stream #0:0: Video: rawvideo, pal8, 1280x1024, 581053 kb/s, 55.30 fps, 55.30 tbr, 55.30 tbn, 55.30 tbc\r\n]\r\n\r\n</p></details>\r\n\r\n","closed_by":{"login":"MMathisLab","id":28102185,"node_id":"MDQ6VXNlcjI4MTAyMTg1","avatar_url":"https://avatars.githubusercontent.com/u/28102185?v=4","gravatar_id":"","url":"https://api.github.com/users/MMathisLab","html_url":"https://github.com/MMathisLab","followers_url":"https://api.github.com/users/MMathisLab/followers","following_url":"https://api.github.com/users/MMathisLab/following{/other_user}","gists_url":"https://api.github.com/users/MMathisLab/gists{/gist_id}","starred_url":"https://api.github.com/users/MMathisLab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MMathisLab/subscriptions","organizations_url":"https://api.github.com/users/MMathisLab/orgs","repos_url":"https://api.github.com/users/MMathisLab/repos","events_url":"https://api.github.com/users/MMathisLab/events{/privacy}","received_events_url":"https://api.github.com/users/MMathisLab/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1332/timeline","performed_via_github_app":null,"state_reason":"completed"}