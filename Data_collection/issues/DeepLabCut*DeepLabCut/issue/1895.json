{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1895","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1895/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1895/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1895/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/1895","id":1291981279,"node_id":"I_kwDOB5BM6c5NAhHf","number":1895,"title":"Design considerations - 'deeplabcut' Python package and DeepLabCut Application","user":{"login":"rahulporuri","id":1926457,"node_id":"MDQ6VXNlcjE5MjY0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1926457?v=4","gravatar_id":"","url":"https://api.github.com/users/rahulporuri","html_url":"https://github.com/rahulporuri","followers_url":"https://api.github.com/users/rahulporuri/followers","following_url":"https://api.github.com/users/rahulporuri/following{/other_user}","gists_url":"https://api.github.com/users/rahulporuri/gists{/gist_id}","starred_url":"https://api.github.com/users/rahulporuri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahulporuri/subscriptions","organizations_url":"https://api.github.com/users/rahulporuri/orgs","repos_url":"https://api.github.com/users/rahulporuri/repos","events_url":"https://api.github.com/users/rahulporuri/events{/privacy}","received_events_url":"https://api.github.com/users/rahulporuri/received_events","type":"User","site_admin":false},"labels":[{"id":1013047008,"node_id":"MDU6TGFiZWwxMDEzMDQ3MDA4","url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/labels/Feature-request","name":"Feature-request","color":"3cc9b1","default":false,"description":""},{"id":1879338398,"node_id":"MDU6TGFiZWwxODc5MzM4Mzk4","url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/labels/Community%20feedback%20requested","name":"Community feedback requested","color":"8c06e0","default":false,"description":"Comments from the user/dev community welcomed!"}],"state":"open","locked":false,"assignee":{"login":"stes","id":727984,"node_id":"MDQ6VXNlcjcyNzk4NA==","avatar_url":"https://avatars.githubusercontent.com/u/727984?v=4","gravatar_id":"","url":"https://api.github.com/users/stes","html_url":"https://github.com/stes","followers_url":"https://api.github.com/users/stes/followers","following_url":"https://api.github.com/users/stes/following{/other_user}","gists_url":"https://api.github.com/users/stes/gists{/gist_id}","starred_url":"https://api.github.com/users/stes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stes/subscriptions","organizations_url":"https://api.github.com/users/stes/orgs","repos_url":"https://api.github.com/users/stes/repos","events_url":"https://api.github.com/users/stes/events{/privacy}","received_events_url":"https://api.github.com/users/stes/received_events","type":"User","site_admin":false},"assignees":[{"login":"stes","id":727984,"node_id":"MDQ6VXNlcjcyNzk4NA==","avatar_url":"https://avatars.githubusercontent.com/u/727984?v=4","gravatar_id":"","url":"https://api.github.com/users/stes","html_url":"https://github.com/stes","followers_url":"https://api.github.com/users/stes/followers","following_url":"https://api.github.com/users/stes/following{/other_user}","gists_url":"https://api.github.com/users/stes/gists{/gist_id}","starred_url":"https://api.github.com/users/stes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stes/subscriptions","organizations_url":"https://api.github.com/users/stes/orgs","repos_url":"https://api.github.com/users/stes/repos","events_url":"https://api.github.com/users/stes/events{/privacy}","received_events_url":"https://api.github.com/users/stes/received_events","type":"User","site_admin":false},{"login":"AlexEMG","id":20850270,"node_id":"MDQ6VXNlcjIwODUwMjcw","avatar_url":"https://avatars.githubusercontent.com/u/20850270?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexEMG","html_url":"https://github.com/AlexEMG","followers_url":"https://api.github.com/users/AlexEMG/followers","following_url":"https://api.github.com/users/AlexEMG/following{/other_user}","gists_url":"https://api.github.com/users/AlexEMG/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexEMG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexEMG/subscriptions","organizations_url":"https://api.github.com/users/AlexEMG/orgs","repos_url":"https://api.github.com/users/AlexEMG/repos","events_url":"https://api.github.com/users/AlexEMG/events{/privacy}","received_events_url":"https://api.github.com/users/AlexEMG/received_events","type":"User","site_admin":false},{"login":"jeylau","id":30733203,"node_id":"MDQ6VXNlcjMwNzMzMjAz","avatar_url":"https://avatars.githubusercontent.com/u/30733203?v=4","gravatar_id":"","url":"https://api.github.com/users/jeylau","html_url":"https://github.com/jeylau","followers_url":"https://api.github.com/users/jeylau/followers","following_url":"https://api.github.com/users/jeylau/following{/other_user}","gists_url":"https://api.github.com/users/jeylau/gists{/gist_id}","starred_url":"https://api.github.com/users/jeylau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeylau/subscriptions","organizations_url":"https://api.github.com/users/jeylau/orgs","repos_url":"https://api.github.com/users/jeylau/repos","events_url":"https://api.github.com/users/jeylau/events{/privacy}","received_events_url":"https://api.github.com/users/jeylau/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-07-02T06:22:54Z","updated_at":"2022-10-09T14:34:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Note that this is a meta-issue. I'm not discussing one-specific issue here. Rather, i'm trying to document big picture/design decisions in the current package/application, decisions which add friction when integrating `deeplabcut` into external applications. I'd like comments/feedback from the authors/maintainers regarding these points.\r\n\r\nIn this issue, I will be using \"DeepLabCut\" to refer to the end-user Application and `deeplabcut` to refer to Python package.\r\n\r\nBased on my understanding, DeepLabCut was built as an end user application. There are a number of design considerations in the `deeplabcut` package that make sense from the point of view of DeepLabCut. But, when an external application tries to integrate `deeplabcut`, there are a number of awkward workarounds/misfits.\r\n\r\nFor example, DeepLabCut controls the configuration file, the directory containing the results and the filenames of the result files. The functions in `deeplabcut` used by DeepLabCut create pandas DataFrames, which are what get saved to disk, but they are not returned by the functions.\r\n\r\nAnother example is the type hints in the package. Widespread adoption of type hints in the package might not be necessary but adding type hints for all top-level functions should improve usability of `deeplabcut` in external applications (e.g. documented in https://deeplabcut.github.io/DeepLabCut/docs/standardDeepLabCut_UserGuide.html).\r\n\r\nAnother example is `print` calls to `sys.stdout` in `deeplabcut`. DeepLabCut needs to convey information to the user but the use of `print` calls in `deeplabcut` mean that applications that don't  want to print these messages to `stdout` will have to resort to monkeypatching `sys.stdout`/`sys.stderr` to capture the `print` messages and redirect them as `logging` messages. This can be resolved by adding a logger to the DeepLabCut application and replacing the `print` calls with `logger.*` calls e.g. `logger.info`/`logger.error`/`logger.warning`.\r\n\r\nAnother example is uniform usage of `str` or `pathlib.Path` objects as filepaths to configuration file, video files, destination folders etc. At the moment, it's not clear from the docstrings in `deeplabcut` whether the functions accept `pathlib.Path` objects, resulting in trial-and-error to figure this out (or digging into the code) or resulting in the external application being conservative by only passing string paths.\r\n\r\nAnother example is the separation of library dependencies vs application dependencies, specifically `matplotlib`. Users of the `deeplabcut` package might not be interested in functionality deeplabcut provides using `matplotlib` so preventing `matplotlib` imports from modules that are \"core\" to deeplabcut would be useful.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1895/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1895/timeline","performed_via_github_app":null,"state_reason":null}