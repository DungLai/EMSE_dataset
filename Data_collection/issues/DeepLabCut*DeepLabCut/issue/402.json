{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/402","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/402/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/402/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/402/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/402","id":482592277,"node_id":"MDU6SXNzdWU0ODI1OTIyNzc=","number":402,"title":"Issues in deeplabcut.analyze_time_lapse_frames()","user":{"login":"ambareeshsrja16","id":39631487,"node_id":"MDQ6VXNlcjM5NjMxNDg3","avatar_url":"https://avatars.githubusercontent.com/u/39631487?v=4","gravatar_id":"","url":"https://api.github.com/users/ambareeshsrja16","html_url":"https://github.com/ambareeshsrja16","followers_url":"https://api.github.com/users/ambareeshsrja16/followers","following_url":"https://api.github.com/users/ambareeshsrja16/following{/other_user}","gists_url":"https://api.github.com/users/ambareeshsrja16/gists{/gist_id}","starred_url":"https://api.github.com/users/ambareeshsrja16/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambareeshsrja16/subscriptions","organizations_url":"https://api.github.com/users/ambareeshsrja16/orgs","repos_url":"https://api.github.com/users/ambareeshsrja16/repos","events_url":"https://api.github.com/users/ambareeshsrja16/events{/privacy}","received_events_url":"https://api.github.com/users/ambareeshsrja16/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-08-20T00:52:13Z","updated_at":"2019-08-27T06:54:37Z","closed_at":"2019-08-26T19:31:15Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Issue 1**\r\nTrying to execute deeplabcut.analyze_time_lapse_frames() but breaks with NameError \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Follow steps in DemoNotebook for Own data\r\n2. Make a folder containing images to be analysed\r\n3. Call deeplabcut.analyze_time_lapse_frames() with appropriate arguments\r\n4. See error\r\n\r\n**Expected behavior**\r\nExpect function to run and give output.\r\n\r\n**Error Trace**\r\n\r\n    \r\n    NameError                                 Traceback (most recent call last)\r\n    <ipython-input-51-f09ba90fb2b7> in <module>()\r\n    ----> 1 deeplabcut.analyze_time_lapse_frames(path_config_file, directory = r\"C:\\Users\\asree\\Downloads\\Tool_tracking_main\\testing\", ) \r\n\r\n    C:\\Users\\asree\\Anaconda3\\envs\\dlc-windowsGPU\\lib\\site-packages\\deeplabcut\\pose_estimation_tensorflow\\predict_videos.py in analyze_time_lapse_frames(config, directory, frametype, shuffle, trainingsetindex, gputouse, save_as_csv, rgb)\r\n    470 \r\n    471         trainingsetindex: int, optional\r\n    --> 472             Integer specifying which TrainingsetFraction to use. By default the first (note that TrainingFraction is a list in config.yaml).\r\n    473 \r\n    474         gputouse: int, optional. Natural number indicating the number of your GPU (see number in nvidia-smi). If you do not have a GPU put None.\r\n\r\n    NameError: name 'TF' is not defined`\r\n\r\n**Desktop**\r\nOS: Windows 10\r\nDeepLabCut Version: '2.0.7.2'\r\nBrowser: Chrome\r\n\r\n**Additional context**\r\n\r\nFound lines in function deeplabcut_analyze_videos(), which looked similar in functionality but were absent in deeplabcut.analyze_time_lapse_frames() (**Lines 102: 112** in https://github.com/AlexEMG/DeepLabCut/blob/master/deeplabcut/pose_estimation_tensorflow/predict_videos.py)\r\n\r\n    if 'TF_CUDNN_USE_AUTOTUNE' in os.environ:\r\n        del os.environ['TF_CUDNN_USE_AUTOTUNE'] #was potentially set during training\r\n\r\n    if gputouse is not None: #gpu selection\r\n            os.environ['CUDA_VISIBLE_DEVICES'] = str(gputouse)\r\n\r\n    vers = (tf.__version__).split('.')\r\n    if int(vers[0])==1 and int(vers[1])>12:\r\n        TF=tf.compat.v1\r\n    else:\r\n        TF=tf\r\n\r\nShould they be present in deeplabcut.analyze_time_lapse_frames() as well?\r\n\r\n**Update**: No more NameError with the lines added, even though I'm not sure if it'll have other implications.\r\n\r\n**_____________________________________________________________________________________________________**\r\n**_____________________________________________________________________________________________________**\r\n\r\n\r\n**Issue 2 (Minor)**\r\nUnable to use deeplabcut.analyze_time_lapse_frames() if number of frames is just 1\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Follow steps in DemoNotebook for Own data\r\n2. Make a folder containing images to be analyzed\r\n3. Call deeplabcut.analyze_time_lapse_frames() with appropriate arguments, the directory containing frames should only have one frame\r\n4. See \"No frames were found. Consider changing the path or the frametype.\"\r\n\r\n**Expected behavior**\r\nExpect function to run and give output\r\n\r\n**Desktop**\r\nOS: Windows 10\r\nDeepLabCut Version: '2.0.7.2'\r\nBrowser: Chrome\r\n\r\n**Possible changes/ Additional context**\r\n\r\nIn function deeplabcut.analyze_time_lapse_frames() , (**Line 572:** in https://github.com/AlexEMG/DeepLabCut/blob/master/deeplabcut/pose_estimation_tensorflow/predict_videos.py)\r\n\r\n     ##################################################\r\n     # Loading the images\r\n     ##################################################\r\n     # checks if input is a directory\r\n        if os.path.isdir(directory) == True:\r\n            \"\"\"\r\n            Analyzes all the frames in the directory.\r\n            \"\"\"\r\n            print(\"Analyzing all frames in the directory: \", directory)\r\n            os.chdir(directory)\r\n            framelist = np.sort([fn for fn in os.listdir(os.curdir) if (frametype in fn)])\r\n\r\n        vname = Path(directory).stem\r\n        dataname = os.path.join(directory, vname + DLCscorer + '.h5')\r\n        try:\r\n            # Attempt to load data...\r\n            pd.read_hdf(dataname)\r\n            print(\"Frames already analyzed!\", dataname)\r\n        except FileNotFoundError:\r\n            nframes = len(framelist)\r\n            if nframes > 1:  # changed to >=1 so that it'll work even for single frame\r\n                start = time.time()\r\n\r\nif the condition is changed to nframes>= 1, this will work for even one image. \r\n\r\nCurrently using dataframe .analyze_time_lapse_frames() seems to be the best way to use image-based predictions of the model. I'd asked for the same at https://github.com/AlexEMG/DeepLabCut/issues/401, so if there is a better way of doing this, do let me know! \r\n\r\nThank you! \r\n","closed_by":{"login":"AlexEMG","id":20850270,"node_id":"MDQ6VXNlcjIwODUwMjcw","avatar_url":"https://avatars.githubusercontent.com/u/20850270?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexEMG","html_url":"https://github.com/AlexEMG","followers_url":"https://api.github.com/users/AlexEMG/followers","following_url":"https://api.github.com/users/AlexEMG/following{/other_user}","gists_url":"https://api.github.com/users/AlexEMG/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexEMG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexEMG/subscriptions","organizations_url":"https://api.github.com/users/AlexEMG/orgs","repos_url":"https://api.github.com/users/AlexEMG/repos","events_url":"https://api.github.com/users/AlexEMG/events{/privacy}","received_events_url":"https://api.github.com/users/AlexEMG/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/402/timeline","performed_via_github_app":null,"state_reason":"completed"}