{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1815","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1815/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1815/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1815/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/1815","id":1222204101,"node_id":"I_kwDOB5BM6c5I2VrF","number":1815,"title":"DeepLabCut is \"Loud\"","user":{"login":"hmaarrfk","id":90008,"node_id":"MDQ6VXNlcjkwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/90008?v=4","gravatar_id":"","url":"https://api.github.com/users/hmaarrfk","html_url":"https://github.com/hmaarrfk","followers_url":"https://api.github.com/users/hmaarrfk/followers","following_url":"https://api.github.com/users/hmaarrfk/following{/other_user}","gists_url":"https://api.github.com/users/hmaarrfk/gists{/gist_id}","starred_url":"https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmaarrfk/subscriptions","organizations_url":"https://api.github.com/users/hmaarrfk/orgs","repos_url":"https://api.github.com/users/hmaarrfk/repos","events_url":"https://api.github.com/users/hmaarrfk/events{/privacy}","received_events_url":"https://api.github.com/users/hmaarrfk/received_events","type":"User","site_admin":false},"labels":[{"id":1013047008,"node_id":"MDU6TGFiZWwxMDEzMDQ3MDA4","url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/labels/Feature-request","name":"Feature-request","color":"3cc9b1","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-05-01T16:09:57Z","updated_at":"2022-10-09T14:32:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Is your feature request related to a problem? Please describe.**\r\nI find that DeepLabCut is rather \"Loud\" in terms of output when one uses it to analyze many videos. Alot of output is generated on `stdout`, which sometimes isn't piped to the user (i.e. if the GUI is used, the output is going to a terminal, so the user isn't really aware of what is going on) and generally speaking, the amount of verbosity increases the likeliness of a user simply disabling outputs all together.\r\n\r\nI find a few different locations where print statements can be avoided:\r\n1. During the top level import. This typically communicates to the end user that different features of DLC are enabled/disabled.\r\n2. During analysis to report progress.\r\n3. During analysis to report that no files were found.\r\n4. During analysis through the use of a \"standard\" `tqdm` object.\r\n\r\n**Describe the solution you'd like**\r\nI think a few improvements have been made to python since DLC started that can be used to improve on the present state.\r\n\r\n1. Lazy importing (Python 3.7+) may be used to avoid importing GUI/Pytorch features until the user requests them. If the user requests it and the dependencies are not available, and error is likely better than a warning?\r\n2. `quiet` or `verbose` flags may be used here. I typically chose to only allow the user to provide these as keyword only arguments.\r\n3. `quiet`, `verbose` flags may be used. It may also be better to error here?\r\n4. A `quiet` or `verbose` flag may be used. I would prefer the usage of a `tqdm` \"constructor\", so users may pass in `tqdm.notebook` or similar to get application specific progress bars. \r\n\r\nPersonally, I think the use of `print` statements should not be used within the \"library\" portion, but more at the \"application\" level. However, I understand that they are convenient for debugging and rapid development.\r\n\r\nI also think the print statements are useful to debug long running training sessions.\r\nI think other libraries use the [logging](https://docs.python.org/3/howto/logging.html) but I don't have much experience with this.\r\n\r\n**Describe alternatives you've considered**\r\nThere isn't much one can do to remove `internal` print statement other than direct patching (or monkey patching). I would prefer to avoid these solutions.\r\n\r\n**Additional context**\r\nI'm happy to submit patches to start addressing the different points (as different Pull Requests). Though I'm not sure this is something you want to work on at all.","closed_by":null,"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1815/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1815/timeline","performed_via_github_app":null,"state_reason":null}