{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/581","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/581/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/581/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/581/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/581","id":561966594,"node_id":"MDU6SXNzdWU1NjE5NjY1OTQ=","number":581,"title":"Wrong indexing of label positions ","user":{"login":"AdoNunes","id":17873774,"node_id":"MDQ6VXNlcjE3ODczNzc0","avatar_url":"https://avatars.githubusercontent.com/u/17873774?v=4","gravatar_id":"","url":"https://api.github.com/users/AdoNunes","html_url":"https://github.com/AdoNunes","followers_url":"https://api.github.com/users/AdoNunes/followers","following_url":"https://api.github.com/users/AdoNunes/following{/other_user}","gists_url":"https://api.github.com/users/AdoNunes/gists{/gist_id}","starred_url":"https://api.github.com/users/AdoNunes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AdoNunes/subscriptions","organizations_url":"https://api.github.com/users/AdoNunes/orgs","repos_url":"https://api.github.com/users/AdoNunes/repos","events_url":"https://api.github.com/users/AdoNunes/events{/privacy}","received_events_url":"https://api.github.com/users/AdoNunes/received_events","type":"User","site_admin":false},"labels":[{"id":880550034,"node_id":"MDU6TGFiZWw4ODA1NTAwMzQ=","url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-02-08T04:07:20Z","updated_at":"2020-05-11T00:15:55Z","closed_at":"2020-05-11T00:15:55Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**The bug**\r\nPreviously I commented glitches in the label positions when relabeling or labeling new frames [https://github.com/AlexEMG/DeepLabCut/issues/574#issuecomment-582221262](url)\r\nI tracked down the bug. In my case, I tried to create a project in Windows but I had problems when creating a symbolic link or copying over the videos. To save time, I created the project and labeled frames in Unix. Then I trained the model, and then refining labels or labeling frames, I would often see the labels of another frame into the wrong frame. As commented in #574 the frame number would even go to negative indexes. \r\n\r\nI did not dive into the code, but the reason is: if I have 5 images in a video labeled folder, the script reads the 5th image and calls the label file (h5/csv) and looks for the 5th row (+3 header rows), without taking into account the file name that is present in the first column and same raw. In addition, the path in the name is hardcoded with system-dependent slashes ('/', '\\'). \r\n\r\nThis bug leads to many unexpected behaviors. In my case, labels were done in linux, re-labeling in Windows. The label file is sorted in descending order, '/' precedes '\\', so all the linux created images were before all the windows ones, leading to unmatched label-frames. If an image is deleted, the code fails to get the right label positions. \r\n\r\nThis unexpected behavior has previously caused issues, and there are some patch functions such as `convertannotationdata_fromwindows2unixstyle` or `dropannotationfileentriesduetodeletedimages`. However, these do not address the problematic code. In my case, `dropannotationfileentriesduetodeletedimages` doesn't work as it just flips the slash to the opposite side without taking into account the O.S.\r\n\r\n**Solution**\r\nDon't hard code the row index of the frame label positions, or match the first col. name with the file name being read, or when creating the label file, sort the images names by taking the base name, not the hardcoded path with forw./back. slashes.\r\n\r\n**To Reproduce**\r\nCreate two labeled frames in linux and two in windows. The label positions will be wrong. \r\n\r\n**Fix for unsorted rows in the CollectedData.csv files**\r\nI provide the code I used to change all the paths in the first column of the collectedData.csv. Then it \r\n\r\nThis sorts the rows without changing the names in the first column:\r\n```\r\n\r\nimport pandas as pd\r\nfrom glob import glob\r\nimport numpy as np\r\nfrom pathlib import Path\r\n\r\npath_root = \"D:/projects/Ataxia/FingerTapping-Adonay-2020-01-29/labeled-data/\"\r\n\r\npath_labels = glob(path_root + '*Finger_Tapping')\r\ncsv_first_cols = ['scorer', 'bodyparts', 'coords']\r\nnfirst =  len(csv_first_cols)\r\n\r\nREMOVE_FIRST = True # case repeated remove the first entry, sorted: '/', '\\'\r\n\r\nfor p in path_labels:\r\n\r\n    path_csv = glob(p + '/CollectedData_*.csv')\r\n    for c in path_csv:\r\n        df = pd.read_csv(c,index_col=None,header=None)\r\n        \r\n        # make sure right file/order columns\r\n        for i, n in enumerate(csv_first_cols):\r\n            assert(df.iloc[i,0] == n)  \r\n        \r\n        frames_names = df.iloc[3:,0].to_list()\r\n                    \r\n        f = [Path(f).name for f in frames_names]\r\n        \r\n        ix_sort = np.argsort(f)\r\n        \r\n        # Remove repeated frame entries (one created when getting frames, \r\n        # other when getting frames for relabeling)\r\n        assert(len(f) == len(set(f)))\r\n        if not len(f) == len(set(f)):\r\n            print('Fixing folder: ', c[len(path_root):])\r\n            rep_ix = []\r\n            for rep in set([x for x in f if f.count(x) > 1]):  \r\n                print ('Found repeted labeled frame image:', rep)\r\n                rep_ix.append([ i for i, x in enumerate(f) if x == rep])\r\n            \r\n            ix_out = np.vstack([i[:-1] if REMOVE_FIRST \r\n                                else i[1:] for i in rep_ix])           \r\n            ix_sort = ix_sort[np.all(ix_sort != ix_out, axis=0)]\r\n        \r\n        if not np.all(ix_sort == np.arange(len(f))):\r\n            print('Sorting entries from: \\n\\t', c[len(path_root):])\r\n            \r\n            ix_sort += nfirst\r\n            ix_sort = np.append(np.arange(nfirst), ix_sort)\r\n \r\n            df = df.reindex(ix_sort)\r\n            df.to_csv(c,index=None, header=None, sep=\",\")\r\n\r\n```\r\n\r\nThis changes the names in the first row of the CollectedData.csv using the current system slash type:\r\n\r\n```\r\nimport pandas as pd\r\nfrom glob import glob\r\nfrom pathlib import Path\r\n\r\npath_root = \"D:/projects/Ataxia/FingerTapping-Adonay-2020-01-29/labeled-data/\"\r\n\r\npath_labels = glob(path_root + '*Finger_Tapping')\r\ncsv_first_cols = ['scorer', 'bodyparts', 'coords']\r\nnfirst =  len(csv_first_cols)\r\n\r\nREMOVE_FIRST = True # case repeated remove the first entry, sorted: '/', '\\'\r\n\r\nfor p in path_labels:\r\n    print(p)\r\n    path_csv = glob(p + '/CollectedData_*.csv')\r\n    for c in path_csv:\r\n        df = pd.read_csv(c,index_col=None,header=None)\r\n        for i, cv in enumerate(df.iloc[:, 0]):\r\n            df.iloc[i, 0] = Path(cv)\r\n\r\n        df.to_csv(c,index=None, header=None, sep=\",\")\r\n\r\n\r\ncfg = 'path/config.yaml'\r\n```\r\nThen:\r\n```\r\ndp.convertcsv2h5(cfg)\r\n```\r\n","closed_by":{"login":"MMathisLab","id":28102185,"node_id":"MDQ6VXNlcjI4MTAyMTg1","avatar_url":"https://avatars.githubusercontent.com/u/28102185?v=4","gravatar_id":"","url":"https://api.github.com/users/MMathisLab","html_url":"https://github.com/MMathisLab","followers_url":"https://api.github.com/users/MMathisLab/followers","following_url":"https://api.github.com/users/MMathisLab/following{/other_user}","gists_url":"https://api.github.com/users/MMathisLab/gists{/gist_id}","starred_url":"https://api.github.com/users/MMathisLab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MMathisLab/subscriptions","organizations_url":"https://api.github.com/users/MMathisLab/orgs","repos_url":"https://api.github.com/users/MMathisLab/repos","events_url":"https://api.github.com/users/MMathisLab/events{/privacy}","received_events_url":"https://api.github.com/users/MMathisLab/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/581/timeline","performed_via_github_app":null,"state_reason":"completed"}