{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1877","repository_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut","labels_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1877/labels{/name}","comments_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1877/comments","events_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1877/events","html_url":"https://github.com/DeepLabCut/DeepLabCut/issues/1877","id":1268773639,"node_id":"I_kwDOB5BM6c5Ln_MH","number":1877,"title":"Segfault during Kmeans for frame selection ","user":{"login":"grahamfindlay","id":4753005,"node_id":"MDQ6VXNlcjQ3NTMwMDU=","avatar_url":"https://avatars.githubusercontent.com/u/4753005?v=4","gravatar_id":"","url":"https://api.github.com/users/grahamfindlay","html_url":"https://github.com/grahamfindlay","followers_url":"https://api.github.com/users/grahamfindlay/followers","following_url":"https://api.github.com/users/grahamfindlay/following{/other_user}","gists_url":"https://api.github.com/users/grahamfindlay/gists{/gist_id}","starred_url":"https://api.github.com/users/grahamfindlay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grahamfindlay/subscriptions","organizations_url":"https://api.github.com/users/grahamfindlay/orgs","repos_url":"https://api.github.com/users/grahamfindlay/repos","events_url":"https://api.github.com/users/grahamfindlay/events{/privacy}","received_events_url":"https://api.github.com/users/grahamfindlay/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"jeylau","id":30733203,"node_id":"MDQ6VXNlcjMwNzMzMjAz","avatar_url":"https://avatars.githubusercontent.com/u/30733203?v=4","gravatar_id":"","url":"https://api.github.com/users/jeylau","html_url":"https://github.com/jeylau","followers_url":"https://api.github.com/users/jeylau/followers","following_url":"https://api.github.com/users/jeylau/following{/other_user}","gists_url":"https://api.github.com/users/jeylau/gists{/gist_id}","starred_url":"https://api.github.com/users/jeylau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeylau/subscriptions","organizations_url":"https://api.github.com/users/jeylau/orgs","repos_url":"https://api.github.com/users/jeylau/repos","events_url":"https://api.github.com/users/jeylau/events{/privacy}","received_events_url":"https://api.github.com/users/jeylau/received_events","type":"User","site_admin":false},"assignees":[{"login":"jeylau","id":30733203,"node_id":"MDQ6VXNlcjMwNzMzMjAz","avatar_url":"https://avatars.githubusercontent.com/u/30733203?v=4","gravatar_id":"","url":"https://api.github.com/users/jeylau","html_url":"https://github.com/jeylau","followers_url":"https://api.github.com/users/jeylau/followers","following_url":"https://api.github.com/users/jeylau/following{/other_user}","gists_url":"https://api.github.com/users/jeylau/gists{/gist_id}","starred_url":"https://api.github.com/users/jeylau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeylau/subscriptions","organizations_url":"https://api.github.com/users/jeylau/orgs","repos_url":"https://api.github.com/users/jeylau/repos","events_url":"https://api.github.com/users/jeylau/events{/privacy}","received_events_url":"https://api.github.com/users/jeylau/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2022-06-13T01:26:55Z","updated_at":"2022-07-20T13:07:08Z","closed_at":"2022-07-20T13:07:07Z","author_association":"NONE","active_lock_reason":null,"body":"### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Bug description\n\nSimilar issues #1651 and #1809 exist, but the proposed solutions fail in my case. \r\n\r\nHere's what I did:\r\n1. When using the latest version of conda to create an environment using the `DEEPLABCUT.yaml` file provided, `wxpython` failed to build. Full stdout and stderr here: [conda_create_out.txt](https://github.com/DeepLabCut/DeepLabCut/files/8887086/conda_create_out.txt)\r\n2. Following `setup.py`, I added  `wxpython<4.1` as a conda-supplied dependency to [DEEPLABCUT2.yaml](https://github.com/DeepLabCut/DeepLabCut/files/8887097/DEEPLABCUT2.txt). This solves the problem of `wxpython` not building. \r\n3. I get the OpenBLAS segfault during frame extraction, as reported by #1651 and #1809. The solution in #1651 was just to use the supplied environment file, which I am already doing. The solution in #1809 was to install scipy and scikit-learn with conda instead of pip. \r\n4. Following #1809, I added `scipy` and `scikit-learn` to [DEEPLABCUT3.txt](https://github.com/DeepLabCut/DeepLabCut/files/8887104/DEEPLABCUT3.txt). I hoped this would work, since I know that `conda-forge` often builds with different compiler options that better support CPUs with large numbers of cores. Full output from env creation [here](https://github.com/DeepLabCut/DeepLabCut/files/8887109/conda_create_out_3.txt). Sadly, I continued to get the same error, though now with a mangled stack trace and a SIGSEGV:\r\n    ```\r\n    Kmeans clustering ... (this might take a while)\r\n    ...\r\n    BLAS : Program is Terminated. Because you tried to allocate too many memory regions.\r\n    *** Received signal 11 ***\r\n    *** BEGIN MANGLED STACK TRACE ***\r\n    Segmentation fault (core dumped)\r\n    ```\r\n    Output from  `python -m threadpoolctl --import sklearn` (also attached below, in the \"Device type\" section):\r\n    ```\r\n    [\r\n      {\r\n        \"user_api\": \"blas\",\r\n        \"internal_api\": \"openblas\",\r\n        \"prefix\": \"libopenblas\",\r\n        \"filepath\": \"/home/gfindlay/miniconda3/envs/datoviz/lib/python3.8/site-packages/numpy.libs/libopenblas64_p-r0-2f7c42d4.3.18.so\",\r\n        \"version\": \"0.3.18\",\r\n        \"threading_layer\": \"pthreads\",\r\n        \"architecture\": \"SkylakeX\",\r\n        \"num_threads\": 64\r\n      },\r\n      {\r\n        \"user_api\": \"blas\",\r\n        \"internal_api\": \"openblas\",\r\n        \"prefix\": \"libopenblas\",\r\n        \"filepath\": \"/home/gfindlay/.local/lib/python3.8/site-packages/scipy.libs/libopenblasp-r0-8b9e111f.3.17.so\",\r\n        \"version\": \"0.3.17\",\r\n        \"threading_layer\": \"pthreads\",\r\n        \"architecture\": \"SkylakeX\",\r\n        \"num_threads\": 64\r\n      },\r\n      {\r\n        \"user_api\": \"openmp\",\r\n        \"internal_api\": \"openmp\",\r\n        \"prefix\": \"libgomp\",\r\n        \"filepath\": \"/Volumes/scratch/neuropixels/t2_shared_envs/dlc_shared_t2/lib/libgomp.so.1.0.0\",\r\n        \"version\": null,\r\n        \"num_threads\": 224\r\n      }\r\n    ]\r\n    ```\r\n    Note that the OpenMP `num_threads` is 224. \r\n5. #1809 referenced [this](https://github.com/scikit-learn/scikit-learn/issues/20539) scikit-learn issue, which further references [this](https://github.com/xianyi/OpenBLAS/issues/3321) OpenBLAS issue. See in particular [this](https://github.com/xianyi/OpenBLAS/issues/3321#issuecomment-885433142) comment. Since the `MiniBatchKMeans` that DLC uses does not offer an `n_jobs` kwargs like `DBSCAN` or `KNN` do, I set my `OPENBLAS_NUM_THREADS` and `OMP_NUM_THREADS` environment variables to 64. Didn't fix anything. In fact, `htop` sugggested that these variables were being ignored. I wondered if they might influence builds and not just runtime behavior (similar to `MAX_THREADS`), so I recreated the env. No luck. Perhaps importantly, there is no change to the output of `python -m threadpoolctl --import sklearn`. \r\n6. I took the extreme route and set `OPENBLAS_NUM_THREADS` and `OMP_NUM_THREADS` to 1. No luck. Again, no change to the output of `python -m threadpoolctl --import sklearn`. This makes me really wonder if the `OMP_NUM_THREADS` environment variable is being ignored. Maybe `omp_set_num_threads()` is overriding `OMP_NUM_THREADS`? I know this is possible, but usually is only done to _decrease_ the number of threads... I don't know of any other way to control OpenMP threading behavior. \r\n\r\nUnfortunately we have tried a containerized install as well, but cannot get the GUI to work on our remote servers using either rootless or rooted Docker. We are not yet clear on whether this is an issue with how the DLC container handles graphical displays or how Docker per se handles remote displays. Quite possibly the latter. Perhaps related to #1623. We will probably just give up and use local workstations for the GUI, and hope to at least get a containerized headless install working so we can train on the server GPU. \r\n\r\nSorry I can't be more helpful! And sorry that this really is probably not an issue with DLC per se, but it seems to be affecting users, so I thought you might like more info. Thanks for DLC :\n\n### Operating System\n\nUbunutu 20.04.4 LTS\n\n### DeepLabCut version\n\n2.2.1\n\n### DeepLabCut mode\n\nsingle animal\n\n### Device type\n\nI have an NVidia Tesla V100 32GB GPU, but I am attempting a conda-based CPU-only install on a 224-core Intel Xeon Platinum 8276M (Skylake, x86_64). For detailed info, see `lscpu` output [here](https://github.com/DeepLabCut/DeepLabCut/files/8887072/lscpu_out.txt).\r\n \r\nAs expected, `nproc` reports 224, `joblib.cpu_count()` reports 224, and `joblib.cpu_count(only_physical_cores=True)` reports 112. \r\n\r\nHere's the output of `python -m threadpoolctl --import sklearn`, which I suspect is highly relevant:\r\n[threadpoolctl_out.txt](https://github.com/DeepLabCut/DeepLabCut/files/8887127/threadpoolctl_out.txt)\n\n### Steps To Reproduce\n\nSee above. \n\n### Relevant log output\n\n_No response_\n\n### Anything else?\n\n_No response_\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/DeepLabCut/DeepLabCut/blob/master/CODE_OF_CONDUCT.md)","closed_by":{"login":"jeylau","id":30733203,"node_id":"MDQ6VXNlcjMwNzMzMjAz","avatar_url":"https://avatars.githubusercontent.com/u/30733203?v=4","gravatar_id":"","url":"https://api.github.com/users/jeylau","html_url":"https://github.com/jeylau","followers_url":"https://api.github.com/users/jeylau/followers","following_url":"https://api.github.com/users/jeylau/following{/other_user}","gists_url":"https://api.github.com/users/jeylau/gists{/gist_id}","starred_url":"https://api.github.com/users/jeylau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeylau/subscriptions","organizations_url":"https://api.github.com/users/jeylau/orgs","repos_url":"https://api.github.com/users/jeylau/repos","events_url":"https://api.github.com/users/jeylau/events{/privacy}","received_events_url":"https://api.github.com/users/jeylau/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1877/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/DeepLabCut/DeepLabCut/issues/1877/timeline","performed_via_github_app":null,"state_reason":"completed"}