{"url":"https://api.github.com/repos/WenjieZ/TSCV/issues/10","repository_url":"https://api.github.com/repos/WenjieZ/TSCV","labels_url":"https://api.github.com/repos/WenjieZ/TSCV/issues/10/labels{/name}","comments_url":"https://api.github.com/repos/WenjieZ/TSCV/issues/10/comments","events_url":"https://api.github.com/repos/WenjieZ/TSCV/issues/10/events","html_url":"https://github.com/WenjieZ/TSCV/issues/10","id":577439913,"node_id":"MDU6SXNzdWU1Nzc0Mzk5MTM=","number":10,"title":"[Docs] Use this package for Nested Cross-Validation","user":{"login":"WenjieZ","id":6860682,"node_id":"MDQ6VXNlcjY4NjA2ODI=","avatar_url":"https://avatars.githubusercontent.com/u/6860682?v=4","gravatar_id":"","url":"https://api.github.com/users/WenjieZ","html_url":"https://github.com/WenjieZ","followers_url":"https://api.github.com/users/WenjieZ/followers","following_url":"https://api.github.com/users/WenjieZ/following{/other_user}","gists_url":"https://api.github.com/users/WenjieZ/gists{/gist_id}","starred_url":"https://api.github.com/users/WenjieZ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WenjieZ/subscriptions","organizations_url":"https://api.github.com/users/WenjieZ/orgs","repos_url":"https://api.github.com/users/WenjieZ/repos","events_url":"https://api.github.com/users/WenjieZ/events{/privacy}","received_events_url":"https://api.github.com/users/WenjieZ/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"WenjieZ","id":6860682,"node_id":"MDQ6VXNlcjY4NjA2ODI=","avatar_url":"https://avatars.githubusercontent.com/u/6860682?v=4","gravatar_id":"","url":"https://api.github.com/users/WenjieZ","html_url":"https://github.com/WenjieZ","followers_url":"https://api.github.com/users/WenjieZ/followers","following_url":"https://api.github.com/users/WenjieZ/following{/other_user}","gists_url":"https://api.github.com/users/WenjieZ/gists{/gist_id}","starred_url":"https://api.github.com/users/WenjieZ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WenjieZ/subscriptions","organizations_url":"https://api.github.com/users/WenjieZ/orgs","repos_url":"https://api.github.com/users/WenjieZ/repos","events_url":"https://api.github.com/users/WenjieZ/events{/privacy}","received_events_url":"https://api.github.com/users/WenjieZ/received_events","type":"User","site_admin":false},"assignees":[{"login":"WenjieZ","id":6860682,"node_id":"MDQ6VXNlcjY4NjA2ODI=","avatar_url":"https://avatars.githubusercontent.com/u/6860682?v=4","gravatar_id":"","url":"https://api.github.com/users/WenjieZ","html_url":"https://github.com/WenjieZ","followers_url":"https://api.github.com/users/WenjieZ/followers","following_url":"https://api.github.com/users/WenjieZ/following{/other_user}","gists_url":"https://api.github.com/users/WenjieZ/gists{/gist_id}","starred_url":"https://api.github.com/users/WenjieZ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WenjieZ/subscriptions","organizations_url":"https://api.github.com/users/WenjieZ/orgs","repos_url":"https://api.github.com/users/WenjieZ/repos","events_url":"https://api.github.com/users/WenjieZ/events{/privacy}","received_events_url":"https://api.github.com/users/WenjieZ/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-03-08T03:46:38Z","updated_at":"2021-03-16T04:30:26Z","closed_at":"2021-03-16T04:30:26Z","author_association":"OWNER","active_lock_reason":null,"body":"This issue documents the way to use this package for Nested Cross-Validation. If you have any question, welcome to comment below.\r\n\r\n## Flat cross-validation vs. nested cross-validation\r\nTo clarify the meaning of these two terms in this specific issue, let me first describe them.\r\n\r\n### Flat cross-validation\r\nLet us use 5-Fold as an example. In a 5-Fold flat cross-validation, you split the dataset into 5 subsets. Each time, you train a model from 4 of them and test it on the remaining one. Afterwards, you average the 5 scores yielded from the 5 test subsets.\r\n\r\n```\r\nooooo: training subset\r\n*****: test subset\r\n\r\nooooo ooooo ooooo ooooo *****\r\nooooo ooooo ooooo ***** ooooo\r\nooooo ooooo ***** ooooo ooooo\r\nooooo ***** ooooo ooooo ooooo\r\n***** ooooo ooooo ooooo ooooo\r\n```\r\n\r\nReasonably, the model you trained depends on *both* the algorithm you use and the hyperparameter you input. Therefore, the averaged score provides a criterion to evaluate *both* the algorithms and hyperparameters. I will later explain whether these evaluations are accurate enough, but for now it suffices to understand the basic procedure.\r\n\r\n### Nested cross-validation\r\nIn contrast to flat cross-validation, which evaluates both the algorithms and the hyperparameters in one fell swoop, nested cross-validation evaluates them in a hierarchical fashion. In the upper-level, it evaluates the algorithms; in the lower-level, it evaluates the hyperparameter within each algorihtm.\r\n\r\nLet us still use the 5-Fold setup. First we, likewise, split the dataset into 5 subsets. Let us call it the **macro** split, which allows us to run each same experiment 5 times. In each run, we further split the training set into 5 sub-subsets. Let us call it the **micro** split. If the whole dataset has 25 samples, then the macro split sets 20 samples for training and 5 samples for testing in each run, and the micro split further splits the 20 training samples and sets 16 for training and 4 for testing.\r\n\r\n```\r\nMacro split:\r\n\r\n12345 12345 12345 12345 *****   =>  further split to micro split -- No. 1\r\n12345 12345 12345 ***** 12345   =>  further split to micro split -- No. 2\r\n12345 12345 ***** 12345 12345   =>  further split to micro split -- No. 3\r\n12345 ***** 12345 12345 12345   =>  further split to micro split -- No. 4\r\n***** 12345 12345 12345 12345   =>  further split to micro split -- No. 5\r\n\r\n(Indicative) micro split -- No. 1 (5 in total):\r\n\r\n1111 2222 3333 4444 xxxx\r\n1111 2222 3333 xxxx 5555\r\n1111 2222 xxxx 4444 5555\r\n1111 xxxx 3333 4444 5555\r\nxxxx 2222 3333 4444 5555\r\n```\r\n\r\nIn the upper-level macro split, we choose a target algorithm and dive into the lower-level micro split. With the target algorithm fixed, we vary the hyperparameters to get the evaluation for each hyperparameter and choose the optimal one. Then, we return to the upper level by fixing the hyperparameter as the optimal one and evaluate the target algorithm. Then, we choose another target algorithm and repeat the same procedure.\r\n\r\nLet us call it 5x5 nested cross-validation. Of course, you can use, in general, a `m`x`n` nested cross-validation. The essence is to separate the evaluation of the algorithm from the evaluation of the hyperparameter.\r\n\r\n## Use nested cross-validation for time series.\r\nIn time series cross-validation, you need to introduce *gaps*, which makes the problem tricky. Luckily, we have an easy walk around. That is, the 2xn nested cross-validation is free:\r\n\r\n```\r\n2x4 nested cross-validation\r\n---------------------------------\r\n\r\nMacro split:\r\n\r\nooooo ooooo ooooo ooooo gap *****\r\n***** gap ooooo ooooo ooooo ooooo\r\n\r\nMicro split -- No. 1 (2 in total):\r\n\r\noooo oooo oooo gap ****\r\nooo ooo gap **** gap ooo\r\nooo gap **** gap ooo ooo\r\n**** gap oooo oooo oooo\r\n```\r\n\r\nYou can use my package `tscv` for this kind of 2xn nested cross-validation.\r\n\r\n## Why nested cross-validation?\r\nThe reason is that the algorithms with more hyperparameters have an edge in flat cross-validation. The dimension of the hyperparameters can be seen as the capacity of \"bribery\" of the algorithm. The more hyperparameters the algorithm owns, the more severely the algorithm compromise the test dataset. Flat cross-validation, by nature, favours those algorithms with rich hyperparameters. In contrast, nested cross-validation puts every algorithm on the same starting line. That is why nested cross-validation is preferred when comparing algorithms with significantly different dimensions of hyperparameters.\r\n\r\nThen, does the nested cross-validation provides an accurate way to evaluate the final chosen model? No, though it help you to pick the best algorithm and its hyperparameter, the resulted model's performance is not under measurement. To explain it, we need some advanced statistics knowledge. To avoid bloating this issue, I will only mention here that `model(x*)` is different from `model(x)|x=x*`. The good news, however, is that if your algorithm does not have too many hyperparameters, the cross-validation error will not be too far away from the resulted model's error. Therefore, an algorithm with better performance in nested cross-validation likely leads to a model with better performance in terms of generation error.","closed_by":{"login":"WenjieZ","id":6860682,"node_id":"MDQ6VXNlcjY4NjA2ODI=","avatar_url":"https://avatars.githubusercontent.com/u/6860682?v=4","gravatar_id":"","url":"https://api.github.com/users/WenjieZ","html_url":"https://github.com/WenjieZ","followers_url":"https://api.github.com/users/WenjieZ/followers","following_url":"https://api.github.com/users/WenjieZ/following{/other_user}","gists_url":"https://api.github.com/users/WenjieZ/gists{/gist_id}","starred_url":"https://api.github.com/users/WenjieZ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WenjieZ/subscriptions","organizations_url":"https://api.github.com/users/WenjieZ/orgs","repos_url":"https://api.github.com/users/WenjieZ/repos","events_url":"https://api.github.com/users/WenjieZ/events{/privacy}","received_events_url":"https://api.github.com/users/WenjieZ/received_events","type":"User","site_admin":false},"reactions":{"url":"https://api.github.com/repos/WenjieZ/TSCV/issues/10/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/WenjieZ/TSCV/issues/10/timeline","performed_via_github_app":null,"state_reason":"completed"}